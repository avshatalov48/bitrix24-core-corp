BX.namespace("Tasks.Component");(function(){if(typeof BX.Tasks.Component.TasksWidgetButtonsTask!="undefined"){return}BX.Tasks.Component.TasksWidgetButtonsTask=BX.Tasks.Util.Widget.extend({sys:{code:"task-view-b"},options:{goToListOnDelete:true},methods:{construct:function(){this.callConstruct(BX.Tasks.Util.Widget);this.vars.data=this.option("data")||{};this.vars.can=this.option("can")||{};this.vars.publicMode=this.option("publicMode")||false;this.vars.overtime=null;this.vars.buttonActionEnabled=true;this.vars.delegateReload=true;this.vars.time=0;if(this.vars.data.TIME_ELAPSED){this.vars.time=parseInt(this.vars.data.TIME_ELAPSED)}this.bindEvents();this.getDayPlan()},bindEvents:function(){this.bindDelegateControl("open-menu","click",this.passCtx(this.onMenuOpen));this.bindDelegateControl("button","click",this.passCtx(this.onButtonPressed))},onMenuOpen:function(t){if(!this.vars.buttonActionEnabled){return}BX.PopupMenu.show(this.code(),t,this.getTaskMenu(),{closeByEsc:true})},onButtonPressed:function(t){if(!this.vars.buttonActionEnabled){return}var e=BX.data(t,"action");if(BX.type.isNotEmptyString(e)){this.doDynamicAction(e)}},getDayPlan:function(){if(!this.instances.dayplan){var t=BX.clone(this.option("data"));var e=this.option("taskId");t.ID=e;var s={};s[e]=t;this.instances.dayplan=new BX.Tasks.DayPlan({registerDispatcher:true,id:"buttons-dayplan",data:s});this.instances.dayplan.bindEvent("other-task-on-timer",BX.delegate(this.showTimerConfirm,this));this.instances.dayplan.bindEvent("task-timer-toggle",BX.delegate(this.onTaskTimerToggled,this));this.instances.dayplan.bindEvent("task-plan-toggle",BX.delegate(this.onTaskPlanToggled,this));this.instances.dayplan.bindEvent("task-timer-tick",BX.delegate(this.onTaskTimerTick,this))}return this.instances.dayplan},showUserSelector:function(){if(!this.userSelector){this.userSelector=new BX.UI.EntitySelector.Dialog({targetNode:this.control("open-menu"),enableSearch:true,multiple:false,context:"TASKS_MEMBER_SELECTOR_EDIT_responsible",entities:[{id:"user",options:{emailUsers:true}}],events:{"Item:onSelect":function(t){var e=t.getData().item;this.doDynamicAction("DELEGATE",{userId:e.getId()})}.bind(this)}})}this.userSelector.show()},doMenuAction:function(t,e,s){var i=s.code;if(i){if(i==="COPY"){window.location=this.option("copyUrl")}else if(i==="CREATE_SUBTASK"){BX.SidePanel.Instance.open(this.option("createSubtaskUrl"))}else if(i==="DELEGATE"){if(this.option("taskLimitExceeded")){BX.UI.InfoHelper.show("limit_tasks_delegating",{isLimit:true,limitAnalyticsLabels:{module:"tasks",source:"taskView"}});return}this.showUserSelector()}else if(i==="REST"){BX.SidePanel.Instance.open(s.callbackData.serviceUrl,s.callbackData.opt||{})}else{this.doDynamicAction(i)}}t.popupWindow.close()},doDynamicAction:function(t,e){e=e||{};this.togglePanelActivity(false);if(t=="START_TIMER"||t=="PAUSE_TIMER"){this.getDayPlan()[t=="START_TIMER"?"startTimer":"stopTimer"](this.option("taskId"),true,e.force||false)}else if(t=="DAYPLAN.ADD"){this.getDayPlan().addToPlan(this.option("taskId"));this.reFetchTaskData(t)}else if(t=="DELETE"){window.top.BX.UI.Notification.Center.notify({content:BX.message("TASKS_DELETE_SUCCESS")});this.doDynamicTaskAction(t,e)}else if(t==="COMPLETE"||t==="RENEW"){var s=new BX.Promise;var i=null;var a=false;if(this.option("isScrumTask")){top.BX.loadExt("tasks.scrum.task-status").then(function(){if(!BX.type.isUndefined(top.BX.Tasks.Scrum)&&!BX.type.isUndefined(top.BX.Tasks.Scrum.TaskStatus)){i=new top.BX.Tasks.Scrum.TaskStatus({groupId:this.option("groupId"),parentTaskId:this.option("parentId"),taskId:this.option("taskId"),action:t==="COMPLETE"?"complete":"renew",performActionOnParentTask:true});i.isParentScrumTask(this.option("parentId")).then(function(e){a=e;if(a){s.fulfill()}else{if(t==="COMPLETE"){i.showDod(this.option("taskId")).then(function(){s.fulfill()}.bind(this)).catch(function(){s.reject()}.bind(this))}else{s.fulfill()}}}.bind(this))}else{s.fulfill()}}.bind(this))}else{s.fulfill()}s.then(function(){this.doDynamicTaskAction(t,e).then(function(){if(i&&a){i.update()}}.bind(this))}.bind(this))}else{this.doDynamicTaskAction(t,e)}this.togglePanelActivity(true)},doDynamicTaskAction:function(t,e){var s=this.option("taskId");var i=this;var a=t.toLowerCase();e=e||{};e["id"]=s;return BX.ajax.runComponentAction("bitrix:tasks.task",a,{mode:"class",data:{taskId:s,parameters:e}}).then(function(e){if(a==="delete"){BX.Tasks.Util.fireGlobalTaskEvent("DELETE",{ID:s});if(this.option("goToListOnDelete")){window.location=this.option("listUrl")}}else{this.reFetchTaskData(t)}return true}.bind(this)).catch(function(t){if(t.errors){if(a==="delegate"){i.vars.delegateReload=false}BX.Tasks.alert(t.errors);this.togglePanelActivity(true)}}.bind(this))},reFetchTaskData:function(t){if(t!=="DELETE"&&t!=="DAYPLAN.ADD"){var e=this.option("taskId");var s=this;BX.ajax.runComponentAction("bitrix:tasks.task","get",{mode:"class",data:{taskId:e,parameters:{ENTITY_SELECT:["DAYPLAN"]}}}).then(function(i){if(t==="DELEGATE"&&s.vars.delegateReload){window.location.reload()}else if(t==="DEFER"){this.getDayPlan().stopTimer(e,false)}this.updateTaskData(i.data.DATA);this.updatePlanner();this.togglePanelActivity(true)}.bind(this)).catch(function(t){if(t.errors){BX.Tasks.alert(t.errors);this.togglePanelActivity(true)}}.bind(this))}else{if(t==="DAYPLAN.ADD"){this.updateTaskData({ACTION:{"DAYPLAN.ADD":false}})}this.togglePanelActivity(true)}},updateTaskData:function(t){BX.PopupMenu.destroy(this.code());if(t.ACTION){BX.mergeEx(this.vars.can,t.ACTION)}BX.mergeEx(this.vars.data,t);this.updateButtons();var e=BX.clone(this.vars.data);e.ID=this.option("taskId");BX.Tasks.Util.fireGlobalTaskEvent("UPDATE",e,{STAY_AT_PAGE:true})},updateButtons:function(){var t=this.vars.can;var e=this.vars.data;if(e.STATUS==4){t.COMPLETE=false}var s={"timer-start":t["DAYPLAN.TIMER.TOGGLE"]&&!e.TIMER_IS_RUNNING_FOR_CURRENT_USER,"timer-pause":t["DAYPLAN.TIMER.TOGGLE"]&&e.TIMER_IS_RUNNING_FOR_CURRENT_USER,"timer-running":e.TIMER_IS_RUNNING_FOR_CURRENT_USER,"timer-visible":t["DAYPLAN.TIMER.TOGGLE"],pause:!t["DAYPLAN.TIMER.TOGGLE"]&&t.PAUSE,start:!t["DAYPLAN.TIMER.TOGGLE"]&&t.START,complete:t.COMPLETE,approve:t.APPROVE,disapprove:t.DISAPPROVE,edit:t.EDIT&&!this.vars.publicMode,"more-button":!this.vars.publicMode||t.RENEW};this.toggleCSSMap(s)},onTaskTimerTick:function(t,e,s){if(t!=this.option("taskId")){return}if(this.vars.overtime==null){var i=parseInt(this.vars.data.TIME_ESTIMATE);if(!isNaN(i)&&i&&e>i){this.vars.overtime=true;this.changeCSSFlag("timer-overtime",this.vars.overtime)}}this.control("time-elapsed").innerHTML=BX.Tasks.Util.formatTimeAmount(e)},onTaskTimerToggled:function(t,e,s){if(t!=this.option("taskId")){return}this.addToData(s);this.reFetchTaskData("START_TIMER");this.updateButtons()},onTaskPlanToggled:function(t,e){if(t!=this.option("taskId")){return}this.updateTaskData({ACTION:{"DAYPLAN.ADD":true}})},showTimerConfirm:function(t,e){if(t!=this.option("taskId")){return}e=e||{};var s=BX.message("TASKS_TASK_CONFIRM_START_TIMER");s=s.replace("{{TITLE}}",BX.type.isNotEmptyString(e.title)?BX.util.htmlspecialchars(e.title):BX.message("TASKS_UNKNOWN"));BX.Tasks.confirm(s,BX.delegate((function(t){if(t){this.doDynamicAction("START_TIMER",{force:true})}}),this),{title:BX.message("TASKS_TASK_CONFIRM_START_TIMER_TITLE")})},togglePanelActivity:function(t){this.changeCSSFlag("inactive",!t);this.vars.buttonActionEnabled=t},getTaskMenu:function(){var t=[];var e=this.vars.can;if(this.vars.publicMode){if(e.RENEW){t.push({code:"RENEW",text:BX.message("TASKS_RENEW_TASK"),title:BX.message("TASKS_RENEW_TASK"),className:"menu-popup-item-reopen",onclick:this.passCtx(this.doMenuAction)})}return t}t.push({code:"COPY",text:BX.message("TASKS_COPY_TASK"),title:BX.message("TASKS_COPY_TASK_EX"),className:"menu-popup-item-copy",onclick:this.passCtx(this.doMenuAction)},{code:"CREATE_SUBTASK",text:BX.message("TASKS_ADD_SUBTASK"),title:BX.message("TASKS_ADD_SUBTASK"),className:"menu-popup-item-create",onclick:this.passCtx(this.doMenuAction)});if(e["DAYPLAN.ADD"]){t.push({code:"DAYPLAN.ADD",text:BX.message("TASKS_ADD_TASK_TO_TIMEMAN"),title:BX.message("TASKS_ADD_TASK_TO_TIMEMAN_EX"),className:"menu-popup-item-add-to-tm",onclick:this.passCtx(this.doMenuAction)})}if(e.DELEGATE){t.push({code:"DELEGATE",text:BX.message("TASKS_DELEGATE_TASK"),title:BX.message("TASKS_DELEGATE_TASK"),className:"menu-popup-item-delegate"+(this.option("taskLimitExceeded")?" tasks-tariff-lock":""),onclick:this.passCtx(this.doMenuAction)})}if(e.DEFER){t.push({code:"DEFER",text:BX.message("TASKS_DEFER_TASK"),title:BX.message("TASKS_DEFER_TASK"),className:"menu-popup-item-hold",onclick:this.passCtx(this.doMenuAction)})}if(e.RENEW){t.push({code:"RENEW",text:BX.message("TASKS_RENEW_TASK"),title:BX.message("TASKS_RENEW_TASK"),className:"menu-popup-item-reopen",onclick:this.passCtx(this.doMenuAction)})}if(e.REMOVE){t.push({code:"DELETE",text:BX.message("TASKS_DELETE_TASK"),title:BX.message("TASKS_DELETE_TASK"),className:"menu-popup-item-delete",onclick:this.passCtx(this.doMenuAction)})}var s=this.option("additional_tabs");if(s.length>0){var i=[];for(var a=0;a<s.length;a++){var n=s[a];var o={};if(n.LOADER&&n.LOADER.componentData){o={options:{requestMethod:"POST",requestParams:n.LOADER.componentData.params}}}i.push({code:"REST",text:n.NAME,title:n.NAME,callbackData:n.ONCLICK,onclick:n.ONCLICK})}t.push({code:"",text:BX.message("TASKS_REST_BUTTON_TITLE_2"),title:BX.message("TASKS_REST_BUTTON_TITLE_2"),className:"menu-popup-item-",items:i})}return t},addToData:function(t){this.vars.overtime=null;BX.mergeEx(this.vars.data,t||{})},updatePlanner:function(){this.getDayPlan().updatePlanner()}}})}).call(this);
//# sourceMappingURL=logic.map.js