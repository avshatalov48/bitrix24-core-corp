"use strict";BX.namespace("Tasks.Component");(function(){if(typeof BX.Tasks.Component.TasksWidgetOptionBar!="undefined"){return}BX.Tasks.Component.TasksWidgetOptionBar=BX.Tasks.Component.extend({sys:{code:"wg-optbar"},methods:{bindEvents:function(){this.bindDelegateControl("flag","click",this.passCtx(this.onToggleFlag))},onToggleFlag:function(t){var e=BX.data(t,"target");if(typeof e!="undefined"&&BX.type.isNotEmptyString(e)){var i=this.control(e);var a=BX.data(t,"flag-name");var s=BX.data(t,"yes-value")||"Y";var n=BX.data(t,"no-value")||"N";if(BX.type.isElementNode(i)){i.value=t.checked?s:n}if(a==="TASK_CONTROL"&&i.value==="Y"&&this.option("taskLimitExceeded")){i.value=n;t.checked=false;BX.UI.InfoHelper.show("limit_tasks_control",{isLimit:true,limitAnalyticsLabels:{module:"tasks",source:"taskEdit"}})}this.fireEvent("toggle",[a,i.value==s])}},toggleFlag:function(t,e){},switchOption:function(t,e){t=t.toLowerCase().replace(/_/g,"-");var i=this.control("flag-"+t);if(i){if(e){BX.Tasks.Util.enable(i)}else{BX.Tasks.Util.disable(i);if(this.isOptionChecked(i)){i.checked=false;this.onToggleFlag(i)}}BX.data(this.control("flag-label-"+t),"hint-enabled",!e)}},switchFlag:function(t,e){return this.switchOption(t,e)},isOptionChecked:function(t){return t.checked}}})}).call(this);
//# sourceMappingURL=logic.map.js