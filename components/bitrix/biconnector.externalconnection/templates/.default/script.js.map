{"version":3,"file":"script.js","sources":["script.es6.js"],"sourcesContent":["import { ajax as Ajax, Dom, Event, Loc, Tag, Reflection } from 'main.core';\nimport { BaseEvent } from 'main.core.events';\nimport { Button, ButtonColor, ButtonManager, ButtonState } from 'ui.buttons';\n\ntype SettingField = {\n\tname: string,\n\ttype: string,\n\tcode: string,\n\tplaceholder: string,\n}\n\ntype Props = {\n\tsourceFields: { id: number, title: string, type: string },\n\tfieldsConfig: { [key: string]: SettingField[] },\n\tsupportedDatabases: { code: string; name: string }[],\n}\n\nclass ExternalConnectionForm\n{\n\t#node: HTMLElement;\n\t#props: Props;\n\t#checkConnectButton: Button;\n\t#connectionStatusNode: HTMLElement;\n\n\tconstructor(props: Props)\n\t{\n\t\tthis.#props = props;\n\t\tthis.#initForm();\n\t}\n\n\t#initForm()\n\t{\n\t\tthis.#node = document.querySelector('#connection-form');\n\n\t\tthis.#initHint();\n\t\tconst fieldsNode = Tag.render`\n\t\t\t<div class=\"fields-wrapper\"></div>\n\t\t`;\n\t\tDom.append(fieldsNode, this.#node);\n\t\tthis.#initFields();\n\n\t\tconst buttonBlock = Tag.render`\n\t\t\t<div class=\"db-connection-button-block\">\n\t\t\t\t<div class=\"db-connection-button\"></div>\n\t\t\t\t<div class=\"db-connection-status\"></div>\n\t\t\t</div>\n\t\t`;\n\t\tDom.append(buttonBlock, this.#node);\n\n\t\tthis.#initCheckConnectButton();\n\t\tthis.#initConnectionStatusBlock();\n\t}\n\n\t#initHint()\n\t{\n\t\tconst hint = Tag.render`\n\t\t\t<div class=\"db-connection-hint\">\n\t\t\t\t${Loc.getMessage('EXTERNAL_CONNECTION_HINT', {\n\t\t\t\t\t'[link]': '<a class=\"ui-link\" onclick=\"top.BX.Helper.show(`redirect=detail&code=23508958`)\">',\n\t\t\t\t\t'[/link]': '</a>',\n\t\t\t\t})}\n\t\t\t</div>\n\t\t`;\n\t\tDom.append(hint, this.#node);\n\t}\n\n\t#initFields()\n\t{\n\t\tconst fieldsNode = this.#node.querySelector('.fields-wrapper');\n\t\tconst sourceFields = this.#props.sourceFields ?? {};\n\t\tconst fields = Tag.render`\n\t\t\t<div class=\"form-fields\">\n\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Loc.getMessage('EXTERNAL_CONNECTION_FIELD_TYPE')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ui-ctl ui-ctl-after-icon ui-ctl-dropdown ui-ctl-w100\">\n\t\t\t\t\t\t<div class=\"ui-ctl-after ui-ctl-icon-angle\"></div>\n\t\t\t\t\t\t<select class=\"ui-ctl-element\" data-code=\"type\"></select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Loc.getMessage('EXTERNAL_CONNECTION_FIELD_NAME')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ui-form-content\">\n\t\t\t\t\t\t<div class=\"ui-ctl ui-ctl-textbox ui-ctl-w100\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tclass=\"ui-ctl-element\" \n\t\t\t\t\t\t\t\tplaceholder=\"${Loc.getMessage('EXTERNAL_CONNECTION_FIELD_NAME_PLACEHOLDER')}\" \n\t\t\t\t\t\t\t\tdata-code=\"title\"\n\t\t\t\t\t\t\t\tvalue=\"${sourceFields.title ?? ''}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tDom.append(fields, fieldsNode);\n\n\t\tconst typeSelector = fieldsNode.querySelector('[data-code=\"type\"]');\n\t\tthis.#props.supportedDatabases.forEach((database) => {\n\t\t\tDom.append(\n\t\t\t\tTag.render`\n\t\t\t\t\t<option \n\t\t\t\t\t\tvalue=\"${database.code}\" \n\t\t\t\t\t\t${sourceFields.type === database.code ? 'selected' : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t${database.name}\n\t\t\t\t\t</option>\n\t\t\t\t`,\n\t\t\t\ttypeSelector,\n\t\t\t);\n\t\t});\n\t\tEvent.bind(typeSelector, 'input', this.#onChangeType.bind(this));\n\n\t\tif (sourceFields.id)\n\t\t{\n\t\t\tconst fieldId = Tag.render`\n\t\t\t\t<input hidden value=\"${sourceFields.id}\" data-code=\"id\">\n\t\t\t`;\n\t\t\tDom.append(fieldId, fields);\n\n\t\t\tDom.attr(typeSelector, 'disabled', true);\n\t\t}\n\n\t\tconst fieldConfig = this.#props.fieldsConfig;\n\t\tconst connectionType = sourceFields.type ?? this.#props.supportedDatabases[0].code;\n\t\tfieldConfig[connectionType].forEach((field: SettingField) => {\n\t\t\tlet fieldType = field.type;\n\t\t\tif (field.code === 'password')\n\t\t\t{\n\t\t\t\tfieldType = 'password';\n\t\t\t}\n\t\t\tconst fieldNode = Tag.render`\n\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${field.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ui-form-content\">\n\t\t\t\t\t\t<div class=\"ui-ctl ui-ctl-textbox ui-ctl-w100\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"${fieldType}\" \n\t\t\t\t\t\t\t\tclass=\"ui-ctl-element\" \n\t\t\t\t\t\t\t\tdata-code=\"${field.code}\"\n\t\t\t\t\t\t\t\tplaceholder=\"${field.placeholder}\" \n\t\t\t\t\t\t\t\tvalue=\"${sourceFields[field.code] ?? ''}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\tDom.append(fieldNode, fields);\n\t\t\tEvent.bind(fieldNode, 'input', () => this.#clearConnectionStatus());\n\t\t});\n\t}\n\n\t#onChangeType(event)\n\t{\n\t\tthis.#props.sourceFields.type = event.target.value;\n\t\tDom.clean(this.#node.querySelector('.fields-wrapper'));\n\t\tthis.#initFields();\n\t\tthis.#clearConnectionStatus();\n\t}\n\n\t#initCheckConnectButton()\n\t{\n\t\tconst connectButton = new Button({\n\t\t\ttext: Loc.getMessage('EXTERNAL_CONNECTION_CHECK_BUTTON'),\n\t\t\tcolor: ButtonColor.PRIMARY,\n\t\t\tonclick: (button: Button, event: BaseEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.#onCheckConnectClick()\n\t\t\t\t\t.catch(() => {});\n\t\t\t},\n\t\t\tnoCaps: true,\n\t\t});\n\t\tconnectButton.renderTo(this.#node.querySelector('.db-connection-button'));\n\t\tthis.#checkConnectButton = connectButton;\n\t}\n\n\t#initConnectionStatusBlock()\n\t{\n\t\tthis.#connectionStatusNode = this.#node.querySelector('.db-connection-status');\n\t}\n\n\t#clearConnectionStatus()\n\t{\n\t\tDom.clean(this.#connectionStatusNode);\n\t}\n\n\t#updateConnectionStatus(succedeed: boolean, errorMessage: string)\n\t{\n\t\tDom.clean(this.#connectionStatusNode);\n\t\tlet status = null;\n\t\tif (succedeed)\n\t\t{\n\t\t\tstatus = Tag.render`\n\t\t\t\t<div class=\"db-connection-success\">\n\t\t\t\t\t<div class=\"ui-icon-set --check\" style=\"--ui-icon-set__icon-size: 18px; --ui-icon-set__icon-color: var(--ui-color-palette-green-50);\"></div>\n\t\t\t\t\t${Loc.getMessage('EXTERNAL_CONNECTION_CHECK_SUCCESS')}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstatus = Tag.render`\n\t\t\t\t<div class=\"db-connection-error\">\n\t\t\t\t\t<div class=\"ui-icon-set --warning\" style=\"--ui-icon-set__icon-size: 18px; --ui-icon-set__icon-color: var(--ui-color-palette-red-60);\"></div>\n\t\t\t\t\t${errorMessage.replaceAll(/\\s+/g, ' ')}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t\tDom.append(status, this.#connectionStatusNode);\n\t}\n\n\t#getConnectionValues(): Object\n\t{\n\t\tconst result = {};\n\t\tthis.#node.querySelectorAll('[data-code]').forEach((field) => {\n\t\t\tresult[field.getAttribute('data-code')] = field.value;\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#onCheckConnectClick(): Promise\n\t{\n\t\tthis.#checkConnectButton.setState(ButtonState.WAITING);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runComponentAction('bitrix:biconnector.externalconnection', 'checkConnection', {\n\t\t\t\tmode: 'class',\n\t\t\t\tsignedParameters: this.#props.signedParameters,\n\t\t\t\tdata: {\n\t\t\t\t\tdata: this.#getConnectionValues(),\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.#updateConnectionStatus(true);\n\t\t\t\t\tthis.#checkConnectButton.setState(null);\n\n\t\t\t\t\tresolve(response);\n\t\t\t\t})\n\t\t\t\t.catch((response) => {\n\t\t\t\t\tthis.#updateConnectionStatus(false, response.errors[0].message);\n\t\t\t\t\tthis.#checkConnectButton.setState(null);\n\n\t\t\t\t\treject();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tonClickSave()\n\t{\n\t\tconst saveButton = ButtonManager.createFromNode(document.querySelector('#connection-button-save'));\n\t\tsaveButton.setWaiting(true);\n\t\tconst connectionValues = this.#getConnectionValues();\n\t\tif (this.#props.sourceFields.id)\n\t\t{\n\t\t\tconnectionValues.id = this.#props.sourceFields.id;\n\t\t}\n\n\t\tthis.#onCheckConnectClick()\n\t\t\t.then(() => {\n\t\t\t\treturn Ajax.runAction('biconnector.externalsource.source.save', {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdata: connectionValues,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tBX.SidePanel.Instance.postMessage(window, 'BIConnector:ExternalConnection:onConnectionCreated', {\n\t\t\t\t\tconnection: response.data.connection,\n\t\t\t\t});\n\t\t\t\tBX.SidePanel.Instance.getTopSlider().close();\n\t\t\t})\n\t\t\t.catch((response) => {\n\t\t\t\tsaveButton.setWaiting(false);\n\t\t\t\tif (response.errors?.length > 0)\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: response.errors[0].message,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.error(response);\n\t\t\t\t}\n\t\t\t\tBX.SidePanel.Instance.postMessage(window, 'BIConnector:ExternalConnection:onConnectionCreationError');\n\t\t\t});\n\t}\n}\n\nReflection.namespace('BX.BIConnector').ExternalConnectionForm = ExternalConnectionForm;\n"],"names":["ExternalConnectionForm","props","saveButton","ButtonManager","createFromNode","document","querySelector","setWaiting","connectionValues","sourceFields","id","then","Ajax","runAction","data","response","BX","SidePanel","Instance","postMessage","window","connection","getTopSlider","close","errors","length","UI","Notification","Center","notify","content","message","console","error","fieldsNode","Tag","render","Dom","append","buttonBlock","hint","Loc","getMessage","fields","title","typeSelector","supportedDatabases","forEach","database","code","type","name","Event","bind","fieldId","attr","fieldConfig","fieldsConfig","connectionType","field","fieldType","fieldNode","placeholder","event","target","value","clean","connectButton","Button","text","color","ButtonColor","PRIMARY","onclick","button","preventDefault","noCaps","renderTo","succedeed","errorMessage","status","replaceAll","result","querySelectorAll","getAttribute","setState","ButtonState","WAITING","Promise","resolve","reject","runComponentAction","mode","signedParameters","Reflection","namespace"],"mappings":";;;;;;;;;AAAA,CAE6E;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA,IAevEA,sBAAsB;GAO3B,gCAAYC,KAAY,EACxB;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,sCAAI,UAAUA,KAAK;KACnB,2BAAI,8BAAJ,IAAI;;GACJ;KAAA;KAAA,8BAoOD;OACC,IAAMC,UAAU,GAAGC,wBAAa,CAACC,cAAc,CAACC,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC,CAAC;OAClGJ,UAAU,CAACK,UAAU,CAAC,IAAI,CAAC;OAC3B,IAAMC,gBAAgB,0BAAG,IAAI,oDAAJ,IAAI,CAAuB;OACpD,IAAI,sCAAI,UAAQC,YAAY,CAACC,EAAE,EAC/B;SACCF,gBAAgB,CAACE,EAAE,GAAG,sCAAI,UAAQD,YAAY,CAACC,EAAE;;OAGlD,2BAAI,oDAAJ,IAAI,EACFC,IAAI,CAAC,YAAM;SACX,OAAOC,cAAI,CAACC,SAAS,CAAC,wCAAwC,EAAE;WAC/DC,IAAI,EAAE;aACLA,IAAI,EAAEN;;UAEP,CAAC;QACF,CAAC,CACDG,IAAI,CAAC,UAACI,QAAQ,EAAK;SACnBC,EAAE,CAACC,SAAS,CAACC,QAAQ,CAACC,WAAW,CAACC,MAAM,EAAE,oDAAoD,EAAE;WAC/FC,UAAU,EAAEN,QAAQ,CAACD,IAAI,CAACO;UAC1B,CAAC;SACFL,EAAE,CAACC,SAAS,CAACC,QAAQ,CAACI,YAAY,EAAE,CAACC,KAAK,EAAE;QAC5C,CAAC,SACI,CAAC,UAACR,QAAQ,EAAK;SAAA;SACpBb,UAAU,CAACK,UAAU,CAAC,KAAK,CAAC;SAC5B,IAAI,qBAAAQ,QAAQ,CAACS,MAAM,qDAAf,iBAAiBC,MAAM,IAAG,CAAC,EAC/B;WACCT,EAAE,CAACU,EAAE,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAAC;aAChCC,OAAO,EAAEf,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC,CAACO;YAC5B,CAAC;UACF,MAED;WACCC,OAAO,CAACC,KAAK,CAAClB,QAAQ,CAAC;;SAExBC,EAAE,CAACC,SAAS,CAACC,QAAQ,CAACC,WAAW,CAACC,MAAM,EAAE,0DAA0D,CAAC;QACrG,CAAC;;;GACH;CAAA;CAAA,sBAtQD;GACC,sCAAI,SAASf,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;GAEvD,2BAAI,8BAAJ,IAAI;GACJ,IAAM4B,UAAU,GAAGC,aAAG,CAACC,MAAM,mIAE5B;GACDC,aAAG,CAACC,MAAM,CAACJ,UAAU,oCAAE,IAAI,SAAO;GAClC,2BAAI,kCAAJ,IAAI;GAEJ,IAAMK,WAAW,GAAGJ,aAAG,CAACC,MAAM,iQAK7B;GACDC,aAAG,CAACC,MAAM,CAACC,WAAW,oCAAE,IAAI,SAAO;GAEnC,2BAAI,0DAAJ,IAAI;GACJ,2BAAI,gEAAJ,IAAI;CACL;CAAC,sBAGD;GACC,IAAMC,IAAI,GAAGL,aAAG,CAACC,MAAM,gKAEnBK,aAAG,CAACC,UAAU,CAAC,0BAA0B,EAAE;KAC5C,QAAQ,EAAE,mFAAmF;KAC7F,SAAS,EAAE;IACX,CAAC,CAEH;GACDL,aAAG,CAACC,MAAM,CAACE,IAAI,oCAAE,IAAI,SAAO;CAC7B;CAAC,wBAGD;GAAA;KAAA;KAAA;KAAA;GACC,IAAMN,UAAU,GAAG,sCAAI,SAAO5B,aAAa,CAAC,iBAAiB,CAAC;GAC9D,IAAMG,YAAY,4BAAG,sCAAI,UAAQA,YAAY,yEAAI,EAAE;GACnD,IAAMkC,MAAM,GAAGR,aAAG,CAACC,MAAM,2jCAIYK,aAAG,CAACC,UAAU,CAAC,gCAAgC,CAAC,EAShDD,aAAG,CAACC,UAAU,CAAC,gCAAgC,CAAC,EAOhED,aAAG,CAACC,UAAU,CAAC,4CAA4C,CAAC,yBAElEjC,YAAY,CAACmC,KAAK,qEAAI,EAAE,CAMtC;GACDP,aAAG,CAACC,MAAM,CAACK,MAAM,EAAET,UAAU,CAAC;GAE9B,IAAMW,YAAY,GAAGX,UAAU,CAAC5B,aAAa,CAAC,oBAAoB,CAAC;GACnE,sCAAI,UAAQwC,kBAAkB,CAACC,OAAO,CAAC,UAACC,QAAQ,EAAK;KACpDX,aAAG,CAACC,MAAM,CACTH,aAAG,CAACC,MAAM,qNAECY,QAAQ,CAACC,IAAI,EACpBxC,YAAY,CAACyC,IAAI,KAAKF,QAAQ,CAACC,IAAI,GAAG,UAAU,GAAG,EAAE,EAErDD,QAAQ,CAACG,IAAI,GAGjBN,YAAY,CACZ;IACD,CAAC;GACFO,eAAK,CAACC,IAAI,CAACR,YAAY,EAAE,OAAO,EAAE,2BAAI,iCAAeQ,IAAI,CAAC,IAAI,CAAC,CAAC;GAEhE,IAAI5C,YAAY,CAACC,EAAE,EACnB;KACC,IAAM4C,OAAO,GAAGnB,aAAG,CAACC,MAAM,oJACF3B,YAAY,CAACC,EAAE,CACtC;KACD2B,aAAG,CAACC,MAAM,CAACgB,OAAO,EAAEX,MAAM,CAAC;KAE3BN,aAAG,CAACkB,IAAI,CAACV,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC;;GAGzC,IAAMW,WAAW,GAAG,sCAAI,UAAQC,YAAY;GAC5C,IAAMC,cAAc,yBAAGjD,YAAY,CAACyC,IAAI,mEAAI,sCAAI,UAAQJ,kBAAkB,CAAC,CAAC,CAAC,CAACG,IAAI;GAClFO,WAAW,CAACE,cAAc,CAAC,CAACX,OAAO,CAAC,UAACY,KAAmB,EAAK;KAAA;KAC5D,IAAIC,SAAS,GAAGD,KAAK,CAACT,IAAI;KAC1B,IAAIS,KAAK,CAACV,IAAI,KAAK,UAAU,EAC7B;OACCW,SAAS,GAAG,UAAU;;KAEvB,IAAMC,SAAS,GAAG1B,aAAG,CAACC,MAAM,mnBAGQuB,KAAK,CAACR,IAAI,EAKjCS,SAAS,EAEJD,KAAK,CAACV,IAAI,EACRU,KAAK,CAACG,WAAW,2BACvBrD,YAAY,CAACkD,KAAK,CAACV,IAAI,CAAC,yEAAI,EAAE,CAK3C;KACDZ,aAAG,CAACC,MAAM,CAACuB,SAAS,EAAElB,MAAM,CAAC;KAC7BS,eAAK,CAACC,IAAI,CAACQ,SAAS,EAAE,OAAO,EAAE;OAAA,8BAAM,KAAI,wDAAJ,KAAI;MAAyB,CAAC;IACnE,CAAC;CACH;CAAC,wBAEaE,KAAK,EACnB;GACC,sCAAI,UAAQtD,YAAY,CAACyC,IAAI,GAAGa,KAAK,CAACC,MAAM,CAACC,KAAK;GAClD5B,aAAG,CAAC6B,KAAK,CAAC,sCAAI,SAAO5D,aAAa,CAAC,iBAAiB,CAAC,CAAC;GACtD,2BAAI,kCAAJ,IAAI;GACJ,2BAAI,wDAAJ,IAAI;CACL;CAAC,oCAGD;GAAA;GACC,IAAM6D,aAAa,GAAG,IAAIC,iBAAM,CAAC;KAChCC,IAAI,EAAE5B,aAAG,CAACC,UAAU,CAAC,kCAAkC,CAAC;KACxD4B,KAAK,EAAEC,sBAAW,CAACC,OAAO;KAC1BC,OAAO,EAAE,iBAACC,MAAc,EAAEX,KAAgB,EAAK;OAC9CA,KAAK,CAACY,cAAc,EAAE;OACtB,6BAAI,oDAAJ,MAAI,UACG,CAAC,YAAM,EAAE,CAAC;MACjB;KACDC,MAAM,EAAE;IACR,CAAC;GACFT,aAAa,CAACU,QAAQ,CAAC,sCAAI,SAAOvE,aAAa,CAAC,uBAAuB,CAAC,CAAC;GACzE,sCAAI,uBAAuB6D,aAAa;CACzC;CAAC,uCAGD;GACC,sCAAI,yBAAyB,sCAAI,SAAO7D,aAAa,CAAC,uBAAuB,CAAC;CAC/E;CAAC,mCAGD;GACC+B,aAAG,CAAC6B,KAAK,mCAAC,IAAI,yBAAuB;CACtC;CAAC,kCAEuBY,SAAkB,EAAEC,YAAoB,EAChE;GACC1C,aAAG,CAAC6B,KAAK,mCAAC,IAAI,yBAAuB;GACrC,IAAIc,MAAM,GAAG,IAAI;GACjB,IAAIF,SAAS,EACb;KACCE,MAAM,GAAG7C,aAAG,CAACC,MAAM,uUAGfK,aAAG,CAACC,UAAU,CAAC,mCAAmC,CAAC,CAEtD;IACD,MAED;KACCsC,MAAM,GAAG7C,aAAG,CAACC,MAAM,qUAGf2C,YAAY,CAACE,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAEvC;;GAEF5C,aAAG,CAACC,MAAM,CAAC0C,MAAM,oCAAE,IAAI,yBAAuB;CAC/C;CAAC,iCAGD;GACC,IAAME,MAAM,GAAG,EAAE;GACjB,sCAAI,SAAOC,gBAAgB,CAAC,aAAa,CAAC,CAACpC,OAAO,CAAC,UAACY,KAAK,EAAK;KAC7DuB,MAAM,CAACvB,KAAK,CAACyB,YAAY,CAAC,WAAW,CAAC,CAAC,GAAGzB,KAAK,CAACM,KAAK;IACrD,CAAC;GAEF,OAAOiB,MAAM;CACd;CAAC,iCAGD;GAAA;GACC,sCAAI,uBAAqBG,QAAQ,CAACC,sBAAW,CAACC,OAAO,CAAC;GAEtD,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;KACvC9E,cAAI,CAAC+E,kBAAkB,CAAC,uCAAuC,EAAE,iBAAiB,EAAE;OACnFC,IAAI,EAAE,OAAO;OACbC,gBAAgB,EAAE,wCAAI,UAAQA,gBAAgB;OAC9C/E,IAAI,EAAE;SACLA,IAAI,yBAAE,MAAI,oDAAJ,MAAI;;MAEX,CAAC,CACAH,IAAI,CAAC,UAACI,QAAQ,EAAK;OACnB,6BAAI,0DAAJ,MAAI,EAAyB,IAAI;OACjC,wCAAI,uBAAqBsE,QAAQ,CAAC,IAAI,CAAC;OAEvCI,OAAO,CAAC1E,QAAQ,CAAC;MACjB,CAAC,SACI,CAAC,UAACA,QAAQ,EAAK;OACpB,6BAAI,0DAAJ,MAAI,EAAyB,KAAK,EAAEA,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC,CAACO,OAAO;OAC9D,wCAAI,uBAAqBsD,QAAQ,CAAC,IAAI,CAAC;OAEvCK,MAAM,EAAE;MACR,CAAC;IAEH,CAAC;CACH;AA2CDI,qBAAU,CAACC,SAAS,CAAC,gBAAgB,CAAC,CAAC/F,sBAAsB,GAAGA,sBAAsB;;;;"}