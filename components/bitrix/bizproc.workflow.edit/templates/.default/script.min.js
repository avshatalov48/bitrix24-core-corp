(function(){"use strict";BX.namespace("BX.Bizproc.WorkflowEditComponent");if(typeof BX.Bizproc.WorkflowEditComponent.Globals!=="undefined"){return}BX.Bizproc.WorkflowEditComponent.Globals={};BX.Bizproc.WorkflowEditComponent.Globals.init=function(o){this.documentTypeSigned=String(o.documentTypeSigned)};BX.Bizproc.WorkflowEditComponent.Globals.onAfterSliderClose=function(o,e){var t=o.getData();if(t.get("upsert")){var a=t.get("upsert");for(var r in a){e[r]=a[r]}}if(t.get("delete")){var n=t.get("delete");for(var i in n){delete e[n[i]]}}};BX.Bizproc.WorkflowEditComponent.Globals.showGlobalVariables=function(){var o=this;BX.Bizproc.Globals.Manager.Instance.showGlobals(BX.Bizproc.Globals.Manager.Instance.mode.variable,String(this.documentTypeSigned)).then(function(e){o.onAfterSliderClose(e,arWorkflowGlobalVariables)})};BX.Bizproc.WorkflowEditComponent.Globals.showGlobalConstants=function(){var o=this;BX.Bizproc.Globals.Manager.Instance.showGlobals(BX.Bizproc.Globals.Manager.Instance.mode.constant,String(this.documentTypeSigned)).then(function(e){o.onAfterSliderClose(e,arWorkflowGlobalConstants)})}})();function BPImportToClipboard(){var o=JSON.stringify({template:rootActivity.Serialize(),parameters:arWorkflowParameters,variables:arWorkflowVariables,constants:arWorkflowConstants});BX.clipboard.copy(encodeURIComponent(o))}function BPExportFromString(o){try{var e=JSON.parse(decodeURIComponent(o))}catch(o){e={}}if(e.parameters&&BX.type.isPlainObject(e.parameters)){arWorkflowParameters=e.parameters}if(e.variables&&BX.type.isPlainObject(e.variables)){arWorkflowVariables=e.variables}if(e.constants&&BX.type.isPlainObject(e.constants)){arWorkflowConstants=e.constants}if(e.template&&BX.type.isPlainObject(e.template)){arWorkflowTemplate=e.template;ReDraw()}}
//# sourceMappingURL=script.map.js