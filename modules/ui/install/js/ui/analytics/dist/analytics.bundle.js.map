{"version":3,"file":"analytics.bundle.js","sources":["../src/functions.js","../src/index.js"],"sourcesContent":["import { ajax as Ajax, Extension, Type } from 'main.core';\nimport type { AnalyticsOptions } from './types';\n\nconst settings = Extension.getSettings('ui.analytics');\n\nfunction isValidAnalyticsData(analytics: AnalyticsOptions): boolean\n{\n\tif (!Type.isPlainObject(analytics))\n\t{\n\t\tconsole.error('BX.UI.Analytics: {analytics} must be an object.');\n\n\t\treturn false;\n\t}\n\n\tconst requiredFields = ['event', 'tool', 'category'];\n\tfor (const field of requiredFields)\n\t{\n\t\tif (!Type.isStringFilled(analytics[field]))\n\t\t{\n\t\t\tconsole.error(`BX.UI.Analytics: The \"${field}\" property in the \"analytics\" object must be a non-empty string.`);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst additionalFields = ['p1', 'p2', 'p3', 'p4', 'p5'];\n\tfor (const field of additionalFields)\n\t{\n\t\tconst value = analytics[field];\n\t\tif (!Type.isStringFilled(value))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (value.split('_').length > 2)\n\t\t{\n\t\t\tconsole.error(`BX.UI.Analytics: The \"${field}\" property (${value}) in the \"analytics\" object must be a string containing a single underscore.`);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction buildUrlByData(data: AnalyticsOptions): string\n{\n\tconst url = new URL('/_analytics/', window.location.origin);\n\tfor (const [key, value] of Object.entries(data))\n\t{\n\t\turl.searchParams.append(key, value);\n\t}\n\n\treturn url.toString();\n}\n\nexport function sendAnalyticsData(analytics: AnalyticsOptions): void\n{\n\tif (!isValidAnalyticsData(analytics))\n\t{\n\t\treturn;\n\t}\n\n\tconst collectData = settings.get('collectData', false);\n\tif (!collectData)\n\t{\n\t\treturn;\n\t}\n\n\tvoid Ajax({\n\t\tmethod: 'GET',\n\t\turl: buildUrlByData(analytics),\n\t});\n}\n","import { sendAnalyticsData } from './functions';\nimport type { AnalyticsOptions } from './types';\n\nexport function sendData(data: AnalyticsOptions): void\n{\n\t/** @see BX.ajax.runAction */\n\t/** @see processAnalyticsDataToGetParameters() */\n\tsendAnalyticsData(data);\n}\n"],"names":["settings","Extension","getSettings","isValidAnalyticsData","analytics","Type","isPlainObject","console","error","requiredFields","field","isStringFilled","additionalFields","value","split","length","buildUrlByData","data","url","URL","window","location","origin","Object","entries","key","searchParams","append","toString","sendAnalyticsData","collectData","get","Ajax","method","sendData"],"mappings":";;;;;;CAGA,IAAMA,QAAQ,GAAGC,mBAAS,CAACC,WAAW,CAAC,cAAc,CAAC;CAEtD,SAASC,oBAAoB,CAACC,SAA2B,EACzD;GACC,IAAI,CAACC,cAAI,CAACC,aAAa,CAACF,SAAS,CAAC,EAClC;KACCG,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;KAEhE,OAAO,KAAK;;GAGb,IAAMC,cAAc,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC;GACpD,mCAAoBA,cAAc,qCAClC;KADK,IAAMC,KAAK;KAEf,IAAI,CAACL,cAAI,CAACM,cAAc,CAACP,SAAS,CAACM,KAAK,CAAC,CAAC,EAC1C;OACCH,OAAO,CAACC,KAAK,kCAA0BE,KAAK,yEAAmE;OAE/G,OAAO,KAAK;;;GAId,IAAME,gBAAgB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;GACvD,sCAAoBA,gBAAgB,yCACpC;KADK,IAAMF,MAAK;KAEf,IAAMG,KAAK,GAAGT,SAAS,CAACM,MAAK,CAAC;KAC9B,IAAI,CAACL,cAAI,CAACM,cAAc,CAACE,KAAK,CAAC,EAC/B;OACC;;KAGD,IAAIA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAG,CAAC,EAC/B;OACCR,OAAO,CAACC,KAAK,kCAA0BE,MAAK,0BAAeG,KAAK,oFAA+E;OAE/I,OAAO,KAAK;;;GAId,OAAO,IAAI;CACZ;CAEA,SAASG,cAAc,CAACC,IAAsB,EAC9C;GACC,IAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,cAAc,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;GAC3D,oCAA2BC,MAAM,CAACC,OAAO,CAACP,IAAI,CAAC,uCAC/C;KADK;OAAOQ,GAAG;OAAEZ,KAAK;KAErBK,GAAG,CAACQ,YAAY,CAACC,MAAM,CAACF,GAAG,EAAEZ,KAAK,CAAC;;GAGpC,OAAOK,GAAG,CAACU,QAAQ,EAAE;CACtB;AAEA,CAAO,SAASC,iBAAiB,CAACzB,SAA2B,EAC7D;GACC,IAAI,CAACD,oBAAoB,CAACC,SAAS,CAAC,EACpC;KACC;;GAGD,IAAM0B,WAAW,GAAG9B,QAAQ,CAAC+B,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;GACtD,IAAI,CAACD,WAAW,EAChB;KACC;;GAGD,KAAKE,cAAI,CAAC;KACTC,MAAM,EAAE,KAAK;KACbf,GAAG,EAAEF,cAAc,CAACZ,SAAS;IAC7B,CAAC;CACH;;CCtEO,SAAS8B,QAAQ,CAACjB,IAAsB,EAC/C;;;GAGCY,iBAAiB,CAACZ,IAAI,CAAC;CACxB;;;;;;;;"}