{"version":3,"file":"ui.uploader.bundle.js","sources":["../src/enums/file-status.js","../src/enums/file-origin.js","../src/backend/abstract-upload-controller.js","../src/backend/abstract-load-controller.js","../src/helpers/create-unique-id.js","../src/helpers/get-extension-from-type.js","../src/helpers/create-file-from-blob.js","../src/helpers/is-data-uri.js","../src/helpers/create-blob-from-data-uri.js","../src/helpers/get-file-extension.js","../src/helpers/is-resizable-image.js","../src/helpers/format-file-size.js","../src/uploader-file.js","../src/uploader-error.js","../src/backend/chunk.js","../src/backend/upload-controller.js","../src/backend/server-load-multiple.js","../src/backend/server-load-controller.js","../src/backend/client-load-controller.js","../src/backend/server.js","../src/filters/filter.js","../src/filters/file-size-filter.js","../src/helpers/is-valid-file-type.js","../src/filters/file-type-filter.js","../src/helpers/get-array-buffer.js","../src/helpers/image-size/convert-string-to-buffer.js","../src/helpers/image-size/compare-buffers.js","../src/helpers/image-size/types/gif.js","../src/helpers/image-size/types/png.js","../src/helpers/image-size/types/bmp.js","../src/helpers/image-size/types/jpeg.js","../src/helpers/image-size/types/webp.js","../src/helpers/image-size/get-image-size.js","../src/filters/image-size-filter.js","../src/helpers/create-worker.js","../src/helpers/bitmap-worker.js","../src/helpers/load-image.js","../src/helpers/create-image-preview.js","../src/helpers/get-filename-without-extension.js","../src/helpers/rename-file-to-match-mime-type.js","../src/helpers/convert-canvas-to-blob.js","../src/helpers/resize-image.js","../src/filters/image-preview-filter.js","../src/filters/transform-image-filter.js","../src/enums/uploader-status.js","../src/enums/filter-type.js","../src/helpers/get-files-from-data-transfer.js","../src/helpers/can-append-file-to-form.js","../src/helpers/assign-file-to-input.js","../src/uploader.js","../src/adapters/vue-uploader.js","../src/helpers/is-image.js"],"sourcesContent":["export const FileStatus = {\n\tINIT: 'init',\n\tADDED: 'added',\n\tLOADING: 'loading',\n\tPENDING: 'pending',\n\tUPLOADING: 'uploading',\n\tABORTED: 'aborted',\n\tCOMPLETE: 'complete',\n\tLOAD_FAILED: 'load-failed',\n\tUPLOAD_FAILED: 'upload-failed',\n};","export const FileOrigin = {\n\tCLIENT: 'client',\n\tSERVER: 'server',\n};","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\n\nexport default class AbstractUploadController extends EventEmitter\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.UploadController');\n\n\t\tthis.server = server;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.server;\n\t}\n\n\tupload(file: File): void\n\t{\n\t\tthrow new Error('You must implement upload() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractLoadController extends EventEmitter\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.LoadController');\n\n\t\tthis.server = server;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.server;\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement load() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","const crypto = window.crypto || window.msCrypto;\n\nconst createUniqueId = (): string => {\n\treturn (`${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`).replace(/[018]/g, c =>\n\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t);\n};\n\nexport default createUniqueId;","import { Type } from 'main.core';\n\nconst getExtensionFromType = (type) => {\n\tif (!Type.isStringFilled(type))\n\t{\n\t\treturn '';\n\t}\n\n\tconst subtype = type.split('/').pop();\n\n\tif (/javascript/.test(subtype))\n\t{\n\t\treturn 'js';\n\t}\n\n\tif (/plain/.test(subtype))\n\t{\n\t\treturn 'txt';\n\t}\n\n\tif (/svg/.test(subtype))\n\t{\n\t\treturn 'svg';\n\t}\n\n\tif (/[a-z]+/.test(subtype))\n\t{\n\t\treturn subtype;\n\t}\n\n\treturn '';\n};\n\nexport default getExtensionFromType;","import { Type } from 'main.core';\nimport getExtensionFromType from './get-extension-from-type';\n\nlet counter = 0;\nconst createFileFromBlob = (blob: Blob, fileName: string): File => {\n\n\tif (!Type.isStringFilled(fileName))\n\t{\n\t\tconst date = new Date();\n\t\tfileName = `File ${date.getFullYear()}-${date.getMonth()}-${date.getDate()}-${++counter}`;\n\n\t\tconst extension = getExtensionFromType(blob.type);\n\t\tif (extension)\n\t\t{\n\t\t\tfileName += `.${extension}`;\n\t\t}\n\t}\n\n\ttry\n\t{\n\t\treturn new File(\n\t\t\t[blob],\n\t\t\tfileName,\n\t\t\t{\n\t\t\t\tlastModified: Date.now(),\n\t\t\t\tlastModifiedDate: new Date(),\n\t\t\t\ttype: blob.type\n\t\t\t}\n\t\t);\n\t}\n\tcatch (exception)\n\t{\n\t\tconst file = blob.slice(0, blob.size, blob.type);\n\t\tfile.name = fileName;\n\t\tfile.lastModified = Date.now();\n\t\tfile.lastModifiedDate = new Date();\n\n\t\treturn file;\n\t}\n};\n\nexport default createFileFromBlob;","const regexp = /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[\\w\\W]*?[^;])*),(.+)$/;\n\nconst isDataUri = (str: string): boolean => {\n\treturn typeof(str) === 'string' ? str.match(regexp) : false;\n};\n\nexport default isDataUri;","const createBlobFromDataUri = (dataURI: string): Blob => {\n\tconst byteString = atob(dataURI.split(',')[1]);\n\tconst mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\tconst buffer = new ArrayBuffer(byteString.length);\n\tconst view = new Uint8Array(buffer);\n\n\tfor (let i = 0; i < byteString.length; i++)\n\t{\n\t\tview[i] = byteString.charCodeAt(i);\n\t}\n\n\treturn new Blob([buffer], { type: mimeString });\n};\n\nexport default createBlobFromDataUri;","import { Type } from 'main.core';\n\nconst getFileExtension = (filename: string) => {\n\tconst position = Type.isStringFilled(filename) ? filename.lastIndexOf('.') : -1;\n\n\treturn position > 0 ? filename.substring(position + 1) : '';\n};\n\nexport default getFileExtension;\n\n\n","import { Type } from 'main.core';\nimport getFileExtension from './get-file-extension';\n\nconst imageExtensions = ['jpg', 'bmp', 'jpeg', 'jpe', 'gif', 'png', 'webp'];\n\nconst isResizableImage = (file: File | string, mimeType: string = null) => {\n\tconst filename = Type.isFile(file) ? file.name : file;\n\tconst type = Type.isFile(file) ? file.type : mimeType;\n\tconst extension = getFileExtension(filename).toLowerCase();\n\n\tif (imageExtensions.includes(extension))\n\t{\n\t\tif (type === null || /^image\\/[a-z0-9.-]+$/i.test(type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isResizableImage;\n","import { Loc, Type } from 'main.core';\n\nconst formatFileSize = (size: number, base: number = 1024): string => {\n\tlet i = 0;\n\tconst units = getUnits();\n\twhile (size >= base && units[i + 1])\n\t{\n\t\tsize /= base;\n\t\ti++;\n\t}\n\n\treturn (Type.isInteger(size) ? size : size.toFixed(1)) + units[i];\n};\n\nlet fileSizeUnits = null;\nconst getUnits = () => {\n\tif (fileSizeUnits !== null)\n\t{\n\t\treturn fileSizeUnits;\n\t}\n\n\tconst units = Loc.getMessage('UPLOADER_FILE_SIZE_POSTFIXES').split(/[|]/);\n\tfileSizeUnits = Type.isArrayFilled(units) ? units : ['B', 'kB', 'MB', 'GB', 'TB'];\n\n\treturn fileSizeUnits;\n};\n\nexport default formatFileSize;","import { Type, Runtime } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\n\nimport type { FileInfo } from './types/file-info';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\n\nimport AbstractUploadController from './backend/abstract-upload-controller';\nimport AbstractLoadController from './backend/abstract-load-controller';\n\nimport createUniqueId from './helpers/create-unique-id';\nimport createFileFromBlob from './helpers/create-file-from-blob';\nimport isDataUri from './helpers/is-data-uri';\nimport createBlobFromDataUri from './helpers/create-blob-from-data-uri';\nimport isResizableImage from './helpers/is-resizable-image';\nimport formatFileSize from './helpers/format-file-size';\n\nexport default class UploaderFile extends EventEmitter\n{\n\tid: string = null;\n\tsource: File | Blob | string | number;\n\tfile: File = null;\n\tserverId: number | string = null;\n\n\tname: string = '';\n\toriginalName: string = null;\n\tsize: number = 0;\n\ttype: string = '';\n\twidth: ?number = null;\n\theight: ?number = null;\n\n\tclientPreview: ?File = null;\n\tclientPreviewUrl: ?string = null;\n\tclientPreviewWidth: ?number = null;\n\tclientPreviewHeight: ?number = null;\n\n\tserverPreviewUrl: ?string = null;\n\tserverPreviewWidth: ?number = null;\n\tserverPreviewHeight: ?number = null;\n\n\tdownloadUrl: ?string = null;\n\tremoveUrl: ?string = null;\n\n\tstatus: FileStatus = FileStatus.INIT;\n\torigin: FileOrigin = FileOrigin.CLIENT;\n\n\tuploadController: AbstractUploadController = null;\n\tloadController: AbstractLoadController = null;\n\n\tconstructor(source: File | Blob | string | number, fileOptions: UploaderFileOptions = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.File');\n\n\t\tconst options = Type.isPlainObject(fileOptions) ? fileOptions : {};\n\n\t\tif (Type.isFile(source))\n\t\t{\n\t\t\tthis.file = source;\n\t\t}\n\t\telse if (Type.isBlob(source))\n\t\t{\n\t\t\tthis.file = createFileFromBlob(source, options.name || source.name);\n\t\t}\n\t\telse if (isDataUri(source))\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(source);\n\t\t\tthis.file = createFileFromBlob(blob, options.name);\n\t\t}\n\t\telse if (Type.isNumber(source) || Type.isStringFilled(source))\n\t\t{\n\t\t\tthis.origin = FileOrigin.SERVER;\n\t\t\tthis.serverId = source;\n\t\t\tif (Type.isPlainObject(options))\n\t\t\t{\n\t\t\t\tthis.setFile(options);\n\t\t\t}\n\t\t}\n\n\t\tthis.id = Type.isStringFilled(options.id) ? options.id : createUniqueId();\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\t//this.fireStateChangeEvent = Runtime.debounce(this.fireStateChangeEvent, 0, this);\n\t}\n\n\tload(): void\n\t{\n\t\tif (!this.canLoad())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStatus(FileStatus.LOADING);\n\t\tthis.emit('onLoadStart');\n\n\t\tthis.loadController.load(this);\n\t}\n\n\tupload(): void\n\t{\n\t\tif (!this.canUpload())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet event = new BaseEvent({ data: { file: this } });\n\t\tthis.emit('onBeforeUpload', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStatus(FileStatus.UPLOADING);\n\n\t\tevent = new BaseEvent({ data: { file: this.getFile() } });\n\t\tthis.emitAsync('onPrepareFileAsync', event)\n\t\t\t.then((result) => {\n\t\t\t\tconst file = Type.isArrayFilled(result) && Type.isFile(result[0]) ? result[0] : this.getFile();\n\t\t\t\tthis.emit('onUploadStart');\n\n\t\t\t\tif (this.uploadController)\n\t\t\t\t{\n\t\t\t\t\tthis.uploadController.upload(file);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error);\n\t\t\t})\n\t\t;\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tif (this.isUploading())\n\t// \t{\n\t// \t\tthis.abort();\n\t// \t\tthis.setStatus(FileStatus.PENDING);\n\t// \t}\n\t// }\n\t//\n\t// resume(): void\n\t// {\n\t//\n\t// }\n\t// retry(): void\n\t// {\n\t// \t// TODO\n\t// }\n\n\tabort(): void\n\t{\n\t\tif (this.uploadController)\n\t\t{\n\t\t\tthis.uploadController.abort();\n\t\t}\n\n\t\tthis.setStatus(FileStatus.ABORTED);\n\t\tthis.emit('onAbort');\n\t}\n\n\tabortLoad(): void\n\t{\n\t\tif (this.loadController)\n\t\t{\n\t\t\tthis.loadController.abort();\n\t\t}\n\n\t\tthis.setStatus(FileStatus.ABORTED);\n\t\tthis.emit('onAbort');\n\t}\n\n\tcancel(): void\n\t{\n\t\tthis.abort();\n\t\tthis.emit('onCancel');\n\t}\n\n\tsetUploadController(controller: AbstractUploadController): void\n\t{\n\t\tthis.uploadController = controller;\n\t}\n\n\tsetLoadController(controller: AbstractLoadController): void\n\t{\n\t\tthis.loadController = controller;\n\t}\n\n\tisReadyToUpload(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.PENDING;\n\t}\n\n\tisUploadable(): boolean\n\t{\n\t\treturn this.uploadController !== null;\n\t}\n\n\tisLoadable(): boolean\n\t{\n\t\treturn this.loadController !== null;\n\t}\n\n\tcanUpload(): boolean\n\t{\n\t\treturn this.isReadyToUpload() && this.isUploadable();\n\t}\n\n\tcanLoad(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.ADDED && this.isLoadable();\n\t}\n\n\tisUploading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOADING;\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOADING;\n\t}\n\n\tisComplete(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.COMPLETE;\n\t}\n\n\tisFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED || this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tgetFile(): ?File\n\t{\n\t\treturn this.file;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetFile(file: File | FileInfo): void\n\t{\n\t\tif (Type.isFile(file))\n\t\t{\n\t\t\tthis.file = file;\n\t\t}\n\t\telse if (Type.isPlainObject(file))\n\t\t{\n\t\t\tthis.setName(file.name);\n\t\t\tthis.setOriginalName(file.originalName);\n\t\t\tthis.setType(file.type);\n\t\t\tthis.setSize(file.size);\n\n\t\t\tthis.setServerId(file.serverId);\n\t\t\tthis.setWidth(file.width);\n\t\t\tthis.setHeight(file.height);\n\n\t\t\tthis.setClientPreview(file.clientPreview, file.clientPreviewWidth, file.clientPreviewHeight);\n\t\t\tthis.setServerPreview(file.serverPreviewUrl, file.serverPreviewWidth, file.serverPreviewHeight);\n\n\t\t\tthis.setDownloadUrl(file.downloadUrl);\n\t\t\tthis.setRemoveUrl(file.removeUrl);\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.getFile() ? this.getFile().name : this.name;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#setProperty('name', name);\n\t\t}\n\t}\n\n\tgetOriginalName(): string\n\t{\n\t\treturn this.originalName ? this.originalName : this.getName();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetOriginalName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#setProperty('originalName', name);\n\t\t}\n\t}\n\n\tgetExtension(): string\n\t{\n\t\tconst name = this.getOriginalName();\n\t\tconst position = name.lastIndexOf('.');\n\n\t\treturn position > 0 ? name.substring(position + 1).toLowerCase() : '';\n\t}\n\n\tgetType(): string\n\t{\n\t\treturn this.getFile() ? this.getFile().type : this.type;\n\t}\n\n\t/**\n\t * internal\n\t */\n\tsetType(type: string): string\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.#setProperty('type', type);\n\t\t}\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getFile() ? this.getFile().size : this.size;\n\t}\n\n\tgetSizeFormatted(): string\n\t{\n\t\treturn formatFileSize(this.getSize());\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetSize(size: number): void\n\t{\n\t\tif (Type.isNumber(size) && size >= 0)\n\t\t{\n\t\t\tthis.#setProperty('size', size);\n\t\t}\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.id;\n\t}\n\n\tgetServerId(): number | string | null\n\t{\n\t\treturn this.serverId;\n\t}\n\n\tsetServerId(id: number | string): void\n\t{\n\t\tif (Type.isNumber(id) || Type.isStringFilled(id))\n\t\t{\n\t\t\tthis.#setProperty('serverId', id);\n\t\t}\n\t}\n\n\tgetStatus(): FileStatus\n\t{\n\t\treturn this.status;\n\t}\n\n\tsetStatus(status: FileStatus): void\n\t{\n\t\tthis.#setProperty('status', status);\n\t\tthis.emit('onStatusChange');\n\t}\n\n\tgetOrigin(): FileOrigin\n\t{\n\t\treturn this.origin;\n\t}\n\n\tgetDownloadUrl(): ?string\n\t{\n\t\treturn this.downloadUrl;\n\t}\n\n\tsetDownloadUrl(url: string): void\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#setProperty('downloadUrl', url);\n\t\t}\n\t}\n\n\tgetRemoveUrl(): ?string\n\t{\n\t\treturn this.removeUrl;\n\t}\n\n\tsetRemoveUrl(url: string)\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#setProperty('removeUrl', url);\n\t\t}\n\t}\n\n\tgetWidth(): ?number\n\t{\n\t\treturn this.width;\n\t}\n\n\tsetWidth(width: number)\n\t{\n\t\tif (Type.isNumber(width))\n\t\t{\n\t\t\tthis.#setProperty('width', width);\n\t\t}\n\t}\n\n\tgetHeight(): ?number\n\t{\n\t\treturn this.height;\n\t}\n\n\tsetHeight(height: ?number)\n\t{\n\t\tif (Type.isNumber(height))\n\t\t{\n\t\t\tthis.#setProperty('height', height);\n\t\t}\n\t}\n\n\tgetPreviewUrl(): ?string\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewUrl() : this.getServerPreviewUrl();\n\t}\n\n\tgetPreviewWidth(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewWidth() : this.getServerPreviewWidth();\n\t}\n\n\tgetPreviewHeight(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewHeight() : this.getServerPreviewHeight();\n\t}\n\n\tgetClientPreview(): ?File\n\t{\n\t\treturn this.clientPreview;\n\t}\n\n\tsetClientPreview(file: ?File, width: number = null, height: number = null): void\n\t{\n\t\tif (Type.isFile(file) || Type.isNull(file))\n\t\t{\n\t\t\tthis.revokeClientPreviewUrl();\n\n\t\t\tthis.#setProperty('clientPreview', file);\n\t\t\tthis.#setProperty('clientPreviewWidth', width);\n\t\t\tthis.#setProperty('clientPreviewHeight', height);\n\t\t}\n\t}\n\n\tgetClientPreviewUrl(): ?string\n\t{\n\t\tif (this.clientPreviewUrl === null && this.getClientPreview() !== null)\n\t\t{\n\t\t\tthis.clientPreviewUrl = URL.createObjectURL(this.getClientPreview());\n\t\t}\n\n\t\treturn this.clientPreviewUrl;\n\t}\n\n\trevokeClientPreviewUrl(): void\n\t{\n\t\tif (this.clientPreviewUrl !== null)\n\t\t{\n\t\t\tURL.revokeObjectURL(this.clientPreviewUrl);\n\t\t}\n\n\t\tthis.clientPreviewUrl = null;\n\t}\n\n\tgetClientPreviewWidth(): ?number\n\t{\n\t\treturn this.clientPreviewWidth;\n\t}\n\n\tgetClientPreviewHeight(): ?number\n\t{\n\t\treturn this.clientPreviewHeight;\n\t}\n\n\tgetServerPreviewUrl(): ?string\n\t{\n\t\treturn this.serverPreviewUrl;\n\t}\n\n\tsetServerPreview(url: ?string, width: number = null, height: number = null): ?string\n\t{\n\t\tif (Type.isStringFilled(url) || Type.isNull(url))\n\t\t{\n\t\t\tthis.#setProperty('serverPreviewUrl', url);\n\t\t\tthis.#setProperty('serverPreviewWidth', width);\n\t\t\tthis.#setProperty('serverPreviewHeight', height);\n\t\t}\n\t}\n\n\tgetServerPreviewWidth(): ?number\n\t{\n\t\treturn this.serverPreviewWidth;\n\t}\n\n\tgetServerPreviewHeight(): ?number\n\t{\n\t\treturn this.serverPreviewHeight;\n\t}\n\n\tisImage(): boolean\n\t{\n\t\treturn isResizableImage(this.getOriginalName(), this.getType());\n\t}\n\n\tgetState(): { [key: string]: any }\n\t{\n\t\treturn JSON.parse(JSON.stringify(this));\n\t}\n\n\t#setProperty(name, value)\n\t{\n\t\tthis[name] = value;\n\t\tthis.emit('onStateChange');\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tid: this.getId(),\n\t\t\tserverId: this.getServerId(),\n\t\t\tstatus: this.getStatus(),\n\t\t\tname: this.getName(),\n\t\t\toriginalName: this.getOriginalName(),\n\t\t\tsize: this.getSize(),\n\t\t\tsizeFormatted: this.getSizeFormatted(),\n\t\t\ttype: this.getType(),\n\t\t\textension: this.getExtension(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tisImage: this.isImage(),\n\t\t\tfailed: this.isFailed(),\n\t\t\twidth: this.getWidth(),\n\t\t\theight: this.getHeight(),\n\n\t\t\tpreviewUrl: this.getPreviewUrl(),\n\t\t\tpreviewWidth: this.getPreviewWidth(),\n\t\t\tpreviewHeight: this.getPreviewHeight(),\n\n\t\t\tclientPreviewUrl: this.getClientPreviewUrl(),\n\t\t\tclientPreviewWidth: this.getClientPreviewWidth(),\n\t\t\tclientPreviewHeight: this.getClientPreviewHeight(),\n\n\t\t\tserverPreviewUrl: this.getServerPreviewUrl(),\n\t\t\tserverPreviewWidth: this.getServerPreviewWidth(),\n\t\t\tserverPreviewHeight: this.getServerPreviewHeight(),\n\n\t\t\tdownloadUrl: this.getDownloadUrl(),\n\t\t\tremoveUrl: this.getRemoveUrl(),\n\t\t};\n\t}\n}\n","import { BaseError, Type, Loc } from 'main.core';\n\nexport default class UploaderError extends BaseError\n{\n\tdescription: string = '';\n\torigin: string = 'client';\n\n\tconstructor(code: string, ...args)\n\t{\n\t\tlet message = Type.isString(args[0]) ? args[0] : null;\n\t\tlet description = Type.isString(args[1]) ? args[1] : null;\n\t\tconst customData = Type.isPlainObject(args[args.length - 1]) ? args[args.length - 1] : {};\n\n\t\tconst replacements = {};\n\t\tObject.keys(customData).forEach((key: string) => {\n\t\t\treplacements[`#${key}#`] = customData[key];\n\t\t});\n\n\t\tif (!Type.isString(message) && Loc.hasMessage(`UPLOADER_${code}`))\n\t\t{\n\t\t\tmessage = Loc.getMessage(`UPLOADER_${code}`, replacements);\n\t\t}\n\n\t\tif (Type.isStringFilled(message) && !Type.isString(description) && Loc.hasMessage(`UPLOADER_${code}_DESC`))\n\t\t{\n\t\t\tdescription = Loc.getMessage(`UPLOADER_${code}_DESC`, replacements);\n\t\t}\n\n\t\tsuper(message, code, customData);\n\t\tthis.setDescription(description);\n\t}\n\n\tstatic createFromAjaxErrors(errors: Array): UploaderError\n\t{\n\t\tif (!Type.isArrayFilled(errors) || !Type.isPlainObject(errors[0]))\n\t\t{\n\t\t\treturn new this('SERVER_ERROR');\n\t\t}\n\n\t\tconst uploaderError = errors.find(error => {\n\t\t\treturn error.type === 'file-uploader';\n\t\t});\n\n\t\tif (uploaderError && !uploaderError.system)\n\t\t{\n\t\t\t// Take the First Uploader User Error\n\t\t\tconst { code, message, description, customData } = uploaderError;\n\t\t\tconst error = new this(code, message, description, customData);\n\t\t\terror.setOrigin('server');\n\n\t\t\treturn error;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet { code, message, description, customData } = errors[0];\n\t\t\tif (code === 'NETWORK_ERROR')\n\t\t\t{\n\t\t\t\tmessage = Loc.getMessage('UPLOADER_NETWORK_ERROR');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Type.isStringFilled(code) ? code : 'SERVER_ERROR';\n\t\t\t\tif (!Type.isStringFilled(description))\n\t\t\t\t{\n\t\t\t\t\tdescription = message;\n\t\t\t\t\tmessage = Loc.getMessage('UPLOADER_SERVER_ERROR');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.error('Uploader', errors);\n\n\t\t\tconst error = new this(code, message, description, customData);\n\t\t\terror.setOrigin('server');\n\n\t\t\treturn error;\n\t\t}\n\t}\n\n\tgetDescription(): string\n\t{\n\t\treturn this.description;\n\t}\n\n\tsetDescription(text: string): this\n\t{\n\t\tif (Type.isString(text))\n\t\t{\n\t\t\tthis.description = text;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetOrigin(): string\n\t{\n\t\treturn this.origin;\n\t}\n\n\tsetOrigin(origin: string): this\n\t{\n\t\tif (Type.isStringFilled(origin))\n\t\t{\n\t\t\tthis.origin = origin;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclone(): UploaderError\n\t{\n\t\tconst options = JSON.parse(JSON.stringify(this));\n\t\tconst error = new UploaderError(\n\t\t\toptions.code,\n\t\t\toptions.message,\n\t\t\toptions.description,\n\t\t\toptions.customData\n\t\t);\n\n\t\terror.setOrigin(options.origin);\n\n\t\treturn error;\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tcode: this.getCode(),\n\t\t\tmessage: this.getMessage(),\n\t\t\tdescription: this.getDescription(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n","import { Type } from 'main.core';\n\nexport default class Chunk\n{\n\tdata: Blob = null;\n\toffset: number = 0;\n\tretries: number[] = [];\n\n\tconstructor(data, offset)\n\t{\n\t\tthis.data = data;\n\t\tthis.offset = offset;\n\t}\n\n\tgetNextRetryDelay(): ?number\n\t{\n\t\tif (this.retries.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.retries.shift();\n\t}\n\n\tsetRetries(retries: number[]): void\n\t{\n\t\tif (Type.isArray(retries))\n\t\t{\n\t\t\tthis.retries = retries;\n\t\t}\n\t}\n\n\tgetData(): Blob\n\t{\n\t\treturn this.data;\n\t}\n\n\tgetOffset(): number\n\t{\n\t\treturn this.offset;\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getData().size;\n\t}\n}","import Server from './server';\nimport Chunk from './chunk';\nimport { ajax as Ajax, Type } from 'main.core';\nimport AbstractUploadController from './abstract-upload-controller';\nimport UploaderError from '../uploader-error';\n\nexport default class UploadController extends AbstractUploadController\n{\n\tfile: File = null;\n\tchunkOffset: ?number = null;\n\tchunkTimeout: ?number = null;\n\ttoken: string = null;\n\txhr: XMLHttpRequest = null;\n\taborted: boolean = false;\n\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tupload(file: File): void\n\t{\n\t\tif (this.chunkOffset !== null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.file = file;\n\n\t\tconst nextChunk = this.#getNextChunk();\n\t\tif (nextChunk)\n\t\t{\n\t\t\tthis.#uploadChunk(nextChunk);\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.xhr)\n\t\t{\n\t\t\tthis.aborted = true;\n\t\t\tthis.xhr.abort();\n\t\t\tthis.xhr = null;\n\t\t}\n\n\t\tthis.emit('onAbort');\n\n\t\tclearTimeout(this.chunkTimeout);\n\t}\n\n\t#uploadChunk(chunk: Chunk)\n\t{\n\t\tconst totalSize = this.getFile().size;\n\t\tconst isOnlyOneChunk = chunk.getOffset() === 0 && totalSize === chunk.getSize();\n\n\t\tlet fileName = this.getFile().name;\n\t\tif (fileName.normalize)\n\t\t{\n\t\t\tfileName = fileName.normalize();\n\t\t}\n\n\t\tconst headers = [\n\t\t\t{ name: 'Content-Type', value: this.getFile().type },\n\t\t\t{ name: 'X-Upload-Content-Name', value: encodeURIComponent(fileName) },\n\t\t];\n\n\t\tif (!isOnlyOneChunk)\n\t\t{\n\t\t\tconst rangeStart = chunk.getOffset();\n\t\t\tconst rangeEnd = chunk.getOffset() + chunk.getSize() - 1;\n\t\t\tconst rangeHeader = `bytes ${rangeStart}-${rangeEnd}/${totalSize}`;\n\n\t\t\theaders.push({ name: 'Content-Range', value: rangeHeader });\n\t\t}\n\n\t\tconst controllerOptions = this.getServer().getControllerOptions();\n\t\tAjax.runAction('ui.fileuploader.upload', {\n\t\t\t\theaders,\n\t\t\t\tdata: chunk.getData(),\n\t\t\t\tpreparePost: false,\n\t\t\t\tgetParameters: {\n\t\t\t\t\tcontroller: this.getServer().getController(),\n\t\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t\t\ttoken: this.getToken() || '',\n\t\t\t\t},\n\t\t\t\tonrequeststart: (xhr) => {\n\t\t\t\t\tthis.xhr = xhr;\n\t\t\t\t\tthis.aborted = false;\n\t\t\t\t},\n\t\t\t\tonprogressupload: (event: ProgressEvent) => {\n\t\t\t\t\tif (event.lengthComputable)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst size = this.getFile().size;\n\t\t\t\t\t\tconst uploadedBytes = Math.min(size, chunk.getOffset() + event.loaded);\n\t\t\t\t\t\tconst progress = size > 0 ? Math.floor(uploadedBytes / size * 100) : 100;\n\t\t\t\t\t\tthis.emit('onProgress', { progress });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log('response', response);\n\n\t\t\t\tif (response.data.token)\n\t\t\t\t{\n\t\t\t\t\tthis.setToken(response.data.token);\n\n\t\t\t\t\tconst size = this.getFile().size;\n\t\t\t\t\tconst progress = size > 0 ? Math.floor((chunk.getOffset() + chunk.getSize()) / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\n\t\t\t\t\tconst nextChunk = this.#getNextChunk();\n\t\t\t\t\tif (nextChunk)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#uploadChunk(nextChunk);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tthis.emit('onUpload', { fileInfo: response.data.file });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(response => {\n\t\t\t\tif (this.aborted)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\t\tconst shouldRetry = error.getCode() === 'NETWORK_ERROR';\n\n\t\t\t\tif (!shouldRetry || !this.#retryUploadChunk(chunk))\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error });\n\t\t\t\t}\n\t\t\t})\n\t\t;\n\t}\n\n\t#retryUploadChunk(chunk: Chunk): boolean\n\t{\n\t\tconst nextDelay = chunk.getNextRetryDelay();\n\t\tif (nextDelay === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tclearTimeout(this.chunkTimeout);\n\n\t\tthis.chunkTimeout = setTimeout(() => {\n\t\t\tthis.#uploadChunk(chunk);\n\t\t}, nextDelay);\n\n\t\treturn true;\n\t}\n\n\t#getNextChunk(): ?Chunk\n\t{\n\t\tif (this.getChunkOffset() !== null && this.getChunkOffset() >= this.getFile().size)\n\t\t{\n\t\t\t// End of File\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.getChunkOffset() === null)\n\t\t{\n\t\t\t// First call\n\t\t\tthis.chunkOffset = 0;\n\t\t}\n\n\t\tlet chunk: Chunk;\n\t\tif (this.getChunkOffset() === 0 && this.getFile().size <= this.getChunkSize())\n\t\t{\n\t\t\tchunk = new Chunk(this.getFile(), this.getChunkOffset());\n\t\t\tthis.chunkOffset = this.getFile().size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst currentChunkSize = Math.min(this.getChunkSize(), this.getFile().size - this.getChunkOffset());\n\t\t\tconst nextOffset = this.getChunkOffset() + currentChunkSize;\n\t\t\tconst fileRange = this.getFile().slice(this.getChunkOffset(), nextOffset);\n\n\t\t\tchunk = new Chunk(fileRange, this.getChunkOffset());\n\t\t\tthis.chunkOffset = nextOffset;\n\t\t}\n\n\t\tchunk.setRetries([...this.getServer().getChunkRetryDelays()]);\n\n\t\treturn chunk;\n\t}\n\n\tgetFile(): File\n\t{\n\t\treturn this.file;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.getServer().getChunkSize();\n\t}\n\n\tgetChunkOffset(): number\n\t{\n\t\treturn this.chunkOffset;\n\t}\n\n\tgetToken(): ?string\n\t{\n\t\treturn this.token;\n\t}\n\n\tsetToken(token: string): void\n\t{\n\t\tif (Type.isStringFilled(token))\n\t\t{\n\t\t\tthis.token = token;\n\t\t}\n\t}\n}","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type ServerLoadController from './server-load-controller';\n\nconst queues = new WeakMap();\n\nexport function loadMultiple(controller: ServerLoadController, file: UploaderFile)\n{\n\tconst server = controller.getServer();\n\tlet queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tload: Runtime.debounce(loadInternal, 100, server),\n\t\t\txhr: null,\n\t\t};\n\n\t\tqueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.load();\n}\n\nexport function abort(controller: ServerLoadController)\n{\n\tconst server = controller.getServer();\n\tconst queue = queues.get(server);\n\tif (queue)\n\t{\n\t\tqueue.xhr.abort();\n\t\tqueue.xhr = null;\n\t\tqueues.delete(server);\n\n\t\ttasks.forEach(task => {\n\t\t\tconst { controller, file } = task;\n\t\t\tcontroller.emit('onAbort');\n\t\t});\n\t}\n}\n\nfunction loadInternal()\n{\n\tconst server: Server = this;\n\tconst queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tconst { tasks } = queue;\n\tqueues.delete(server);\n\n\tconst fileIds = [];\n\ttasks.forEach(task => {\n\t\tconst { controller, file } = task;\n\t\tfileIds.push(file.getServerId());\n\t});\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.load', {\n\t\t\tdata: {\n\t\t\t\tfileIds: fileIds,\n\t\t\t},\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: server.getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t},\n\t\t\tonrequeststart: (xhr) => {\n\t\t\t\tqueue.xhr = xhr;\n\t\t\t},\n\t\t\tonprogress: (event: ProgressEvent) => {\n\t\t\t\tif (event.lengthComputable)\n\t\t\t\t{\n\t\t\t\t\tconst progress = event.total > 0 ? Math.floor(event.loaded / event.total * 100) : 100;\n\n\t\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\t\tcontroller.emit('onProgress', { file, progress });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t.then(response => {\n\t\t\tif (response.data?.files)\n\t\t\t{\n\t\t\t\tconst fileResults = {};\n\t\t\t\tresponse.data.files.forEach((fileResult) => {\n\t\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t\t});\n\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\tconst fileResult = fileResults[file.getServerId()] || null;\n\n\t\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.emit('onProgress', { file, progress: 100 });\n\t\t\t\t\t\tcontroller.emit('onLoad', { fileInfo: fileResult.data.file });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst error = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst error = new UploaderError('SERVER_ERROR');\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller } = task;\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(response => {\n\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\ttasks.forEach(task => {\n\t\t\t\tconst { controller } = task;\n\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t});\n\t\t})\n\t;\n}","import AbstractLoadController from './abstract-load-controller';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { loadMultiple, abort } from './server-load-multiple';\n\nexport default class ServerLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tloadMultiple(this, file);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\t// const controllerOptions = this.getServer().getControllerOptions();\n\t\t// Ajax.runAction('ui.fileuploader.load', {\n\t\t// \t\tdata: {\n\t\t// \t\t\tfileIds: [file.getServerId()],\n\t\t// \t\t},\n\t\t// \t\tgetParameters: {\n\t\t// \t\t\tcontroller: this.getServer().getController(),\n\t\t// \t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t// \t\t},\n\t\t// \t\tonrequeststart: (xhr) => {\n\t\t// \t\t\tthis.xhr = xhr;\n\t\t// \t\t},\n\t\t// \t\tonprogress: (event: ProgressEvent) => {\n\t\t// \t\t\tif (event.lengthComputable)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tconst progress = event.total > 0 ? Math.floor(event.loaded / event.total * 100): 100;\n\t\t// \t\t\t\tthis.emit('onProgress', { progress });\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t.then(response => {\n\t\t// \t\tif (response.data?.files)\n\t\t// \t\t{\n\t\t// \t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t// \t\t\tthis.emit('onLoad', { file: response.data.file })\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t.catch(response => {\n\t\t// \t\tthis.emit('onError', { error: UploaderError.createFromAjaxErrors(response.errors) });\n\t\t// \t})\n\t\t// ;\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tabort(this);\n\t\t}\n\t}\n}","import AbstractLoadController from './abstract-load-controller';\nimport Server from './server';\nimport UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\nimport UploaderError from '../uploader-error';\n\nexport default class ClientLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isFile(file.getFile()))\n\t\t{\n\t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\n\t}\n\n}","import { Extension, Runtime, Type } from 'main.core';\nimport type { ServerOptions } from '../types/server-options';\nimport UploadController from './upload-controller';\nimport AbstractUploadController from './abstract-upload-controller';\nimport ServerLoadController from './server-load-controller';\nimport AbstractLoadController from './abstract-load-controller';\nimport ClientLoadController from './client-load-controller';\n\nexport default class Server\n{\n\tcontroller: ?string = null;\n\tcontrollerOptions: ?{ [key: string]: any } = null;\n\tuploadControllerClass: Class<AbstractUploadController> = null;\n\tloadControllerClass: Class<AbstractLoadController> = null;\n\tchunkSize: number = null;\n\tdefaultChunkSize: number = null;\n\tchunkMinSize: number = null;\n\tchunkMaxSize: number = null;\n\tchunkRetryDelays: number[] = [1000, 3000, 6000];\n\n\tconstructor(serverOptions: ServerOptions)\n\t{\n\t\tconst options = Type.isPlainObject(serverOptions) ? serverOptions : {};\n\n\t\tthis.controller = Type.isStringFilled(options.controller) ? options.controller : null;\n\t\tthis.controllerOptions = Type.isPlainObject(options.controllerOptions) ? options.controllerOptions : null;\n\n\t\tconst chunkSize =\n\t\t\tType.isNumber(options.chunkSize) && options.chunkSize > 0\n\t\t\t\t? options.chunkSize\n\t\t\t\t: this.getDefaultChunkSize()\n\t\t;\n\n\t\tthis.chunkSize = options.forceChunkSize === true ? chunkSize : this.#calcChunkSize(chunkSize);\n\n\t\tif (options.chunkRetryDelays === false || options.chunkRetryDelays === null)\n\t\t{\n\t\t\tthis.chunkRetryDelays = [];\n\t\t}\n\t\telse if (Type.isArray(options.chunkRetryDelays))\n\t\t{\n\t\t\tthis.chunkRetryDelays = options.chunkRetryDelays;\n\t\t}\n\n\t\t['uploadControllerClass', 'loadControllerClass'].forEach((controllerClass: string) => {\n\t\t\tif (Type.isStringFilled(options[controllerClass]))\n\t\t\t{\n\t\t\t\tthis[controllerClass] = Runtime.getClass(options[controllerClass]);\n\t\t\t\tif (!Type.isFunction(options[controllerClass]))\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`Uploader.Server: \"${controllerClass}\" must be a function.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Type.isFunction(options[controllerClass]))\n\t\t\t{\n\t\t\t\tthis[controllerClass] = options[controllerClass];\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateUploadController(): ?UploadController\n\t{\n\t\tif (this.uploadControllerClass)\n\t\t{\n\t\t\tconst controller = new this.uploadControllerClass(this);\n\t\t\tif (!(controller instanceof AbstractUploadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"uploadControllerClass\" must be an instance of AbstractUploadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\t\telse if (Type.isStringFilled(this.controller))\n\t\t{\n\t\t\treturn new UploadController(this);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcreateLoadController(): ServerLoadController\n\t{\n\t\tif (this.loadControllerClass)\n\t\t{\n\t\t\tconst controller = new this.loadControllerClass(this);\n\t\t\tif (!(controller instanceof AbstractLoadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"loadControllerClass\" must be an instance of AbstractLoadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\treturn new ServerLoadController(this);\n\t}\n\n\tcreateClientLoadController(): ClientLoadController\n\t{\n\t\treturn new ClientLoadController(this);\n\t}\n\n\tgetController(): ?string\n\t{\n\t\treturn this.controller;\n\t}\n\n\tgetControllerOptions(): ?{ [key: string]: any }\n\t{\n\t\treturn this.controllerOptions;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.chunkSize;\n\t}\n\n\tgetDefaultChunkSize(): number\n\t{\n\t\tif (this.defaultChunkSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.defaultChunkSize = settings.get('defaultChunkSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.defaultChunkSize;\n\t}\n\n\tgetChunkMinSize(): number\n\t{\n\t\tif (this.chunkMinSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.chunkMinSize = settings.get('chunkMinSize', 1024 * 1024);\n\t\t}\n\n\t\treturn this.chunkMinSize;\n\t}\n\n\tgetChunkMaxSize(): number\n\t{\n\t\tif (this.chunkMaxSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.chunkMaxSize = settings.get('chunkMaxSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.chunkMaxSize;\n\t}\n\n\tgetChunkRetryDelays(): number[]\n\t{\n\t\treturn this.chunkRetryDelays;\n\t}\n\n\t#calcChunkSize(chunkSize: number): number\n\t{\n\t\treturn Math.min(Math.max(this.getChunkMinSize(), chunkSize), this.getChunkMaxSize());\n\t}\n}\n","import type Uploader from '../uploader';\n\nexport default class Filter\n{\n\tuploader: Uploader = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tthis.uploader = uploader;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.uploader;\n\t}\n\n\t/**\n\t * @abstract\n\t */\n\tapply(...args): Promise\n\t{\n\t\tthrow new Error('You must implement apply() method.');\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport formatFileSize from '../helpers/format-file-size';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\n\nexport default class FileSizeFilter extends Filter\n{\n\tmaxFileSize: number = null;\n\tminFileSize: number = null;\n\tmaxTotalFileSize: number = null;\n\timageMaxFileSize: number = null;\n\timageMinFileSize: number = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tconst integerOptions = [\n\t\t\t'maxFileSize',\n\t\t\t'minFileSize',\n\t\t\t'maxTotalFileSize',\n\t\t\t'imageMaxFileSize',\n\t\t\t'imageMinFileSize',\n\t\t];\n\n\t\tintegerOptions.forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] >= 0 ? options[option] : this[option];\n\t\t});\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (this.maxFileSize !== null && file.getSize() > this.maxFileSize)\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxFileSize: formatFileSize(this.maxFileSize),\n\t\t\t\t\t\t\tmaxFileSizeInBytes: this.maxFileSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.minFileSize !== null && file.getSize() < this.minFileSize)\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminFileSize: formatFileSize(this.minFileSize),\n\t\t\t\t\t\t\tminFileSizeInBytes: this.minFileSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.isImage())\n\t\t\t{\n\t\t\t\tif (this.imageMaxFileSize !== null && file.getSize() > this.imageMaxFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'IMAGE_MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\timageMaxFileSize: formatFileSize(this.imageMaxFileSize),\n\t\t\t\t\t\t\t\timageMaxFileSizeInBytes: this.imageMaxFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.imageMinFileSize !== null && file.getSize() < this.imageMinFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'IMAGE_MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\timageMinFileSize: formatFileSize(this.imageMinFileSize),\n\t\t\t\t\t\t\t\timageMinFileSizeInBytes: this.imageMinFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.maxTotalFileSize !== null)\n\t\t\t{\n\t\t\t\tif (this.getUploader().getTotalSize() > this.maxTotalFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'MAX_TOTAL_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxTotalFileSize: formatFileSize(this.maxTotalFileSize),\n\t\t\t\t\t\t\t\tmaxTotalFileSizeInBytes: this.maxTotalFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\n\t}\n}\n","import { Type } from 'main.core';\n\nconst isValidFileType = (file: File, fileTypes: string[]): boolean => {\n\tif (!Type.isArrayFilled(fileTypes))\n\t{\n\t\treturn true;\n\t}\n\n\tconst mimeType = file.type;\n\tconst baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n\tfor (let i = 0; i < fileTypes.length; i++)\n\t{\n\t\tif (!Type.isStringFilled(fileTypes[i]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst type = fileTypes[i].trim().toLowerCase();\n\n\t\tif (type.charAt(0) === '.') // extension case\n\t\t{\n\t\t\tif (file.name.toLowerCase().indexOf(type, file.name.length - type.length) !== -1)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (/\\/\\*$/.test(type)) // image/* mime type case\n\t\t{\n\t\t\tif (baseMimeType === type.replace(/\\/.*$/, ''))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (mimeType === type)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isValidFileType;","import Filter from './filter';\nimport isValidFileType from '../helpers/is-valid-file-type';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class FileTypeFilter extends Filter\n{\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (isValidFileType(file.getFile(), this.getUploader().getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new UploaderError('FILE_TYPE_NOT_ALLOWED'));\n\t\t\t}\n\t\t});\n\t}\n}\n","const getArrayBuffer = (file: File | Blob): Promise<ArrayBuffer> => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.readAsArrayBuffer(file);\n\n\t\tfileReader.onload = () => {\n\t\t\tconst buffer: ArrayBuffer = fileReader.result;\n\n\t\t\tresolve(buffer);\n\t\t};\n\n\t\tfileReader.onerror = () => {\n\t\t\treject(fileReader.error);\n\t\t};\n\t});\n};\n\nexport default getArrayBuffer;","const convertStringToBuffer = (str: string): ArrayLike => {\n\tconst result = [];\n\tfor (let i = 0; i < str.length; i++)\n\t{\n\t\tresult.push(str.charCodeAt(i) & 0xFF);\n\t}\n\n\treturn result;\n};\nexport default convertStringToBuffer;","const compareBuffers = (dataView: DataView, dest: ArrayLike, start: number): boolean => {\n\tfor (let i = start, j = 0; j < dest.length;)\n\t{\n\t\tif (dataView.getUint8(i++) !== dest[j++])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport default compareBuffers;","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst GIF87a = convertStringToBuffer('GIF87a');\nconst GIF89a = convertStringToBuffer('GIF89a');\n\nexport default class Gif\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 10)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 10);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, GIF87a, 0) && !compareBuffers(view, GIF89a, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint16(6, true),\n\t\t\t\t\t\theight: view.getUint16(8, true),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\nimport type { ImageSize } from '../image-size-type';\n\nconst PNG_SIGNATURE = convertStringToBuffer('\\x89PNG\\r\\n\\x1a\\n');\nconst IHDR_SIGNATURE = convertStringToBuffer('IHDR');\nconst FRIED_CHUNK_NAME = convertStringToBuffer('CgBI');\n\nexport default class Png\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 40)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 40);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, PNG_SIGNATURE, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (compareBuffers(view, FRIED_CHUNK_NAME, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (compareBuffers(view, IHDR_SIGNATURE, 28))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\twidth: view.getUint32(32),\n\t\t\t\t\t\t\t\theight: view.getUint32(36),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (compareBuffers(view, IHDR_SIGNATURE, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: view.getUint32(16),\n\t\t\t\t\t\t\theight: view.getUint32(20),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst BMP_SIGNATURE = 0x424d; // BM\n\nexport default class Bmp\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 26)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 26);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (!view.getUint16(0) === BMP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint32(18, true),\n\t\t\t\t\t\theight: Math.abs(view.getInt32(22, true)),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst EXIF_SIGNATURE = convertStringToBuffer('Exif\\0\\0');\n\nexport default class Jpeg\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 2)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tgetArrayBuffer(file)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint8(0) !== 0xFF || view.getUint8(1) !== 0xD8)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offset = 2;\n\t\t\t\t\tlet orientation = -1;\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (view.getUint8(offset++) !== 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet code = view.getUint8(offset++);\n\t\t\t\t\t\tlet length;\n\n\t\t\t\t\t\t// skip padding bytes\n\t\t\t\t\t\twhile (code === 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcode = view.getUint8(offset++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((0xD0 <= code && code <= 0xD9) || code === 0x01)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (0xC0 <= code && code <= 0xFE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// the rest of the unreserved markers\n\t\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlength = view.getUint16(offset) - 2;\n\t\t\t\t\t\t\toffset += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// unknown markers\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (code === 0xD9 /* EOI */ || code === 0xDA /* SOS */)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// end of the datastream\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try to get orientation from Exif segment\n\t\t\t\t\t\tif (code === 0xE1 && length >= 10 && compareBuffers(view, EXIF_SIGNATURE, offset))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst exifBlock = new DataView(view.buffer, offset + 6, offset + length);\n\t\t\t\t\t\t\torientation = getOrientation(exifBlock);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlength >= 5\n\t\t\t\t\t\t\t&& (0xC0 <= code && code <= 0xCF)\n\t\t\t\t\t\t\t&& code !== 0xC4 && code !== 0xC8 && code !== 0xCC\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (view.byteLength - offset < length)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet width = view.getUint16(offset + 3);\n\t\t\t\t\t\t\tlet height = view.getUint16(offset + 1);\n\t\t\t\t\t\t\tif (orientation >= 5 && orientation <= 8)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[width, height] = [height, width];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn resolve({\n\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\torientation,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset += length;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n\nconst Marker = {\n\tBIG_ENDIAN: 0x4d4d,\n\tLITTLE_ENDIAN: 0x4949,\n};\n\nconst getOrientation = (exifBlock: DataView) => {\n\tconst byteAlign = exifBlock.getUint16(0);\n\tconst isBigEndian = byteAlign === Marker.BIG_ENDIAN;\n\tconst isLittleEndian = byteAlign === Marker.LITTLE_ENDIAN;\n\n\tif (isBigEndian || isLittleEndian)\n\t{\n\t\treturn extractOrientation(exifBlock, isLittleEndian);\n\t}\n\n\treturn -1;\n};\n\nconst extractOrientation = (exifBlock: DataView, littleEndian: boolean = false) => {\n\n\tconst offset = 8; // idf offset\n\tconst idfDirectoryEntries = exifBlock.getUint16(offset, littleEndian);\n\n\tconst IDF_ENTRY_BYTES = 12;\n\tconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\n\n\tfor (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++)\n\t{\n\t\tconst start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n\t\tconst end = start + IDF_ENTRY_BYTES;\n\n\t\t// Skip on corrupt EXIF blocks\n\t\tif (start > exifBlock.byteLength)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst block = new DataView(exifBlock.buffer, exifBlock.byteOffset + start, end - start);\n\t\tconst tagNumber = block.getUint16(0, littleEndian);\n\n\t\t// 274 is the `orientation` tag ID\n\t\tif (tagNumber === 274)\n\t\t{\n\t\t\tconst dataFormat = block.getUint16(2, littleEndian)\n\t\t\tif (dataFormat !== 3)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tconst numberOfComponents = block.getUint32(4, littleEndian);\n\t\t\tif (numberOfComponents !== 1)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn block.getUint16(8, littleEndian)\n\t\t}\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst RIFF_HEADER = 0x52494646; // RIFF\nconst WEBP_SIGNATURE = 0x57454250; // WEBP\nconst VP8_SIGNATURE = 0x56503820; // VP8\nconst VP8L_SIGNATURE = 0x5650384c; // VP8L\nconst VP8X_SIGNATURE = 0x56503858; // VP8X\n\nexport default class Webp\n{\n\tgetSize(file: File): Promise<?ImageSize>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 16)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 30);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint32(0) !== RIFF_HEADER && view.getUint32(8) !== WEBP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst headerType = view.getUint32(12);\n\t\t\t\t\tconst headerView = new DataView(buffer, 20, 10);\n\t\t\t\t\tif (headerType === VP8_SIGNATURE && headerView.getUint8(0) !== 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: headerView.getUint16(6, true) & 0x3fff,\n\t\t\t\t\t\t\theight: headerView.getUint16(8, true) & 0x3fff,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8L_SIGNATURE && headerView.getUint8(0) === 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst bits = headerView.getUint32(1, true);\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: (bits & 0x3FFF) + 1,\n\t\t\t\t\t\t\theight: ((bits >> 14) & 0x3FFF) + 1,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8X_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst extendedHeader = headerView.getUint8(0);\n\t\t\t\t\t\tconst validStart = (extendedHeader & 0xc0) === 0;\n\t\t\t\t\t\tconst validEnd = (extendedHeader & 0x01) === 0;\n\t\t\t\t\t\tif (validStart && validEnd)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst width = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(6) << 16)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(5) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(4)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst height = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(9) << 0)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(8) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(7)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresolve({ width, height });\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import Gif from './types/gif';\nimport Png from './types/png';\nimport Bmp from './types/bmp';\nimport Jpeg from './types/jpeg';\nimport Webp from './types/webp';\n\nimport getFileExtension from '../get-file-extension';\nimport type { ImageSize } from './image-size-type';\n\nconst jpg = new Jpeg();\nconst typeHandlers = {\n\tgif: new Gif(),\n\tpng: new Png(),\n\tbmp: new Bmp(),\n\tjpg: jpg,\n\tjpeg: jpg,\n\tjpe: jpg,\n\twebp: new Webp()\n};\n\nconst getImageSize = (file: File): Promise<?ImageSize> => {\n\tif (file.size === 0)\n\t{\n\t\treturn Promise.resolve(null);\n\t}\n\n\tconst extension = getFileExtension(file.name).toLowerCase();\n\tconst type = file.type.replace(/^image\\//, '');\n\tconst typeHandler = typeHandlers[extension] || typeHandlers[type];\n\tif (!typeHandler)\n\t{\n\t\treturn Promise.resolve(null);\n\t}\n\n\treturn typeHandler.getSize(file);\n};\n\nexport default getImageSize;\n\n","import { Type } from 'main.core';\n\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport getImageSize from '../helpers/image-size/get-image-size';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\n\nexport default class ImageSizeFilter extends Filter\n{\n\timageMinWidth: number = 1;\n\timageMinHeight: number = 1;\n\timageMaxWidth: number = 10000;\n\timageMaxHeight: number = 10000;\n\tignoreUnknownImageTypes: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\t['imageMinWidth', 'imageMinHeight', 'imageMaxWidth', 'imageMaxHeight'].forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] > 0 ? options[option] : this[option];\n\t\t});\n\n\t\tif (Type.isBoolean(options['ignoreUnknownImageTypes']))\n\t\t{\n\t\t\tthis.ignoreUnknownImageTypes = options['ignoreUnknownImageTypes'];\n\t\t}\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (!file.isImage())\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgetImageSize(file.getFile())\n\t\t\t\t.then(({ width, height }) => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\n\t\t\t\t\tif (width < this.imageMinWidth || height < this.imageMinHeight)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t'IMAGE_IS_TOO_SMALL',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tminWidth: this.imageMinWidth,\n\t\t\t\t\t\t\t\tminHeight: this.imageMinHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\telse if (width > this.imageMaxWidth || height > this.imageMaxHeight)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t'IMAGE_IS_TOO_BIG',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxWidth: this.imageMaxWidth,\n\t\t\t\t\t\t\t\tmaxHeight: this.imageMaxHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tif (this.ignoreUnknownImageTypes)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError('IMAGE_TYPE_NOT_SUPPORTED'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import createUniqueId from './create-unique-id';\n\nconst createWorker = (fn: Function) => {\n\tconst workerBlob = new Blob(['(', fn.toString(), ')()'], { type: 'application/javascript' });\n\tconst workerURL = URL.createObjectURL(workerBlob);\n\tconst worker = new Worker(workerURL);\n\n\treturn {\n\t\tpost: (message, callback, transfer): void => {\n\t\t\tconst id = createUniqueId();\n\t\t\tworker.onmessage = event => {\n\t\t\t\tif (event.data.id === id)\n\t\t\t\t{\n\t\t\t\t\tcallback(event.data.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.postMessage({ id, message }, transfer);\n\t\t},\n\t\tterminate: (): void => {\n\t\t\tworker.terminate();\n\t\t\tURL.revokeObjectURL(workerURL);\n\t\t}\n\t};\n};\n\nexport default createWorker;","const BitmapWorker = function() {\n\tself.onmessage = event => {\n\t\tcreateImageBitmap(event.data.message.file)\n\t\t\t.then(bitmap => {\n\t\t\t\tself.postMessage({ id: event.data.id, message: bitmap }, [bitmap]);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tself.postMessage({ id: event.data.id, message: null }, []);\n\t\t\t})\n\t\t;\n\t};\n};\n\nexport default BitmapWorker;","const loadImage = (file: File | Blob) => new Promise((resolve, reject) => {\n\n\tconst image = document.createElement('img');\n\tconst url = URL.createObjectURL(file);\n\timage.src = url;\n\n\timage.onerror = error => {\n\t\tURL.revokeObjectURL(image.src);\n\t\treject(error);\n\t};\n\n\timage.onload = () => {\n\t\tURL.revokeObjectURL(url);\n\t\tresolve({\n\t\t\twidth: image.naturalWidth,\n\t\t\theight: image.naturalHeight,\n\t\t\timage\n\t\t});\n\t};\n});\n\nexport default loadImage;","const createImagePreview = (data, width: number, height: number) => {\n\twidth = Math.round(width);\n\theight = Math.round(height);\n\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst context = canvas.getContext('2d');\n\t// context.imageSmoothingQuality = 'high';\n\tcontext.drawImage(data, 0, 0, width, height);\n\n\treturn canvas;\n};\n\nexport default createImagePreview;","const getFilenameWithoutExtension = (name) => {\n\treturn name.substr(0, name.lastIndexOf('.')) || name;\n};\n\nexport default getFilenameWithoutExtension;","import getFilenameWithoutExtension from './get-filename-without-extension';\n\nconst extensionMap = {\n\t'jpeg': 'jpg',\n};\n\nconst renameFileToMatchMimeType = (filename, mimeType) => {\n\tconst name = getFilenameWithoutExtension(filename);\n\tconst type = mimeType.split('/')[1];\n\tconst extension = extensionMap[type] || type;\n\n\treturn `${name}.${extension}`;\n};\n\nexport default renameFileToMatchMimeType;","import createBlobFromDataUri from './create-blob-from-data-uri';\n\nconst canvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\nconst hasToBlobSupport = window.HTMLCanvasElement && canvasPrototype.toBlob;\n\nconst convertCanvasToBlob = (canvas: HTMLCanvasElement, type: string, quality: number) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (hasToBlobSupport)\n\t\t{\n\t\t\tcanvas.toBlob((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t}, type, quality);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(canvas.toDataURL(type, quality));\n\n\t\t\tresolve(blob);\n\t\t}\n\t});\n};\n\nexport default convertCanvasToBlob;","import createWorker from './create-worker';\nimport BitmapWorker from './bitmap-worker';\nimport loadImage from './load-image';\nimport createImagePreview from './create-image-preview';\nimport renameFileToMatchMimeType from './rename-file-to-match-mime-type';\nimport createFileFromBlob from './create-file-from-blob';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\n\ntype ResizeImageOptions = {\n\tmode?: 'contain' | 'crop' | 'force',\n\tupscale?: boolean,\n\twidth?: number,\n\theight?: number,\n\tquality?: number,\n};\n\nconst canCreateImageBitmap = (\n\t'createImageBitmap' in window\n\t&& typeof ImageBitmap !== 'undefined'\n\t&& ImageBitmap.prototype\n\t&& ImageBitmap.prototype.close\n);\n\nconst resizeImage = (file: File, options: ResizeImageOptions) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst loadImageDataFallback = () => {\n\t\t\tloadImage(file)\n\t\t\t\t.then(({ image }) => {\n\t\t\t\t\thandleImageLoad(image);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t};\n\n\t\tconst handleImageLoad = (imageData: ImageBitmap | HTMLImageElement) => {\n\t\t\tconst { targetWidth, targetHeight } = calcTargetSize(imageData, options);\n\t\t\tif (!targetWidth || !targetHeight)\n\t\t\t{\n\t\t\t\tif ('close' in imageData)\n\t\t\t\t{\n\t\t\t\t\timageData.close();\n\t\t\t\t}\n\n\t\t\t\tresolve({\n\t\t\t\t\tpreview: file,\n\t\t\t\t\twidth: imageData.width,\n\t\t\t\t\theight: imageData.height,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst canvas = createImagePreview(imageData, targetWidth, targetHeight);\n\n\t\t\t// if it was ImageBitmap\n\t\t\tif ('close' in imageData)\n\t\t\t{\n\t\t\t\timageData.close();\n\t\t\t}\n\n\t\t\tconst { quality = 0.92, mimeType = 'image/jpeg' } = options;\n\t\t\tconst type = /jpeg|png|webp/.test(file.type) ? file.type : mimeType;\n\n\t\t\tconvertCanvasToBlob(canvas, type, quality)\n\t\t\t\t.then((blob: Blob) => {\n\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(file.name, type);\n\t\t\t\t\tconst preview = createFileFromBlob(blob, newFileName);\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\treject();\n\t\t\t\t})\n\t\t\t;\n\t\t};\n\n\t\tif (canCreateImageBitmap)\n\t\t{\n\t\t\tconst bitmapWorker = createWorker(BitmapWorker);\n\t\t\tbitmapWorker.post({ file },\n\t\t\t\t(imageBitmap: ImageBitmap) => {\n\t\t\t\t\tbitmapWorker.terminate();\n\t\t\t\t\tif (imageBitmap)\n\t\t\t\t\t{\n\t\t\t\t\t\thandleImageLoad(imageBitmap);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tloadImageDataFallback();\n\t\t}\n\t});\n};\n\nexport default resizeImage;\n\nconst calcTargetSize = (imageData: ImageBitmap | HTMLImageElement, options = {}) => {\n\tlet { mode = 'contain', upscale = false, width, height } = options;\n\n\tconst result = {\n\t\ttargetWidth: 0,\n\t\ttargetHeight: 0,\n\t};\n\n\tif (!width && !height)\n\t{\n\t\treturn result;\n\t}\n\n\tif (width === null)\n\t{\n\t\twidth = height;\n\t}\n\telse if (height === null)\n\t{\n\t\theight = width;\n\t}\n\n\tif (mode !== 'force')\n\t{\n\t\tconst ratioWidth = width / imageData.width;\n\t\tconst ratioHeight = height / imageData.height;\n\t\tlet ratio = 1;\n\n\t\tif (mode === 'cover')\n\t\t{\n\t\t\tratio = Math.max(ratioWidth, ratioHeight);\n\t\t}\n\t\telse if (mode === 'contain')\n\t\t{\n\t\t\tratio = Math.min(ratioWidth, ratioHeight);\n\t\t}\n\n\t\t// if image is too small, exit here with original image\n\t\tif (ratio > 1 && upscale === false)\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\twidth = imageData.width * ratio;\n\t\theight = imageData.height * ratio;\n\t}\n\n\t/*if (mode === 'crop')\n\t{\n\t\tconst sourceImageRatio = sourceImageWidth / sourceImageHeight;\n\t\tconst targetRatio = targetWidth / targetHeight;\n\n\t\tif (sourceImageRatio > targetRatio)\n\t\t{\n\t\t\tconst newWidth = sourceImageHeight * targetRatio;\n\t\t\tsrcX = (sourceImageWidth - newWidth) / 2;\n\t\t\tsourceImageWidth = newWidth;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst newHeight = sourceImageWidth / targetRatio;\n\t\t\tsrcY = (sourceImageHeight - newHeight) / 2;\n\t\t\tsourceImageHeight = newHeight;\n\t\t}\n\n\t\tcontext.drawImage(image, srcX, srcY, sourceImageWidth, sourceImageHeight, 0, 0, targetWidth, targetHeight);\n\t}*/\n\n\tresult.targetWidth = Math.round(width);\n\tresult.targetHeight = Math.round(height);\n\n\treturn result;\n};","import { Type } from 'main.core';\n\nimport Filter from './filter';\nimport resizeImage from '../helpers/resize-image';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class ImagePreviewFilter extends Filter\n{\n\timagePreviewWidth: number = 300;\n\timagePreviewHeight: number = 300;\n\timagePreviewQuality: number = 0.92;\n\timagePreviewMimeType: string = 'image/jpeg';\n\timagePreviewUpscale: boolean = false;\n\timagePreviewResizeMethod: string = 'contain';\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tconst integerOptions = [\n\t\t\t'imagePreviewWidth',\n\t\t\t'imagePreviewHeight',\n\t\t\t'imagePreviewQuality',\n\t\t];\n\n\t\tintegerOptions.forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] > 0 ? options[option] : this[option];\n\t\t});\n\n\t\tif (Type.isBoolean(options['imagePreviewUpscale']))\n\t\t{\n\t\t\tthis.imagePreviewUpscale = options['imagePreviewUpscale'];\n\t\t}\n\n\t\tif (['contain', 'force', 'cover'].includes(options['imagePreviewResizeMethod']))\n\t\t{\n\t\t\tthis.imagePreviewResizeMethod = options['imagePreviewResizeMethod'];\n\t\t}\n\n\t\tif (['image/jpeg', 'image/png'].includes(options['imagePreviewMimeType']))\n\t\t{\n\t\t\tthis.imagePreviewMimeType = options['imagePreviewMimeType'];\n\t\t}\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!isResizableImage(file.getFile()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\twidth: this.imagePreviewWidth,\n\t\t\t\theight: this.imagePreviewHeight,\n\t\t\t\tmode: this.imagePreviewResizeMethod,\n\t\t\t\tupscale: this.imagePreviewUpscale,\n\t\t\t\tquality: this.imagePreviewQuality,\n\t\t\t\tmimeType: this.imagePreviewMimeType,\n\t\t\t};\n\n\t\t\tresizeImage(file.getFile(), options)\n\t\t\t\t.then(({ preview, width, height }) => {\n\n\t\t\t\t\t//setTimeout(() => {\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t//}, 60000);\n\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\n\nimport isResizableImage from '../helpers/is-resizable-image';\nimport resizeImage from '../helpers/resize-image';\n\nimport type Uploader from '../uploader';\n\nexport default class TransformImageFilter extends Filter\n{\n\tresizeWidth: number = null;\n\tresizeHeight: number = null;\n\tresizeMethod: string = 'contain';\n\tresizeMimeType: string = 'image/jpeg';\n\tresizeQuality: number = 0.92;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tif (Type.isNumber(options['imageResizeWidth']) && options['imageResizeWidth'] > 0)\n\t\t{\n\t\t\tthis.resizeWidth = options['imageResizeWidth'];\n\t\t}\n\n\t\tif (Type.isNumber(options['imageResizeHeight']) && options['imageResizeHeight'] > 0)\n\t\t{\n\t\t\tthis.resizeHeight = options['imageResizeHeight'];\n\t\t}\n\n\t\tif (['contain', 'force', 'cover'].includes(options['imageResizeMethod']))\n\t\t{\n\t\t\tthis.resizeMethod = options['imageResizeMethod'];\n\t\t}\n\n\t\tif (Type.isNumber(options['imageResizeQuality']))\n\t\t{\n\t\t\tthis.resizeQuality = Math.min(Math.max(0.1, options['imageResizeQuality']), 1);\n\t\t}\n\n\t\tif (['image/jpeg', 'image/png'].includes(options['imageResizeMimeType']))\n\t\t{\n\t\t\tthis.resizeMimeType = options['imageResizeMimeType'];\n\t\t}\n\t}\n\n\tapply(file: File): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!isResizableImage(file))\n\t\t\t{\n\t\t\t\treturn resolve(file);\n\t\t\t}\n\n\t\t\tif (this.resizeWidth === null && this.resizeHeight === null)\n\t\t\t{\n\t\t\t\treturn resolve(file);\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\twidth: this.resizeWidth,\n\t\t\t\theight: this.resizeHeight,\n\t\t\t\tmode: this.resizeMethod,\n\t\t\t\tquality: this.resizeQuality,\n\t\t\t\tmimeType: this.resizeMimeType,\n\t\t\t};\n\n\t\t\tresizeImage(file, options)\n\t\t\t\t.then(({ preview }) => {\n\t\t\t\t\tresolve(preview);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(file);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","export const UploaderStatus = {\n\tSTARTED: 0,\n\tSTOPPED: 1,\n};","export const FilterType = {\n\tVALIDATION: 'validation',\n\tPREPARATION: 'preparation',\n};","const getFilesFromDataTransfer = (dataTransfer: DataTransfer) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!dataTransfer.items)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = Array.from(dataTransfer.items)\n\t\t\t.filter(item => isFileSystemItem(item))\n\t\t\t.map(item => getFilesFromItem(item))\n\t\t;\n\n\t\tPromise.all(items)\n\t\t\t.then((fileGroups: Array<File[]>) => {\n\t\t\t\tconst files = [];\n\t\t\t\tfileGroups.forEach((group: File[]) => {\n\t\t\t\t\tfiles.push.apply(files, group);\n\t\t\t\t});\n\n\t\t\t\tresolve(files);\n\t\t\t})\n\t\t\t.catch(reject)\n\t\t;\n\t});\n};\n\nexport default getFilesFromDataTransfer;\n\nconst isFileSystemItem = (item: DataTransferItem) => {\n\tif ('webkitGetAsEntry' in item)\n\t{\n\t\tconst entry = item.webkitGetAsEntry();\n\t\tif (entry)\n\t\t{\n\t\t\treturn entry.isFile || entry.isDirectory;\n\t\t}\n\t}\n\n\treturn item.kind === 'file';\n};\n\nconst getFilesFromItem = (item: DataTransferItem) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (isDirectoryEntry(item))\n\t\t{\n\t\t\tgetFilesInDirectory(getAsEntry(item))\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t;\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolve([item.getAsFile()]);\n\t});\n};\n\nconst getFilesInDirectory = entry => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst files = [];\n\t\tlet dirCounter = 0;\n\t\tlet fileCounter = 0;\n\n\t\tconst resolveIfDone = () => {\n\t\t\tif (fileCounter === 0 && dirCounter === 0)\n\t\t\t{\n\t\t\t\tresolve(files);\n\t\t\t}\n\t\t};\n\n\t\tconst readEntries = dirEntry => {\n\t\t\tdirCounter++;\n\t\t\tconst directoryReader = dirEntry.createReader();\n\t\t\tconst readBatch = () => {\n\t\t\t\tdirectoryReader.readEntries(entries => {\n\t\t\t\t\tif (entries.length === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdirCounter--;\n\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tentries.forEach(entry => {\n\t\t\t\t\t\tif (entry.isDirectory)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadEntries(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileCounter++;\n\t\t\t\t\t\t\tentry.file(file => {\n\t\t\t\t\t\t\t\tfiles.push(file);\n\t\t\t\t\t\t\t\tfileCounter--;\n\t\t\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treadBatch();\n\t\t\t\t}, reject);\n\t\t\t};\n\n\t\t\treadBatch();\n\t\t};\n\n\t\treadEntries(entry);\n\t});\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\nconst isEntry = item => 'webkitGetAsEntry' in item;\nconst getAsEntry = item => item.webkitGetAsEntry();","let result = null;\n\nconst canAppendFileToForm = () => {\n\tif (result === null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst dataTransfer = new DataTransfer();\n\t\t\tconst file = new File(['hello'], 'my.txt');\n\t\t\tdataTransfer.items.add(file);\n\n\t\t\tconst input = document.createElement('input');\n\t\t\tinput.setAttribute('type', 'file');\n\t\t\tinput.files = dataTransfer.files;\n\n\t\t\tresult = input.files.length === 1;\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport default canAppendFileToForm;","import { Type } from 'main.core';\n\nconst assignFileToInput = (input: HTMLInputElement, file: File | File[]) => {\n\ttry\n\t{\n\t\tconst dataTransfer = new DataTransfer();\n\t\tconst files = Type.isArray(file) ? file : [file];\n\n\t\tfiles.forEach(file => {\n\t\t\tdataTransfer.items.add(file);\n\t\t});\n\n\t\tinput.files = dataTransfer.files;\n\t}\n\tcatch (error)\n\t{\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport default assignFileToInput;","import { Type, Event, Reflection, Dom, Extension } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport UploaderFile from './uploader-file';\nimport UploaderError from './uploader-error';\nimport Server from './backend/server';\n\nimport Filter from './filters/filter';\nimport FileSizeFilter from './filters/file-size-filter';\nimport FileTypeFilter from './filters/file-type-filter';\nimport ImageSizeFilter from './filters/image-size-filter';\nimport ImagePreviewFilter from './filters/image-preview-filter';\nimport TransformImageFilter from './filters/transform-image-filter';\n\nimport { FileStatus } from './enums/file-status';\nimport { UploaderStatus } from './enums/uploader-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FilterType } from './enums/filter-type';\n\nimport getFilesFromDataTransfer from './helpers/get-files-from-data-transfer';\nimport canAppendFileToForm from './helpers/can-append-file-to-form';\nimport assignFileToInput from './helpers/assign-file-to-input';\n\nimport type { UploaderOptions } from './types/uploader-options';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\n\nexport default class Uploader extends EventEmitter\n{\n\tfiles: UploaderFile[] = [];\n\tmultiple: boolean = false;\n\tautoUpload: boolean = true;\n\tallowReplaceSingle: boolean = true;\n\tmaxParallelUploads: number = 2;\n\tmaxParallelLoads: number = 10;\n\tacceptOnlyImages: boolean = false;\n\tacceptedFileTypes: string[] = [];\n\tignoredFileNames: string[] = ['.ds_store', 'thumbs.db', 'desktop.ini'];\n\tmaxFileCount: ?number = null;\n\tserver: Server = null;\n\n\thiddenFields: Map<string, HTMLInputElement> = new Map();\n\thiddenFieldsContainer: HTMLElement = null;\n\thiddenFieldName: string = 'file';\n\tassignAsFile: boolean = false;\n\n\tfilters: Map<FilterType, Filter[]> = new Map();\n\tstatus: UploaderStatus = UploaderStatus.STOPPED;\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader');\n\n\t\tconst options = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\n\t\tthis.multiple = Type.isBoolean(options.multiple) ? options.multiple : false;\n\t\tthis.acceptOnlyImages = Type.isBoolean(options.acceptOnlyImages) ? options.acceptOnlyImages : false;\n\n\t\tthis.setAutoUpload(options.autoUpload);\n\t\tthis.setMaxParallelUploads(options.maxParallelUploads);\n\t\tthis.setMaxParallelLoads(options.maxParallelLoads);\n\n\t\tif (this.acceptOnlyImages)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tconst imageExtensions = settings.get('imageExtensions', 'jpg,bmp,jpeg,jpe,gif,png,webp');\n\t\t\tthis.setAcceptedFileTypes(imageExtensions);\n\t\t}\n\n\t\tthis.setAcceptedFileTypes(options.acceptedFileTypes);\n\t\tthis.setIgnoredFileNames(options.ignoredFileNames);\n\t\tthis.setMaxFileCount(options.maxFileCount);\n\t\tthis.setAllowReplaceSingle(options.allowReplaceSingle);\n\n\t\tthis.assignBrowse(options.browseElement);\n\t\tthis.assignDropzone(options.dropElement);\n\t\tthis.assignPaste(options.pasteElement);\n\n\t\tthis.setHiddenFieldsContainer(options.hiddenFieldsContainer);\n\t\tthis.setHiddenFieldName(options.hiddenFieldName);\n\t\tthis.setAssignAsFile(options.assignAsFile);\n\n\t\tlet serverOptions = Type.isPlainObject(options.serverOptions) ? options.serverOptions : {};\n\t\tserverOptions = Object.assign(\n\t\t\t{},\n\t\t\t{ controller: options.controller, controllerOptions: options.controllerOptions },\n\t\t\tserverOptions\n\t\t);\n\n\t\tthis.server = new Server(serverOptions);\n\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\tthis.addFilter(FilterType.VALIDATION, new FileSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new FileTypeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImageSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImagePreviewFilter(this, options));\n\t\tthis.addFilter(FilterType.PREPARATION, new TransformImageFilter(this, options));\n\t\tthis.addFilters(options.filters);\n\n\t\tthis.handleBeforeUpload = this.handleBeforeUpload.bind(this);\n\t\tthis.handlePrepareFileAsync = this.handlePrepareFileAsync.bind(this);\n\t\tthis.handleUploadStart = this.handleBeforeUpload.bind(this);\n\t\tthis.handleFileCancel = this.handleFileCancel.bind(this);\n\t\tthis.handleFileStatusChange = this.handleFileStatusChange.bind(this);\n\t\tthis.handleFileStateChange = this.handleFileStateChange.bind(this);\n\n\t\tthis.addFiles(options.files);\n\t}\n\n\taddFiles(fileList: ArrayLike): void\n\t{\n\t\tif (!Type.isArrayLike(fileList))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst files = Array.from(fileList);\n\t\tif (this.#exceedsMaxFileCount(files))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tfiles.forEach(file => {\n\t\t\tif (Type.isArrayFilled(file))\n\t\t\t{\n\t\t\t\tthis.addFile(file[0], file[1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addFile(file);\n\t\t\t}\n\t\t});\n\t}\n\n\taddFile(source: File | Blob | string | number, options: UploaderFileOptions)\n\t{\n\t\tconst file = new UploaderFile(source, options);\n\n\t\tif (this.getIgnoredFileNames().includes(file.getName().toLowerCase()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#exceedsMaxFileCount([file]))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isMultiple() && this.shouldReplaceSingle() && this.getFiles().length > 0)\n\t\t{\n\t\t\tconst fileToReplace: UploaderFile = this.getFiles()[0];\n\t\t\tthis.removeFile(fileToReplace);\n\t\t}\n\n\t\tconst event = new BaseEvent({ data: { file: file } });\n\t\tthis.emit('File:onBeforeAdd', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setLoadController(file);\n\t\tthis.#setUploadController(file);\n\n\t\tthis.files.push(file);\n\t\tfile.setStatus(FileStatus.ADDED);\n\n\t\tthis.emit('File:onAddStart', { file });\n\n\t\tfile.subscribe('onBeforeUpload', this.handleBeforeUpload);\n\t\tfile.subscribe('onPrepareFileAsync', this.handlePrepareFileAsync);\n\t\tfile.subscribe('onUploadStart', this.handleUploadStart);\n\t\tfile.subscribe('onCancel', this.handleFileCancel);\n\t\tfile.subscribe('onStatusChange', this.handleFileStatusChange);\n\t\tfile.subscribe('onStateChange', this.handleFileStateChange);\n\n\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t{\n\t\t\tfile.load();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#loadNext();\n\t\t}\n\t}\n\n\t#setLoadController(file: UploaderFile): void\n\t{\n\t\tconst loadController =\n\t\t\tfile.getOrigin() === FileOrigin.SERVER\n\t\t\t\t? this.getServer().createLoadController()\n\t\t\t\t: this.getServer().createClientLoadController()\n\t\t;\n\n\t\tloadController.subscribeFromOptions({\n\t\t\t'onError': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\tthis.emit('File:onError', { file, error: event.getData().error });\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t'onAbort': (event: BaseEvent) => {\n\t\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t\t{\n\t\t\t\t\tfile.setStatus(FileStatus.ABORTED);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t}\n\n\t\t\t\tthis.emit('File:onAbort', { file });\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t'onProgress': (event: BaseEvent) => {\n\t\t\t\tthis.emit('File:onLoadProgress', { file, progress: event.getData().progress });\n\t\t\t},\n\t\t\t'onLoad': (event: BaseEvent) => {\n\t\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t\t{\n\t\t\t\t\tfile.setFile(event.getData().fileInfo);\n\t\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\t\t\t\t\tthis.emit('File:onComplete', { file });\n\n\t\t\t\t\tthis.#setHiddenField(file);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Validation\n\t\t\t\tthis.#applyFilters(FilterType.VALIDATION, file)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (file.isUploadable())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setStatus(FileStatus.PENDING);\n\t\t\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\n\t\t\t\t\t\t\tif (this.shouldAutoUpload())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfile.upload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\t\t\t\t\t\t\tthis.emit('File:onComplete', { file });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.#loadNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\tthis.emit('File:onError', { file, error });\n\t\t\t\t\t\tthis.emit('File:onAdd', { file, error });\n\t\t\t\t\t\tthis.#loadNext();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t},\n\t\t});\n\n\t\tfile.setLoadController(loadController);\n\t}\n\n\t#setUploadController(file: UploaderFile): void\n\t{\n\t\tconst uploadController = this.getServer().createUploadController();\n\t\tif (!uploadController)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tuploadController.subscribeFromOptions({\n\t\t\t'onError': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit('File:onError', { file, error: event.getData().error });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t'onAbort': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.ABORTED);\n\t\t\t\tthis.emit('File:onAbort', { file });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t'onProgress': (event: BaseEvent) => {\n\t\t\t\tthis.emit('File:onUploadProgress', { file, progress: event.getData().progress });\n\t\t\t},\n\t\t\t'onUpload': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\tfile.setFile(event.getData().fileInfo);\n\t\t\t\tthis.emit('File:onUploadComplete', { file });\n\t\t\t\tthis.emit('File:onComplete', { file });\n\n\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t});\n\n\t\tfile.setUploadController(uploadController);\n\t}\n\n\t#exceedsMaxFileCount(fileList: Array): boolean\n\t{\n\t\tconst totalNewFiles = fileList.length;\n\t\tconst totalFiles = this.getFiles().length;\n\n\t\tif (!this.isMultiple() && totalNewFiles > 1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet maxFileCount;\n\t\tif (this.isMultiple())\n\t\t{\n\t\t\tmaxFileCount = this.getMaxFileCount();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxFileCount = this.shouldReplaceSingle() ? null : 1;\n\t\t}\n\n\t\tif (maxFileCount !== null && totalFiles + totalNewFiles > maxFileCount)\n\t\t{\n\t\t\tconst error = new UploaderError('MAX_FILE_COUNT_EXCEEDED', { maxFileCount });\n\t\t\tthis.emit('onMaxFileCountExceeded', { error });\n\t\t\tthis.emit('onError', { error });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#applyFilters(type: FilterType, ...args): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst filters = [...(this.filters.get(type) || [])];\n\t\t\tif (filters.length === 0)\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstFilter: Filter = filters.shift();\n\n\t\t\t// chain filters\n\t\t\tfilters\n\t\t\t\t.reduce(\n\t\t\t\t\t(current: Promise, next: Filter) => {\n\t\t\t\t\t\treturn current.then(() => next.apply(...args));\n\t\t\t\t\t},\n\t\t\t\t\tfirstFilter.apply(...args)\n\t\t\t\t)\n\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\tstart(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED && this.getPendingFileCount() > 0)\n\t\t{\n\t\t\tthis.status = UploaderStatus.STARTED;\n\t\t\tthis.emit('onUploadStart');\n\t\t\tthis.#uploadNext();\n\t\t}\n\t}\n\n\tstop(): void\n\t{\n\t\tthis.status = UploaderStatus.STOPPED;\n\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tif (file.isUploading())\n\t\t\t{\n\t\t\t\tfile.abort();\n\t\t\t\tfile.setStatus(FileStatus.PENDING);\n\t\t\t}\n\t\t});\n\n\t\tthis.emit('onStop');\n\t}\n\n\tcancel(): void\n\t{\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tfile.cancel();\n\t\t});\n\t}\n\n\tdestroy(): void\n\t{\n\t\tthis.emit('onDestroy');\n\n\t\t// TODO\n\t\t// unassignBrowse\n\t\t// unassignDrop\n\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tfile.cancel();\n\t\t});\n\n\t\tfor (const property in this)\n\t\t{\n\t\t\tif (this.hasOwnProperty(property))\n\t\t\t{\n\t\t\t\tdelete this[property];\n\t\t\t}\n\t\t}\n\n\t\tObject.setPrototypeOf(this, null);\n\t}\n\n\tremoveFile(file: UploaderFile | string): void\n\t{\n\t\tif (Type.isString(file))\n\t\t{\n\t\t\tfile = this.getFile(file);\n\t\t}\n\n\t\tconst index = this.files.findIndex(element => element === file);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.files.splice(index, 1);\n\n\t\t\tfile.abort();\n\t\t\tfile.setStatus(FileStatus.INIT);\n\t\t\tthis.emit('File:onRemove', { file });\n\n\t\t\tthis.#resetHiddenField(file);\n\t\t}\n\t}\n\n\tgetFile(id: string): ?UploaderFile\n\t{\n\t\treturn this.getFiles().find((file: UploaderFile) => file.getId() === id) || null;\n\t}\n\n\tgetFiles(): UploaderFile[]\n\t{\n\t\treturn this.files;\n\t}\n\n\tisMultiple(): boolean\n\t{\n\t\treturn this.multiple;\n\t}\n\n\tgetStatus(): UploaderStatus\n\t{\n\t\treturn this.status;\n\t}\n\n\taddFilter(type: FilterType, filter: Filter | Function | string, filterOptions: { [key: string]: any } = {}): void\n\t{\n\t\tif (Type.isFunction(filter) || Type.isString(filter))\n\t\t{\n\t\t\tconst className = Type.isString(filter) ? Reflection.getClass(filter) : filter;\n\t\t\tif (Type.isFunction(className))\n\t\t\t{\n\t\t\t\tfilter = new className(this, filterOptions);\n\t\t\t}\n\t\t}\n\n\t\tif (filter instanceof Filter)\n\t\t{\n\t\t\tlet filters = this.filters.get(type);\n\t\t\tif (!Type.isArray(filters))\n\t\t\t{\n\t\t\t\tfilters = [];\n\t\t\t\tthis.filters.set(type, filters);\n\t\t\t}\n\n\t\t\tfilters.push(filter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Uploader: a filter must be an instance of FileUploader.Filter.');\n\t\t}\n\t}\n\n\taddFilters(filters: Array): void\n\t{\n\t\tif (Type.isArray(filters))\n\t\t{\n\t\t\tfilters.forEach(filter => {\n\t\t\t\tif (Type.isPlainObject(filter))\n\t\t\t\t{\n\t\t\t\t\tthis.addFilter(filter.type, filter.filter, filter.options);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.server;\n\t}\n\n\tassignBrowse(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement) => {\n\t\t\tif (!Type.isElementNode(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet input: HTMLInputElement = null;\n\t\t\tif (node.tagName === 'INPUT' && node.type === 'file')\n\t\t\t{\n\t\t\t\tinput = node;\n\n\t\t\t\t// Add already selected files\n\t\t\t\tif (input.files)\n\t\t\t\t{\n\t\t\t\t\tthis.addFiles(input.files);\n\t\t\t\t}\n\n\t\t\t\tconst acceptAttr = input.getAttribute('accept');\n\t\t\t\tif (Type.isStringFilled(acceptAttr))\n\t\t\t\t{\n\t\t\t\t\tthis.setAcceptedFileTypes(acceptAttr);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput = document.createElement('input');\n\t\t\t\tinput.setAttribute('type', 'file');\n\n\t\t\t\tEvent.bind(node, 'click', () => {\n\t\t\t\t\tinput.click();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.isMultiple())\n\t\t\t{\n\t\t\t\tinput.setAttribute('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(this.getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tinput.setAttribute('accept', this.getAcceptedFileTypes().join(','));\n\t\t\t}\n\n\t\t\tEvent.bind(input, 'change', () => {\n\t\t\t\tthis.addFiles(Array.from(input.files));\n\n\t\t\t\t// reset file input\n\t\t\t\tinput.value = '';\n\t\t\t});\n\t\t});\n\t}\n\n\tassignDropzone(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (!Type.isElementNode(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'dragover', (event: DragEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tEvent.bind(node, 'dragenter', (event: DragEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tEvent.bind(node, 'drop', (event: DragEvent) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tgetFilesFromDataTransfer(event.dataTransfer).then((files: File[]) => {\n\t\t\t\t\tthis.addFiles(files);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tassignPaste(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (!Type.isElementNode(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'paste', (event: ClipboardEvent) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconst clipboardData: DataTransfer = event.clipboardData;\n\t\t\t\tif (!clipboardData)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tgetFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\t\t\tthis.addFiles(files);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetHiddenFieldsContainer(): ?HTMLElement\n\t{\n\t\tlet element = null;\n\t\tif (Type.isStringFilled(this.hiddenFieldsContainer))\n\t\t{\n\t\t\telement = document.querySelector(this.hiddenFieldsContainer);\n\t\t}\n\t\telse if (Type.isElementNode(this.hiddenFieldsContainer))\n\t\t{\n\t\t\telement = this.hiddenFieldsContainer;\n\t\t}\n\n\t\treturn element;\n\t}\n\n\tsetHiddenFieldsContainer(container: string | HTMLElement): void\n\t{\n\t\tif (Type.isStringFilled(container) || Type.isElementNode(container) || Type.isNull(container))\n\t\t{\n\t\t\tthis.hiddenFieldsContainer = container;\n\t\t}\n\t}\n\n\tgetHiddenFieldName(): string\n\t{\n\t\treturn this.hiddenFieldName;\n\t}\n\n\tsetHiddenFieldName(name: string)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.hiddenFieldName = name;\n\t\t}\n\t}\n\n\tshouldAssignAsFile(): boolean\n\t{\n\t\treturn this.assignAsFile;\n\t}\n\n\tsetAssignAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.assignAsFile = flag;\n\t\t}\n\t}\n\n\tgetTotalSize(): number\n\t{\n\t\treturn this.getFiles().reduce((totalSize: number, file: UploaderFile) => {\n\t\t\treturn totalSize + file.getSize();\n\t\t}, 0);\n\t}\n\n\tshouldAutoUpload(): boolean\n\t{\n\t\treturn this.autoUpload;\n\t}\n\n\tsetAutoUpload(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.autoUpload = flag;\n\t\t}\n\t}\n\n\tgetMaxParallelUploads(): number\n\t{\n\t\treturn this.maxParallelUploads;\n\t}\n\n\tsetMaxParallelUploads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.maxParallelUploads = number;\n\t\t}\n\t}\n\n\tgetMaxParallelLoads(): number\n\t{\n\t\treturn this.maxParallelLoads;\n\t}\n\n\tsetMaxParallelLoads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.maxParallelLoads = number;\n\t\t}\n\t}\n\n\tgetUploadingFileCount(): number\n\t{\n\t\treturn this.getFiles().filter(file => file.isUploading()).length;\n\t}\n\n\tgetPendingFileCount(): number\n\t{\n\t\treturn this.getFiles().filter(file => file.isReadyToUpload()).length;\n\t}\n\n\tshouldAcceptOnlyImages(): boolean\n\t{\n\t\treturn this.acceptOnlyImages;\n\t}\n\n\tgetAcceptedFileTypes(): string[]\n\t{\n\t\treturn this.acceptedFileTypes;\n\t}\n\n\tsetAcceptedFileTypes(fileTypes: string | string[]): void\n\t{\n\t\tif (Type.isString(fileTypes))\n\t\t{\n\t\t\tfileTypes = fileTypes.split(',');\n\t\t}\n\n\t\tif (Type.isArray(fileTypes))\n\t\t{\n\t\t\tthis.acceptedFileTypes = [];\n\n\t\t\tfileTypes.forEach(type => {\n\t\t\t\tif (Type.isStringFilled(type))\n\t\t\t\t{\n\t\t\t\t\tthis.acceptedFileTypes.push(type);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetIgnoredFileNames(): string[]\n\t{\n\t\treturn this.ignoredFileNames;\n\t}\n\n\tsetIgnoredFileNames(fileNames: string[]): void\n\t{\n\t\tif (Type.isArray(fileNames))\n\t\t{\n\t\t\tthis.ignoredFileNames = [];\n\n\t\t\tfileNames.forEach(fileName => {\n\t\t\t\tif (Type.isStringFilled(fileName))\n\t\t\t\t{\n\t\t\t\t\tthis.ignoredFileNames.push(fileName.toLowerCase());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetMaxFileCount(maxFileCount: ?number): void\n\t{\n\t\tif ((Type.isNumber(maxFileCount) && maxFileCount > 0) || maxFileCount === null)\n\t\t{\n\t\t\tthis.maxFileCount = maxFileCount;\n\t\t}\n\t}\n\n\tgetMaxFileCount(): ?number\n\t{\n\t\treturn this.maxFileCount;\n\t}\n\n\tsetAllowReplaceSingle(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.allowReplaceSingle = flag;\n\t\t}\n\t}\n\n\tshouldReplaceSingle(): boolean\n\t{\n\t\treturn this.allowReplaceSingle;\n\t}\n\n\t#uploadNext(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxParallelUploads = this.getMaxParallelUploads();\n\t\tconst currentUploads = this.getUploadingFileCount();\n\t\tconst pendingFiles = this.getFiles().filter(file => file.isReadyToUpload());\n\t\tconst pendingUploads = pendingFiles.length;\n\n\t\tif (currentUploads < maxParallelUploads)\n\t\t{\n\t\t\tconst limit = Math.min(maxParallelUploads - currentUploads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile = pendingFiles[i];\n\t\t\t\tpendingFile.upload();\n\t\t\t}\n\t\t}\n\n\t\t// All files are COMPLETE or FAILED\n\t\tif (currentUploads === 0 && pendingUploads === 0)\n\t\t{\n\t\t\tthis.status = UploaderStatus.STOPPED;\n\t\t\tthis.emit('onUploadComplete');\n\t\t}\n\t}\n\n\t#loadNext(): void\n\t{\n\t\tconst maxParallelLoads = this.getMaxParallelLoads();\n\t\tconst currentLoads = this.getFiles().filter(file => file.isLoading()).length;\n\t\tconst pendingFiles = this.getFiles().filter(file => {\n\t\t\treturn file.getStatus() === FileStatus.ADDED && file.getOrigin() === FileOrigin.CLIENT;\n\t\t});\n\n\t\tif (currentLoads < maxParallelLoads)\n\t\t{\n\t\t\tconst limit = Math.min(maxParallelLoads - currentLoads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile = pendingFiles[i];\n\t\t\t\tpendingFile.load();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleBeforeUpload(event: BaseEvent): void\n\t{\n\t\tif (this.getStatus() === UploaderStatus.STOPPED)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.start();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.getUploadingFileCount() >= this.getMaxParallelUploads())\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\thandlePrepareFileAsync(event: BaseEvent): void\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#applyFilters(FilterType.PREPARATION, file)\n\t\t\t\t.then((transformedFile: File) => {\n\t\t\t\t\tif (Type.isFile(transformedFile))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(transformedFile);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(file);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\thandleUploadStart(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onUploadStart', { file });\n\t}\n\n\thandleFileCancel(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onCancel', { file });\n\n\t\tthis.removeFile(file);\n\t}\n\n\thandleFileStatusChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onStatusChange', { file });\n\t}\n\n\thandleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onStateChange', { file });\n\t}\n\n\t#setHiddenField(file: UploaderFile): void\n\t{\n\t\tconst container = this.getHiddenFieldsContainer();\n\t\tif (!container || this.hiddenFields.has(file.getId()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: is it needed?\n\t\tconst isExistingServerFile = Type.isNumber(file.getServerId());\n\t\tif (isExistingServerFile)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst assignAsFile =\n\t\t\tfile.getOrigin() === FileOrigin.CLIENT\n\t\t\t&& !file.isUploadable()\n\t\t\t&& this.shouldAssignAsFile()\n\t\t\t&& canAppendFileToForm()\n\t\t;\n\n\t\tconst input = document.createElement('input');\n\t\tinput.type = assignAsFile ? 'file' : 'hidden';\n\t\tinput.name = this.getHiddenFieldName() + (this.isMultiple() ? '[]' : '');\n\n\t\tif (assignAsFile)\n\t\t{\n\t\t\tDom.style(input, {\n\t\t\t\tvisibility: 'hidden',\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tposition: 'absolute',\n\t\t\t\t'pointer-events': 'none',\n\t\t\t});\n\n\t\t\tassignFileToInput(input, file.getFile());\n\t\t}\n\t\telse if (file.getServerId() !== null)\n\t\t{\n\t\t\tinput.value = file.getServerId();\n\t\t}\n\n\t\tcontainer.appendChild(input);\n\t\tthis.hiddenFields.set(file.getId(), input);\n\n\t\tthis.#syncInputPositions();\n\t}\n\n\t#resetHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input = this.hiddenFields.get(file.getId());\n\t\tif (input)\n\t\t{\n\t\t\tDom.remove(input);\n\t\t\tthis.hiddenFields.delete(file.getId());\n\t\t}\n\t}\n\n\t#syncInputPositions(): void\n\t{\n\t\tconst container = this.getHiddenFieldsContainer();\n\t\tif (!container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tconst input = this.hiddenFields.get(file.getId());\n\t\t\tif (input)\n\t\t\t{\n\t\t\t\tcontainer.appendChild(input);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport { BaseEvent } from 'main.core.events';\nimport { Uploader, UploaderFile, UploaderOptions, UploaderStatus } from 'ui.uploader.core';\nimport { BitrixVue, VueCreateAppResult } from 'ui.vue';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport default class VueUploader\n{\n\t#uploader: Uploader = null;\n\t#vueApp = null;\n\n\tconstructor(uploaderOptions: UploaderOptions, vueOptions = {})\n\t{\n\t\tconst context = this;\n\t\tthis.#vueApp = BitrixVue.createApp({\n\t\t\tdata() {\n\t\t\t\treturn {\n\t\t\t\t\titems: [],\n\t\t\t\t\trootComponentId: null,\n\t\t\t\t\tmultiple: true,\n\t\t\t\t\tacceptOnlyImages: false,\n\t\t\t\t};\n\t\t\t},\n\t\t\tmixins: [\n\t\t\t\tvueOptions,\n\t\t\t],\n\t\t\tprovide: {\n\t\t\t\tgetUploader() {\n\t\t\t\t\treturn context.#uploader;\n\t\t\t\t},\n\t\t\t\tgetWidget() {\n\t\t\t\t\treturn context;\n\t\t\t\t}\n\t\t\t},\n\t\t\tmethods: {\n\t\t\t\tgetUploader() {\n\t\t\t\t\treturn context.#uploader;\n\t\t\t\t},\n\t\t\t\tgetWidget() {\n\t\t\t\t\treturn context;\n\t\t\t\t},\n\t\t\t},\n\t\t\t// language=Vue\n\t\t\ttemplate: `\n\t\t\t\t<component\n\t\t\t\t\t:is=\"rootComponentId\"\n\t\t\t\t\t:items=\"items\"\n\t\t\t\t/>\n\t\t\t`,\n\t\t});\n\n\t\tconst options = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\t\tconst userEvents = options.events;\n\t\toptions.events = {\n\t\t\t'File:onAddStart': this.handleFileAdd.bind(this),\n\t\t\t'File:onRemove': this.handleFileRemove.bind(this),\n\t\t\t'File:onUploadProgress': this.handleFileUploadProgress.bind(this),\n\t\t\t'File:onStateChange': this.handleFileStateChange.bind(this),\n\t\t\t'File:onError': this.handleFileError.bind(this),\n\t\t\t'onError': this.handleError.bind(this),\n\t\t\t'onUploadStart': this.handleUploadStart.bind(this),\n\t\t\t'onUploadComplete': this.handleUploadComplete.bind(this),\n\t\t};\n\n\t\tthis.#uploader = new Uploader(options);\n\t\tthis.#uploader.subscribeFromOptions(userEvents);\n\n\t\tthis.#vueApp.multiple = this.#uploader.isMultiple();\n\t\tthis.#vueApp.acceptOnlyImages = this.#uploader.shouldAcceptOnlyImages();\n\t\tthis.#vueApp.rootComponentId = this.getRootComponentId();\n\t}\n\n\tgetVueOptions(): { [key: string]: any }\n\t{\n\t\treturn {};\n\t}\n\n\tgetRootComponentId(): ?Function\n\t{\n\t\treturn null;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.#uploader;\n\t}\n\n\tgetVueApp(): VueCreateAppResult\n\t{\n\t\treturn this.#vueApp;\n\t}\n\n\trenderTo(node: HTMLElement): void\n\t{\n\t\tif (Type.isDomNode(node))\n\t\t{\n\t\t\tconst container = Dom.create('div');\n\t\t\tnode.appendChild(container);\n\n\t\t\tif (!this.getUploader().getHiddenFieldsContainer())\n\t\t\t{\n\t\t\t\tthis.getUploader().setHiddenFieldsContainer(node);\n\t\t\t}\n\n\t\t\tthis.getVueApp().mount(container);\n\t\t}\n\t}\n\n\tremove(id): void\n\t{\n\t\tthis.getUploader().removeFile(id);\n\t}\n\n\tgetItems(): Array\n\t{\n\t\treturn this.getVueApp().items;\n\t}\n\n\tgetItem(id)\n\t{\n\t\treturn this.getItems().find(item => item.id === id);\n\t}\n\n\tcreateItemFromFile(file: UploaderFile): { [key: string]: any }\n\t{\n\t\tconst item = file.getState();\n\t\titem.progress = 0;\n\n\t\treturn item;\n\t}\n\n\thandleFileAdd(event: BaseEvent): void\n\t{\n\t\tconst { file, error } = event.getData();\n\t\tconst item = this.createItemFromFile(file);\n\t\tthis.getItems().push(item);\n\n\t\tthis.getVueApp().$Bitrix.eventEmitter.emit('Item:onAdd', { item });\n\t}\n\n\thandleFileRemove(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\n\t\tconst position = this.getItems().findIndex(fileInfo => fileInfo.id === file.getId());\n\t\tif (position >= 0)\n\t\t{\n\t\t\tconst result = this.getItems().splice(position, 1);\n\n\t\t\tthis.getVueApp().$Bitrix.eventEmitter.emit('Item:onRemove', { item: result[0] });\n\t\t}\n\t}\n\n\thandleFileError(event: BaseEvent): void\n\t{\n\t\tconst { file, error } = event.getData();\n\n\t\tconst item = this.getItem(file.getId());\n\t\titem.error = error;\n\t}\n\n\thandleFileUploadProgress(event: BaseEvent): void\n\t{\n\t\tconst { file, progress } = event.getData();\n\t\tconst item = this.getItem(file.getId());\n\t\tif (item)\n\t\t{\n\t\t\titem.progress = progress;\n\t\t}\n\t}\n\n\thandleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\t\tconst item = this.getItem(file.getId());\n\t\tif (item)\n\t\t{\n\t\t\tObject.assign(item, file.getState());\n\t\t}\n\t}\n\n\thandleError(event: BaseEvent): void\n\t{\n\t\tthis.getVueApp().$Bitrix.eventEmitter.emit('Uploader:onError', event);\n\t}\n\n\thandleUploadStart(event: BaseEvent): void\n\t{\n\t\tthis.getVueApp().$Bitrix.eventEmitter.emit('Uploader:onUploadStart', event);\n\t}\n\n\thandleUploadComplete(event: BaseEvent): void\n\t{\n\t\tthis.getVueApp().$Bitrix.eventEmitter.emit('Uploader:onUploadComplete', event);\n\t}\n}\n","const isImage = (file: File) => {\n\treturn /^image\\/[a-z0-9.-]+$/i.test(file.type);\n};\n\nexport default isImage;"],"names":["FileStatus","INIT","ADDED","LOADING","PENDING","UPLOADING","ABORTED","COMPLETE","LOAD_FAILED","UPLOAD_FAILED","FileOrigin","CLIENT","SERVER","AbstractUploadController","EventEmitter","constructor","server","setEventNamespace","getServer","upload","file","Error","abort","AbstractLoadController","load","crypto","window","msCrypto","createUniqueId","replace","c","getRandomValues","Uint8Array","toString","getExtensionFromType","type","Type","isStringFilled","subtype","split","pop","test","counter","createFileFromBlob","blob","fileName","date","Date","getFullYear","getMonth","getDate","extension","File","lastModified","now","lastModifiedDate","exception","slice","size","name","regexp","isDataUri","str","match","createBlobFromDataUri","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","length","view","i","charCodeAt","Blob","getFileExtension","filename","position","lastIndexOf","substring","imageExtensions","isResizableImage","mimeType","isFile","toLowerCase","includes","formatFileSize","base","units","getUnits","isInteger","toFixed","fileSizeUnits","Loc","getMessage","isArrayFilled","UploaderFile","source","fileOptions","id","serverId","originalName","width","height","clientPreview","clientPreviewUrl","clientPreviewWidth","clientPreviewHeight","serverPreviewUrl","serverPreviewWidth","serverPreviewHeight","downloadUrl","removeUrl","status","origin","uploadController","loadController","options","isPlainObject","isBlob","isNumber","setFile","subscribeFromOptions","events","canLoad","setStatus","emit","canUpload","event","BaseEvent","data","isDefaultPrevented","getFile","emitAsync","then","result","catch","error","console","abortLoad","cancel","setUploadController","controller","setLoadController","isReadyToUpload","getStatus","isUploadable","isLoadable","isUploading","isLoading","isComplete","isFailed","setName","setOriginalName","setType","setSize","setServerId","setWidth","setHeight","setClientPreview","setServerPreview","setDownloadUrl","setRemoveUrl","getName","getOriginalName","getExtension","getType","getSize","getSizeFormatted","getId","getServerId","getOrigin","getDownloadUrl","url","getRemoveUrl","getWidth","getHeight","getPreviewUrl","getClientPreview","getClientPreviewUrl","getServerPreviewUrl","getPreviewWidth","getClientPreviewWidth","getServerPreviewWidth","getPreviewHeight","getClientPreviewHeight","getServerPreviewHeight","isNull","revokeClientPreviewUrl","URL","createObjectURL","revokeObjectURL","isImage","getState","JSON","parse","stringify","toJSON","sizeFormatted","failed","previewUrl","previewWidth","previewHeight","value","UploaderError","BaseError","code","args","message","isString","description","customData","replacements","Object","keys","forEach","key","hasMessage","setDescription","createFromAjaxErrors","errors","uploaderError","find","system","setOrigin","getDescription","text","clone","getCode","getCustomData","Chunk","offset","retries","getNextRetryDelay","shift","setRetries","isArray","getData","getOffset","UploadController","chunkOffset","chunkTimeout","token","xhr","aborted","nextChunk","clearTimeout","getChunkSize","getChunkOffset","getToken","setToken","chunk","totalSize","isOnlyOneChunk","normalize","headers","encodeURIComponent","rangeStart","rangeEnd","rangeHeader","push","controllerOptions","getControllerOptions","Ajax","runAction","preparePost","getParameters","getController","onrequeststart","onprogressupload","lengthComputable","uploadedBytes","Math","min","loaded","progress","floor","response","log","fileInfo","shouldRetry","nextDelay","setTimeout","currentChunkSize","nextOffset","fileRange","getChunkRetryDelays","queues","WeakMap","loadMultiple","queue","get","tasks","Runtime","debounce","loadInternal","set","delete","task","fileIds","onprogress","total","files","fileResults","fileResult","success","ServerLoadController","ClientLoadController","Server","serverOptions","uploadControllerClass","loadControllerClass","chunkSize","defaultChunkSize","chunkMinSize","chunkMaxSize","chunkRetryDelays","getDefaultChunkSize","forceChunkSize","controllerClass","getClass","isFunction","createUploadController","createLoadController","createClientLoadController","settings","Extension","getSettings","getChunkMinSize","getChunkMaxSize","max","Filter","uploader","filterOptions","getUploader","apply","FileSizeFilter","maxFileSize","minFileSize","maxTotalFileSize","imageMaxFileSize","imageMinFileSize","integerOptions","option","Promise","resolve","reject","maxFileSizeInBytes","minFileSizeInBytes","imageMaxFileSizeInBytes","imageMinFileSizeInBytes","getTotalSize","maxTotalFileSizeInBytes","isValidFileType","fileTypes","baseMimeType","trim","charAt","indexOf","FileTypeFilter","getAcceptedFileTypes","getArrayBuffer","fileReader","FileReader","readAsArrayBuffer","onload","onerror","convertStringToBuffer","compareBuffers","dataView","dest","start","j","getUint8","GIF87a","GIF89a","Gif","DataView","getUint16","PNG_SIGNATURE","IHDR_SIGNATURE","FRIED_CHUNK_NAME","Png","getUint32","BMP_SIGNATURE","Bmp","abs","getInt32","EXIF_SIGNATURE","Jpeg","orientation","byteLength","exifBlock","getOrientation","Marker","BIG_ENDIAN","LITTLE_ENDIAN","byteAlign","isBigEndian","isLittleEndian","extractOrientation","littleEndian","idfDirectoryEntries","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","directoryEntryNumber","end","block","byteOffset","tagNumber","dataFormat","numberOfComponents","RIFF_HEADER","WEBP_SIGNATURE","VP8_SIGNATURE","VP8L_SIGNATURE","VP8X_SIGNATURE","Webp","headerType","headerView","bits","extendedHeader","validStart","validEnd","jpg","typeHandlers","gif","png","bmp","jpeg","jpe","webp","getImageSize","typeHandler","ImageSizeFilter","imageMinWidth","imageMinHeight","imageMaxWidth","imageMaxHeight","ignoreUnknownImageTypes","isBoolean","minWidth","minHeight","maxWidth","maxHeight","createWorker","fn","workerBlob","workerURL","worker","Worker","post","callback","transfer","onmessage","postMessage","terminate","BitmapWorker","self","createImageBitmap","bitmap","loadImage","image","document","createElement","src","naturalWidth","naturalHeight","createImagePreview","round","canvas","context","getContext","drawImage","getFilenameWithoutExtension","substr","extensionMap","renameFileToMatchMimeType","canvasPrototype","HTMLCanvasElement","prototype","hasToBlobSupport","toBlob","convertCanvasToBlob","quality","toDataURL","canCreateImageBitmap","ImageBitmap","close","resizeImage","loadImageDataFallback","handleImageLoad","imageData","targetWidth","targetHeight","calcTargetSize","preview","newFileName","bitmapWorker","imageBitmap","mode","upscale","ratioWidth","ratioHeight","ratio","ImagePreviewFilter","imagePreviewWidth","imagePreviewHeight","imagePreviewQuality","imagePreviewMimeType","imagePreviewUpscale","imagePreviewResizeMethod","TransformImageFilter","resizeWidth","resizeHeight","resizeMethod","resizeMimeType","resizeQuality","UploaderStatus","STARTED","STOPPED","FilterType","VALIDATION","PREPARATION","getFilesFromDataTransfer","dataTransfer","items","Array","from","filter","item","isFileSystemItem","map","getFilesFromItem","all","fileGroups","group","entry","webkitGetAsEntry","isDirectory","kind","isDirectoryEntry","getFilesInDirectory","getAsEntry","getAsFile","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","createReader","readBatch","entries","isEntry","canAppendFileToForm","DataTransfer","add","input","setAttribute","err","assignFileToInput","Uploader","uploaderOptions","multiple","autoUpload","allowReplaceSingle","maxParallelUploads","maxParallelLoads","acceptOnlyImages","acceptedFileTypes","ignoredFileNames","maxFileCount","hiddenFields","Map","hiddenFieldsContainer","hiddenFieldName","assignAsFile","filters","assign","setAutoUpload","setMaxParallelUploads","setMaxParallelLoads","setAcceptedFileTypes","setIgnoredFileNames","setMaxFileCount","setAllowReplaceSingle","assignBrowse","browseElement","assignDropzone","dropElement","assignPaste","pasteElement","setHiddenFieldsContainer","setHiddenFieldName","setAssignAsFile","addFilter","addFilters","handleBeforeUpload","bind","handlePrepareFileAsync","handleUploadStart","handleFileCancel","handleFileStatusChange","handleFileStateChange","addFiles","fileList","isArrayLike","addFile","getIgnoredFileNames","isMultiple","shouldReplaceSingle","getFiles","fileToReplace","removeFile","subscribe","getPendingFileCount","stop","destroy","property","hasOwnProperty","setPrototypeOf","index","findIndex","element","splice","className","Reflection","nodes","isElementNode","node","tagName","acceptAttr","getAttribute","Event","click","join","preventDefault","clipboardData","getHiddenFieldsContainer","querySelector","container","getHiddenFieldName","shouldAssignAsFile","flag","reduce","shouldAutoUpload","getMaxParallelUploads","number","getMaxParallelLoads","getUploadingFileCount","shouldAcceptOnlyImages","fileNames","getMaxFileCount","transformedFile","getTarget","totalNewFiles","totalFiles","firstFilter","current","next","currentUploads","pendingFiles","pendingUploads","limit","pendingFile","currentLoads","has","isExistingServerFile","Dom","style","visibility","left","top","appendChild","remove","VueUploader","vueOptions","BitrixVue","createApp","rootComponentId","mixins","provide","getWidget","methods","template","userEvents","handleFileAdd","handleFileRemove","handleFileUploadProgress","handleFileError","handleError","handleUploadComplete","getRootComponentId","getVueOptions","getVueApp","renderTo","isDomNode","create","mount","getItems","getItem","createItemFromFile","$Bitrix","eventEmitter"],"mappings":"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"}