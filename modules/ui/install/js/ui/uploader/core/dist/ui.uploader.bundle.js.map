{"version":3,"file":"ui.uploader.bundle.js","sources":["../src/enums/file-status.js","../src/enums/file-origin.js","../src/backend/abstract-upload-controller.js","../src/backend/abstract-load-controller.js","../src/helpers/create-unique-id.js","../src/helpers/get-extension-from-type.js","../src/helpers/create-file-from-blob.js","../src/helpers/is-data-uri.js","../src/helpers/create-blob-from-data-uri.js","../src/helpers/get-file-extension.js","../src/helpers/is-resizable-image.js","../src/helpers/format-file-size.js","../src/uploader-file.js","../src/uploader-error.js","../src/backend/chunk.js","../src/backend/upload-controller.js","../src/backend/server-load-multiple.js","../src/backend/server-load-controller.js","../src/backend/client-load-controller.js","../src/backend/server.js","../src/filters/filter.js","../src/filters/file-size-filter.js","../src/helpers/is-valid-file-type.js","../src/filters/file-type-filter.js","../src/helpers/get-array-buffer.js","../src/helpers/image-size/convert-string-to-buffer.js","../src/helpers/image-size/compare-buffers.js","../src/helpers/image-size/types/gif.js","../src/helpers/image-size/types/png.js","../src/helpers/image-size/types/bmp.js","../src/helpers/image-size/types/jpeg.js","../src/helpers/image-size/types/webp.js","../src/helpers/image-size/get-image-size.js","../src/filters/image-size-filter.js","../src/helpers/create-worker.js","../src/helpers/bitmap-worker.js","../src/helpers/load-image.js","../src/helpers/create-image-preview.js","../src/helpers/get-filename-without-extension.js","../src/helpers/rename-file-to-match-mime-type.js","../src/helpers/convert-canvas-to-blob.js","../src/helpers/resize-image.js","../src/filters/image-preview-filter.js","../src/filters/transform-image-filter.js","../src/enums/uploader-status.js","../src/enums/filter-type.js","../src/helpers/get-files-from-data-transfer.js","../src/helpers/can-append-file-to-form.js","../src/helpers/assign-file-to-input.js","../src/uploader.js","../src/adapters/vue-uploader-adapter.js","../src/adapters/vue-uploader-widget.js","../src/adapters/vue-uploader-component.js","../src/helpers/is-image.js","../src/helpers/get-jpeg-orientation.js","../src/helpers/is-jpeg.js"],"sourcesContent":["export const FileStatus = {\n\tINIT: 'init',\n\tADDED: 'added',\n\tLOADING: 'loading',\n\tPENDING: 'pending',\n\tUPLOADING: 'uploading',\n\tABORTED: 'aborted',\n\tCOMPLETE: 'complete',\n\tLOAD_FAILED: 'load-failed',\n\tUPLOAD_FAILED: 'upload-failed',\n};","export const FileOrigin = {\n\tCLIENT: 'client',\n\tSERVER: 'server',\n};","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\n\nexport default class AbstractUploadController extends EventEmitter\n{\n\t#server: Server;\n\n\tconstructor(server: Server)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.UploadController');\n\n\t\tthis.#server = server;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tupload(file: File): void\n\t{\n\t\tthrow new Error('You must implement upload() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractLoadController extends EventEmitter\n{\n\t#server: Server;\n\n\tconstructor(server: Server)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.LoadController');\n\n\t\tthis.#server = server;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement load() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","let crypto = window.crypto || window.msCrypto;\nif (!crypto && typeof(process) === 'object')\n{\n\tcrypto = require('crypto').webcrypto;\n}\n\nconst createUniqueId = (): string => {\n\treturn (`${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`).replace(/[018]/g, c =>\n\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t);\n};\n\nexport default createUniqueId;","import { Type } from 'main.core';\n\nconst getExtensionFromType = (type) => {\n\tif (!Type.isStringFilled(type))\n\t{\n\t\treturn '';\n\t}\n\n\tconst subtype = type.split('/').pop();\n\n\tif (/javascript/.test(subtype))\n\t{\n\t\treturn 'js';\n\t}\n\n\tif (/plain/.test(subtype))\n\t{\n\t\treturn 'txt';\n\t}\n\n\tif (/svg/.test(subtype))\n\t{\n\t\treturn 'svg';\n\t}\n\n\tif (/[a-z]+/.test(subtype))\n\t{\n\t\treturn subtype;\n\t}\n\n\treturn '';\n};\n\nexport default getExtensionFromType;","import { Type } from 'main.core';\nimport getExtensionFromType from './get-extension-from-type';\n\nlet counter = 0;\nconst createFileFromBlob = (blob: Blob, fileName: string): File => {\n\n\tif (!Type.isStringFilled(fileName))\n\t{\n\t\tconst date = new Date();\n\t\tfileName = `File ${date.getFullYear()}-${date.getMonth()}-${date.getDate()}-${++counter}`;\n\n\t\tconst extension = getExtensionFromType(blob.type);\n\t\tif (extension)\n\t\t{\n\t\t\tfileName += `.${extension}`;\n\t\t}\n\t}\n\n\ttry\n\t{\n\t\treturn new File(\n\t\t\t[blob],\n\t\t\tfileName,\n\t\t\t{\n\t\t\t\tlastModified: Date.now(),\n\t\t\t\tlastModifiedDate: new Date(),\n\t\t\t\ttype: blob.type\n\t\t\t}\n\t\t);\n\t}\n\tcatch (exception)\n\t{\n\t\tconst file = blob.slice(0, blob.size, blob.type);\n\t\tfile.name = fileName;\n\t\tfile.lastModified = Date.now();\n\t\tfile.lastModifiedDate = new Date();\n\n\t\treturn file;\n\t}\n};\n\nexport default createFileFromBlob;","const regexp = /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[\\w\\W]*?[^;])*),(.+)$/;\n\nconst isDataUri = (str: string): boolean => {\n\treturn typeof(str) === 'string' ? str.match(regexp) : false;\n};\n\nexport default isDataUri;","const createBlobFromDataUri = (dataURI: string): Blob => {\n\tconst byteString = atob(dataURI.split(',')[1]);\n\tconst mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\tconst buffer = new ArrayBuffer(byteString.length);\n\tconst view = new Uint8Array(buffer);\n\n\tfor (let i = 0; i < byteString.length; i++)\n\t{\n\t\tview[i] = byteString.charCodeAt(i);\n\t}\n\n\treturn new Blob([buffer], { type: mimeString });\n};\n\nexport default createBlobFromDataUri;","import { Type } from 'main.core';\n\nconst getFileExtension = (filename: string) => {\n\tconst position = Type.isStringFilled(filename) ? filename.lastIndexOf('.') : -1;\n\n\treturn position > 0 ? filename.substring(position + 1) : '';\n};\n\nexport default getFileExtension;\n\n\n","import { Type } from 'main.core';\nimport getFileExtension from './get-file-extension';\n\nconst imageExtensions = ['jpg', 'bmp', 'jpeg', 'jpe', 'gif', 'png', 'webp'];\n\nconst isResizableImage = (file: File | string, mimeType: string = null) => {\n\tconst filename = Type.isFile(file) ? file.name : file;\n\tconst type = Type.isFile(file) ? file.type : mimeType;\n\tconst extension = getFileExtension(filename).toLowerCase();\n\n\tif (imageExtensions.includes(extension))\n\t{\n\t\tif (type === null || /^image\\/[a-z0-9.-]+$/i.test(type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isResizableImage;\n","import { Loc, Type } from 'main.core';\n\nconst formatFileSize = (size: number, base: number = 1024): string => {\n\tlet i = 0;\n\tconst units = getUnits();\n\twhile (size >= base && units[i + 1])\n\t{\n\t\tsize /= base;\n\t\ti++;\n\t}\n\n\treturn (Type.isInteger(size) ? size : size.toFixed(1)) + units[i];\n};\n\nlet fileSizeUnits = null;\nconst getUnits = () => {\n\tif (fileSizeUnits !== null)\n\t{\n\t\treturn fileSizeUnits;\n\t}\n\n\tconst units = Loc.getMessage('UPLOADER_FILE_SIZE_POSTFIXES').split(/[|]/);\n\tfileSizeUnits = Type.isArrayFilled(units) ? units : ['B', 'kB', 'MB', 'GB', 'TB'];\n\n\treturn fileSizeUnits;\n};\n\nexport default formatFileSize;","import { Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\n\nimport type { FileInfo } from './types/file-info';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\nimport type UploaderError from './uploader-error';\n\nimport AbstractUploadController from './backend/abstract-upload-controller';\nimport AbstractLoadController from './backend/abstract-load-controller';\n\nimport createUniqueId from './helpers/create-unique-id';\nimport createFileFromBlob from './helpers/create-file-from-blob';\nimport isDataUri from './helpers/is-data-uri';\nimport createBlobFromDataUri from './helpers/create-blob-from-data-uri';\nimport isResizableImage from './helpers/is-resizable-image';\nimport formatFileSize from './helpers/format-file-size';\n\nexport default class UploaderFile extends EventEmitter\n{\n\t#id: string = null;\n\t#file: File = null;\n\t#serverId: number | string = null;\n\n\t#name: string = '';\n\t#originalName: string = null;\n\t#size: number = 0;\n\t#type: string = '';\n\t#width: ?number = null;\n\t#height: ?number = null;\n\n\t#clientPreview: ?File = null;\n\t#clientPreviewUrl: ?string = null;\n\t#clientPreviewWidth: ?number = null;\n\t#clientPreviewHeight: ?number = null;\n\n\t#serverPreviewUrl: ?string = null;\n\t#serverPreviewWidth: ?number = null;\n\t#serverPreviewHeight: ?number = null;\n\n\t#downloadUrl: ?string = null;\n\t#removeUrl: ?string = null;\n\n\t#status: FileStatus = FileStatus.INIT;\n\t#origin: FileOrigin = FileOrigin.CLIENT;\n\t#errors: UploaderError[] = [];\n\t#progress: number = 0;\n\n\t#uploadController: AbstractUploadController = null;\n\t#loadController: AbstractLoadController = null;\n\n\tconstructor(source: File | Blob | string | number, fileOptions: UploaderFileOptions = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.File');\n\n\t\tconst options = Type.isPlainObject(fileOptions) ? fileOptions : {};\n\n\t\tif (Type.isFile(source))\n\t\t{\n\t\t\tthis.#file = source;\n\t\t}\n\t\telse if (Type.isBlob(source))\n\t\t{\n\t\t\tthis.#file = createFileFromBlob(source, options.name || source.name);\n\t\t}\n\t\telse if (isDataUri(source))\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(source);\n\t\t\tthis.#file = createFileFromBlob(blob, options.name);\n\t\t}\n\t\telse if (Type.isNumber(source) || Type.isStringFilled(source))\n\t\t{\n\t\t\tthis.#origin = FileOrigin.SERVER;\n\t\t\tthis.#serverId = source;\n\t\t\tif (Type.isPlainObject(options))\n\t\t\t{\n\t\t\t\tthis.setFile(options);\n\t\t\t}\n\t\t}\n\n\t\tthis.#id = Type.isStringFilled(options.id) ? options.id : createUniqueId();\n\t\tthis.subscribeFromOptions(options.events);\n\t}\n\n\tload(): void\n\t{\n\t\tif (!this.canLoad())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStatus(FileStatus.LOADING);\n\t\tthis.emit('onLoadStart');\n\n\t\tthis.#loadController.load(this);\n\t}\n\n\tupload(): void\n\t{\n\t\tif (!this.canUpload())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet event = new BaseEvent({ data: { file: this } });\n\t\tthis.emit('onBeforeUpload', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStatus(FileStatus.UPLOADING);\n\n\t\tevent = new BaseEvent({ data: { file: this.getFile() } });\n\t\tthis.emitAsync('onPrepareFileAsync', event)\n\t\t\t.then((result) => {\n\t\t\t\tconst file = Type.isArrayFilled(result) && Type.isFile(result[0]) ? result[0] : this.getFile();\n\t\t\t\tthis.emit('onUploadStart');\n\n\t\t\t\tif (this.#uploadController)\n\t\t\t\t{\n\t\t\t\t\tthis.#uploadController.upload(file);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error);\n\t\t\t})\n\t\t;\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tif (this.isUploading())\n\t// \t{\n\t// \t\tthis.abort();\n\t// \t\tthis.setStatus(FileStatus.PENDING);\n\t// \t}\n\t// }\n\t//\n\t// resume(): void\n\t// {\n\t//\n\t// }\n\t// retry(): void\n\t// {\n\t// \t// TODO\n\t// }\n\n\tabort(): void\n\t{\n\t\tif (this.#uploadController)\n\t\t{\n\t\t\tthis.#uploadController.abort();\n\t\t}\n\n\t\tthis.setStatus(FileStatus.ABORTED);\n\t\tthis.emit('onAbort');\n\t}\n\n\tabortLoad(): void\n\t{\n\t\tif (this.#loadController)\n\t\t{\n\t\t\tthis.#loadController.abort();\n\t\t}\n\n\t\tthis.setStatus(FileStatus.ABORTED);\n\t\tthis.emit('onAbort');\n\t}\n\n\tcancel(): void\n\t{\n\t\tthis.abort();\n\t\tthis.emit('onCancel');\n\t}\n\n\tgetUploadController(): ?AbstractUploadController\n\t{\n\t\treturn this.#uploadController;\n\t}\n\n\tsetUploadController(controller: AbstractUploadController): void\n\t{\n\t\tif (controller instanceof AbstractUploadController)\n\t\t{\n\t\t\tthis.#uploadController = controller;\n\t\t}\n\t}\n\n\tsetLoadController(controller: AbstractLoadController): void\n\t{\n\t\tif (controller instanceof AbstractLoadController)\n\t\t{\n\t\t\tthis.#loadController = controller;\n\t\t}\n\t}\n\n\tisReadyToUpload(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.PENDING;\n\t}\n\n\tisUploadable(): boolean\n\t{\n\t\treturn this.#uploadController !== null;\n\t}\n\n\tisLoadable(): boolean\n\t{\n\t\treturn this.#loadController !== null;\n\t}\n\n\tcanUpload(): boolean\n\t{\n\t\treturn this.isReadyToUpload() && this.isUploadable();\n\t}\n\n\tcanLoad(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.ADDED && this.isLoadable();\n\t}\n\n\tisUploading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOADING;\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOADING;\n\t}\n\n\tisComplete(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.COMPLETE;\n\t}\n\n\tisFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED || this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tgetFile(): ?File\n\t{\n\t\treturn this.#file;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetFile(file: File | FileInfo): void\n\t{\n\t\tif (Type.isFile(file))\n\t\t{\n\t\t\tthis.#file = file;\n\t\t}\n\t\telse if (Type.isPlainObject(file))\n\t\t{\n\t\t\tthis.setName(file.name);\n\t\t\tthis.setOriginalName(file.originalName);\n\t\t\tthis.setType(file.type);\n\t\t\tthis.setSize(file.size);\n\n\t\t\tthis.setServerId(file.serverId);\n\t\t\tthis.setWidth(file.width);\n\t\t\tthis.setHeight(file.height);\n\n\t\t\tthis.setClientPreview(file.clientPreview, file.clientPreviewWidth, file.clientPreviewHeight);\n\t\t\tthis.setServerPreview(file.serverPreviewUrl, file.serverPreviewWidth, file.serverPreviewHeight);\n\n\t\t\tthis.setDownloadUrl(file.downloadUrl);\n\t\t\tthis.setRemoveUrl(file.removeUrl);\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.getFile() ? this.getFile().name : this.#name;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#name = name;\n\t\t\tthis.emit('onStateChange', { property: 'name', value: name });\n\t\t}\n\t}\n\n\tgetOriginalName(): string\n\t{\n\t\treturn this.#originalName ? this.#originalName : this.getName();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetOriginalName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#originalName = name;\n\t\t\tthis.emit('onStateChange', { property: 'originalName', value: name });\n\t\t}\n\t}\n\n\tgetExtension(): string\n\t{\n\t\tconst name = this.getOriginalName();\n\t\tconst position = name.lastIndexOf('.');\n\n\t\treturn position >= 0 ? name.substring(position + 1).toLowerCase() : '';\n\t}\n\n\tgetType(): string\n\t{\n\t\treturn this.getFile() ? this.getFile().type : this.#type;\n\t}\n\n\t/**\n\t * internal\n\t */\n\tsetType(type: string): string\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.#type = type;\n\t\t\tthis.emit('onStateChange', { property: 'type', value: type });\n\t\t}\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getFile() ? this.getFile().size : this.#size;\n\t}\n\n\tgetSizeFormatted(): string\n\t{\n\t\treturn formatFileSize(this.getSize());\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetSize(size: number): void\n\t{\n\t\tif (Type.isNumber(size) && size >= 0)\n\t\t{\n\t\t\tthis.#size = size;\n\t\t\tthis.emit('onStateChange', { property: 'size', value: size });\n\t\t}\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tgetServerId(): number | string | null\n\t{\n\t\treturn this.#serverId;\n\t}\n\n\tsetServerId(id: number | string): void\n\t{\n\t\tif (Type.isNumber(id) || Type.isStringFilled(id))\n\t\t{\n\t\t\tthis.#serverId = id;\n\t\t\tthis.emit('onStateChange', { property: 'serverId', value: id });\n\t\t}\n\t}\n\n\tgetStatus(): FileStatus\n\t{\n\t\treturn this.#status;\n\t}\n\n\tsetStatus(status: FileStatus): void\n\t{\n\t\tthis.#status = status;\n\t\tthis.emit('onStateChange', { property: 'status', value: status });\n\t\tthis.emit('onStatusChange');\n\t}\n\n\tgetOrigin(): FileOrigin\n\t{\n\t\treturn this.#origin;\n\t}\n\n\tgetDownloadUrl(): ?string\n\t{\n\t\treturn this.#downloadUrl;\n\t}\n\n\tsetDownloadUrl(url: string): void\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#downloadUrl = url;\n\t\t\tthis.emit('onStateChange', { property: 'downloadUrl', value: url });\n\t\t}\n\t}\n\n\tgetRemoveUrl(): ?string\n\t{\n\t\treturn this.#removeUrl;\n\t}\n\n\tsetRemoveUrl(url: string)\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#removeUrl = url;\n\t\t\tthis.emit('onStateChange', { property: 'removeUrl', value: url });\n\t\t}\n\t}\n\n\tgetWidth(): ?number\n\t{\n\t\treturn this.#width;\n\t}\n\n\tsetWidth(width: number)\n\t{\n\t\tif (Type.isNumber(width))\n\t\t{\n\t\t\tthis.#width = width;\n\t\t\tthis.emit('onStateChange', { property: 'width', value: width });\n\t\t}\n\t}\n\n\tgetHeight(): ?number\n\t{\n\t\treturn this.#height;\n\t}\n\n\tsetHeight(height: ?number)\n\t{\n\t\tif (Type.isNumber(height))\n\t\t{\n\t\t\tthis.#height = height;\n\t\t\tthis.emit('onStateChange', { property: 'height', value: height });\n\t\t}\n\t}\n\n\tgetPreviewUrl(): ?string\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewUrl() : this.getServerPreviewUrl();\n\t}\n\n\tgetPreviewWidth(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewWidth() : this.getServerPreviewWidth();\n\t}\n\n\tgetPreviewHeight(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewHeight() : this.getServerPreviewHeight();\n\t}\n\n\tgetClientPreview(): ?File\n\t{\n\t\treturn this.#clientPreview;\n\t}\n\n\tsetClientPreview(file: ?File, width: number = null, height: number = null): void\n\t{\n\t\tif (Type.isFile(file) || Type.isNull(file))\n\t\t{\n\t\t\tthis.revokeClientPreviewUrl();\n\n\t\t\tconst url = URL.createObjectURL(file);\n\t\t\tthis.#clientPreview = file;\n\t\t\tthis.#clientPreviewUrl = url;\n\t\t\tthis.#clientPreviewWidth = width;\n\t\t\tthis.#clientPreviewHeight = height;\n\n\t\t\tthis.emit('onStateChange', { property: 'clientPreviewUrl', value: url });\n\t\t\tthis.emit('onStateChange', { property: 'clientPreviewWidth', value: width });\n\t\t\tthis.emit('onStateChange', { property: 'clientPreviewHeight', value: height });\n\t\t}\n\t}\n\n\tgetClientPreviewUrl(): ?string\n\t{\n\t\treturn this.#clientPreviewUrl;\n\t}\n\n\trevokeClientPreviewUrl(): void\n\t{\n\t\tif (this.#clientPreviewUrl !== null)\n\t\t{\n\t\t\tURL.revokeObjectURL(this.#clientPreviewUrl);\n\n\t\t\tthis.#clientPreviewUrl = null;\n\t\t\tthis.emit('onStateChange', { property: 'clientPreviewUrl', value: null });\n\t\t}\n\t}\n\n\tgetClientPreviewWidth(): ?number\n\t{\n\t\treturn this.#clientPreviewWidth;\n\t}\n\n\tgetClientPreviewHeight(): ?number\n\t{\n\t\treturn this.#clientPreviewHeight;\n\t}\n\n\tgetServerPreviewUrl(): ?string\n\t{\n\t\treturn this.#serverPreviewUrl;\n\t}\n\n\tsetServerPreview(url: ?string, width: number = null, height: number = null): ?string\n\t{\n\t\tif (Type.isStringFilled(url) || Type.isNull(url))\n\t\t{\n\t\t\tthis.#serverPreviewUrl = url;\n\t\t\tthis.#serverPreviewWidth = width;\n\t\t\tthis.#serverPreviewHeight = height;\n\n\t\t\tthis.emit('onStateChange', { property: 'serverPreviewUrl', value: url });\n\t\t\tthis.emit('onStateChange', { property: 'serverPreviewWidth', value: width });\n\t\t\tthis.emit('onStateChange', { property: 'serverPreviewHeight', value: height });\n\t\t}\n\t}\n\n\tgetServerPreviewWidth(): ?number\n\t{\n\t\treturn this.#serverPreviewWidth;\n\t}\n\n\tgetServerPreviewHeight(): ?number\n\t{\n\t\treturn this.#serverPreviewHeight;\n\t}\n\n\tisImage(): boolean\n\t{\n\t\treturn isResizableImage(this.getOriginalName(), this.getType());\n\t}\n\n\tgetProgress(): number\n\t{\n\t\treturn this.#progress;\n\t}\n\n\tsetProgress(progress: ?number)\n\t{\n\t\tif (Type.isNumber(progress))\n\t\t{\n\t\t\tthis.#progress = progress;\n\t\t\tthis.emit('onStateChange', { property: 'progress', value: progress });\n\t\t}\n\t}\n\n\taddError(error: UploaderError): void\n\t{\n\t\tthis.#errors.push(error);\n\t\tthis.emit('onStateChange');\n\t}\n\n\tgetError(): ?UploaderError\n\t{\n\t\treturn this.#errors[0] || null;\n\t}\n\n\tgetErrors(): UploaderError[]\n\t{\n\t\treturn this.#errors;\n\t}\n\n\tgetState(): { [key: string]: any }\n\t{\n\t\treturn JSON.parse(JSON.stringify(this));\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tid: this.getId(),\n\t\t\tserverId: this.getServerId(),\n\t\t\tstatus: this.getStatus(),\n\t\t\tname: this.getName(),\n\t\t\toriginalName: this.getOriginalName(),\n\t\t\tsize: this.getSize(),\n\t\t\tsizeFormatted: this.getSizeFormatted(),\n\t\t\ttype: this.getType(),\n\t\t\textension: this.getExtension(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tisImage: this.isImage(),\n\t\t\tfailed: this.isFailed(),\n\t\t\twidth: this.getWidth(),\n\t\t\theight: this.getHeight(),\n\t\t\tprogress: this.getProgress(),\n\t\t\terror: this.getError(),\n\t\t\terrors: this.getErrors(),\n\n\t\t\tpreviewUrl: this.getPreviewUrl(),\n\t\t\tpreviewWidth: this.getPreviewWidth(),\n\t\t\tpreviewHeight: this.getPreviewHeight(),\n\n\t\t\tclientPreviewUrl: this.getClientPreviewUrl(),\n\t\t\tclientPreviewWidth: this.getClientPreviewWidth(),\n\t\t\tclientPreviewHeight: this.getClientPreviewHeight(),\n\n\t\t\tserverPreviewUrl: this.getServerPreviewUrl(),\n\t\t\tserverPreviewWidth: this.getServerPreviewWidth(),\n\t\t\tserverPreviewHeight: this.getServerPreviewHeight(),\n\n\t\t\tdownloadUrl: this.getDownloadUrl(),\n\t\t\tremoveUrl: this.getRemoveUrl(),\n\t\t};\n\t}\n}\n","import { BaseError, Type, Loc } from 'main.core';\n\nexport default class UploaderError extends BaseError\n{\n\tstatic Origin = {\n\t\tSERVER: 'server',\n\t\tCLIENT: 'client',\n\t};\n\n\tstatic Type = {\n\t\tUSER: 'user',\n\t\tSYSTEM: 'system',\n\t\tUNKNOWN: 'unknown',\n\t};\n\n\tdescription: string = '';\n\torigin: $Values<UploaderError.Origin> = UploaderError.Origin.CLIENT;\n\ttype: $Values<UploaderError.Type> = UploaderError.Type.USER;\n\n\tconstructor(code: string, ...args)\n\t{\n\t\tlet message = Type.isString(args[0]) ? args[0] : null;\n\t\tlet description = Type.isString(args[1]) ? args[1] : null;\n\t\tconst customData = Type.isPlainObject(args[args.length - 1]) ? args[args.length - 1] : {};\n\n\t\tconst replacements = {};\n\t\tObject.keys(customData).forEach((key: string) => {\n\t\t\treplacements[`#${key}#`] = customData[key];\n\t\t});\n\n\t\tif (!Type.isString(message) && Loc.hasMessage(`UPLOADER_${code}`))\n\t\t{\n\t\t\tmessage = Loc.getMessage(`UPLOADER_${code}`, replacements);\n\t\t}\n\n\t\tif (Type.isStringFilled(message) && !Type.isString(description) && Loc.hasMessage(`UPLOADER_${code}_DESC`))\n\t\t{\n\t\t\tdescription = Loc.getMessage(`UPLOADER_${code}_DESC`, replacements);\n\t\t}\n\n\t\tsuper(message, code, customData);\n\t\tthis.setDescription(description);\n\t}\n\n\tstatic createFromAjaxErrors(errors: Array): UploaderError\n\t{\n\t\tif (!Type.isArrayFilled(errors) || !Type.isPlainObject(errors[0]))\n\t\t{\n\t\t\treturn new this('SERVER_ERROR');\n\t\t}\n\n\t\tconst uploaderError = errors.find(error => {\n\t\t\treturn error.type === 'file-uploader';\n\t\t});\n\n\t\tif (uploaderError && !uploaderError.system)\n\t\t{\n\t\t\t// Take the First Uploader User Error\n\t\t\tconst { code, message, description, customData } = uploaderError;\n\t\t\tconst error = new this(code, message, description, customData);\n\t\t\terror.setOrigin(UploaderError.Origin.SERVER);\n\t\t\terror.setType(UploaderError.Type.USER);\n\n\t\t\treturn error;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet { code, message, description } = errors[0];\n\t\t\tconst { customData, system, type } = errors[0];\n\n\t\t\tif (code === 'NETWORK_ERROR')\n\t\t\t{\n\t\t\t\tmessage = Loc.getMessage('UPLOADER_NETWORK_ERROR');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Type.isStringFilled(code) ? code : 'SERVER_ERROR';\n\t\t\t\tif (!Type.isStringFilled(description))\n\t\t\t\t{\n\t\t\t\t\tdescription = message;\n\t\t\t\t\tmessage = Loc.getMessage('UPLOADER_SERVER_ERROR');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.error('Uploader', errors);\n\n\t\t\tconst error = new this(code, message, description, customData);\n\t\t\terror.setOrigin(UploaderError.Origin.SERVER);\n\n\t\t\tif (type === 'file-uploader')\n\t\t\t{\n\t\t\t\terror.setType(system ? UploaderError.Type.SYSTEM : UploaderError.Type.USER);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\terror.setType(UploaderError.Type.UNKNOWN);\n\t\t\t}\n\n\t\t\treturn error;\n\t\t}\n\t}\n\n\tgetDescription(): string\n\t{\n\t\treturn this.description;\n\t}\n\n\tsetDescription(text: string): this\n\t{\n\t\tif (Type.isString(text))\n\t\t{\n\t\t\tthis.description = text;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetOrigin(): $Values<UploaderError.Origin>\n\t{\n\t\treturn this.origin;\n\t}\n\n\tsetOrigin(origin: $Values<UploaderError.Origin>): this\n\t{\n\t\tif (Object.values(UploaderError.Origin).includes(origin))\n\t\t{\n\t\t\tthis.origin = origin;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetType(): $Values<UploaderError.Type>\n\t{\n\t\treturn this.type;\n\t}\n\n\tsetType(type: $Values<UploaderError.Type>): this\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.type = type;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclone(): UploaderError\n\t{\n\t\tconst options = JSON.parse(JSON.stringify(this));\n\t\tconst error = new UploaderError(\n\t\t\toptions.code,\n\t\t\toptions.message,\n\t\t\toptions.description,\n\t\t\toptions.customData\n\t\t);\n\n\t\terror.setOrigin(options.origin);\n\t\terror.setType(options.type);\n\n\t\treturn error;\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tcode: this.getCode(),\n\t\t\tmessage: this.getMessage(),\n\t\t\tdescription: this.getDescription(),\n\t\t\torigin: this.getOrigin(),\n\t\t\ttype: this.getType(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n","import { Type } from 'main.core';\n\nexport default class Chunk\n{\n\t#data: Blob = null;\n\t#offset: number = 0;\n\t#retries: number[] = [];\n\n\tconstructor(data, offset)\n\t{\n\t\tthis.#data = data;\n\t\tthis.#offset = offset;\n\t}\n\n\tgetNextRetryDelay(): ?number\n\t{\n\t\tif (this.#retries.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.#retries.shift();\n\t}\n\n\tsetRetries(retries: number[]): void\n\t{\n\t\tif (Type.isArray(retries))\n\t\t{\n\t\t\tthis.#retries = retries;\n\t\t}\n\t}\n\n\tgetData(): Blob\n\t{\n\t\treturn this.#data;\n\t}\n\n\tgetOffset(): number\n\t{\n\t\treturn this.#offset;\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getData().size;\n\t}\n}","import Server from './server';\nimport Chunk from './chunk';\nimport { ajax as Ajax, Type } from 'main.core';\nimport AbstractUploadController from './abstract-upload-controller';\nimport UploaderError from '../uploader-error';\n\nexport default class UploadController extends AbstractUploadController\n{\n\t#file: File = null;\n\t#chunkOffset: ?number = null;\n\t#chunkTimeout: ?number = null;\n\t#token: string = null;\n\t#xhr: XMLHttpRequest = null;\n\t#aborted: boolean = false;\n\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tupload(file: File): void\n\t{\n\t\tif (this.#chunkOffset !== null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#file = file;\n\n\t\tconst nextChunk = this.#getNextChunk();\n\t\tif (nextChunk)\n\t\t{\n\t\t\tthis.#uploadChunk(nextChunk);\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.#xhr)\n\t\t{\n\t\t\tthis.#aborted = true;\n\t\t\tthis.#xhr.abort();\n\t\t\tthis.#xhr = null;\n\t\t}\n\n\t\tthis.emit('onAbort');\n\n\t\tclearTimeout(this.#chunkTimeout);\n\t}\n\n\t#uploadChunk(chunk: Chunk)\n\t{\n\t\tconst totalSize = this.getFile().size;\n\t\tconst isOnlyOneChunk = chunk.getOffset() === 0 && totalSize === chunk.getSize();\n\n\t\tlet fileName = this.getFile().name;\n\t\tif (fileName.normalize)\n\t\t{\n\t\t\tfileName = fileName.normalize();\n\t\t}\n\n\t\tconst type = Type.isStringFilled(this.getFile().type) ? this.getFile().type : 'application/octet-stream';\n\t\tconst headers = [\n\t\t\t{ name: 'Content-Type', value: type },\n\t\t\t{ name: 'X-Upload-Content-Name', value: encodeURIComponent(fileName) },\n\t\t];\n\n\t\tif (!isOnlyOneChunk)\n\t\t{\n\t\t\tconst rangeStart = chunk.getOffset();\n\t\t\tconst rangeEnd = chunk.getOffset() + chunk.getSize() - 1;\n\t\t\tconst rangeHeader = `bytes ${rangeStart}-${rangeEnd}/${totalSize}`;\n\n\t\t\theaders.push({ name: 'Content-Range', value: rangeHeader });\n\t\t}\n\n\t\tconst controllerOptions = this.getServer().getControllerOptions();\n\t\tAjax.runAction('ui.fileuploader.upload', {\n\t\t\t\theaders,\n\t\t\t\tdata: chunk.getData(),\n\t\t\t\tpreparePost: false,\n\t\t\t\tgetParameters: {\n\t\t\t\t\tcontroller: this.getServer().getController(),\n\t\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t\t\ttoken: this.getToken() || '',\n\t\t\t\t},\n\t\t\t\tonrequeststart: (xhr) => {\n\t\t\t\t\tthis.#xhr = xhr;\n\t\t\t\t\tthis.#aborted = false;\n\t\t\t\t},\n\t\t\t\tonprogressupload: (event: ProgressEvent) => {\n\t\t\t\t\tif (event.lengthComputable)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst size = this.getFile().size;\n\t\t\t\t\t\tconst uploadedBytes = Math.min(size, chunk.getOffset() + event.loaded);\n\t\t\t\t\t\tconst progress = size > 0 ? Math.floor(uploadedBytes / size * 100) : 100;\n\t\t\t\t\t\tthis.emit('onProgress', { progress });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.token)\n\t\t\t\t{\n\t\t\t\t\tthis.setToken(response.data.token);\n\n\t\t\t\t\tconst size = this.getFile().size;\n\t\t\t\t\tconst progress = size > 0 ? Math.floor((chunk.getOffset() + chunk.getSize()) / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\n\t\t\t\t\tconst nextChunk = this.#getNextChunk();\n\t\t\t\t\tif (nextChunk)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#uploadChunk(nextChunk);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tthis.emit('onUpload', { fileInfo: response.data.file });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(response => {\n\t\t\t\tif (this.#aborted)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\t\tconst shouldRetry = error.getCode() === 'NETWORK_ERROR' || error.getType() === UploaderError.Type.UNKNOWN;\n\n\t\t\t\tif (!shouldRetry || !this.#retryUploadChunk(chunk))\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error });\n\t\t\t\t}\n\t\t\t})\n\t\t;\n\t}\n\n\t#retryUploadChunk(chunk: Chunk): boolean\n\t{\n\t\tconst nextDelay = chunk.getNextRetryDelay();\n\t\tif (nextDelay === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tclearTimeout(this.#chunkTimeout);\n\n\t\tthis.#chunkTimeout = setTimeout(() => {\n\t\t\tthis.#uploadChunk(chunk);\n\t\t}, nextDelay);\n\n\t\treturn true;\n\t}\n\n\t#getNextChunk(): ?Chunk\n\t{\n\t\tif (this.getChunkOffset() !== null && this.getChunkOffset() >= this.getFile().size)\n\t\t{\n\t\t\t// End of File\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.getChunkOffset() === null)\n\t\t{\n\t\t\t// First call\n\t\t\tthis.#chunkOffset = 0;\n\t\t}\n\n\t\tlet chunk: Chunk;\n\t\tif (this.getChunkOffset() === 0 && this.getFile().size <= this.getChunkSize())\n\t\t{\n\t\t\tchunk = new Chunk(this.getFile(), this.getChunkOffset());\n\t\t\tthis.#chunkOffset = this.getFile().size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst currentChunkSize = Math.min(this.getChunkSize(), this.getFile().size - this.getChunkOffset());\n\t\t\tconst nextOffset = this.getChunkOffset() + currentChunkSize;\n\t\t\tconst fileRange = this.getFile().slice(this.getChunkOffset(), nextOffset);\n\n\t\t\tchunk = new Chunk(fileRange, this.getChunkOffset());\n\t\t\tthis.#chunkOffset = nextOffset;\n\t\t}\n\n\t\tchunk.setRetries([...this.getServer().getChunkRetryDelays()]);\n\n\t\treturn chunk;\n\t}\n\n\tgetFile(): File\n\t{\n\t\treturn this.#file;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.getServer().getChunkSize();\n\t}\n\n\tgetChunkOffset(): number\n\t{\n\t\treturn this.#chunkOffset;\n\t}\n\n\tgetToken(): ?string\n\t{\n\t\treturn this.#token;\n\t}\n\n\tsetToken(token: string): void\n\t{\n\t\tif (Type.isStringFilled(token))\n\t\t{\n\t\t\tthis.#token = token;\n\t\t}\n\t}\n}","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type ServerLoadController from './server-load-controller';\n\nconst queues = new WeakMap();\n\nexport function loadMultiple(controller: ServerLoadController, file: UploaderFile)\n{\n\tconst server = controller.getServer();\n\tlet queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tload: Runtime.debounce(loadInternal, 100, server),\n\t\t\txhr: null,\n\t\t};\n\n\t\tqueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.load();\n}\n\nexport function abort(controller: ServerLoadController)\n{\n\tconst server = controller.getServer();\n\tconst queue = queues.get(server);\n\tif (queue)\n\t{\n\t\tqueue.xhr.abort();\n\t\tqueue.xhr = null;\n\t\tqueues.delete(server);\n\n\t\tqueue.tasks.forEach(task => {\n\t\t\tconst { controller, file } = task;\n\t\t\tcontroller.emit('onAbort');\n\t\t});\n\t}\n}\n\nfunction loadInternal()\n{\n\tconst server: Server = this;\n\tconst queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tconst { tasks } = queue;\n\tqueues.delete(server);\n\n\tconst fileIds = [];\n\ttasks.forEach(task => {\n\t\tconst { controller, file } = task;\n\t\tfileIds.push(file.getServerId());\n\t});\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.load', {\n\t\t\tdata: {\n\t\t\t\tfileIds: fileIds,\n\t\t\t},\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: server.getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t},\n\t\t\tonrequeststart: (xhr) => {\n\t\t\t\tqueue.xhr = xhr;\n\t\t\t},\n\t\t\tonprogress: (event: ProgressEvent) => {\n\t\t\t\tif (event.lengthComputable)\n\t\t\t\t{\n\t\t\t\t\tconst progress = event.total > 0 ? Math.floor(event.loaded / event.total * 100) : 100;\n\n\t\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\t\tcontroller.emit('onProgress', { file, progress });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t.then(response => {\n\t\t\tif (response.data?.files)\n\t\t\t{\n\t\t\t\tconst fileResults = {};\n\t\t\t\tresponse.data.files.forEach((fileResult) => {\n\t\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t\t});\n\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\tconst fileResult = fileResults[file.getServerId()] || null;\n\n\t\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.emit('onProgress', { file, progress: 100 });\n\t\t\t\t\t\tcontroller.emit('onLoad', { fileInfo: fileResult.data.file });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst error = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst error = new UploaderError('SERVER_ERROR');\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller } = task;\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(response => {\n\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\ttasks.forEach(task => {\n\t\t\t\tconst { controller } = task;\n\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t});\n\t\t})\n\t;\n}","import AbstractLoadController from './abstract-load-controller';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { loadMultiple, abort } from './server-load-multiple';\n\nexport default class ServerLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tloadMultiple(this, file);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\t// const controllerOptions = this.getServer().getControllerOptions();\n\t\t// Ajax.runAction('ui.fileuploader.load', {\n\t\t// \t\tdata: {\n\t\t// \t\t\tfileIds: [file.getServerId()],\n\t\t// \t\t},\n\t\t// \t\tgetParameters: {\n\t\t// \t\t\tcontroller: this.getServer().getController(),\n\t\t// \t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t// \t\t},\n\t\t// \t\tonrequeststart: (xhr) => {\n\t\t// \t\t\tthis.xhr = xhr;\n\t\t// \t\t},\n\t\t// \t\tonprogress: (event: ProgressEvent) => {\n\t\t// \t\t\tif (event.lengthComputable)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tconst progress = event.total > 0 ? Math.floor(event.loaded / event.total * 100): 100;\n\t\t// \t\t\t\tthis.emit('onProgress', { progress });\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t.then(response => {\n\t\t// \t\tif (response.data?.files)\n\t\t// \t\t{\n\t\t// \t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t// \t\t\tthis.emit('onLoad', { file: response.data.file })\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t.catch(response => {\n\t\t// \t\tthis.emit('onError', { error: UploaderError.createFromAjaxErrors(response.errors) });\n\t\t// \t})\n\t\t// ;\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tabort(this);\n\t\t}\n\t}\n}","import AbstractLoadController from './abstract-load-controller';\nimport Server from './server';\nimport UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\nimport UploaderError from '../uploader-error';\n\nexport default class ClientLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isFile(file.getFile()))\n\t\t{\n\t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\n\t}\n\n}","import { Extension, Runtime, Type } from 'main.core';\nimport type { ServerOptions } from '../types/server-options';\nimport UploadController from './upload-controller';\nimport AbstractUploadController from './abstract-upload-controller';\nimport ServerLoadController from './server-load-controller';\nimport AbstractLoadController from './abstract-load-controller';\nimport ClientLoadController from './client-load-controller';\n\nexport default class Server\n{\n\t#controller: ?string = null;\n\t#controllerOptions: ?{ [key: string]: any } = null;\n\t#uploadControllerClass: Class<AbstractUploadController> = null;\n\t#loadControllerClass: Class<AbstractLoadController> = null;\n\t#chunkSize: number = null;\n\t#defaultChunkSize: number = null;\n\t#chunkMinSize: number = null;\n\t#chunkMaxSize: number = null;\n\t#chunkRetryDelays: number[] = [1000, 3000, 6000];\n\n\tconstructor(serverOptions: ServerOptions)\n\t{\n\t\tconst options = Type.isPlainObject(serverOptions) ? serverOptions : {};\n\n\t\tthis.#controller = Type.isStringFilled(options.controller) ? options.controller : null;\n\t\tthis.#controllerOptions = Type.isPlainObject(options.controllerOptions) ? options.controllerOptions : null;\n\n\t\tconst chunkSize =\n\t\t\tType.isNumber(options.chunkSize) && options.chunkSize > 0\n\t\t\t\t? options.chunkSize\n\t\t\t\t: this.getDefaultChunkSize()\n\t\t;\n\n\t\tthis.#chunkSize = options.forceChunkSize === true ? chunkSize : this.#calcChunkSize(chunkSize);\n\n\t\tif (options.chunkRetryDelays === false || options.chunkRetryDelays === null)\n\t\t{\n\t\t\tthis.#chunkRetryDelays = [];\n\t\t}\n\t\telse if (Type.isArray(options.chunkRetryDelays))\n\t\t{\n\t\t\tthis.#chunkRetryDelays = options.chunkRetryDelays;\n\t\t}\n\n\t\t['uploadControllerClass', 'loadControllerClass'].forEach((controllerClass: string) => {\n\n\t\t\tlet fn = null;\n\t\t\tif (Type.isStringFilled(options[controllerClass]))\n\t\t\t{\n\t\t\t\tfn = Runtime.getClass(options[controllerClass]);\n\t\t\t\tif (!Type.isFunction(fn))\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`Uploader.Server: \"${controllerClass}\" must be a function.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Type.isFunction(options[controllerClass]))\n\t\t\t{\n\t\t\t\tfn = options[controllerClass];\n\t\t\t}\n\n\t\t\tif (controllerClass === 'uploadControllerClass')\n\t\t\t{\n\t\t\t\tthis.#uploadControllerClass = fn;\n\t\t\t}\n\t\t\telse if (controllerClass === 'loadControllerClass')\n\t\t\t{\n\t\t\t\tthis.#loadControllerClass = fn;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateUploadController(): ?UploadController\n\t{\n\t\tif (this.#uploadControllerClass)\n\t\t{\n\t\t\tconst controller = new this.#uploadControllerClass(this);\n\t\t\tif (!(controller instanceof AbstractUploadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"uploadControllerClass\" must be an instance of AbstractUploadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\t\telse if (Type.isStringFilled(this.#controller))\n\t\t{\n\t\t\treturn new UploadController(this);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcreateLoadController(): ServerLoadController\n\t{\n\t\tif (this.#loadControllerClass)\n\t\t{\n\t\t\tconst controller = new this.#loadControllerClass(this);\n\t\t\tif (!(controller instanceof AbstractLoadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"loadControllerClass\" must be an instance of AbstractLoadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\treturn new ServerLoadController(this);\n\t}\n\n\tcreateClientLoadController(): ClientLoadController\n\t{\n\t\treturn new ClientLoadController(this);\n\t}\n\n\tgetController(): ?string\n\t{\n\t\treturn this.#controller;\n\t}\n\n\tgetControllerOptions(): ?{ [key: string]: any }\n\t{\n\t\treturn this.#controllerOptions;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.#chunkSize;\n\t}\n\n\tgetDefaultChunkSize(): number\n\t{\n\t\tif (this.#defaultChunkSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#defaultChunkSize = settings.get('defaultChunkSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.#defaultChunkSize;\n\t}\n\n\tgetChunkMinSize(): number\n\t{\n\t\tif (this.#chunkMinSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#chunkMinSize = settings.get('chunkMinSize', 1024 * 1024);\n\t\t}\n\n\t\treturn this.#chunkMinSize;\n\t}\n\n\tgetChunkMaxSize(): number\n\t{\n\t\tif (this.#chunkMaxSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#chunkMaxSize = settings.get('chunkMaxSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.#chunkMaxSize;\n\t}\n\n\tgetChunkRetryDelays(): number[]\n\t{\n\t\treturn this.#chunkRetryDelays;\n\t}\n\n\t#calcChunkSize(chunkSize: number): number\n\t{\n\t\treturn Math.min(Math.max(this.getChunkMinSize(), chunkSize), this.getChunkMaxSize());\n\t}\n}\n","import type Uploader from '../uploader';\n\nexport default class Filter\n{\n\t#uploader: Uploader = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tthis.#uploader = uploader;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.#uploader;\n\t}\n\n\t/**\n\t * @abstract\n\t */\n\tapply(...args): Promise\n\t{\n\t\tthrow new Error('You must implement apply() method.');\n\t}\n}\n","import { Extension, Type } from 'main.core';\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport formatFileSize from '../helpers/format-file-size';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\n\nexport default class FileSizeFilter extends Filter\n{\n\tmaxFileSize: ?number = 256 * 1024 * 1024;\n\tminFileSize: number = 0;\n\tmaxTotalFileSize: ?number = null;\n\timageMaxFileSize: ?number = 48 * 1024 * 1024;\n\timageMinFileSize: number = 0;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\tthis.maxFileSize = settings.get('maxFileSize', this.maxFileSize);\n\t\tthis.minFileSize = settings.get('minFileSize', this.minFileSize);\n\t\tthis.maxTotalFileSize = settings.get('maxTotalFileSize', this.maxTotalFileSize);\n\t\tthis.imageMaxFileSize = settings.get('imageMaxFileSize', this.imageMaxFileSize);\n\t\tthis.imageMinFileSize = settings.get('imageMinFileSize', this.imageMinFileSize);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tconst integerOptions = [\n\t\t\t'maxFileSize',\n\t\t\t'minFileSize',\n\t\t\t'maxTotalFileSize',\n\t\t\t'imageMaxFileSize',\n\t\t\t'imageMinFileSize',\n\t\t];\n\n\t\tintegerOptions.forEach(option => {\n\t\t\tif ((Type.isNumber(options[option]) && options[option] >= 0) || Type.isNull(option))\n\t\t\t{\n\t\t\t\tthis[option] = options[option];\n\t\t\t}\n\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] >= 0 ? options[option] : this[option];\n\t\t});\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (this.maxFileSize !== null && file.getSize() > this.maxFileSize)\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxFileSize: formatFileSize(this.maxFileSize),\n\t\t\t\t\t\t\tmaxFileSizeInBytes: this.maxFileSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.getSize() < this.minFileSize)\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminFileSize: formatFileSize(this.minFileSize),\n\t\t\t\t\t\t\tminFileSizeInBytes: this.minFileSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.isImage())\n\t\t\t{\n\t\t\t\tif (this.imageMaxFileSize !== null && file.getSize() > this.imageMaxFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'IMAGE_MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\timageMaxFileSize: formatFileSize(this.imageMaxFileSize),\n\t\t\t\t\t\t\t\timageMaxFileSizeInBytes: this.imageMaxFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (file.getSize() < this.imageMinFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'IMAGE_MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\timageMinFileSize: formatFileSize(this.imageMinFileSize),\n\t\t\t\t\t\t\t\timageMinFileSizeInBytes: this.imageMinFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.maxTotalFileSize !== null)\n\t\t\t{\n\t\t\t\tif (this.getUploader().getTotalSize() > this.maxTotalFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'MAX_TOTAL_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxTotalFileSize: formatFileSize(this.maxTotalFileSize),\n\t\t\t\t\t\t\t\tmaxTotalFileSizeInBytes: this.maxTotalFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\n\t}\n}\n","import { Type } from 'main.core';\n\nconst isValidFileType = (file: File, fileTypes: string[]): boolean => {\n\tif (!Type.isArrayFilled(fileTypes))\n\t{\n\t\treturn true;\n\t}\n\n\tconst mimeType = file.type;\n\tconst baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n\tfor (let i = 0; i < fileTypes.length; i++)\n\t{\n\t\tif (!Type.isStringFilled(fileTypes[i]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst type = fileTypes[i].trim().toLowerCase();\n\n\t\tif (type.charAt(0) === '.') // extension case\n\t\t{\n\t\t\tif (file.name.toLowerCase().indexOf(type, file.name.length - type.length) !== -1)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (/\\/\\*$/.test(type)) // image/* mime type case\n\t\t{\n\t\t\tif (baseMimeType === type.replace(/\\/.*$/, ''))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (mimeType === type)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isValidFileType;","import Filter from './filter';\nimport isValidFileType from '../helpers/is-valid-file-type';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class FileTypeFilter extends Filter\n{\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (isValidFileType(file.getFile(), this.getUploader().getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new UploaderError('FILE_TYPE_NOT_ALLOWED'));\n\t\t\t}\n\t\t});\n\t}\n}\n","const getArrayBuffer = (file: File | Blob): Promise<ArrayBuffer> => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.readAsArrayBuffer(file);\n\n\t\tfileReader.onload = () => {\n\t\t\tconst buffer: ArrayBuffer = fileReader.result;\n\n\t\t\tresolve(buffer);\n\t\t};\n\n\t\tfileReader.onerror = () => {\n\t\t\treject(fileReader.error);\n\t\t};\n\t});\n};\n\nexport default getArrayBuffer;","const convertStringToBuffer = (str: string): ArrayLike => {\n\tconst result = [];\n\tfor (let i = 0; i < str.length; i++)\n\t{\n\t\tresult.push(str.charCodeAt(i) & 0xFF);\n\t}\n\n\treturn result;\n};\nexport default convertStringToBuffer;","const compareBuffers = (dataView: DataView, dest: ArrayLike, start: number): boolean => {\n\tfor (let i = start, j = 0; j < dest.length;)\n\t{\n\t\tif (dataView.getUint8(i++) !== dest[j++])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport default compareBuffers;","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst GIF87a = convertStringToBuffer('GIF87a');\nconst GIF89a = convertStringToBuffer('GIF89a');\n\nexport default class Gif\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 10)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 10);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, GIF87a, 0) && !compareBuffers(view, GIF89a, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint16(6, true),\n\t\t\t\t\t\theight: view.getUint16(8, true),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\nimport type { ImageSize } from '../image-size-type';\n\nconst PNG_SIGNATURE = convertStringToBuffer('\\x89PNG\\r\\n\\x1a\\n');\nconst IHDR_SIGNATURE = convertStringToBuffer('IHDR');\nconst FRIED_CHUNK_NAME = convertStringToBuffer('CgBI');\n\nexport default class Png\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 40)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 40);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, PNG_SIGNATURE, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (compareBuffers(view, FRIED_CHUNK_NAME, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (compareBuffers(view, IHDR_SIGNATURE, 28))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\twidth: view.getUint32(32),\n\t\t\t\t\t\t\t\theight: view.getUint32(36),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (compareBuffers(view, IHDR_SIGNATURE, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: view.getUint32(16),\n\t\t\t\t\t\t\theight: view.getUint32(20),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst BMP_SIGNATURE = 0x424d; // BM\n\nexport default class Bmp\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 26)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 26);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (!view.getUint16(0) === BMP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint32(18, true),\n\t\t\t\t\t\theight: Math.abs(view.getInt32(22, true)),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst EXIF_SIGNATURE = convertStringToBuffer('Exif\\0\\0');\n\nexport default class Jpeg\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 2)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tgetArrayBuffer(file)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint8(0) !== 0xFF || view.getUint8(1) !== 0xD8)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offset = 2;\n\t\t\t\t\tlet orientation = -1;\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (view.getUint8(offset++) !== 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet code = view.getUint8(offset++);\n\t\t\t\t\t\tlet length;\n\n\t\t\t\t\t\t// skip padding bytes\n\t\t\t\t\t\twhile (code === 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcode = view.getUint8(offset++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((0xD0 <= code && code <= 0xD9) || code === 0x01)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (0xC0 <= code && code <= 0xFE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// the rest of the unreserved markers\n\t\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlength = view.getUint16(offset) - 2;\n\t\t\t\t\t\t\toffset += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// unknown markers\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (code === 0xD9 /* EOI */ || code === 0xDA /* SOS */)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// end of the datastream\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try to get orientation from Exif segment\n\t\t\t\t\t\tif (code === 0xE1 && length >= 10 && compareBuffers(view, EXIF_SIGNATURE, offset))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst exifBlock = new DataView(view.buffer, offset + 6, offset + length);\n\t\t\t\t\t\t\torientation = getOrientation(exifBlock);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlength >= 5\n\t\t\t\t\t\t\t&& (0xC0 <= code && code <= 0xCF)\n\t\t\t\t\t\t\t&& code !== 0xC4 && code !== 0xC8 && code !== 0xCC\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (view.byteLength - offset < length)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet width = view.getUint16(offset + 3);\n\t\t\t\t\t\t\tlet height = view.getUint16(offset + 1);\n\t\t\t\t\t\t\tif (orientation >= 5 && orientation <= 8)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[width, height] = [height, width];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn resolve({\n\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\torientation,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset += length;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n\nconst Marker = {\n\tBIG_ENDIAN: 0x4d4d,\n\tLITTLE_ENDIAN: 0x4949,\n};\n\nconst getOrientation = (exifBlock: DataView) => {\n\tconst byteAlign = exifBlock.getUint16(0);\n\tconst isBigEndian = byteAlign === Marker.BIG_ENDIAN;\n\tconst isLittleEndian = byteAlign === Marker.LITTLE_ENDIAN;\n\n\tif (isBigEndian || isLittleEndian)\n\t{\n\t\treturn extractOrientation(exifBlock, isLittleEndian);\n\t}\n\n\treturn -1;\n};\n\nconst extractOrientation = (exifBlock: DataView, littleEndian: boolean = false) => {\n\n\tconst offset = 8; // idf offset\n\tconst idfDirectoryEntries = exifBlock.getUint16(offset, littleEndian);\n\n\tconst IDF_ENTRY_BYTES = 12;\n\tconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\n\n\tfor (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++)\n\t{\n\t\tconst start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n\t\tconst end = start + IDF_ENTRY_BYTES;\n\n\t\t// Skip on corrupt EXIF blocks\n\t\tif (start > exifBlock.byteLength)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst block = new DataView(exifBlock.buffer, exifBlock.byteOffset + start, end - start);\n\t\tconst tagNumber = block.getUint16(0, littleEndian);\n\n\t\t// 274 is the `orientation` tag ID\n\t\tif (tagNumber === 274)\n\t\t{\n\t\t\tconst dataFormat = block.getUint16(2, littleEndian)\n\t\t\tif (dataFormat !== 3)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tconst numberOfComponents = block.getUint32(4, littleEndian);\n\t\t\tif (numberOfComponents !== 1)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn block.getUint16(8, littleEndian)\n\t\t}\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst RIFF_HEADER = 0x52494646; // RIFF\nconst WEBP_SIGNATURE = 0x57454250; // WEBP\nconst VP8_SIGNATURE = 0x56503820; // VP8\nconst VP8L_SIGNATURE = 0x5650384c; // VP8L\nconst VP8X_SIGNATURE = 0x56503858; // VP8X\n\nexport default class Webp\n{\n\tgetSize(file: File): Promise<?ImageSize>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 16)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 30);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint32(0) !== RIFF_HEADER && view.getUint32(8) !== WEBP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst headerType = view.getUint32(12);\n\t\t\t\t\tconst headerView = new DataView(buffer, 20, 10);\n\t\t\t\t\tif (headerType === VP8_SIGNATURE && headerView.getUint8(0) !== 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: headerView.getUint16(6, true) & 0x3fff,\n\t\t\t\t\t\t\theight: headerView.getUint16(8, true) & 0x3fff,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8L_SIGNATURE && headerView.getUint8(0) === 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst bits = headerView.getUint32(1, true);\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: (bits & 0x3FFF) + 1,\n\t\t\t\t\t\t\theight: ((bits >> 14) & 0x3FFF) + 1,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8X_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst extendedHeader = headerView.getUint8(0);\n\t\t\t\t\t\tconst validStart = (extendedHeader & 0xc0) === 0;\n\t\t\t\t\t\tconst validEnd = (extendedHeader & 0x01) === 0;\n\t\t\t\t\t\tif (validStart && validEnd)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst width = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(6) << 16)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(5) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(4)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst height = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(9) << 0)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(8) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(7)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresolve({ width, height });\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import Gif from './types/gif';\nimport Png from './types/png';\nimport Bmp from './types/bmp';\nimport Jpeg from './types/jpeg';\nimport Webp from './types/webp';\n\nimport getFileExtension from '../get-file-extension';\nimport type { ImageSize } from './image-size-type';\n\nconst jpg = new Jpeg();\nconst typeHandlers = {\n\tgif: new Gif(),\n\tpng: new Png(),\n\tbmp: new Bmp(),\n\tjpg: jpg,\n\tjpeg: jpg,\n\tjpe: jpg,\n\twebp: new Webp()\n};\n\nconst getImageSize = (file: File): Promise<?ImageSize> => {\n\tif (file.size === 0)\n\t{\n\t\treturn Promise.resolve(null);\n\t}\n\n\tconst extension = getFileExtension(file.name).toLowerCase();\n\tconst type = file.type.replace(/^image\\//, '');\n\tconst typeHandler = typeHandlers[extension] || typeHandlers[type];\n\tif (!typeHandler)\n\t{\n\t\treturn Promise.resolve(null);\n\t}\n\n\treturn typeHandler.getSize(file);\n};\n\nexport default getImageSize;\n\n","import { Extension, Type } from 'main.core';\n\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport getImageSize from '../helpers/image-size/get-image-size';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\n\nexport default class ImageSizeFilter extends Filter\n{\n\timageMinWidth: number = 1;\n\timageMinHeight: number = 1;\n\timageMaxWidth: number = 7000;\n\timageMaxHeight: number = 7000;\n\tignoreUnknownImageTypes: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\tthis.imageMinWidth = settings.get('imageMinWidth', this.imageMinWidth);\n\t\tthis.imageMinHeight = settings.get('imageMinHeight', this.imageMinHeight);\n\t\tthis.imageMaxWidth = settings.get('imageMaxWidth', this.imageMaxWidth);\n\t\tthis.imageMaxHeight = settings.get('imageMaxHeight', this.imageMaxHeight);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\t['imageMinWidth', 'imageMinHeight', 'imageMaxWidth', 'imageMaxHeight'].forEach(option => {\n\t\t\tif (Type.isNumber(options[option]) && options[option] > 0)\n\t\t\t{\n\t\t\t\tthis[option] = options[option];\n\t\t\t}\n\t\t});\n\n\t\tif (Type.isBoolean(options['ignoreUnknownImageTypes']))\n\t\t{\n\t\t\tthis.ignoreUnknownImageTypes = options['ignoreUnknownImageTypes'];\n\t\t}\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (!file.isImage())\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgetImageSize(file.getFile())\n\t\t\t\t.then(({ width, height }) => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\n\t\t\t\t\tif (width < this.imageMinWidth || height < this.imageMinHeight)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t'IMAGE_IS_TOO_SMALL',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tminWidth: this.imageMinWidth,\n\t\t\t\t\t\t\t\tminHeight: this.imageMinHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\telse if (width > this.imageMaxWidth || height > this.imageMaxHeight)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t'IMAGE_IS_TOO_BIG',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxWidth: this.imageMaxWidth,\n\t\t\t\t\t\t\t\tmaxHeight: this.imageMaxHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tif (this.ignoreUnknownImageTypes)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError('IMAGE_TYPE_NOT_SUPPORTED'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import createUniqueId from './create-unique-id';\n\nconst createWorker = (fn: Function) => {\n\tconst workerBlob = new Blob(['(', fn.toString(), ')()'], { type: 'application/javascript' });\n\tconst workerURL = URL.createObjectURL(workerBlob);\n\tconst worker = new Worker(workerURL);\n\n\treturn {\n\t\tpost: (message, callback, transfer): void => {\n\t\t\tconst id = createUniqueId();\n\t\t\tworker.onmessage = event => {\n\t\t\t\tif (event.data.id === id)\n\t\t\t\t{\n\t\t\t\t\tcallback(event.data.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.postMessage({ id, message }, transfer);\n\t\t},\n\t\tterminate: (): void => {\n\t\t\tworker.terminate();\n\t\t\tURL.revokeObjectURL(workerURL);\n\t\t}\n\t};\n};\n\nexport default createWorker;","const BitmapWorker = function() {\n\tself.onmessage = event => {\n\t\t// Hack for Safari. Workers can become unpredictable.\n\t\t// Sometimes 'self.postMessage' doesn't emit 'onmessage' event.\n\t\tsetTimeout(() => {\n\t\t\tcreateImageBitmap(event.data.message.file)\n\t\t\t\t.then(bitmap => {\n\t\t\t\t\tself.postMessage({ id: event?.data?.id, message: bitmap }, [bitmap]);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tself.postMessage({ id: event.data.id, message: null }, []);\n\t\t\t\t})\n\t\t\t;\n\t\t}, 0);\n\t};\n};\n\nexport default BitmapWorker;","const loadImage = (file: File | Blob) => new Promise((resolve, reject) => {\n\n\tconst image = document.createElement('img');\n\tconst url = URL.createObjectURL(file);\n\timage.src = url;\n\n\timage.onerror = error => {\n\t\tURL.revokeObjectURL(image.src);\n\t\treject(error);\n\t};\n\n\timage.onload = () => {\n\t\tURL.revokeObjectURL(url);\n\t\tresolve({\n\t\t\twidth: image.naturalWidth,\n\t\t\theight: image.naturalHeight,\n\t\t\timage\n\t\t});\n\t};\n});\n\nexport default loadImage;","const createImagePreview = (data, width: number, height: number) => {\n\twidth = Math.round(width);\n\theight = Math.round(height);\n\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst context = canvas.getContext('2d');\n\t// context.imageSmoothingQuality = 'high';\n\tcontext.drawImage(data, 0, 0, width, height);\n\n\treturn canvas;\n};\n\nexport default createImagePreview;","const getFilenameWithoutExtension = (name) => {\n\treturn name.substr(0, name.lastIndexOf('.')) || name;\n};\n\nexport default getFilenameWithoutExtension;","import getFilenameWithoutExtension from './get-filename-without-extension';\n\nconst extensionMap = {\n\t'jpeg': 'jpg',\n};\n\nconst renameFileToMatchMimeType = (filename, mimeType) => {\n\tconst name = getFilenameWithoutExtension(filename);\n\tconst type = mimeType.split('/')[1];\n\tconst extension = extensionMap[type] || type;\n\n\treturn `${name}.${extension}`;\n};\n\nexport default renameFileToMatchMimeType;","import createBlobFromDataUri from './create-blob-from-data-uri';\n\nconst canvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\nconst hasToBlobSupport = window.HTMLCanvasElement && canvasPrototype.toBlob;\n\nconst convertCanvasToBlob = (canvas: HTMLCanvasElement, type: string, quality: number) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (hasToBlobSupport)\n\t\t{\n\t\t\tcanvas.toBlob((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t}, type, quality);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(canvas.toDataURL(type, quality));\n\n\t\t\tresolve(blob);\n\t\t}\n\t});\n};\n\nexport default convertCanvasToBlob;","import createWorker from './create-worker';\nimport BitmapWorker from './bitmap-worker';\nimport loadImage from './load-image';\nimport createImagePreview from './create-image-preview';\nimport renameFileToMatchMimeType from './rename-file-to-match-mime-type';\nimport createFileFromBlob from './create-file-from-blob';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\nimport { Browser } from 'main.core';\n\ntype ResizeImageOptions = {\n\tmode?: 'contain' | 'crop' | 'force',\n\tupscale?: boolean,\n\twidth?: number,\n\theight?: number,\n\tquality?: number,\n};\n\nlet canCreateImageBitmap = (\n\t'createImageBitmap' in window\n\t&& typeof ImageBitmap !== 'undefined'\n\t&& ImageBitmap.prototype\n\t&& ImageBitmap.prototype.close\n);\n\nif (canCreateImageBitmap && Browser.isSafari())\n{\n\tconst ua = navigator.userAgent.toLowerCase();\n\tconst regex = new RegExp('version\\\\/([0-9.]+)', 'i');\n\tconst result = regex.exec(ua);\n\tif (result && result[1] && result[1] < '16.4')\n\t{\n\t\t// Webkit bug https://bugs.webkit.org/show_bug.cgi?id=223326\n\t\tcanCreateImageBitmap = false;\n\t}\n}\n\nconst resizeImage = async (file: File, options: ResizeImageOptions) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst loadImageDataFallback = () => {\n\t\t\tloadImage(file)\n\t\t\t\t.then(({ image }) => {\n\t\t\t\t\thandleImageLoad(image);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t};\n\n\t\tconst handleImageLoad = (imageData: ImageBitmap | HTMLImageElement) => {\n\t\t\tconst { targetWidth, targetHeight } = calcTargetSize(imageData, options);\n\t\t\tif (!targetWidth || !targetHeight)\n\t\t\t{\n\t\t\t\tif ('close' in imageData)\n\t\t\t\t{\n\t\t\t\t\timageData.close();\n\t\t\t\t}\n\n\t\t\t\tresolve({\n\t\t\t\t\tpreview: file,\n\t\t\t\t\twidth: imageData.width,\n\t\t\t\t\theight: imageData.height,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst canvas = createImagePreview(imageData, targetWidth, targetHeight);\n\n\t\t\t// if it was ImageBitmap\n\t\t\tif ('close' in imageData)\n\t\t\t{\n\t\t\t\timageData.close();\n\t\t\t}\n\n\t\t\tconst { quality = 0.92, mimeType = 'image/jpeg' } = options;\n\t\t\tconst type = /jpeg|png|webp/.test(file.type) ? file.type : mimeType;\n\n\t\t\tconvertCanvasToBlob(canvas, type, quality)\n\t\t\t\t.then((blob: Blob) => {\n\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(file.name, type);\n\t\t\t\t\tconst preview = createFileFromBlob(blob, newFileName);\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\treject();\n\t\t\t\t})\n\t\t\t;\n\t\t};\n\n\t\tif (canCreateImageBitmap)\n\t\t{\n\t\t\tconst bitmapWorker = createWorker(BitmapWorker);\n\t\t\tbitmapWorker.post({ file },\n\t\t\t\t(imageBitmap: ImageBitmap) => {\n\t\t\t\t\tbitmapWorker.terminate();\n\t\t\t\t\tif (imageBitmap)\n\t\t\t\t\t{\n\t\t\t\t\t\thandleImageLoad(imageBitmap);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tloadImageDataFallback();\n\t\t}\n\t});\n};\n\nexport default resizeImage;\n\nconst calcTargetSize = (imageData: ImageBitmap | HTMLImageElement, options = {}) => {\n\tlet { mode = 'contain', upscale = false, width, height } = options;\n\n\tconst result = {\n\t\ttargetWidth: 0,\n\t\ttargetHeight: 0,\n\t};\n\n\tif (!width && !height)\n\t{\n\t\treturn result;\n\t}\n\n\tif (width === null)\n\t{\n\t\twidth = height;\n\t}\n\telse if (height === null)\n\t{\n\t\theight = width;\n\t}\n\n\tif (mode !== 'force')\n\t{\n\t\tconst ratioWidth = width / imageData.width;\n\t\tconst ratioHeight = height / imageData.height;\n\t\tlet ratio = 1;\n\n\t\tif (mode === 'cover')\n\t\t{\n\t\t\tratio = Math.max(ratioWidth, ratioHeight);\n\t\t}\n\t\telse if (mode === 'contain')\n\t\t{\n\t\t\tratio = Math.min(ratioWidth, ratioHeight);\n\t\t}\n\n\t\t// if image is too small, exit here with original image\n\t\tif (ratio > 1 && upscale === false)\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\twidth = imageData.width * ratio;\n\t\theight = imageData.height * ratio;\n\t}\n\n\t/*if (mode === 'crop')\n\t{\n\t\tconst sourceImageRatio = sourceImageWidth / sourceImageHeight;\n\t\tconst targetRatio = targetWidth / targetHeight;\n\n\t\tif (sourceImageRatio > targetRatio)\n\t\t{\n\t\t\tconst newWidth = sourceImageHeight * targetRatio;\n\t\t\tsrcX = (sourceImageWidth - newWidth) / 2;\n\t\t\tsourceImageWidth = newWidth;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst newHeight = sourceImageWidth / targetRatio;\n\t\t\tsrcY = (sourceImageHeight - newHeight) / 2;\n\t\t\tsourceImageHeight = newHeight;\n\t\t}\n\n\t\tcontext.drawImage(image, srcX, srcY, sourceImageWidth, sourceImageHeight, 0, 0, targetWidth, targetHeight);\n\t}*/\n\n\tresult.targetWidth = Math.round(width);\n\tresult.targetHeight = Math.round(height);\n\n\treturn result;\n};","import { Type } from 'main.core';\n\nimport Filter from './filter';\nimport resizeImage from '../helpers/resize-image';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class ImagePreviewFilter extends Filter\n{\n\timagePreviewWidth: number = 300;\n\timagePreviewHeight: number = 300;\n\timagePreviewQuality: number = 0.92;\n\timagePreviewMimeType: string = 'image/jpeg';\n\timagePreviewUpscale: boolean = false;\n\timagePreviewResizeMethod: string = 'contain';\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tconst integerOptions = [\n\t\t\t'imagePreviewWidth',\n\t\t\t'imagePreviewHeight',\n\t\t\t'imagePreviewQuality',\n\t\t];\n\n\t\tintegerOptions.forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] > 0 ? options[option] : this[option];\n\t\t});\n\n\t\tif (Type.isBoolean(options['imagePreviewUpscale']))\n\t\t{\n\t\t\tthis.imagePreviewUpscale = options['imagePreviewUpscale'];\n\t\t}\n\n\t\tif (['contain', 'force', 'cover'].includes(options['imagePreviewResizeMethod']))\n\t\t{\n\t\t\tthis.imagePreviewResizeMethod = options['imagePreviewResizeMethod'];\n\t\t}\n\n\t\tif (['image/jpeg', 'image/png'].includes(options['imagePreviewMimeType']))\n\t\t{\n\t\t\tthis.imagePreviewMimeType = options['imagePreviewMimeType'];\n\t\t}\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!isResizableImage(file.getFile()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\twidth: this.imagePreviewWidth,\n\t\t\t\theight: this.imagePreviewHeight,\n\t\t\t\tmode: this.imagePreviewResizeMethod,\n\t\t\t\tupscale: this.imagePreviewUpscale,\n\t\t\t\tquality: this.imagePreviewQuality,\n\t\t\t\tmimeType: this.imagePreviewMimeType,\n\t\t\t};\n\n\t\t\tresizeImage(file.getFile(), options)\n\t\t\t\t.then(({ preview, width, height }) => {\n\n\t\t\t\t\t//setTimeout(() => {\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t//}, 60000);\n\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log('resize error', error);\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\n\nimport isResizableImage from '../helpers/is-resizable-image';\nimport resizeImage from '../helpers/resize-image';\n\nimport type Uploader from '../uploader';\n\nexport default class TransformImageFilter extends Filter\n{\n\tresizeWidth: number = null;\n\tresizeHeight: number = null;\n\tresizeMethod: string = 'contain';\n\tresizeMimeType: string = 'image/jpeg';\n\tresizeQuality: number = 0.92;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tif (Type.isNumber(options['imageResizeWidth']) && options['imageResizeWidth'] > 0)\n\t\t{\n\t\t\tthis.resizeWidth = options['imageResizeWidth'];\n\t\t}\n\n\t\tif (Type.isNumber(options['imageResizeHeight']) && options['imageResizeHeight'] > 0)\n\t\t{\n\t\t\tthis.resizeHeight = options['imageResizeHeight'];\n\t\t}\n\n\t\tif (['contain', 'force', 'cover'].includes(options['imageResizeMethod']))\n\t\t{\n\t\t\tthis.resizeMethod = options['imageResizeMethod'];\n\t\t}\n\n\t\tif (Type.isNumber(options['imageResizeQuality']))\n\t\t{\n\t\t\tthis.resizeQuality = Math.min(Math.max(0.1, options['imageResizeQuality']), 1);\n\t\t}\n\n\t\tif (['image/jpeg', 'image/png'].includes(options['imageResizeMimeType']))\n\t\t{\n\t\t\tthis.resizeMimeType = options['imageResizeMimeType'];\n\t\t}\n\t}\n\n\tapply(file: File): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!isResizableImage(file))\n\t\t\t{\n\t\t\t\treturn resolve(file);\n\t\t\t}\n\n\t\t\tif (this.resizeWidth === null && this.resizeHeight === null)\n\t\t\t{\n\t\t\t\treturn resolve(file);\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\twidth: this.resizeWidth,\n\t\t\t\theight: this.resizeHeight,\n\t\t\t\tmode: this.resizeMethod,\n\t\t\t\tquality: this.resizeQuality,\n\t\t\t\tmimeType: this.resizeMimeType,\n\t\t\t};\n\n\t\t\tresizeImage(file, options)\n\t\t\t\t.then(({ preview }) => {\n\t\t\t\t\tresolve(preview);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(file);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","export const UploaderStatus = {\n\tSTARTED: 0,\n\tSTOPPED: 1,\n};","export const FilterType = {\n\tVALIDATION: 'validation',\n\tPREPARATION: 'preparation',\n};","const getFilesFromDataTransfer = (dataTransfer: DataTransfer) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!dataTransfer.items)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = Array.from(dataTransfer.items)\n\t\t\t.filter(item => isFileSystemItem(item))\n\t\t\t.map(item => getFilesFromItem(item))\n\t\t;\n\n\t\tPromise.all(items)\n\t\t\t.then((fileGroups: Array<File[]>) => {\n\t\t\t\tconst files = [];\n\t\t\t\tfileGroups.forEach((group: File[]) => {\n\t\t\t\t\tfiles.push.apply(files, group);\n\t\t\t\t});\n\n\t\t\t\tresolve(files);\n\t\t\t})\n\t\t\t.catch(reject)\n\t\t;\n\t});\n};\n\nexport default getFilesFromDataTransfer;\n\nconst isFileSystemItem = (item: DataTransferItem) => {\n\tif ('webkitGetAsEntry' in item)\n\t{\n\t\tconst entry = item.webkitGetAsEntry();\n\t\tif (entry)\n\t\t{\n\t\t\treturn entry.isFile || entry.isDirectory;\n\t\t}\n\t}\n\n\treturn item.kind === 'file';\n};\n\nconst getFilesFromItem = (item: DataTransferItem) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (isDirectoryEntry(item))\n\t\t{\n\t\t\tgetFilesInDirectory(getAsEntry(item))\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t;\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolve([item.getAsFile()]);\n\t});\n};\n\nconst getFilesInDirectory = entry => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst files = [];\n\t\tlet dirCounter = 0;\n\t\tlet fileCounter = 0;\n\n\t\tconst resolveIfDone = () => {\n\t\t\tif (fileCounter === 0 && dirCounter === 0)\n\t\t\t{\n\t\t\t\tresolve(files);\n\t\t\t}\n\t\t};\n\n\t\tconst readEntries = dirEntry => {\n\t\t\tdirCounter++;\n\t\t\tconst directoryReader = dirEntry.createReader();\n\t\t\tconst readBatch = () => {\n\t\t\t\tdirectoryReader.readEntries(entries => {\n\t\t\t\t\tif (entries.length === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdirCounter--;\n\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tentries.forEach(entry => {\n\t\t\t\t\t\tif (entry.isDirectory)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadEntries(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileCounter++;\n\t\t\t\t\t\t\tentry.file(file => {\n\t\t\t\t\t\t\t\tfiles.push(file);\n\t\t\t\t\t\t\t\tfileCounter--;\n\t\t\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treadBatch();\n\t\t\t\t}, reject);\n\t\t\t};\n\n\t\t\treadBatch();\n\t\t};\n\n\t\treadEntries(entry);\n\t});\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\nconst isEntry = item => 'webkitGetAsEntry' in item;\nconst getAsEntry = item => item.webkitGetAsEntry();","let result = null;\n\nconst canAppendFileToForm = () => {\n\tif (result === null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst dataTransfer = new DataTransfer();\n\t\t\tconst file = new File(['hello'], 'my.txt');\n\t\t\tdataTransfer.items.add(file);\n\n\t\t\tconst input = document.createElement('input');\n\t\t\tinput.setAttribute('type', 'file');\n\t\t\tinput.files = dataTransfer.files;\n\n\t\t\tresult = input.files.length === 1;\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport default canAppendFileToForm;","import { Type } from 'main.core';\n\nconst assignFileToInput = (input: HTMLInputElement, file: File | File[]) => {\n\ttry\n\t{\n\t\tconst dataTransfer = new DataTransfer();\n\t\tconst files = Type.isArray(file) ? file : [file];\n\n\t\tfiles.forEach(file => {\n\t\t\tdataTransfer.items.add(file);\n\t\t});\n\n\t\tinput.files = dataTransfer.files;\n\t}\n\tcatch (error)\n\t{\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport default assignFileToInput;","import { Type, Event, Reflection, Dom, Extension } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport UploaderFile from './uploader-file';\nimport UploaderError from './uploader-error';\nimport Server from './backend/server';\n\nimport Filter from './filters/filter';\nimport FileSizeFilter from './filters/file-size-filter';\nimport FileTypeFilter from './filters/file-type-filter';\nimport ImageSizeFilter from './filters/image-size-filter';\nimport ImagePreviewFilter from './filters/image-preview-filter';\nimport TransformImageFilter from './filters/transform-image-filter';\n\nimport { FileStatus } from './enums/file-status';\nimport { UploaderStatus } from './enums/uploader-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FilterType } from './enums/filter-type';\n\nimport getFilesFromDataTransfer from './helpers/get-files-from-data-transfer';\nimport canAppendFileToForm from './helpers/can-append-file-to-form';\nimport assignFileToInput from './helpers/assign-file-to-input';\n\nimport type { UploaderOptions } from './types/uploader-options';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\n\nexport default class Uploader extends EventEmitter\n{\n\t#files: UploaderFile[] = [];\n\t#multiple: boolean = false;\n\t#autoUpload: boolean = true;\n\t#allowReplaceSingle: boolean = true;\n\t#maxParallelUploads: number = 2;\n\t#maxParallelLoads: number = 10;\n\t#acceptOnlyImages: boolean = false;\n\t#acceptedFileTypes: string[] = [];\n\t#ignoredFileNames: string[] = ['.ds_store', 'thumbs.db', 'desktop.ini'];\n\t#maxFileCount: ?number = null;\n\t#server: Server = null;\n\n\t#hiddenFields: Map<string, HTMLInputElement> = new Map();\n\t#hiddenFieldsContainer: HTMLElement = null;\n\t#hiddenFieldName: string = 'file';\n\t#assignAsFile: boolean = false;\n\n\t#filters: Map<FilterType, Filter[]> = new Map();\n\t#status: UploaderStatus = UploaderStatus.STOPPED;\n\n\t#onBeforeUploadHandler: Function = null;\n\t#onPrepareFileAsyncHandler: Function = null;\n\t#onUploadStartHandler: Function = null;\n\t#onFileCancelHandler: Function = null;\n\t#onFileStatusChangeHandler: Function = null;\n\t#onFileStateChangeHandler: Function = null;\n\t#onInputFileChangeHandler: Function = null;\n\t#onPasteHandler: Function = null;\n\t#onDropHandler: Function = null;\n\n\t#browsingNodes: Map<HTMLElement, ?Function> = new Map();\n\t#dropNodes: Set<HTMLElement> = new Set();\n\t#pastingNodes: Set<HTMLElement> = new Set();\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader');\n\n\t\tconst options = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\n\t\tthis.#multiple = Type.isBoolean(options.multiple) ? options.multiple : false;\n\t\tthis.#acceptOnlyImages = Type.isBoolean(options.acceptOnlyImages) ? options.acceptOnlyImages : false;\n\n\t\tthis.#onBeforeUploadHandler = this.#handleBeforeUpload.bind(this);\n\t\tthis.#onPrepareFileAsyncHandler = this.#handlePrepareFileAsync.bind(this);\n\t\tthis.#onUploadStartHandler = this.#handleUploadStart.bind(this);\n\t\tthis.#onFileCancelHandler = this.#handleFileCancel.bind(this);\n\t\tthis.#onFileStatusChangeHandler = this.#handleFileStatusChange.bind(this);\n\t\tthis.#onFileStateChangeHandler = this.#handleFileStateChange.bind(this);\n\t\tthis.#onInputFileChangeHandler = this.#handleInputFileChange.bind(this);\n\t\tthis.#onPasteHandler = this.#handlePaste.bind(this);\n\t\tthis.#onDropHandler = this.#handleDrop.bind(this);\n\n\t\tthis.setAutoUpload(options.autoUpload);\n\t\tthis.setMaxParallelUploads(options.maxParallelUploads);\n\t\tthis.setMaxParallelLoads(options.maxParallelLoads);\n\n\t\tif (this.#acceptOnlyImages)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tconst imageExtensions = settings.get('imageExtensions', 'jpg,bmp,jpeg,jpe,gif,png,webp');\n\t\t\tthis.setAcceptedFileTypes(imageExtensions);\n\t\t}\n\n\t\tthis.setAcceptedFileTypes(options.acceptedFileTypes);\n\t\tthis.setIgnoredFileNames(options.ignoredFileNames);\n\t\tthis.setMaxFileCount(options.maxFileCount);\n\t\tthis.setAllowReplaceSingle(options.allowReplaceSingle);\n\n\t\tthis.assignBrowse(options.browseElement);\n\t\tthis.assignDropzone(options.dropElement);\n\t\tthis.assignPaste(options.pasteElement);\n\n\t\tthis.setHiddenFieldsContainer(options.hiddenFieldsContainer);\n\t\tthis.setHiddenFieldName(options.hiddenFieldName);\n\t\tthis.setAssignAsFile(options.assignAsFile);\n\n\t\tlet serverOptions = Type.isPlainObject(options.serverOptions) ? options.serverOptions : {};\n\t\tserverOptions = Object.assign(\n\t\t\t{},\n\t\t\t{ controller: options.controller, controllerOptions: options.controllerOptions },\n\t\t\tserverOptions\n\t\t);\n\n\t\tthis.#server = new Server(serverOptions);\n\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\tthis.addFilter(FilterType.VALIDATION, new FileSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new FileTypeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImageSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImagePreviewFilter(this, options));\n\t\tthis.addFilter(FilterType.PREPARATION, new TransformImageFilter(this, options));\n\t\tthis.addFilters(options.filters);\n\n\t\tthis.addFiles(options.files);\n\t}\n\n\taddFiles(fileList: ArrayLike): void\n\t{\n\t\tif (!Type.isArrayLike(fileList))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst files = Array.from(fileList);\n\t\tif (this.#exceedsMaxFileCount(files))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tfiles.forEach(file => {\n\t\t\tif (Type.isArrayFilled(file))\n\t\t\t{\n\t\t\t\tthis.addFile(file[0], file[1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addFile(file);\n\t\t\t}\n\t\t});\n\t}\n\n\taddFile(source: File | Blob | string | number, options: UploaderFileOptions)\n\t{\n\t\tconst file = new UploaderFile(source, options);\n\n\t\tif (this.getIgnoredFileNames().includes(file.getName().toLowerCase()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#exceedsMaxFileCount([file]))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isMultiple() && this.shouldReplaceSingle() && this.#files.length > 0)\n\t\t{\n\t\t\tconst fileToReplace: UploaderFile = this.#files[0];\n\t\t\tthis.removeFile(fileToReplace);\n\t\t}\n\n\t\tconst event = new BaseEvent({ data: { file: file } });\n\t\tthis.emit('File:onBeforeAdd', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setLoadController(file);\n\t\tthis.#setUploadController(file);\n\n\t\tthis.#files.push(file);\n\t\tfile.setStatus(FileStatus.ADDED);\n\n\t\tthis.emit('File:onAddStart', { file });\n\n\t\tfile.subscribe('onBeforeUpload', this.#onBeforeUploadHandler);\n\t\tfile.subscribe('onPrepareFileAsync', this.#onPrepareFileAsyncHandler);\n\t\tfile.subscribe('onUploadStart', this.#onUploadStartHandler);\n\t\tfile.subscribe('onCancel', this.#onFileCancelHandler);\n\t\tfile.subscribe('onStatusChange', this.#onFileStatusChangeHandler);\n\t\tfile.subscribe('onStateChange', this.#onFileStateChangeHandler);\n\n\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t{\n\t\t\tfile.load();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#loadNext();\n\t\t}\n\t}\n\n\t#setLoadController(file: UploaderFile): void\n\t{\n\t\tconst loadController =\n\t\t\tfile.getOrigin() === FileOrigin.SERVER\n\t\t\t\t? this.getServer().createLoadController()\n\t\t\t\t: this.getServer().createClientLoadController()\n\t\t;\n\n\t\tloadController.subscribeFromOptions({\n\t\t\t'onError': (event: BaseEvent) => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tfile.addError(error);\n\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\tthis.emit('File:onError', { file, error });\n\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t'onAbort': (event: BaseEvent) => {\n\t\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t\t{\n\t\t\t\t\tfile.setStatus(FileStatus.ABORTED);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t}\n\n\t\t\t\tthis.emit('File:onAbort', { file });\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t'onProgress': (event: BaseEvent) => {\n\t\t\t\tthis.emit('File:onLoadProgress', { file, progress: event.getData().progress });\n\t\t\t},\n\t\t\t'onLoad': (event: BaseEvent) => {\n\t\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t\t{\n\t\t\t\t\tfile.setFile(event.getData().fileInfo);\n\t\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\t\t\t\t\tthis.emit('File:onComplete', { file });\n\n\t\t\t\t\tthis.#setHiddenField(file);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Validation\n\t\t\t\tthis.#applyFilters(FilterType.VALIDATION, file)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (file.isUploadable())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setStatus(FileStatus.PENDING);\n\t\t\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\n\t\t\t\t\t\t\tif (this.shouldAutoUpload())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfile.upload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\t\t\t\t\t\t\tthis.emit('File:onComplete', { file });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.#loadNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tfile.addError(error);\n\t\t\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\tthis.emit('File:onError', { file, error });\n\t\t\t\t\t\tthis.emit('File:onAdd', { file, error });\n\t\t\t\t\t\tthis.#loadNext();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t},\n\t\t});\n\n\t\tfile.setLoadController(loadController);\n\t}\n\n\t#setUploadController(file: UploaderFile): void\n\t{\n\t\tconst uploadController = this.getServer().createUploadController();\n\t\tif (!uploadController)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tuploadController.subscribeFromOptions({\n\t\t\t'onError': (event: BaseEvent) => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tfile.addError(error);\n\t\t\t\tfile.setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit('File:onError', { file, error });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t'onAbort': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.ABORTED);\n\t\t\t\tthis.emit('File:onAbort', { file });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t'onProgress': (event: BaseEvent) => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tfile.setProgress(progress);\n\t\t\t\tthis.emit('File:onUploadProgress', { file, progress });\n\t\t\t},\n\t\t\t'onUpload': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\tfile.setFile(event.getData().fileInfo);\n\t\t\t\tthis.emit('File:onUploadComplete', { file });\n\t\t\t\tthis.emit('File:onComplete', { file });\n\n\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t});\n\n\t\tfile.setUploadController(uploadController);\n\t}\n\n\t#exceedsMaxFileCount(fileList: Array): boolean\n\t{\n\t\tconst totalNewFiles = fileList.length;\n\t\tconst totalFiles = this.#files.length;\n\n\t\tif (!this.isMultiple() && totalNewFiles > 1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet maxFileCount;\n\t\tif (this.isMultiple())\n\t\t{\n\t\t\tmaxFileCount = this.getMaxFileCount();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxFileCount = this.shouldReplaceSingle() ? null : 1;\n\t\t}\n\n\t\tif (maxFileCount !== null && totalFiles + totalNewFiles > maxFileCount)\n\t\t{\n\t\t\tconst error = new UploaderError('MAX_FILE_COUNT_EXCEEDED', { maxFileCount });\n\t\t\tthis.emit('onMaxFileCountExceeded', { error });\n\t\t\tthis.emit('onError', { error });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#applyFilters(type: FilterType, ...args): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst filters = [...(this.#filters.get(type) || [])];\n\t\t\tif (filters.length === 0)\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstFilter: Filter = filters.shift();\n\n\t\t\t// chain filters\n\t\t\tfilters\n\t\t\t\t.reduce(\n\t\t\t\t\t(current: Promise, next: Filter) => {\n\t\t\t\t\t\treturn current.then(() => next.apply(...args));\n\t\t\t\t\t},\n\t\t\t\t\tfirstFilter.apply(...args)\n\t\t\t\t)\n\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\tstart(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED && this.getPendingFileCount() > 0)\n\t\t{\n\t\t\tthis.#status = UploaderStatus.STARTED;\n\t\t\tthis.emit('onUploadStart');\n\t\t\tthis.#uploadNext();\n\t\t}\n\t}\n\n\tstop(): void\n\t{\n\t\tthis.#status = UploaderStatus.STOPPED;\n\n\t\tthis.#files.forEach((file: UploaderFile) => {\n\t\t\tif (file.isUploading())\n\t\t\t{\n\t\t\t\tfile.abort();\n\t\t\t\tfile.setStatus(FileStatus.PENDING);\n\t\t\t}\n\t\t});\n\n\t\tthis.emit('onStop');\n\t}\n\n\tcancel(): void\n\t{\n\t\tthis.#files.forEach((file: UploaderFile) => {\n\t\t\tfile.cancel();\n\t\t});\n\t}\n\n\tdestroy(): void\n\t{\n\t\tthis.emit('onDestroy');\n\n\t\tthis.unassignBrowseAll();\n\t\tthis.unassignDropzoneAll();\n\t\tthis.unassignPasteAll();\n\n\t\tthis.#files.forEach((file: UploaderFile) => {\n\t\t\tfile.cancel();\n\t\t});\n\n\t\tthis.#files = [];\n\t\tthis.#server = null;\n\t\tthis.#acceptedFileTypes = null;\n\t\tthis.#ignoredFileNames = null;\n\t\tthis.#filters = null;\n\t\t// #hiddenFields\n\n\t\tObject.setPrototypeOf(this, null);\n\t}\n\n\tremoveFile(file: UploaderFile | string): void\n\t{\n\t\tif (Type.isString(file))\n\t\t{\n\t\t\tfile = this.getFile(file);\n\t\t}\n\n\t\tconst index = this.#files.findIndex(element => element === file);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.#files.splice(index, 1);\n\n\t\t\tfile.abort();\n\t\t\tfile.setStatus(FileStatus.INIT);\n\t\t\tthis.emit('File:onRemove', { file });\n\n\t\t\tthis.#resetHiddenField(file);\n\t\t}\n\t}\n\n\tgetFile(id: string): ?UploaderFile\n\t{\n\t\treturn this.#files.find((file: UploaderFile) => file.getId() === id) || null;\n\t}\n\n\tgetFiles(): UploaderFile[]\n\t{\n\t\treturn Array.from(this.#files);\n\t}\n\n\tisMultiple(): boolean\n\t{\n\t\treturn this.#multiple;\n\t}\n\n\tgetStatus(): UploaderStatus\n\t{\n\t\treturn this.#status;\n\t}\n\n\taddFilter(type: FilterType, filter: Filter | Function | string, filterOptions: { [key: string]: any } = {}): void\n\t{\n\t\tif (Type.isFunction(filter) || Type.isString(filter))\n\t\t{\n\t\t\tconst className = Type.isString(filter) ? Reflection.getClass(filter) : filter;\n\t\t\tif (Type.isFunction(className))\n\t\t\t{\n\t\t\t\tfilter = new className(this, filterOptions);\n\t\t\t}\n\t\t}\n\n\t\tif (filter instanceof Filter)\n\t\t{\n\t\t\tlet filters = this.#filters.get(type);\n\t\t\tif (!Type.isArray(filters))\n\t\t\t{\n\t\t\t\tfilters = [];\n\t\t\t\tthis.#filters.set(type, filters);\n\t\t\t}\n\n\t\t\tfilters.push(filter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Uploader: a filter must be an instance of FileUploader.Filter.');\n\t\t}\n\t}\n\n\taddFilters(filters: Array): void\n\t{\n\t\tif (Type.isArray(filters))\n\t\t{\n\t\t\tfilters.forEach(filter => {\n\t\t\t\tif (Type.isPlainObject(filter))\n\t\t\t\t{\n\t\t\t\t\tthis.addFilter(filter.type, filter.filter, filter.options);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tassignBrowse(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement) => {\n\t\t\tif (!Type.isElementNode(node) || this.#browsingNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet input: HTMLInputElement = null;\n\t\t\tif (node.tagName === 'INPUT' && node.type === 'file')\n\t\t\t{\n\t\t\t\tinput = node;\n\n\t\t\t\t// Add already selected files\n\t\t\t\tif (input.files && input.files.length)\n\t\t\t\t{\n\t\t\t\t\tthis.addFiles(input.files);\n\t\t\t\t}\n\n\t\t\t\tconst acceptAttr = input.getAttribute('accept');\n\t\t\t\tif (Type.isStringFilled(acceptAttr))\n\t\t\t\t{\n\t\t\t\t\tthis.setAcceptedFileTypes(acceptAttr);\n\t\t\t\t}\n\n\t\t\t\tthis.#browsingNodes.set(node, null);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput = document.createElement('input');\n\t\t\t\tinput.setAttribute('type', 'file');\n\n\t\t\t\tconst onBrowseClickHandler = this.#handleBrowseClick.bind(this, input, node);\n\t\t\t\tthis.#browsingNodes.set(node, onBrowseClickHandler);\n\t\t\t\tEvent.bind(node, 'click', onBrowseClickHandler);\n\t\t\t}\n\n\t\t\tif (this.isMultiple())\n\t\t\t{\n\t\t\t\tinput.setAttribute('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(this.getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tinput.setAttribute('accept', this.getAcceptedFileTypes().join(','));\n\t\t\t}\n\n\t\t\tEvent.bind(input, 'change', this.#onInputFileChangeHandler);\n\t\t});\n\t}\n\n\t#handleBrowseClick(input: HTMLInputElement, node: HTMLElement): void\n\t{\n\t\tconst event = new BaseEvent({ data: { input, node } });\n\t\tthis.emit('onBeforeBrowse', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tinput.click();\n\t}\n\n\t#handleInputFileChange(event: Event): void\n\t{\n\t\tconst input = event.currentTarget;\n\n\t\tthis.addFiles(Array.from(input.files));\n\n\t\t// reset file input\n\t\tinput.value = '';\n\t}\n\n\tunassignBrowse(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement) => {\n\t\t\tif (this.#browsingNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'click', this.#browsingNodes.get(node));\n\t\t\t\tEvent.unbind(node, 'change', this.#onInputFileChangeHandler);\n\t\t\t\tthis.#browsingNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignBrowseAll(): void\n\t{\n\t\tArray.from(this.#browsingNodes.keys()).forEach(node => {\n\t\t\tthis.unassignBrowse(node);\n\t\t});\n\t}\n\n\tassignDropzone(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (!Type.isElementNode(node) || this.#dropNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'dragover', this.#preventDefault);\n\t\t\tEvent.bind(node, 'dragenter', this.#preventDefault);\n\t\t\tEvent.bind(node, 'drop', this.#onDropHandler);\n\n\t\t\tthis.#dropNodes.add(node);\n\t\t});\n\t}\n\n\t#handleDrop(dragEvent: DragEvent): void\n\t{\n\t\tdragEvent.preventDefault();\n\n\t\tconst event = new BaseEvent({ data: { dragEvent } });\n\t\tthis.emit('onBeforeDrop', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tgetFilesFromDataTransfer(dragEvent.dataTransfer).then((files: File[]) => {\n\t\t\tthis.addFiles(files);\n\t\t});\n\t}\n\n\t#preventDefault(event: DragEvent): void\n\t{\n\t\tevent.preventDefault();\n\t}\n\n\tunassignDropzone(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (this.#dropNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'dragover', this.#preventDefault);\n\t\t\t\tEvent.unbind(node, 'dragenter', this.#preventDefault);\n\t\t\t\tEvent.unbind(node, 'drop', this.#onDropHandler);\n\t\t\t\tthis.#dropNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignDropzoneAll(): void\n\t{\n\t\tArray.from(this.#dropNodes).forEach(node => {\n\t\t\tthis.unassignDropzone(node);\n\t\t});\n\t}\n\n\tassignPaste(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (!Type.isElementNode(node) || this.#pastingNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'paste', this.#onPasteHandler);\n\t\t\tthis.#pastingNodes.add(node);\n\t\t});\n\t}\n\n\t#handlePaste(clipboardEvent: ClipboardEvent): void\n\t{\n\t\tclipboardEvent.preventDefault();\n\n\t\tconst clipboardData: DataTransfer = clipboardEvent.clipboardData;\n\t\tif (!clipboardData)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = new BaseEvent({ data: { clipboardEvent } });\n\t\tthis.emit('onBeforePaste', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tgetFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\tthis.addFiles(files);\n\t\t});\n\t}\n\n\tunassignPaste(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (this.#pastingNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'paste', this.#onPasteHandler);\n\t\t\t\tthis.#pastingNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignPasteAll(): void\n\t{\n\t\tArray.from(this.#pastingNodes).forEach(node => {\n\t\t\tthis.unassignPaste(node);\n\t\t});\n\t}\n\n\tgetHiddenFieldsContainer(): ?HTMLElement\n\t{\n\t\tlet element = null;\n\t\tif (Type.isStringFilled(this.#hiddenFieldsContainer))\n\t\t{\n\t\t\telement = document.querySelector(this.#hiddenFieldsContainer);\n\t\t}\n\t\telse if (Type.isElementNode(this.#hiddenFieldsContainer))\n\t\t{\n\t\t\telement = this.#hiddenFieldsContainer;\n\t\t}\n\n\t\treturn element;\n\t}\n\n\tsetHiddenFieldsContainer(container: string | HTMLElement): void\n\t{\n\t\tif (Type.isStringFilled(container) || Type.isElementNode(container) || Type.isNull(container))\n\t\t{\n\t\t\tthis.#hiddenFieldsContainer = container;\n\t\t}\n\t}\n\n\tgetHiddenFieldName(): string\n\t{\n\t\treturn this.#hiddenFieldName;\n\t}\n\n\tsetHiddenFieldName(name: string)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#hiddenFieldName = name;\n\t\t}\n\t}\n\n\tshouldAssignAsFile(): boolean\n\t{\n\t\treturn this.#assignAsFile;\n\t}\n\n\tsetAssignAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#assignAsFile = flag;\n\t\t}\n\t}\n\n\tgetTotalSize(): number\n\t{\n\t\treturn this.#files.reduce((totalSize: number, file: UploaderFile) => {\n\t\t\treturn totalSize + file.getSize();\n\t\t}, 0);\n\t}\n\n\tshouldAutoUpload(): boolean\n\t{\n\t\treturn this.#autoUpload;\n\t}\n\n\tsetAutoUpload(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#autoUpload = flag;\n\t\t}\n\t}\n\n\tgetMaxParallelUploads(): number\n\t{\n\t\treturn this.#maxParallelUploads;\n\t}\n\n\tsetMaxParallelUploads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.#maxParallelUploads = number;\n\t\t}\n\t}\n\n\tgetMaxParallelLoads(): number\n\t{\n\t\treturn this.#maxParallelLoads;\n\t}\n\n\tsetMaxParallelLoads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.#maxParallelLoads = number;\n\t\t}\n\t}\n\n\tgetUploadingFileCount(): number\n\t{\n\t\treturn this.#files.filter(file => file.isUploading()).length;\n\t}\n\n\tgetPendingFileCount(): number\n\t{\n\t\treturn this.#files.filter(file => file.isReadyToUpload()).length;\n\t}\n\n\tshouldAcceptOnlyImages(): boolean\n\t{\n\t\treturn this.#acceptOnlyImages;\n\t}\n\n\tgetAcceptedFileTypes(): string[]\n\t{\n\t\treturn this.#acceptedFileTypes;\n\t}\n\n\tsetAcceptedFileTypes(fileTypes: string | string[]): void\n\t{\n\t\tif (Type.isString(fileTypes))\n\t\t{\n\t\t\tfileTypes = fileTypes.split(',');\n\t\t}\n\n\t\tif (Type.isArray(fileTypes))\n\t\t{\n\t\t\tthis.#acceptedFileTypes = [];\n\n\t\t\tfileTypes.forEach(type => {\n\t\t\t\tif (Type.isStringFilled(type))\n\t\t\t\t{\n\t\t\t\t\tthis.#acceptedFileTypes.push(type);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetIgnoredFileNames(): string[]\n\t{\n\t\treturn this.#ignoredFileNames;\n\t}\n\n\tsetIgnoredFileNames(fileNames: string[]): void\n\t{\n\t\tif (Type.isArray(fileNames))\n\t\t{\n\t\t\tthis.#ignoredFileNames = [];\n\n\t\t\tfileNames.forEach(fileName => {\n\t\t\t\tif (Type.isStringFilled(fileName))\n\t\t\t\t{\n\t\t\t\t\tthis.#ignoredFileNames.push(fileName.toLowerCase());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetMaxFileCount(maxFileCount: ?number): void\n\t{\n\t\tif ((Type.isNumber(maxFileCount) && maxFileCount > 0) || maxFileCount === null)\n\t\t{\n\t\t\tthis.#maxFileCount = maxFileCount;\n\t\t}\n\t}\n\n\tgetMaxFileCount(): ?number\n\t{\n\t\treturn this.#maxFileCount;\n\t}\n\n\tsetAllowReplaceSingle(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#allowReplaceSingle = flag;\n\t\t}\n\t}\n\n\tshouldReplaceSingle(): boolean\n\t{\n\t\treturn this.#allowReplaceSingle;\n\t}\n\n\t#uploadNext(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxParallelUploads = this.getMaxParallelUploads();\n\t\tconst currentUploads = this.getUploadingFileCount();\n\t\tconst pendingFiles = this.#files.filter(file => file.isReadyToUpload());\n\t\tconst pendingUploads = pendingFiles.length;\n\n\t\tif (currentUploads < maxParallelUploads)\n\t\t{\n\t\t\tconst limit = Math.min(maxParallelUploads - currentUploads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile = pendingFiles[i];\n\t\t\t\tpendingFile.upload();\n\t\t\t}\n\t\t}\n\n\t\t// All files are COMPLETE or FAILED\n\t\tif (currentUploads === 0 && pendingUploads === 0)\n\t\t{\n\t\t\tthis.#status = UploaderStatus.STOPPED;\n\t\t\tthis.emit('onUploadComplete');\n\t\t}\n\t}\n\n\t#loadNext(): void\n\t{\n\t\tconst maxParallelLoads = this.getMaxParallelLoads();\n\t\tconst currentLoads = this.#files.filter(file => file.isLoading()).length;\n\t\tconst pendingFiles = this.#files.filter(file => {\n\t\t\treturn file.getStatus() === FileStatus.ADDED && file.getOrigin() === FileOrigin.CLIENT;\n\t\t});\n\n\t\tif (currentLoads < maxParallelLoads)\n\t\t{\n\t\t\tconst limit = Math.min(maxParallelLoads - currentLoads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile = pendingFiles[i];\n\t\t\t\tpendingFile.load();\n\t\t\t}\n\t\t}\n\t}\n\n\t#handleBeforeUpload(event: BaseEvent): void\n\t{\n\t\tif (this.getStatus() === UploaderStatus.STOPPED)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.start();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.getUploadingFileCount() >= this.getMaxParallelUploads())\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t#handlePrepareFileAsync(event: BaseEvent): void\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#applyFilters(FilterType.PREPARATION, file)\n\t\t\t\t.then((transformedFile: File) => {\n\t\t\t\t\tif (Type.isFile(transformedFile))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(transformedFile);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(file);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\t#handleUploadStart(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onUploadStart', { file });\n\t}\n\n\t#handleFileCancel(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onCancel', { file });\n\n\t\tthis.removeFile(file);\n\t}\n\n\t#handleFileStatusChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onStatusChange', { file });\n\t}\n\n\t#handleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onStateChange', { file });\n\t}\n\n\t#setHiddenField(file: UploaderFile): void\n\t{\n\t\tconst container = this.getHiddenFieldsContainer();\n\t\tif (!container || this.#hiddenFields.has(file.getId()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: is it needed?\n\t\tconst isExistingServerFile = Type.isNumber(file.getServerId());\n\t\tif (isExistingServerFile)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst assignAsFile =\n\t\t\tfile.getOrigin() === FileOrigin.CLIENT\n\t\t\t&& !file.isUploadable()\n\t\t\t&& this.shouldAssignAsFile()\n\t\t\t&& canAppendFileToForm()\n\t\t;\n\n\t\tconst input = document.createElement('input');\n\t\tinput.type = assignAsFile ? 'file' : 'hidden';\n\t\tinput.name = this.getHiddenFieldName() + (this.isMultiple() ? '[]' : '');\n\n\t\tif (assignAsFile)\n\t\t{\n\t\t\tDom.style(input, {\n\t\t\t\tvisibility: 'hidden',\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tposition: 'absolute',\n\t\t\t\t'pointer-events': 'none',\n\t\t\t});\n\n\t\t\tassignFileToInput(input, file.getFile());\n\t\t}\n\t\telse if (file.getServerId() !== null)\n\t\t{\n\t\t\tinput.value = file.getServerId();\n\t\t}\n\n\t\tcontainer.appendChild(input);\n\t\tthis.#hiddenFields.set(file.getId(), input);\n\n\t\tthis.#syncInputPositions();\n\t}\n\n\t#resetHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input = this.#hiddenFields.get(file.getId());\n\t\tif (input)\n\t\t{\n\t\t\tDom.remove(input);\n\t\t\tthis.#hiddenFields.delete(file.getId());\n\t\t}\n\t}\n\n\t#syncInputPositions(): void\n\t{\n\t\tconst container = this.getHiddenFieldsContainer();\n\t\tif (!container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#files.forEach((file: UploaderFile) => {\n\t\t\tconst input = this.#hiddenFields.get(file.getId());\n\t\t\tif (input)\n\t\t\t{\n\t\t\t\tcontainer.appendChild(input);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\nimport { Uploader, UploaderOptions } from 'ui.uploader.core';\nimport { ref, shallowRef, VueRefValue } from 'ui.vue3';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport default class VueUploaderAdapter extends EventEmitter\n{\n\t#uploader: Uploader = null;\n\t#items: VueRefValue<Array> = null;\n\t#uploaderError = null;\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.Vue.Adapter');\n\n\t\tthis.#items = ref([]);\n\t\tthis.#uploaderError = shallowRef(null);\n\n\t\tconst options = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\t\tconst userEvents = options.events;\n\t\toptions.events = {\n\t\t\t'File:onAddStart': this.#handleFileAdd.bind(this),\n\t\t\t'File:onRemove': this.#handleFileRemove.bind(this),\n\t\t\t'File:onStateChange': this.#handleFileStateChange.bind(this),\n\t\t\t'onError': this.#handleError.bind(this),\n\t\t\t'onUploadStart': this.#handleUploadStart.bind(this),\n\t\t\t'onUploadComplete': this.#handleUploadComplete.bind(this),\n\t\t};\n\n\t\tthis.#uploader = new Uploader(options);\n\t\tthis.#uploader.subscribeFromOptions(userEvents);\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.#uploader;\n\t}\n\n\tgetItems(): VueRefValue<Array>\n\t{\n\t\treturn this.#items;\n\t}\n\n\tgetUploaderError(): VueRefValue<Object>\n\t{\n\t\treturn this.#uploaderError;\n\t}\n\n\t#getItemsArray(): Array\n\t{\n\t\treturn this.#items.value;\n\t}\n\n\t#getItem(id): { [key: string]: any }\n\t{\n\t\treturn this.#getItemsArray().find(item => item.id === id);\n\t}\n\n\t#handleFileAdd(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\t\tconst item = file.getState();\n\t\tthis.#getItemsArray().push(item);\n\n\t\tthis.emit('Item:onAdd', { item });\n\t}\n\n\t#handleFileRemove(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\n\t\tconst position = this.#getItemsArray().findIndex(fileInfo => fileInfo.id === file.getId());\n\t\tif (position >= 0)\n\t\t{\n\t\t\tconst result = this.#getItemsArray().splice(position, 1);\n\t\t\tthis.emit('Item:onRemove', { item: result[0] });\n\t\t}\n\t}\n\n\t#handleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\t\tconst item = this.#getItem(file.getId());\n\t\tif (item)\n\t\t{\n\t\t\tObject.assign(item, file.getState());\n\t\t}\n\t}\n\n\t#handleError(event: BaseEvent): void\n\t{\n\t\tconst { error } = event.getData();\n\t\tthis.#uploaderError.value = error.toJSON();\n\n\t\tthis.emit('Uploader:onError', event);\n\t}\n\n\t#handleUploadStart(event: BaseEvent): void\n\t{\n\t\tthis.emit('Uploader:onUploadStart', event);\n\t}\n\n\t#handleUploadComplete(event: BaseEvent): void\n\t{\n\t\tthis.emit('Uploader:onUploadComplete', event);\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport type { UploaderOptions, Uploader } from 'ui.uploader.core';\nimport { BitrixVue, VueCreateAppResult } from 'ui.vue3';\n\nimport VueUploaderAdapter from './vue-uploader-adapter';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport default class VueUploaderWidget extends EventEmitter\n{\n\t#vueAdapter: VueUploaderAdapter = null;\n\t#uploaderOptions: UploaderOptions = null;\n\t#widgetOptions = {};\n\t#vueApp = null;\n\n\tconstructor(uploaderOptions: UploaderOptions, widgetOptions: {[key: string]: any} = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.Vue.Widget');\n\n\t\tthis.#uploaderOptions = uploaderOptions;\n\t\tthis.#widgetOptions = widgetOptions;\n\t}\n\n\tgetRootComponent(): ?Function\n\t{\n\t\treturn null;\n\t}\n\n\tgetAdapter(): VueUploaderAdapter\n\t{\n\t\tif (this.#vueAdapter === null)\n\t\t{\n\t\t\tthis.#vueAdapter = new VueUploaderAdapter(this.#uploaderOptions);\n\t\t}\n\n\t\treturn this.#vueAdapter;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.getAdapter().getUploader();\n\t}\n\n\tgetVueApp(): VueCreateAppResult\n\t{\n\t\tif (this.#vueApp !== null)\n\t\t{\n\t\t\treturn this.#vueApp;\n\t\t}\n\n\t\tthis.#vueApp = BitrixVue.createApp(this.getRootComponent(), {\n\t\t\tuploaderOptions: this.#uploaderOptions,\n\t\t\twidgetOptions: this.#widgetOptions,\n\t\t\tuploaderAdapter: this.getAdapter(),\n\t\t});\n\n\t\treturn this.#vueApp;\n\t}\n\n\trenderTo(node: HTMLElement): void\n\t{\n\t\tif (Type.isDomNode(node))\n\t\t{\n\t\t\tthis.getVueApp().mount(node);\n\t\t}\n\t}\n}\n","import VueUploaderAdapter from './vue-uploader-adapter';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport const VueUploaderComponent = {\n\tname: 'VueUploaderComponent',\n\tprops: {\n\t\tuploaderOptions: {\n\t\t\ttype: Object\n\t\t},\n\t\twidgetOptions: {\n\t\t\ttype: Object,\n\t\t\tdefault: {},\n\t\t},\n\t\tuploaderAdapter: {\n\t\t\ttype: Object,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata: () => ({\n\t\titems: [],\n\t\tuploaderError: null,\n\t}),\n\tprovide() {\n\t\treturn {\n\t\t\tuploader: this.uploader,\n\t\t\tadapter: this.adapter,\n\t\t\twidgetOptions: this.widgetOptions,\n\t\t}\n\t},\n\tbeforeCreate()\n\t{\n\t\tthis.adapter = this.uploaderAdapter === null ? new VueUploaderAdapter(this.uploaderOptions) : this.uploaderAdapter;\n\t\tthis.uploader = this.adapter.getUploader();\n\t},\n\tcreated()\n\t{\n\t\tthis.items = this.adapter.getItems();\n\t\tthis.uploaderError = this.adapter.getUploaderError();\n\t},\n\tmounted()\n\t{\n\t\tif (!this.uploader.getHiddenFieldsContainer())\n\t\t{\n\t\t\tthis.uploader.setHiddenFieldsContainer(this.$el);\n\t\t}\n\t}\n}","const isImage = (file: File) => {\n\treturn /^image\\/[a-z0-9.-]+$/i.test(file.type);\n};\n\nexport default isImage;","const Marker = {\n\tJPEG: 0xffd8,\n\tAPP1: 0xffe1,\n\tEXIF: 0x45786966,\n\tTIFF: 0x4949,\n\tOrientation: 0x0112,\n\tUnknown: 0xff00\n};\n\nconst getUint16 = (view, offset, little = false) => view.getUint16(offset, little);\nconst getUint32 = (view, offset, little = false) => view.getUint32(offset, little);\n\nconst getJpegOrientation = file => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = function(e) {\n\t\t\tconst view = new DataView(e.target.result);\n\t\t\tif (getUint16(view, 0) !== Marker.JPEG)\n\t\t\t{\n\t\t\t\tresolve(-1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst length = view.byteLength;\n\t\t\tlet offset = 2;\n\n\t\t\twhile (offset < length)\n\t\t\t{\n\t\t\t\tconst marker = getUint16(view, offset);\n\t\t\t\toffset += 2;\n\n\t\t\t\t// APP1 Marker\n\t\t\t\tif (marker === Marker.APP1)\n\t\t\t\t{\n\t\t\t\t\tif (getUint32(view, (offset += 2)) !== Marker.EXIF)\n\t\t\t\t\t{\n\t\t\t\t\t\t// no EXIF\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst little = getUint16(view, (offset += 6)) === Marker.TIFF;\n\t\t\t\t\toffset += getUint32(view, offset + 4, little);\n\n\t\t\t\t\tconst tags = getUint16(view, offset, little);\n\t\t\t\t\toffset += 2;\n\n\t\t\t\t\tfor (let i = 0; i < tags; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Found the orientation tag\n\t\t\t\t\t\tif (getUint16(view, offset + i * 12, little) === Marker.Orientation)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve(getUint16(view, offset + i * 12 + 8, little));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse if ((marker & Marker.Unknown) !== Marker.Unknown)\n\t\t\t\t{\n\t\t\t\t\tbreak; // Invalid\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toffset += getUint16(view, offset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Nothing found\n\t\t\tresolve(-1);\n\t\t};\n\n\t\treader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n\t});\n};\n\nexport default getJpegOrientation;","const isJpeg = (file: File) => {\n\treturn /^image\\/jpeg$/i.test(file.type);\n};\n\nexport default isJpeg;"],"names":["FileStatus","INIT","ADDED","LOADING","PENDING","UPLOADING","ABORTED","COMPLETE","LOAD_FAILED","UPLOAD_FAILED","FileOrigin","CLIENT","SERVER","AbstractUploadController","EventEmitter","constructor","server","setEventNamespace","getServer","upload","file","Error","abort","AbstractLoadController","load","crypto","window","msCrypto","process","require","webcrypto","createUniqueId","replace","c","getRandomValues","Uint8Array","toString","getExtensionFromType","type","Type","isStringFilled","subtype","split","pop","test","counter","createFileFromBlob","blob","fileName","date","Date","getFullYear","getMonth","getDate","extension","File","lastModified","now","lastModifiedDate","exception","slice","size","name","regexp","isDataUri","str","match","createBlobFromDataUri","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","length","view","i","charCodeAt","Blob","getFileExtension","filename","position","lastIndexOf","substring","imageExtensions","isResizableImage","mimeType","isFile","toLowerCase","includes","formatFileSize","base","units","getUnits","isInteger","toFixed","fileSizeUnits","Loc","getMessage","isArrayFilled","UploaderFile","source","fileOptions","options","isPlainObject","isBlob","isNumber","setFile","id","subscribeFromOptions","events","canLoad","setStatus","emit","canUpload","event","BaseEvent","data","isDefaultPrevented","getFile","emitAsync","then","result","catch","error","console","abortLoad","cancel","getUploadController","setUploadController","controller","setLoadController","isReadyToUpload","getStatus","isUploadable","isLoadable","isUploading","isLoading","isComplete","isFailed","setName","setOriginalName","originalName","setType","setSize","setServerId","serverId","setWidth","width","setHeight","height","setClientPreview","clientPreview","clientPreviewWidth","clientPreviewHeight","setServerPreview","serverPreviewUrl","serverPreviewWidth","serverPreviewHeight","setDownloadUrl","downloadUrl","setRemoveUrl","removeUrl","getName","property","value","getOriginalName","getExtension","getType","getSize","getSizeFormatted","getId","getServerId","status","getOrigin","getDownloadUrl","url","getRemoveUrl","getWidth","getHeight","getPreviewUrl","getClientPreview","getClientPreviewUrl","getServerPreviewUrl","getPreviewWidth","getClientPreviewWidth","getServerPreviewWidth","getPreviewHeight","getClientPreviewHeight","getServerPreviewHeight","isNull","revokeClientPreviewUrl","URL","createObjectURL","revokeObjectURL","isImage","getProgress","setProgress","progress","addError","push","getError","getErrors","getState","JSON","parse","stringify","toJSON","sizeFormatted","origin","failed","errors","previewUrl","previewWidth","previewHeight","clientPreviewUrl","UploaderError","BaseError","code","args","message","isString","description","customData","replacements","Object","keys","forEach","key","hasMessage","Origin","USER","setDescription","createFromAjaxErrors","uploaderError","find","system","setOrigin","SYSTEM","UNKNOWN","getDescription","text","values","clone","getCode","getCustomData","Chunk","offset","getNextRetryDelay","shift","setRetries","retries","isArray","getData","getOffset","UploadController","nextChunk","clearTimeout","getChunkSize","getChunkOffset","getToken","setToken","token","chunk","totalSize","isOnlyOneChunk","normalize","headers","encodeURIComponent","rangeStart","rangeEnd","rangeHeader","controllerOptions","getControllerOptions","Ajax","runAction","preparePost","getParameters","getController","onrequeststart","xhr","onprogressupload","lengthComputable","uploadedBytes","Math","min","loaded","floor","response","fileInfo","shouldRetry","nextDelay","setTimeout","currentChunkSize","nextOffset","fileRange","getChunkRetryDelays","queues","WeakMap","loadMultiple","queue","get","tasks","Runtime","debounce","loadInternal","set","delete","task","fileIds","onprogress","total","files","fileResults","fileResult","success","ServerLoadController","ClientLoadController","Server","serverOptions","chunkSize","getDefaultChunkSize","forceChunkSize","chunkRetryDelays","controllerClass","fn","getClass","isFunction","createUploadController","createLoadController","createClientLoadController","settings","Extension","getSettings","getChunkMinSize","getChunkMaxSize","max","Filter","uploader","filterOptions","getUploader","apply","FileSizeFilter","maxFileSize","minFileSize","maxTotalFileSize","imageMaxFileSize","imageMinFileSize","integerOptions","option","Promise","resolve","reject","maxFileSizeInBytes","minFileSizeInBytes","imageMaxFileSizeInBytes","imageMinFileSizeInBytes","getTotalSize","maxTotalFileSizeInBytes","isValidFileType","fileTypes","baseMimeType","trim","charAt","indexOf","FileTypeFilter","getAcceptedFileTypes","getArrayBuffer","fileReader","FileReader","readAsArrayBuffer","onload","onerror","convertStringToBuffer","compareBuffers","dataView","dest","start","j","getUint8","GIF87a","GIF89a","Gif","DataView","getUint16","PNG_SIGNATURE","IHDR_SIGNATURE","FRIED_CHUNK_NAME","Png","getUint32","BMP_SIGNATURE","Bmp","abs","getInt32","EXIF_SIGNATURE","Jpeg","orientation","byteLength","exifBlock","getOrientation","Marker","BIG_ENDIAN","LITTLE_ENDIAN","byteAlign","isBigEndian","isLittleEndian","extractOrientation","littleEndian","idfDirectoryEntries","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","directoryEntryNumber","end","block","byteOffset","tagNumber","dataFormat","numberOfComponents","RIFF_HEADER","WEBP_SIGNATURE","VP8_SIGNATURE","VP8L_SIGNATURE","VP8X_SIGNATURE","Webp","headerType","headerView","bits","extendedHeader","validStart","validEnd","jpg","typeHandlers","gif","png","bmp","jpeg","jpe","webp","getImageSize","typeHandler","ImageSizeFilter","imageMinWidth","imageMinHeight","imageMaxWidth","imageMaxHeight","ignoreUnknownImageTypes","isBoolean","minWidth","minHeight","maxWidth","maxHeight","createWorker","workerBlob","workerURL","worker","Worker","post","callback","transfer","onmessage","postMessage","terminate","BitmapWorker","self","createImageBitmap","bitmap","loadImage","image","document","createElement","src","naturalWidth","naturalHeight","createImagePreview","round","canvas","context","getContext","drawImage","getFilenameWithoutExtension","substr","extensionMap","renameFileToMatchMimeType","canvasPrototype","HTMLCanvasElement","prototype","hasToBlobSupport","toBlob","convertCanvasToBlob","quality","toDataURL","canCreateImageBitmap","ImageBitmap","close","Browser","isSafari","ua","navigator","userAgent","regex","RegExp","exec","resizeImage","loadImageDataFallback","handleImageLoad","imageData","targetWidth","targetHeight","calcTargetSize","preview","newFileName","bitmapWorker","imageBitmap","mode","upscale","ratioWidth","ratioHeight","ratio","ImagePreviewFilter","imagePreviewWidth","imagePreviewHeight","imagePreviewQuality","imagePreviewMimeType","imagePreviewUpscale","imagePreviewResizeMethod","log","TransformImageFilter","resizeWidth","resizeHeight","resizeMethod","resizeMimeType","resizeQuality","UploaderStatus","STARTED","STOPPED","FilterType","VALIDATION","PREPARATION","getFilesFromDataTransfer","dataTransfer","items","Array","from","filter","item","isFileSystemItem","map","getFilesFromItem","all","fileGroups","group","entry","webkitGetAsEntry","isDirectory","kind","isDirectoryEntry","getFilesInDirectory","getAsEntry","getAsFile","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","createReader","readBatch","entries","isEntry","canAppendFileToForm","DataTransfer","add","input","setAttribute","err","assignFileToInput","Uploader","uploaderOptions","Map","Set","assign","multiple","acceptOnlyImages","bind","setAutoUpload","autoUpload","setMaxParallelUploads","maxParallelUploads","setMaxParallelLoads","maxParallelLoads","setAcceptedFileTypes","acceptedFileTypes","setIgnoredFileNames","ignoredFileNames","setMaxFileCount","maxFileCount","setAllowReplaceSingle","allowReplaceSingle","assignBrowse","browseElement","assignDropzone","dropElement","assignPaste","pasteElement","setHiddenFieldsContainer","hiddenFieldsContainer","setHiddenFieldName","hiddenFieldName","setAssignAsFile","assignAsFile","addFilter","addFilters","filters","addFiles","fileList","isArrayLike","addFile","getIgnoredFileNames","isMultiple","shouldReplaceSingle","fileToReplace","removeFile","subscribe","getPendingFileCount","stop","destroy","unassignBrowseAll","unassignDropzoneAll","unassignPasteAll","setPrototypeOf","index","findIndex","element","splice","getFiles","className","Reflection","nodes","isElementNode","node","has","tagName","acceptAttr","getAttribute","onBrowseClickHandler","Event","join","unassignBrowse","unbind","unassignDropzone","unassignPaste","getHiddenFieldsContainer","querySelector","container","getHiddenFieldName","shouldAssignAsFile","flag","reduce","shouldAutoUpload","getMaxParallelUploads","number","getMaxParallelLoads","getUploadingFileCount","shouldAcceptOnlyImages","fileNames","getMaxFileCount","loadController","uploadController","totalNewFiles","totalFiles","firstFilter","current","next","click","currentTarget","dragEvent","preventDefault","clipboardEvent","clipboardData","currentUploads","pendingFiles","pendingUploads","limit","pendingFile","currentLoads","transformedFile","getTarget","isExistingServerFile","Dom","style","visibility","left","top","appendChild","remove","VueUploaderAdapter","ref","shallowRef","userEvents","getItems","getUploaderError","VueUploaderWidget","widgetOptions","getRootComponent","getAdapter","getVueApp","BitrixVue","createApp","uploaderAdapter","renderTo","isDomNode","mount","VueUploaderComponent","props","default","provide","adapter","beforeCreate","created","mounted","$el","JPEG","APP1","EXIF","TIFF","Orientation","Unknown","little","getJpegOrientation","reader","e","target","marker","tags","isJpeg"],"mappings":"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"}