{"version":3,"file":"ui.uploader.bundle.js","sources":["../src/enums/file-status.js","../src/enums/file-origin.js","../src/enums/file-event.js","../src/uploader-error.js","../src/backend/abstract-upload-controller.js","../src/backend/abstract-load-controller.js","../src/backend/abstract-remove-controller.js","../src/helpers/create-unique-id.js","../src/helpers/get-extension-from-type.js","../src/helpers/create-file-from-blob.js","../src/helpers/is-data-uri.js","../src/helpers/create-blob-from-data-uri.js","../src/helpers/get-file-extension.js","../src/helpers/is-resizable-image.js","../src/helpers/format-file-size.js","../src/uploader-file.js","../src/backend/chunk.js","../src/backend/upload-controller.js","../src/backend/server-load-multiple.js","../src/backend/server-load-controller.js","../src/backend/client-load-controller.js","../src/backend/remove-multiple.js","../src/backend/remove-controller.js","../src/backend/serverless-load-controller.js","../src/backend/server.js","../src/filters/filter.js","../src/filters/file-size-filter.js","../src/helpers/is-valid-file-type.js","../src/filters/file-type-filter.js","../src/helpers/get-array-buffer.js","../src/helpers/image-size/convert-string-to-buffer.js","../src/helpers/image-size/compare-buffers.js","../src/helpers/image-size/types/gif.js","../src/helpers/image-size/types/png.js","../src/helpers/image-size/types/bmp.js","../src/helpers/image-size/types/jpeg.js","../src/helpers/image-size/types/webp.js","../src/helpers/image-size/get-image-size.js","../src/filters/image-size-filter.js","../src/helpers/create-worker.js","../src/helpers/bitmap-worker.js","../src/helpers/resize-worker.js","../src/helpers/load-image.js","../src/helpers/create-image-preview-canvas.js","../src/helpers/get-resized-image-size.js","../src/helpers/convert-canvas-to-blob.js","../src/helpers/is-supported-mime-type.js","../src/helpers/sharpen.js","../src/helpers/create-image-preview.js","../src/helpers/get-canvas-to-blob-type.js","../src/helpers/get-filename-without-extension.js","../src/helpers/rename-file-to-match-mime-type.js","../src/helpers/resize-image.js","../src/helpers/is-video.js","../src/helpers/create-video-preview.js","../src/filters/image-preview-filter.js","../src/filters/image-resize-filter.js","../src/enums/uploader-status.js","../src/enums/uploader-event.js","../src/enums/filter-type.js","../src/helpers/get-files-in-directory.js","../src/helpers/is-directory-entry.js","../src/helpers/is-file-system-item.js","../src/helpers/get-files-from-data-transfer.js","../src/helpers/can-append-file-to-form.js","../src/helpers/assign-file-to-input.js","../src/uploader.js","../src/helpers/is-image.js","../src/helpers/get-jpeg-orientation.js","../src/helpers/is-jpeg.js"],"sourcesContent":["export type FileStatusType = {\n\tINIT: string,\n\tADDED: string,\n\tLOADING: string,\n\tPENDING: string,\n\tUPLOADING: string,\n\tCOMPLETE: string,\n\tLOAD_FAILED: string,\n\tUPLOAD_FAILED: string,\n};\n\nexport const FileStatus: FileStatusType = {\n\tINIT: 'init',\n\tADDED: 'added',\n\tLOADING: 'loading',\n\tPENDING: 'pending',\n\tUPLOADING: 'uploading',\n\tCOMPLETE: 'complete',\n\t//REMOVING: 'removing',\n\t//REMOVE_FAILED: 'remove-failed',\n\tLOAD_FAILED: 'load-failed',\n\tUPLOAD_FAILED: 'upload-failed',\n};","export const FileOrigin: Object<string, string> = {\n\tCLIENT: 'client',\n\tSERVER: 'server',\n};","export const FileEvent: Object<string, string> = {\n\tADD: 'onAdd',\n\tBEFORE_UPLOAD: 'onBeforeUpload',\n\tUPLOAD_START: 'onUploadStart',\n\tUPLOAD_ERROR: 'onUploadError',\n\tUPLOAD_PROGRESS: 'onUploadProgress',\n\tUPLOAD_COMPLETE: 'onUploadComplete',\n\tUPLOAD_CONTROLLER_INIT: 'onUploadControllerInit',\n\tLOAD_START: 'onLoadStart',\n\tLOAD_PROGRESS: 'onLoadProgress',\n\tLOAD_COMPLETE: 'onLoadComplete',\n\tLOAD_ERROR: 'onLoadError',\n\tLOAD_CONTROLLER_INIT: 'onLoadControllerInit',\n\tREMOVE_ERROR: 'onRemoveError',\n\tREMOVE_COMPLETE: 'onRemoveComplete',\n\tREMOVE_CONTROLLER_INIT: 'onRemoveControllerInit',\n\tSTATE_CHANGE: 'onStateChange',\n\tSTATUS_CHANGE: 'onStatusChange',\n\tVALIDATE_FILE_ASYNC: 'onValidateFileAsync',\n\tPREPARE_FILE_ASYNC: 'onPrepareFileAsync',\n};\n","import { BaseError, Type, Loc } from 'main.core';\n\n/**\n * @namespace BX.UI.Uploader\n */\nexport default class UploaderError extends BaseError\n{\n\tstatic Origin = {\n\t\tSERVER: 'server',\n\t\tCLIENT: 'client',\n\t};\n\n\tstatic Type = {\n\t\tUSER: 'user',\n\t\tSYSTEM: 'system',\n\t\tUNKNOWN: 'unknown',\n\t};\n\n\tdescription: string = '';\n\torigin: $Values<UploaderError.Origin> = UploaderError.Origin.CLIENT;\n\ttype: $Values<UploaderError.Type> = UploaderError.Type.USER;\n\n\t/**\n\t * new UploaderError(code)\n\t * new UploaderError(code, customData)\n\t * new UploaderError(code, message)\n\t * new UploaderError(code, message, description)\n\t * new UploaderError(code, message, customData)\n\t * new UploaderError(code, message, description, customData)\n\t */\n\tconstructor(code: string, ...args)\n\t{\n\t\tlet message = Type.isString(args[0]) ? args[0] : null;\n\t\tlet description = Type.isString(args[1]) ? args[1] : null;\n\t\tconst customData = Type.isPlainObject(args[args.length - 1]) ? args[args.length - 1] : {};\n\n\t\tconst replacements = {};\n\t\tObject.keys(customData).forEach((key: string) => {\n\t\t\treplacements[`#${key}#`] = customData[key];\n\t\t});\n\n\t\tif (!Type.isString(message) && Loc.hasMessage(`UPLOADER_${code}`))\n\t\t{\n\t\t\tmessage = Loc.getMessage(`UPLOADER_${code}`, replacements);\n\t\t}\n\n\t\tif (Type.isStringFilled(message) && !Type.isString(description) && Loc.hasMessage(`UPLOADER_${code}_DESC`))\n\t\t{\n\t\t\tdescription = Loc.getMessage(`UPLOADER_${code}_DESC`, replacements);\n\t\t}\n\n\t\tsuper(message, code, customData);\n\t\tthis.setDescription(description);\n\t}\n\n\tstatic createFromAjaxErrors(errors: Array): UploaderError\n\t{\n\t\tif (!Type.isArrayFilled(errors) || !Type.isPlainObject(errors[0]))\n\t\t{\n\t\t\treturn new this('SERVER_ERROR');\n\t\t}\n\n\t\tconst uploaderError = errors.find(error => {\n\t\t\treturn error.type === 'file-uploader';\n\t\t});\n\n\t\tif (uploaderError && !uploaderError.system)\n\t\t{\n\t\t\t// Take the First Uploader User Error\n\t\t\tconst { code, message, description, customData } = uploaderError;\n\t\t\tconst error: UploaderError = new this(code, message, description, customData);\n\t\t\terror.setOrigin(UploaderError.Origin.SERVER);\n\t\t\terror.setType(UploaderError.Type.USER);\n\n\t\t\treturn error;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet { code, message, description } = errors[0];\n\t\t\tconst { customData, system, type } = errors[0];\n\n\t\t\tif (code === 'NETWORK_ERROR')\n\t\t\t{\n\t\t\t\tmessage = Loc.getMessage('UPLOADER_NETWORK_ERROR');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Type.isStringFilled(code) ? code : 'SERVER_ERROR';\n\t\t\t\tif (!Type.isStringFilled(description))\n\t\t\t\t{\n\t\t\t\t\tdescription = message;\n\t\t\t\t\tmessage = Loc.getMessage('UPLOADER_SERVER_ERROR');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.error('Uploader', errors);\n\n\t\t\tconst error: UploaderError = new this(code, message, description, customData);\n\t\t\terror.setOrigin(UploaderError.Origin.SERVER);\n\n\t\t\tif (type === 'file-uploader')\n\t\t\t{\n\t\t\t\terror.setType(system ? UploaderError.Type.SYSTEM : UploaderError.Type.USER);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\terror.setType(UploaderError.Type.UNKNOWN);\n\t\t\t}\n\n\t\t\treturn error;\n\t\t}\n\t}\n\n\tstatic createFromError(error: Error): UploaderError\n\t{\n\t\treturn new this(error.name, error.message);\n\t}\n\n\tgetDescription(): string\n\t{\n\t\treturn this.description;\n\t}\n\n\tsetDescription(text: string): this\n\t{\n\t\tif (Type.isString(text))\n\t\t{\n\t\t\tthis.description = text;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetOrigin(): $Values<UploaderError.Origin>\n\t{\n\t\treturn this.origin;\n\t}\n\n\tsetOrigin(origin: $Values<UploaderError.Origin>): this\n\t{\n\t\tif (Object.values(UploaderError.Origin).includes(origin))\n\t\t{\n\t\t\tthis.origin = origin;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetType(): $Values<UploaderError.Type>\n\t{\n\t\treturn this.type;\n\t}\n\n\tsetType(type: $Values<UploaderError.Type>): this\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.type = type;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclone(): UploaderError\n\t{\n\t\tconst options = JSON.parse(JSON.stringify(this));\n\t\tconst error = new UploaderError(\n\t\t\toptions.code,\n\t\t\toptions.message,\n\t\t\toptions.description,\n\t\t\toptions.customData\n\t\t);\n\n\t\terror.setOrigin(options.origin);\n\t\terror.setType(options.type);\n\n\t\treturn error;\n\t}\n\n\ttoString(): string\n\t{\n\t\treturn `Uploader Error (${this.getCode()}): ${this.getMessage()} (${this.getOrigin()})`;\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tcode: this.getCode(),\n\t\t\tmessage: this.getMessage(),\n\t\t\tdescription: this.getDescription(),\n\t\t\torigin: this.getOrigin(),\n\t\t\ttype: this.getType(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\n\nexport default class AbstractUploadController extends EventEmitter\n{\n\t#server: Server;\n\t#options: { [key: string]: any };\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.UploadController');\n\n\t\tthis.#server = server;\n\t\tthis.#options = options;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tgetOptions(): { [key: string]: any }\n\t{\n\t\treturn this.#options;\n\t}\n\n\tgetOption(option: string, defaultValue?: any): any\n\t{\n\t\tif (!Type.isUndefined(this.#options[option]))\n\t\t{\n\t\t\treturn this.#options[option];\n\t\t}\n\t\telse if (!Type.isUndefined(defaultValue))\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tupload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement upload() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractLoadController extends EventEmitter\n{\n\t#server: Server;\n\t#options: { [key: string]: any };\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.LoadController');\n\n\t\tthis.#server = server;\n\t\tthis.#options = options;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tgetOptions(): { [key: string]: any }\n\t{\n\t\treturn this.#options;\n\t}\n\n\tgetOption(option: string, defaultValue?: any): any\n\t{\n\t\tif (!Type.isUndefined(this.#options[option]))\n\t\t{\n\t\t\treturn this.#options[option];\n\t\t}\n\t\telse if (!Type.isUndefined(defaultValue))\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement load() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractRemoveController extends EventEmitter\n{\n\t#server: Server;\n\t#options: { [key: string]: any };\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.RemoveController');\n\n\t\tthis.#server = server;\n\t\tthis.#options = options;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tgetOptions(): { [key: string]: any }\n\t{\n\t\treturn this.#options;\n\t}\n\n\tgetOption(option: string, defaultValue?: any): any\n\t{\n\t\tif (!Type.isUndefined(this.#options[option]))\n\t\t{\n\t\t\treturn this.#options[option];\n\t\t}\n\t\telse if (!Type.isUndefined(defaultValue))\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement remove() method.');\n\t}\n}\n","let crypto = window.crypto || window.msCrypto;\nif (!crypto && typeof(process) === 'object')\n{\n\tcrypto = require('crypto').webcrypto;\n}\n\nconst createUniqueId = (): string => {\n\treturn (`${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`).replace(/[018]/g, c =>\n\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t);\n};\n\nexport default createUniqueId;","import { Type } from 'main.core';\n\nconst getExtensionFromType = (type): string => {\n\tif (!Type.isStringFilled(type))\n\t{\n\t\treturn '';\n\t}\n\n\tconst subtype = type.split('/').pop();\n\n\tif (/javascript/.test(subtype))\n\t{\n\t\treturn 'js';\n\t}\n\n\tif (/plain/.test(subtype))\n\t{\n\t\treturn 'txt';\n\t}\n\n\tif (/svg/.test(subtype))\n\t{\n\t\treturn 'svg';\n\t}\n\n\tif (/[a-z]+/.test(subtype))\n\t{\n\t\treturn subtype;\n\t}\n\n\treturn '';\n};\n\nexport default getExtensionFromType;","import { Type } from 'main.core';\nimport getExtensionFromType from './get-extension-from-type';\n\nlet counter = 0;\nconst createFileFromBlob = (blob: Blob, fileName: string): File => {\n\n\tif (!Type.isStringFilled(fileName))\n\t{\n\t\tconst date = new Date();\n\t\tfileName = `File ${date.getFullYear()}-${date.getMonth()}-${date.getDate()}-${++counter}`;\n\n\t\tconst extension = getExtensionFromType(blob.type);\n\t\tif (extension)\n\t\t{\n\t\t\tfileName += `.${extension}`;\n\t\t}\n\t}\n\n\ttry\n\t{\n\t\treturn new File(\n\t\t\t[blob],\n\t\t\tfileName,\n\t\t\t{\n\t\t\t\tlastModified: Date.now(),\n\t\t\t\tlastModifiedDate: new Date(),\n\t\t\t\ttype: blob.type\n\t\t\t}\n\t\t);\n\t}\n\tcatch (exception)\n\t{\n\t\tconst file = blob.slice(0, blob.size, blob.type);\n\t\tfile.name = fileName;\n\t\tfile.lastModified = Date.now();\n\t\tfile.lastModifiedDate = new Date();\n\n\t\treturn file;\n\t}\n};\n\nexport default createFileFromBlob;","const regexp = /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[\\w\\W]*?[^;])*),(.+)$/;\n\nconst isDataUri = (str: string): boolean => {\n\treturn typeof(str) === 'string' ? str.match(regexp) : false;\n};\n\nexport default isDataUri;","const createBlobFromDataUri = (dataURI: string): Blob => {\n\tconst byteString = atob(dataURI.split(',')[1]);\n\tconst mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\tconst buffer = new ArrayBuffer(byteString.length);\n\tconst view = new Uint8Array(buffer);\n\n\tfor (let i = 0; i < byteString.length; i++)\n\t{\n\t\tview[i] = byteString.charCodeAt(i);\n\t}\n\n\treturn new Blob([buffer], { type: mimeString });\n};\n\nexport default createBlobFromDataUri;","import { Type } from 'main.core';\n\nconst getFileExtension = (filename: string): string => {\n\tconst position: number = Type.isStringFilled(filename) ? filename.lastIndexOf('.') : -1;\n\n\treturn position > 0 ? filename.substring(position + 1) : '';\n};\n\nexport default getFileExtension;\n\n\n","import { Type } from 'main.core';\nimport getFileExtension from './get-file-extension';\n\nconst imageExtensions: string[] = ['jpg', 'bmp', 'jpeg', 'jpe', 'gif', 'png', 'webp'];\n\nconst isResizableImage = (file: File | string, mimeType: string = null): boolean => {\n\tconst fileName: string = Type.isFile(file) ? file.name : file;\n\tconst type: string = Type.isFile(file) ? file.type : mimeType;\n\tconst extension: string = getFileExtension(fileName).toLowerCase();\n\n\tif (imageExtensions.includes(extension))\n\t{\n\t\tif (type === null || /^image\\/[a-z0-9.-]+$/i.test(type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isResizableImage;\n","import { Loc, Type } from 'main.core';\n\nconst formatFileSize = (size: number, base: number = 1024): string => {\n\tlet i = 0;\n\tconst units = getUnits();\n\twhile (size >= base && units[i + 1])\n\t{\n\t\tsize /= base;\n\t\ti++;\n\t}\n\n\treturn (Type.isInteger(size) ? size : size.toFixed(1)) + units[i];\n};\n\nlet fileSizeUnits = null;\nconst getUnits = () => {\n\tif (fileSizeUnits !== null)\n\t{\n\t\treturn fileSizeUnits;\n\t}\n\n\tconst units = Loc.getMessage('UPLOADER_FILE_SIZE_POSTFIXES').split(/[|]/);\n\tfileSizeUnits = Type.isArrayFilled(units) ? units : ['B', 'kB', 'MB', 'GB', 'TB'];\n\n\treturn fileSizeUnits;\n};\n\nexport default formatFileSize;","import { Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FileEvent } from './enums/file-event';\n\nimport UploaderError from './uploader-error';\nimport AbstractUploadController from './backend/abstract-upload-controller';\nimport AbstractLoadController from './backend/abstract-load-controller';\nimport AbstractRemoveController from './backend/abstract-remove-controller';\n\nimport createUniqueId from './helpers/create-unique-id';\nimport createFileFromBlob from './helpers/create-file-from-blob';\nimport isDataUri from './helpers/is-data-uri';\nimport createBlobFromDataUri from './helpers/create-blob-from-data-uri';\nimport isResizableImage from './helpers/is-resizable-image';\nimport formatFileSize from './helpers/format-file-size';\n\nimport type { UploaderFileOptions } from './types/uploader-file-options';\nimport type { UploaderFileInfo } from './types/uploader-file-info';\nimport type { RemoveFileOptions } from './types/remove-file-options';\n\nexport default class UploaderFile extends EventEmitter\n{\n\t#id: string = null;\n\t#file: File = null;\n\t#serverFileId: number | string = null;\n\n\t#name: string = null;\n\t#size: number = 0;\n\t#type: string = '';\n\t#width: ?number = null;\n\t#height: ?number = null;\n\t#treatImageAsFile: boolean = false;\n\n\t#clientPreview: ?Blob = null;\n\t#clientPreviewUrl: ?string = null;\n\t#clientPreviewWidth: ?number = null;\n\t#clientPreviewHeight: ?number = null;\n\n\t#serverPreviewUrl: ?string = null;\n\t#serverPreviewWidth: ?number = null;\n\t#serverPreviewHeight: ?number = null;\n\n\t#downloadUrl: ?string = null;\n\n\t#status: FileStatus = FileStatus.INIT;\n\t#origin: FileOrigin = FileOrigin.CLIENT;\n\t#errors: UploaderError[] = [];\n\t#progress: number = 0;\n\t#customData: Object<string, any> = Object.create(null);\n\n\t#uploadController: AbstractUploadController = null;\n\t#loadController: AbstractLoadController = null;\n\t#removeController: AbstractRemoveController = null;\n\n\t#uploadCallbacks: CallbackCollection = new CallbackCollection(this);\n\n\tconstructor(source: File | Blob | string | number | UploaderFileOptions, fileOptions: UploaderFileOptions = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.File');\n\n\t\tconst options: UploaderFileOptions = Type.isPlainObject(fileOptions) ? fileOptions : {};\n\n\t\tif (Type.isFile(source))\n\t\t{\n\t\t\tthis.#file = source;\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (Type.isBlob(source))\n\t\t{\n\t\t\tthis.#file = createFileFromBlob(source, options.name || source.name);\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (isDataUri(source))\n\t\t{\n\t\t\tconst blob: Blob = createBlobFromDataUri(source);\n\t\t\tthis.#file = createFileFromBlob(blob, options.name);\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (Type.isNumber(source) || Type.isStringFilled(source))\n\t\t{\n\t\t\tthis.#origin = FileOrigin.SERVER;\n\t\t\tthis.#serverFileId = source;\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (Type.isPlainObject(source) && (Type.isNumber(source.serverFileId) || Type.isStringFilled(source.serverFileId)))\n\t\t{\n\t\t\tthis.#origin = FileOrigin.SERVER;\n\t\t\tthis.update(source);\n\t\t}\n\n\t\tthis.#id = Type.isStringFilled(options.id) ? options.id : createUniqueId();\n\n\t\tthis.subscribeFromOptions({\n\t\t\t[FileEvent.ADD]: (): void => {\n\t\t\t\tthis.#setStatus(FileStatus.ADDED);\n\t\t\t},\n\t\t});\n\n\t\tthis.subscribeFromOptions(options.events);\n\t}\n\n\tload(): void\n\t{\n\t\tif (!this.canLoad())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setStatus(FileStatus.LOADING);\n\t\tthis.emit(FileEvent.LOAD_START);\n\n\t\tthis.#loadController.load(this);\n\t}\n\n\tupload(callbacks: { onComplete: Function, onError: Function } = {}): void\n\t{\n\t\tthis.#uploadCallbacks.subscribe(callbacks);\n\t\tif (this.isComplete() && this.isUploadable())\n\t\t{\n\t\t\treturn this.#uploadCallbacks.emit('onComplete');\n\t\t}\n\t\telse if (this.isUploadFailed())\n\t\t{\n\t\t\treturn this.#uploadCallbacks.emit('onError', { error: this.getError() });\n\t\t}\n\t\telse if (!this.canUpload())\n\t\t{\n\t\t\treturn this.#uploadCallbacks.emit('onError', { error: new UploaderError('FILE_UPLOAD_NOT_ALLOWED') });\n\t\t}\n\n\t\tconst event: BaseEvent<{ file: UploaderFile }> = new BaseEvent({ data: { file: this } });\n\t\tthis.emit(FileEvent.BEFORE_UPLOAD, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst prepareEvent: BaseEvent = new BaseEvent({ data: { file: this } });\n\t\tthis.emitAsync(FileEvent.PREPARE_FILE_ASYNC, prepareEvent)\n\t\t\t.then((): void => {\n\t\t\t\tthis.#setStatus(FileStatus.UPLOADING);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_START);\n\t\t\t\tthis.#uploadController.upload(this);\n\t\t\t})\n\t\t\t.catch((prepareError) => {\n\t\t\t\tconst error = this.addError(prepareError);\n\t\t\t\tthis.#setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_ERROR, { error });\n\t\t\t})\n\t\t;\n\t}\n\n\tremove(options?: RemoveFileOptions): void\n\t{\n\t\tif (this.getStatus() === FileStatus.INIT)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setStatus(FileStatus.INIT);\n\t\tthis.emit(FileEvent.REMOVE_COMPLETE);\n\n\t\tthis.abort();\n\n\t\t//this.#setStatus(FileStatus.REMOVING);\n\t\t//this.#removeController.remove(this);\n\n\t\tconst removeFromServer: boolean = !options || options.removeFromServer !== false;\n\t\tif (removeFromServer && this.#removeController !== null && this.getOrigin() === FileOrigin.CLIENT)\n\t\t{\n\t\t\tthis.#removeController.remove(this);\n\t\t}\n\n\t\tthis.#uploadController = null;\n\t\tthis.#loadController = null;\n\t\tthis.#removeController = null;\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tif (this.isUploading())\n\t// \t{\n\t// \t\tthis.abort();\n\t// \t\tthis.setStatus(FileStatus.PENDING);\n\t// \t}\n\t// }\n\t//\n\t// resume(): void\n\t// {\n\t//\n\t// }\n\t// retry(): void\n\t// {\n\t// \t// TODO\n\t// }\n\n\tabort(): void\n\t{\n\t\tif (this.isLoading())\n\t\t{\n\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\n\t\t\tconst error: UploaderError = new UploaderError('FILE_LOAD_ABORTED');\n\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t}\n\t\telse if (this.isUploading())\n\t\t{\n\t\t\tthis.#setStatus(FileStatus.UPLOAD_FAILED);\n\n\t\t\tconst error: UploaderError = new UploaderError('FILE_UPLOAD_ABORTED');\n\t\t\tthis.emit('onUploadError', { error });\n\t\t\tthis.#uploadCallbacks.emit('onError', { error });\n\t\t}\n\n\t\tif (this.#loadController)\n\t\t{\n\t\t\tthis.#loadController.abort();\n\t\t}\n\n\t\tif (this.#uploadController)\n\t\t{\n\t\t\tthis.#uploadController.abort();\n\t\t}\n\t}\n\n\tgetUploadController(): ?AbstractUploadController\n\t{\n\t\treturn this.#uploadController;\n\t}\n\n\tsetUploadController(controller: ?AbstractUploadController): void\n\t{\n\t\tif (!(controller instanceof AbstractUploadController) && !Type.isNull(controller))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst changed = this.#uploadController !== controller;\n\t\tthis.#uploadController = controller;\n\n\t\tif (this.#uploadController && changed)\n\t\t{\n\t\t\tthis.#uploadController.subscribeOnce('onError', (event: BaseEvent): void => {\n\t\t\t\tconst error: UploaderError = this.addError(event.getData().error);\n\t\t\t\tthis.#setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_ERROR, { error });\n\t\t\t\tthis.#uploadCallbacks.emit('onError', { error });\n\t\t\t});\n\n\t\t\tthis.#uploadController.subscribe('onProgress', (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.setProgress(progress);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_PROGRESS, { progress });\n\t\t\t});\n\n\t\t\tthis.#uploadController.subscribeOnce('onUpload', (event: BaseEvent): void => {\n\t\t\t\tthis.#setStatus(FileStatus.COMPLETE);\n\t\t\t\tthis.update(event.getData().fileInfo);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_COMPLETE);\n\n\t\t\t\tthis.#uploadCallbacks.emit('onComplete');\n\t\t\t});\n\t\t}\n\n\t\tif (changed)\n\t\t{\n\t\t\tthis.emit(FileEvent.UPLOAD_CONTROLLER_INIT, { controller });\n\t\t}\n\t}\n\n\tsetLoadController(controller: AbstractLoadController): void\n\t{\n\t\tif (!(controller instanceof AbstractLoadController))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst changed = this.#loadController !== controller;\n\t\tthis.#loadController = controller;\n\n\t\tif (this.#loadController && changed)\n\t\t{\n\t\t\tthis.#loadController.subscribeOnce('onError', (event: BaseEvent): void => {\n\t\t\t\tconst error: UploaderError = this.addError(event.getData().error);\n\t\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t\t});\n\n\t\t\tthis.#loadController.subscribe('onProgress', (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.emit(FileEvent.LOAD_PROGRESS, { progress });\n\t\t\t});\n\n\t\t\tthis.#loadController.subscribeOnce('onLoad', (event: BaseEvent): void => {\n\t\t\t\tif (this.getOrigin() === FileOrigin.CLIENT)\n\t\t\t\t{\n\t\t\t\t\tconst validationEvent: BaseEvent = new BaseEvent({ data: { file: this } });\n\t\t\t\t\tthis.emitAsync(FileEvent.VALIDATE_FILE_ASYNC, validationEvent)\n\t\t\t\t\t\t.then((): void => {\n\t\t\t\t\t\t\tif (this.isUploadable())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.#setStatus(FileStatus.PENDING);\n\t\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_COMPLETE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst preparationEvent: BaseEvent = new BaseEvent({ data: { file: this } });\n\t\t\t\t\t\t\t\tthis.emitAsync(FileEvent.PREPARE_FILE_ASYNC, preparationEvent)\n\t\t\t\t\t\t\t\t\t.then((): void => {\n\t\t\t\t\t\t\t\t\t\tthis.#setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_COMPLETE);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch((preparationError) => {\n\t\t\t\t\t\t\t\t\t\tconst error = this.addError(preparationError);\n\t\t\t\t\t\t\t\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((validationError) => {\n\t\t\t\t\t\t\tconst error = this.addError(validationError);\n\t\t\t\t\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t\t\t\t\t})\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.update(event.getData().fileInfo);\n\n\t\t\t\t\tif (this.isUploadable())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#setStatus(FileStatus.PENDING);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.emit(FileEvent.LOAD_COMPLETE);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (changed)\n\t\t{\n\t\t\tthis.emit(FileEvent.LOAD_CONTROLLER_INIT, { controller });\n\t\t}\n\t}\n\n\tsetRemoveController(controller: ?AbstractRemoveController): void\n\t{\n\t\tif (!(controller instanceof AbstractRemoveController) && !Type.isNull(controller))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst changed = this.#removeController !== controller;\n\t\tthis.#removeController = controller;\n\n\t\tif (this.#removeController && changed)\n\t\t{\n\t\t\tthis.#removeController.subscribeOnce('onError', (event: BaseEvent) => {\n\t\t\t\t//const error = this.addError(event.getData().error);\n\t\t\t\t//this.emit(FileEvent.REMOVE_ERROR, { error });\n\t\t\t});\n\n\t\t\tthis.#removeController.subscribeOnce('onRemove', (event: BaseEvent) => {\n\t\t\t\t//this.#setStatus(FileStatus.INIT);\n\t\t\t\t//this.emit(FileEvent.REMOVE_COMPLETE);\n\t\t\t});\n\t\t}\n\n\t\tif (changed)\n\t\t{\n\t\t\tthis.emit(FileEvent.REMOVE_CONTROLLER_INIT, { controller });\n\t\t}\n\t}\n\n\tisReadyToUpload(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.PENDING;\n\t}\n\n\tisUploadable(): boolean\n\t{\n\t\treturn this.#uploadController !== null;\n\t}\n\n\tisLoadable(): boolean\n\t{\n\t\treturn this.#loadController !== null;\n\t}\n\n\tisRemoveable(): boolean\n\t{\n\t\treturn this.#removeController !== null;\n\t}\n\n\tcanUpload(): boolean\n\t{\n\t\treturn this.isReadyToUpload() && this.isUploadable();\n\t}\n\n\tcanLoad(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.ADDED && this.isLoadable();\n\t}\n\n\tisUploading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOADING;\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOADING;\n\t}\n\n\tisComplete(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.COMPLETE;\n\t}\n\n\tisFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED || this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tisLoadFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED;\n\t}\n\n\tisUploadFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tgetBinary(): ?File\n\t{\n\t\treturn this.#file;\n\t}\n\n\tsetFile(file: File | Blob): void\n\t{\n\t\tif (Type.isFile(file))\n\t\t{\n\t\t\tthis.#file = file;\n\t\t}\n\t\telse if (Type.isBlob(file))\n\t\t{\n\t\t\tthis.#file = createFileFromBlob(file, this.getName());\n\t\t}\n\t}\n\n\tupdate(options: UploaderFileOptions): void\n\t{\n\t\tif (Type.isPlainObject(options))\n\t\t{\n\t\t\tthis.setName(options.name);\n\t\t\tthis.setType(options.type);\n\t\t\tthis.setSize(options.size);\n\n\t\t\tthis.setServerFileId(options.serverFileId);\n\t\t\tthis.setWidth(options.width);\n\t\t\tthis.setHeight(options.height);\n\t\t\tthis.setTreatImageAsFile(options.treatImageAsFile);\n\n\t\t\tthis.setClientPreview(options.clientPreview, options.clientPreviewWidth, options.clientPreviewHeight);\n\t\t\tthis.setServerPreview(options.serverPreviewUrl, options.serverPreviewWidth, options.serverPreviewHeight);\n\n\t\t\tthis.setDownloadUrl(options.downloadUrl);\n\t\t\tthis.setCustomData(options.customData);\n\n\t\t\tthis.setLoadController(options.loadController);\n\t\t\tthis.setUploadController(options.uploadController);\n\t\t\tthis.setRemoveController(options.removeController);\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.#name !== null ? this.#name : (this.getBinary() ? this.getBinary().name : '');\n\t}\n\n\tsetName(name: string | null): void\n\t{\n\t\tif (Type.isStringFilled(name) || Type.isNull(name))\n\t\t{\n\t\t\tthis.#name = name;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'name', value: name });\n\t\t}\n\t}\n\n\tgetExtension(): string\n\t{\n\t\tconst name: string = this.getName();\n\t\tconst position: number = name.lastIndexOf('.');\n\n\t\treturn position >= 0 ? name.substring(position + 1).toLowerCase() : '';\n\t}\n\n\tgetType(): string\n\t{\n\t\treturn this.getBinary() ? this.getBinary().type : this.#type;\n\t}\n\n\tsetType(type: string): string\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.#type = type;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'type', value: type });\n\t\t}\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getBinary() ? this.getBinary().size : this.#size;\n\t}\n\n\tgetSizeFormatted(): string\n\t{\n\t\treturn formatFileSize(this.getSize());\n\t}\n\n\tsetSize(size: number): void\n\t{\n\t\tif (Type.isNumber(size) && size >= 0)\n\t\t{\n\t\t\tthis.#size = size;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'size', value: size });\n\t\t}\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tgetServerFileId(): number | string | null\n\t{\n\t\treturn this.#serverFileId;\n\t}\n\n\t/**\n\t * @deprecated\n\t * use getServerFileId\n\t */\n\tgetServerId(): number | string | null\n\t{\n\t\treturn this.getServerFileId();\n\t}\n\n\tsetServerFileId(id: number | string): void\n\t{\n\t\tif (Type.isNumber(id) || Type.isStringFilled(id))\n\t\t{\n\t\t\tthis.#serverFileId = id;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverFileId', value: id });\n\t\t}\n\t}\n\n\tgetStatus(): FileStatus\n\t{\n\t\treturn this.#status;\n\t}\n\n\t#setStatus(status: FileStatus): void\n\t{\n\t\tthis.#status = status;\n\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'status', value: status });\n\t\tthis.emit(FileEvent.STATUS_CHANGE);\n\t}\n\n\tgetOrigin(): FileOrigin\n\t{\n\t\treturn this.#origin;\n\t}\n\n\tgetDownloadUrl(): ?string\n\t{\n\t\treturn this.#downloadUrl;\n\t}\n\n\tsetDownloadUrl(url: string): void\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#downloadUrl = url;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'downloadUrl', value: url });\n\t\t}\n\t}\n\n\tgetWidth(): ?number\n\t{\n\t\treturn this.#width;\n\t}\n\n\tsetWidth(width: number)\n\t{\n\t\tif (Type.isNumber(width))\n\t\t{\n\t\t\tthis.#width = width;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'width', value: width });\n\t\t}\n\t}\n\n\tgetHeight(): ?number\n\t{\n\t\treturn this.#height;\n\t}\n\n\tsetHeight(height: ?number)\n\t{\n\t\tif (Type.isNumber(height))\n\t\t{\n\t\t\tthis.#height = height;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'height', value: height });\n\t\t}\n\t}\n\n\tsetTreatImageAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#treatImageAsFile = flag;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'treatImageAsFile', value: flag });\n\t\t}\n\t}\n\n\tshouldTreatImageAsFile(): boolean\n\t{\n\t\treturn this.#treatImageAsFile;\n\t}\n\n\tgetPreviewUrl(): ?string\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewUrl() : this.getServerPreviewUrl();\n\t}\n\n\tgetPreviewWidth(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewWidth() : this.getServerPreviewWidth();\n\t}\n\n\tgetPreviewHeight(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewHeight() : this.getServerPreviewHeight();\n\t}\n\n\tgetClientPreview(): ?Blob\n\t{\n\t\treturn this.#clientPreview;\n\t}\n\n\tsetClientPreview(file: ?Blob, width: number = null, height: number = null): void\n\t{\n\t\tif (Type.isBlob(file) || Type.isNull(file))\n\t\t{\n\t\t\tthis.revokeClientPreviewUrl();\n\n\t\t\tconst url = Type.isNull(file) ? null : URL.createObjectURL(file);\n\t\t\tthis.#clientPreview = file;\n\t\t\tthis.#clientPreviewUrl = url;\n\t\t\tthis.#clientPreviewWidth = width;\n\t\t\tthis.#clientPreviewHeight = height;\n\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewUrl', value: url });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewWidth', value: width });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewHeight', value: height });\n\t\t}\n\t}\n\n\tgetClientPreviewUrl(): ?string\n\t{\n\t\treturn this.#clientPreviewUrl;\n\t}\n\n\trevokeClientPreviewUrl(): void\n\t{\n\t\tif (this.#clientPreviewUrl !== null)\n\t\t{\n\t\t\tURL.revokeObjectURL(this.#clientPreviewUrl);\n\n\t\t\tthis.#clientPreviewUrl = null;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewUrl', value: null });\n\t\t}\n\t}\n\n\tgetClientPreviewWidth(): ?number\n\t{\n\t\treturn this.#clientPreviewWidth;\n\t}\n\n\tgetClientPreviewHeight(): ?number\n\t{\n\t\treturn this.#clientPreviewHeight;\n\t}\n\n\tgetServerPreviewUrl(): ?string\n\t{\n\t\treturn this.#serverPreviewUrl;\n\t}\n\n\tsetServerPreview(url: ?string, width: number = null, height: number = null): ?string\n\t{\n\t\tif (Type.isStringFilled(url) || Type.isNull(url))\n\t\t{\n\t\t\tthis.#serverPreviewUrl = url;\n\t\t\tthis.#serverPreviewWidth = width;\n\t\t\tthis.#serverPreviewHeight = height;\n\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverPreviewUrl', value: url });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverPreviewWidth', value: width });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverPreviewHeight', value: height });\n\t\t}\n\t}\n\n\tgetServerPreviewWidth(): ?number\n\t{\n\t\treturn this.#serverPreviewWidth;\n\t}\n\n\tgetServerPreviewHeight(): ?number\n\t{\n\t\treturn this.#serverPreviewHeight;\n\t}\n\n\tisImage(): boolean\n\t{\n\t\tif (this.shouldTreatImageAsFile())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// return isResizableImage(this.getName(), this.getType());\n\t\treturn this.getWidth() > 0 && this.getHeight() > 0 && isResizableImage(this.getName(), this.getType());\n\t}\n\n\tgetProgress(): number\n\t{\n\t\treturn this.#progress;\n\t}\n\n\tsetProgress(progress: ?number): void\n\t{\n\t\tif (Type.isNumber(progress))\n\t\t{\n\t\t\tthis.#progress = progress;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'progress', value: progress });\n\t\t}\n\t}\n\n\taddError(error: Error | UploaderError): UploaderError\n\t{\n\t\tif (error instanceof Error)\n\t\t{\n\t\t\terror = UploaderError.createFromError(error);\n\t\t}\n\n\t\tthis.#errors.push(error);\n\t\tthis.emit(FileEvent.STATE_CHANGE);\n\n\t\treturn error;\n\t}\n\n\tgetError(): ?UploaderError\n\t{\n\t\treturn this.#errors[0] || null;\n\t}\n\n\tgetErrors(): UploaderError[]\n\t{\n\t\treturn this.#errors;\n\t}\n\n\tgetState(): UploaderFileInfo\n\t{\n\t\treturn JSON.parse(JSON.stringify(this));\n\t}\n\n\tsetCustomData(property: ?string | { [key: string]: any }, value?: any): void\n\t{\n\t\tif (Type.isNull(property))\n\t\t{\n\t\t\tthis.#customData = Object.create(null);\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'customData', value: null });\n\t\t}\n\t\telse if (Type.isPlainObject(property))\n\t\t{\n\t\t\tObject.entries(property).forEach((item) => {\n\t\t\t\tconst [currentKey, currentValue] = item;\n\t\t\t\tthis.setCustomData(currentKey, currentValue);\n\t\t\t});\n\t\t}\n\t\telse if (Type.isString(property))\n\t\t{\n\t\t\tif (Type.isNull(value))\n\t\t\t{\n\t\t\t\tdelete this.#customData[property];\n\t\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'customData', customProperty: property, value: null });\n\t\t\t}\n\t\t\telse if (!Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tthis.#customData[property] = value;\n\t\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'customData', customProperty: property, value: value });\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCustomData(property?: string): any\n\t{\n\t\tif (Type.isUndefined(property))\n\t\t{\n\t\t\treturn this.#customData;\n\t\t}\n\t\telse if (Type.isStringFilled(property))\n\t\t{\n\t\t\treturn this.#customData[property];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\ttoJSON(): UploaderFileInfo\n\t{\n\t\treturn {\n\t\t\tid: this.getId(),\n\t\t\tserverFileId: this.getServerFileId(),\n\t\t\tserverId: this.getServerFileId(), // compatibility\n\t\t\tstatus: this.getStatus(),\n\t\t\tname: this.getName(),\n\t\t\tsize: this.getSize(),\n\t\t\tsizeFormatted: this.getSizeFormatted(),\n\t\t\ttype: this.getType(),\n\t\t\textension: this.getExtension(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tisImage: this.isImage(),\n\t\t\tfailed: this.isFailed(),\n\t\t\twidth: this.getWidth(),\n\t\t\theight: this.getHeight(),\n\t\t\tprogress: this.getProgress(),\n\t\t\terror: this.getError(),\n\t\t\terrors: this.getErrors(),\n\t\t\tpreviewUrl: this.getPreviewUrl(),\n\t\t\tpreviewWidth: this.getPreviewWidth(),\n\t\t\tpreviewHeight: this.getPreviewHeight(),\n\t\t\tclientPreviewUrl: this.getClientPreviewUrl(),\n\t\t\tclientPreviewWidth: this.getClientPreviewWidth(),\n\t\t\tclientPreviewHeight: this.getClientPreviewHeight(),\n\t\t\tserverPreviewUrl: this.getServerPreviewUrl(),\n\t\t\tserverPreviewWidth: this.getServerPreviewWidth(),\n\t\t\tserverPreviewHeight: this.getServerPreviewHeight(),\n\t\t\tdownloadUrl: this.getDownloadUrl(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n\nclass CallbackCollection\n{\n\t#emitter: EventEmitter = null;\n\tconstructor(file: UploaderFile)\n\t{\n\t\tthis.#emitter = new EventEmitter(file, 'BX.UI.Uploader.File.UploadCallbacks');\n\t}\n\n\tsubscribe(callbacks: { onComplete: Function, onError: Function } = {})\n\t{\n\t\tcallbacks = Type.isPlainObject(callbacks) ? callbacks : {};\n\t\tif (Type.isFunction(callbacks.onComplete))\n\t\t{\n\t\t\tthis.getEmitter().subscribeOnce('onComplete', callbacks.onComplete);\n\t\t}\n\n\t\tif (Type.isFunction(callbacks.onError))\n\t\t{\n\t\t\tthis.getEmitter().subscribeOnce('onError', callbacks.onError);\n\t\t}\n\t}\n\n\temit(eventName: string, event: BaseEvent | {[key: string]: any})\n\t{\n\t\tif (this.#emitter)\n\t\t{\n\t\t\tthis.#emitter.emit(eventName, event);\n\t\t\tthis.#emitter.unsubscribeAll();\n\t\t}\n\t}\n\n\tgetEmitter(): EventEmitter\n\t{\n\t\tif (Type.isNull(this.#emitter))\n\t\t{\n\t\t\tthis.#emitter = new EventEmitter(this, 'BX.UI.Uploader.File.UploadCallbacks');\n\t\t}\n\n\t\treturn this.#emitter;\n\t}\n}\n","import { Type } from 'main.core';\n\nexport default class Chunk\n{\n\t#data: Blob = null;\n\t#offset: number = 0;\n\t#retries: number[] = [];\n\n\tconstructor(data, offset)\n\t{\n\t\tthis.#data = data;\n\t\tthis.#offset = offset;\n\t}\n\n\tgetNextRetryDelay(): ?number\n\t{\n\t\tif (this.#retries.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.#retries.shift();\n\t}\n\n\tsetRetries(retries: number[]): void\n\t{\n\t\tif (Type.isArray(retries))\n\t\t{\n\t\t\tthis.#retries = retries;\n\t\t}\n\t}\n\n\tgetData(): Blob\n\t{\n\t\treturn this.#data;\n\t}\n\n\tgetOffset(): number\n\t{\n\t\treturn this.#offset;\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getData().size;\n\t}\n}","import { ajax as Ajax, Type } from 'main.core';\n\nimport Server from './server';\nimport Chunk from './chunk';\nimport AbstractUploadController from './abstract-upload-controller';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\n\nexport default class UploadController extends AbstractUploadController\n{\n\t#file: UploaderFile = null;\n\t#chunkOffset: ?number = null;\n\t#chunkTimeout: ?number = null;\n\t#token: string = null;\n\t#xhr: XMLHttpRequest = null;\n\t#aborted: boolean = false;\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tupload(file: UploaderFile): void\n\t{\n\t\tif (!Type.isFile(file.getBinary()))\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#chunkOffset !== null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#file = file;\n\n\t\tconst nextChunk: ?Chunk = this.#getNextChunk();\n\t\tif (nextChunk)\n\t\t{\n\t\t\tthis.#uploadChunk(nextChunk);\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.#xhr)\n\t\t{\n\t\t\tthis.#aborted = true;\n\t\t\tthis.#xhr.abort();\n\t\t\tthis.#xhr = null;\n\t\t}\n\n\t\tclearTimeout(this.#chunkTimeout);\n\t}\n\n\t#uploadChunk(chunk: Chunk): void\n\t{\n\t\tconst totalSize: number = this.getFile().getSize();\n\t\tconst isOnlyOneChunk: boolean = chunk.getOffset() === 0 && totalSize === chunk.getSize();\n\n\t\tlet fileName: string = this.getFile().getName();\n\t\tif (fileName.normalize)\n\t\t{\n\t\t\tfileName = fileName.normalize();\n\t\t}\n\n\t\tconst type: string = Type.isStringFilled(this.getFile().getType())\n\t\t\t? this.getFile().getType()\n\t\t\t: 'application/octet-stream'\n\t\t;\n\n\t\tconst headers = [\n\t\t\t{ name: 'Content-Type', value: type },\n\t\t\t{ name: 'X-Upload-Content-Name', value: encodeURIComponent(fileName) },\n\t\t];\n\n\t\tif (!isOnlyOneChunk)\n\t\t{\n\t\t\tconst rangeStart: number = chunk.getOffset();\n\t\t\tconst rangeEnd: number = chunk.getOffset() + chunk.getSize() - 1;\n\t\t\tconst rangeHeader = `bytes ${rangeStart}-${rangeEnd}/${totalSize}`;\n\n\t\t\theaders.push({ name: 'Content-Range', value: rangeHeader });\n\t\t}\n\n\t\tconst controllerOptions = this.getServer().getControllerOptions();\n\t\tAjax.runAction('ui.fileuploader.upload', {\n\t\t\theaders,\n\t\t\tdata: chunk.getData(),\n\t\t\tpreparePost: false,\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: this.getServer().getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t\ttoken: this.getToken() || '',\n\t\t\t},\n\t\t\tonrequeststart: (xhr): void => {\n\t\t\t\tthis.#xhr = xhr;\n\t\t\t\tthis.#aborted = false;\n\t\t\t},\n\t\t\tonprogressupload: (event: ProgressEvent): void => {\n\t\t\t\tif (event.lengthComputable)\n\t\t\t\t{\n\t\t\t\t\tconst size: number = this.getFile().getSize();\n\t\t\t\t\tconst uploadedBytes: number = Math.min(size, chunk.getOffset() + event.loaded);\n\t\t\t\t\tconst progress: number = size > 0 ? Math.floor(uploadedBytes / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.token)\n\t\t\t\t{\n\t\t\t\t\tthis.setToken(response.data.token);\n\n\t\t\t\t\tif (this.getFile().getServerFileId() === null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Now we can remove a temp file on the backend\n\t\t\t\t\t\tthis.getFile().setServerFileId(response.data.token);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst size: number = this.getFile().getSize();\n\t\t\t\t\tconst progress: number = size > 0 ? Math.floor((chunk.getOffset() + chunk.getSize()) / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\n\t\t\t\t\tconst nextChunk: ?Chunk = this.#getNextChunk();\n\t\t\t\t\tif (nextChunk)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#uploadChunk(nextChunk);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tthis.emit('onUpload', { fileInfo: response.data.file });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(response => {\n\t\t\t\tif (this.#aborted)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst error: UploaderError = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\t\tconst shouldRetry: boolean = error.getCode() === 'NETWORK_ERROR' || error.getType() === UploaderError.Type.UNKNOWN;\n\n\t\t\t\tif (!shouldRetry || !this.#retryUploadChunk(chunk))\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error });\n\t\t\t\t}\n\t\t\t})\n\t\t;\n\t}\n\n\t#retryUploadChunk(chunk: Chunk): boolean\n\t{\n\t\tconst nextDelay: ?number = chunk.getNextRetryDelay();\n\t\tif (nextDelay === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tclearTimeout(this.#chunkTimeout);\n\n\t\tthis.#chunkTimeout = setTimeout((): void => {\n\t\t\tthis.#uploadChunk(chunk);\n\t\t}, nextDelay);\n\n\t\treturn true;\n\t}\n\n\t#getNextChunk(): ?Chunk\n\t{\n\t\tif (this.getChunkOffset() !== null && this.getChunkOffset() >= this.getFile().getSize())\n\t\t{\n\t\t\t// End of File\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.getChunkOffset() === null)\n\t\t{\n\t\t\t// First call\n\t\t\tthis.#chunkOffset = 0;\n\t\t}\n\n\t\tlet chunk: Chunk;\n\t\tif (this.getChunkOffset() === 0 && this.getFile().getSize() <= this.getChunkSize())\n\t\t{\n\t\t\tchunk = new Chunk(this.getFile().getBinary(), this.getChunkOffset());\n\t\t\tthis.#chunkOffset = this.getFile().getSize();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst currentChunkSize: number = Math.min(this.getChunkSize(), this.getFile().getSize() - this.getChunkOffset());\n\t\t\tconst nextOffset: number = this.getChunkOffset() + currentChunkSize;\n\t\t\tconst fileRange: Blob = this.getFile().getBinary().slice(this.getChunkOffset(), nextOffset);\n\n\t\t\tchunk = new Chunk(fileRange, this.getChunkOffset());\n\t\t\tthis.#chunkOffset = nextOffset;\n\t\t}\n\n\t\tchunk.setRetries([...this.getServer().getChunkRetryDelays()]);\n\n\t\treturn chunk;\n\t}\n\n\tgetFile(): UploaderFile\n\t{\n\t\treturn this.#file;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.getServer().getChunkSize();\n\t}\n\n\tgetChunkOffset(): number\n\t{\n\t\treturn this.#chunkOffset;\n\t}\n\n\tgetToken(): ?string\n\t{\n\t\treturn this.#token;\n\t}\n\n\tsetToken(token: string): void\n\t{\n\t\tif (Type.isStringFilled(token))\n\t\t{\n\t\t\tthis.#token = token;\n\t\t}\n\t}\n}\n","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type ServerLoadController from './server-load-controller';\n\ntype QueueTask = {\n\tcontroller: ServerLoadController,\n\tfile: UploaderFile,\n}\n\ntype Queue = {\n\ttasks: QueueTask[],\n\tload: Function,\n\txhr: XMLHttpRequest,\n\taborted: boolean,\n};\n\nconst pendingQueues: WeakMap<Server, Queue> = new WeakMap();\nconst loadingFiles: WeakMap<UploaderFile, Queue> = new WeakMap();\n\nexport function loadMultiple(controller: ServerLoadController, file: UploaderFile): void\n{\n\tconst server: Server = controller.getServer();\n\tconst timeout = controller.getOption('timeout', 100);\n\n\tlet queue = pendingQueues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tload: Runtime.debounce(loadInternal, timeout, server),\n\t\t\txhr: null,\n\t\t\taborted: false,\n\t\t};\n\n\t\tpendingQueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.load();\n}\n\nexport function abort(controller: ServerLoadController, file: UploaderFile): void\n{\n\tconst server: Server = controller.getServer();\n\tconst queue: Queue = pendingQueues.get(server);\n\tif (queue)\n\t{\n\t\tqueue.tasks = queue.tasks.filter((task: QueueTask): boolean => {\n\t\t\treturn task.file !== file;\n\t\t});\n\n\t\tif (queue.tasks.length === 0)\n\t\t{\n\t\t\tpendingQueues.delete(server);\n\t\t}\n\t}\n\telse\n\t{\n\t\tconst queue: Queue = loadingFiles.get(file);\n\t\tif (queue)\n\t\t{\n\t\t\tqueue.tasks = queue.tasks.filter((task: QueueTask): boolean => {\n\t\t\t\treturn task.file !== file;\n\t\t\t});\n\n\t\t\tloadingFiles.delete(file);\n\n\t\t\tif (queue.tasks.length === 0)\n\t\t\t{\n\t\t\t\tqueue.aborted = true;\n\t\t\t\tqueue.xhr.abort();\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction loadInternal(): void\n{\n\tconst server: Server = this;\n\tconst queue: Queue = pendingQueues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tpendingQueues.delete(server);\n\n\tif (queue.tasks.length === 0)\n\t{\n\t\treturn;\n\t}\n\n\tconst fileIds = [];\n\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\tconst file: UploaderFile = task.file;\n\t\tfileIds.push(file.getServerFileId());\n\t\tloadingFiles.set(file, queue);\n\t});\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.load', {\n\t\t\tdata: {\n\t\t\t\tfileIds: fileIds,\n\t\t\t},\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: server.getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t},\n\t\t\tonrequeststart: (xhr): void => {\n\t\t\t\tqueue.xhr = xhr;\n\t\t\t},\n\t\t\tonprogress: (event: ProgressEvent): void => {\n\t\t\t\tif (event.lengthComputable)\n\t\t\t\t{\n\t\t\t\t\tconst progress: number = event.total > 0 ? Math.floor(event.loaded / event.total * 100) : 100;\n\n\t\t\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\t\tcontroller.emit('onProgress', { progress });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t.then(response => {\n\t\t\tif (response.data?.files)\n\t\t\t{\n\t\t\t\tconst fileResults = {};\n\t\t\t\tresponse.data.files.forEach((fileResult): void => {\n\t\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t\t});\n\n\t\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\tconst fileResult = fileResults[file.getServerFileId()] || null;\n\n\t\t\t\t\tloadingFiles.delete(file);\n\n\t\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tcontroller.emit('onLoad', { fileInfo: fileResult.data.file });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst error: UploaderError = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst error: UploaderError = new UploaderError('SERVER_ERROR');\n\t\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\t\tconst { controller, file } = task;\n\n\t\t\t\t\tloadingFiles.delete(file);\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(response => {\n\t\t\tconst error: ?UploaderError = queue.aborted ? null : UploaderError.createFromAjaxErrors(response.errors);\n\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\tconst { controller, file } = task;\n\n\t\t\t\tloadingFiles.delete(file);\n\n\t\t\t\tif (!queue.aborted)\n\t\t\t\t{\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t;\n}","import AbstractLoadController from './abstract-load-controller';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { loadMultiple, abort } from './server-load-multiple';\n\nexport default class ServerLoadController extends AbstractLoadController\n{\n\t#file: UploaderFile = null;\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tthis.#file = file;\n\t\t\tloadMultiple(this, file);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: null });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.getServer().getController() && this.#file)\n\t\t{\n\t\t\tabort(this, this.#file);\n\t\t}\n\t}\n}","import AbstractLoadController from './abstract-load-controller';\nimport Server from './server';\nimport UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\nimport UploaderError from '../uploader-error';\n\nexport default class ClientLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isFile(file.getBinary()))\n\t\t{\n\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\n\t}\n\n}","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type RemoveController from './remove-controller';\nimport type ServerLoadController from './server-load-controller';\n\ntype Queue = {\n\ttasks: Array<{ controller: ServerLoadController, file: UploaderFile }>,\n\tremove: Function,\n\txhr: XMLHttpRequest,\n}\n\nconst queues: WeakMap<Server, Queue> = new WeakMap();\n\nexport function removeMultiple(controller: RemoveController, file: UploaderFile)\n{\n\tconst server = controller.getServer();\n\tlet queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tremove: Runtime.debounce(removeInternal, 1000, server),\n\t\t\txhr: null,\n\t\t};\n\n\t\tqueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.remove();\n}\n\nfunction removeInternal()\n{\n\tconst server: Server = this;\n\tconst queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tconst { tasks } = queue;\n\tqueues.delete(server);\n\n\tconst fileIds = [];\n\ttasks.forEach(task => {\n\t\tconst file: UploaderFile = task.file;\n\t\tif (file.getServerFileId() !== null)\n\t\t{\n\t\t\tfileIds.push(file.getServerFileId());\n\t\t}\n\t});\n\n\tif (fileIds.length === 0)\n\t{\n\t\treturn;\n\t}\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.remove', {\n\t\t\tdata: {\n\t\t\t\tfileIds: fileIds,\n\t\t\t},\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: server.getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t},\n\t\t\tonrequeststart: (xhr) => {\n\t\t\t\tqueue.xhr = xhr;\n\t\t\t},\n\t\t})\n\t\t.then(response => {\n\t\t\tif (response.data?.files)\n\t\t\t{\n\t\t\t\tconst fileResults = {};\n\t\t\t\tresponse.data.files.forEach((fileResult) => {\n\t\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t\t});\n\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\tconst fileResult = fileResults[file.getServerFileId()] || null;\n\n\t\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.emit('onRemove', { fileId: fileResult.id });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst error = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst error = new UploaderError('SERVER_ERROR');\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller } = task;\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(response => {\n\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\ttasks.forEach(task => {\n\t\t\t\tconst { controller } = task;\n\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t});\n\t\t})\n\t;\n}","import AbstractRemoveController from './abstract-remove-controller';\nimport { removeMultiple } from './remove-multiple';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class RemoveController extends AbstractRemoveController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tremove(file: UploaderFile): void\n\t{\n\t\tremoveMultiple(this, file);\n\t}\n}","import { Type } from 'main.core';\n\nimport AbstractLoadController from './abstract-load-controller';\nimport UploaderError from '../uploader-error';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class ServerlessLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isStringFilled(file.getName()))\n\t\t{\n\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\n\t}\n\n}","import { Extension, Runtime, Type } from 'main.core';\nimport UploadController from './upload-controller';\nimport AbstractUploadController from './abstract-upload-controller';\nimport ServerLoadController from './server-load-controller';\nimport AbstractLoadController from './abstract-load-controller';\nimport ClientLoadController from './client-load-controller';\nimport AbstractRemoveController from './abstract-remove-controller';\nimport RemoveController from './remove-controller';\nimport ServerlessLoadController from './serverless-load-controller';\n\nimport type { ServerOptions } from '../types/server-options';\n\nexport default class Server\n{\n\t#controller: ?string = null;\n\t#controllerOptions: ?{ [key: string]: any } = null;\n\t#uploadControllerClass: Class<AbstractUploadController> = null;\n\t#uploadControllerOptions: ?{ [key: string]: any } = {};\n\t#loadControllerClass: Class<AbstractLoadController> = null;\n\t#loadControllerOptions: ?{ [key: string]: any } = {};\n\t#removeControllerClass: Class<AbstractRemoveController> = null;\n\t#removeControllerOptions: ?{ [key: string]: any } = {};\n\t#chunkSize: number = null;\n\t#defaultChunkSize: number = null;\n\t#chunkMinSize: number = null;\n\t#chunkMaxSize: number = null;\n\t#chunkRetryDelays: number[] = [1000, 3000, 6000];\n\n\tconstructor(serverOptions: ServerOptions)\n\t{\n\t\tconst options: ServerOptions = Type.isPlainObject(serverOptions) ? serverOptions : {};\n\n\t\tthis.#controller = Type.isStringFilled(options.controller) ? options.controller : null;\n\t\tthis.#controllerOptions = Type.isPlainObject(options.controllerOptions) ? options.controllerOptions : null;\n\n\t\tconst chunkSize: number =\n\t\t\tType.isNumber(options.chunkSize) && options.chunkSize > 0\n\t\t\t\t? options.chunkSize\n\t\t\t\t: this.getDefaultChunkSize()\n\t\t;\n\n\t\tthis.#chunkSize = options.forceChunkSize === true ? chunkSize : this.#calcChunkSize(chunkSize);\n\n\t\tif (options.chunkRetryDelays === false || options.chunkRetryDelays === null)\n\t\t{\n\t\t\tthis.#chunkRetryDelays = [];\n\t\t}\n\t\telse if (Type.isArray(options.chunkRetryDelays))\n\t\t{\n\t\t\tthis.#chunkRetryDelays = options.chunkRetryDelays;\n\t\t}\n\n\t\tconst controllerClasses: string[] = ['uploadControllerClass', 'loadControllerClass', 'removeControllerClass'];\n\t\tcontrollerClasses.forEach((controllerClass: string): void => {\n\t\t\tlet fn = null;\n\t\t\tif (Type.isStringFilled(options[controllerClass]))\n\t\t\t{\n\t\t\t\tfn = Runtime.getClass(options[controllerClass]);\n\t\t\t\tif (!Type.isFunction(fn))\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`Uploader.Server: \"${controllerClass}\" must be a function.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Type.isFunction(options[controllerClass]))\n\t\t\t{\n\t\t\t\tfn = options[controllerClass];\n\t\t\t}\n\n\t\t\tif (controllerClass === 'uploadControllerClass')\n\t\t\t{\n\t\t\t\tthis.#uploadControllerClass = fn;\n\t\t\t}\n\t\t\telse if (controllerClass === 'loadControllerClass')\n\t\t\t{\n\t\t\t\tthis.#loadControllerClass = fn;\n\t\t\t}\n\t\t\telse if (controllerClass === 'removeControllerClass')\n\t\t\t{\n\t\t\t\tthis.#removeControllerClass = fn;\n\t\t\t}\n\t\t});\n\n\t\tthis.#loadControllerOptions =\n\t\t\tType.isPlainObject(options.loadControllerOptions) ? options.loadControllerOptions : {}\n\t\t;\n\n\t\tthis.#uploadControllerOptions =\n\t\t\tType.isPlainObject(options.uploadControllerOptions) ? options.uploadControllerOptions : {}\n\t\t;\n\n\t\tthis.#removeControllerOptions =\n\t\t\tType.isPlainObject(options.removeControllerOptions) ? options.removeControllerOptions : {}\n\t\t;\n\t}\n\n\tcreateUploadController(): ?UploadController\n\t{\n\t\tif (this.#uploadControllerClass)\n\t\t{\n\t\t\tconst controller: AbstractUploadController = new this.#uploadControllerClass(this, this.#uploadControllerOptions);\n\t\t\tif (!(controller instanceof AbstractUploadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"uploadControllerClass\" must be an instance of AbstractUploadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\t\telse if (Type.isStringFilled(this.#controller))\n\t\t{\n\t\t\treturn new UploadController(this, this.#uploadControllerOptions);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcreateServerLoadController(): AbstractLoadController\n\t{\n\t\tif (this.#loadControllerClass)\n\t\t{\n\t\t\tconst controller: AbstractLoadController = new this.#loadControllerClass(this, this.#loadControllerOptions);\n\t\t\tif (!(controller instanceof AbstractLoadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"loadControllerClass\" must be an instance of AbstractLoadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\treturn this.createDefaultServerLoadController();\n\t}\n\n\tcreateDefaultServerLoadController(): ServerLoadController\n\t{\n\t\treturn new ServerLoadController(this, this.#loadControllerOptions);\n\t}\n\n\tcreateClientLoadController(): ClientLoadController\n\t{\n\t\treturn new ClientLoadController(this, this.#loadControllerOptions);\n\t}\n\n\tcreateServerlessLoadController(): ServerlessLoadController\n\t{\n\t\treturn new ServerlessLoadController(this, this.#loadControllerOptions);\n\t}\n\n\tcreateRemoveController(): ?AbstractRemoveController\n\t{\n\t\tif (this.#removeControllerClass)\n\t\t{\n\t\t\tconst controller: AbstractRemoveController = new this.#removeControllerClass(this, this.#removeControllerOptions);\n\t\t\tif (!(controller instanceof AbstractRemoveController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"removeControllerClass\" must be an instance of AbstractRemoveController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\t\telse if (Type.isStringFilled(this.#controller))\n\t\t{\n\t\t\treturn new RemoveController(this, this.#removeControllerOptions);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetController(): ?string\n\t{\n\t\treturn this.#controller;\n\t}\n\n\tgetControllerOptions(): ?{ [key: string]: any }\n\t{\n\t\treturn this.#controllerOptions;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.#chunkSize;\n\t}\n\n\tgetDefaultChunkSize(): number\n\t{\n\t\tif (this.#defaultChunkSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#defaultChunkSize = settings.get('defaultChunkSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.#defaultChunkSize;\n\t}\n\n\tgetChunkMinSize(): number\n\t{\n\t\tif (this.#chunkMinSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#chunkMinSize = settings.get('chunkMinSize', 1024 * 1024);\n\t\t}\n\n\t\treturn this.#chunkMinSize;\n\t}\n\n\tgetChunkMaxSize(): number\n\t{\n\t\tif (this.#chunkMaxSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#chunkMaxSize = settings.get('chunkMaxSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.#chunkMaxSize;\n\t}\n\n\tgetChunkRetryDelays(): number[]\n\t{\n\t\treturn this.#chunkRetryDelays;\n\t}\n\n\t#calcChunkSize(chunkSize: number): number\n\t{\n\t\treturn Math.min(Math.max(this.getChunkMinSize(), chunkSize), this.getChunkMaxSize());\n\t}\n}\n","import type Uploader from '../uploader';\n\nexport default class Filter\n{\n\t#uploader: Uploader = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tthis.#uploader = uploader;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.#uploader;\n\t}\n\n\t/**\n\t * @abstract\n\t */\n\tapply(...args): Promise\n\t{\n\t\tthrow new Error('You must implement apply() method.');\n\t}\n}\n","import { Extension, Type } from 'main.core';\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport formatFileSize from '../helpers/format-file-size';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\nimport type { UploaderOptions } from '../types/uploader-options';\n\nexport default class FileSizeFilter extends Filter\n{\n\t#maxFileSize: ?number = 256 * 1024 * 1024;\n\t#minFileSize: number = 0;\n\t#maxTotalFileSize: ?number = null;\n\t#imageMaxFileSize: ?number = 48 * 1024 * 1024;\n\t#imageMinFileSize: number = 0;\n\t#treatOversizeImageAsFile: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\tthis.#maxFileSize = settings.get('maxFileSize', this.#maxFileSize);\n\t\tthis.#minFileSize = settings.get('minFileSize', this.#minFileSize);\n\t\tthis.#maxTotalFileSize = settings.get('maxTotalFileSize', this.#maxTotalFileSize);\n\t\tthis.#imageMaxFileSize = settings.get('imageMaxFileSize', this.#imageMaxFileSize);\n\t\tthis.#imageMinFileSize = settings.get('imageMinFileSize', this.#imageMinFileSize);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tthis.setMaxFileSize(options.maxFileSize);\n\t\tthis.setMinFileSize(options.minFileSize);\n\t\tthis.setMaxTotalFileSize(options.maxTotalFileSize);\n\t\tthis.setImageMaxFileSize(options.imageMaxFileSize);\n\t\tthis.setImageMinFileSize(options.imageMinFileSize);\n\t\tthis.setTreatOversizeImageAsFile(options.treatOversizeImageAsFile);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tif (this.getMaxFileSize() !== null && file.getSize() > this.getMaxFileSize())\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxFileSize: formatFileSize(this.getMaxFileSize()),\n\t\t\t\t\t\t\tmaxFileSizeInBytes: this.getMaxFileSize(),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.getSize() < this.getMinFileSize())\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminFileSize: formatFileSize(this.getMinFileSize()),\n\t\t\t\t\t\t\tminFileSizeInBytes: this.getMinFileSize(),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isResizableImage(file.getName(), file.getType()))\n\t\t\t{\n\t\t\t\tif (this.getImageMaxFileSize() !== null && file.getSize() > this.getImageMaxFileSize())\n\t\t\t\t{\n\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t{\n\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\timageMaxFileSize: formatFileSize(this.getImageMaxFileSize()),\n\t\t\t\t\t\t\t\t\timageMaxFileSizeInBytes: this.getImageMaxFileSize(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (file.getSize() < this.getImageMinFileSize())\n\t\t\t\t{\n\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t{\n\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\timageMinFileSize: formatFileSize(this.getImageMinFileSize()),\n\t\t\t\t\t\t\t\t\timageMinFileSizeInBytes: this.getImageMinFileSize(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.getMaxTotalFileSize() !== null && this.getUploader().getTotalSize() > this.getMaxTotalFileSize())\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_TOTAL_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxTotalFileSize: formatFileSize(this.getMaxTotalFileSize()),\n\t\t\t\t\t\t\tmaxTotalFileSizeInBytes: this.getMaxTotalFileSize(),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tgetMaxFileSize(): ?number\n\t{\n\t\treturn this.#maxFileSize;\n\t}\n\n\tsetMaxFileSize(value: ?number)\n\t{\n\t\tif ((Type.isNumber(value) && value >= 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#maxFileSize = value;\n\t\t}\n\t}\n\n\tgetMinFileSize(): number\n\t{\n\t\treturn this.#minFileSize;\n\t}\n\n\tsetMinFileSize(value: number)\n\t{\n\t\tif (Type.isNumber(value) && value >= 0)\n\t\t{\n\t\t\tthis.#minFileSize = value;\n\t\t}\n\t}\n\n\tgetMaxTotalFileSize(): ?number\n\t{\n\t\treturn this.#maxTotalFileSize;\n\t}\n\n\tsetMaxTotalFileSize(value: ?number)\n\t{\n\t\tif ((Type.isNumber(value) && value >= 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#maxTotalFileSize = value;\n\t\t}\n\t}\n\n\tgetImageMaxFileSize(): ?number\n\t{\n\t\treturn this.#imageMaxFileSize;\n\t}\n\n\tsetImageMaxFileSize(value: ?number)\n\t{\n\t\tif ((Type.isNumber(value) && value >= 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#imageMaxFileSize = value;\n\t\t}\n\t}\n\n\tgetImageMinFileSize(): number\n\t{\n\t\treturn this.#imageMinFileSize;\n\t}\n\n\tsetImageMinFileSize(value: number)\n\t{\n\t\tif (Type.isNumber(value) && value >= 0)\n\t\t{\n\t\t\tthis.#imageMinFileSize = value;\n\t\t}\n\t}\n\n\tsetTreatOversizeImageAsFile(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#treatOversizeImageAsFile = value;\n\t\t}\n\t}\n\n\tshouldTreatOversizeImageAsFile(): boolean\n\t{\n\t\treturn this.#treatOversizeImageAsFile;\n\t}\n}\n","import { Type } from 'main.core';\n\nconst isValidFileType = (file: File, fileTypes: string[]): boolean => {\n\tif (!Type.isArrayFilled(fileTypes))\n\t{\n\t\treturn true;\n\t}\n\n\tconst mimeType = file.type;\n\tconst baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n\tfor (let i = 0; i < fileTypes.length; i++)\n\t{\n\t\tif (!Type.isStringFilled(fileTypes[i]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst type = fileTypes[i].trim().toLowerCase();\n\n\t\tif (type.charAt(0) === '.') // extension case\n\t\t{\n\t\t\tif (file.name.toLowerCase().indexOf(type, file.name.length - type.length) !== -1)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (/\\/\\*$/.test(type)) // image/* mime type case\n\t\t{\n\t\t\tif (baseMimeType === type.replace(/\\/.*$/, ''))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (mimeType === type)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isValidFileType;","import Filter from './filter';\nimport isValidFileType from '../helpers/is-valid-file-type';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class FileTypeFilter extends Filter\n{\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tif (isValidFileType(file.getBinary(), this.getUploader().getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new UploaderError('FILE_TYPE_NOT_ALLOWED'));\n\t\t\t}\n\t\t});\n\t}\n}\n","const getArrayBuffer = (file: File | Blob): Promise<ArrayBuffer> => {\n\n\tif (file.arrayBuffer)\n\t{\n\t\treturn file.arrayBuffer();\n\t}\n\telse\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst fileReader = new FileReader();\n\t\t\tfileReader.readAsArrayBuffer(file);\n\n\t\t\tfileReader.onload = () => {\n\t\t\t\tconst buffer: ArrayBuffer = fileReader.result;\n\n\t\t\t\tresolve(buffer);\n\t\t\t};\n\n\t\t\tfileReader.onerror = () => {\n\t\t\t\treject(fileReader.error);\n\t\t\t};\n\t\t});\n\n\t}\n};\n\nexport default getArrayBuffer;","const convertStringToBuffer = (str: string): ArrayLike => {\n\tconst result = [];\n\tfor (let i = 0; i < str.length; i++)\n\t{\n\t\tresult.push(str.charCodeAt(i) & 0xFF);\n\t}\n\n\treturn result;\n};\nexport default convertStringToBuffer;","const compareBuffers = (dataView: DataView, dest: ArrayLike, start: number): boolean => {\n\tfor (let i = start, j = 0; j < dest.length;)\n\t{\n\t\tif (dataView.getUint8(i++) !== dest[j++])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport default compareBuffers;","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst GIF87a = convertStringToBuffer('GIF87a');\nconst GIF89a = convertStringToBuffer('GIF89a');\n\nexport default class Gif\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 10)\n\t\t\t{\n\t\t\t\treturn reject(new Error('GIF signature not found.'));\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 10);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, GIF87a, 0) && !compareBuffers(view, GIF89a, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn reject(new Error('GIF signature not found.'));\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint16(6, true),\n\t\t\t\t\t\theight: view.getUint16(8, true),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\nimport type { ImageSize } from '../image-size-type';\n\nconst PNG_SIGNATURE = convertStringToBuffer('\\x89PNG\\r\\n\\x1a\\n');\nconst IHDR_SIGNATURE = convertStringToBuffer('IHDR');\nconst FRIED_CHUNK_NAME = convertStringToBuffer('CgBI');\n\nexport default class Png\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 40)\n\t\t\t{\n\t\t\t\treturn reject(new Error('PNG signature not found.'));\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 40);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, PNG_SIGNATURE, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn reject(new Error('PNG signature not found.'));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (compareBuffers(view, FRIED_CHUNK_NAME, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (compareBuffers(view, IHDR_SIGNATURE, 28))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\twidth: view.getUint32(32),\n\t\t\t\t\t\t\t\theight: view.getUint32(36),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn reject(new Error('PNG IHDR not found.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (compareBuffers(view, IHDR_SIGNATURE, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: view.getUint32(16),\n\t\t\t\t\t\t\theight: view.getUint32(20),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn reject(new Error('PNG IHDR not found.'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst BMP_SIGNATURE = 0x424d; // BM\n\nexport default class Bmp\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 26)\n\t\t\t{\n\t\t\t\treturn reject(new Error('BMP signature not found.'));\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 26);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (!view.getUint16(0) === BMP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn reject(new Error('BMP signature not found.'));\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint32(18, true),\n\t\t\t\t\t\theight: Math.abs(view.getInt32(22, true)),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst EXIF_SIGNATURE = convertStringToBuffer('Exif\\0\\0');\n\nexport default class Jpeg\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 2)\n\t\t\t{\n\t\t\t\treturn reject(new Error('JPEG signature not found.'));\n\t\t\t}\n\n\t\t\tgetArrayBuffer(file)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint8(0) !== 0xFF || view.getUint8(1) !== 0xD8)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn reject(new Error('JPEG signature not found.'));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offset = 2;\n\t\t\t\t\tlet orientation = -1;\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn reject(new Error('JPEG signature not found.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (view.getUint8(offset++) !== 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn reject(new Error('JPEG signature not found.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet code = view.getUint8(offset++);\n\t\t\t\t\t\tlet length;\n\n\t\t\t\t\t\t// skip padding bytes\n\t\t\t\t\t\twhile (code === 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcode = view.getUint8(offset++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((0xD0 <= code && code <= 0xD9) || code === 0x01)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (0xC0 <= code && code <= 0xFE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// the rest of the unreserved markers\n\t\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn reject(new Error('JPEG signature not found.'));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlength = view.getUint16(offset) - 2;\n\t\t\t\t\t\t\toffset += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn reject(new Error('JPEG unknown markers.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (code === 0xD9 /* EOI */ || code === 0xDA /* SOS */)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn reject(new Error('JPEG end of the data stream.'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try to get orientation from Exif segment\n\t\t\t\t\t\tif (code === 0xE1 && length >= 10 && compareBuffers(view, EXIF_SIGNATURE, offset))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst exifBlock = new DataView(view.buffer, offset + 6, offset + length);\n\t\t\t\t\t\t\torientation = getOrientation(exifBlock);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlength >= 5\n\t\t\t\t\t\t\t&& (0xC0 <= code && code <= 0xCF)\n\t\t\t\t\t\t\t&& code !== 0xC4 && code !== 0xC8 && code !== 0xCC\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (view.byteLength - offset < length)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn reject(new Error('JPEG size not found.'));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet width = view.getUint16(offset + 3);\n\t\t\t\t\t\t\tlet height = view.getUint16(offset + 1);\n\t\t\t\t\t\t\tif (orientation >= 5 && orientation <= 8)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[width, height] = [height, width];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn resolve({\n\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\torientation,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset += length;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n\nconst Marker = {\n\tBIG_ENDIAN: 0x4d4d,\n\tLITTLE_ENDIAN: 0x4949,\n};\n\nconst getOrientation = (exifBlock: DataView) => {\n\tconst byteAlign = exifBlock.getUint16(0);\n\tconst isBigEndian = byteAlign === Marker.BIG_ENDIAN;\n\tconst isLittleEndian = byteAlign === Marker.LITTLE_ENDIAN;\n\n\tif (isBigEndian || isLittleEndian)\n\t{\n\t\treturn extractOrientation(exifBlock, isLittleEndian);\n\t}\n\n\treturn -1;\n};\n\nconst extractOrientation = (exifBlock: DataView, littleEndian: boolean = false) => {\n\n\tconst offset = 8; // idf offset\n\tconst idfDirectoryEntries = exifBlock.getUint16(offset, littleEndian);\n\n\tconst IDF_ENTRY_BYTES = 12;\n\tconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\n\n\tfor (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++)\n\t{\n\t\tconst start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n\t\tconst end = start + IDF_ENTRY_BYTES;\n\n\t\t// Skip on corrupt EXIF blocks\n\t\tif (start > exifBlock.byteLength)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst block = new DataView(exifBlock.buffer, exifBlock.byteOffset + start, end - start);\n\t\tconst tagNumber = block.getUint16(0, littleEndian);\n\n\t\t// 274 is the `orientation` tag ID\n\t\tif (tagNumber === 274)\n\t\t{\n\t\t\tconst dataFormat = block.getUint16(2, littleEndian)\n\t\t\tif (dataFormat !== 3)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tconst numberOfComponents = block.getUint32(4, littleEndian);\n\t\t\tif (numberOfComponents !== 1)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn block.getUint16(8, littleEndian)\n\t\t}\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst RIFF_HEADER = 0x52494646; // RIFF\nconst WEBP_SIGNATURE = 0x57454250; // WEBP\nconst VP8_SIGNATURE = 0x56503820; // VP8\nconst VP8L_SIGNATURE = 0x5650384c; // VP8L\nconst VP8X_SIGNATURE = 0x56503858; // VP8X\n\nexport default class Webp\n{\n\tgetSize(file: File): Promise<?ImageSize>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 16)\n\t\t\t{\n\t\t\t\treturn reject(new Error('WEBP signature not found.'));\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 30);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint32(0) !== RIFF_HEADER && view.getUint32(8) !== WEBP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn reject(new Error('WEBP signature not found.'));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst headerType = view.getUint32(12);\n\t\t\t\t\tconst headerView = new DataView(buffer, 20, 10);\n\t\t\t\t\tif (headerType === VP8_SIGNATURE && headerView.getUint8(0) !== 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: headerView.getUint16(6, true) & 0x3fff,\n\t\t\t\t\t\t\theight: headerView.getUint16(8, true) & 0x3fff,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8L_SIGNATURE && headerView.getUint8(0) === 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst bits = headerView.getUint32(1, true);\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: (bits & 0x3FFF) + 1,\n\t\t\t\t\t\t\theight: ((bits >> 14) & 0x3FFF) + 1,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8X_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst extendedHeader = headerView.getUint8(0);\n\t\t\t\t\t\tconst validStart = (extendedHeader & 0xc0) === 0;\n\t\t\t\t\t\tconst validEnd = (extendedHeader & 0x01) === 0;\n\t\t\t\t\t\tif (validStart && validEnd)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst width = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(6) << 16)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(5) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(4)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst height = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(9) << 0)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(8) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(7)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresolve({ width, height });\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treject(new Error('WEBP signature not found.'));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import Gif from './types/gif';\nimport Png from './types/png';\nimport Bmp from './types/bmp';\nimport Jpeg from './types/jpeg';\nimport Webp from './types/webp';\n\nimport getFileExtension from '../get-file-extension';\nimport type { ImageSize } from './image-size-type';\n\nconst jpg = new Jpeg();\nconst typeHandlers = {\n\tgif: new Gif(),\n\tpng: new Png(),\n\tbmp: new Bmp(),\n\tjpg: jpg,\n\tjpeg: jpg,\n\tjpe: jpg,\n\twebp: new Webp()\n};\n\nconst getImageSize = (file: File): Promise<ImageSize> => {\n\tif (file.size === 0)\n\t{\n\t\treturn Promise.reject(new Error('Unknown image type.'));\n\t}\n\n\tconst extension = getFileExtension(file.name).toLowerCase();\n\tconst type = file.type.replace(/^image\\//, '');\n\tconst typeHandler = typeHandlers[extension] || typeHandlers[type];\n\tif (!typeHandler)\n\t{\n\t\treturn Promise.reject(new Error('Unknown image type.'));\n\t}\n\n\treturn typeHandler.getSize(file);\n};\n\nexport default getImageSize;\n\n","import { Extension, Type } from 'main.core';\n\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport getImageSize from '../helpers/image-size/get-image-size';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\nimport type { UploaderOptions } from '../types/uploader-options';\n\nexport default class ImageSizeFilter extends Filter\n{\n\t#imageMinWidth: number = 1;\n\t#imageMinHeight: number = 1;\n\t#imageMaxWidth: number = 7000;\n\t#imageMaxHeight: number = 7000;\n\t#ignoreUnknownImageTypes: boolean = false;\n\t#treatOversizeImageAsFile: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\tthis.#imageMinWidth = settings.get('imageMinWidth', this.#imageMinWidth);\n\t\tthis.#imageMinHeight = settings.get('imageMinHeight', this.#imageMinHeight);\n\t\tthis.#imageMaxWidth = settings.get('imageMaxWidth', this.#imageMaxWidth);\n\t\tthis.#imageMaxHeight = settings.get('imageMaxHeight', this.#imageMaxHeight);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tthis.setImageMinWidth(options.imageMinWidth);\n\t\tthis.setImageMinHeight(options.imageMinHeight);\n\t\tthis.setImageMaxWidth(options.imageMaxWidth);\n\t\tthis.setImageMaxHeight(options.imageMaxHeight);\n\t\tthis.setIgnoreUnknownImageTypes(options.ignoreUnknownImageTypes);\n\t\tthis.setTreatOversizeImageAsFile(options.treatOversizeImageAsFile);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tif (!isResizableImage(file.getName(), file.getType()))\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgetImageSize(file.getBinary())\n\t\t\t\t.then(({ width, height }): void => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\n\t\t\t\t\tif (width < this.getImageMinWidth() || height < this.getImageMinHeight())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_IS_TOO_SMALL',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tminWidth: this.getImageMinWidth(),\n\t\t\t\t\t\t\t\t\tminHeight: this.getImageMinHeight(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (width > this.getImageMaxWidth() || height > this.getImageMaxHeight())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_IS_TOO_BIG',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmaxWidth: this.getImageMaxWidth(),\n\t\t\t\t\t\t\t\t\tmaxHeight: this.getImageMaxHeight(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\tif (this.getIgnoreUnknownImageTypes())\n\t\t\t\t\t{\n\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('Uploader ImageSizeFilter:', error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treject(new UploaderError('IMAGE_TYPE_NOT_SUPPORTED'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tgetImageMinWidth(): number\n\t{\n\t\treturn this.#imageMinWidth;\n\t}\n\n\tsetImageMinWidth(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMinWidth = value;\n\t\t}\n\t}\n\n\tgetImageMinHeight(): number\n\t{\n\t\treturn this.#imageMinHeight;\n\t}\n\n\tsetImageMinHeight(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMinHeight = value;\n\t\t}\n\t}\n\n\tgetImageMaxWidth(): number\n\t{\n\t\treturn this.#imageMaxWidth;\n\t}\n\n\tsetImageMaxWidth(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMaxWidth = value;\n\t\t}\n\t}\n\n\tgetImageMaxHeight(): number\n\t{\n\t\treturn this.#imageMaxHeight;\n\t}\n\n\tsetImageMaxHeight(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMaxHeight = value;\n\t\t}\n\t}\n\n\tgetIgnoreUnknownImageTypes(): boolean\n\t{\n\t\treturn this.#ignoreUnknownImageTypes;\n\t}\n\n\tsetIgnoreUnknownImageTypes(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#ignoreUnknownImageTypes = value;\n\t\t}\n\t}\n\n\tsetTreatOversizeImageAsFile(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#treatOversizeImageAsFile = value;\n\t\t}\n\t}\n\n\tshouldTreatOversizeImageAsFile(): boolean\n\t{\n\t\treturn this.#treatOversizeImageAsFile;\n\t}\n}\n","import createUniqueId from './create-unique-id';\n\nconst createWorker = (fn: Function) => {\n\tconst workerBlob = new Blob(['(', fn.toString(), ')()'], { type: 'application/javascript' });\n\tconst workerURL = URL.createObjectURL(workerBlob);\n\tconst worker = new Worker(workerURL);\n\n\treturn {\n\t\tpost: (message, callback, transfer): void => {\n\t\t\tconst id = createUniqueId();\n\t\t\tworker.onmessage = event => {\n\t\t\t\tif (event.data.id === id)\n\t\t\t\t{\n\t\t\t\t\tcallback(event.data.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.postMessage({ id, message }, transfer);\n\t\t},\n\t\tterminate: (): void => {\n\t\t\tworker.terminate();\n\t\t\tURL.revokeObjectURL(workerURL);\n\t\t}\n\t};\n};\n\nexport default createWorker;","const BitmapWorker = function() {\n\tself.onmessage = event => {\n\t\t// Hack for Safari. Workers can become unpredictable.\n\t\t// Sometimes 'self.postMessage' doesn't emit 'onmessage' event.\n\t\tsetTimeout(() => {\n\t\t\tcreateImageBitmap(event.data.message.file)\n\t\t\t\t.then(bitmap => {\n\t\t\t\t\tself.postMessage({ id: event?.data?.id, message: bitmap }, [bitmap]);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tself.postMessage({ id: event.data.id, message: null }, []);\n\t\t\t\t})\n\t\t\t;\n\t\t}, 0);\n\t};\n};\n\nexport default BitmapWorker;","const ResizeWorker = (): void => {\n\tself.onmessage = (event: MessageEvent): void => {\n\t\t// Hack for Safari. Workers can become unpredictable.\n\t\t// Sometimes 'self.postMessage' doesn't emit 'onmessage' event.\n\t\tsetTimeout((): void => {\n\t\t\tconst {\n\t\t\t\tfile,\n\t\t\t\toptions = {},\n\t\t\t\tgetResizedImageSizeSource,\n\t\t\t\tcreateImagePreviewCanvasSource,\n\t\t\t\tsharpenSource,\n\t\t\t\tshouldSharpenSource,\n\t\t\t\ttype,\n\t\t\t} = event.data.message;\n\n\t\t\tcreateImageBitmap(file)\n\t\t\t\t.then(bitmap => {\n\n\t\t\t\t\tconst getResizedImageSize = new Function('return ' + getResizedImageSizeSource)();\n\t\t\t\t\tconst { targetWidth, targetHeight, useOriginalSize } = getResizedImageSize(bitmap, options);\n\n\t\t\t\t\tif (useOriginalSize)\n\t\t\t\t\t{\n\t\t\t\t\t\tbitmap.close();\n\n\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\tid: event?.data?.id,\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\tuseOriginalSize,\n\t\t\t\t\t\t\t\ttargetWidth,\n\t\t\t\t\t\t\t\ttargetHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}, []);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst createImagePreviewCanvas = new Function('return ' + createImagePreviewCanvasSource)();\n\t\t\t\t\t\tlet offscreenCanvas: OffscreenCanvas = createImagePreviewCanvas(bitmap, targetWidth, targetHeight);\n\n\t\t\t\t\t\tconst sharpen = new Function('return ' + sharpenSource)();\n\t\t\t\t\t\tconst shouldSharpen = new Function('return ' + shouldSharpenSource)();\n\t\t\t\t\t\tif (shouldSharpen(bitmap, targetWidth, targetHeight))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsharpen(offscreenCanvas, targetWidth, targetHeight, 0.2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbitmap.close();\n\n\t\t\t\t\t\tconst previewBitmap = offscreenCanvas.transferToImageBitmap();\n\n\t\t\t\t\t\toffscreenCanvas.width = 0;\n\t\t\t\t\t\toffscreenCanvas.height = 0;\n\t\t\t\t\t\toffscreenCanvas = null;\n\n\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\tid: event?.data?.id,\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\tbitmap: previewBitmap,\n\t\t\t\t\t\t\t\tuseOriginalSize,\n\t\t\t\t\t\t\t\ttargetWidth,\n\t\t\t\t\t\t\t\ttargetHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}, [previewBitmap]);\n\n\t\t\t\t\t\t// const { quality = 0.92 } = options;\n\t\t\t\t\t\t// offscreenCanvas.convertToBlob({ quality, type })\n\t\t\t\t\t\t// \t.then((blob: Blob): void => {\n\t\t\t\t\t\t// \t\tself.postMessage({\n\t\t\t\t\t\t// \t\t\tid: event?.data?.id,\n\t\t\t\t\t\t// \t\t\tmessage: {\n\t\t\t\t\t\t// \t\t\t\tblob,\n\t\t\t\t\t\t// \t\t\t\tuseOriginalSize,\n\t\t\t\t\t\t// \t\t\t\ttargetWidth,\n\t\t\t\t\t\t// \t\t\t\ttargetHeight,\n\t\t\t\t\t\t// \t\t\t},\n\t\t\t\t\t\t// \t\t}, []);\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t// \t.catch((error): void => {\n\t\t\t\t\t\t// \t\tconsole.log('Resize Worker Error (convertToBlob)', error);\n\t\t\t\t\t\t// \t\tself.postMessage({\n\t\t\t\t\t\t// \t\t\tid: event.data.id,\n\t\t\t\t\t\t// \t\t\tmessage: null,\n\t\t\t\t\t\t// \t\t}, []);\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t// ;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\tconsole.log('Resize Worker Error (createImageBitmap)', error);\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\tid: event.data.id,\n\t\t\t\t\t\tmessage: null,\n\t\t\t\t\t}, []);\n\t\t\t\t})\n\t\t\t;\n\t\t}, 0);\n\t};\n};\n\nexport default ResizeWorker;\n","const loadImage = (file: File | Blob) => new Promise((resolve, reject) => {\n\n\tconst image: HTMLImageElement = document.createElement('img');\n\tconst url = URL.createObjectURL(file);\n\timage.src = url;\n\n\timage.onerror = error => {\n\t\tURL.revokeObjectURL(image.src);\n\t\treject(error);\n\t};\n\n\timage.onload = () => {\n\t\tURL.revokeObjectURL(url);\n\t\tresolve({\n\t\t\twidth: image.naturalWidth,\n\t\t\theight: image.naturalHeight,\n\t\t\timage\n\t\t});\n\t};\n});\n\nexport default loadImage;","const createImagePreviewCanvas = (imageSource: CanvasImageSource, width: number, height: number): HTMLCanvasElement | OffscreenCanvas => {\n\twidth = Math.round(width);\n\theight = Math.round(height);\n\n\tconst isPageContext: boolean =\n\t\ttypeof(window) !== 'undefined'\n\t\t&& typeof(document) !== 'undefined'\n\t\t&& typeof(parent) !== 'undefined'\n\t;\n\n\tconst createCanvas = (width: number, height: number): HTMLCanvasElement | OffscreenCanvas => {\n\t\tif (isPageContext)\n\t\t{\n\t\t\tconst canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\treturn canvas;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn new OffscreenCanvas(width, height);\n\t\t}\n\t};\n\n\tif (imageSource.height <= height && imageSource.width <= width)\n\t{\n\t\tconst canvas: HTMLCanvasElement = createCanvas(width, height);\n\t\tconst context: CanvasRenderingContext2D = canvas.getContext('2d');\n\t\tcontext.imageSmoothingQuality = 'high';\n\t\tcontext.drawImage(imageSource, 0, 0, width, height);\n\n\t\treturn canvas;\n\t}\n\telse\n\t{\n\t\tif (imageSource.height > imageSource.width)\n\t\t{\n\t\t\twidth = Math.floor(height * (imageSource.width / imageSource.height));\n\t\t}\n\t\telse\n\t\t{\n\t\t\theight = Math.floor(width * (imageSource.height / imageSource.width));\n\t\t}\n\n\t\tlet currentImageWidth: number = Math.floor(imageSource.width);\n\t\tlet currentImageHeight: number = Math.floor(imageSource.height);\n\t\tlet currentImageSource: CanvasImageSource = imageSource;\n\t\tlet resizingCanvas: HTMLCanvasElement = null;\n\n\t\twhile (currentImageWidth * 0.5 > width)\n\t\t{\n\t\t\tconst halfImageWidth: number = Math.floor(currentImageWidth * 0.5);\n\t\t\tconst halfImageHeight: number = Math.floor(currentImageHeight * 0.5);\n\n\t\t\tresizingCanvas = createCanvas(halfImageWidth, halfImageHeight);\n\t\t\tconst resizingCanvasContext: CanvasRenderingContext2D = resizingCanvas.getContext('2d');\n\t\t\tresizingCanvasContext.imageSmoothingQuality = 'high';\n\n\t\t\tresizingCanvasContext.drawImage(\n\t\t\t\tcurrentImageSource,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tcurrentImageWidth,\n\t\t\t\tcurrentImageHeight,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\thalfImageWidth,\n\t\t\t\thalfImageHeight\n\t\t\t);\n\n\t\t\tcurrentImageWidth = halfImageWidth;\n\t\t\tcurrentImageHeight = halfImageHeight;\n\t\t\tcurrentImageSource = resizingCanvas;\n\t\t}\n\n\t\tconst outputCanvas: HTMLCanvasElement = createCanvas(width, height);\n\t\tconst outputCanvasContext: CanvasRenderingContext2D = outputCanvas.getContext('2d');\n\t\toutputCanvasContext.imageSmoothingQuality = 'high';\n\t\toutputCanvasContext.drawImage(\n\t\t\tresizingCanvas === null ? imageSource : resizingCanvas,\n\t\t\t0,\n\t\t\t0,\n\t\t\tcurrentImageWidth,\n\t\t\tcurrentImageHeight,\n\t\t\t0,\n\t\t\t0,\n\t\t\twidth,\n\t\t\theight\n\t\t);\n\n\t\tif (resizingCanvas)\n\t\t{\n\t\t\tresizingCanvas.width = 0;\n\t\t\tresizingCanvas.height = 0;\n\t\t\tresizingCanvas = null;\n\n\t\t\tcurrentImageSource.width = 0;\n\t\t\tcurrentImageSource.height = 0;\n\t\t\tcurrentImageSource = null;\n\t\t}\n\n\t\treturn outputCanvas;\n\t}\n};\n\nexport default createImagePreviewCanvas;\n","import type { ResizeImageOptions } from '../types/resize-image-options';\n\ntype ImageData = ImageBitmap | HTMLImageElement | { width: number, height: number };\ntype ResizedImageSizeResult = { targetWidth: number, targetHeight: number, useOriginalSize: boolean };\n\nconst getResizedImageSize = (imageData: ImageData, options: ResizeImageOptions): ResizedImageSizeResult => {\n\tconst { mode = 'contain', upscale = false } = options;\n\tlet { width, height } = options;\n\n\tif (!width && !height)\n\t{\n\t\treturn {\n\t\t\ttargetWidth: 0,\n\t\t\ttargetHeight: 0,\n\t\t\tuseOriginalSize: true,\n\t\t};\n\t}\n\n\tif (width === null)\n\t{\n\t\twidth = height;\n\t}\n\telse if (height === null)\n\t{\n\t\theight = width;\n\t}\n\n\tif (mode !== 'force')\n\t{\n\t\tconst ratioWidth = width / imageData.width;\n\t\tconst ratioHeight = height / imageData.height;\n\t\tlet ratio = 1;\n\n\t\tif (mode === 'cover')\n\t\t{\n\t\t\tratio = Math.max(ratioWidth, ratioHeight);\n\t\t}\n\t\telse if (mode === 'contain')\n\t\t{\n\t\t\tratio = Math.min(ratioWidth, ratioHeight);\n\t\t}\n\n\t\t// if image is too small, exit here with original image\n\t\tif (ratio > 1 && upscale === false)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttargetWidth: imageData.width,\n\t\t\t\ttargetHeight: imageData.height,\n\t\t\t\tuseOriginalSize: true,\n\t\t\t};\n\t\t}\n\n\t\twidth = imageData.width * ratio;\n\t\theight = imageData.height * ratio;\n\t}\n\n\t/*if (mode === 'crop')\n\t{\n\t\tconst sourceImageRatio = sourceImageWidth / sourceImageHeight;\n\t\tconst targetRatio = targetWidth / targetHeight;\n\n\t\tif (sourceImageRatio > targetRatio)\n\t\t{\n\t\t\tconst newWidth = sourceImageHeight * targetRatio;\n\t\t\tsrcX = (sourceImageWidth - newWidth) / 2;\n\t\t\tsourceImageWidth = newWidth;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst newHeight = sourceImageWidth / targetRatio;\n\t\t\tsrcY = (sourceImageHeight - newHeight) / 2;\n\t\t\tsourceImageHeight = newHeight;\n\t\t}\n\n\t\tcontext.drawImage(image, srcX, srcY, sourceImageWidth, sourceImageHeight, 0, 0, targetWidth, targetHeight);\n\t}*/\n\n\treturn {\n\t\ttargetWidth: Math.round(width),\n\t\ttargetHeight: Math.round(height),\n\t\tuseOriginalSize: false,\n\t};\n};\n\nexport default getResizedImageSize;","import { Type } from 'main.core';\nimport createBlobFromDataUri from './create-blob-from-data-uri';\n\nconst canvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\nconst hasToBlobSupport = window.HTMLCanvasElement && canvasPrototype.toBlob;\nconst canUseOffscreenCanvas: boolean = !Type.isUndefined(window.OffscreenCanvas);\n\nconst convertCanvasToBlob = (canvas: HTMLCanvasElement, type: string, quality: number): Promise<Blob> => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (canUseOffscreenCanvas && (canvas instanceof OffscreenCanvas))\n\t\t{\n\t\t\tcanvas.convertToBlob({ type, quality }).then((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t});\n\t\t}\n\t\telse if (hasToBlobSupport)\n\t\t{\n\t\t\tcanvas.toBlob((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t}, type, quality);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(canvas.toDataURL(type, quality));\n\n\t\t\tresolve(blob);\n\t\t}\n\t});\n};\n\nexport default convertCanvasToBlob;\n","import { Browser } from 'main.core';\n\nconst supportedMimeTypes: string[] =\n\tBrowser.isSafari()\n\t\t? ['image/jpeg', 'image/png']\n\t\t: ['image/jpeg', 'image/png', 'image/webp']\n;\n\nconst isSupportedMimeType = (mimeType: string): boolean => {\n\treturn supportedMimeTypes.includes(mimeType);\n};\n\nexport default isSupportedMimeType;","export const sharpen = (canvas: HTMLCanvasElement | OffscreenCanvas, width: number, height: number, mixFactor: number): void => {\n\tconst context: CanvasRenderingContext2D = canvas.getContext('2d');\n\tconst weights: number[] = [0, -1, 0, -1, 5, -1, 0, -1, 0];\n\tconst katet: number = Math.round(Math.sqrt(weights.length));\n\tconst half: number = (katet * 0.5) | 0;\n\tconst destinationData: ImageData = context.createImageData(width, height);\n\tconst destinationBuffer: Uint8ClampedArray = destinationData.data;\n\tconst sourceBuffer: Uint8ClampedArray = context.getImageData(0, 0, width, height).data;\n\tlet y: number = height;\n\twhile (y--)\n\t{\n\t\tlet x: number = width;\n\t\twhile (x--)\n\t\t{\n\t\t\tconst sy: number = y;\n\t\t\tconst sx: number = x;\n\t\t\tconst dstOff: number = (y * width + x) * 4;\n\t\t\tlet red = 0;\n\t\t\tlet green = 0;\n\t\t\tlet blue = 0\n\t\t\tlet alpha = 0;\n\n\t\t\tfor (let cy = 0; cy < katet; cy++)\n\t\t\t{\n\t\t\t\tfor (let cx = 0; cx < katet; cx++)\n\t\t\t\t{\n\t\t\t\t\tconst scy: number = sy + cy - half;\n\t\t\t\t\tconst scx: number = sx + cx - half;\n\t\t\t\t\tif (scy >= 0 && scy < height && scx >= 0 && scx < width)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst srcOff: number = (scy * width + scx) * 4;\n\t\t\t\t\t\tconst wt: number = weights[cy * katet + cx];\n\t\t\t\t\t\tred += sourceBuffer[srcOff] * wt;\n\t\t\t\t\t\tgreen += sourceBuffer[srcOff + 1] * wt;\n\t\t\t\t\t\tblue += sourceBuffer[srcOff + 2] * wt;\n\t\t\t\t\t\talpha += sourceBuffer[srcOff + 3] * wt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdestinationBuffer[dstOff] = red * mixFactor + sourceBuffer[dstOff] * (1 - mixFactor);\n\t\t\tdestinationBuffer[dstOff + 1] = green * mixFactor + sourceBuffer[dstOff + 1] * (1 - mixFactor);\n\t\t\tdestinationBuffer[dstOff + 2] = blue * mixFactor + sourceBuffer[dstOff + 2] * (1 - mixFactor);\n\t\t\tdestinationBuffer[dstOff + 3] = sourceBuffer[dstOff + 3];\n\t\t}\n\t}\n\n\tcontext.putImageData(destinationData, 0, 0);\n};\n\nexport const shouldSharpen = (imageData: CanvasImageSource, width: number, height: number): boolean => {\n\tconst scaleX: number = width / imageData.width;\n\tconst scaleY: number = height / imageData.height;\n\n\tconst scale: number = Math.min(scaleX, scaleY);\n\n\t// if target scale is less than half\n\treturn scale < 0.5;\n};","import getResizedImageSize from './get-resized-image-size';\nimport createImagePreviewCanvas from './create-image-preview-canvas';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\nimport isSupportedMimeType from './is-supported-mime-type';\nimport { sharpen, shouldSharpen } from './sharpen';\n\nimport type { ResizeImageMimeType, ResizeImageOptions } from '../types/resize-image-options';\n\nconst createImagePreview = (imageData: ImageBitmap | HTMLImageElement, options: ResizeImageOptions): Promise => {\n\tconst { targetWidth, targetHeight } = getResizedImageSize(imageData, options);\n\n\tconst canvas: HTMLCanvasElement = createImagePreviewCanvas(imageData, targetWidth, targetHeight);\n\tif (shouldSharpen(imageData, targetWidth, targetHeight))\n\t{\n\t\tsharpen(canvas, targetWidth, targetHeight, 0.2);\n\t}\n\n\tconst { quality = 0.92 } = options;\n\tconst mimeType: ResizeImageMimeType = isSupportedMimeType(options.mimeType) ? options.mimeType : 'image/jpeg';\n\n\treturn convertCanvasToBlob(canvas, mimeType, quality).then((blob) => {\n\t\treturn {\n\t\t\twidth: targetWidth,\n\t\t\theight: targetHeight,\n\t\t\tblob,\n\t\t};\n\t});\n};\n\nexport default createImagePreview;\n","import isSupportedMimeType from './is-supported-mime-type';\n\nimport type { ResizeImageOptions, ResizeImageMimeTypeMode, ResizeImageMimeType } from '../types/resize-image-options';\n\nconst getCanvasToBlobType = (blob: Blob, options: ResizeImageOptions): string => {\n\tconst mimeType: ResizeImageMimeType = isSupportedMimeType(options.mimeType) ? options.mimeType : 'image/jpeg';\n\tconst mimeTypeMode: ResizeImageMimeTypeMode = options.mimeTypeMode;\n\tif (mimeTypeMode === 'force')\n\t{\n\t\treturn mimeType;\n\t}\n\telse\n\t{\n\t\treturn isSupportedMimeType(blob.type) ? blob.type : mimeType;\n\t}\n};\n\nexport default getCanvasToBlobType;","const getFilenameWithoutExtension = (name) => {\n\treturn name.substr(0, name.lastIndexOf('.')) || name;\n};\n\nexport default getFilenameWithoutExtension;","import getFilenameWithoutExtension from './get-filename-without-extension';\n\nconst extensionMap = {\n\t'jpeg': 'jpg',\n};\n\nconst renameFileToMatchMimeType = (filename, mimeType) => {\n\tconst name = getFilenameWithoutExtension(filename);\n\tconst type = mimeType.split('/')[1];\n\tconst extension = extensionMap[type] || type;\n\n\treturn `${name}.${extension}`;\n};\n\nexport default renameFileToMatchMimeType;","import { Browser, Type } from 'main.core';\n\nimport createWorker from './create-worker';\nimport BitmapWorker from './bitmap-worker';\nimport ResizeWorker from './resize-worker';\nimport loadImage from './load-image';\nimport createImagePreviewCanvas from './create-image-preview-canvas';\nimport createImagePreview from './create-image-preview';\nimport getCanvasToBlobType from './get-canvas-to-blob-type';\nimport renameFileToMatchMimeType from './rename-file-to-match-mime-type';\nimport createFileFromBlob from './create-file-from-blob';\nimport getResizedImageSize from './get-resized-image-size';\nimport { sharpen, shouldSharpen } from './sharpen';\n\nimport type { ResizeImageOptions } from '../types/resize-image-options';\nimport type { ResizeImageResult } from '../types/resize-image-result';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\n\nlet canCreateImageBitmap = (\n\t'createImageBitmap' in window\n\t&& typeof ImageBitmap !== 'undefined'\n\t&& ImageBitmap.prototype\n\t&& ImageBitmap.prototype.close\n);\n\nif (canCreateImageBitmap && Browser.isSafari())\n{\n\tconst ua = navigator.userAgent.toLowerCase();\n\tconst regex = new RegExp('version\\\\/([0-9.]+)', 'i');\n\tconst result = regex.exec(ua);\n\tif (result && result[1] && result[1] < '16.4')\n\t{\n\t\t// Webkit bug https://bugs.webkit.org/show_bug.cgi?id=223326\n\t\tcanCreateImageBitmap = false;\n\t}\n}\n\nconst createImagePreviewCanvasSource = createImagePreviewCanvas.toString();\nconst getResizedImageSizeSource = getResizedImageSize.toString();\nconst sharpenSource = sharpen.toString();\nconst shouldSharpenSource = shouldSharpen.toString();\nconst canUseOffscreenCanvas: boolean = canCreateImageBitmap && !Type.isUndefined(window.OffscreenCanvas);\n\nconst resizeImage = (source: Blob | File, options: ResizeImageOptions): Promise<ResizeImageResult> => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (canUseOffscreenCanvas)\n\t\t{\n\t\t\tconst resizeWorker = createWorker(ResizeWorker);\n\t\t\tconst type: string = getCanvasToBlobType(source, options);\n\n\t\t\tresizeWorker.post(\n\t\t\t\t{\n\t\t\t\t\tfile: source,\n\t\t\t\t\ttype,\n\t\t\t\t\toptions,\n\t\t\t\t\tcreateImagePreviewCanvasSource,\n\t\t\t\t\tgetResizedImageSizeSource,\n\t\t\t\t\tsharpenSource,\n\t\t\t\t\tshouldSharpenSource,\n\t\t\t\t},\n\t\t\t\t(message): void => {\n\t\t\t\t\tresizeWorker.terminate();\n\t\t\t\t\tif (message)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst { blob, bitmap, targetWidth, targetHeight, useOriginalSize } = message;\n\t\t\t\t\t\tif (useOriginalSize)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tpreview: source,\n\t\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\t\t\t\t\t\tcanvas.width = bitmap.width;\n\t\t\t\t\t\t\tcanvas.height = bitmap.height;\n\t\t\t\t\t\t\tconst context = canvas.getContext('bitmaprenderer');\n\t\t\t\t\t\t\tcontext.transferFromImageBitmap(bitmap);\n\n\t\t\t\t\t\t\t// console.log('bitmaprenderer');\n\n\t\t\t\t\t\t\tconst { quality = 0.92 } = options;\n\t\t\t\t\t\t\tconvertCanvasToBlob(canvas, type, quality).then((blob) => {\n\t\t\t\t\t\t\t\tlet preview: Blob = blob;\n\t\t\t\t\t\t\t\tif (Type.isFile(source))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// File type could be changed pic.gif -> pic.jpg\n\t\t\t\t\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(source.name, type);\n\t\t\t\t\t\t\t\t\tpreview = createFileFromBlob(blob, newFileName);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\tpreview,\n\t\t\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\tcanvas.width = 0;\n\t\t\t\t\t\t\t\tcanvas.height = 0;\n\t\t\t\t\t\t\t\tcanvas = null;\n\n\t\t\t\t\t\t\t\tbitmap.close();\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// let preview: Blob = blob;\n\t\t\t\t\t\t\t// if (Type.isFile(source))\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \t// File type could be changed pic.gif -> pic.jpg\n\t\t\t\t\t\t\t// \tconst newFileName = renameFileToMatchMimeType(source.name, type);\n\t\t\t\t\t\t\t// \tpreview = createFileFromBlob(blob, newFileName);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// resolve({\n\t\t\t\t\t\t\t// \tpreview,\n\t\t\t\t\t\t\t// \twidth: targetWidth,\n\t\t\t\t\t\t\t// \theight: targetHeight,\n\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\telse if (canCreateImageBitmap)\n\t\t{\n\t\t\tconst bitmapWorker = createWorker(BitmapWorker);\n\t\t\tbitmapWorker.post({ file: source },\n\t\t\t\t(imageBitmap: ImageBitmap): void => {\n\t\t\t\t\tbitmapWorker.terminate();\n\t\t\t\t\tif (imageBitmap)\n\t\t\t\t\t{\n\t\t\t\t\t\thandleImageLoad(imageBitmap);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tloadImageDataFallback();\n\t\t}\n\n\t\tfunction handleImageLoad(imageData: ImageBitmap | HTMLImageElement): void\n\t\t{\n\t\t\tconst { useOriginalSize, targetWidth, targetHeight } = getResizedImageSize(imageData, options);\n\t\t\tif (useOriginalSize)\n\t\t\t{\n\t\t\t\t// if it was ImageBitmap\n\t\t\t\tif ('close' in imageData)\n\t\t\t\t{\n\t\t\t\t\timageData.close();\n\t\t\t\t}\n\n\t\t\t\tresolve({\n\t\t\t\t\tpreview: source,\n\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\theight: targetHeight,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst mimeType: string = getCanvasToBlobType(source, options);\n\t\t\t\tcreateImagePreview(imageData, Object.assign({}, options, { mimeType }))\n\t\t\t\t\t.then(({ blob, width, height }): void => {\n\t\t\t\t\t\tlet preview: Blob = blob;\n\t\t\t\t\t\tif (Type.isFile(source))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// File type could be changed pic.gif -> pic.jpg\n\t\t\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(source.name, mimeType);\n\t\t\t\t\t\t\tpreview = createFileFromBlob(blob, newFileName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve({ preview, width, height });\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t// if it was ImageBitmap\n\t\t\t\t\t\tif ('close' in imageData)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\timageData.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t}\n\t\t}\n\n\t\tfunction loadImageDataFallback(): void\n\t\t{\n\t\t\tconsole.log('Uploader: resize image fallback');\n\t\t\tloadImage(source)\n\t\t\t\t.then(({ image }) => {\n\t\t\t\t\thandleImageLoad(image);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t}\n\t});\n};\n\nexport default resizeImage;\n","const isVideo = (blob: Blob) => {\n\treturn /^video\\/[a-z0-9.-]+$/i.test(blob.type);\n};\n\nexport default isVideo;","import { Event } from 'main.core';\nimport getResizedImageSize from './get-resized-image-size';\nimport type { ResizeImageOptions } from '../types/resize-image-options';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\nimport createImagePreviewCanvas from './create-image-preview-canvas';\n\nconst createVideoPreview = (\n\tblob: Blob,\n\toptions: ResizeImageOptions = { width: 300, height: 3000 },\n\tseekTime: number = 10\n): Promise => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst video: HTMLVideoElement = document.createElement('video');\n\t\tvideo.setAttribute('src', URL.createObjectURL(blob));\n\t\tvideo.load();\n\n\t\tEvent.bind(video, 'error', (error) => {\n\t\t\treject('Error while loading video file', error);\n\t\t});\n\n\t\tEvent.bind(video, 'loadedmetadata', () => {\n\t\t\tif (video.duration < seekTime)\n\t\t\t{\n\t\t\t\tseekTime = 0;\n\t\t\t}\n\n\t\t\tvideo.currentTime = seekTime;\n\n\t\t\tEvent.bind(video, 'seeked', () => {\n\t\t\t\tconst imageData = { width: video.videoWidth, height: video.videoHeight };\n\t\t\t\tconst { targetWidth, targetHeight } = getResizedImageSize(imageData, options);\n\t\t\t\tif (!targetWidth || !targetHeight)\n\t\t\t\t{\n\t\t\t\t\treject();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst canvas: HTMLCanvasElement = createImagePreviewCanvas(video, targetWidth, targetHeight);\n\t\t\t\tconst { quality = 0.92, mimeType = 'image/jpeg' } = options;\n\t\t\t\tconvertCanvasToBlob(canvas, mimeType, quality)\n\t\t\t\t\t.then((blob: Blob) => {\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tpreview: blob,\n\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\treject();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t});\n\t\t});\n\t});\n};\n\nexport default createVideoPreview;","import { Browser, Type } from 'main.core';\n\nimport Filter from './filter';\nimport resizeImage from '../helpers/resize-image';\nimport isResizableImage from '../helpers/is-resizable-image';\nimport isVideo from '../helpers/is-video';\nimport createVideoPreview from '../helpers/create-video-preview';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\nimport type { UploaderOptions } from '../types/uploader-options';\nimport type {\n\tResizeImageOptions,\n\tResizeImageMimeTypeMode,\n\tResizeImageMimeType,\n\tResizeImageMode,\n} from '../types/resize-image-options';\n\nexport default class ImagePreviewFilter extends Filter\n{\n\t#imagePreviewWidth: number = 300;\n\t#imagePreviewHeight: number = 300;\n\t#imagePreviewQuality: number = 0.92;\n\t#imagePreviewMimeType: ResizeImageMimeType = 'image/jpeg';\n\t#imagePreviewMimeTypeMode: ResizeImageMimeTypeMode = 'auto';\n\t#imagePreviewUpscale: boolean = false;\n\t#imagePreviewResizeMode: ResizeImageMode = 'contain';\n\t#imagePreviewFilter: Function = null;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tthis.setImagePreviewWidth(options.imagePreviewWidth);\n\t\tthis.setImagePreviewHeight(options.imagePreviewHeight);\n\t\tthis.setImagePreviewQuality(options.imagePreviewQuality);\n\t\tthis.setImagePreviewUpscale(options.imagePreviewUpscale);\n\t\tthis.setImagePreviewResizeMode(options.imagePreviewResizeMode);\n\t\tthis.setImagePreviewMimeType(options.imagePreviewMimeType);\n\t\tthis.setImagePreviewMimeTypeMode(options.imagePreviewMimeTypeMode);\n\t\tthis.setImagePreviewFilter(options.imagePreviewFilter);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve): void => {\n\t\t\tif (!file.shouldTreatImageAsFile() && isResizableImage(file.getBinary()))\n\t\t\t{\n\t\t\t\tconst result: boolean | ResizeImageOptions = this.invokeFilter(file);\n\t\t\t\tif (result === false)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst resizeOptions = Type.isPlainObject(result) ? result : {};\n\n\t\t\t\t// const start = performance.now();\n\t\t\t\tresizeImage(file.getBinary(), this.#getResizeImageOptions(resizeOptions))\n\t\t\t\t\t.then(({ preview, width, height }): void => {\n\t\t\t\t\t\t// console.log(`resizeImage took ${performance.now() - start} milliseconds.`);\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error): void => {\n\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('Uploader: image resize error', error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t}\n\t\t\telse if (isVideo(file.getBinary()) && !Browser.isSafari())\n\t\t\t{\n\t\t\t\tcreateVideoPreview(file.getBinary(), this.#getResizeImageOptions())\n\t\t\t\t\t.then(({ preview, width, height }): void => {\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error): void => {\n\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log('Uploader: video preview error', error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetImagePreviewWidth(): number\n\t{\n\t\treturn this.#imagePreviewWidth;\n\t}\n\n\tsetImagePreviewWidth(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imagePreviewWidth = value;\n\t\t}\n\t}\n\n\tgetImagePreviewHeight(): number\n\t{\n\t\treturn this.#imagePreviewHeight;\n\t}\n\n\tsetImagePreviewHeight(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imagePreviewHeight = value;\n\t\t}\n\t}\n\n\tgetImagePreviewQuality(): number\n\t{\n\t\treturn this.#imagePreviewQuality;\n\t}\n\n\tsetImagePreviewQuality(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0.1 && value <= 1)\n\t\t{\n\t\t\tthis.#imagePreviewQuality = value;\n\t\t}\n\t}\n\n\tgetImagePreviewUpscale(): boolean\n\t{\n\t\treturn this.#imagePreviewUpscale;\n\t}\n\n\tsetImagePreviewUpscale(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#imagePreviewUpscale = value;\n\t\t}\n\t}\n\n\tgetImagePreviewResizeMode(): ResizeImageMode\n\t{\n\t\treturn this.#imagePreviewResizeMode;\n\t}\n\n\tsetImagePreviewResizeMode(value: ResizeImageMode): void\n\t{\n\t\tif (['contain', 'force', 'cover'].includes(value))\n\t\t{\n\t\t\tthis.#imagePreviewResizeMode = value;\n\t\t}\n\t}\n\n\tgetImagePreviewMimeType(): ResizeImageMimeType\n\t{\n\t\treturn this.#imagePreviewMimeType;\n\t}\n\n\tsetImagePreviewMimeType(value: ResizeImageMimeType): void\n\t{\n\t\tif (['image/jpeg', 'image/png', 'image/webp'].includes(value))\n\t\t{\n\t\t\tthis.#imagePreviewMimeType = value;\n\t\t}\n\t}\n\n\tgetImagePreviewMimeTypeMode(): ResizeImageMimeTypeMode\n\t{\n\t\treturn this.#imagePreviewMimeTypeMode;\n\t}\n\n\tsetImagePreviewMimeTypeMode(value: ResizeImageMimeTypeMode): void\n\t{\n\t\tif (['auto', 'force'].includes(value))\n\t\t{\n\t\t\tthis.#imagePreviewMimeTypeMode = value;\n\t\t}\n\t}\n\n\tsetImagePreviewFilter(fn: Function): void\n\t{\n\t\tif (Type.isFunction(fn))\n\t\t{\n\t\t\tthis.#imagePreviewFilter = fn;\n\t\t}\n\t}\n\n\tinvokeFilter(file: UploaderFile): boolean | ResizeImageOptions\n\t{\n\t\tif (this.#imagePreviewFilter !== null)\n\t\t{\n\t\t\tconst result = this.#imagePreviewFilter(file);\n\t\t\tif (Type.isBoolean(result) || Type.isPlainObject(result))\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#getResizeImageOptions(overrides: ResizeImageOptions = {}): ResizeImageOptions\n\t{\n\t\treturn {\n\t\t\twidth: Type.isNumber(overrides.width) ? overrides.width : this.getImagePreviewWidth(),\n\t\t\theight: Type.isNumber(overrides.height) ? overrides.height : this.getImagePreviewHeight(),\n\t\t\tmode: Type.isStringFilled(overrides.mode) ? overrides.mode : this.getImagePreviewResizeMode(),\n\t\t\tupscale: Type.isBoolean(overrides.upscale) ? overrides.upscale : this.getImagePreviewUpscale(),\n\t\t\tquality: Type.isNumber(overrides.quality) ? overrides.quality : this.getImagePreviewQuality(),\n\t\t\tmimeType: Type.isStringFilled(overrides.mimeType) ? overrides.mimeType : this.getImagePreviewMimeType(),\n\t\t\tmimeTypeMode:\n\t\t\t\tType.isStringFilled(overrides.mimeTypeMode)\n\t\t\t\t\t? overrides.mimeTypeMode\n\t\t\t\t\t: this.getImagePreviewMimeTypeMode()\n\t\t\t,\n\t\t};\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\n\nimport isResizableImage from '../helpers/is-resizable-image';\nimport resizeImage from '../helpers/resize-image';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\nimport type { UploaderOptions } from '../types/uploader-options';\nimport type {\n\tResizeImageOptions,\n\tResizeImageMimeTypeMode,\n\tResizeImageMimeType,\n\tResizeImageMode,\n} from '../types/resize-image-options';\n\nexport default class ImageResizeFilter extends Filter\n{\n\t#resizeWidth: number = null;\n\t#resizeHeight: number = null;\n\t#resizeMethod: ResizeImageMode = 'contain';\n\t#resizeMimeType: ResizeImageMimeType = 'image/jpeg';\n\t#resizeMimeTypeMode: ResizeImageMimeTypeMode = 'auto';\n\t#resizeQuality: number = 0.92;\n\t#resizeFilter: Function = null;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tthis.setResizeWidth(options.imageResizeWidth);\n\t\tthis.setResizeHeight(options.imageResizeHeight);\n\t\tthis.setResizeMode(options.imageResizeMode);\n\t\tthis.setResizeMimeType(options.imageResizeMimeType);\n\t\tthis.setResizeMimeTypeMode(options.imageResizeMimeTypeMode);\n\t\tthis.setResizeQuality(options.imageResizeQuality);\n\t\tthis.setResizeFilter(options.imageResizeFilter);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve): void => {\n\t\t\tif (this.getResizeWidth() === null && this.getResizeHeight() === null)\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.shouldTreatImageAsFile() || !isResizableImage(file.getBinary()))\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result: boolean | ResizeImageOptions = this.invokeFilter(file);\n\t\t\tif (result === false)\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst overrides = Type.isPlainObject(result) ? result : {};\n\t\t\tconst options: ResizeImageOptions = {\n\t\t\t\twidth: Type.isNumber(overrides.width) ? overrides.width : this.getResizeWidth(),\n\t\t\t\theight: Type.isNumber(overrides.height) ? overrides.height : this.getResizeHeight(),\n\t\t\t\tmode: Type.isStringFilled(overrides.mode) ? overrides.mode : this.getResizeMode(),\n\t\t\t\tquality: Type.isNumber(overrides.quality) ? overrides.quality : this.getResizeQuality(),\n\t\t\t\tmimeType: Type.isStringFilled(overrides.mimeType) ? overrides.mimeType : this.getResizeMimeType(),\n\t\t\t\tmimeTypeMode: (\n\t\t\t\t\tType.isStringFilled(overrides.mimeTypeMode) ? overrides.mimeTypeMode : this.getResizeMimeTypeMode()\n\t\t\t\t),\n\t\t\t};\n\n\t\t\tresizeImage(file.getBinary(), options)\n\t\t\t\t.then(({ preview, width, height }): void => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\t\t\t\t\tfile.setFile(preview);\n\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\tif (error)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('image resize error', error);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tgetResizeWidth(): ?number\n\t{\n\t\treturn this.#resizeWidth;\n\t}\n\n\tsetResizeWidth(value: ?number): void\n\t{\n\t\tif ((Type.isNumber(value) && value > 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#resizeWidth = value;\n\t\t}\n\t}\n\n\tgetResizeHeight(): ?number\n\t{\n\t\treturn this.#resizeHeight;\n\t}\n\n\tsetResizeHeight(value: ?number): void\n\t{\n\t\tif ((Type.isNumber(value) && value > 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#resizeHeight = value;\n\t\t}\n\t}\n\n\tgetResizeMode(): ResizeImageMode\n\t{\n\t\treturn this.#resizeMethod;\n\t}\n\n\tsetResizeMode(value): ResizeImageMode\n\t{\n\t\tif (['contain', 'force', 'cover'].includes(value))\n\t\t{\n\t\t\tthis.#resizeMethod = value;\n\t\t}\n\t}\n\n\tgetResizeMimeType(): ResizeImageMimeType\n\t{\n\t\treturn this.#resizeMimeType;\n\t}\n\n\tsetResizeMimeType(value): ResizeImageMimeType\n\t{\n\t\tif (['image/jpeg', 'image/png', 'image/webp'].includes(value))\n\t\t{\n\t\t\tthis.#resizeMimeType = value;\n\t\t}\n\t}\n\n\tgetResizeMimeTypeMode(): ResizeImageMimeTypeMode\n\t{\n\t\treturn this.#resizeMimeTypeMode;\n\t}\n\n\tsetResizeMimeTypeMode(value): ResizeImageMimeTypeMode\n\t{\n\t\tif (['auto', 'force'].includes(value))\n\t\t{\n\t\t\tthis.#resizeMimeTypeMode = value;\n\t\t}\n\t}\n\n\tgetResizeQuality(): number\n\t{\n\t\treturn this.#resizeQuality;\n\t}\n\n\tsetResizeQuality(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0.1 && value <= 1)\n\t\t{\n\t\t\tthis.#resizeQuality = value;\n\t\t}\n\t}\n\n\tsetResizeFilter(fn: Function): void\n\t{\n\t\tif (Type.isFunction(fn))\n\t\t{\n\t\t\tthis.#resizeFilter = fn;\n\t\t}\n\t}\n\n\tinvokeFilter(file: UploaderFile): boolean | ResizeImageOptions\n\t{\n\t\tif (this.#resizeFilter !== null)\n\t\t{\n\t\t\tconst result = this.#resizeFilter(file);\n\t\t\tif (Type.isBoolean(result) || Type.isPlainObject(result))\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","export const UploaderStatus: Object<string, string> = {\n\tSTARTED: 0,\n\tSTOPPED: 1,\n};","export const UploaderEvent: Object<string, string> = {\n\tUPLOAD_START: 'onUploadStart',\n\tUPLOAD_COMPLETE: 'onUploadComplete',\n\tERROR: 'onError',\n\tMAX_FILE_COUNT_EXCEEDED: 'onMaxFileCountExceeded',\n\tDESTROY: 'onDestroy',\n\tBEFORE_BROWSE: 'onBeforeBrowse',\n\tBEFORE_DROP: 'onBeforeDrop',\n\tBEFORE_PASTE: 'onBeforePaste',\n\tFILE_BEFORE_ADD: 'File:onBeforeAdd',\n\tFILE_ADD_START: 'File:onAddStart',\n\tFILE_LOAD_START: 'File:onLoadStart',\n\tFILE_LOAD_PROGRESS: 'File:onLoadProgress',\n\tFILE_LOAD_COMPLETE: 'File:onLoadComplete',\n\tFILE_ERROR: 'File:onError',\n\tFILE_ADD: 'File:onAdd',\n\tFILE_REMOVE: 'File:onRemove',\n\tFILE_UPLOAD_START: 'File:onUploadStart',\n\tFILE_UPLOAD_PROGRESS: 'File:onUploadProgress',\n\tFILE_UPLOAD_COMPLETE: 'File:onUploadComplete',\n\tFILE_COMPLETE: 'File:onComplete',\n\tFILE_STATUS_CHANGE: 'File:onStatusChange',\n\tFILE_STATE_CHANGE: 'File:onStateChange',\n};","export const FilterType: Object<string, string> = {\n\tVALIDATION: 'validation',\n\tPREPARATION: 'preparation',\n};","const getFilesInDirectory = (entry: FileSystemDirectoryEntry): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst files = [];\n\t\tlet dirCounter = 0;\n\t\tlet fileCounter = 0;\n\n\t\tconst resolveIfDone = (): void => {\n\t\t\tif (fileCounter === 0 && dirCounter === 0)\n\t\t\t{\n\t\t\t\tresolve(files);\n\t\t\t}\n\t\t};\n\n\t\tconst readEntries = (dirEntry: FileSystemDirectoryEntry): void => {\n\t\t\tdirCounter++;\n\t\t\tconst directoryReader: FileSystemDirectoryReader = dirEntry.createReader();\n\t\t\tconst readBatch = (): void => {\n\t\t\t\tdirectoryReader.readEntries((entries: FileSystemEntry[]): void => {\n\t\t\t\t\tif (entries.length === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdirCounter--;\n\t\t\t\t\t\tresolveIfDone();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tentries.forEach((entry: FileSystemFileEntry | FileSystemDirectoryEntry): void => {\n\t\t\t\t\t\tif (entry.isDirectory)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadEntries(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileCounter++;\n\t\t\t\t\t\t\tentry.file((file: File): void => {\n\t\t\t\t\t\t\t\tfiles.push(file);\n\t\t\t\t\t\t\t\tfileCounter--;\n\t\t\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treadBatch();\n\t\t\t\t}, reject);\n\t\t\t};\n\n\t\t\treadBatch();\n\t\t};\n\n\t\treadEntries(entry);\n\t});\n};\n\nexport default getFilesInDirectory;\n","const isDirectoryEntry = (item: DataTransferItem): boolean => {\n\treturn 'webkitGetAsEntry' in item && (item.webkitGetAsEntry() || {}).isDirectory === true;\n};\n\nexport default isDirectoryEntry;\n","const isFileSystemItem = (item: DataTransferItem) => {\n\tif ('webkitGetAsEntry' in item)\n\t{\n\t\tconst entry: ?FileSystemEntry = item.webkitGetAsEntry();\n\t\tif (entry)\n\t\t{\n\t\t\treturn entry.isFile || entry.isDirectory;\n\t\t}\n\t}\n\n\treturn item.kind === 'file';\n};\n\nexport default isFileSystemItem;\n","import getFilesInDirectory from './get-files-in-directory';\nimport isDirectoryEntry from './is-directory-entry';\nimport isFileSystemItem from './is-file-system-item';\n\nconst getFilesFromItem = (item: DataTransferItem): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tif (isDirectoryEntry(item))\n\t\t{\n\t\t\tgetFilesInDirectory(item.webkitGetAsEntry())\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t;\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolve([item.getAsFile()]);\n\t});\n};\n\nexport const getFilesFromDataTransfer = (dataTransfer: DataTransfer, browseFolders = true): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tif (!dataTransfer.items)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? [...dataTransfer.files] : []);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst items: Promise[] = [...dataTransfer.items]\n\t\t\t.filter((item: DataTransferItem): boolean => {\n\t\t\t\treturn browseFolders ? isFileSystemItem(item) : item.kind === 'file';\n\t\t\t})\n\t\t\t.map((item: DataTransferItem): Promise => {\n\t\t\t\treturn getFilesFromItem(item);\n\t\t\t})\n\t\t;\n\n\t\tPromise.all(items)\n\t\t\t.then((fileGroups: Array<File[]>): void => {\n\t\t\t\tconst files = [];\n\t\t\t\tfileGroups.forEach((group: File[]): void => {\n\t\t\t\t\tfiles.push(...group);\n\t\t\t\t});\n\n\t\t\t\tresolve(files);\n\t\t\t})\n\t\t\t.catch(reject)\n\t\t;\n\t});\n};\n\nexport const hasDataTransferOnlyFiles = (dataTransfer: DataTransfer, browseFolders = true): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tif (!dataTransfer.items)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? dataTransfer.files.length > 0 : false);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst success: boolean = [...dataTransfer.items].every((item: DataTransferItem): boolean => {\n\t\t\treturn browseFolders ? isFileSystemItem(item) : item.kind === 'file' && !isDirectoryEntry(item);\n\t\t});\n\n\t\tresolve(success);\n\t});\n};\n\nexport const isFilePasted = (dataTransfer: DataTransfer, browseFolders = true): boolean => {\n\tif (!dataTransfer.types.includes('Files'))\n\t{\n\t\treturn false;\n\t}\n\n\tlet files = 0;\n\tlet texts = 0;\n\tconst items: DataTransferItemList = dataTransfer.items;\n\tfor (const item of items)\n\t{\n\t\tif (item.kind === 'string')\n\t\t{\n\t\t\ttexts++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst isFile = browseFolders ? isFileSystemItem(item) : item.kind === 'file' && !isDirectoryEntry(item);\n\t\t\tif (isFile)\n\t\t\t{\n\t\t\t\tfiles++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn files >= texts;\n};\n","let result = null;\n\nconst canAppendFileToForm = (): boolean => {\n\tif (result === null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst dataTransfer = new DataTransfer();\n\t\t\tconst file = new File(['hello'], 'my.txt');\n\t\t\tdataTransfer.items.add(file);\n\n\t\t\tconst input = document.createElement('input');\n\t\t\tinput.setAttribute('type', 'file');\n\t\t\tinput.files = dataTransfer.files;\n\n\t\t\tresult = input.files.length === 1;\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport default canAppendFileToForm;","import { Type } from 'main.core';\n\nconst assignFileToInput = (input: HTMLInputElement, file: File | File[]) => {\n\ttry\n\t{\n\t\tconst dataTransfer = new DataTransfer();\n\t\tconst files = Type.isArray(file) ? file : [file];\n\n\t\tfiles.forEach(file => {\n\t\t\tdataTransfer.items.add(file);\n\t\t});\n\n\t\tinput.files = dataTransfer.files;\n\t}\n\tcatch (error)\n\t{\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport default assignFileToInput;","import { Type, Event, Reflection, Dom, Extension, Text } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport UploaderFile from './uploader-file';\nimport UploaderError from './uploader-error';\nimport Server from './backend/server';\nimport UploadController from './backend/upload-controller';\n\nimport Filter from './filters/filter';\nimport FileSizeFilter from './filters/file-size-filter';\nimport FileTypeFilter from './filters/file-type-filter';\nimport ImageSizeFilter from './filters/image-size-filter';\nimport ImagePreviewFilter from './filters/image-preview-filter';\nimport ImageResizeFilter from './filters/image-resize-filter';\n\nimport { UploaderStatus } from './enums/uploader-status';\nimport { UploaderEvent } from './enums/uploader-event';\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FileEvent } from './enums/file-event';\nimport { FilterType } from './enums/filter-type';\n\nimport { getFilesFromDataTransfer, isFilePasted } from './helpers/get-files-from-data-transfer';\nimport canAppendFileToForm from './helpers/can-append-file-to-form';\nimport assignFileToInput from './helpers/assign-file-to-input';\n\nimport type { UploaderOptions } from './types/uploader-options';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\nimport type { ServerOptions } from './types/server-options';\nimport type { RemoveFileOptions } from './types/remove-file-options';\nimport type { DestroyOptions } from './types/destroy-options';\n\nconst instances = new Map();\n\n/**\n * @namespace BX.UI.Uploader\n */\nexport default class Uploader extends EventEmitter\n{\n\t#id: ?string = null\n\t#files: UploaderFile[] = [];\n\t#multiple: boolean = false;\n\t#autoUpload: boolean = true;\n\t#allowReplaceSingle: boolean = true;\n\t#maxParallelUploads: number = 2;\n\t#maxParallelLoads: number = 10;\n\t#acceptOnlyImages: boolean = false;\n\t#acceptedFileTypes: string[] = [];\n\t#ignoredFileNames: string[] = ['.ds_store', 'thumbs.db', 'desktop.ini'];\n\t#maxFileCount: ?number = null;\n\t#server: Server = null;\n\n\t#hiddenFields: Map<string, HTMLInputElement> = new Map();\n\t#hiddenFieldsContainer: HTMLElement = null;\n\t#hiddenFieldName: string = 'file';\n\t#assignAsFile: boolean = false;\n\t#assignServerFile: boolean = true;\n\n\t#filters: Map<FilterType, Filter[]> = new Map();\n\t#status: UploaderStatus = UploaderStatus.STOPPED;\n\n\t#onBeforeUploadHandler: Function = null;\n\t#onFileStatusChangeHandler: Function = null;\n\t#onFileStateChangeHandler: Function = null;\n\t#onInputFileChangeHandler: Function = null;\n\t#onPasteHandler: Function = null;\n\t#onDropHandler: Function = null;\n\n\t#browsingNodes: Map<HTMLElement, ?Function> = new Map();\n\t#dropNodes: Set<HTMLElement> = new Set();\n\t#pastingNodes: Set<HTMLElement> = new Set();\n\n\tstatic getById(id: string): ?Uploader\n\t{\n\t\treturn instances.get(id) || null;\n\t}\n\n\tstatic getInstances(): Uploader[]\n\t{\n\t\treturn Array.from(instances.values());\n\t}\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader');\n\n\t\tthis.#onBeforeUploadHandler = this.#handleBeforeUpload.bind(this);\n\t\tthis.#onFileStatusChangeHandler = this.#handleFileStatusChange.bind(this);\n\t\tthis.#onFileStateChangeHandler = this.#handleFileStateChange.bind(this);\n\t\tthis.#onInputFileChangeHandler = this.#handleInputFileChange.bind(this);\n\t\tthis.#onPasteHandler = this.#handlePaste.bind(this);\n\t\tthis.#onDropHandler = this.#handleDrop.bind(this);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\t\tthis.#id = Type.isStringFilled(options.id) ? options.id : `ui-uploader-${Text.getRandom().toLowerCase()}`;\n\t\tthis.#multiple = Type.isBoolean(options.multiple) ? options.multiple : false;\n\n\t\tconst acceptOnlyImages: ?boolean = Type.isBoolean(options.acceptOnlyImages) ? options.acceptOnlyImages : null;\n\t\tconst acceptOnlyImagesGlobal: ?boolean = Uploader.getGlobalOption('acceptOnlyImages', null);\n\t\tthis.setAcceptOnlyImages(acceptOnlyImages ? acceptOnlyImages : acceptOnlyImagesGlobal);\n\n\t\tif (Type.isString(options.acceptedFileTypes) || Type.isArray(options.acceptedFileTypes))\n\t\t{\n\t\t\tthis.setAcceptedFileTypes(options.acceptedFileTypes);\n\t\t}\n\t\telse if (acceptOnlyImages !== true)\n\t\t{\n\t\t\tconst acceptedFileTypesGlobal = Uploader.getGlobalOption('acceptedFileTypes', null);\n\t\t\tthis.setAcceptedFileTypes(acceptedFileTypesGlobal);\n\t\t}\n\n\t\tconst ignoredFileNames: ?string[] =\n\t\t\tType.isArray(options.ignoredFileNames)\n\t\t\t\t? options.ignoredFileNames\n\t\t\t\t: Uploader.getGlobalOption('ignoredFileNames', null)\n\t\t;\n\t\tthis.setIgnoredFileNames(ignoredFileNames);\n\n\t\tthis.setMaxFileCount(options.maxFileCount);\n\t\tthis.setAllowReplaceSingle(options.allowReplaceSingle);\n\n\t\tthis.assignBrowse(options.browseElement);\n\t\tthis.assignDropzone(options.dropElement);\n\t\tthis.assignPaste(options.pasteElement);\n\n\t\tthis.setHiddenFieldsContainer(options.hiddenFieldsContainer);\n\t\tthis.setHiddenFieldName(options.hiddenFieldName);\n\t\tthis.setAssignAsFile(options.assignAsFile);\n\t\tthis.setAssignServerFile(options.assignServerFile);\n\n\t\tthis.setAutoUpload(options.autoUpload);\n\t\tthis.setMaxParallelUploads(options.maxParallelUploads);\n\t\tthis.setMaxParallelLoads(options.maxParallelLoads);\n\n\t\tlet serverOptions: ServerOptions = Type.isPlainObject(options.serverOptions) ? options.serverOptions : {};\n\t\tserverOptions = Object.assign(\n\t\t\t{},\n\t\t\t{ controller: options.controller, controllerOptions: options.controllerOptions },\n\t\t\tserverOptions\n\t\t);\n\n\t\tthis.#server = new Server(serverOptions);\n\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\tthis.addFilter(FilterType.VALIDATION, new FileSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new FileTypeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImageSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImagePreviewFilter(this, options));\n\t\tthis.addFilter(FilterType.PREPARATION, new ImageResizeFilter(this, options));\n\t\tthis.addFilters(options.filters);\n\n\t\tthis.addFiles(options.files);\n\n\t\tinstances.set(this.#id, this);\n\t}\n\n\tstatic getGlobalOption(path: string, defaultValue: any = null): any\n\t{\n\t\tconst globalOptions = Extension.getSettings('ui.uploader.core');\n\n\t\treturn globalOptions.get(path, defaultValue);\n\t}\n\n\taddFiles(fileList: ArrayLike): UploaderFile[]\n\t{\n\t\tif (!Type.isArrayLike(fileList))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst files = Array.from(fileList);\n\t\tif (this.#exceedsMaxFileCount(files))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst results = [];\n\t\tfiles.forEach(file => {\n\t\t\tlet result = null;\n\t\t\tif (Type.isArrayFilled(file))\n\t\t\t{\n\t\t\t\tresult = this.addFile(file[0], file[1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = this.addFile(file);\n\t\t\t}\n\n\t\t\tif (result !== null)\n\t\t\t{\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t});\n\n\t\treturn results;\n\t}\n\n\taddFile(source: File | Blob | string | number | UploaderFileOptions, options: UploaderFileOptions): ?UploaderFile\n\t{\n\t\tconst file: UploaderFile = new UploaderFile(source, options);\n\n\t\tif (this.getIgnoredFileNames().includes(file.getName().toLowerCase()))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.#exceedsMaxFileCount([file]))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.isMultiple() && this.shouldReplaceSingle() && this.#files.length > 0)\n\t\t{\n\t\t\tconst fileToReplace: UploaderFile = this.#files[0];\n\t\t\tthis.removeFile(fileToReplace);\n\t\t}\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { file: file } });\n\t\tthis.emit(UploaderEvent.FILE_BEFORE_ADD, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tfile.subscribe(FileEvent.STATUS_CHANGE, this.#onFileStatusChangeHandler);\n\t\tfile.subscribe(FileEvent.STATE_CHANGE, this.#onFileStateChangeHandler);\n\n\t\tthis.#setUploadEvents(file);\n\t\tthis.#setLoadEvents(file);\n\t\tthis.#setRemoveEvents(file);\n\n\t\tif (!file.isLoadable())\n\t\t{\n\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t{\n\t\t\t\tconst preloaded: boolean = Type.isStringFilled(file.getName());\n\t\t\t\tconst shouldPreload: boolean =\n\t\t\t\t\t(Type.isPlainObject(options) && options.preload === true)\n\t\t\t\t\t|| (Type.isPlainObject(source) && source.preload === true)\n\t\t\t\t;\n\n\t\t\t\tif (!preloaded || shouldPreload)\n\t\t\t\t{\n\t\t\t\t\tfile.setLoadController(this.getServer().createServerLoadController());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfile.setLoadController(this.getServer().createServerlessLoadController());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfile.setLoadController(this.getServer().createClientLoadController());\n\t\t\t}\n\t\t}\n\n\t\tif (!file.isUploadable())\n\t\t{\n\t\t\tif (file.getOrigin() === FileOrigin.CLIENT)\n\t\t\t{\n\t\t\t\tconst uploadController: ?UploadController = this.getServer().createUploadController();\n\t\t\t\tfile.setUploadController(uploadController);\n\t\t\t}\n\t\t}\n\n\t\tif (!file.isRemoveable())\n\t\t{\n\t\t\tfile.setRemoveController(this.getServer().createRemoveController());\n\t\t}\n\n\t\tthis.#files.push(file);\n\n\t\tfile.emit(FileEvent.ADD);\n\t\tthis.emit(UploaderEvent.FILE_ADD_START, { file });\n\n\t\tif (file.getOrigin() === FileOrigin.CLIENT)\n\t\t{\n\t\t\tthis.#loadNext();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfile.load();\n\t\t}\n\n\t\treturn file;\n\t}\n\n\t#setLoadEvents(file: UploaderFile): void\n\t{\n\t\tfile.subscribeFromOptions({\n\t\t\t[FileEvent.LOAD_START]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_LOAD_START, { file });\n\t\t\t},\n\t\t\t[FileEvent.LOAD_PROGRESS]: (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_LOAD_PROGRESS, { file, progress });\n\t\t\t},\n\t\t\t[FileEvent.LOAD_ERROR]: (event: BaseEvent): void => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_ERROR, { file, error });\n\t\t\t\tthis.emit(UploaderEvent.FILE_ADD, { file, error });\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t[FileEvent.LOAD_COMPLETE]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_ADD, { file });\n\t\t\t\tthis.emit(UploaderEvent.FILE_LOAD_COMPLETE, { file });\n\n\t\t\t\tif (!file.isUploadable())\n\t\t\t\t{\n\t\t\t\t\tthis.emit(UploaderEvent.FILE_COMPLETE, { file });\n\t\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\t}\n\t\t\t\telse if (this.shouldAutoUpload())\n\t\t\t\t{\n\t\t\t\t\tfile.upload();\n\t\t\t\t}\n\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t[FileEvent.VALIDATE_FILE_ASYNC]: (event: BaseEvent) => {\n\t\t\t\tconst file: UploaderFile = event.getData().file;\n\n\t\t\t\treturn this.#applyFilters(FilterType.VALIDATION, file);\n\t\t\t},\n\t\t\t[FileEvent.PREPARE_FILE_ASYNC]: (event: BaseEvent) => {\n\t\t\t\tconst file: UploaderFile = event.getData().file;\n\n\t\t\t\treturn this.#applyFilters(FilterType.PREPARATION, file);\n\t\t\t},\n\t\t});\n\t}\n\n\t#setUploadEvents(file: UploaderFile): void\n\t{\n\t\tfile.subscribeFromOptions({\n\t\t\t[FileEvent.BEFORE_UPLOAD]: this.#onBeforeUploadHandler,\n\t\t\t[FileEvent.UPLOAD_START]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_UPLOAD_START, { file });\n\t\t\t},\n\t\t\t[FileEvent.UPLOAD_PROGRESS]: (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_UPLOAD_PROGRESS, { file, progress });\n\t\t\t},\n\t\t\t[FileEvent.UPLOAD_ERROR]: (event: BaseEvent): void => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_ERROR, { file, error });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t[FileEvent.UPLOAD_COMPLETE]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_UPLOAD_COMPLETE, { file });\n\t\t\t\tthis.emit(UploaderEvent.FILE_COMPLETE, { file });\n\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t});\n\t}\n\n\t#setRemoveEvents(file: UploaderFile): void\n\t{\n\t\tfile.subscribeOnce(FileEvent.REMOVE_ERROR, (event: BaseEvent): void => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_ERROR, { file, error });\n\t\t\t}\n\t\t);\n\n\t\tfile.subscribeOnce(FileEvent.REMOVE_COMPLETE, (): void => {\n\t\t\tthis.#removeFile(file);\n\t\t});\n\t}\n\n\t#handleBeforeUpload(event: BaseEvent): void\n\t{\n\t\tif (this.getStatus() === UploaderStatus.STOPPED)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.start();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.getUploadingFileCount() >= this.getMaxParallelUploads())\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\t#handleFileStatusChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit(UploaderEvent.FILE_STATUS_CHANGE, { file });\n\t}\n\n\t#handleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tconst property: string = event.getData().property;\n\t\tconst value: any = event.getData().value;\n\n\t\tif (property === 'serverFileId')\n\t\t{\n\t\t\tthis.#updateHiddenField(file);\n\t\t}\n\n\t\tthis.emit(UploaderEvent.FILE_STATE_CHANGE, { file, property, value });\n\t}\n\n\t#exceedsMaxFileCount(fileList: Array): boolean\n\t{\n\t\tconst totalNewFiles: number = fileList.length;\n\t\tconst totalFiles: number = this.#files.length;\n\n\t\tif (!this.isMultiple() && totalNewFiles > 1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet maxFileCount;\n\t\tif (this.isMultiple())\n\t\t{\n\t\t\tmaxFileCount = this.getMaxFileCount();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxFileCount = this.shouldReplaceSingle() ? null : 1;\n\t\t}\n\n\t\tif (maxFileCount !== null && totalFiles + totalNewFiles > maxFileCount)\n\t\t{\n\t\t\tconst error: UploaderError = new UploaderError('MAX_FILE_COUNT_EXCEEDED', { maxFileCount });\n\t\t\tthis.emit(UploaderEvent.MAX_FILE_COUNT_EXCEEDED, { error });\n\t\t\tthis.emit(UploaderEvent.ERROR, { error });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#applyFilters(type: FilterType, ...args): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst filters = [...(this.#filters.get(type) || [])];\n\t\t\tif (filters.length === 0)\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstFilter: Filter = filters.shift();\n\n\t\t\t// chain filters\n\t\t\tfilters\n\t\t\t\t.reduce(\n\t\t\t\t\t(current: Promise, next: Filter) => {\n\t\t\t\t\t\treturn current.then(() => next.apply(...args));\n\t\t\t\t\t},\n\t\t\t\t\tfirstFilter.apply(...args)\n\t\t\t\t)\n\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\tstart(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED && this.getPendingFileCount() > 0)\n\t\t{\n\t\t\tthis.#status = UploaderStatus.STARTED;\n\t\t\tthis.emit(UploaderEvent.UPLOAD_START);\n\t\t\tthis.#uploadNext();\n\t\t}\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tthis.#status = UploaderStatus.STOPPED;\n\t//\n\t// \tthis.getFiles().forEach((file: UploaderFile) => {\n\t// \t\tif (file.isUploading())\n\t// \t\t{\n\t// \t\t\tfile.abort();\n\t// \t\t\tfile.setStatus(FileStatus.PENDING);\n\t// \t\t}\n\t// \t});\n\t//\n\t// \tthis.emit('onStop');\n\t// }\n\n\tdestroy(options?: DestroyOptions): void\n\t{\n\t\tthis.emit(UploaderEvent.DESTROY);\n\n\t\tthis.unassignBrowseAll();\n\t\tthis.unassignDropzoneAll();\n\t\tthis.unassignPasteAll();\n\n\t\tconst removeFromServer: boolean = !options || options.removeFilesFromServer !== false;\n\t\tthis.removeFiles({ removeFromServer });\n\n\t\tthis.#resetHiddenFields();\n\t\tinstances.delete(this.getId());\n\n\t\tthis.#files = [];\n\t\tthis.#server = null;\n\t\tthis.#acceptedFileTypes = null;\n\t\tthis.#ignoredFileNames = null;\n\t\tthis.#filters = null;\n\n\t\tObject.setPrototypeOf(this, null);\n\t}\n\n\tremoveFiles(options?: RemoveFileOptions): void\n\t{\n\t\tthis.getFiles().forEach((file: UploaderFile): void => {\n\t\t\tfile.remove(options);\n\t\t});\n\t}\n\n\tremoveFile(file: UploaderFile | string, options?: RemoveFileOptions): void\n\t{\n\t\tif (Type.isString(file))\n\t\t{\n\t\t\tfile = this.getFile(file);\n\t\t}\n\n\t\tconst index: number = this.#files.findIndex((element: UploaderFile): boolean => element === file);\n\t\tif (index === -1)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tfile.remove(options);\n\t}\n\n\t#removeFile(file: UploaderFile)\n\t{\n\t\tconst index: number = this.#files.findIndex((element: UploaderFile): boolean => element === file);\n\t\tif (index !== -1)\n\t\t{\n\t\t\tthis.#files.splice(index, 1);\n\t\t}\n\n\t\tfile.unsubscribeAll();\n\n\t\tthis.emit(UploaderEvent.FILE_REMOVE, { file });\n\t\tthis.#resetHiddenField(file);\n\t}\n\n\tgetFile(id: string): ?UploaderFile\n\t{\n\t\treturn this.#files.find((file: UploaderFile): boolean => file.getId() === id) || null;\n\t}\n\n\tgetFiles(): UploaderFile[]\n\t{\n\t\treturn Array.from(this.#files);\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tisMultiple(): boolean\n\t{\n\t\treturn this.#multiple;\n\t}\n\n\tgetStatus(): UploaderStatus\n\t{\n\t\treturn this.#status;\n\t}\n\n\taddFilter(type: FilterType, filter: Filter | Function | string, filterOptions: { [key: string]: any } = {}): void\n\t{\n\t\tif (Type.isFunction(filter) || Type.isString(filter))\n\t\t{\n\t\t\tconst className = Type.isString(filter) ? Reflection.getClass(filter) : filter;\n\t\t\tif (Type.isFunction(className))\n\t\t\t{\n\t\t\t\tfilter = new className(this, filterOptions);\n\t\t\t}\n\t\t}\n\n\t\tif (filter instanceof Filter)\n\t\t{\n\t\t\tlet filters: Filter[] = this.#filters.get(type);\n\t\t\tif (!Type.isArray(filters))\n\t\t\t{\n\t\t\t\tfilters = [];\n\t\t\t\tthis.#filters.set(type, filters);\n\t\t\t}\n\n\t\t\tfilters.push(filter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Uploader: a filter must be an instance of FileUploader.Filter.');\n\t\t}\n\t}\n\n\taddFilters(filters: Array): void\n\t{\n\t\tif (Type.isArray(filters))\n\t\t{\n\t\t\tfilters.forEach(filter => {\n\t\t\t\tif (Type.isPlainObject(filter))\n\t\t\t\t{\n\t\t\t\t\tthis.addFilter(filter.type, filter.filter, filter.options);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tassignBrowse(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement) => {\n\t\t\tif (!Type.isElementNode(node) || this.#browsingNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet input: HTMLInputElement;\n\t\t\tif (node.tagName === 'INPUT' && node.type === 'file')\n\t\t\t{\n\t\t\t\tinput = node;\n\n\t\t\t\t// Add already selected files\n\t\t\t\tif (input.files && input.files.length)\n\t\t\t\t{\n\t\t\t\t\tthis.addFiles(input.files);\n\t\t\t\t}\n\n\t\t\t\tconst acceptAttr = input.getAttribute('accept');\n\t\t\t\tif (Type.isStringFilled(acceptAttr))\n\t\t\t\t{\n\t\t\t\t\tthis.setAcceptedFileTypes(acceptAttr);\n\t\t\t\t}\n\n\t\t\t\tthis.#browsingNodes.set(node, null);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput = document.createElement('input');\n\t\t\t\tinput.setAttribute('type', 'file');\n\n\t\t\t\tconst onBrowseClickHandler = this.#handleBrowseClick.bind(this, input, node);\n\t\t\t\tthis.#browsingNodes.set(node, onBrowseClickHandler);\n\t\t\t\tEvent.bind(node, 'click', onBrowseClickHandler);\n\t\t\t}\n\n\t\t\tif (this.isMultiple())\n\t\t\t{\n\t\t\t\tinput.setAttribute('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(this.getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tinput.setAttribute('accept', this.getAcceptedFileTypes().join(','));\n\t\t\t}\n\n\t\t\tEvent.bind(input, 'change', this.#onInputFileChangeHandler);\n\t\t});\n\t}\n\n\t#handleBrowseClick(input: HTMLInputElement, node: HTMLElement): void\n\t{\n\t\tconst event: BaseEvent = new BaseEvent({ data: { input, node } });\n\t\tthis.emit(UploaderEvent.BEFORE_BROWSE, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tinput.click();\n\t}\n\n\t#handleInputFileChange(event: Event): void\n\t{\n\t\tconst input = event.currentTarget;\n\n\t\tthis.addFiles(Array.from(input.files));\n\n\t\t// reset file input\n\t\tinput.value = '';\n\t}\n\n\tunassignBrowse(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement): void => {\n\t\t\tif (this.#browsingNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'click', this.#browsingNodes.get(node));\n\t\t\t\tEvent.unbind(node, 'change', this.#onInputFileChangeHandler);\n\t\t\t\tthis.#browsingNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignBrowseAll(): void\n\t{\n\t\tArray.from(this.#browsingNodes.keys()).forEach((node: HTMLElement): void => {\n\t\t\tthis.unassignBrowse(node);\n\t\t});\n\t}\n\n\tassignDropzone(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (!Type.isElementNode(node) || this.#dropNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'dragover', this.#preventDefault);\n\t\t\tEvent.bind(node, 'dragenter', this.#preventDefault);\n\t\t\tEvent.bind(node, 'drop', this.#onDropHandler);\n\n\t\t\tthis.#dropNodes.add(node);\n\t\t});\n\t}\n\n\t#handleDrop(dragEvent: DragEvent): void\n\t{\n\t\tdragEvent.preventDefault();\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { dragEvent } });\n\t\tthis.emit(UploaderEvent.BEFORE_DROP, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tgetFilesFromDataTransfer(dragEvent.dataTransfer).then((files: File[]): void => {\n\t\t\tthis.addFiles(files);\n\t\t});\n\t}\n\n\t#preventDefault(event: DragEvent): void\n\t{\n\t\tevent.preventDefault();\n\t}\n\n\tunassignDropzone(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (this.#dropNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'dragover', this.#preventDefault);\n\t\t\t\tEvent.unbind(node, 'dragenter', this.#preventDefault);\n\t\t\t\tEvent.unbind(node, 'drop', this.#onDropHandler);\n\t\t\t\tthis.#dropNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignDropzoneAll(): void\n\t{\n\t\tArray.from(this.#dropNodes).forEach((node: HTMLElement): void => {\n\t\t\tthis.unassignDropzone(node);\n\t\t});\n\t}\n\n\tassignPaste(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (!Type.isElementNode(node) || this.#pastingNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'paste', this.#onPasteHandler);\n\t\t\tthis.#pastingNodes.add(node);\n\t\t});\n\t}\n\n\t#handlePaste(clipboardEvent: ClipboardEvent): void\n\t{\n\t\tconst clipboardData: DataTransfer = clipboardEvent.clipboardData;\n\t\tif (!clipboardData)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { clipboardEvent } });\n\t\tthis.emit(UploaderEvent.BEFORE_PASTE, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (isFilePasted(clipboardData))\n\t\t{\n\t\t\tclipboardEvent.preventDefault();\n\n\t\t\tgetFilesFromDataTransfer(clipboardData).then((files: File[]): void => {\n\t\t\t\tthis.addFiles(files);\n\t\t\t});\n\t\t}\n\t}\n\n\tunassignPaste(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (this.#pastingNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'paste', this.#onPasteHandler);\n\t\t\t\tthis.#pastingNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignPasteAll(): void\n\t{\n\t\tArray.from(this.#pastingNodes).forEach((node: HTMLElement): void => {\n\t\t\tthis.unassignPaste(node);\n\t\t});\n\t}\n\n\tgetHiddenFieldsContainer(): ?HTMLElement\n\t{\n\t\tlet element = null;\n\t\tif (Type.isStringFilled(this.#hiddenFieldsContainer))\n\t\t{\n\t\t\telement = document.querySelector(this.#hiddenFieldsContainer);\n\t\t\tif (!Type.isElementNode(element))\n\t\t\t{\n\t\t\t\tconsole.error(`Uploader: a hidden field container was not found (${this.#hiddenFieldsContainer}).`);\n\t\t\t}\n\t\t}\n\t\telse if (Type.isElementNode(this.#hiddenFieldsContainer))\n\t\t{\n\t\t\telement = this.#hiddenFieldsContainer;\n\t\t}\n\n\t\treturn element;\n\t}\n\n\tsetHiddenFieldsContainer(container: string | HTMLElement): void\n\t{\n\t\tif (Type.isStringFilled(container) || Type.isElementNode(container) || Type.isNull(container))\n\t\t{\n\t\t\tthis.#hiddenFieldsContainer = container;\n\t\t}\n\t}\n\n\tgetHiddenFieldName(): string\n\t{\n\t\treturn this.#hiddenFieldName;\n\t}\n\n\tsetHiddenFieldName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#hiddenFieldName = name;\n\t\t}\n\t}\n\n\tshouldAssignAsFile(): boolean\n\t{\n\t\treturn this.#assignAsFile;\n\t}\n\n\tsetAssignAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#assignAsFile = flag;\n\t\t}\n\t}\n\n\tshouldAssignServerFile(): boolean\n\t{\n\t\treturn this.#assignServerFile;\n\t}\n\n\tsetAssignServerFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#assignServerFile = flag;\n\t\t}\n\t}\n\n\tgetTotalSize(): number\n\t{\n\t\treturn this.#files.reduce((totalSize: number, file: UploaderFile) => {\n\t\t\treturn totalSize + file.getSize();\n\t\t}, 0);\n\t}\n\n\tshouldAutoUpload(): boolean\n\t{\n\t\treturn this.#autoUpload;\n\t}\n\n\tsetAutoUpload(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#autoUpload = flag;\n\t\t}\n\t}\n\n\tgetMaxParallelUploads(): number\n\t{\n\t\treturn this.#maxParallelUploads;\n\t}\n\n\tsetMaxParallelUploads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.#maxParallelUploads = number;\n\t\t}\n\t}\n\n\tgetMaxParallelLoads(): number\n\t{\n\t\treturn this.#maxParallelLoads;\n\t}\n\n\tsetMaxParallelLoads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.#maxParallelLoads = number;\n\t\t}\n\t}\n\n\tgetUploadingFileCount(): number\n\t{\n\t\treturn this.#files.filter((file: UploaderFile): boolean => file.isUploading()).length;\n\t}\n\n\tgetPendingFileCount(): number\n\t{\n\t\treturn this.#files.filter((file: UploaderFile): boolean => file.isReadyToUpload()).length;\n\t}\n\n\tstatic getImageExtensions(): Array<string>\n\t{\n\t\treturn this.getGlobalOption(\n\t\t\t'imageExtensions',\n\t\t\t['.jpg', '.bmp', '.jpeg', '.jpe', '.gif', '.png', '.webp']\n\t\t);\n\t}\n\n\tsetAcceptOnlyImages(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#acceptOnlyImages = flag;\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tthis.acceptOnlyImages();\n\t\t\t}\n\t\t}\n\t}\n\n\tacceptOnlyImages(): void\n\t{\n\t\tconst imageExtensions: string[] = Uploader.getImageExtensions();\n\t\tthis.setAcceptedFileTypes(imageExtensions);\n\t\tthis.#acceptOnlyImages = true;\n\t}\n\n\tshouldAcceptOnlyImages(): boolean\n\t{\n\t\treturn this.#acceptOnlyImages;\n\t}\n\n\tgetAcceptedFileTypes(): string[]\n\t{\n\t\treturn this.#acceptedFileTypes;\n\t}\n\n\tsetAcceptedFileTypes(fileTypes: string | string[]): void\n\t{\n\t\tif (Type.isString(fileTypes))\n\t\t{\n\t\t\tfileTypes = fileTypes.split(',');\n\t\t}\n\n\t\tif (Type.isArray(fileTypes))\n\t\t{\n\t\t\tthis.#acceptedFileTypes = [];\n\t\t\tthis.#acceptOnlyImages = false;\n\n\t\t\tfileTypes.forEach(type => {\n\t\t\t\tif (Type.isStringFilled(type))\n\t\t\t\t{\n\t\t\t\t\tthis.#acceptedFileTypes.push(type);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetIgnoredFileNames(): string[]\n\t{\n\t\treturn this.#ignoredFileNames;\n\t}\n\n\tsetIgnoredFileNames(fileNames: string[]): void\n\t{\n\t\tif (Type.isArray(fileNames))\n\t\t{\n\t\t\tthis.#ignoredFileNames = [];\n\n\t\t\tfileNames.forEach((fileName: string): void => {\n\t\t\t\tif (Type.isStringFilled(fileName))\n\t\t\t\t{\n\t\t\t\t\tthis.#ignoredFileNames.push(fileName.toLowerCase());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetMaxFileCount(maxFileCount: ?number): void\n\t{\n\t\tif ((Type.isNumber(maxFileCount) && maxFileCount > 0) || maxFileCount === null)\n\t\t{\n\t\t\tthis.#maxFileCount = maxFileCount;\n\t\t}\n\t}\n\n\tgetMaxFileCount(): ?number\n\t{\n\t\treturn this.#maxFileCount;\n\t}\n\n\tsetAllowReplaceSingle(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#allowReplaceSingle = flag;\n\t\t}\n\t}\n\n\tshouldReplaceSingle(): boolean\n\t{\n\t\treturn this.#allowReplaceSingle;\n\t}\n\n\t#uploadNext(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxParallelUploads: number = this.getMaxParallelUploads();\n\t\tconst currentUploads: number = this.getUploadingFileCount();\n\t\tconst pendingFiles: Array<UploaderFile> = this.#files.filter((file: UploaderFile): boolean => file.isReadyToUpload());\n\t\tconst pendingUploads: number = pendingFiles.length;\n\n\t\tif (currentUploads < maxParallelUploads)\n\t\t{\n\t\t\tconst limit: number = Math.min(maxParallelUploads - currentUploads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile: UploaderFile = pendingFiles[i];\n\t\t\t\tpendingFile.upload();\n\t\t\t}\n\t\t}\n\n\t\t// All files are COMPLETE or FAILED\n\t\tif (currentUploads === 0 && pendingUploads === 0)\n\t\t{\n\t\t\tthis.#status = UploaderStatus.STOPPED;\n\t\t\tthis.emit(UploaderEvent.UPLOAD_COMPLETE);\n\t\t}\n\t}\n\n\t#loadNext(): void\n\t{\n\t\tconst maxParallelLoads: number = this.getMaxParallelLoads();\n\t\tconst currentLoads: number = this.#files.filter((file: UploaderFile): boolean => file.isLoading()).length;\n\t\tconst pendingFiles: UploaderFile[] = this.#files.filter((file: UploaderFile) => {\n\t\t\treturn file.getStatus() === FileStatus.ADDED && file.getOrigin() === FileOrigin.CLIENT;\n\t\t});\n\n\t\tif (currentLoads < maxParallelLoads)\n\t\t{\n\t\t\tconst limit: number = Math.min(maxParallelLoads - currentLoads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile: UploaderFile = pendingFiles[i];\n\t\t\t\tpendingFile.load();\n\t\t\t}\n\t\t}\n\t}\n\n\t#setHiddenField(file: UploaderFile): void\n\t{\n\t\tconst container: ?HTMLElement = this.getHiddenFieldsContainer();\n\t\tif (!container || this.#hiddenFields.has(file.getId()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (file.getOrigin() === FileOrigin.SERVER && !this.shouldAssignServerFile())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst assignAsFile: boolean =\n\t\t\tfile.getOrigin() === FileOrigin.CLIENT\n\t\t\t&& !file.isUploadable()\n\t\t\t&& this.shouldAssignAsFile()\n\t\t\t&& canAppendFileToForm()\n\t\t;\n\n\t\tconst input: HTMLInputElement = document.createElement('input');\n\t\tinput.type = assignAsFile ? 'file' : 'hidden';\n\t\tinput.name = this.getHiddenFieldName() + (this.isMultiple() ? '[]' : '');\n\n\t\tif (assignAsFile)\n\t\t{\n\t\t\tDom.style(input, {\n\t\t\t\tvisibility: 'hidden',\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tposition: 'absolute',\n\t\t\t\t'pointer-events': 'none',\n\t\t\t});\n\n\t\t\tassignFileToInput(input, file.getBinary());\n\t\t}\n\t\telse if (file.getServerFileId() !== null)\n\t\t{\n\t\t\tinput.value = file.getServerFileId();\n\t\t}\n\n\t\tDom.append(input, container);\n\t\tthis.#hiddenFields.set(file.getId(), input);\n\n\t\tthis.#syncInputPositions();\n\t}\n\n\t#updateHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input: ?HTMLInputElement = this.#hiddenFields.get(file.getId());\n\t\tif (input && input.type === 'hidden')\n\t\t{\n\t\t\tif (file.getServerFileId() === null)\n\t\t\t{\n\t\t\t\tthis.#resetHiddenField(file);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput.value = file.getServerFileId();\n\t\t\t}\n\t\t}\n\t}\n\n\t#resetHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input: ?HTMLInputElement = this.#hiddenFields.get(file.getId());\n\t\tif (input)\n\t\t{\n\t\t\tDom.remove(input);\n\t\t\tthis.#hiddenFields.delete(file.getId());\n\t\t}\n\t}\n\n\t#resetHiddenFields(): void\n\t{\n\t\tArray.from(this.#hiddenFields.values()).forEach((input: HTMLInputElement): void => {\n\t\t\tDom.remove(input);\n\t\t})\n\n\t\tthis.#hiddenFields = [];\n\t}\n\n\t#syncInputPositions(): void\n\t{\n\t\tconst container: ?HTMLElement = this.getHiddenFieldsContainer();\n\t\tif (!container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getFiles().forEach((file: UploaderFile): void => {\n\t\t\tconst input: ?HTMLInputElement = this.#hiddenFields.get(file.getId());\n\t\t\tif (input)\n\t\t\t{\n\t\t\t\tDom.append(input, container);\n\t\t\t}\n\t\t});\n\t}\n}\n","const isImage = (blob: Blob) => {\n\treturn /^image\\/[a-z0-9.-]+$/i.test(blob.type);\n};\n\nexport default isImage;","const Marker = {\n\tJPEG: 0xffd8,\n\tAPP1: 0xffe1,\n\tEXIF: 0x45786966,\n\tTIFF: 0x4949,\n\tOrientation: 0x0112,\n\tUnknown: 0xff00\n};\n\nconst getUint16 = (view, offset, little = false) => view.getUint16(offset, little);\nconst getUint32 = (view, offset, little = false) => view.getUint32(offset, little);\n\nconst getJpegOrientation = file => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = function(e) {\n\t\t\tconst view = new DataView(e.target.result);\n\t\t\tif (getUint16(view, 0) !== Marker.JPEG)\n\t\t\t{\n\t\t\t\tresolve(-1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst length = view.byteLength;\n\t\t\tlet offset = 2;\n\n\t\t\twhile (offset < length)\n\t\t\t{\n\t\t\t\tconst marker = getUint16(view, offset);\n\t\t\t\toffset += 2;\n\n\t\t\t\t// APP1 Marker\n\t\t\t\tif (marker === Marker.APP1)\n\t\t\t\t{\n\t\t\t\t\tif (getUint32(view, (offset += 2)) !== Marker.EXIF)\n\t\t\t\t\t{\n\t\t\t\t\t\t// no EXIF\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst little = getUint16(view, (offset += 6)) === Marker.TIFF;\n\t\t\t\t\toffset += getUint32(view, offset + 4, little);\n\n\t\t\t\t\tconst tags = getUint16(view, offset, little);\n\t\t\t\t\toffset += 2;\n\n\t\t\t\t\tfor (let i = 0; i < tags; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Found the orientation tag\n\t\t\t\t\t\tif (getUint16(view, offset + i * 12, little) === Marker.Orientation)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve(getUint16(view, offset + i * 12 + 8, little));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse if ((marker & Marker.Unknown) !== Marker.Unknown)\n\t\t\t\t{\n\t\t\t\t\tbreak; // Invalid\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toffset += getUint16(view, offset);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Nothing found\n\t\t\tresolve(-1);\n\t\t};\n\n\t\treader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n\t});\n};\n\nexport default getJpegOrientation;","const isJpeg = (blob: Blob) => {\n\treturn /^image\\/jpeg$/i.test(blob.type);\n};\n\nexport default isJpeg;"],"names":["FileStatus","INIT","ADDED","LOADING","PENDING","UPLOADING","COMPLETE","LOAD_FAILED","UPLOAD_FAILED","FileOrigin","CLIENT","SERVER","FileEvent","ADD","BEFORE_UPLOAD","UPLOAD_START","UPLOAD_ERROR","UPLOAD_PROGRESS","UPLOAD_COMPLETE","UPLOAD_CONTROLLER_INIT","LOAD_START","LOAD_PROGRESS","LOAD_COMPLETE","LOAD_ERROR","LOAD_CONTROLLER_INIT","REMOVE_ERROR","REMOVE_COMPLETE","REMOVE_CONTROLLER_INIT","STATE_CHANGE","STATUS_CHANGE","VALIDATE_FILE_ASYNC","PREPARE_FILE_ASYNC","UploaderError","BaseError","constructor","code","args","message","Type","isString","description","customData","isPlainObject","length","replacements","Object","keys","forEach","key","Loc","hasMessage","getMessage","isStringFilled","origin","Origin","type","USER","setDescription","createFromAjaxErrors","errors","isArrayFilled","uploaderError","find","error","system","setOrigin","setType","console","SYSTEM","UNKNOWN","createFromError","name","getDescription","text","getOrigin","values","includes","getType","clone","options","JSON","parse","stringify","toString","getCode","toJSON","getCustomData","AbstractUploadController","EventEmitter","server","setEventNamespace","getServer","getOptions","getOption","option","defaultValue","isUndefined","upload","file","Error","abort","AbstractLoadController","load","AbstractRemoveController","remove","crypto","window","msCrypto","process","require","webcrypto","createUniqueId","replace","c","getRandomValues","Uint8Array","getExtensionFromType","subtype","split","pop","test","counter","createFileFromBlob","blob","fileName","date","Date","getFullYear","getMonth","getDate","extension","File","lastModified","now","lastModifiedDate","exception","slice","size","regexp","isDataUri","str","match","createBlobFromDataUri","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","view","i","charCodeAt","Blob","getFileExtension","filename","position","lastIndexOf","substring","imageExtensions","isResizableImage","mimeType","isFile","toLowerCase","formatFileSize","base","units","getUnits","isInteger","toFixed","fileSizeUnits","UploaderFile","source","fileOptions","create","CallbackCollection","update","isBlob","isNumber","serverFileId","id","subscribeFromOptions","events","canLoad","emit","callbacks","subscribe","isComplete","isUploadable","isUploadFailed","getError","canUpload","event","BaseEvent","data","isDefaultPrevented","prepareEvent","emitAsync","then","catch","prepareError","addError","getStatus","removeFromServer","isLoading","isUploading","getUploadController","setUploadController","controller","isNull","changed","subscribeOnce","getData","progress","setProgress","fileInfo","setLoadController","validationEvent","preparationEvent","preparationError","validationError","setRemoveController","isReadyToUpload","isLoadable","isRemoveable","isFailed","isLoadFailed","getBinary","setFile","getName","setName","setSize","setServerFileId","setWidth","width","setHeight","height","setTreatImageAsFile","treatImageAsFile","setClientPreview","clientPreview","clientPreviewWidth","clientPreviewHeight","setServerPreview","serverPreviewUrl","serverPreviewWidth","serverPreviewHeight","setDownloadUrl","downloadUrl","setCustomData","loadController","uploadController","removeController","property","value","getExtension","getSize","getSizeFormatted","getId","getServerFileId","getServerId","getDownloadUrl","url","getWidth","getHeight","flag","isBoolean","shouldTreatImageAsFile","getPreviewUrl","getClientPreview","getClientPreviewUrl","getServerPreviewUrl","getPreviewWidth","getClientPreviewWidth","getServerPreviewWidth","getPreviewHeight","getClientPreviewHeight","getServerPreviewHeight","revokeClientPreviewUrl","URL","createObjectURL","revokeObjectURL","isImage","getProgress","push","getErrors","getState","entries","item","currentKey","currentValue","customProperty","undefined","serverId","status","sizeFormatted","failed","previewUrl","previewWidth","previewHeight","clientPreviewUrl","isFunction","onComplete","getEmitter","onError","eventName","unsubscribeAll","Chunk","offset","getNextRetryDelay","shift","setRetries","retries","isArray","getOffset","UploadController","nextChunk","clearTimeout","getFile","getChunkSize","getChunkOffset","getToken","setToken","token","chunk","totalSize","isOnlyOneChunk","normalize","headers","encodeURIComponent","rangeStart","rangeEnd","rangeHeader","controllerOptions","getControllerOptions","Ajax","runAction","preparePost","getParameters","getController","onrequeststart","xhr","onprogressupload","lengthComputable","uploadedBytes","Math","min","loaded","floor","response","shouldRetry","nextDelay","setTimeout","currentChunkSize","nextOffset","fileRange","getChunkRetryDelays","pendingQueues","WeakMap","loadingFiles","loadMultiple","timeout","queue","get","tasks","Runtime","debounce","loadInternal","aborted","set","filter","task","delete","fileIds","onprogress","total","files","fileResults","fileResult","success","ServerLoadController","ClientLoadController","queues","removeMultiple","removeInternal","fileId","RemoveController","ServerlessLoadController","Server","serverOptions","chunkSize","getDefaultChunkSize","forceChunkSize","chunkRetryDelays","controllerClasses","controllerClass","fn","getClass","loadControllerOptions","uploadControllerOptions","removeControllerOptions","createUploadController","createServerLoadController","createDefaultServerLoadController","createClientLoadController","createServerlessLoadController","createRemoveController","settings","Extension","getSettings","getChunkMinSize","getChunkMaxSize","max","Filter","uploader","filterOptions","getUploader","apply","FileSizeFilter","setMaxFileSize","maxFileSize","setMinFileSize","minFileSize","setMaxTotalFileSize","maxTotalFileSize","setImageMaxFileSize","imageMaxFileSize","setImageMinFileSize","imageMinFileSize","setTreatOversizeImageAsFile","treatOversizeImageAsFile","Promise","resolve","reject","getMaxFileSize","maxFileSizeInBytes","getMinFileSize","minFileSizeInBytes","getImageMaxFileSize","shouldTreatOversizeImageAsFile","imageMaxFileSizeInBytes","getImageMinFileSize","imageMinFileSizeInBytes","getMaxTotalFileSize","getTotalSize","maxTotalFileSizeInBytes","isValidFileType","fileTypes","baseMimeType","trim","charAt","indexOf","FileTypeFilter","getAcceptedFileTypes","getArrayBuffer","arrayBuffer","fileReader","FileReader","readAsArrayBuffer","onload","result","onerror","convertStringToBuffer","compareBuffers","dataView","dest","start","j","getUint8","GIF87a","GIF89a","Gif","DataView","getUint16","PNG_SIGNATURE","IHDR_SIGNATURE","FRIED_CHUNK_NAME","Png","getUint32","BMP_SIGNATURE","Bmp","abs","getInt32","EXIF_SIGNATURE","Jpeg","orientation","byteLength","exifBlock","getOrientation","Marker","BIG_ENDIAN","LITTLE_ENDIAN","byteAlign","isBigEndian","isLittleEndian","extractOrientation","littleEndian","idfDirectoryEntries","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","directoryEntryNumber","end","block","byteOffset","tagNumber","dataFormat","numberOfComponents","RIFF_HEADER","WEBP_SIGNATURE","VP8_SIGNATURE","VP8L_SIGNATURE","VP8X_SIGNATURE","Webp","headerType","headerView","bits","extendedHeader","validStart","validEnd","jpg","typeHandlers","gif","png","bmp","jpeg","jpe","webp","getImageSize","typeHandler","ImageSizeFilter","setImageMinWidth","imageMinWidth","setImageMinHeight","imageMinHeight","setImageMaxWidth","imageMaxWidth","setImageMaxHeight","imageMaxHeight","setIgnoreUnknownImageTypes","ignoreUnknownImageTypes","getImageMinWidth","getImageMinHeight","minWidth","minHeight","getImageMaxWidth","getImageMaxHeight","maxWidth","maxHeight","getIgnoreUnknownImageTypes","log","createWorker","workerBlob","workerURL","worker","Worker","post","callback","transfer","onmessage","postMessage","terminate","BitmapWorker","self","createImageBitmap","bitmap","ResizeWorker","getResizedImageSizeSource","createImagePreviewCanvasSource","sharpenSource","shouldSharpenSource","getResizedImageSize","Function","targetWidth","targetHeight","useOriginalSize","close","createImagePreviewCanvas","offscreenCanvas","sharpen","shouldSharpen","previewBitmap","transferToImageBitmap","loadImage","image","document","createElement","src","naturalWidth","naturalHeight","imageSource","round","isPageContext","parent","createCanvas","canvas","OffscreenCanvas","context","getContext","imageSmoothingQuality","drawImage","currentImageWidth","currentImageHeight","currentImageSource","resizingCanvas","halfImageWidth","halfImageHeight","resizingCanvasContext","outputCanvas","outputCanvasContext","imageData","mode","upscale","ratioWidth","ratioHeight","ratio","canvasPrototype","HTMLCanvasElement","prototype","hasToBlobSupport","toBlob","canUseOffscreenCanvas","convertCanvasToBlob","quality","convertToBlob","toDataURL","supportedMimeTypes","Browser","isSafari","isSupportedMimeType","mixFactor","weights","katet","sqrt","half","destinationData","createImageData","destinationBuffer","sourceBuffer","getImageData","y","x","sy","sx","dstOff","red","green","blue","alpha","cy","cx","scy","scx","srcOff","wt","putImageData","scaleX","scaleY","scale","createImagePreview","getCanvasToBlobType","mimeTypeMode","getFilenameWithoutExtension","substr","extensionMap","renameFileToMatchMimeType","canCreateImageBitmap","ImageBitmap","ua","navigator","userAgent","regex","RegExp","exec","resizeImage","resizeWorker","preview","transferFromImageBitmap","newFileName","finally","loadImageDataFallback","bitmapWorker","imageBitmap","handleImageLoad","assign","isVideo","createVideoPreview","seekTime","video","setAttribute","Event","bind","duration","currentTime","videoWidth","videoHeight","ImagePreviewFilter","setImagePreviewWidth","imagePreviewWidth","setImagePreviewHeight","imagePreviewHeight","setImagePreviewQuality","imagePreviewQuality","setImagePreviewUpscale","imagePreviewUpscale","setImagePreviewResizeMode","imagePreviewResizeMode","setImagePreviewMimeType","imagePreviewMimeType","setImagePreviewMimeTypeMode","imagePreviewMimeTypeMode","setImagePreviewFilter","imagePreviewFilter","invokeFilter","resizeOptions","getImagePreviewWidth","getImagePreviewHeight","getImagePreviewQuality","getImagePreviewUpscale","getImagePreviewResizeMode","getImagePreviewMimeType","getImagePreviewMimeTypeMode","overrides","ImageResizeFilter","setResizeWidth","imageResizeWidth","setResizeHeight","imageResizeHeight","setResizeMode","imageResizeMode","setResizeMimeType","imageResizeMimeType","setResizeMimeTypeMode","imageResizeMimeTypeMode","setResizeQuality","imageResizeQuality","setResizeFilter","imageResizeFilter","getResizeWidth","getResizeHeight","getResizeMode","getResizeQuality","getResizeMimeType","getResizeMimeTypeMode","UploaderStatus","STARTED","STOPPED","UploaderEvent","ERROR","MAX_FILE_COUNT_EXCEEDED","DESTROY","BEFORE_BROWSE","BEFORE_DROP","BEFORE_PASTE","FILE_BEFORE_ADD","FILE_ADD_START","FILE_LOAD_START","FILE_LOAD_PROGRESS","FILE_LOAD_COMPLETE","FILE_ERROR","FILE_ADD","FILE_REMOVE","FILE_UPLOAD_START","FILE_UPLOAD_PROGRESS","FILE_UPLOAD_COMPLETE","FILE_COMPLETE","FILE_STATUS_CHANGE","FILE_STATE_CHANGE","FilterType","VALIDATION","PREPARATION","getFilesInDirectory","entry","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","createReader","readBatch","isDirectory","isDirectoryEntry","webkitGetAsEntry","isFileSystemItem","kind","getFilesFromItem","getAsFile","getFilesFromDataTransfer","dataTransfer","browseFolders","items","map","all","fileGroups","group","hasDataTransferOnlyFiles","every","isFilePasted","types","texts","canAppendFileToForm","DataTransfer","add","input","err","assignFileToInput","instances","Map","Uploader","getById","getInstances","Array","from","uploaderOptions","Set","Text","getRandom","multiple","acceptOnlyImages","acceptOnlyImagesGlobal","getGlobalOption","setAcceptOnlyImages","acceptedFileTypes","setAcceptedFileTypes","acceptedFileTypesGlobal","ignoredFileNames","setIgnoredFileNames","setMaxFileCount","maxFileCount","setAllowReplaceSingle","allowReplaceSingle","assignBrowse","browseElement","assignDropzone","dropElement","assignPaste","pasteElement","setHiddenFieldsContainer","hiddenFieldsContainer","setHiddenFieldName","hiddenFieldName","setAssignAsFile","assignAsFile","setAssignServerFile","assignServerFile","setAutoUpload","autoUpload","setMaxParallelUploads","maxParallelUploads","setMaxParallelLoads","maxParallelLoads","addFilter","addFilters","filters","addFiles","path","globalOptions","fileList","isArrayLike","results","addFile","getIgnoredFileNames","isMultiple","shouldReplaceSingle","fileToReplace","removeFile","preloaded","shouldPreload","preload","getPendingFileCount","destroy","unassignBrowseAll","unassignDropzoneAll","unassignPasteAll","removeFilesFromServer","removeFiles","setPrototypeOf","getFiles","index","findIndex","element","className","Reflection","nodes","isElementNode","node","has","tagName","acceptAttr","getAttribute","onBrowseClickHandler","join","unassignBrowse","unbind","unassignDropzone","unassignPaste","getHiddenFieldsContainer","querySelector","container","getHiddenFieldName","shouldAssignAsFile","shouldAssignServerFile","reduce","shouldAutoUpload","getMaxParallelUploads","number","getMaxParallelLoads","getUploadingFileCount","getImageExtensions","shouldAcceptOnlyImages","fileNames","getMaxFileCount","preventDefault","getTarget","totalNewFiles","totalFiles","firstFilter","current","next","splice","click","currentTarget","dragEvent","clipboardEvent","clipboardData","currentUploads","pendingFiles","pendingUploads","limit","pendingFile","currentLoads","Dom","style","visibility","left","top","append","JPEG","APP1","EXIF","TIFF","Orientation","Unknown","little","getJpegOrientation","reader","e","target","marker","tags","isJpeg"],"mappings":"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"}