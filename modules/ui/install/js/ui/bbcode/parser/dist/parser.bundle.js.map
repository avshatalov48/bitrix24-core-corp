{"version":3,"file":"parser.bundle.js","sources":["../src/bbom/root-node.js","../src/bbom/node.js","../src/bbom/void-node.js","../src/bbom/text-node.js","../src/bbom/new-line-node.js","../src/parser.js"],"sourcesContent":["import { Type } from 'main.core';\n\ntype RootNodeOptions = {\n\tchildren?: Array<any>,\n};\n\nexport class RootNode\n{\n\tchildren: Array<any> = [];\n\n\tconstructor(options: RootNodeOptions = {})\n\t{\n\t\tthis.setChildren(options.children);\n\t}\n\n\tsetChildren(children: Array<any>)\n\t{\n\t\tif (Type.isArray(children))\n\t\t{\n\t\t\tthis.children = [...children];\n\t\t}\n\t}\n\n\tappendChild(...children: Array<any>)\n\t{\n\t\tthis.children.push(...children);\n\t}\n\n\treplaceChild(targetNode, ...children: Array<any>)\n\t{\n\t\tthis.children = this.children.flatMap((node) => {\n\t\t\tif (node === targetNode)\n\t\t\t{\n\t\t\t\treturn children;\n\t\t\t}\n\n\t\t\treturn node;\n\t\t});\n\t}\n\n\tgetChildren(): Array<any>\n\t{\n\t\treturn [...this.children];\n\t}\n\n\ttoString(): string\n\t{\n\t\treturn this.getChildren()\n\t\t\t.map((child) => {\n\t\t\t\treturn child.toString();\n\t\t\t})\n\t\t\t.join('');\n\t}\n}\n","import { Type } from 'main.core';\n\ntype NodeOptions = {\n\tname: string,\n\tvalue?: string | number,\n\tattributes?: {[key: string]: any},\n\tchildren?: Array<any>,\n\tparent?: any,\n};\n\nexport class Node\n{\n\tname: string = '';\n\tvalue: string | number = '';\n\tattributes: {[key: string]: any} = {};\n\tchildren: Array<any> = [];\n\tparent: any = null;\n\n\tconstructor(options: NodeOptions = {})\n\t{\n\t\tthis.setName(options.name);\n\t\tthis.setValue(options.value);\n\t\tthis.setAttributes(options.attributes);\n\t\tthis.setChildren(options.children);\n\t\tthis.setParent(options.parent);\n\t}\n\n\tsetName(name: string)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.name = name;\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.name;\n\t}\n\n\tsetValue(value: string | number)\n\t{\n\t\tif (Type.isStringFilled(value) || Type.isNumber(value))\n\t\t{\n\t\t\tthis.value = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.value = '';\n\t\t}\n\t}\n\n\tgetValue(): string | number\n\t{\n\t\treturn this.value;\n\t}\n\n\tsetAttributes(attributes: { [key: string]: any })\n\t{\n\t\tif (Type.isPlainObject(attributes))\n\t\t{\n\t\t\tthis.attributes = { ...attributes };\n\t\t}\n\t}\n\n\tsetAttribute(name: string, value: any)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tif (Type.isNil(value))\n\t\t\t{\n\t\t\t\tdelete this.attributes[name];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.attributes[name] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAttribute(name: string): any\n\t{\n\t\treturn this.attributes[name];\n\t}\n\n\tgetAttributes(): { [key: string]: any }\n\t{\n\t\treturn { ...this.attributes };\n\t}\n\n\tsetChildren(children: Array<any>)\n\t{\n\t\tif (Type.isArray(children))\n\t\t{\n\t\t\tthis.children = [...children];\n\t\t}\n\t}\n\n\tappendChild(...children: Array<any>)\n\t{\n\t\tthis.children.push(...children);\n\t}\n\n\treplaceChild(targetNode, ...children: Array<any>)\n\t{\n\t\tthis.children = this.children.flatMap((node) => {\n\t\t\tif (node === targetNode)\n\t\t\t{\n\t\t\t\treturn children;\n\t\t\t}\n\n\t\t\treturn node;\n\t\t});\n\t}\n\n\tgetChildren(): Array<any>\n\t{\n\t\treturn [...this.children];\n\t}\n\n\tsetParent(node: any)\n\t{\n\t\tthis.parent = node;\n\t}\n\n\tgetParent(): any\n\t{\n\t\treturn this.parent;\n\t}\n\n\ttoString(): string\n\t{\n\t\tconst value = this.getValue();\n\t\tconst valueString = value ? `=${value}` : '';\n\t\tconst attributes = Object\n\t\t\t.entries(this.getAttributes())\n\t\t\t.map(([key, attrValue]) => {\n\t\t\t\treturn attrValue ? `${key}=${attrValue}` : key;\n\t\t\t})\n\t\t\t.join(' ');\n\t\tconst children = this.getChildren()\n\t\t\t.map((child) => {\n\t\t\t\treturn child.toString();\n\t\t\t})\n\t\t\t.join('');\n\n\t\t// eslint-disable-next-line sonarjs/no-nested-template-literals\n\t\treturn `[${this.getName()}${valueString}${attributes ? ` ${attributes}` : ''}]${children}[/${this.getName()}]`;\n\t}\n}\n","import { Type } from 'main.core';\n\ntype VoidNodeOptions = {\n\tname: string,\n\tvalue?: string | number,\n\tattributes?: {[key: string]: any},\n\tparent?: any,\n};\n\nexport class VoidNode\n{\n\tname: string = '';\n\tvalue: string | number = '';\n\tattributes: {[key: string]: any} = {};\n\tparent: any = null;\n\n\tconstructor(options: VoidNodeOptions = {})\n\t{\n\t\tthis.setName(options.name);\n\t\tthis.setValue(options.value);\n\t\tthis.setAttributes(options.attributes);\n\t\tthis.setParent(options.parent);\n\t}\n\n\tsetName(name: string)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.name = name;\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.name;\n\t}\n\n\tsetValue(value: string | number)\n\t{\n\t\tif (Type.isStringFilled(value) || Type.isNumber(value))\n\t\t{\n\t\t\tthis.value = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.value = '';\n\t\t}\n\t}\n\n\tgetValue(): string | number\n\t{\n\t\treturn this.value;\n\t}\n\n\tsetAttributes(attributes: { [key: string]: any })\n\t{\n\t\tif (Type.isPlainObject(attributes))\n\t\t{\n\t\t\tthis.attributes = { ...attributes };\n\t\t}\n\t}\n\n\tsetAttribute(name: string, value: any)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tif (Type.isNil(value))\n\t\t\t{\n\t\t\t\tdelete this.attributes[name];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.attributes[name] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAttributes(): { [key: string]: any }\n\t{\n\t\treturn { ...this.attributes };\n\t}\n\n\tgetAttribute(key: string): any\n\t{\n\t\treturn this.attributes[key];\n\t}\n\n\tsetParent(node: any)\n\t{\n\t\tthis.parent = node;\n\t}\n\n\tgetParent(): any\n\t{\n\t\treturn this.parent;\n\t}\n\n\ttoString(): string\n\t{\n\t\tconst value = this.getValue();\n\t\tconst valueString = value ? `=${value}` : '';\n\t\tconst attributes = Object\n\t\t\t.entries(this.getAttributes())\n\t\t\t.map(([key, attrValue]) => {\n\t\t\t\treturn attrValue ? `${key}=${attrValue}` : key;\n\t\t\t})\n\t\t\t.join(' ');\n\n\t\treturn `[${this.getName()}${valueString}${attributes ? ` ${attributes}` : ''}]`;\n\t}\n}\n","import { Type } from 'main.core';\n\ntype TextNodeOptions = {\n\tcontent?: string | number,\n\tparent?: any,\n};\n\nexport class TextNode\n{\n\tcontent: string = '';\n\tparent: any = null;\n\n\tconstructor(options: TextNodeOptions = {})\n\t{\n\t\tthis.setContent(options.content);\n\t\tthis.setParent(options.parent);\n\t}\n\n\tsetContent(content: string | number)\n\t{\n\t\tif (Type.isString(content) || Type.isNumber(content))\n\t\t{\n\t\t\tthis.content = content;\n\t\t}\n\t}\n\n\tgetContent(): string | number\n\t{\n\t\treturn this.content;\n\t}\n\n\tsetParent(node: any)\n\t{\n\t\tthis.parent = node;\n\t}\n\n\tgetParent(): any\n\t{\n\t\treturn this.parent;\n\t}\n\n\ttoString(): string\n\t{\n\t\treturn this.getContent();\n\t}\n}\n","import { TextNode } from './text-node';\n\nexport class NewLineNode extends TextNode\n{}\n","import { Type } from 'main.core';\nimport { RootNode } from './bbom/root-node';\nimport { Node } from './bbom/node';\nimport { VoidNode } from './bbom/void-node';\nimport { TextNode } from './bbom/text-node';\nimport { NewLineNode } from './bbom/new-line-node';\n\ntype AllowedCases = 'initial' | 'lowerCase' | 'upperCase';\ntype ParserOptions = {\n\ttagNameCase: AllowedCases,\n\tattributeNameCase: AllowedCases,\n};\n\nconst TAG_REGEX = /\\[(\\/)?(\\w+|\\*)([\\s\\w./:=]+)?]/gs;\n\nclass Parser\n{\n\tconstructor(options: ParserOptions = {})\n\t{\n\t\tthis.options = {\n\t\t\ttagNameCase: 'lowerCase',\n\t\t\tattributeNameCase: 'lowerCase',\n\t\t\t...options,\n\t\t};\n\t}\n\n\tstatic prepareCase(value: string, resultCase: AllowedCases): string\n\t{\n\t\tif (Type.isStringFilled(value))\n\t\t{\n\t\t\tif (resultCase === 'lowerCase')\n\t\t\t{\n\t\t\t\treturn value.toLowerCase();\n\t\t\t}\n\n\t\t\tif (resultCase === 'upperCase')\n\t\t\t{\n\t\t\t\treturn value.toUpperCase();\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tprepareTagNameCase(name: string): string\n\t{\n\t\treturn Parser.prepareCase(name, this.options.tagNameCase);\n\t}\n\n\tprepareAttributeNameCase(name: string): string\n\t{\n\t\treturn Parser.prepareCase(name, this.options.attributeNameCase);\n\t}\n\n\tparseText(text: string, parent = null): Array<TextNode>\n\t{\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\tconst fragments: Array<string> = (() => {\n\t\t\t\tconst result = text.split('\\n');\n\t\t\t\tif (/^\\n+$/g.test(text))\n\t\t\t\t{\n\t\t\t\t\treturn result.slice(1);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t})();\n\n\t\t\treturn fragments.map((fragment: string) => {\n\t\t\t\tif (Type.isStringFilled(fragment))\n\t\t\t\t{\n\t\t\t\t\treturn new TextNode({ content: fragment, parent });\n\t\t\t\t}\n\n\t\t\t\treturn new NewLineNode({ content: '\\n', parent });\n\t\t\t});\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tstatic findNextTagIndex(bbcode: string, startIndex = 0): number\n\t{\n\t\tconst nextContent = bbcode.slice(startIndex);\n\t\tconst [nextTag] = nextContent.match(new RegExp(TAG_REGEX)) || [];\n\t\tif (nextTag)\n\t\t{\n\t\t\treturn bbcode.indexOf(nextTag, startIndex);\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tparseAttributes(sourceAttributes: string): { value: ?string, attributes: Array<[string, string]> }\n\t{\n\t\tconst result = { value: '', attributes: [] };\n\n\t\tif (Type.isStringFilled(sourceAttributes))\n\t\t{\n\t\t\treturn sourceAttributes\n\t\t\t\t.trim()\n\t\t\t\t.split(' ')\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.reduce((acc: typeof result, item: string) => {\n\t\t\t\t\tif (item.startsWith('='))\n\t\t\t\t\t{\n\t\t\t\t\t\tacc.value = item.slice(1);\n\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst [key, value = ''] = item.split('=');\n\t\t\t\t\tacc.attributes.push([this.prepareAttributeNameCase(key), value]);\n\n\t\t\t\t\treturn acc;\n\t\t\t\t}, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tisListTag(tagName: string): boolean\n\t{\n\t\treturn ['list', 'ul', 'ol'].includes(tagName);\n\t}\n\n\tisListItemTag(tagName: string): boolean\n\t{\n\t\treturn ['*', 'li'].includes(tagName);\n\t}\n\n\t// eslint-disable-next-line sonarjs/cognitive-complexity\n\tparse(bbcode: string): RootNode\n\t{\n\t\tconst result = new RootNode();\n\t\tconst stack = [];\n\t\tlet level = -1;\n\t\tlet current = null;\n\n\t\tconst firstTagIndex = Parser.findNextTagIndex(bbcode);\n\t\tif (firstTagIndex !== 0)\n\t\t{\n\t\t\tconst textBeforeFirstTag = firstTagIndex === -1 ? bbcode : bbcode.slice(0, firstTagIndex);\n\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-native-dom-methods\n\t\t\tresult.appendChild(\n\t\t\t\t...this.parseText(textBeforeFirstTag),\n\t\t\t);\n\t\t}\n\n\t\tbbcode.replace(TAG_REGEX, (fullTag: string, slash: ?string, tagName: string, attrs: ?string, index: number) => {\n\t\t\tconst isOpenTag = Boolean(slash) === false;\n\t\t\tconst startIndex = fullTag.length + index;\n\t\t\tconst nextContent = bbcode.slice(startIndex);\n\t\t\tconst attributes = this.parseAttributes(attrs);\n\t\t\tconst caseSensitivityTagName = this.prepareTagNameCase(tagName);\n\t\t\tlet parent = null;\n\n\t\t\tif (isOpenTag)\n\t\t\t{\n\t\t\t\tlevel++;\n\n\t\t\t\tif (\n\t\t\t\t\tnextContent.includes(`[/${tagName}]`)\n\t\t\t\t\t|| this.isListItemTag(caseSensitivityTagName)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tcurrent = new Node({\n\t\t\t\t\t\tname: caseSensitivityTagName,\n\t\t\t\t\t\tvalue: attributes.value,\n\t\t\t\t\t\tattributes: Object.fromEntries(attributes.attributes),\n\t\t\t\t\t});\n\n\t\t\t\t\tconst nextTagIndex = Parser.findNextTagIndex(bbcode, startIndex);\n\t\t\t\t\tif (nextTagIndex !== 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst content = nextTagIndex === -1 ? nextContent : bbcode.slice(startIndex, nextTagIndex);\n\t\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-native-dom-methods\n\t\t\t\t\t\tcurrent.appendChild(\n\t\t\t\t\t\t\t...this.parseText(content, current),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcurrent = new VoidNode({\n\t\t\t\t\t\tname: caseSensitivityTagName,\n\t\t\t\t\t\tvalue: attributes.value,\n\t\t\t\t\t\tattributes: Object.fromEntries(attributes.attributes),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (level === 0)\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-native-dom-methods\n\t\t\t\t\tresult.appendChild(current);\n\t\t\t\t}\n\n\t\t\t\tparent = stack[level - 1];\n\n\t\t\t\tif (this.isListTag(current.getName()))\n\t\t\t\t{\n\t\t\t\t\tif (parent && this.isListTag(parent.getName()))\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent.setParent(stack[level]);\n\t\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-native-dom-methods\n\t\t\t\t\t\tstack[level].appendChild(current);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (parent)\n\t\t\t\t{\n\t\t\t\t\tcurrent.setParent(parent);\n\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-native-dom-methods\n\t\t\t\t\tparent.appendChild(current);\n\t\t\t\t}\n\n\t\t\t\tstack[level] = current;\n\n\t\t\t\tif (this.isListItemTag(caseSensitivityTagName) && level > -1)\n\t\t\t\t{\n\t\t\t\t\tlevel--;\n\t\t\t\t\tcurrent = level === -1 ? result : stack[level];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isOpenTag || current instanceof VoidNode)\n\t\t\t{\n\t\t\t\tif (level > -1 && current.getName() === caseSensitivityTagName)\n\t\t\t\t{\n\t\t\t\t\tlevel--;\n\t\t\t\t\tcurrent = level === -1 ? result : stack[level];\n\t\t\t\t}\n\n\t\t\t\tconst nextTagIndex = Parser.findNextTagIndex(bbcode, startIndex);\n\t\t\t\tif (nextTagIndex !== startIndex)\n\t\t\t\t{\n\t\t\t\t\tparent = level === -1 ? result : stack[level];\n\n\t\t\t\t\tconst content = bbcode.slice(startIndex, nextTagIndex);\n\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-native-dom-methods\n\t\t\t\t\tparent.appendChild(\n\t\t\t\t\t\t...this.parseText(content, current),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n}\n\nexport {\n\tParser,\n\tRootNode,\n\tNode,\n\tTextNode,\n\tNewLineNode,\n\tVoidNode,\n};\n"],"names":["RootNode","constructor","options","children","setChildren","Type","isArray","appendChild","push","replaceChild","targetNode","flatMap","node","getChildren","toString","map","child","join","Node","name","value","attributes","parent","setName","setValue","setAttributes","setParent","isStringFilled","getName","isNumber","getValue","isPlainObject","setAttribute","isNil","getAttribute","getAttributes","getParent","valueString","Object","entries","key","attrValue","VoidNode","TextNode","content","setContent","isString","getContent","NewLineNode","TAG_REGEX","Parser","tagNameCase","attributeNameCase","prepareCase","resultCase","toLowerCase","toUpperCase","prepareTagNameCase","prepareAttributeNameCase","parseText","text","fragments","result","split","test","slice","fragment","findNextTagIndex","bbcode","startIndex","nextContent","nextTag","match","RegExp","indexOf","parseAttributes","sourceAttributes","trim","filter","Boolean","reduce","acc","item","startsWith","isListTag","tagName","includes","isListItemTag","parse","stack","level","current","firstTagIndex","textBeforeFirstTag","replace","fullTag","slash","attrs","index","isOpenTag","length","caseSensitivityTagName","fromEntries","nextTagIndex"],"mappings":"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"}