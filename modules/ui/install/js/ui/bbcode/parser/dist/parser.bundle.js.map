{"version":3,"file":"parser.bundle.js","sources":["../src/bbom/node.js","../src/bbom/text-node.js","../src/reference.js","../src/bbom/element-node.js","../src/bbom/root-node.js","../src/bbom/new-line-node.js","../src/bbom/fragment-node.js","../src/bbom/tab-node.js","../src/parser.js"],"sourcesContent":["import { Type } from 'main.core';\nimport { typeof ElementNode } from './element-node';\nimport { typeof TextNode } from './text-node';\nimport { typeof NewLineNode } from './new-line-node';\nimport { typeof TabNode } from './tab-node';\nimport { typeof RootNode } from './root-node';\nimport { typeof FragmentNode } from './fragment-node';\n\nexport type SpecialCharNode = NewLineNode | TabNode;\nexport type ContentNode = ElementNode | TextNode | SpecialCharNode;\nexport type ParentNode = RootNode | ElementNode | FragmentNode;\n\nexport type NodeOptions = {\n\tname?: string,\n\tparent?: ParentNode | null,\n\tchildren?: Array<ContentNode | FragmentNode>,\n};\n\nexport type SerializedNode = {\n\tname: string,\n\tchildren: Array<SerializedNode>,\n};\n\nexport const privateMap: WeakMap<Node | ContentNode | RootNode | FragmentNode, {[key: string]: any}> = new WeakMap();\nexport const nameSymbol = Symbol('name');\n\nexport class Node\n{\n\t[nameSymbol]: string = 'unknown';\n\tchildren: Array<ContentNode | FragmentNode> = [];\n\n\tconstructor(options: NodeOptions = {})\n\t{\n\t\tprivateMap.set(this, {});\n\t\tthis.setParent(options.parent);\n\t\tthis.setName(options.name);\n\t\tthis.setChildren(options.children);\n\t}\n\n\tstatic get ELEMENT_NODE(): number\n\t{\n\t\treturn 1;\n\t}\n\n\tstatic get TEXT_NODE(): number\n\t{\n\t\treturn 2;\n\t}\n\n\tstatic get ROOT_NODE(): number\n\t{\n\t\treturn 3;\n\t}\n\n\tstatic get FRAGMENT_NODE(): number\n\t{\n\t\treturn 4;\n\t}\n\n\tstatic freezeProperty(node: Node, property: string, value: any, enumerable: boolean = true)\n\t{\n\t\tObject.defineProperty(node, property, {\n\t\t\tvalue,\n\t\t\twritable: false,\n\t\t\tconfigurable: false,\n\t\t\tenumerable,\n\t\t});\n\t}\n\n\tstatic makeNonEnumerableProperty(node: Node, property: string)\n\t{\n\t\tObject.defineProperty(node, property, {\n\t\t\twritable: false,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t});\n\t}\n\n\tstatic flattenChildren(children: Array<ContentNode | FragmentNode>): Array<ContentNode>\n\t{\n\t\tif (Type.isArrayFilled(children))\n\t\t{\n\t\t\treturn children.flatMap((node: ContentNode | FragmentNode) => {\n\t\t\t\tif (node.getType() === Node.FRAGMENT_NODE)\n\t\t\t\t{\n\t\t\t\t\treturn node.getChildren();\n\t\t\t\t}\n\n\t\t\t\treturn node;\n\t\t\t});\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tsetName(name: string)\n\t{\n\t\tif (Type.isString(name))\n\t\t{\n\t\t\tthis[nameSymbol] = name;\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this[nameSymbol];\n\t}\n\n\tsetParent(parent: ParentNode | null = null)\n\t{\n\t\tprivateMap.get(this).parent = parent;\n\t}\n\n\tgetParent(): ParentNode | null\n\t{\n\t\treturn privateMap.get(this).parent;\n\t}\n\n\tgetType(): number\n\t{\n\t\treturn privateMap.get(this).type;\n\t}\n\n\thasParent(): boolean\n\t{\n\t\treturn Boolean(privateMap.get(this).parent);\n\t}\n\n\tremove()\n\t{\n\t\tif (this.hasParent())\n\t\t{\n\t\t\tthis.getParent().removeChild(this);\n\t\t}\n\t}\n\n\tsetChildren(children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tif (Type.isArray(children))\n\t\t{\n\t\t\tthis.children = [];\n\t\t\tthis.appendChild(...children);\n\t\t}\n\t}\n\n\tgetChildren(): Array<ContentNode>\n\t{\n\t\treturn [...this.children];\n\t}\n\n\tgetLastChild(): ?ContentNode\n\t{\n\t\treturn this.getChildren().at(-1);\n\t}\n\n\tgetLastChildOfType(type: number): ?ContentNode\n\t{\n\t\treturn this.getChildren().reverse().find((node: ContentNode) => {\n\t\t\treturn node.getType() === type;\n\t\t});\n\t}\n\n\tgetLastChildOfName(name: string): ?ContentNode\n\t{\n\t\treturn this.getChildren().reverse().find((node: ContentNode) => {\n\t\t\treturn node.getType() === Node.ELEMENT_NODE && node.getName() === name;\n\t\t});\n\t}\n\n\tgetFirstChild(): ?ContentNode\n\t{\n\t\treturn this.getChildren().at(0);\n\t}\n\n\tgetFirstChildOfType(type: number): ?ContentNode\n\t{\n\t\treturn this.getChildren().find((node: ContentNode) => {\n\t\t\treturn node.getType() === type;\n\t\t});\n\t}\n\n\tgetFirstChildOfName(name: string): ?ContentNode\n\t{\n\t\treturn this.getChildren().find((node: ContentNode) => {\n\t\t\treturn node.getType() === Node.ELEMENT_NODE && node.getName() === name;\n\t\t});\n\t}\n\n\tgetPreviewsSibling(): ?ContentNode\n\t{\n\t\tif (this.hasParent())\n\t\t{\n\t\t\tconst parentChildren: Array<ContentNode> = this.getParent().getChildren();\n\t\t\tconst currentIndex: number = parentChildren.indexOf(this);\n\t\t\tif (currentIndex > 0)\n\t\t\t{\n\t\t\t\treturn parentChildren.at(currentIndex - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetNextSibling(): ?ContentNode\n\t{\n\t\tif (this.hasParent())\n\t\t{\n\t\t\tconst parentChildren: Array<ContentNode> = this.getParent().getChildren();\n\t\t\tconst currentIndex: number = parentChildren.indexOf(this);\n\t\t\tif (currentIndex !== -1 && currentIndex !== parentChildren.length)\n\t\t\t{\n\t\t\t\treturn parentChildren.at(currentIndex + 1);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetChildrenCount(): number\n\t{\n\t\treturn this.children.length;\n\t}\n\n\thasChildren(): boolean\n\t{\n\t\treturn this.getChildrenCount() > 0;\n\t}\n\n\tappendChild(...children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tconst flattenedChildren: Array<ContentNode> = Node.flattenChildren(children);\n\n\t\tflattenedChildren.forEach((node: ContentNode) => {\n\t\t\tnode.remove();\n\t\t\tnode.setParent(this);\n\t\t\tthis.children.push(node);\n\t\t});\n\t}\n\n\tprependChild(...children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tconst flattenedChildren: Array<ContentNode> = Node.flattenChildren(children);\n\n\t\tflattenedChildren.forEach((node: ContentNode) => {\n\t\t\tnode.remove();\n\t\t\tnode.setParent(this);\n\t\t\tthis.children.unshift(node);\n\t\t});\n\t}\n\n\tpropagateChild(...children: Array<ContentNode>)\n\t{\n\t\tif (this.hasParent())\n\t\t{\n\t\t\tthis.getParent().prependChild(\n\t\t\t\t...children.filter((node: ContentNode) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tnode.getType() === Node.ELEMENT_NODE\n\t\t\t\t\t\t|| node.getName() === '#text'\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\tremoveChild(...children: Array<ContentNode>)\n\t{\n\t\tthis.children = this.children.reduce((acc: Array<ContentNode>, node: ContentNode) => {\n\t\t\tif (children.includes(node))\n\t\t\t{\n\t\t\t\tnode.setParent(null);\n\n\t\t\t\treturn acc;\n\t\t\t}\n\n\t\t\treturn [...acc, node];\n\t\t}, []);\n\t}\n\n\treplaceChild(targetNode: ContentNode, ...children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tthis.children = this.children.flatMap((node: ContentNode) => {\n\t\t\tif (node === targetNode)\n\t\t\t{\n\t\t\t\tnode.setParent(null);\n\n\t\t\t\tconst flattenedChildren: Array<ContentNode> = Node.flattenChildren(children);\n\n\t\t\t\treturn flattenedChildren.map((child: ContentNode) => {\n\t\t\t\t\tchild.remove();\n\t\t\t\t\tchild.setParent(this);\n\n\t\t\t\t\treturn child;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn node;\n\t\t});\n\t}\n\n\ttoJSON(): SerializedNode\n\t{\n\t\treturn {\n\t\t\tname: this.getName(),\n\t\t\tchildren: this.getChildren().map((child: ContentNode) => {\n\t\t\t\treturn child.toJSON();\n\t\t\t}),\n\t\t};\n\t}\n}\n","import { Type } from 'main.core';\nimport { Node, privateMap, nameSymbol, type NodeOptions } from './node';\n\nexport const contentSymbol = Symbol('content');\n\nexport type TextNodeContent = string | number;\n\nexport type TextNodeOptions = TextNodeContent | NodeOptions & {\n\tcontent?: string,\n};\n\nexport type SerializedTextNode = {\n\tname: string,\n\tcontent: TextNodeContent,\n};\n\nexport class TextNode extends Node\n{\n\t[nameSymbol]: string = '#text';\n\t[contentSymbol]: string = '';\n\n\tconstructor(options: TextNodeOptions = {})\n\t{\n\t\tconst nodeOptions: TextNodeOptions = Type.isString(options) ? { content: options } : options;\n\t\tsuper(nodeOptions);\n\t\tprivateMap.get(this).type = Node.TEXT_NODE;\n\t\tthis.setContent(nodeOptions.content);\n\t\tNode.makeNonEnumerableProperty(this, 'children');\n\t}\n\n\tstatic isTextNodeContent(value: any): boolean\n\t{\n\t\treturn Type.isString(value) || Type.isNumber(value);\n\t}\n\n\tstatic decodeSpecialChars(content: TextNodeContent): TextNodeContent\n\t{\n\t\tif (TextNode.isTextNodeContent(content))\n\t\t{\n\t\t\treturn content\n\t\t\t\t.replaceAll('&#91;', '[')\n\t\t\t\t.replaceAll('&#93;', ']');\n\t\t}\n\n\t\treturn content;\n\t}\n\n\tsetName(name: string)\n\t{}\n\n\tsetContent(content: TextNodeContent)\n\t{\n\t\tif (TextNode.isTextNodeContent(content))\n\t\t{\n\t\t\tthis[contentSymbol] = TextNode.decodeSpecialChars(content);\n\t\t}\n\t}\n\n\tgetContent(): TextNodeContent\n\t{\n\t\treturn TextNode.decodeSpecialChars(this[contentSymbol]);\n\t}\n\n\ttoString(): string\n\t{\n\t\treturn this.getContent();\n\t}\n\n\ttoJSON(): SerializedTextNode\n\t{\n\t\treturn {\n\t\t\tname: this.getName(),\n\t\t\tcontent: this.toString(),\n\t\t};\n\t}\n}\n","import { Node, type ContentNode } from './bbom/node';\nimport { TextNode } from './bbom/text-node';\n\nexport const TAB: string = '\\t';\nexport const NEW_LINE: string = '\\n';\nexport const SPECIAL_CHARS: Set<string> = new Set([TAB, NEW_LINE]);\n\nexport const BOLD: string = 'b';\nexport const ITALIC: string = 'i';\nexport const STRIKE: string = 's';\nexport const UNDERLINE: string = 'u';\nexport const SIZE: string = 'size';\nexport const COLOR: string = 'color';\nexport const CENTER: string = 'center';\nexport const LEFT: string = 'left';\nexport const RIGHT: string = 'right';\nexport const URL: string = 'url';\nexport const IMG: string = 'img';\nexport const PARAGRAPH: string = 'p';\nexport const LIST: string = 'list';\nexport const LIST_UL: string = 'ul';\nexport const LIST_OL: string = 'ol';\nexport const LIST_ITEM: string = '*';\nexport const LIST_ITEM_LI: string = 'li';\nexport const TABLE: string = 'table';\nexport const TABLE_ROW: string = 'tr';\nexport const TABLE_CELL: string = 'td';\nexport const TABLE_HEAD_CELL: string = 'th';\nexport const QUOTE: string = 'quote';\nexport const CODE: string = 'code';\nexport const SPOILER: string = 'spoiler';\n\nexport const INLINE_ELEMENTS: Set<string> = new Set(\n\t[BOLD, ITALIC, STRIKE, UNDERLINE, SIZE, COLOR, CENTER, LEFT, RIGHT, URL, IMG, LIST_ITEM, LIST_ITEM_LI],\n);\n\nexport const BLOCK_ELEMENTS: Set<string> = new Set(\n\t[PARAGRAPH, LIST, LIST_UL, LIST_OL, TABLE, QUOTE, CODE, SPOILER],\n);\n\nexport const LIST_ELEMENTS: Set<string> = new Set([LIST, LIST_UL, LIST_OL]);\nexport const LIST_ITEM_ELEMENTS: Set<string> = new Set([LIST_ITEM, LIST_ITEM_LI]);\n\nexport class NodeType\n{\n\tstatic isAnyText(node: ContentNode): boolean\n\t{\n\t\treturn node.getType() === Node.TEXT_NODE;\n\t}\n\n\tstatic isText(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isAnyText(node) && !SPECIAL_CHARS.has(node.getContent());\n\t}\n\n\tstatic isNewLine(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isAnyText(node) && node.getContent() === NEW_LINE;\n\t}\n\n\tstatic isTab(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isAnyText(node) && node.getContent() === TAB;\n\t}\n\n\tstatic isElement(node: ContentNode): boolean\n\t{\n\t\treturn node && node.getType() === Node.ELEMENT_NODE;\n\t}\n\n\tstatic isList(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isElement(node) && LIST_ELEMENTS.has(node.getName());\n\t}\n\n\tstatic isListItem(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isElement(node) && LIST_ITEM_ELEMENTS.has(node.getName());\n\t}\n\n\tstatic isInline(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isElement(node) && INLINE_ELEMENTS.has(node.getName());\n\t}\n\n\tstatic isTableCell(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isElement(node) && [TABLE_CELL, TABLE_HEAD_CELL].includes(node.getName());\n\t}\n\n\tstatic isTable(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isElement(node) && node.getName() === TABLE;\n\t}\n\n\tstatic isTableRow(node: ContentNode): boolean\n\t{\n\t\treturn node && NodeType.isElement(node) && node.getName() === TABLE_ROW;\n\t}\n}\n\nconst listChildFilter = (node: ContentNode) => {\n\treturn NodeType.isListItem(node);\n};\n\nconst ulOlListChildFilter = (node: ContentNode) => {\n\treturn NodeType.isElement(node) && node.getName() === LIST_ITEM_LI;\n};\n\nconst listItemChildFilter = (node: ContentNode) => {\n\treturn (\n\t\t(NodeType.isAnyText(node) && !NodeType.isTab(node))\n\t\t|| (NodeType.isInline(node) && !NodeType.isListItem(node))\n\t\t|| NodeType.isList(node)\n\t);\n};\n\nconst tableChildFilter = (node: ContentNode) => {\n\treturn NodeType.isTableRow(node);\n};\n\nconst tableRowChildFilter = (node: ContentNode) => {\n\treturn NodeType.isTableCell(node);\n};\n\nconst tableCellChildFilter = (node: ContentNode) => {\n\treturn (\n\t\tNodeType.isText(node)\n\t\t|| NodeType.isNewLine(node)\n\t\t|| (\n\t\t\tNodeType.isInline(node)\n\t\t\t&& !NodeType.isListItem(node)\n\t\t)\n\t);\n};\n\nconst inlineChildFilter = (node: ContentNode) => {\n\treturn (\n\t\t(\n\t\t\tNodeType.isAnyText(node)\n\t\t\t&& !NodeType.isTab(node)\n\t\t)\n\t\t|| (\n\t\t\tNodeType.isInline(node)\n\t\t\t&& !NodeType.isListItem(node)\n\t\t)\n\t);\n};\n\nexport const childFiltersMap: Map<string, (node: ContentNode) => boolean> = new Map();\nchildFiltersMap.set(LIST, listChildFilter);\nchildFiltersMap.set(LIST_ITEM, listItemChildFilter);\nchildFiltersMap.set(LIST_ITEM_LI, listItemChildFilter);\nchildFiltersMap.set(LIST_OL, ulOlListChildFilter);\nchildFiltersMap.set(LIST_UL, ulOlListChildFilter);\nchildFiltersMap.set(TABLE, tableChildFilter);\nchildFiltersMap.set(TABLE_ROW, tableRowChildFilter);\nchildFiltersMap.set(TABLE_CELL, tableCellChildFilter);\nchildFiltersMap.set(TABLE_HEAD_CELL, tableCellChildFilter);\nchildFiltersMap.set('#inline', inlineChildFilter);\n\nexport const childConvertersMap: Map<string, (node: ContentNode) => Node> = new Map();\nchildConvertersMap.set(\n\tCODE,\n\t(node: ContentNode): ContentNode => {\n\t\tif (node.getType() === Node.TEXT_NODE)\n\t\t{\n\t\t\treturn node;\n\t\t}\n\n\t\treturn new TextNode(node.toString());\n\t},\n);\n","import { Type, type JsonObject, type JsonValue } from 'main.core';\nimport { Node, type NodeOptions, type ContentNode, type SerializedNode, privateMap } from './node';\nimport { typeof FragmentNode } from './fragment-node';\nimport { NodeType, childConvertersMap, childFiltersMap, INLINE_ELEMENTS } from '../reference';\n\nexport type ElementNodeValue = string | number | boolean;\n\nexport type ElementNodeOptions = NodeOptions & {\n\tattributes?: JsonObject,\n\tvalue?: ElementNodeValue,\n\tvoid?: boolean,\n\tinline?: boolean,\n};\n\nexport type SerializedElementNode = SerializedNode & {\n\tattributes: JsonObject,\n\tvalue: ElementNodeValue,\n\tvoid: boolean,\n\tinline: boolean,\n};\n\nexport type FilteredChildren = {\n\tresolved: Array<ContentNode>,\n\tunresolved: Array<ContentNode>,\n};\n\nexport class ElementNode extends Node\n{\n\tattributes: JsonObject = {};\n\tvalue: JsonValue = '';\n\tvoid: boolean = false;\n\tinline: boolean = false;\n\n\tconstructor(options: ElementNodeOptions = {})\n\t{\n\t\tsuper(options);\n\t\tprivateMap.get(this).type = Node.ELEMENT_NODE;\n\n\t\tconst preparedOptions = {\n\t\t\tinline: INLINE_ELEMENTS.has(options.name),\n\t\t\t...options,\n\t\t};\n\t\tthis.setInline(preparedOptions.inline);\n\t\tthis.setValue(preparedOptions.value);\n\t\tthis.setVoid(preparedOptions.void);\n\t\tthis.setAttributes(preparedOptions.attributes);\n\t}\n\n\tstatic filterChildren(node: ContentNode, children: Array<ContentNode>): FilteredChildren\n\t{\n\t\tconst filteredChildren = { resolved: [], unresolved: [] };\n\t\tconst byTagFilter = childFiltersMap.get(node.getName());\n\t\tif (byTagFilter)\n\t\t{\n\t\t\treturn children.reduce((acc, child: ContentNode) => {\n\t\t\t\tconst isAllowed = byTagFilter(child);\n\t\t\t\tif (isAllowed)\n\t\t\t\t{\n\t\t\t\t\tacc.resolved.push(child);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tacc.unresolved.push(child);\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, filteredChildren);\n\t\t}\n\n\t\tif (node.isInline())\n\t\t{\n\t\t\tconst inlineChildFilter = childFiltersMap.get('#inline');\n\n\t\t\treturn children.reduce((acc, child: ContentNode) => {\n\t\t\t\tconst isAllowed = inlineChildFilter(child);\n\t\t\t\tif (isAllowed)\n\t\t\t\t{\n\t\t\t\t\tacc.resolved.push(child);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tacc.unresolved.push(child);\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, { resolved: [], unresolved: [] });\n\t\t}\n\n\t\tfilteredChildren.resolved = children;\n\n\t\treturn filteredChildren;\n\t}\n\n\tstatic convertChildren(node: ContentNode, children: Array<ContentNode>): Array<ContentNode>\n\t{\n\t\tconst childConverter = childConvertersMap.get(node.getName());\n\t\tif (childConverter)\n\t\t{\n\t\t\treturn children.map((child: Node) => {\n\t\t\t\treturn childConverter(child);\n\t\t\t});\n\t\t}\n\n\t\treturn children;\n\t}\n\n\tsetValue(value: ElementNodeValue)\n\t{\n\t\tif (Type.isString(value) || Type.isNumber(value) || Type.isBoolean(value))\n\t\t{\n\t\t\tthis.value = value;\n\t\t}\n\t}\n\n\tgetValue(): ElementNodeValue\n\t{\n\t\treturn this.value;\n\t}\n\n\tsetVoid(value: boolean)\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.void = value;\n\t\t}\n\t}\n\n\tisVoid(): boolean\n\t{\n\t\treturn this.void;\n\t}\n\n\tsetInline(value: boolean)\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.inline = value;\n\t\t}\n\t}\n\n\tisInline(): boolean\n\t{\n\t\treturn this.inline;\n\t}\n\n\tsetAttributes(attributes: JsonObject)\n\t{\n\t\tif (Type.isPlainObject(attributes))\n\t\t{\n\t\t\tthis.attributes = { ...attributes };\n\t\t}\n\t}\n\n\tsetAttribute(name: string, value: any)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tif (Type.isNil(value))\n\t\t\t{\n\t\t\t\tdelete this.attributes[name];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.attributes[name] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAttribute(name: string): any\n\t{\n\t\treturn this.attributes[name];\n\t}\n\n\tgetAttributes(): JsonObject\n\t{\n\t\treturn { ...this.attributes };\n\t}\n\n\tappendChild(...children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tconst flattenedChildren: Array<ContentNode> = Node.flattenChildren(children);\n\t\tconst filteredChildren: FilteredChildren = ElementNode.filterChildren(this, flattenedChildren);\n\t\tconst convertedChildren: Array<ContentNode> = ElementNode.convertChildren(this, filteredChildren.resolved);\n\n\t\tconvertedChildren.forEach((node: ContentNode) => {\n\t\t\tnode.remove();\n\t\t\tnode.setParent(this);\n\t\t\tthis.children.push(node);\n\t\t});\n\n\t\tif (Type.isArrayFilled(filteredChildren.unresolved))\n\t\t{\n\t\t\tthis.propagateChild(...filteredChildren.unresolved);\n\t\t}\n\t}\n\n\tprependChild(...children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tconst flattenedChildren: Array<ContentNode> = Node.flattenChildren(children);\n\t\tconst filteredChildren: FilteredChildren = ElementNode.filterChildren(this, flattenedChildren);\n\t\tconst convertedChildren: Array<ContentNode> = ElementNode.convertChildren(this, filteredChildren.resolved);\n\n\t\tconvertedChildren.forEach((node: ContentNode) => {\n\t\t\tnode.remove();\n\t\t\tnode.setParent(this);\n\t\t\tthis.children.unshift(node);\n\t\t});\n\n\t\tif (Type.isArrayFilled(filteredChildren.unresolved))\n\t\t{\n\t\t\tthis.propagateChild(...filteredChildren.unresolved);\n\t\t}\n\t}\n\n\treplaceChild(targetNode: ContentNode, ...children: Array<ContentNode | FragmentNode>)\n\t{\n\t\tthis.children = this.children.flatMap((node: ContentNode) => {\n\t\t\tif (node === targetNode)\n\t\t\t{\n\t\t\t\tnode.setParent(null);\n\n\t\t\t\tconst flattenedChildren: Array<ContentNode> = Node.flattenChildren(children);\n\t\t\t\tconst filteredChildren: FilteredChildren = ElementNode.filterChildren(this, flattenedChildren);\n\t\t\t\tconst convertedChildren: Array<ContentNode> = ElementNode.convertChildren(this, filteredChildren.resolved);\n\n\t\t\t\treturn convertedChildren.map((child: ContentNode) => {\n\t\t\t\t\tchild.remove();\n\t\t\t\t\tchild.setParent(this);\n\n\t\t\t\t\treturn child;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn node;\n\t\t});\n\t}\n\n\ttoStringValue(): string\n\t{\n\t\tconst value: ElementNodeValue = this.getValue();\n\n\t\treturn value ? `=${value}` : '';\n\t}\n\n\ttoStringAttributes(): string\n\t{\n\t\treturn Object\n\t\t\t.entries(this.getAttributes())\n\t\t\t.map(([key: string, attrValue: string]) => {\n\t\t\t\treturn attrValue ? `${key}=${attrValue}` : key;\n\t\t\t})\n\t\t\t.join(' ');\n\t}\n\n\tgetNewLineBeforeContent(): string\n\t{\n\t\tif (!this.isInline())\n\t\t{\n\t\t\tconst firstChild: ?ContentNode = this.getFirstChild();\n\t\t\tif (firstChild && !NodeType.isNewLine(firstChild))\n\t\t\t{\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tgetNewLineAfterContent(): string\n\t{\n\t\tif (!this.isInline())\n\t\t{\n\t\t\tconst lastChild: ?ContentNode = this.getLastChild();\n\t\t\tif (lastChild && !NodeType.isNewLine(lastChild))\n\t\t\t{\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\tif (NodeType.isListItem(this))\n\t\t{\n\t\t\tconst lastChild: ContentNode = this.getParent().getLastChild();\n\t\t\tif (lastChild !== this)\n\t\t\t{\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tgetNewLineBeforeOpeningTag(): string\n\t{\n\t\tif (!this.isInline() && this.hasParent())\n\t\t{\n\t\t\tconst previewsSibling: ContentNode = this.getPreviewsSibling();\n\t\t\tif (NodeType.isText(previewsSibling) || NodeType.isInline(previewsSibling))\n\t\t\t{\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tgetNewLineAfterClosingTag(): string\n\t{\n\t\tif (!this.isInline() && this.hasParent())\n\t\t{\n\t\t\tconst nextSibling: ContentNode = this.getNextSibling();\n\t\t\tif (nextSibling && nextSibling.getName() !== '#linebreak')\n\t\t\t{\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tgetContent(): string\n\t{\n\t\tif (NodeType.isListItem(this))\n\t\t{\n\t\t\treturn this.getChildren()\n\t\t\t\t.reduceRight((acc: Array<ContentNode>, node: ContentNode) => {\n\t\t\t\t\tif (!Type.isArrayFilled(acc) && (NodeType.isNewLine(node) || NodeType.isTab(node)))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [node.toString(), ...acc];\n\t\t\t\t}, []);\n\t\t}\n\n\t\treturn this.getChildren()\n\t\t\t.map((child: ContentNode) => {\n\t\t\t\treturn child.toString();\n\t\t\t})\n\t\t\t.join('');\n\t}\n\n\tgetOpeningTag(): string\n\t{\n\t\tconst tagName: string = this.getName();\n\t\tconst tagValue: ElementNodeValue = this.toStringValue();\n\t\tconst attributes: JsonObject = this.toStringAttributes();\n\t\tconst formattedAttributes: string = Type.isStringFilled(attributes) ? ` ${attributes}` : '';\n\n\t\treturn `[${tagName}${tagValue}${formattedAttributes}]`;\n\t}\n\n\tgetClosingTag(): string\n\t{\n\t\treturn `[/${this.getName()}]`;\n\t}\n\n\ttoString(): string\n\t{\n\t\tconst openingTag: string = this.getOpeningTag();\n\n\t\tif (this.isVoid())\n\t\t{\n\t\t\treturn openingTag;\n\t\t}\n\n\t\tif (NodeType.isListItem(this))\n\t\t{\n\t\t\treturn `${openingTag}${this.getContent()}${this.getNewLineAfterContent()}`;\n\t\t}\n\n\t\tif (this.isInline())\n\t\t{\n\t\t\treturn `${openingTag}${this.getContent()}${this.getClosingTag()}`;\n\t\t}\n\n\t\treturn [\n\t\t\tthis.getNewLineBeforeOpeningTag(),\n\t\t\topeningTag,\n\t\t\tthis.getNewLineBeforeContent(),\n\t\t\tthis.getContent(),\n\t\t\tthis.getNewLineAfterContent(),\n\t\t\tthis.getClosingTag(),\n\t\t\tthis.getNewLineAfterClosingTag(),\n\t\t].join('');\n\t}\n\n\ttoJSON(): SerializedElementNode\n\t{\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\tvalue: this.getValue(),\n\t\t\tattributes: this.getAttributes(),\n\t\t\tvoid: this.isVoid(),\n\t\t\tinline: this.isInline(),\n\t\t};\n\t}\n}\n","import { Node, privateMap, type ContentNode } from './node';\nimport { ElementNode } from './element-node';\n\nexport type RootNodeOptions = {\n\tchildren: Array<Node>,\n};\n\nexport class RootNode extends ElementNode\n{\n\tconstructor(options: RootNodeOptions)\n\t{\n\t\tsuper(options);\n\t\tprivateMap.get(this).type = Node.ROOT_NODE;\n\t\tRootNode.freezeProperty(this, 'name', '#root', false);\n\t\tRootNode.makeNonEnumerableProperty(this, 'value');\n\t\tRootNode.makeNonEnumerableProperty(this, 'void');\n\t\tRootNode.makeNonEnumerableProperty(this, 'inline');\n\t\tRootNode.makeNonEnumerableProperty(this, 'attributes');\n\t}\n\n\tgetParent(): null\n\t{\n\t\treturn null;\n\t}\n\n\tsetName(name: string)\n\t{}\n\n\ttoString(): string\n\t{\n\t\treturn this.getChildren()\n\t\t\t.map((child: ContentNode) => {\n\t\t\t\treturn child.toString();\n\t\t\t})\n\t\t\t.join('');\n\t}\n\n\ttoJSON(): any\n\t{\n\t\treturn this.getChildren().map((node: Node) => {\n\t\t\treturn node.toJSON();\n\t\t});\n\t}\n}\n","import { nameSymbol } from './node';\nimport { TextNode, contentSymbol, type TextNodeContent, type TextNodeOptions } from './text-node';\nimport { NEW_LINE } from '../reference';\n\nexport class NewLineNode extends TextNode\n{\n\t[nameSymbol]: string = '#linebreak';\n\t[contentSymbol]: string = NEW_LINE;\n\n\tconstructor(options: TextNodeOptions = {})\n\t{\n\t\tsuper(options);\n\t}\n\n\tsetContent(options: TextNodeContent)\n\t{}\n}\n","import { Node, nameSymbol, privateMap } from './node';\nimport { ElementNode } from './element-node';\n\nexport type FragmentNodeOptions = {\n\tchildren: Array<Node>,\n};\n\nexport class FragmentNode extends ElementNode\n{\n\t[nameSymbol]: string = '#fragment';\n\n\tconstructor(options: FragmentNodeOptions)\n\t{\n\t\tsuper(options);\n\t\tprivateMap.get(this).type = Node.FRAGMENT_NODE;\n\t\tFragmentNode.makeNonEnumerableProperty(this, 'value');\n\t\tFragmentNode.makeNonEnumerableProperty(this, 'void');\n\t\tFragmentNode.makeNonEnumerableProperty(this, 'inline');\n\t\tFragmentNode.makeNonEnumerableProperty(this, 'attributes');\n\t}\n\n\tsetName()\n\t{}\n}\n","import { nameSymbol } from './node';\nimport { TextNode, contentSymbol, type TextNodeContent, type TextNodeOptions } from './text-node';\nimport { TAB } from '../reference';\n\nexport class TabNode extends TextNode\n{\n\t[nameSymbol]: string = '#tab';\n\t[contentSymbol]: string = TAB;\n\n\tconstructor(options: TextNodeOptions = {})\n\t{\n\t\tsuper(options);\n\t}\n\n\tsetContent(options: TextNodeContent)\n\t{}\n}\n","import { Type } from 'main.core';\nimport { RootNode } from './bbom/root-node';\nimport { Node, type SpecialCharNode, type ContentNode } from './bbom/node';\nimport { ElementNode } from './bbom/element-node';\nimport { TextNode } from './bbom/text-node';\nimport { NewLineNode } from './bbom/new-line-node';\nimport { FragmentNode } from './bbom/fragment-node';\nimport { TabNode } from './bbom/tab-node';\nimport { TAB, NEW_LINE, SPECIAL_CHARS, LIST_ELEMENTS, LIST_ITEM_ELEMENTS } from './reference';\n\nconst TAG_REGEX: RegExp = /\\[(\\/)?(\\w+|\\*)([\\s\\w./:=]+)?]/gs;\n\nclass Parser\n{\n\tstatic toLowerCase(value: string): string\n\t{\n\t\tif (Type.isStringFilled(value))\n\t\t{\n\t\t\treturn value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tparseText(text: string): Array<TextNode | SpecialCharNode>\n\t{\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\treturn [...text]\n\t\t\t\t.reduce((acc: Array<TextNode | SpecialCharNode>, symbol: string) => {\n\t\t\t\t\tif (SPECIAL_CHARS.has(symbol))\n\t\t\t\t\t{\n\t\t\t\t\t\tacc.push(symbol);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst lastItem: string = acc.at(-1);\n\t\t\t\t\t\tif (SPECIAL_CHARS.has(lastItem) || Type.isNil(lastItem))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tacc.push(symbol);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tacc[acc.length - 1] += symbol;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn acc;\n\t\t\t\t}, [])\n\t\t\t\t.map((fragment: string) => {\n\t\t\t\t\tif (fragment === NEW_LINE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new NewLineNode();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fragment === TAB)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new TabNode();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new TextNode(fragment);\n\t\t\t\t});\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tstatic findNextTagIndex(bbcode: string, startIndex = 0): number\n\t{\n\t\tconst nextContent: string = bbcode.slice(startIndex);\n\t\tconst [nextTag: ?string] = nextContent.match(new RegExp(TAG_REGEX)) || [];\n\t\tif (nextTag)\n\t\t{\n\t\t\treturn bbcode.indexOf(nextTag, startIndex);\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tparseAttributes(sourceAttributes: string): { value: ?string, attributes: Array<[string, string]> }\n\t{\n\t\tconst result: {value: string, attributes: Array<Array<string, string>>} = { value: '', attributes: [] };\n\n\t\tif (Type.isStringFilled(sourceAttributes))\n\t\t{\n\t\t\treturn sourceAttributes\n\t\t\t\t.trim()\n\t\t\t\t.split(' ')\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.reduce((acc: typeof result, item: string) => {\n\t\t\t\t\tif (item.startsWith('='))\n\t\t\t\t\t{\n\t\t\t\t\t\tacc.value = item.slice(1);\n\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst [key: string, value: string = ''] = item.split('=');\n\t\t\t\t\tacc.attributes.push([Parser.toLowerCase(key), value]);\n\n\t\t\t\t\treturn acc;\n\t\t\t\t}, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparse(bbcode: string): RootNode\n\t{\n\t\tconst result: RootNode = new RootNode();\n\t\tconst stack: Array<ElementNode> = [];\n\t\tlet current: ?ElementNode = null;\n\t\tlet level: number = -1;\n\n\t\tconst firstTagIndex: number = Parser.findNextTagIndex(bbcode);\n\t\tif (firstTagIndex !== 0)\n\t\t{\n\t\t\tconst textBeforeFirstTag: string = firstTagIndex === -1 ? bbcode : bbcode.slice(0, firstTagIndex);\n\t\t\tresult.appendChild(\n\t\t\t\t...this.parseText(textBeforeFirstTag),\n\t\t\t);\n\t\t}\n\n\t\tbbcode.replace(TAG_REGEX, (fullTag: string, slash: ?string, tagName: string, attrs: ?string, index: number) => {\n\t\t\tconst isOpenTag: boolean = Boolean(slash) === false;\n\t\t\tconst startIndex: number = fullTag.length + index;\n\t\t\tconst nextContent: string = bbcode.slice(startIndex);\n\t\t\tconst attributes = this.parseAttributes(attrs);\n\t\t\tconst lowerCaseTagName: string = Parser.toLowerCase(tagName);\n\t\t\tlet parent: ?(RootNode | ElementNode) = null;\n\n\t\t\tif (isOpenTag)\n\t\t\t{\n\t\t\t\tlevel++;\n\n\t\t\t\tif (\n\t\t\t\t\tnextContent.includes(`[/${tagName}]`)\n\t\t\t\t\t|| LIST_ITEM_ELEMENTS.has(lowerCaseTagName)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tcurrent = new ElementNode({\n\t\t\t\t\t\tname: lowerCaseTagName,\n\t\t\t\t\t\tvalue: attributes.value,\n\t\t\t\t\t\tattributes: Object.fromEntries(attributes.attributes),\n\t\t\t\t\t});\n\n\t\t\t\t\tconst nextTagIndex: number = Parser.findNextTagIndex(bbcode, startIndex);\n\t\t\t\t\tif (nextTagIndex !== 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst content: string = nextTagIndex === -1 ? nextContent : bbcode.slice(startIndex, nextTagIndex);\n\t\t\t\t\t\tcurrent.appendChild(\n\t\t\t\t\t\t\t...this.parseText(content),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcurrent = new ElementNode({\n\t\t\t\t\t\tname: lowerCaseTagName,\n\t\t\t\t\t\tvalue: attributes.value,\n\t\t\t\t\t\tattributes: Object.fromEntries(attributes.attributes),\n\t\t\t\t\t\tvoid: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (level === 0)\n\t\t\t\t{\n\t\t\t\t\tresult.appendChild(current);\n\t\t\t\t}\n\n\t\t\t\tparent = stack[level - 1];\n\n\t\t\t\tif (LIST_ELEMENTS.has(current.getName()))\n\t\t\t\t{\n\t\t\t\t\tif (parent && LIST_ELEMENTS.has(parent.getName()))\n\t\t\t\t\t{\n\t\t\t\t\t\tstack[level].appendChild(current);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tparent\n\t\t\t\t\t&& LIST_ELEMENTS.has(parent.getName())\n\t\t\t\t\t&& !LIST_ITEM_ELEMENTS.has(current.getName())\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tconst lastItem: ?ContentNode = parent.getChildren().at(-1);\n\t\t\t\t\tif (lastItem)\n\t\t\t\t\t{\n\t\t\t\t\t\tlastItem.appendChild(current);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (parent)\n\t\t\t\t{\n\t\t\t\t\tparent.appendChild(current);\n\t\t\t\t}\n\n\t\t\t\tstack[level] = current;\n\n\t\t\t\tif (LIST_ITEM_ELEMENTS.has(lowerCaseTagName) && level > -1)\n\t\t\t\t{\n\t\t\t\t\tlevel--;\n\t\t\t\t\tcurrent = level === -1 ? result : stack[level];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isOpenTag || current.isVoid())\n\t\t\t{\n\t\t\t\tif (level > -1 && current.getName() === lowerCaseTagName)\n\t\t\t\t{\n\t\t\t\t\tlevel--;\n\t\t\t\t\tcurrent = level === -1 ? result : stack[level];\n\t\t\t\t}\n\n\t\t\t\tconst nextTagIndex: number = Parser.findNextTagIndex(bbcode, startIndex);\n\t\t\t\tif (nextTagIndex !== startIndex)\n\t\t\t\t{\n\t\t\t\t\tparent = level === -1 ? result : stack[level];\n\n\t\t\t\t\tconst content: ?string = bbcode.slice(startIndex, nextTagIndex === -1 ? undefined : nextTagIndex);\n\t\t\t\t\tif (LIST_ELEMENTS.has(parent.getName()))\n\t\t\t\t\t{\n\t\t\t\t\t\tconst lastItem: ?ContentNode = parent.getChildren().at(-1);\n\t\t\t\t\t\tif (lastItem)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlastItem.appendChild(\n\t\t\t\t\t\t\t\t...this.parseText(content),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.appendChild(\n\t\t\t\t\t\t\t...this.parseText(content),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n}\n\nexport {\n\tParser,\n\tRootNode,\n\tNode,\n\tElementNode,\n\tTextNode,\n\tNewLineNode,\n\tFragmentNode,\n\tTabNode,\n};\n"],"names":["privateMap","WeakMap","nameSymbol","Symbol","Node","constructor","options","children","set","setParent","parent","setName","name","setChildren","ELEMENT_NODE","TEXT_NODE","ROOT_NODE","FRAGMENT_NODE","freezeProperty","node","property","value","enumerable","Object","defineProperty","writable","configurable","makeNonEnumerableProperty","flattenChildren","Type","isArrayFilled","flatMap","getType","getChildren","isString","getName","get","getParent","type","hasParent","Boolean","remove","removeChild","isArray","appendChild","getLastChild","at","getLastChildOfType","reverse","find","getLastChildOfName","getFirstChild","getFirstChildOfType","getFirstChildOfName","getPreviewsSibling","parentChildren","currentIndex","indexOf","getNextSibling","length","getChildrenCount","hasChildren","flattenedChildren","forEach","push","prependChild","unshift","propagateChild","filter","reduce","acc","includes","replaceChild","targetNode","map","child","toJSON","contentSymbol","TextNode","nodeOptions","content","setContent","isTextNodeContent","isNumber","decodeSpecialChars","replaceAll","getContent","toString","TAB","NEW_LINE","SPECIAL_CHARS","Set","BOLD","ITALIC","STRIKE","UNDERLINE","SIZE","COLOR","CENTER","LEFT","RIGHT","URL","IMG","LIST","LIST_UL","LIST_OL","LIST_ITEM","LIST_ITEM_LI","TABLE","TABLE_ROW","TABLE_CELL","TABLE_HEAD_CELL","CODE","INLINE_ELEMENTS","LIST_ELEMENTS","LIST_ITEM_ELEMENTS","NodeType","isAnyText","isText","has","isNewLine","isTab","isElement","isList","isListItem","isInline","isTableCell","isTable","isTableRow","listChildFilter","ulOlListChildFilter","listItemChildFilter","tableChildFilter","tableRowChildFilter","tableCellChildFilter","inlineChildFilter","childFiltersMap","Map","childConvertersMap","ElementNode","attributes","void","inline","preparedOptions","setInline","setValue","setVoid","setAttributes","filterChildren","filteredChildren","resolved","unresolved","byTagFilter","isAllowed","convertChildren","childConverter","isBoolean","getValue","isVoid","isPlainObject","setAttribute","isStringFilled","isNil","getAttribute","getAttributes","convertedChildren","toStringValue","toStringAttributes","entries","key","attrValue","join","getNewLineBeforeContent","firstChild","getNewLineAfterContent","lastChild","getNewLineBeforeOpeningTag","previewsSibling","getNewLineAfterClosingTag","nextSibling","reduceRight","getOpeningTag","tagName","tagValue","formattedAttributes","getClosingTag","openingTag","RootNode","NewLineNode","FragmentNode","TabNode","TAG_REGEX","Parser","toLowerCase","parseText","text","symbol","lastItem","fragment","findNextTagIndex","bbcode","startIndex","nextContent","slice","nextTag","match","RegExp","parseAttributes","sourceAttributes","result","trim","split","item","startsWith","parse","stack","current","level","firstTagIndex","textBeforeFirstTag","replace","fullTag","slash","attrs","index","isOpenTag","lowerCaseTagName","fromEntries","nextTagIndex","undefined"],"mappings":"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"}