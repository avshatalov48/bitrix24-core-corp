{"version":3,"file":"ast-processor.bundle.js","sources":["../src/ast-processor.js"],"sourcesContent":["import { Type } from 'main.core';\n\ntype ParsedSelector = {\n\tnodeName: string,\n\tprops: Array<{key: string, value: any}>,\n};\n\nexport class AstProcessor\n{\n\t/**\n\t * Makes flat list from AST\n\t */\n\tstatic flattenAst(ast): Array<any>\n\t{\n\t\tif (ast && ast.getChildren)\n\t\t{\n\t\t\tconst children = ast.getChildren();\n\n\t\t\treturn [\n\t\t\t\t...children,\n\t\t\t\t...children.flatMap((node) => {\n\t\t\t\t\treturn AstProcessor.flattenAst(node);\n\t\t\t\t}),\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Parses selector\n\t */\n\tstatic parseSelector(selector: string): Array<ParsedSelector | '>'>\n\t{\n\t\tconst regex = /(\\w+)\\[(.*?)]|\\s*(>)\\s*|\\w+/g;\n\t\tconst matches = [...selector.matchAll(regex)];\n\n\t\treturn matches.map(([fullMatch: string, nodeName: ?string, rawProps: ?string, arrow: ?string]) => {\n\t\t\tif (arrow)\n\t\t\t{\n\t\t\t\treturn '>';\n\t\t\t}\n\n\t\t\tif (rawProps)\n\t\t\t{\n\t\t\t\tconst propsRegexp = /(\\w+)=[\"'](.*?)[\"']/g;\n\t\t\t\tconst propsMatches = [...rawProps.matchAll(propsRegexp)];\n\t\t\t\tconst props = propsMatches.map(([, key: string, value: string]) => {\n\t\t\t\t\treturn [key, value];\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tnodeName,\n\t\t\t\t\tprops,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tnodeName: fullMatch,\n\t\t\t\tprops: [],\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic matchesNodeWithSelector(node, selector: ParsedSelector): boolean\n\t{\n\t\tif (node && node.constructor.name === selector.nodeName)\n\t\t{\n\t\t\tif (selector.props.length > 0)\n\t\t\t{\n\t\t\t\treturn selector.props.every(([key, value]) => {\n\t\t\t\t\treturn node[key] === value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Finds parent node by parsed selector\n\t */\n\tstatic findParentNode(node, selector: ParsedSelector): ?any\n\t{\n\t\tif (node)\n\t\t{\n\t\t\tconst parent = node.getParent();\n\n\t\t\tif (AstProcessor.matchesNodeWithSelector(parent, selector))\n\t\t\t{\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\treturn AstProcessor.findParentNode(parent, selector);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Find elements by selector\n\t */\n\tstatic findElements(ast, selector: string): Array<any>\n\t{\n\t\tconst flattenedAst = AstProcessor.flattenAst(ast);\n\t\tconst parsedSelector = AstProcessor.parseSelector(selector);\n\t\tconst lastSelector = parsedSelector.at(-1);\n\n\t\tlet checkClosestParent = false;\n\n\t\treturn parsedSelector.reduceRight((acc: Array<any>, currentSelector: ParsedSelector) => {\n\t\t\tif (Type.isPlainObject(currentSelector))\n\t\t\t{\n\t\t\t\tif (currentSelector === lastSelector)\n\t\t\t\t{\n\t\t\t\t\treturn acc.filter((node) => {\n\t\t\t\t\t\treturn AstProcessor.matchesNodeWithSelector(node, currentSelector);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (checkClosestParent)\n\t\t\t\t{\n\t\t\t\t\tcheckClosestParent = false;\n\n\t\t\t\t\treturn acc.filter((node) => {\n\t\t\t\t\t\treturn AstProcessor.matchesNodeWithSelector(node.getParent(), currentSelector);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn acc.filter((node) => {\n\t\t\t\t\treturn AstProcessor.findParentNode(node, currentSelector) !== null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (currentSelector === '>')\n\t\t\t{\n\t\t\t\tcheckClosestParent = true;\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, flattenedAst);\n\t}\n\n\t/**\n\t * Reduces AST\n\t */\n\tstatic reduceAst(ast, reducer: (node: any, children?: Array<any>) => any | null): any\n\t{\n\t\tconst children = ast.getChildren?.().reduce((acc, child) => {\n\t\t\tconst preparedChild = [AstProcessor.reduceAst(child, reducer)].flat();\n\t\t\tif (!Type.isNil(preparedChild))\n\t\t\t{\n\t\t\t\tacc.replaceChild(child, ...preparedChild);\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, ast);\n\n\t\treturn reducer(ast, children);\n\t}\n}\n"],"names":["AstProcessor","flattenAst","ast","getChildren","children","flatMap","node","parseSelector","selector","regex","matches","matchAll","map","fullMatch","nodeName","rawProps","arrow","propsRegexp","propsMatches","props","key","value","matchesNodeWithSelector","constructor","name","length","every","findParentNode","parent","getParent","findElements","flattenedAst","parsedSelector","lastSelector","at","checkClosestParent","reduceRight","acc","currentSelector","Type","isPlainObject","filter","reduceAst","reducer","reduce","child","preparedChild","flat","isNil","replaceChild"],"mappings":"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"}