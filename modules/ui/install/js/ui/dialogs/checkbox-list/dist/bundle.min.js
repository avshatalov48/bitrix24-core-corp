this.BX=this.BX||{};(function(t,e,i,n,s,c,o,l){"use strict";const a={props:["sections"],methods:{handleClick(t){this.$emit("sectionToggled",t)},getSectionsItemClassName(t){return["ui-checkbox-list__sections-item",{"--checked":t}]}},template:`\n\t\t<div class="ui-checkbox-list__sections">\n\t\t\t<div \n\t\t\t\tv-for="section in sections"\n\t\t\t\t:key="section.key"\n\t\t\t\t:title="section.title"\n\t\t\t\t:class="getSectionsItemClassName(section.value)"\n\t\t\t\t@click="handleClick(section.key)"\n\t\t\t>\n\t\t\t\t<div class="ui-checkbox-list__check-box"></div>\n\t\t\t\t{{ section.title }}\n\t\t\t</div>\n\t\t</div>\n\t`};const r={props:["columnCount","category","options"],methods:{handleCheckBox(t){this.$emit("changeOption",t)},getOptionClassName(t){return["ui-ctl","ui-ctl-checkbox","ui-checkbox-list__field-item_label",{"--checked":t}]}},template:`\n\t\t<div class="ui-checkbox-list__category">\n\t\t\t<div class="ui-checkbox-list__categories-title">\n\t\t\t\t{{ category.title }}\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclass="ui-checkbox-list__options"\n\t\t\t\t:style="{'-webkit-column-count': columnCount, \n\t\t\t\t\t\t '-moz-column-count': columnCount, \n\t\t\t\t\t\t 'column-count': columnCount,\n\t\t\t\t\t\t }"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tv-for="option in options"\n\t\t\t\t\t:key="option.id"\n\t\t\t\t>\n\t\t\t\t\t<label\n\t\t\t\t\t\t:title="option.title"\n\t\t\t\t\t\t:class="getOptionClassName(option.value)"\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype="checkbox"\n\t\t\t\t\t\t\tclass="ui-ctl-element ui-checkbox-list__field-item_input"\n\t\t\t\t\t\t\t:checked="option.value"\n\t\t\t\t\t\t\t@click="handleCheckBox(option.id)"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div class="ui-ctl-label-text ui-checkbox-list__field-item_text">{{ option.title }}</div>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const h={components:{CheckboxListSections:a,CheckboxListCategory:r},props:["dialog","popup","columnCount","compactField","lang","sections","categories","options"],data(){return{dataSections:this.sections,dataCategories:this.categories,dataOptions:this.options,dataCompactField:this.compactField,search:"",longContent:false,scrollIsBottom:true,scrollIsTop:false}},methods:{renderSwitcher(){if(this.dataCompactField){const t=new BX.UI.Switcher({node:this.$refs.switcher,checked:this.dataCompactField.value,size:"small",handlers:{toggled:()=>this.handleSwitcherToggled()}})}},handleSwitcherToggled(){this.dataCompactField.value=!this.dataCompactField.value},handleCheckBoxToggled(t){const e=this.dataOptions.find((e=>e.id===t));if(e){e.value=!e.value}},clearSearch(){this.search=""},handleClearSearchButtonClick(){this.$refs.searchInput.focus();this.clearSearch()},handleSectionsToggled(t){const e=this.dataSections.find((e=>e.key===t));if(e){e.value=!e.value}},getOptionsByCategory(t){return this.optionsByTitle.filter((e=>e.categoryKey===t))},getCheckedOptionsId(){return this.dataOptions.filter((t=>t.value===true)).map((t=>t.id))},checkLongContent(){if(this.$refs.container){this.longContent=this.$refs.container.clientHeight<this.$refs.container.scrollHeight}else{this.longContent=false}},getBottomIndent(){this.scrollIsBottom=!(this.$refs.container.scrollTop+this.$refs.container.clientHeight>=this.$refs.container.scrollHeight-10)},getTopIndent(){this.scrollIsTop=this.$refs.container.scrollTop},handleScroll(){this.getBottomIndent();this.getTopIndent()},handleSearchEscKeyUp(){this.$refs.container.focus();this.clearSearch()},defaultSettings(){this.clearSearch();if(this.dataCompactField&&this.dataCompactField.value!==this.dataCompactField.defaultValue){this.$refs.switcher.click()}this.dataOptions.forEach((t=>t.value=t.defaultValue));if(Array.isArray(this.dataSections)){this.dataSections.forEach((t=>t.value=true))}},selectAll(){this.categoryBySection.forEach((t=>{this.getOptionsByCategory(t.key).forEach((t=>t.value=true))}))},deselectAll(){this.categoryBySection.forEach((t=>{this.getOptionsByCategory(t.key).forEach((t=>t.value=false))}))},cancel(){this.popup.destroy()},apply(){o.EventEmitter.emit(this.dialog,"onApply",{switcher:this.dataCompactField,fields:this.getCheckedOptionsId()});this.popup.destroy()}},watch:{search(){this.$nextTick((()=>{this.checkLongContent()}))},categoryBySection(){this.$nextTick((()=>{this.checkLongContent()}))}},computed:{visibleOptions(){if(!Array.isArray(this.dataSections)||!this.dataSections.length){return this.optionsByTitle}return this.optionsByTitle.filter((t=>{const e=this.dataCategories.find((e=>e.key===t.categoryKey));const i=this.dataSections.find((t=>t.key===e.sectionKey));return i==null?void 0:i.value}))},isEmptyContent(){return this.visibleOptions.length>0},isSearchDisabled(){if(this.dataSections&&this.dataSections.length){return!this.dataSections.some((t=>t.value))}return false},isCheckedCheckboxes(){return!this.dataOptions.filter((t=>t.value===true)).length},optionsByTitle(){return this.dataOptions.filter((t=>t.title.toLowerCase().indexOf(this.search.toLowerCase())!==-1))},categoryBySection(){if(!Array.isArray(this.dataSections)||!l.Type.isArrayFilled(this.dataSections)){return this.dataCategories}return this.dataCategories.filter((t=>{const e=this.dataSections.find((e=>t.sectionKey===e.key));return e==null?void 0:e.value}))},wrapperClassName(){return["ui-checkbox-list__wrapper",{"--long":this.longContent},{"--bottom":this.scrollIsBottom},{"--top":this.scrollIsTop}]},searchClassName(){return["ui-checkbox-list__search",{"--disabled":this.isSearchDisabled}]},applyClassName(){return["ui-btn ui-btn-success",{"ui-btn-disabled":this.isCheckedCheckboxes}]},SwitcherText(){return l.Type.isStringFilled(this.lang.switcher)?this.lang.switcher:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_SWITCHER")},placeholderText(){return l.Type.isStringFilled(this.lang.placeholder)?this.lang.placeholder:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_PLACEHOLDER")},defaultSettingsBtnText(){return l.Type.isStringFilled(this.lang.defaultBtn)?this.lang.defaultBtn:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS")},applyBtnText(){return l.Type.isStringFilled(this.lang.acceptBtn)?this.lang.acceptBtn:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_ACCEPT_BUTTON")},cancelBtnText(){return l.Type.isStringFilled(this.lang.cancelBtn)?this.lang.cancelBtn:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_CANCEL_BUTTON")},selectAllBtnText(){return l.Type.isStringFilled(this.lang.selectAllBtn)?this.lang.selectAllBtn:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SELECT_ALL")},deselectAllBtnText(){return l.Type.isStringFilled(this.lang.deselectAllBtn)?this.lang.deselectAllBtn:l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_DESELECT_ALL")},emptyStateTitleText(){return l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_EMPTY_STATE_TITLE")},emptyStateDescriptionText(){return l.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_EMPTY_STATE_DESCRIPTION")}},mounted(){this.renderSwitcher();this.$nextTick((()=>{this.checkLongContent()}))},template:`\n\t\t<div class="ui-checkbox-list">\n\t\t<div class="ui-checkbox-list__header">\n\n\t\t\t<checkbox-list-sections\n\t\t\t\tv-if="sections"\n\t\t\t\t:sections="dataSections"\n\t\t\t\t@sectionToggled="handleSectionsToggled"\n\t\t\t/>\n\n\t\t\t<div class="ui-checkbox-list__header_options">\n\t\t\t\t<div\n\t\t\t\t\tv-if="compactField"\n\t\t\t\t\tclass="ui-checkbox-list__switcher"\n\t\t\t\t>\n\t\t\t\t\t<div class="ui-checkbox-list__switcher-text">\n\t\t\t\t\t\t{{ SwitcherText }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="switcher" ref="switcher"></div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\t:class="searchClassName"\n\t\t\t\t>\n\t\t\t\t\t<div class="ui-checkbox-list__search-wrapper">\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-textbox ui-ctl-before-icon ui-ctl-after-icon ui-ctl-w100">\n\n\t\t\t\t\t\t\t<div class="ui-ctl-before ui-ctl-icon-search"></div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t@click="handleClearSearchButtonClick"\n\t\t\t\t\t\t\t\tclass="ui-ctl-after ui-ctl-icon-clear ui-checkbox-list__search-clear"\n\t\t\t\t\t\t\t></button>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t:placeholder="placeholderText"\n\t\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\tv-model="search"\n\t\t\t\t\t\t\t\t@keyup.esc.stop="handleSearchEscKeyUp"\n\t\t\t\t\t\t\t\tref="searchInput"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div\n\t\t\tref="wrapper"\n\t\t\t:class="wrapperClassName"\n\t\t>\n\t\t\t<div\n\t\t\t\tref="container"\n\t\t\t\tclass="ui-checkbox-list__container"\n\t\t\t\t@scroll="handleScroll"\n\t\t\t\ttabindex="0"\n\t\t\t\tv-if="isEmptyContent"\n\t\t\t>\n\t\t\t\t<checkbox-list-category\n\t\t\t\t\tv-for="category in categoryBySection"\n\t\t\t\t\t:key="category.key"\n\t\t\t\t\t:category="category"\n\t\t\t\t\t:columnCount="columnCount"\n\t\t\t\t\t:options="getOptionsByCategory(category.key)"\n\t\t\t\t\t@changeOption="handleCheckBoxToggled"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-else\n\t\t\t\tclass="ui-checkbox-list__empty"\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc="/bitrix/js/ui/dialogs/checkbox-list/images/ui-checkbox-list-empty.svg"\n\t\t\t\t\t:alt="emptyStateTitleText">\n\t\t\t\t<div class="ui-checkbox-list__empty-title">\n\t\t\t\t\t{{ emptyStateTitleText }}\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-checkbox-list__empty-description">\n\t\t\t\t\t{{ emptyStateDescriptionText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class="ui-checkbox-list__footer">\n\t\t\t<div class="ui-checkbox-list__footer-block">\n\t\t\t\t<div\n\t\t\t\t\tclass="ui-checkbox-list__footer-link --default"\n\t\t\t\t\t@click="defaultSettings()"\n\t\t\t\t>\n\t\t\t\t\t{{ defaultSettingsBtnText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="ui-checkbox-list__footer-block">\n\t\t\t\t<button\n\t\t\t\t\t@click="apply()"\n\t\t\t\t\t:class="applyClassName"\n\t\t\t\t>\n\t\t\t\t\t{{ applyBtnText }}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\t@click="cancel()"\n\t\t\t\t\tclass="ui-btn ui-btn-link"\n\t\t\t\t>\n\t\t\t\t\t{{ cancelBtnText }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class="ui-checkbox-list__footer-block --right">\n\t\t\t\t<div\n\t\t\t\t\t@click="selectAll()"\n\t\t\t\t\tclass="ui-checkbox-list__footer-link"\n\t\t\t\t>\n\t\t\t\t\t{{ selectAllBtnText }}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\t@click="deselectAll()"\n\t\t\t\t\tclass="ui-checkbox-list__footer-link"\n\t\t\t\t>\n\t\t\t\t\t{{ deselectAllBtnText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t`};class d extends o.EventEmitter{constructor(t){super();this.setEventNamespace("BX.UI.Dialogs.CheckboxList");this.subscribeFromOptions(t.events);if(!l.Type.isArrayFilled(t.categories)){throw new Error('CheckboxList: "categories" parameter is required.')}this.categories=t.categories;if(!l.Type.isArrayFilled(t.options)){throw new Error('CheckboxList: "options" parameter is required.')}this.options=t.options;this.compactField=l.Type.isPlainObject(t.compactField)?t.compactField:null;this.sections=l.Type.isArray(t.sections)?t.sections:null;this.lang=l.Type.isPlainObject(t.lang)?t.lang:{};this.popup=null;this.columnCount=l.Type.isNumber(t.columnCount)?t.columnCount:4;this.popupOptions=l.Type.isPlainObject(t.popupOptions)?t.popupOptions:{}}getPopup(){const t=l.Dom.create("div");l.Dom.addClass(t,"ui-checkbox-list__app-container");if(!this.popup){this.popup=new i.Popup({className:"ui-checkbox-list-popup",width:997,overlay:true,autoHide:true,minHeight:422,borderRadius:20,contentPadding:0,contentBackground:"transparent",animation:"fading-slide",titleBar:this.lang.title,content:t,closeIcon:true,closeByEsc:true,...this.popupOptions});n.BitrixVue.createApp(h,{compactField:this.compactField,lang:this.lang,sections:this.sections,categories:this.categories,options:this.options,popup:this.popup,columnCount:this.columnCount,dialog:this}).mount(t)}return this.popup}show(){this.getPopup().show()}hide(){this.getPopup().hide()}}t.CheckboxList=d})(this.BX.UI=this.BX.UI||{},BX,BX.Main,BX.Vue3,BX.UI,BX,BX.Event,BX);
//# sourceMappingURL=bundle.map.js