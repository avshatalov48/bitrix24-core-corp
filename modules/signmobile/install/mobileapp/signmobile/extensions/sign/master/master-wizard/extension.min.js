jn.define("sign/master/master-wizard",((t,e,o)=>{const{MasterStepLayout:s}=t("sign/master/master-step-layout");const{Wizard:i}=t("layout/ui/wizard");const{Color:n}=t("tokens");class a extends i{openStepWidget(t){const e=this.steps.get(t);this.parentManager.openWidget("layout",{titleParams:{text:e.isNeedToSkip()?null:e.getTitle(),detailText:e.isNeedToSkip()?null:e.getSubTitle()},resizableByKeyboard:true,animate:!e.isNeedToSkip(),backgroundColor:n.bgContentPrimary.toHex()}).then((o=>{this.onLayoutViewShown(o,t);o.enableNavigationBarBorder(e.isNavigationBarBorderEnabled()===null?this.isNavigationBarBorderEnabled():e.isNavigationBarBorderEnabled());o.showComponent(new s({layoutWidget:o,step:e,wizard:this,showNextStepButtonAtBottom:this.showNextStepButtonAtBottom,ref:t=>{if(t){this.stepLayoutRef=t}}}))})).catch(console.error)}toggleChangeStepButtons(t=true){const e=this.getCurrentStep();const o=e.isNeedToSkip();const s=e.isNeedToShowNextStep();if(o||!s){return}const i=e.isNextStepEnabled()&&t&&!this.isLoading;if(this.showNextStepButtonAtBottom&&this.stepLayoutRef){this.stepLayoutRef.toggleChangeStepButton(i)}const n=e.getLeftButtons();const a=e.getRightButtons();if(n){this.currentLayout.setLeftButtons(n)}this.currentLayout.setRightButtons(a)}render(){return new s({step:this.getCurrentStep(),wizard:this,showNextStepButtonAtBottom:this.showNextStepButtonAtBottom,resizableByKeyboard:true,ref:t=>{this.stepLayoutRef=t}})}}o.exports={MasterWizard:a}}));
//# sourceMappingURL=extension.map.js