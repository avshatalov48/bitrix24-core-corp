(()=>{const e=e=>jn.require(e);const{SignOpener:n}=e("sign/opener");const{Push:s}=e("native/app");const t="SIGN_MOBILE_FOUND_DOCUMENT_FOR_SIGNING";const r="SIGN_MOBILE_REQUEST_FOR_SIGN_CONFIRMATION";class a{constructor(){n.clearCacheSomeBannerIsAlreadyOpen();this.bindEvents()}unpackJsonEventParams(e){let n=null;const s=JSON.parse(e);if(s.message){const e=JSON.parse(s.message);n=this.unpackEventParams(e)}return n}unpackEventParams(e){let n=null;const s=e.payload;if(s){const{role:t,memberId:r=0,forcedBannerOpening:a=false,isGoskey:i=false,isExternal:o=false}=s;n={type:e.type,role:t,memberId:Number(r),forcedBannerOpening:a,title:"",url:"",isGoskey:i,isExternal:o};const c=s.document;if(c){const{title:e="",url:s=""}=c;n.title=e;n.url=s}}return n}processEvent(e){if(e!==null){const{url:s,title:a,memberId:i,role:o,forcedBannerOpening:c,isGoskey:l,isExternal:u}=e;switch(e.type){case t:n.openSigning({url:s,title:a,memberId:i,role:o,goWithoutConfirmation:false,isGoskey:l,isExternal:u});break;case r:n.openConfirmation({role:o,memberId:i,title:a,forcedBannerOpening:c});break;default:break}}}bindEvents(){s.on("receivedPush",(({params:e})=>{this.processEvent(this.unpackJsonEventParams(e))}));PushListener.subscribe(t,(e=>{this.processEvent(this.unpackEventParams(e))}));PushListener.subscribe(r,(e=>{this.processEvent(this.unpackEventParams(e))}));BX.addCustomEvent("signbackground::router",(e=>{n.openSigning({memberId:e})}))}}this.SignBackground=new a})();
//# sourceMappingURL=extension.map.js