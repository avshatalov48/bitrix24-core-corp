(()=>{const e=e=>jn.require(e);const{SignDocument:t}=e("sign/document");const{SignDialog:o}=e("sign/dialog");const{getSigningLinkPromise:i}=e("sign/connector");const{MemberRole:s}=e("sign/type/member-role");const n="reviewer";const a="signer";const l=BX.componentParameters.get("memberId",false);const r=BX.componentParameters.get("url",false);const y=BX.componentParameters.get("role",a);const c=BX.componentParameters.get("title","");const m=BX.componentParameters.get("isGoskey",false);const g=BX.componentParameters.get("isExternal",false);const u=BX.componentParameters.get("initiatedByType");function E(e=y){d(e);layout.setRightButtons([{type:"cross",callback:()=>layout.close()}])}function d(e=y){if(s.isReviewerRole(e)){layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE_REVIEWER"),useLargeTitleMode:true})}else{layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE"),useLargeTitleMode:true})}}if(r!==false){layout.showComponent(new t({url:r,widget:layout,memberId:l,title:c,isGoskey:m,isExternal:g,initiatedByType:u,role:y}));E()}else if(l!==false){i(l).then((({data:e})=>{const{url:i,isReadyForSigning:s,isGoskey:n,isExternal:a,state:r,role:y,documentTitle:c="",initiatedByType:m}=e;if(s){layout.showComponent(new t({role:y,url:i,widget:layout,memberId:l,title:c,isGoskey:n,isExternal:a,initiatedByType:m}));E(y)}else{o.show({type:r,memberId:l,layoutWidget:layout,fileDownloadUrl:i,documentTitle:c,initiatedByType:m})}})).catch((({errors:e})=>{let t=false;if(Array.isArray(e)){e.forEach((e=>{if(e.code==="ACCESS_DENIED"){o.show({type:o.ERROR_ACCESS_DENIED_BANNER_TYPE,layoutWidget:layout,initiatedByType:u});t=true}}))}if(!t){o.show({type:o.ERROR_BANNER_TYPE,layoutWidget:layout,initiatedByType:u})}}))}})();
//# sourceMappingURL=component.map.js