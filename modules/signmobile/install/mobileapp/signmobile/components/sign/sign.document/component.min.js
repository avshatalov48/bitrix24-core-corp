(()=>{const e=e=>jn.require(e);const{SignDocument:t}=e("sign/document");const{SignDialog:o}=e("sign/dialog");const{getSigningLinkPromise:s}=e("sign/connector");const n="reviewer";const a="signer";const i=BX.componentParameters.get("memberId",false);const l=BX.componentParameters.get("url",false);const r=BX.componentParameters.get("role",a);const c=BX.componentParameters.get("title","");const u=BX.componentParameters.get("isGoskey",false);const g=BX.componentParameters.get("isExternal",false);function m(e=r){E(e);layout.setRightButtons([{type:"cross",callback:()=>layout.close()}])}function E(e=r){if(e===n){layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE_REVIEWER"),useLargeTitleMode:true})}else{layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE"),useLargeTitleMode:true})}}if(l!==false){layout.showComponent(new t({hideButtons:r===n,url:l,widget:layout,memberId:i,title:c,isGoskey:u,isExternal:g}));m()}else if(i!==false){s(i).then((({data:e})=>{const{url:s,isReadyForSigning:a,isGoskey:l,isExternal:r,state:c,role:u,documentTitle:g=""}=e;if(a){layout.showComponent(new t({hideButtons:u===n,role:u,url:s,widget:layout,memberId:i,title:g,isGoskey:l,isExternal:r}));m(u)}else{o.show({type:c,memberId:i,layoutWidget:layout,fileDownloadUrl:s,documentTitle:g})}})).catch((({errors:e})=>{let t=false;if(Array.isArray(e)){e.forEach((e=>{if(e.code==="ACCESS_DENIED"){o.show({type:o.ERROR_ACCESS_DENIED_BANNER_TYPE,layoutWidget:layout});t=true}}))}if(!t){o.show({type:o.ERROR_BANNER_TYPE,layoutWidget:layout})}}))}})();
//# sourceMappingURL=component.map.js