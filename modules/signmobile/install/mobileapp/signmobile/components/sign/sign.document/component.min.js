(()=>{const e=e=>jn.require(e);const{SignDocument:t}=e("sign/document");const{SignDialog:o}=e("sign/dialog");const{getSigningLinkPromise:i}=e("sign/connector");const n="reviewer";const s="signer";const a=BX.componentParameters.get("memberId",false);const l=BX.componentParameters.get("url",false);const r=BX.componentParameters.get("role",s);const y=BX.componentParameters.get("title","");const c=BX.componentParameters.get("isGoskey",false);const u=BX.componentParameters.get("isExternal",false);const m=BX.componentParameters.get("initiatedByType");function g(e=r){d(e);layout.setRightButtons([{type:"cross",callback:()=>layout.close()}])}function d(e=r){if(e===n){layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE_REVIEWER"),useLargeTitleMode:true})}else{layout.setTitle({text:BX.message("SIGN_MOBILE_SIGN_DOCUMENT_UNAVAILABLE_DIALOG_SUBTITLE"),useLargeTitleMode:true})}}if(l!==false){layout.showComponent(new t({hideButtons:r===n,url:l,widget:layout,memberId:a,title:y,isGoskey:c,isExternal:u,initiatedByType:m}));g()}else if(a!==false){i(a).then((({data:e})=>{const{url:i,isReadyForSigning:s,isGoskey:l,isExternal:r,state:y,role:c,documentTitle:u="",initiatedByType:m}=e;if(s){layout.showComponent(new t({hideButtons:c===n,role:c,url:i,widget:layout,memberId:a,title:u,isGoskey:l,isExternal:r,initiatedByType:m}));g(c)}else{o.show({type:y,memberId:a,layoutWidget:layout,fileDownloadUrl:i,documentTitle:u,initiatedByType:m})}})).catch((({errors:e})=>{let t=false;if(Array.isArray(e)){e.forEach((e=>{if(e.code==="ACCESS_DENIED"){o.show({type:o.ERROR_ACCESS_DENIED_BANNER_TYPE,layoutWidget:layout,initiatedByType:m});t=true}}))}if(!t){o.show({type:o.ERROR_BANNER_TYPE,layoutWidget:layout,initiatedByType:m})}}))}})();
//# sourceMappingURL=component.map.js