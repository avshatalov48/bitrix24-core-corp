{"version":3,"file":"core.bundle.js","sources":["../src/entity/generic/field.js","../src/entity/generic/fieldcollection.js","../src/entity/address/addressfield.js","../src/entity/address/addressfieldcollection.js","../src/entity/address/addresslink.js","../src/entity/address/addresslinkcollection.js","../src/entity/format/formatfield.js","../src/entity/format/formatfieldcollection.js","../src/entity/location/locationtype.js","../src/entity/address/addresstype.js","../src/entity/format/formattemplate.js","../src/entity/format/formattemplatecollection.js","../src/entity/format/formattemplatetype.js","../src/entity/format.js","../src/entity/address/converter/stringtemplateconverter.js","../src/entity/address/converter/stringconverter.js","../src/entity/address/converter/jsonconverter.js","../src/entity/address.js","../src/entity/location/locationfield.js","../src/entity/location/locationfieldcollection.js","../src/entity/location/locationobjectconverter.js","../src/entity/location/locationjsonconverter.js","../src/entity/location.js","../src/repository/actionrunner.js","../src/repository/baserepository.js","../src/repository/locationrepository.js","../src/repository/addressrepository.js","../src/repository/formatrepository.js","../src/repository/sourcerepository.js","../src/base/autocompleteservicebase.js","../src/common/autocomplete-cache.js","../src/base/photoservicebase.js","../src/base/mapbase.js","../src/base/sourcebase.js","../src/base/geocodingservicebase.js","../src/common/controlmode.js","../src/entity/location/locationfieldtype.js","../src/common/error.js","../src/common/errorpublisher.js","../src/common/storage.js","../src/common/point.js","../src/common/distancecalculator.js"],"sourcesContent":["export default class Field\n{\n\t#type;\n\n\tconstructor(props)\n\t{\n\t\tif(typeof props.type === 'undefined')\n\t\t{\n\t\t\tthrow new Error('Field type must be defined');\n\t\t}\n\n\t\tthis.#type = parseInt(props.type);\n\t}\n\n\tget type()\n\t{\n\t\treturn this.#type;\n\t}\n}","import Field from './field';\n\nexport default class FieldCollection\n{\n\t#fields = {};\n\n\tconstructor(props = {})\n\t{\n\t\tthis.fields = props.fields ? props.fields : [];\n\t}\n\n\tset fields(fields)\n\t{\n\t\tif(!Array.isArray(fields))\n\t\t{\n\t\t\tthrow new Error('Items must be array!');\n\t\t}\n\n\t\tfor(const field of fields)\n\t\t{\n\t\t\tthis.setField(field);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tget fields()\n\t{\n\t\treturn this.#fields;\n\t}\n\n\t/**\n\t * Checks if field already exist in collection\n\t * @param {int} type\n\t * @returns {boolean}\n\t */\n\tisFieldExists(type)\n\t{\n\t\treturn typeof this.#fields[type] !== 'undefined';\n\t}\n\n\tgetField(type)\n\t{\n\t\treturn this.isFieldExists(type) ? this.#fields[type] : null;\n\t}\n\n\tsetField(field)\n\t{\n\t\tif(!(field instanceof Field))\n\t\t{\n\t\t\tthrow new Error('Argument field must be instance of Field!');\n\t\t}\n\n\t\tthis.#fields[field.type] = field;\n\t\treturn this;\n\t}\n\n\tdeleteField(type)\n\t{\n\t\tif(this.isFieldExists(type))\n\t\t{\n\t\t\tdelete this.#fields[type];\n\t\t}\n\t}\n\n\tgetMaxFieldType()\n\t{\n\t\tconst types = Object.keys(this.#fields).sort((a, b) => {\n\t\t\treturn parseInt(a) - parseInt(b);\n\t\t});\n\n\t\tlet result = 0;\n\n\t\tif(types.length > 0)\n\t\t{\n\t\t\tresult = types[types.length - 1];\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tisEqual(addressFieldCollection: FieldCollection, upTo: Number)\n\t{\n\t\treturn (\n\t\t\tFieldCollection.areEqual(this, addressFieldCollection, upTo)\n\t\t\t&& FieldCollection.areEqual(addressFieldCollection, this, upTo)\n\t\t);\n\t}\n\n\tstatic areEqual(addressFieldCollection1: FieldCollection, addressFieldCollection2: FieldCollection, upTo: Number)\n\t{\n\t\tfor (let type in addressFieldCollection1.fields)\n\t\t{\n\t\t\tif (type > upTo)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet field = addressFieldCollection2.getField(type);\n\t\t\tif (!field)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (addressFieldCollection1.fields[type].value !== field.value)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","import Field from \"../generic/field\";\n\nexport default class AddressField extends Field\n{\n\t#value;\n\n\t//todo: Fields validation\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.#value = props.value || '';\n\t}\n\n\tget value()\n\t{\n\t\treturn this.#value;\n\t}\n\n\tset value(value)\n\t{\n\t\tthis.#value = value;\n\t\treturn this;\n\t}\n}","import FieldCollection from '../generic/fieldcollection';\nimport AddressField from './addressfield';\n\nexport default class AddressFieldCollection extends FieldCollection\n{\n\tgetFieldValue(type)\n\t{\n\t\tlet result = null;\n\n\t\tif(this.isFieldExists(type))\n\t\t{\n\t\t\tconst field = this.getField(type);\n\n\t\t\tif(field)\n\t\t\t{\n\t\t\t\tresult = field.value;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tsetFieldValue(type, value)\n\t{\n\t\tthis.setField(\n\t\t\tnew AddressField({type, value})\n\t\t);\n\n\t\treturn this;\n\t}\n}","export default class AddressLink\n{\n\t#entityId;\n\t#entityType;\n\n\tconstructor(props)\n\t{\n\t\tthis.#entityId = props.entityId;\n\t\tthis.#entityType = props.entityType;\n\t}\n\n\tget entityId()\n\t{\n\t\treturn this.#entityId;\n\t}\n\n\tget entityType()\n\t{\n\t\treturn this.#entityType\n\t}\n}","import AddressLink from \"./addresslink\";\n\nexport default class AddressLinkCollection\n{\n\t#links = [];\n\n\tconstructor(props = {})\n\t{\n\t\tthis.links = !!props.links ? props.links : [];\n\t}\n\n\tset links(links: Array): void\n\t{\n\t\tif(!Array.isArray(links))\n\t\t{\n\t\t\tthrow new Error('links must be array!');\n\t\t}\n\n\t\tfor(let link of links)\n\t\t{\n\t\t\tthis.addLink(link);\n\t\t}\n\t}\n\n\tget links()\n\t{\n\t\treturn this.#links;\n\t}\n\n\taddLink(link: AddressLink)\n\t{\n\t\tif(!(link instanceof AddressLink))\n\t\t{\n\t\t\tthrow new Error('Argument link must be instance of Field!');\n\t\t}\n\n\t\tthis.#links.push(link);\n\t}\n\n\tclearLinks()\n\t{\n\t\tthis.#links = [];\n\t}\n}","import Field from '../generic/field';\n\nexport default class FormatField extends Field\n{\n\t#sort;\n\t#name;\n\t#description;\n\n\t// todo: Fields validation\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.#sort = parseInt(props.sort);\n\t\tthis.#name = props.name || '';\n\t\tthis.#description = props.description || '';\n\t}\n\n\tget sort()\n\t{\n\t\treturn this.#sort;\n\t}\n\n\tset sort(sort)\n\t{\n\t\tthis.#sort = sort;\n\t}\n\n\tget name()\n\t{\n\t\treturn this.#name;\n\t}\n\n\tset name(name)\n\t{\n\t\tthis.#name = name;\n\t}\n\n\tget description()\n\t{\n\t\treturn this.#description;\n\t}\n\n\tset description(description)\n\t{\n\t\tthis.#description = description;\n\t}\n}","import FieldCollection from '../generic/fieldcollection';\nimport FormatField from './formatfield';\n\nexport default class FormatFieldCollection extends FieldCollection\n{\n\tinitFields(fieldsData)\n\t{\n\t\tif(Array.isArray(fieldsData))\n\t\t{\n\t\t\tfieldsData.forEach((data) => {\n\n\t\t\t\tconst field = new FormatField(data);\n\n\t\t\t\tif(field)\n\t\t\t\t{\n\t\t\t\t\tthis.setField(field);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}","export default class LocationType\n{\n\tstatic UNKNOWN = 0;\n\n\tstatic COUNTRY = 100;\n\n\tstatic ADM_LEVEL_1 = 200;\n\tstatic ADM_LEVEL_2 = 210;\n\tstatic ADM_LEVEL_3 = 220;\n\tstatic ADM_LEVEL_4 = 230;\n\n\tstatic LOCALITY = 300;\n\tstatic SUB_LOCALITY = 310;\n\tstatic SUB_LOCALITY_LEVEL_1 = 320;\n\tstatic SUB_LOCALITY_LEVEL_2 = 330;\n\tstatic STREET = 340;\n\n\tstatic BUILDING = 400;\n\tstatic ADDRESS_LINE_1 = 410;\n\n\tstatic FLOOR = 420;\n\tstatic ROOM = 430;\n\n\tstatic TMP_TYPE_HINT = 5010;\n\tstatic TMP_TYPE_CLARIFICATION = 5020;\n}\n","import LocationType from '../location/locationtype';\n\nexport default class AddressType extends LocationType\n{\n\tstatic POSTAL_CODE = 50;\n\n\tstatic ADDRESS_LINE_2 = 600;\n\tstatic RECIPIENT_COMPANY = 700;\n\tstatic RECIPIENT = 710;\n\tstatic PO_BOX = 800;\n}","export default class FormatTemplate\n{\n\ttype;\n\ttemplate;\n\n\tconstructor(type: string, template: string)\n\t{\n\t\tthis.type = type;\n\t\tthis.template = template;\n\t}\n}","import FormatTemplate from './formattemplate';\n\nexport default class FormatTemplateCollection\n{\n\t#templates = {};\n\n\tconstructor(templateData: {})\n\t{\n\t\tfor (const type in templateData)\n\t\t{\n\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\tif (templateData.hasOwnProperty(type))\n\t\t\t{\n\t\t\t\tthis.setTemplate(\n\t\t\t\t\tnew FormatTemplate(type, templateData[type])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tisTemplateExists(type: string): boolean\n\t{\n\t\treturn typeof this.#templates[type] !== 'undefined';\n\t}\n\n\tgetTemplate(type: string): string\n\t{\n\t\treturn this.isTemplateExists(type) ? this.#templates[type] : null;\n\t}\n\n\tsetTemplate(template: FormatTemplate)\n\t{\n\t\tif (!(template instanceof FormatTemplate))\n\t\t{\n\t\t\tthrow new Error('Argument template must be instance of FormatTemplate!');\n\t\t}\n\n\t\tthis.#templates[template.type] = template;\n\t}\n}","/**\n * Template types\n */\nexport default class FormatTemplateType\n{\n\t// Default template\n\tstatic DEFAULT = 'DEFAULT';\n\n\t// Template for autocomplete\n\tstatic AUTOCOMPLETE = 'AUTOCOMPLETE';\n\n\t// Template for field ADDRESS_LINE_1\n\tstatic ADDRESS_LINE_1 = 'ADDRESS_LINE_1';\n}","import {Type} from 'main.core';\nimport FormatFieldCollection from './format/formatfieldcollection';\nimport AddressType from './address/addresstype';\nimport FormatTemplateCollection from './format/formattemplatecollection';\nimport FormatTemplate from './format/formattemplate';\nimport FormatTemplateType from './format/formattemplatetype';\n\n/**\n * Class defines how the Address will look like\n */\nexport default class Format\n{\n\tcode;\n\tname;\n\tdescription;\n\tlanguageId;\n\ttemplateCollection;\n\tfieldCollection;\n\tdelimiter;\n\tfieldForUnRecognized;\n\n\tconstructor(props)\n\t{\n\t\tif (Type.isUndefined(props.languageId))\n\t\t{\n\t\t\tthrow new TypeError('LanguageId must be defined');\n\t\t}\n\n\t\tthis.languageId = props.languageId;\n\t\tthis.code = props.code || '';\n\t\tthis.name = props.name || '';\n\t\tthis.templateAutocomplete = props.templateAutocomplete || '';\n\t\tthis.templateAddressLine1 = props.templateAddressLine1 || '';\n\t\tthis.description = props.description || '';\n\t\tthis.delimiter = props.delimiter || ', ';\n\t\tthis.fieldForUnRecognized = props.fieldForUnRecognized || AddressType.UNKNOWN;\n\n\t\tthis.fieldCollection = new FormatFieldCollection();\n\n\t\tif (Type.isObject(props.fieldCollection))\n\t\t{\n\t\t\tthis.fieldCollection.initFields(props.fieldCollection);\n\t\t}\n\n\t\tlet collection = {};\n\n\t\tif (Type.isObject(props.templateCollection))\n\t\t{\n\t\t\tcollection = props.templateCollection;\n\t\t}\n\n\t\tthis.templateCollection = new FormatTemplateCollection(collection);\n\n\n\t}\n\n\tgetField(type)\n\t{\n\t\treturn this.fieldCollection.getField(type);\n\t}\n\n\tisFieldExists(type)\n\t{\n\t\treturn this.fieldCollection.isFieldExists(type);\n\t}\n\n\tgetTemplate(type: string = FormatTemplateType.DEFAULT): FormatTemplate\n\t{\n\t\treturn this.templateCollection.getTemplate(type);\n\t}\n\n\tisTemplateExists(type: string): boolean\n\t{\n\t\treturn this.templateCollection.isTemplateExists(type);\n\t}\n\n\tget template(): FormatTemplate\n\t{\n\t\treturn this.templateCollection.getTemplate();\n\t}\n}","import {Type, Text} from \"main.core\";\nimport Address from \"../../address\";\nimport AddressType from '../addresstype';\nimport Format from \"../../format\";\n\nconst STR_DELIMITER_PLACEHOLDER = \"#S#\";\nconst REGEX_COMMA_AMONG_EMPTY_SPACE = \"\\\\s*,\\\\s*\";\nconst REGEX_GROUP_DELIMITER = \"(\\\\\\\"([^\\\"\\\\\\\\]*|\\\\\\\\\\\"|\\\\\\\\\\\\\\\\|\\\\\\\\)*\\\")\";\nconst REGEX_GROUP_FIELD_TEXT = REGEX_GROUP_DELIMITER;\nconst REGEX_GROUP_FIELD_NAME = \"([a-zA-Z][a-zA-Z_0-9]*(:(NU|UN|N|U))?)\";\nconst REGEX_GROUP_FIELD_LIST_END = \"\\\\s*\\\\]\";\nconst REGEX_GROUP_END = REGEX_GROUP_FIELD_LIST_END;\nconst REGEX_PART_FROM_DELIMITER_TO_FIELD_LIST = \"\\\\s*,\\\\s*\\\\[\\\\s*\";\nconst REGEX_GROUP_PART_BEFORE_FIELDS =\n\t\"(([^\\\\[\\\\\\\\]|\\\\\\\\\\\\[|\\\\\\\\\\\\\\\\)*)(\\\\[\\\\s*)(\\\"([^\\\"\\\\\\\\]*|\\\\\\\\\\\"|\\\\\\\\\\\\\\\\|\\\\\\\\)*\\\")\\\\s*,\\\\s*\\\\[\\\\s*\";\n\nconst ERR_PARSE_GROUP_START_POSITION = 1100;\nconst ERR_PARSE_GROUP_START = 1110;\nconst ERR_PARSE_GROUP_DELIMITER = 1120;\nconst ERR_PARSE_PART_FROM_DELIMITER_TO_FIELD_LIST = 1130;\nconst ERR_PARSE_GROUP_FIELD_TEXT = 1140;\nconst ERR_PARSE_GROUP_FIELD_NAME = 1150;\nconst ERR_PARSE_GROUP_FIELD = 1160;\nconst ERR_PARSE_GROUP_FIELD_LIST = 1170;\nconst ERR_PARSE_GROUP_FIELD_LIST_DELIMITER = 1180;\nconst ERR_PARSE_GROUP_FIELD_LIST_END = 1190;\nconst ERR_PARSE_GROUP_END = 1200;\nconst ERR_PARSE_GROUP = 1210;\n\n\nexport default class StringTemplateConverter\n{\n\t#template = \"\";\n\t#delimiter = \"\";\n\t#htmlEncode = false;\n\t#format = null;\n\n\tconstructor(template: string, delimiter: string, htmlEncode: boolean, format: Format = null)\n\t{\n\t\tthis.#template = template;\n\t\tthis.#delimiter = delimiter;\n\t\tthis.#htmlEncode = htmlEncode;\n\t\tthis.#format = format;\n\t}\n\n\tgetErrorCodes()\n\t{\n\t\tlet result = {};\n\n\t\tresult[ERR_PARSE_GROUP_START_POSITION] = \"ERR_PARSE_GROUP_START_POSITION\";\n\t\tresult[ERR_PARSE_GROUP_START] = \"ERR_PARSE_GROUP_START\";\n\t\tresult[ERR_PARSE_GROUP_DELIMITER] = \"ERR_PARSE_GROUP_DELIMITER\";\n\t\tresult[ERR_PARSE_PART_FROM_DELIMITER_TO_FIELD_LIST] = \"ERR_PARSE_PART_FROM_DELIMITER_TO_FIELD_LIST\";\n\t\tresult[ERR_PARSE_GROUP_FIELD_TEXT] = \"ERR_PARSE_GROUP_FIELD_TEXT\";\n\t\tresult[ERR_PARSE_GROUP_FIELD_NAME] = \"ERR_PARSE_GROUP_FIELD_NAME\";\n\t\tresult[ERR_PARSE_GROUP_FIELD] = \"ERR_PARSE_GROUP_FIELD\";\n\t\tresult[ERR_PARSE_GROUP_FIELD_LIST] = \"ERR_PARSE_GROUP_FIELD_LIST\";\n\t\tresult[ERR_PARSE_GROUP_FIELD_LIST_DELIMITER] = \"ERR_PARSE_GROUP_FIELD_LIST_DELIMITER\";\n\t\tresult[ERR_PARSE_GROUP_FIELD_LIST_END] = \"ERR_PARSE_GROUP_FIELD_LIST_END\";\n\t\tresult[ERR_PARSE_GROUP_END] = \"ERR_PARSE_GROUP_END\";\n\t\tresult[ERR_PARSE_GROUP] = \"ERR_PARSE_GROUP\";\n\n\t\treturn result;\n\t}\n\t\n\tgetErrorsText(context: {}): string\n\t{\n\t\tlet result = \"\";\n\n\t\tconst errorCodes = this.getErrorCodes();\n\t\tconst errors = context[\"error\"][\"errors\"];\n\t\tfor (let i = 0; i < errors.length; i++)\n\t\t{\n\t\t\tresult += `Error: ${errors[i][\"position\"]}, ${errorCodes[errors[i][\"code\"]]}\\n`;\n\t\t\tif (errors[i].hasOwnProperty(\"info\") && Type.isPlainObject(errors[i][\"info\"]))\n\t\t\t{\n\t\t\t\tconst errorInfo = errors[i][\"info\"];\n\t\t\t\tlet needHeader = true;\n\t\t\t\tfor (let paramName in errorInfo)\n\t\t\t\t{\n\t\t\t\t\tif (errorInfo.hasOwnProperty(paramName))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet paramValue = errorInfo[paramName];\n\t\t\t\t\t\tlet needPrint = false;\n\t\t\t\t\t\tif (Type.isString(paramValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparamValue = `\"${paramValue}\"`;\n\t\t\t\t\t\t\tneedPrint = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (Type.isNumber(paramValue) || Type.isFloat(paramValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tneedPrint = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (Type.isBoolean(paramValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparamValue = ((paramValue) ? \"true\" : \"false\");\n\t\t\t\t\t\t\tneedPrint = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (Type.isArray(paramValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparamValue = \"[...]\";\n\t\t\t\t\t\t\tneedPrint = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (Type.isObject(paramValue))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparamValue = '{...}';\n\t\t\t\t\t\t\tneedPrint = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (needPrint)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (needHeader)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresult += \"  Error info:\\n\";\n\t\t\t\t\t\t\t\tneedHeader = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult += `    ${paramName}: ${paramValue}\\n`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet templateValue = context[\"template\"].replace(\"\\n\", \"\\\\n\");\n\t\ttemplateValue = templateValue.replace(\"\\\"\", \"\\\\\\\"\");\n\t\tresult += `Template: \"${templateValue}\"\\n\\n`;\n\n\t\treturn result;\n\t}\n\n\tcreateContext()\n\t{\n\t\treturn {\n\t\t\t\"level\": 0,\n\t\t\t\"position\": 0,\n\t\t\t\"template\": \"\",\n\t\t\t\"address\": null,\n\t\t\t\"info\": {},\n\t\t\t\"hasError\": false,\n\t\t\t\"error\": {\n\t\t\t\t\"code\": 0,\n\t\t\t\t\"position\": 0,\n\t\t\t\t\"errors\": [],\n\t\t\t\t\"info\": {},\n\t\t\t},\n\t\t};\n\t}\n\n\tclearContextInfo(context)\n\t{\n\t\tcontext[\"info\"] = {};\n\n\t\treturn context;\n\t}\n\n\tclearContextError(context)\n\t{\n\t\tcontext[\"hasError\"] = false;\n\t\tcontext[\"error\"] = {\n\t\t\t\"code\": 0,\n\t\t\t\"position\": 0,\n\t\t\t\"errors\": [],\n\t\t\t\"info\": {},\n\t\t};\n\n\t\treturn context;\n\t}\n\n\tclearContextInfoAndError(context)\n\t{\n\t\treturn this.clearContextError(this.clearContextInfo(context));\n\t}\n\n\tunescapeText(text: string): string\n\t{\n\t\tlet result = \"\";\n\t\tlet i;\n\n\t\tfor (i = 0; i < text.length; i++)\n\t\t{\n\t\t\tif (text[i] === \"\\\\\")\n\t\t\t{\n\t\t\t\tif ((text.length - i) > 1)\n\t\t\t\t{\n\t\t\t\t\tresult += text[++i];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult += text[i];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseGroupDelimiter(context: {}): {}\n\t{\n\t\t// Capturing the group's separator\n\t\tconst delimiterStartPosition = context[\"position\"];\n\t\t//                [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for ^^^^\n\t\tconst regEx = new RegExp(REGEX_GROUP_DELIMITER, \"mg\");\n\t\tregEx.lastIndex = delimiterStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === delimiterStartPosition)\n\t\t{\n\t\t\tcontext[\"info\"] = {\n\t\t\t\t\"position\": delimiterStartPosition,\n\t\t\t\t\"end\": delimiterStartPosition + matches[0].length,\n\t\t\t\t\"value\": this.unescapeText(\n\t\t\t\t\tcontext[\"template\"].substr(\n\t\t\t\t\t\tdelimiterStartPosition + 1,\n\t\t\t\t\t\tmatches[0].length - 2\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t};\n\t\t\tcontext[\"position\"] = context[\"info\"][\"end\"];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_DELIMITER, delimiterStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseFieldText(context: {}): {}\n\t{\n\t\tconst textBlockStartPosition = context[\"position\"];\n\t\t// [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for                         ^^^^^^\n\t\tconst regEx = new RegExp(REGEX_GROUP_FIELD_TEXT, \"mg\");\n\t\tregEx.lastIndex = textBlockStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === textBlockStartPosition)\n\t\t{\n\t\t\tcontext[\"info\"] = {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"position\": textBlockStartPosition,\n\t\t\t\t\"end\": textBlockStartPosition + matches[0].length,\n\t\t\t\t\"value\": this.unescapeText(\n\t\t\t\t\tcontext[\"template\"].substr(\n\t\t\t\t\t\ttextBlockStartPosition + 1,\n\t\t\t\t\t\tmatches[0].length - 2\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t};\n\t\t\tcontext[\"position\"] = context[\"info\"][\"end\"];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_FIELD_TEXT, textBlockStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tsplitFieldName(fieldName: string): []\n\t{\n\t\tconst parts = fieldName.split(\":\");\n\t\tconst namePart = parts[0];\n\t\tconst modifiersPart = (parts.length > 1) ? parts[1] : \"\";\n\n\t\treturn [namePart, modifiersPart];\n\t}\n\n\t#isTemplateForFieldExists(fieldName: string): boolean\n\t{\n\t\treturn this.#format && this.#format.getTemplate(fieldName) !== null;\n\t}\n\n\t#getFieldValueByTemplate(fieldName: string, address: Address): ?string\n\t{\n\t\tif (!this.#isTemplateForFieldExists(fieldName))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst template = this.#format.getTemplate(fieldName).template;\n\t\tconst templateConverter = new StringTemplateConverter(template, this.#delimiter, this.#htmlEncode, this.#format);\n\t\treturn templateConverter.convert(address);\n\t}\n\t\n\t#getAlterFieldValue(address: Address, fieldType: number): string\n\t{\n\t\tlet localityValue = address.getFieldValue(AddressType.LOCALITY);\n\t\tlocalityValue = Type.isString(localityValue) ? localityValue : \"\";\n\t\tlet result = address.getFieldValue(fieldType);\n\t\tif (!Type.isString(result))\n\t\t{\n\t\t\tresult = \"\";\n\t\t}\n\t\tif (result !== \"\" && localityValue !== \"\")\n\t\t{\n\t\t\tconst localityValueUpper = localityValue.toUpperCase();\n\t\t\tconst targetValueUpper = result.toUpperCase();\n\t\t\tif (targetValueUpper.length >= localityValueUpper.length)\n\t\t\t{\n\t\t\t\tconst targetValueSubstr = targetValueUpper.substr(\n\t\t\t\t\ttargetValueUpper.length - localityValueUpper.length\n\t\t\t\t);\n\t\t\t\tif (localityValueUpper === targetValueSubstr)\n\t\t\t\t{\n\t\t\t\t\tresult = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\t\n\tgetAddressFieldValue(address: Address, fieldName: string, fieldModifiers: string): string\n\t{\n\t\tlet  result = \"\";\n\n\t\tif (!Type.isUndefined(AddressType[fieldName]))\n\t\t{\n\t\t\tif (fieldName === \"ADM_LEVEL_1\" || fieldName === \"ADM_LEVEL_2\")\n\t\t\t{\n\t\t\t\t// Scratch \"Province & Region by Locality\"\n\t\t\t\tresult = this.#getAlterFieldValue(address, AddressType[fieldName]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = address.getFieldValue(AddressType[fieldName]);\n\t\t\t}\n\n\t\t\tif (result === null)\n\t\t\t{\n\t\t\t\tresult = this.#getFieldValueByTemplate(fieldName, address);\n\t\t\t}\n\t\t}\n\t\tif (!Type.isString(result))\n\t\t{\n\t\t\tresult = \"\";\n\t\t}\n\t\tif (result !== \"\")\n\t\t{\n\t\t\tif (fieldModifiers.indexOf(\"N\") >= 0)\n\t\t\t{\n\t\t\t\tresult = result.replace(/(\\r\\n|\\n|\\r)/g, \"#S#\");\n\t\t\t}\n\t\t\tif (fieldModifiers.indexOf(\"U\") >= 0)\n\t\t\t{\n\t\t\t\tresult = result.toUpperCase();\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseFieldName(context: {}): {}\n\t{\n\t\tconst fieldNameStartPosition = context[\"position\"];\n\t\t//          [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for  ^^^^^^^^^^^^^^^^\n\t\tconst regEx = new RegExp(REGEX_GROUP_FIELD_NAME, \"mg\");\n\t\tregEx.lastIndex = fieldNameStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === fieldNameStartPosition)\n\t\t{\n\t\t\tcontext[\"position\"] = fieldNameStartPosition + matches[0].length;\n\t\t\tconst fieldParts = this.splitFieldName(matches[0]);\n\t\t\tconst fieldName = fieldParts[0];\n\t\t\tconst fieldModifiers = fieldParts[1];\n\t\t\tconst fieldValue = this.getAddressFieldValue(context[\"address\"], fieldName, fieldModifiers);\n\t\t\tcontext[\"info\"] = {\n\t\t\t\t\"type\": \"field\",\n\t\t\t\t\"position\": fieldNameStartPosition,\n\t\t\t\t\"end\": context[\"position\"],\n\t\t\t\t\"modifiers\": fieldModifiers,\n\t\t\t\t\"name\": fieldName,\n\t\t\t\t\"value\": fieldValue,\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_FIELD_NAME, fieldNameStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseFieldListDelimiter(context: {}): {}\n\t{\n\t\tconst markerStartPosition = context[\"position\"];\n\t\t// [\", \", [ADDRESS_LINE_1:N , ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for         ^^^\n\t\tconst regEx = new RegExp(REGEX_COMMA_AMONG_EMPTY_SPACE, \"mg\");\n\t\tregEx.lastIndex = markerStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === markerStartPosition)\n\t\t{\n\t\t\tcontext[\"position\"] = markerStartPosition + matches[0].length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_FIELD_LIST_DELIMITER, markerStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseFieldListEnd(context: {}): {}\n\t{\n\t\tconst markerStartPosition = context[\"position\"];\n\t\t// [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for                                                    ^\n\t\tconst regEx = new RegExp(REGEX_GROUP_FIELD_LIST_END, \"mg\");\n\t\tregEx.lastIndex = markerStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === markerStartPosition)\n\t\t{\n\t\t\tcontext[\"position\"] = markerStartPosition + matches[0].length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_FIELD_LIST_END, markerStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseField(context: {}): {}\n\t{\n\t\tlet fieldInfo = [];\n\t\tconst fieldStartPosition = context[\"position\"];\n\t\tconst errors = [];\n\n\t\t// Checking for the presence of a text block\n\t\tcontext = this.parseFieldText(context);\n\n\t\tif (context[\"hasError\"])\n\t\t{\n\t\t\tthis.unshiftError(errors, context[\"error\"][\"code\"], context[\"error\"][\"position\"]);\n\t\t\tcontext = this.clearContextInfoAndError(context);\n\t\t\t// Checking for the presence of a field name\n\t\t\tcontext = this.parseFieldName(context);\n\t\t}\n\n\t\tif (context[\"hasError\"])\n\t\t{\n\t\t\tthis.unshiftError(errors, context[\"error\"][\"code\"], context[\"error\"][\"position\"]);\n\t\t\tcontext = this.clearContextInfoAndError(context);\n\t\t\t// Checking for the presence of a nested group\n\t\t\tcontext = this.parseGroup(context);\n\t\t\tif (context[\"hasError\"])\n\t\t\t{\n\t\t\t\tthis.unshiftError(errors, context[\"error\"][\"code\"], context[\"error\"][\"position\"]);\n\t\t\t}\n\t\t\telse if (context[\"info\"][\"position\"] > fieldStartPosition)\n\t\t\t{\n\t\t\t\t// Group found beyond the expected position\n\t\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_START_POSITION, fieldStartPosition);\n\t\t\t\tthis.unshiftError(errors, context[\"error\"][\"code\"], context[\"error\"][\"position\"]);\n\t\t\t}\n\t\t}\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\tfieldInfo = context[\"info\"];\n\t\t\tfieldInfo[\"isFieldListEnd\"] = false;\n\t\t\tcontext = this.clearContextInfo(context);\n\n\t\t\t// Checking for the presence of a field separator\n\t\t\tcontext = this.parseFieldListDelimiter(context);\n\n\t\t\tif (context[\"hasError\"])\n\t\t\t{\n\t\t\t\tthis.unshiftError(errors, context[\"error\"][\"code\"], context[\"error\"][\"position\"]);\n\t\t\t\tcontext = this.clearContextInfoAndError(context);\n\t\t\t\t// Checking for the presence of the end sign of the field list\n\t\t\t\tcontext = this.parseFieldListEnd(context);\n\t\t\t\tif (context[\"hasError\"])\n\t\t\t\t{\n\t\t\t\t\tthis.unshiftError(errors, context[\"error\"][\"code\"], context[\"error\"][\"position\"]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfieldInfo[\"isFieldListEnd\"] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (context[\"hasError\"])\n\t\t{\n\t\t\tthis.unshiftError(errors,  ERR_PARSE_GROUP_FIELD, fieldStartPosition);\n\t\t\tthis.addContextErrors(context, errors);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontext[\"info\"] = fieldInfo;\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseGroupFieldList(context: {}): {}\n\t{\n\t\tconst fieldListStartPosition = context[\"position\"];\n\t\tconst fieldValues = [];\n\t\t//            [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for ^^^\n\t\tconst regEx = new RegExp(REGEX_PART_FROM_DELIMITER_TO_FIELD_LIST, \"mg\");\n\t\tregEx.lastIndex = fieldListStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === fieldListStartPosition)\n\t\t{\n\t\t\tcontext[\"position\"] = fieldListStartPosition + matches[0].length;\n\t\t\tlet isFieldListEnd = false;\n\t\t\twhile (!(context[\"hasError\"] || isFieldListEnd))\n\t\t\t{\n\t\t\t\tcontext = this.parseField(context);\n\t\t\t\tif (!context[\"hasError\"])\n\t\t\t\t{\n\t\t\t\t\tisFieldListEnd = (\n\t\t\t\t\t\tcontext[\"info\"].hasOwnProperty(\"isFieldListEnd\")\n\t\t\t\t\t\t&& context[\"info\"][\"isFieldListEnd\"]\n\t\t\t\t\t);\n\t\t\t\t\tif (context[\"info\"][\"value\"] !== \"\")\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldValues.push(context[\"info\"][\"value\"]);\n\t\t\t\t\t}\n\t\t\t\t\tcontext = this.clearContextInfo(context);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!context[\"hasError\"])\n\t\t\t{\n\t\t\t\tcontext[\"info\"] = {\"fieldValues\": fieldValues};\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_PART_FROM_DELIMITER_TO_FIELD_LIST, fieldListStartPosition);\n\t\t}\n\n\t\tif (context[\"hasError\"])\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_FIELD_LIST, fieldListStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseGroupStart(context: {}): {}\n\t{\n\t\t//                 [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for ^^^^^^^^\n\t\tconst regEx = new RegExp(REGEX_GROUP_PART_BEFORE_FIELDS, \"mg\");\n\t\tregEx.lastIndex = context[\"position\"];\n\t\tconst matches = regEx.exec(context[\"template\"])\n\t\tif (matches)\n\t\t{\n\t\t\tcontext[\"info\"][\"groupStartPosition\"] = matches.index + matches[1].length;\n\t\t\tcontext[\"info\"][\"groupDelimiterStartPosition\"] = matches.index + matches[1].length + matches[3].length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_START, context[\"position\"]);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseGroupEnd(context: {}): {}\n\t{\n\t\tconst markerStartPosition = context[\"position\"];\n\t\t// [\", \", [ADDRESS_LINE_1:N,ADDRESS_LINE_2,\"Text\",LOCALITY,ADM_LEVEL_2]]\n\t\t// Are looking for                                                     ^\n\t\tconst regEx = new RegExp(REGEX_GROUP_END, \"mg\");\n\t\tregEx.lastIndex = markerStartPosition;\n\t\tconst matches = regEx.exec(context[\"template\"]);\n\t\tif (matches && matches.index === markerStartPosition)\n\t\t{\n\t\t\tcontext[\"position\"] = markerStartPosition + matches[0].length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addContextError(context, ERR_PARSE_GROUP_END, markerStartPosition);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tparseGroup(context: {}): {}\n\t{\n\t\tconst startSearchPosition = context[\"position\"];\n\t\tlet groupStartPosition = 0;\n\t\tlet delimiterValue = \"\";\n\t\tlet fieldValues = [];\n\n\t\tcontext[\"level\"]++;\n\n\t\t// Checking for the presence of a start of a group\n\t\tcontext = this.parseGroupStart(context);\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\t// Found a sign of the beginning of a group\n\t\t\tgroupStartPosition = context[\"info\"][\"groupStartPosition\"];\n\t\t\tcontext[\"position\"] = context[\"info\"][\"groupDelimiterStartPosition\"];\n\t\t\tcontext = this.clearContextInfo(context);\n\t\t\tcontext = this.parseGroupDelimiter(context);\n\t\t}\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\t// The value of the group separator was got\n\t\t\tdelimiterValue = context[\"info\"][\"value\"];\n\t\t\tcontext = this.clearContextInfo(context);\n\t\t\tcontext = this.parseGroupFieldList(context);\n\t\t}\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\t// The values of the field list was got\n\t\t\tfieldValues = context[\"info\"][\"fieldValues\"];\n\t\t\tcontext = this.clearContextInfo(context);\n\t\t\tcontext = this.parseGroupEnd(context);\n\t\t}\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\t// Kremlin,Moscow,Moscow,Russia,103132 -> Kremlin,Moscow,Russia,103132\n\t\t\tfieldValues = [...new Set(fieldValues)];\n\n\t\t\tlet value = fieldValues.join(delimiterValue);\n\n\t\t\t// Kaliningrad, Narvskaya, 72, , kv 8 -> Kaliningrad, Narvskaya, 72, kv 8\n\t\t\tconst reg = new RegExp(`(${delimiterValue}){2,}`, 'gim');\n\t\t\tvalue = value.replace(new RegExp(reg), delimiterValue);\n\n\t\t\t// The sign of the end of the group is received, the assembly of the group value.\n\t\t\tcontext[\"info\"] = {\n\t\t\t\t\"type\": \"group\",\n\t\t\t\t\"position\": groupStartPosition,\n\t\t\t\t\"end\": context[\"position\"],\n\t\t\t\t\"value\": value,\n\t\t\t};\n\t\t}\n\n\t\tcontext[\"level\"]--;\n\n\t\tif (context[\"hasError\"])\n\t\t{\n\t\t\tthis.addContextError(\n\t\t\t\tcontext,\n\t\t\t\tERR_PARSE_GROUP,\n\t\t\t\tstartSearchPosition,\n\t\t\t\t{\"groupStartPosition\": groupStartPosition}\n\t\t\t);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tappendTextBlock(blocks: [], position: number, value: string)\n\t{\n\t\tlet lastBlockIndex = blocks.length - 1;\n\t\tlet lastBlock = (lastBlockIndex >= 0) ? blocks[lastBlockIndex] : null;\n\t\tif (lastBlock && lastBlock.hasOwnProperty(\"type\") && lastBlock[\"type\"] === \"text\")\n\t\t{\n\t\t\tblocks[lastBlockIndex][\"value\"] += value;\n\t\t\tblocks[lastBlockIndex][\"length\"] += value.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tblocks[++lastBlockIndex] = {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"position\": position,\n\t\t\t\t\"length\": value.length,\n\t\t\t\t\"value\": value,\n\t\t\t};\n\t\t}\n\t}\n\n\tappendGroupBlock(blocks: [], position: number, value: string)\n\t{\n\t\tblocks.push({\n\t\t\t\"type\": \"group\",\n\t\t\t\"position\": position,\n\t\t\t\"length\": value.length,\n\t\t\t\"value\": value,\n\t\t});\n\t}\n\n\tunshiftError(errors: [{}], code: number, position: number, info: {} = null)\n\t{\n\t\terrors.unshift({\n\t\t\t\"code\": code,\n\t\t\t\"position\": position,\n\t\t\t\"info\": (Type.isPlainObject(info)) ? info : {},\n\t\t});\n\t}\n\n\taddContextError(context: {}, code: number, position: number, info: {} = null)\n\t{\n\t\tcontext[\"hasError\"] = true;\n\t\tcontext[\"error\"][\"code\"] = code;\n\t\tcontext[\"error\"][\"position\"] = position;\n\t\tcontext[\"error\"][\"info\"] = (Type.isPlainObject(info)) ? info : {};\n\t\tthis.unshiftError(context[\"error\"][\"errors\"], code, position, info);\n\t}\n\n\taddContextErrors(context: {}, errors: [{}], info: {} = null)\n\t{\n\t\tcontext[\"hasError\"] = true;\n\t\tcontext[\"error\"][\"code\"] = errors[0][\"code\"];\n\t\tcontext[\"error\"][\"position\"] = errors[0][\"position\"];\n\t\tcontext[\"error\"][\"info\"] = (Type.isPlainObject(info)) ? info : {};\n\t\tcontext[\"error\"][\"errors\"].splice(0, 0, errors);\n\t}\n\n\tparseBlocks(context: {}): {}\n\t{\n\t\t/* Variable for debug only\n\t\tlet errorDisplayed = false;\n\t\t*/\n\n\t\tconst blocks = [];\n\n\t\tconst templateLength = context[\"template\"].length;\n\t\twhile (context[\"position\"] < templateLength)\n\t\t{\n\t\t\tconst blockStartPosition = context[\"position\"];\n\t\t\tcontext = this.parseGroup(context);\n\t\t\tif (context[\"hasError\"])\n\t\t\t{\n\t\t\t\t// Debug info\n\t\t\t\t/*if (!errorDisplayed)\n\t\t\t\t{\n\t\t\t\t\tconsole.info(this.getErrorsText(context));\n\t\t\t\t\terrorDisplayed = true;\n\t\t\t\t}*/\n\n\t\t\t\tconst errorInfo = context[\"error\"][\"info\"];\n\t\t\t\tlet blockLength;\n\t\t\t\tif (!Type.isPlainObject(errorInfo)\n\t\t\t\t\t&& errorInfo.hasOwnProperty(\"groupStartPosition\")\n\t\t\t\t\t&& errorInfo[\"groupStartPosition\"] > blockStartPosition\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tblockLength = errorInfo[\"groupStartPosition\"] - blockStartPosition + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tblockLength = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.appendTextBlock(\n\t\t\t\t\tblocks,\n\t\t\t\t\tcontext[\"error\"][\"position\"],\n\t\t\t\t\tcontext[\"template\"].substr(blockStartPosition, blockLength)\n\t\t\t\t);\n\t\t\t\tcontext = this.clearContextInfoAndError(context);\n\t\t\t\tcontext[\"position\"] = blockStartPosition + blockLength;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst groupStartPosition = context[\"info\"][\"position\"];\n\t\t\t\tif (groupStartPosition > blockStartPosition)\n\t\t\t\t{\n\t\t\t\t\tthis.appendTextBlock(\n\t\t\t\t\t\tblocks,\n\t\t\t\t\t\tblockStartPosition,\n\t\t\t\t\t\tcontext[\"template\"].substr(\n\t\t\t\t\t\t\tblockStartPosition,\n\t\t\t\t\t\t\tgroupStartPosition - blockStartPosition\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (context[\"info\"][\"value\"] !== \"\")\n\t\t\t\t{\n\t\t\t\t\tthis.appendGroupBlock(\n\t\t\t\t\t\tblocks,\n\t\t\t\t\t\tgroupStartPosition,\n\t\t\t\t\t\tcontext[\"info\"][\"value\"]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tcontext = this.clearContextInfo(context);\n\t\t\t}\n\t\t}\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\tcontext[\"info\"] = {\"blocks\": blocks};\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tconvert(address: Address): string\n\t{\n\t\tlet result = \"\";\n\n\t\tlet context = this.createContext();\n\t\tcontext[\"template\"] = this.#template;\n\t\tcontext[\"address\"] = address;\n\n\t\tcontext = this.parseBlocks(context);\n\n\t\tif (!context[\"hasError\"])\n\t\t{\n\t\t\tconst blocks = context[\"info\"][\"blocks\"];\n\t\t\tfor (let i = 0; i < blocks.length; i++)\n\t\t\t{\n\t\t\t\tif (blocks[i][\"type\"] === \"text\")\n\t\t\t\t{\n\t\t\t\t\tresult += this.unescapeText(blocks[i][\"value\"]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult += blocks[i][\"value\"];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (result !== \"\")\n\t\t{\n\t\t\tconst temp = result.split(STR_DELIMITER_PLACEHOLDER);\n\t\t\tlet parts = [];\n\t\t\tfor (let i = 0; i < temp.length; i++)\n\t\t\t{\n\t\t\t\tif (temp[i] !== \"\")\n\t\t\t\t{\n\t\t\t\t\tparts.push(temp[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.#htmlEncode && parts.length > 0)\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts[i] = Text.encode(parts[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = parts.join(this.#delimiter);\n\t\t}\n\t\treturn result;\n\t}\n}\n","import {Text} from 'main.core';\nimport Address from '../../address';\nimport Format from '../../format';\nimport StringTemplateConverter from './stringtemplateconverter';\n\nexport default class StringConverter\n{\n\tstatic STRATEGY_TYPE_TEMPLATE = 'template';\n\tstatic STRATEGY_TYPE_TEMPLATE_COMMA = 'template_comma';\n\tstatic STRATEGY_TYPE_TEMPLATE_NL = 'template_nl';\n\tstatic STRATEGY_TYPE_TEMPLATE_BR = 'template_br';\n\tstatic STRATEGY_TYPE_FIELD_SORT = 'field_sort';\n\tstatic STRATEGY_TYPE_FIELD_TYPE = 'field_type';\n\n\tstatic CONTENT_TYPE_HTML = 'html';\n\tstatic CONTENT_TYPE_TEXT = 'text';\n\t/**\n\t * Convert address to string\n\t * @param {Address} address\n\t * @param {Format} format\n\t * @param {string} strategyType\n\t * @param {string} contentType\n\t * @returns {string}\n\t */\n\tstatic convertAddressToString(address: Address, format: Format, strategyType: string, contentType: string): string\n\t{\n\t\tlet result;\n\n\t\tif (strategyType === StringConverter.STRATEGY_TYPE_TEMPLATE\n\t\t\t|| strategyType === StringConverter.STRATEGY_TYPE_TEMPLATE_COMMA\n\t\t\t|| strategyType === StringConverter.STRATEGY_TYPE_TEMPLATE_NL\n\t\t\t|| strategyType === StringConverter.STRATEGY_TYPE_TEMPLATE_BR\n\t\t)\n\t\t{\n\t\t\tlet delimiter = null;\n\n\t\t\tswitch (strategyType)\n\t\t\t{\n\t\t\t\tcase StringConverter.STRATEGY_TYPE_TEMPLATE_COMMA:\n\t\t\t\t\tdelimiter = ', ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase StringConverter.STRATEGY_TYPE_TEMPLATE_NL:\n\t\t\t\t\tdelimiter = '\\n';\n\t\t\t\t\tbreak;\n\t\t\t\tcase StringConverter.STRATEGY_TYPE_TEMPLATE_BR:\n\t\t\t\t\tdelimiter = '<br />';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tresult = StringConverter.convertAddressToStringTemplate(\n\t\t\t\taddress, format.getTemplate(), contentType, delimiter, format\n\t\t\t);\n\t\t}\n\t\telse if (strategyType === StringConverter.STRATEGY_TYPE_FIELD_SORT)\n\t\t{\n\t\t\tconst fieldSorter = (a, b) => { return a.sort - b.sort; };\n\t\t\tresult = StringConverter.convertAddressToStringByField(address, format, fieldSorter, contentType);\n\t\t}\n\t\telse if (strategyType === StringConverter.STRATEGY_TYPE_FIELD_TYPE)\n\t\t{\n\t\t\tconst fieldSorter = (a, b) => {\n\t\t\t\tlet sortResult;\n\n\t\t\t\t// We suggest that UNKNOWN must be the last\n\t\t\t\tif (a.type === 0)\n\t\t\t\t{\n\t\t\t\t\tsortResult = 1;\n\t\t\t\t}\n\t\t\t\telse if (b.type === 0)\n\t\t\t\t{\n\t\t\t\t\tsortResult = -1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsortResult = a.type - b.type;\n\t\t\t\t}\n\n\t\t\t\treturn sortResult;\n\t\t\t};\n\n\t\t\tresult = StringConverter.convertAddressToStringByField(address, format, fieldSorter, contentType);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow TypeError('Wrong strategyType');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Convert address to string\n\t * @param {Address} address\n\t * @param {string} template\n\t * @param {string} contentType\n\t * @param {string|null} delimiter\n\t * @param {Format|null} format\n\t * @returns {string}\n\t */\n\tstatic convertAddressToStringTemplate(\n\t\taddress: Address,\n\t\ttemplate: Template,\n\t\tcontentType: string,\n\t\tdelimiter: string = null,\n\t\tformat: Format = null\n\t): string\n\t{\n\t\tconst needHtmlEncode = (contentType === StringConverter.CONTENT_TYPE_HTML);\n\n\t\tif (delimiter === null)\n\t\t{\n\t\t\tdelimiter = needHtmlEncode ? '<br />' : '\\n';\n\t\t}\n\n\t\tconst templateConverter = new StringTemplateConverter(template.template, delimiter, needHtmlEncode, format);\n\t\treturn templateConverter.convert(address);\n\t}\n\n\t/**\n\t * Convert address to string\n\t * @param {Address} address\n\t * @param {Format} format\n\t * @param {Function} fieldSorter\n\t * @param {string} contentType\n\t * @returns {string}\n\t */\n\tstatic convertAddressToStringByField(\n\t\taddress: Address,\n\t\tformat: Format,\n\t\tfieldSorter: Function,\n\t\tcontentType: string\n\t): string\n\t{\n\t\tif (!(format instanceof Format))\n\t\t{\n\t\t\tBX.debug('format must be instance of Format');\n\t\t}\n\n\t\tif (!(address instanceof Address))\n\t\t{\n\t\t\tBX.debug('address must be instance of Address');\n\t\t}\n\n\t\tconst fieldCollection = format.fieldCollection;\n\n\t\tif (!fieldCollection)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fields = Object.values(fieldCollection.fields);\n\n\t\t// todo: make only once or cache?\n\t\tfields.sort(fieldSorter);\n\n\t\tlet result = '';\n\n\t\tfor(const field of fields)\n\t\t{\n\t\t\tlet value = address.getFieldValue(field.type);\n\n\t\t\tif (value === null)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (contentType === StringConverter.CONTENT_TYPE_HTML)\n\t\t\t{\n\t\t\t\tvalue = Text.encode(value);\n\t\t\t}\n\n\t\t\tif (result !== '')\n\t\t\t{\n\t\t\t\tresult += format.delimiter;\n\t\t\t}\n\n\t\t\tresult += value;\n\t\t}\n\n\t\treturn result;\n\t}\n}","import Address from '../../address';\nimport AddressFieldCollection from '../addressfieldcollection';\nimport AddressLinkCollection from '../addresslinkcollection';\n\nexport default class JsonConverter\n{\n\t/**\n\t * @param {Object} jsonData\n\t * @returns {Address}\n\t */\n\tstatic convertJsonToAddress(jsonData: Object): Address\n\t{\n\t\treturn new Address(jsonData);\n\t}\n\n\t/**\n\t * @param {Address} address\n\t * @returns {{languageId: string, location: ({\"'...'\"}|null), id: number, fieldCollection: {\"'...'\"}}} Json data\n\t */\n\tstatic convertAddressToJson(address: Address): Object\n\t{\n\t\tconst obj = {\n\t\t\tid: address.id,\n\t\t\tlanguageId: address.languageId,\n\t\t\tlatitude: address.latitude,\n\t\t\tlongitude: address.longitude,\n\t\t\tfieldCollection: JsonConverter.#objectifyFieldCollection(address.fieldCollection),\n\t\t\tlinks: JsonConverter.#objectifyLinks(address.links),\n\t\t\tlocation: null\n\t\t};\n\n\t\tif (address.location)\n\t\t{\n\t\t\tobj.location = JSON.parse(address.location.toJson());\n\t\t}\n\n\t\treturn JSON.stringify(obj);\n\t}\n\n\t/**\n\t * @param {AddressFieldCollection} fieldCollection\n\t * @returns {Object}\n\t */\n\tstatic #objectifyFieldCollection(fieldCollection: AddressFieldCollection): Object\n\t{\n\t\tconst result = {};\n\n\t\tObject.values(fieldCollection.fields).forEach((field) => {\n\t\t\tresult[field.type] = field.value;\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tstatic #objectifyLinks(links: AddressLinkCollection): Array<{entityId: string, entityType: string}>\n\t{\n\t\treturn links.map((link) => {\n\t\t\treturn {\n\t\t\t\tentityId: link.entityId,\n\t\t\t\tentityType: link.entityType\n\t\t\t};\n\t\t});\n\t}\n}","import {Type} from 'main.core';\nimport AddressFieldCollection from './address/addressfieldcollection';\nimport AddressLinkCollection from './address/addresslinkcollection';\nimport AddressLink from './address/addresslink';\nimport StringConverter from './address/converter/stringconverter';\nimport Format from './format';\nimport JsonConverter from './address/converter/jsonconverter';\nimport Location from './location';\n\nexport default class Address\n{\n\t#id;\n\t#languageId;\n\t#latitude;\n\t#longitude;\n\n\t#fieldCollection;\n\t#links;\n\n\t#location;\n\n\t/**\n\t * @param {{...}} props\n\t */\n\tconstructor(props)\n\t{\n\t\tif(Type.isUndefined(props.languageId))\n\t\t{\n\t\t\tthrow new TypeError('languageId must be defined');\n\t\t}\n\n\t\tthis.#languageId = props.languageId;\n\n\t\tthis.#id = props.id || 0;\n\t\tthis.#latitude = props.latitude || '';\n\t\tthis.#longitude = props.longitude || '';\n\t\tthis.#fieldCollection = new AddressFieldCollection();\n\n\t\tif(Type.isObject(props.fieldCollection))\n\t\t{\n\t\t\tfor(const [type, value] of Object.entries(props.fieldCollection))\n\t\t\t{\n\t\t\t\tthis.setFieldValue(type, value);\n\t\t\t}\n\t\t}\n\n\t\tthis.#links = new AddressLinkCollection();\n\n\t\tif(Type.isArray(props.links))\n\t\t{\n\t\t\tfor(const link of props.links)\n\t\t\t{\n\t\t\t\tthis.addLink(link.entityId, link.entityType);\n\t\t\t}\n\t\t}\n\n\t\tthis.#location = null;\n\n\t\tif(props.location)\n\t\t{\n\t\t\tif(props.location instanceof Location)\n\t\t\t{\n\t\t\t\tthis.#location = props.location;\n\t\t\t}\n\t\t\telse if(Type.isObject(props.location))\n\t\t\t{\n\t\t\t\tthis.#location = new Location(props.location);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tBX.debug('Wrong typeof props.location');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {int}\n\t */\n\tget id(): number\n\t{\n\t\treturn this.#id;\n\t}\n\n\t/**\n\t * @returns {Location}\n\t */\n\tget location(): ?Location\n\t{\n\t\treturn this.#location;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tget languageId(): string\n\t{\n\t\treturn this.#languageId;\n\t}\n\n\t/**\n\t * @returns {AddressFieldCollection}\n\t */\n\tget fieldCollection(): AddressFieldCollection\n\t{\n\t\treturn this.#fieldCollection;\n\t}\n\n\t/**\n\t * @param {int} id\n\t */\n\tset id(id: number)\n\t{\n\t\tthis.#id = id;\n\t}\n\n\t/**\n\t * @param {Location} location\n\t */\n\tset location(location: ?Location)\n\t{\n\t\tthis.#location = location;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tget latitude(): string\n\t{\n\t\treturn this.#latitude;\n\t}\n\n\t/**\n\t * @param {string} latitude\n\t */\n\tset latitude(latitude: string): void\n\t{\n\t\tthis.#latitude = latitude;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tget longitude(): string\n\t{\n\t\treturn this.#longitude;\n\t}\n\n\t/**\n\t * @param {string} longitude\n\t */\n\tset longitude(longitude: string): void\n\t{\n\t\tthis.#longitude = longitude;\n\t}\n\n\t/**\n\t * @returns {AddressLinkCollection}\n\t */\n\tget links(): AddressLinkCollection\n\t{\n\t\treturn this.#links.links;\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {mixed} value\n\t */\n\tsetFieldValue(type: number, value: string): void\n\t{\n\t\tthis.#fieldCollection.setFieldValue(type, value);\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @returns {?string}\n\t */\n\tgetFieldValue(type: number): ?string\n\t{\n\t\treturn this.#fieldCollection.getFieldValue(type);\n\t}\n\n\t/**\n\t * Check if field exist\n\t * @param type\n\t * @returns {boolean}\n\t */\n\tisFieldExists(type: number): boolean\n\t{\n\t\treturn this.#fieldCollection.isFieldExists(type);\n\t}\n\n\t/**\n\t * @return {string} JSON\n\t */\n\ttoJson(): string\n\t{\n\t\treturn JsonConverter.convertAddressToJson(this);\n\t}\n\n\t/**\n\t * @param {Format}format\n\t * @param {?string}strategyType\n\t * @param {?string}contentType\n\t * @return {string}\n\t */\n\ttoString(format: Format, strategyType: ?string, contentType: ?string): string\n\t{\n\t\tif(!(format instanceof Format))\n\t\t{\n\t\t\tconsole.error('format must be instance of Format');\n\t\t\treturn '';\n\t\t}\n\n\t\tconst strategy = strategyType || StringConverter.STRATEGY_TYPE_TEMPLATE;\n\t\tconst type = contentType || StringConverter.CONTENT_TYPE_HTML;\n\t\treturn StringConverter.convertAddressToString(this, format, strategy, type);\n\t}\n\n\t/**\n\t * @returns {?Location}\n\t */\n\ttoLocation(): ?Location\n\t{\n\t\tlet result = null;\n\n\t\tif(this.location)\n\t\t{\n\t\t\tconst locationObj = JSON.parse(this.location.toJson());\n\t\t\tlocationObj.address = JSON.parse(this.toJson());\n\t\t\tresult = new Location(locationObj);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @return {number}\n\t */\n\tgetType(): number\n\t{\n\t\treturn this.#fieldCollection.getMaxFieldType();\n\t}\n\n\t/**\n\t * @param {string} entityId\n\t * @param {string} entityType\n\t */\n\taddLink(entityId: number, entityType: string): void\n\t{\n\t\tthis.#links.addLink(new AddressLink({\n\t\t\tentityId: entityId,\n\t\t\tentityType: entityType\n\t\t}));\n\t}\n\n\tclearLinks(): void\n\t{\n\t\tthis.#links.clearLinks();\n\t}\n}","import Field from '../generic/field';\n\nexport default class LocationField extends Field\n{\n\t#value;\n\n\t// todo: Fields validation\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.#value = props.value || '';\n\t}\n\n\tget value(): string\n\t{\n\t\treturn this.#value;\n\t}\n\n\tset value(value: string)\n\t{\n\t\tthis.#value = value;\n\t}\n}","import FieldCollection from '../generic/fieldcollection';\nimport LocationField from './locationfield';\n\nexport default class LocationFieldCollection extends FieldCollection\n{\n\tgetFieldValue(type)\n\t{\n\t\tlet result = null;\n\n\t\tif(this.isFieldExists(type))\n\t\t{\n\t\t\tconst field = this.getField(type);\n\n\t\t\tif(field)\n\t\t\t{\n\t\t\t\tresult = field.value;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tsetFieldValue(type, value)\n\t{\n\t\tthis.setField(\n\t\t\tnew LocationField({type, value})\n\t\t);\n\n\t\treturn this;\n\t}\n}","import Location from '../location';\nimport LocationFieldCollection from './locationfieldcollection';\n\nexport default class LocationObjectConverter\n{\n\tstatic convertLocationToObject(location: Location): Object\n\t{\n\t\tif(!(location instanceof Location))\n\t\t{\n\t\t\tthrow new TypeError('location must be type of location');\n\t\t}\n\n\t\tconst obj = {\n\t\t\tid: location.id,\n\t\t\tcode: location.code,\n\t\t\texternalId: location.externalId,\n\t\t\tsourceCode: location.sourceCode,\n\t\t\ttype: location.type,\n\t\t\tname: location.name,\n\t\t\tlanguageId: location.languageId,\n\t\t\tlatitude: location.latitude,\n\t\t\tlongitude: location.longitude,\n\t\t\tfieldCollection: LocationObjectConverter.#objectifyFieldCollection(location.fieldCollection),\n\t\t\taddress: null\n\t\t};\n\n\t\tif(location.address)\n\t\t{\n\t\t\tobj.address = JSON.parse(location.address.toJson());\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tstatic #objectifyFieldCollection(fieldCollection: LocationObjectConverter): Object\n\t{\n\t\tlet result = {};\n\n\t\tObject.values(fieldCollection.fields).forEach((field) => {\n\t\t\tresult[field.type] = field.value;\n\t\t});\n\n\t\treturn result;\n\t}\n}","import Location from '../location';\nimport Address from '../address';\nimport LocationObjectConverter from './locationobjectconverter';\n\nexport default class LocationJsonConverter\n{\n\t/**\n\t * @param {{...}}jsonData\n\t * @returns {Location}\n\t */\n\tstatic convertJsonToLocation(jsonData)\n\t{\n\t\tconst initData = {...jsonData};\n\n\t\tif(jsonData.address)\n\t\t{\n\t\t\tinitData.address = new Address(jsonData.address);\n\t\t}\n\n\t\treturn new Location(initData);\n\t}\n\n\t/**\n\t * @param {Location} location\n\t * @returns {{...}}\n\t */\n\tstatic convertLocationToJson(location: Location)\n\t{\n\t\tif(!(location instanceof Location))\n\t\t{\n\t\t\tthrow new TypeError('location must be type of location');\n\t\t}\n\n\t\tconst obj = LocationObjectConverter.convertLocationToObject(location);\n\t\treturn obj ? JSON.stringify(obj) : '';\n\t}\n}","import {Type} from 'main.core';\nimport Address from './address';\nimport LocationJsonConverter from './location/locationjsonconverter';\nimport LocationFieldCollection from './location/locationfieldcollection';\n\nexport default class Location\n{\n\t#id;\n\t#code;\n\t#externalId;\n\t#sourceCode;\n\t#type;\n\t#name;\n\t#languageId;\n\t#latitude;\n\t#longitude;\n\t#address;\n\t#fieldCollection;\n\n\tconstructor(props = {})\n\t{\n\t\tthis.#id = parseInt(props.id) || 0;\n\t\tthis.#code = props.code || '';\n\t\tthis.#externalId = props.externalId || '';\n\t\tthis.#sourceCode = props.sourceCode || '';\n\t\tthis.#type = parseInt(props.type) || 0;\n\t\tthis.#name = props.name || '';\n\t\tthis.#languageId = props.languageId || '';\n\t\tthis.#latitude = props.latitude || '';\n\t\tthis.#longitude = props.longitude || '';\n\t\tthis.#fieldCollection = new LocationFieldCollection();\n\n\t\tif(Type.isObject(props.fieldCollection))\n\t\t{\n\t\t\tfor(const [type, value] of Object.entries(props.fieldCollection))\n\t\t\t{\n\t\t\t\tthis.setFieldValue(type, value);\n\t\t\t}\n\t\t}\n\n\t\tthis.#address = null;\n\n\t\tif(props.address)\n\t\t{\n\t\t\tif(props.address instanceof Address)\n\t\t\t{\n\t\t\t\tthis.#address = props.address;\n\t\t\t}\n\t\t\telse if(typeof props.address === 'object')\n\t\t\t{\n\t\t\t\tthis.#address = new Address(props.address);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tBX.debug('Wrong typeof props.address');\n\t\t\t}\n\t\t}\n\t}\n\n\tget id(): number\n\t{\n\t\treturn this.#id;\n\t}\n\n\tget code(): string\n\t{\n\t\treturn this.#code;\n\t}\n\n\tget externalId(): string\n\t{\n\t\treturn this.#externalId;\n\t}\n\n\tget sourceCode(): string\n\t{\n\t\treturn this.#sourceCode;\n\t}\n\n\tget type(): number\n\t{\n\t\treturn this.#type;\n\t}\n\n\tget name(): string\n\t{\n\t\treturn this.#name;\n\t}\n\n\tget languageId(): string\n\t{\n\t\treturn this.#languageId;\n\t}\n\n\tset id(value: number): void\n\t{\n\t\tthis.#id = value;\n\t}\n\n\tset code(code: string): void\n\t{\n\t\tthis.#code = code;\n\t}\n\n\tset externalId(value: string): void\n\t{\n\t\tthis.#externalId = value;\n\t}\n\n\tset sourceCode(value: string): void\n\t{\n\t\tthis.#sourceCode = value;\n\t}\n\n\tset type(value: number): void\n\t{\n\t\tthis.#type = value;\n\t}\n\n\tset name(value: string): void\n\t{\n\t\tthis.#name = value;\n\t}\n\n\tset languageId(value: string): void\n\t{\n\t\tthis.#languageId = value;\n\t}\n\n\tget latitude(): string\n\t{\n\t\treturn this.#latitude;\n\t}\n\n\tset latitude(latitude: string): void\n\t{\n\t\tthis.#latitude = latitude;\n\t}\n\n\tget longitude(): string\n\t{\n\t\treturn this.#longitude;\n\t}\n\n\tset longitude(longitude: string): void\n\t{\n\t\tthis.#longitude = longitude;\n\t}\n\n\tset address(address: Address): void\n\t{\n\t\tthis.#address = address;\n\t}\n\n\tget address(): ?Address\n\t{\n\t\treturn this.#address;\n\t}\n\n\ttoJson(): string\n\t{\n\t\treturn LocationJsonConverter.convertLocationToJson(this);\n\t}\n\n\ttoAddress(): ?Address\n\t{\n\t\tlet result = null;\n\n\t\tif(this.address)\n\t\t{\n\t\t\tconst addressObj = JSON.parse(this.address.toJson());\n\t\t\taddressObj.location = JSON.parse(this.toJson());\n\t\t\tresult = new Address(addressObj);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tget fieldCollection(): LocationFieldCollection\n\t{\n\t\treturn this.#fieldCollection;\n\t}\n\n\tsetFieldValue(type: number, value: string): void\n\t{\n\t\tthis.#fieldCollection.setFieldValue(type, value);\n\t}\n\n\tgetFieldValue(type: number): ?string\n\t{\n\t\treturn this.#fieldCollection.getFieldValue(type);\n\t}\n\n\tisFieldExists(type: number): boolean\n\t{\n\t\treturn this.#fieldCollection.isFieldExists(type);\n\t}\n\n\thasExternalRelation(): boolean\n\t{\n\t\treturn (this.#externalId && this.#sourceCode);\n\t}\n}","export default class ActionRunner\n{\n\t#path = '';\n\n\tconstructor(props)\n\t{\n\t\tif(!props.path)\n\t\t{\n\t\t\tthrow new Error('props.path must not be empty!');\n\t\t}\n\n\t\tthis.#path = props.path;\n\t}\n\n\trun(action, data)\n\t{\n\t\tif(!action)\n\t\t{\n\t\t\tthrow new Error('action can not be empty!');\n\t\t}\n\n\t\treturn BX.ajax.runAction(`${this.#path}.${action}`, {data});\n\t}\n}","import ActionRunner from './actionrunner';\n\nexport default class BaseRepository\n{\n\t#actionRunner = null;\n\n\tconstructor(props = {})\n\t{\n\t\tthis._path = props.path;\n\n\t\tif(props.actionRunner && props.actionRunner instanceof ActionRunner)\n\t\t{\n\t\t\tthis.#actionRunner = props.actionRunner;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#actionRunner = new ActionRunner({path: this._path});\n\t\t}\n\t}\n\n\tget path()\n\t{\n\t\treturn this._path;\n\t}\n\n\tget actionRunner()\n\t{\n\t\treturn this.#actionRunner;\n\t}\n\n\tprocessResponse(response: Object)\n\t{\n\t\tif(response.status !== 'success')\n\t\t{\n\t\t\tBX.debug('Request was not successful');\n\t\t\tlet message = '';\n\n\t\t\tif(Array.isArray(response.errors) && response.errors.length > 0)\n\t\t\t{\n\t\t\t\tfor(const error of response.errors)\n\t\t\t\t{\n\t\t\t\t\tif(typeof error.message === 'string' && error.message !== '')\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage += `${error}\\n`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\treturn response.data ? response.data : null;\n\t}\n}","import BaseRepository from './baserepository';\nimport LocationJsonConverter from '../entity/location/locationjsonconverter';\nimport Location from '../entity/location';\nimport Address from '../entity/address';\nimport LocationObjectConverter from '../entity/location/locationobjectconverter';\n\nexport default class LocationRepository extends BaseRepository\n{\n\tconstructor(props = {})\n\t{\n\t\tprops.path = props.path || 'location.api.location';\n\t\tsuper(props);\n\t}\n\n\tfindParents(location: Location): Promise\n\t{\n\t\tif(!(location instanceof Location))\n\t\t{\n\t\t\tthrow new TypeError('location must be type of Location');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findParents',\n\t\t\t{\n\t\t\t\tlocation: LocationObjectConverter.convertLocationToObject(location)\n\t\t\t})\n\t\t\t.then(this.processResponse.bind(this))\n\t\t\t.then(this.#convertCollection.bind(this));\n\t}\n\n\tfindByExternalId(externalId: string, sourceCode: string, languageId: string): Promise\n\t{\n\t\tif(!externalId || !sourceCode || !languageId)\n\t\t{\n\t\t\tthrow new Error('externalId and sourceCode and languageId must be defined');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findByExternalId',\n\t\t\t{\n\t\t\t\texternalId: externalId,\n\t\t\t\tsourceCode: sourceCode,\n\t\t\t\tlanguageId: languageId\n\t\t\t})\n\t\t\t.then(this.processResponse.bind(this))\n\t\t\t.then(this.#convertLocation.bind(this));\n\t}\n\n\tfindById(locationId: number, languageId: string)\n\t{\n\t\tif(!locationId || !languageId)\n\t\t{\n\t\t\tthrow new Error('locationId and languageId must be defined');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findById',\n\t\t\t{\n\t\t\t\tid: locationId,\n\t\t\t\tlanguageId: languageId\n\t\t\t})\n\t\t\t.then(this.processResponse.bind(this))\n\t\t\t.then(this.#convertLocation.bind(this));\n\t}\n\n\t#convertCollection(collectionJsonData: Array): Array<Location>\n\t{\n\t\tif(!Array.isArray(collectionJsonData))\n\t\t{\n\t\t\tthrow new Error('Can\\'t convert location collection data');\n\t\t}\n\n\t\tconst result = [];\n\n\t\tcollectionJsonData.forEach((location) => {\n\t\t\tresult.push(\n\t\t\t\tthis.#convertLocation(location)\n\t\t\t);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#convertLocation(locationData)\n\t{\n\t\tif(!locationData)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif(typeof locationData !== 'object')\n\t\t{\n\t\t\tthrow new Error('Can\\'t convert location data');\n\t\t}\n\n\t\treturn LocationJsonConverter.convertJsonToLocation(locationData);\n\t}\n}","import {Address} from 'location.core';\nimport BaseRepository from './baserepository';\n\nexport default class AddressRepository extends BaseRepository\n{\n\tconstructor(props = {})\n\t{\n\t\tprops.path = 'location.api.address';\n\t\tsuper(props);\n\t}\n\n\tfindById(addressId: number)\n\t{\n\t\tif(addressId <= 0)\n\t\t{\n\t\t\tthrow new Error('addressId must be more than zero');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findById',\n\t\t\t{\n\t\t\t\taddressId: addressId,\n\t\t\t})\n\t\t\t.then(this.processResponse)\n\t\t\t.then((address) => { // address json data or null\n\t\t\t\tlet result = null;\n\n\t\t\t\tif(address)\n\t\t\t\t{\n\t\t\t\t\tresult = this.convertJsonToAddress(address);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t});\n\t}\n\n\tsave(address)\n\t{\n\t\tif(!address)\n\t\t{\n\t\t\tthrow new Error('address must be defined');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'save',\n\t\t\t{\n\t\t\t\taddress: address,\n\t\t\t})\n\t\t\t.then(this.processResponse)\n\t\t\t.then((response) => {\t//Address json data\n\t\t\t\tlet result = null;\n\n\t\t\t\tif(typeof response === 'object')\n\t\t\t\t{\n\t\t\t\t\tresult = this.convertJsonToAddress(response);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t});\n\t}\n\n\tconvertJsonToAddress(jsonData)\n\t{\n\t\treturn new Address(jsonData);\n\t}\n}\n\n","import BaseRepository from \"./baserepository\";\nimport Format from \"../entity/format\";\nimport {Type} from \"main.core\";\n\n/**\n * Class responsible for the addresses format obtaining.\n */\nexport default class FormatRepository extends BaseRepository\n{\n\tconstructor(props = {}) {\n\t\tprops.path = 'location.api.format';\n\t\tsuper(props);\n\t}\n\n\t/**\n\t * Find all available formats\n\t * @param {string} languageId\n\t * @returns {Promise}\n\t */\n\tfindAll(languageId: string): Promise\n\t{\n\t\tif(!Type.isString(languageId))\n\t\t{\n\t\t\tthrow new TypeError('languageId must be type of string');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findAll',\n\t\t\t{\n\t\t\t\tlanguageId: languageId\n\t\t\t})\n\t\t\t.then(this.processResponse)\n\t\t\t.then(\n\t\t\t\t(data) => this.convertFormatCollection(data)\n\t\t\t);\n\t}\n\n\t/**\n\t * Find address format by its code\n\t * @param {string} formatCode\n\t * @param {string} languageId\n\t * @returns {Promise}\n\t */\n\tfindByCode(formatCode: string, languageId: string): Promise\n\t{\n\t\tif(!Type.isString(formatCode))\n\t\t{\n\t\t\tthrow new TypeError('formatCode must be type of string');\n\t\t}\n\n\t\tif(!Type.isString(languageId))\n\t\t{\n\t\t\tthrow new TypeError('languageId must be type of string');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findByCode',\n\t\t\t{\n\t\t\t\tformatCode: formatCode,\n\t\t\t\tlanguageId: languageId\n\t\t\t})\n\t\t\t.then(this.processResponse)\n\t\t\t.then(this.convertFormatData);\n\t}\n\n\t/**\n\t * Find default address format\n\t * @param {string} languageId\n\t * @returns {Promise}\n\t */\n\tfindDefault(languageId: string): Promise\n\t{\n\t\tif(!Type.isString(languageId))\n\t\t{\n\t\t\tthrow new TypeError('languageId must be type of string');\n\t\t}\n\n\t\treturn this.actionRunner.run(\n\t\t\t'findDefault',\n\t\t\t{\n\t\t\t\tlanguageId: languageId\n\t\t\t})\n\t\t\t.then(this.processResponse)\n\t\t\t.then(this.convertFormatData);\n\t}\n\n\tconvertFormatCollection(formatDataCollection: Array): Array<Format>\n\t{\n\t\tif(!Type.isArray(formatDataCollection))\n\t\t{\n\t\t\tthrow new TypeError('Can\\'t convert format collection data');\n\t\t}\n\n\t\tlet result = [];\n\n\t\tformatDataCollection.forEach((format) => {\n\t\t\tresult.push(\n\t\t\t\tthis.convertFormatData(format)\n\t\t\t);\n\t\t});\n\t\t\n\t\treturn result;\n\t}\n\n\tconvertFormatData(formatData: {}): Format\n\t{\n\t\tif(!Type.isObject(formatData))\n\t\t{\n\t\t\tthrow new TypeError('Can\\'t convert format data');\n\t\t}\n\n\t\treturn new Format(formatData);\n\t}\n}\n","import BaseRepository from './baserepository';\n\nexport default class SourceRepository extends BaseRepository\n{\n\tconstructor(props = {}) {\n\t\tprops.path = 'location.api.source';\n\t\tsuper(props);\n\t}\n\n\tgetProps(): Promise\n\t{\n\t\treturn this.actionRunner.run('getProps', {})\n\t\t\t.then(this.processResponse);\n\t}\n}\n","// @flow\n\nimport {Location, Point} from 'location.core';\n\n/**\n * Autocomplete search parameters\n */\nexport type AutocompleteServiceParams = {\n\tbiasPoint: ?Point\n};\n\n/**\n * Base class for the source autocomplete services.\n */\nexport class AutocompleteServiceBase {\n\t/**\n\t * @param {String} text\n\t * @param {AutocompleteServiceParams} params\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tautocomplete(text: string, params: AutocompleteServiceParams): Promise<Array<Location>, Error> {\n\t\tthrow new Error('Method autocomplete() Must be implemented');\n\t}\n}\n","import { md5 } from 'main.md5';\n\nconst MAX_ITEMS_CNT = 100;\nconst MAX_SIZE_IN_BYTES = 5 * 1024 * 1024;\nconst CACHE_TTL = 3600;\n\nexport default class AutocompleteCache\n{\n\tstatic set(sourceCode: string, params: Object, data: Object)\n\t{\n\t\tconst results = AutocompleteCache.#getAll(sourceCode);\n\n\t\tresults.push({\n\t\t\thash: AutocompleteCache.#makeParamsHash(params),\n\t\t\tdata: data,\n\t\t});\n\n\t\tBX.localStorage.set(\n\t\t\tAutocompleteCache.#getStorageName(sourceCode),\n\t\t\tAutocompleteCache.#getResultsToStore(results),\n\t\t\tCACHE_TTL\n\t\t);\n\t}\n\n\tstatic get(sourceCode: string, params: Object): ?Object\n\t{\n\t\tconst hash = AutocompleteCache.#makeParamsHash(params);\n\t\tconst results = AutocompleteCache.#getAll(sourceCode);\n\n\t\tfor (const result of results)\n\t\t{\n\t\t\tif (result && result.hash === hash)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tstatic #getResultsToStore(results: Array): Array\n\t{\n\t\tif (new Blob([JSON.stringify(results)]).size > MAX_SIZE_IN_BYTES)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tif (results.length > MAX_ITEMS_CNT)\n\t\t{\n\t\t\treturn results.slice(results.length - MAX_ITEMS_CNT);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tstatic #getAll(sourceCode: string): Array\n\t{\n\t\tconst currentResults = BX.localStorage.get(AutocompleteCache.#getStorageName(sourceCode));\n\n\t\treturn Array.isArray(currentResults) ? currentResults : [];\n\t}\n\n\tstatic #makeParamsHash(params: Object): string\n\t{\n\t\treturn md5(JSON.stringify(params));\n\t}\n\n\tstatic #getStorageName(sourceCode: string): string\n\t{\n\t\treturn `location${sourceCode}AutocompleteCache`;\n\t}\n}\n","import {Location} from 'location.core';\n\nexport type BasePhotoServiceRequestPhotosPropsType = {\n\tlocation: Location,\n\tthumbnailHeight: number,\n\tthumbnailWidth: number,\n\tmaxPhotoCount: number\n}\n\nexport default class PhotoServiceBase\n{\n\trequestPhotos(props: BasePhotoServiceRequestPhotosPropsType): Promise\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n}","import { EventEmitter } from 'main.core.events';\nimport {\n\tLocation,\n\tLocationType,\n} from 'location.core';\n\n/**\n * Base class for source maps\n */\nexport default class MapBase extends EventEmitter\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.Location.Core.MapBase');\n\t}\n\n\trender(props: Object): Promise\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tset location(location: Location): void\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tpanTo(latitude: string, longitude: string): void\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tset mode(mode: string): void\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tset zoom(zoom: number): void\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tstatic getZoomByLocation(location: ?Location): number\n\t{\n\t\tconst defaultZoom = 18;\n\t\tif (!location)\n\t\t{\n\t\t\treturn defaultZoom;\n\t\t}\n\n\t\tconst locationType = location.type;\n\t\tif (locationType <= 0)\n\t\t{\n\t\t\treturn defaultZoom;\n\t\t}\n\n\t\tif (locationType < LocationType.COUNTRY)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse if (locationType === LocationType.COUNTRY)\n\t\t{\n\t\t\treturn 4;\n\t\t}\n\t\telse if (locationType <= LocationType.ADM_LEVEL_1)\n\t\t{\n\t\t\treturn 6;\n\t\t}\n\t\telse if (locationType <= LocationType.LOCALITY)\n\t\t{\n\t\t\treturn 11;\n\t\t}\n\t\telse if (locationType <= LocationType.STREET)\n\t\t{\n\t\t\treturn 16;\n\t\t}\n\n\t\treturn defaultZoom;\n\t}\n\n\tonLocationChangedEventSubscribe(listener: function): void\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tonMapShow()\n\t{\n\n\t}\n\n\tdestroy()\n\t{\n\n\t}\n}\n","import AutocompleteServiceBase from \"./autocompleteservicebase\";\nimport PhotoServiceBase from \"./photoservicebase\";\nimport MapBase from \"./mapbase\";\n\n/**\n * Base class for the sources\n */\nexport default class SourceBase\n{\n\tget sourceCode(): string\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tget map(): MapBase\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tget autocompleteService(): AutocompleteServiceBase\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tget photoService(): PhotoServiceBase\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n\n\tget geocodingService()\n\t{\n\t\tthrow new Error('Must be implemented');\n\t}\n}","import {Location} from 'location.core';\n\n/**\n * Base class for the source geocoding service\n */\nexport default class GeocodingServiceBase\n{\n\tgeocode(addressString: string): Promise<Array<Location>, Error>\n\t{\n\t\tif(!addressString)\n\t\t{\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.geocodeConcrete(addressString);\n\t}\n\n\tgeocodeConcrete(addressString: string): Promise<Array<Location>, Error>\n\t{\n\t\tthrow new Error('Method geocodeConcrete() must be implemented');\n\t}\n}","export default class ControlMode\n{\n\tstatic get edit()\n\t{\n\t\treturn 'edit';\n\t}\n\n\tstatic get view()\n\t{\n\t\treturn 'view';\n\t}\n\n\tstatic isValid(mode: string)\n\t{\n\t\treturn mode === ControlMode.edit || mode === ControlMode.view;\n\t}\n}","export default class LocationFieldType\n{\n\tstatic POSTAL_CODE = 50;\n\tstatic ISO_3166_1_ALPHA_2 = 1000;\n}","export class SourceCreationError extends Error\n{\n}\n\nexport class MethodNotImplemented extends Error\n{\n}\n","import {EventEmitter} from 'main.core.events';\n\nexport default class ErrorPublisher extends EventEmitter\n{\n\tstatic #instance = null;\n\tstatic #onErrorEvent = 'onError';\n\n\tstatic getInstance()\n\t{\n\t\tif(ErrorPublisher.#instance === null)\n\t\t{\n\t\t\tErrorPublisher.#instance = new ErrorPublisher();\n\t\t}\n\n\t\treturn ErrorPublisher.#instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.Location.Core.ErrorPublisher');\n\t}\n\n\tnotify(errors: Error[])\n\t{\n\t\tthis.emit(ErrorPublisher.#onErrorEvent, {errors});\n\t}\n\n\tsubscribe(listener)\n\t{\n\t\tsuper.subscribe(ErrorPublisher.#onErrorEvent, listener);\n\t}\n}","import JsonConverter from '../entity/address/converter/jsonconverter';\nimport Address from '../entity/address';\n\nexport default class Storage\n{\n\t#lastAddressLocalStorageKey = `bitrixLocationLastAddress`;\n\n\tstatic #instance = null;\n\n\tstatic getInstance()\n\t{\n\t\tif(Storage.#instance === null)\n\t\t{\n\t\t\tStorage.#instance = new Storage();\n\t\t}\n\n\t\treturn Storage.#instance;\n\t}\n\n\tset lastAddress(address: ?Address)\n\t{\n\t\tif (address)\n\t\t{\n\t\t\tBX.localStorage.set(this.#lastAddressLocalStorageKey, {'json': address.toJson()}, 86400 * 30);\n\t\t}\n\t}\n\tget lastAddress()\n\t{\n\t\tconst lastAddress = BX.localStorage.get(this.#lastAddressLocalStorageKey);\n\t\tif (lastAddress && lastAddress['json'])\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn JsonConverter.convertJsonToAddress(JSON.parse(lastAddress['json']));\n\t\t\t}\n\t\t\tcatch(e) {}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * Base class for the working with latitude and longitude\n */\nexport default class Point\n{\n\t/** {String} */\n\t#latitude;\n\t/** {String} */\n\t#longitude;\n\n\tconstructor(latitude: string, longitude: string)\n\t{\n\t\tthis.#latitude = latitude;\n\t\tthis.#longitude = longitude;\n\t}\n\n\tget latitude(): string\n\t{\n\t\treturn this.#latitude;\n\t}\n\n\tget longitude(): string\n\t{\n\t\treturn this.#longitude;\n\t}\n\n\ttoArray(): Array\n\t{\n\t\treturn [this.latitude, this.longitude];\n\t}\n\n\tstatic fromJson(jsonData): Point\n\t{\n\t\treturn new Point(jsonData.latitude, jsonData.longitude);\n\t}\n}","export default class DistanceCalculator\n{\n\t/**\n\t * @param {number} lat1\n\t * @param {number} lon1\n\t * @param {number} lat2\n\t * @param {number} lon2\n\t * @returns {number}\n\t */\n\tstatic getDistanceFromLatLonInKm(lat1: number, lon1: number, lat2: number, lon2: number): number\n\t{\n\t\tconst R = 6371; // Radius of the earth in km\n\t\tconst dLat = DistanceCalculator.deg2rad(lat2 - lat1);\n\t\tconst dLon = DistanceCalculator.deg2rad(lon2 - lon1);\n\t\tconst a =\tMath.sin(dLat / 2) * Math.sin(dLat / 2)\n\t\t\t+ Math.cos(DistanceCalculator.deg2rad(lat1)) * Math.cos(DistanceCalculator.deg2rad(lat2))\n\t\t\t* Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n\t\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\treturn R * c;\n\t}\n\n\t/**\n\t * @param {number} deg\n\t * @returns {number}\n\t */\n\tstatic deg2rad(deg: number): number\n\t{\n\t\treturn deg * (Math.PI / 180);\n\t}\n}\n"],"names":["Field","props","type","Error","parseInt","FieldCollection","_classPrivateFieldInitSpec","fields","isFieldExists","field","types","Object","keys","sort","a","b","result","length","addressFieldCollection","upTo","areEqual","Array","isArray","setField","addressFieldCollection1","addressFieldCollection2","getField","value","AddressField","AddressFieldCollection","AddressLink","entityId","entityType","AddressLinkCollection","links","link","push","addLink","FormatField","name","description","FormatFieldCollection","fieldsData","forEach","data","LocationType","AddressType","FormatTemplate","template","FormatTemplateCollection","templateData","hasOwnProperty","setTemplate","isTemplateExists","FormatTemplateType","Format","Type","isUndefined","languageId","TypeError","code","templateAutocomplete","templateAddressLine1","delimiter","fieldForUnRecognized","UNKNOWN","fieldCollection","isObject","initFields","collection","templateCollection","DEFAULT","getTemplate","STR_DELIMITER_PLACEHOLDER","REGEX_COMMA_AMONG_EMPTY_SPACE","REGEX_GROUP_DELIMITER","REGEX_GROUP_FIELD_TEXT","REGEX_GROUP_FIELD_NAME","REGEX_GROUP_FIELD_LIST_END","REGEX_GROUP_END","REGEX_PART_FROM_DELIMITER_TO_FIELD_LIST","REGEX_GROUP_PART_BEFORE_FIELDS","ERR_PARSE_GROUP_START_POSITION","ERR_PARSE_GROUP_START","ERR_PARSE_GROUP_DELIMITER","ERR_PARSE_PART_FROM_DELIMITER_TO_FIELD_LIST","ERR_PARSE_GROUP_FIELD_TEXT","ERR_PARSE_GROUP_FIELD_NAME","ERR_PARSE_GROUP_FIELD","ERR_PARSE_GROUP_FIELD_LIST","ERR_PARSE_GROUP_FIELD_LIST_DELIMITER","ERR_PARSE_GROUP_FIELD_LIST_END","ERR_PARSE_GROUP_END","ERR_PARSE_GROUP","StringTemplateConverter","htmlEncode","format","context","errorCodes","getErrorCodes","errors","i","isPlainObject","errorInfo","needHeader","paramName","paramValue","needPrint","isString","isNumber","isFloat","isBoolean","templateValue","replace","clearContextError","clearContextInfo","text","delimiterStartPosition","regEx","RegExp","lastIndex","matches","exec","index","unescapeText","substr","addContextError","textBlockStartPosition","fieldName","parts","split","namePart","modifiersPart","address","fieldModifiers","getFieldValue","indexOf","toUpperCase","fieldNameStartPosition","fieldParts","splitFieldName","fieldValue","getAddressFieldValue","markerStartPosition","fieldInfo","fieldStartPosition","parseFieldText","unshiftError","clearContextInfoAndError","parseFieldName","parseGroup","parseFieldListDelimiter","parseFieldListEnd","addContextErrors","fieldListStartPosition","fieldValues","isFieldListEnd","parseField","startSearchPosition","groupStartPosition","delimiterValue","parseGroupStart","parseGroupDelimiter","parseGroupFieldList","parseGroupEnd","Set","join","reg","blocks","position","lastBlockIndex","lastBlock","info","unshift","splice","templateLength","blockStartPosition","blockLength","appendTextBlock","appendGroupBlock","createContext","parseBlocks","temp","Text","encode","templateConverter","convert","fieldType","localityValue","LOCALITY","localityValueUpper","targetValueUpper","targetValueSubstr","StringConverter","strategyType","contentType","STRATEGY_TYPE_TEMPLATE","STRATEGY_TYPE_TEMPLATE_COMMA","STRATEGY_TYPE_TEMPLATE_NL","STRATEGY_TYPE_TEMPLATE_BR","convertAddressToStringTemplate","STRATEGY_TYPE_FIELD_SORT","fieldSorter","convertAddressToStringByField","STRATEGY_TYPE_FIELD_TYPE","sortResult","needHtmlEncode","CONTENT_TYPE_HTML","BX","debug","Address","values","JsonConverter","jsonData","obj","id","latitude","longitude","location","JSON","parse","toJson","stringify","map","entries","setFieldValue","Location","convertAddressToJson","console","error","strategy","convertAddressToString","locationObj","getMaxFieldType","clearLinks","LocationField","LocationFieldCollection","LocationObjectConverter","externalId","sourceCode","LocationJsonConverter","initData","convertLocationToObject","convertLocationToJson","addressObj","ActionRunner","path","action","ajax","runAction","BaseRepository","_path","actionRunner","response","status","message","LocationRepository","_classPrivateMethodInitSpec","run","then","processResponse","bind","_classPrivateMethodGet","locationId","collectionJsonData","locationData","convertJsonToLocation","AddressRepository","addressId","convertJsonToAddress","FormatRepository","convertFormatCollection","formatCode","convertFormatData","formatDataCollection","formatData","SourceRepository","AutocompleteServiceBase","params","MAX_ITEMS_CNT","MAX_SIZE_IN_BYTES","CACHE_TTL","AutocompleteCache","results","hash","localStorage","set","Blob","size","slice","currentResults","get","md5","PhotoServiceBase","MapBase","setEventNamespace","listener","mode","zoom","defaultZoom","locationType","COUNTRY","ADM_LEVEL_1","STREET","EventEmitter","SourceBase","GeocodingServiceBase","addressString","Promise","resolve","geocodeConcrete","ControlMode","edit","view","LocationFieldType","SourceCreationError","MethodNotImplemented","ErrorPublisher","emit","Storage","lastAddress","e","_classStaticPrivateFieldSpecGet","_classStaticPrivateFieldSpecSet","Point","DistanceCalculator","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","Math","sin","cos","c","atan2","sqrt","deg","PI"],"mappings":"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"}