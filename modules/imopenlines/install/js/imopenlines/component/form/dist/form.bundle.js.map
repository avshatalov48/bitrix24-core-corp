{"version":3,"file":"form.bundle.js","sources":["../src/form.js"],"sourcesContent":["/**\n * Bitrix Messenger\n * Form Vue component\n *\n * @package bitrix\n * @subpackage im\n * @copyright 2001-2019 Bitrix\n */\n\nimport {Vue} from \"ui.vue\";\nimport {Vuex} from \"ui.vue.vuex\";\nimport 'im.component.message';\n\nBX.Vue.cloneComponent('bx-test-form', 'bx-messenger-message',\n\t{\n\t\tdata()\n\t\t{\n\t\t\treturn {\n\t\t\t\tformValue: '',\n\t\t\t}\n\t\t},\n\t\tcreated()\n\t\t{\n\t\t},\n\t\tcomputed:\n\t\t\t{\n\t\t\t\tlocalize()\n\t\t\t\t{\n\t\t\t\t\treturn Vue.getFilteredPhrases('BX_LIVECHAT_', this.$root.$bitrixMessages);\n\t\t\t\t},\n\t\t\t\twasFilled()\n\t\t\t\t{\n\t\t\t\t\treturn !!this.message.params.CRM_FORM_VALUE;\n\t\t\t\t},\n\t\t\t\t...Vuex.mapState({\n\t\t\t\t\twidget: state => state.widget,\n\t\t\t\t}),\n\t\t\t},\n\t\tmethods:\n\t\t{\n\t\t\tonFillForm()\n\t\t\t{\n\t\t\t\tthis.$root.$bitrixRestClient.callMethod('imopenlines.widget.form.fill', {\n\t\t\t\t\t'CRM_FORM_VALUE' : this.formValue,\n\t\t\t\t\t'MESSAGE_ID' : this.message.id,\n\t\t\t\t}).then(response => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\ttemplate: `\n\t\t<div class=\"bx-im-message bx-im-message-without-menu bx-im-message-without-avatar\">\n\t\t\t<div v-if=\"!wasFilled\" class=\"bx-im-message-content\">\n\t\t\t\t<div style=\"margin-bottom: 10px;\">Form component with id {{message.params.CRM_FORM_ID}}</div>\n\t\t\t\t<div style=\"margin-bottom: 10px; display: flex;\">\n\t\t\t\t\t<input type=\"text\" v-model=\"formValue\" style=\"margin-right: 15px;\" />\n\t\t\t\t\t<button @click=\"onFillForm\" class=\"bx-im-textarea-send-button bx-im-textarea-send-button-bright-arrow\" style=\"background-color: rgb(23, 163, 234);\"></button>\t\n\t\t\t\t</div>\n\t\t\t\t<!--#PARENT_TEMPLATE#-->\n\t\t\t</div>\n\t\t\t<div v-else class=\"bx-im-message-content\">\n\t\t\t\tForm was already filled with the value - \"{{message.params.CRM_FORM_VALUE[0]}}\"!\n\t\t\t</div>\n\t\t</div>\n\t`\n\t});"],"names":["BX","Vue","cloneComponent","data","formValue","created","computed","localize","getFilteredPhrases","$root","$bitrixMessages","wasFilled","message","params","CRM_FORM_VALUE","Vuex","mapState","widget","state","methods","onFillForm","$bitrixRestClient","callMethod","id","then","response","console","log","catch","error","template"],"mappings":";;;CAAA;;;;;;;;AASA,CAIAA,EAAE,CAACC,GAAH,CAAOC,cAAP,CAAsB,cAAtB,EAAsC,sBAAtC,EACC;CACCC,EAAAA,IADD,kBAEC;CACC,WAAO;CACNC,MAAAA,SAAS,EAAE;CADL,KAAP;CAGA,GANF;CAOCC,EAAAA,OAPD,qBAQC,EARD;CAUCC,EAAAA,QAAQ;CAENC,IAAAA,QAFM,sBAGN;CACC,aAAON,UAAG,CAACO,kBAAJ,CAAuB,cAAvB,EAAuC,KAAKC,KAAL,CAAWC,eAAlD,CAAP;CACA,KALK;CAMNC,IAAAA,SANM,uBAON;CACC,aAAO,CAAC,CAAC,KAAKC,OAAL,CAAaC,MAAb,CAAoBC,cAA7B;CACA;CATK,KAUHC,gBAAI,CAACC,QAAL,CAAc;CAChBC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;CAAA,aAAIA,KAAK,CAACD,MAAV;CAAA;CADG,GAAd,CAVG,CAVT;CAwBCE,EAAAA,OAAO,EACP;CACCC,IAAAA,UADD,wBAEC;CACC,WAAKX,KAAL,CAAWY,iBAAX,CAA6BC,UAA7B,CAAwC,8BAAxC,EAAwE;CACvE,0BAAmB,KAAKlB,SAD+C;CAEvE,sBAAe,KAAKQ,OAAL,CAAaW;CAF2C,OAAxE,EAGGC,IAHH,CAGQ,UAAAC,QAAQ,EAAI;CACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;CACA,OALD,EAKGG,KALH,CAKS,UAAAC,KAAK,EAAI;CACjBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;CACA,OAPD;CAQA;CAXF,GAzBD;CAsCCC,EAAAA,QAAQ;CAtCT,CADD;;;;"}