this.BX=this.BX||{};this.BX.OpenLines=this.BX.OpenLines||{};this.BX.OpenLines.v2=this.BX.OpenLines.v2||{};(function(e,t,i,n,o,l){"use strict";const c=[{fieldName:["id","sessionId"],targetFieldName:"id",checkFunction:o.Type.isNumber,formatFunction:l.convertToNumber},{fieldName:"chatId",targetFieldName:"chatId",checkFunction:o.Type.isNumber,formatFunction:l.convertToNumber},{fieldName:"operatorId",targetFieldName:"operatorId",checkFunction:o.Type.isNumber,formatFunction:l.convertToNumber},{fieldName:"status",targetFieldName:"status",checkFunction:o.Type.isString,formatFunction:l.convertToString},{fieldName:"queueId",targetFieldName:"queueId",checkFunction:o.Type.isNumber,formatFunction:l.convertToNumber},{fieldName:"pinned",targetFieldName:"pinned",checkFunction:o.Type.isBoolean},{fieldName:"isClosed",targetFieldName:"isClosed",checkFunction:o.Type.isBoolean}];var s=babelHelpers.classPrivateFieldLooseKey("formatFields");class r extends i.BuilderModel{constructor(...e){super(...e);Object.defineProperty(this,s,{value:a})}getName(){return"sessions"}getState(){return{collection:{}}}getElementState(){return{id:0,chatId:0,operatorId:0,status:"",queueId:0,pinned:false,isClosed:false}}getGetters(){return{getById:e=>(t,i=false)=>{if(!e.collection[t]&&i){return this.getElementState()}if(!e.collection[t]&&!i){return null}return e.collection[t]},getByChatId:e=>(t,i=false)=>{const n=Object.values(e.collection).find((e=>e.chatId===t));if(!n&&i){return this.getElementState()}if(!n&&!i){return null}return n}}}getActions(){return{set:(e,t)=>{let i=t;if(!Array.isArray(i)&&o.Type.isPlainObject(i)){i=[i]}const n=[];i.map((e=>babelHelpers.classPrivateFieldLooseBase(this,s)[s](e))).forEach((t=>{const i=e.state.collection[t.id];if(i){e.commit("update",{id:i.id,fields:{...t}})}else{n.push({...this.getElementState(),...t})}}));if(n.length>0){e.commit("add",n)}},pin:(e,t)=>{const i=e.state.collection[t.id];if(!i){return}e.commit("update",{id:i.id,fields:{pinned:t.action}})}}}getMutations(){return{add:(e,t)=>{const i=t;const n=e;const o=i[0].chatId;const l=Object.values(n.collection).find((e=>e.chatId===o));if(l){delete n.collection[l.id]}i.forEach((e=>{n.collection[e.id]=e}))},update:(e,t)=>{const i=e;const n=e.collection[t.id];i.collection[t.id]={...n,...t.fields}}}}}function a(e){return l.formatFieldsWithConfig(e,c)}const d=[{fieldName:["id","dialogId"],targetFieldName:"dialogId",checkFunction:l.isNumberOrString,formatFunction:l.convertToString},{fieldName:["chatId"],targetFieldName:"chatId",checkFunction:o.Type.isNumber,formatFunction:l.convertToNumber},{fieldName:"messageId",targetFieldName:"messageId",checkFunction:l.isNumberOrString},{fieldName:"sessionId",targetFieldName:"sessionId",checkFunction:o.Type.isNumber,formatFunction:l.convertToNumber},{fieldName:"draft",targetFieldName:"draft",checkFunction:o.Type.isPlainObject,formatFunction:l.prepareDraft},{fieldName:"unread",targetFieldName:"unread",checkFunction:o.Type.isBoolean},{fieldName:"pinned",targetFieldName:"pinned",checkFunction:o.Type.isBoolean},{fieldName:"liked",targetFieldName:"liked",checkFunction:o.Type.isBoolean}];var u=babelHelpers.classPrivateFieldLooseKey("formatFields");class m extends i.BuilderModel{constructor(...e){super(...e);Object.defineProperty(this,u,{value:f})}getName(){return"recentOpenLines"}getState(){return{collection:{}}}getElementState(){return{dialogId:"0",chatId:0,messageId:0,sessionId:0,draft:{text:"",date:null},unread:false,pinned:false,liked:false}}getGetters(){return{getOpenLinesCollection:e=>{const t=[];Object.keys(e.collection).forEach((i=>{const n=this.store.getters["chats/get"](i);if(n){t.push(e.collection[i])}}));return t},getSession:e=>(i,n=false)=>{const o=e.collection[i];if(!o&&n){return this.getElementState()}if(!o&&!n){return null}const l=o.sessionId;return t.Core.getStore().getters["sessions/getById"](l)},get:e=>t=>{if(!e.collection[t]){return null}return e.collection[t]},getChatIdByDialogId:e=>t=>{if(!e.collection[t]){return null}return e.collection[t].chatId}}}getActions(){return{set:(e,t)=>{let i=t;if(!Array.isArray(i)&&o.Type.isPlainObject(i)){i=[i]}const n=[];const l=[];i.map((e=>babelHelpers.classPrivateFieldLooseBase(this,u)[u](e))).forEach((t=>{const i=e.state.collection[t.dialogId];if(i){l.push({dialogId:i.dialogId,fields:{...t}})}else{n.push({...this.getElementState(),...t})}}));if(n.length>0){e.commit("add",n)}if(l.length>0){e.commit("update",l)}},delete:(e,t)=>{const i=e.state.collection[t.id];if(!i){return}e.commit("delete",{id:i.dialogId})}}}getMutations(){return{add:(e,t)=>{let i=t;const n=e;if(!Array.isArray(i)&&o.Type.isPlainObject(i)){i=[i]}i.forEach((e=>{n.collection[e.dialogId]=e}))},update:(e,t)=>{let i=t;const n=e;if(!Array.isArray(i)&&o.Type.isPlainObject(i)){i=[i]}i.forEach((({dialogId:t,fields:i})=>{const o=e.collection[t];n.collection[t]={...o,...i}}))},delete:(e,t)=>{delete e.collection[t.id]}}}}function f(e){return l.formatFieldsWithConfig(e,d)}const g=[{fieldName:["id","queueId"],targetFieldName:"id",formatFunction:l.convertToNumber},{fieldName:["lineName","name"],targetFieldName:"lineName",checkFunction:o.Type.isString,formatFunction:l.convertToString},{fieldName:["type","queueType"],targetFieldName:"type",checkFunction:o.Type.isString,formatFunction:l.convertToString},{fieldName:["isActive"],targetFieldName:"isActive",checkFunction:o.Type.isBoolean}];var p=babelHelpers.classPrivateFieldLooseKey("formatFields");class h extends i.BuilderModel{constructor(...e){super(...e);Object.defineProperty(this,p,{value:F})}getName(){return"queue"}getState(){return{collection:{}}}getElementState(){return{id:0,lineName:"",type:"",isActive:true}}getGetters(){return{getTypeById:e=>(t,i=false)=>{if(!e.collection[t]&&i){return this.getElementState()}if(!e.collection[t]&&!i){return null}return e.collection[t].type}}}getActions(){return{set:(e,t)=>{let i=t;if(!Array.isArray(i)&&o.Type.isPlainObject(i)){i=[i]}const n=[];i.map((e=>babelHelpers.classPrivateFieldLooseBase(this,p)[p](e))).forEach((t=>{const i=e.state.collection[t.id];if(i){e.commit("update",{id:i.id,fields:{...t}})}else{n.push({...this.getElementState(),...t})}}));if(n.length>0){e.commit("add",n)}},delete:(e,t)=>{const i=e.state.collection[t.id];if(!i){return}e.commit("delete",{id:i.dialogId})}}}getMutations(){return{add:(e,t)=>{const i=t;const n=e;i.forEach((e=>{n.collection[e.id]=e}))},update:(e,t)=>{const i=e;const n=e.collection[t.id];i.collection[t.id]={...n,...t.fields}},delete:(e,t)=>{delete e.collection[t.id]}}}}function F(e){return l.formatFieldsWithConfig(e,g)}const N=[m,r,h];e.SessionsModel=r;e.OpenLinesRecentModel=m;e.QueueModel=h;e.OpenLinesModels=N})(this.BX.OpenLines.v2.Model=this.BX.OpenLines.v2.Model||{},BX.Messenger.v2.Application,BX.Vue3.Vuex,BX.OpenLines.v2.Const,BX,BX.Messenger.v2.Model);
//# sourceMappingURL=registry.bundle.map.js