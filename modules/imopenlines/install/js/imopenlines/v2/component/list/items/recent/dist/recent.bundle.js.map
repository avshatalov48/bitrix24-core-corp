{"version":3,"file":"recent.bundle.js","sources":["../src/components/recent-item/components/message-text.js","../src/components/recent-item/components/item-counter.js","../src/components/recent-item/recent-item.js","../src/components/recent-group.js","../src/components/empty-state.js","../src/recent-list.js"],"sourcesContent":["import { Utils } from 'im.v2.lib.utils';\n\nimport '../css/recent-item.css';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type { ImolModelRecentItem } from 'imopenlines.v2.model';\n\n// @vue/component\n\nexport const MessageText = {\n\tname: 'MessageText',\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trecentItems(): ImolModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tmessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['recentOpenlines/getMessage'](this.recentItems.dialogId);\n\t\t},\n\t\tformattedMessageText(): string\n\t\t{\n\t\t\tconst SPLIT_INDEX = 27;\n\n\t\t\treturn Utils.text.insertUnseenWhitespace(this.message.text, SPLIT_INDEX);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent-item__text_date\">\n\t\t\t<span class=\"bx-imol-list-recent-item__message_text\">{{formattedMessageText}}</span>\n\t\t</div>\n\t`,\n};\n","import type { ImModelChat } from 'im.v2.model';\nimport type { ImolModelRecentItem } from 'imopenliens.v2.model';\n\n// @vue/component\n\nexport const ItemCounter = {\n\tname: 'ItemCounter',\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trecentItem(): ImolModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.recentItem.dialogId, true);\n\t\t},\n\t\ttotalCounter(): number\n\t\t{\n\t\t\treturn this.openLinesCounter;\n\t\t},\n\t\topenLinesCounter(): number\n\t\t{\n\t\t\treturn this.$store.getters['counters/getSpecificLinesCounter'](this.dialog.chatId);\n\t\t},\n\t\tformattedCounter(): string\n\t\t{\n\t\t\treturn this.formatCounter(this.totalCounter);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatCounter(counter: number): string\n\t\t{\n\t\t\treturn counter > 99 ? '99+' : counter.toString();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent-item__counter_wrap\">\n\t\t\t<div class=\"bx-imol-list-recent-item__counter_container\">\n\t\t\t\t<div v-if=\"formattedCounter > 0\" class=\"bx-imol-list-recent-item__counter_number\">\n\t\t\t\t\t{{ formattedCounter }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { ChatTitle, ChatAvatar, AvatarSize } from 'im.v2.component.elements';\nimport { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport { MessageText } from './components/message-text';\nimport { ItemCounter } from './components/item-counter';\n\nimport './css/recent-item.css';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { ImolModelRecentItem } from 'imopenlines.v2.model';\n\n// @vue/component\n\nexport const RecentItem = {\n\tname: 'RecentItem',\n\tcomponents: { ChatTitle, ChatAvatar, MessageText, ItemCounter },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trecentItem(): ImolModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tAvatarSize: () => AvatarSize,\n\t\tmessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['recentOpenlines/getMessage'](this.item.dialogId);\n\t\t},\n\t\tformattedDate(): string\n\t\t{\n\t\t\treturn this.formatDate(this.message.date);\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.item.dialogId, true);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatDate(date): string\n\t\t{\n\t\t\treturn DateFormatter.formatByTemplate(date, DateTemplate.recent);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent__item\">\n\t\t\t<div class=\"bx-imol-list-recent-item__main_content\">\n\t\t\t\t<div class=\"bx-imol-list-recent-item__avatar_container\">\n\t\t\t\t\t<div class=\"bx-imol-list-recent-item__avatar_content\">\n\t\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t\t:avatarDialogId=\"recentItem.dialogId\"\n\t\t\t\t\t\t\t:contextDialogId=\"recentItem.dialogId\"\n\t\t\t\t\t\t\t:size=\"AvatarSize.XL\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-imol-list-recent-item__content_right\">\n\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_header\">\n\t\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_title\">\n\t\t\t\t\t\t\t<ChatTitle :dialogId=\"recentItem.dialogId\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_date\">\n\t\t\t\t\t\t\t<span class=\"bx-imol-list-recent-item__content_date\">{{formattedDate}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_bottom\">\n\t\t\t\t\t\t<MessageText :item=\"recentItem\" />\n\t\t\t\t\t\t<ItemCounter :item=\"recentItem\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { RecentItem } from './recent-item/recent-item';\n\n// @vue/component\n\nexport const RecentGroup = {\n\tname: 'RecentGroup',\n\tcomponent: { RecentItem },\n\temits: ['chatClick'],\n\tprops:\n\t{\n\t\tgroup: {\n\t\t\trequired: true,\n\t\t},\n\t\tkey: {\n\t\t\trequired: true,\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonClick(dialogId)\n\t\t{\n\t\t\tthis.$emit('chatClick', dialogId);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div>\n\t\t\t<div v-if=\"group.length !== 0\">\n\t\t\t\t<span class=\"bx-imol-list-recent__group_name\" :class=\"'bx-imol-list-recent__group_name_' + key\">{{key}}</span>\n\t\t\t\t<RecentItem\n\t\t\t\t\tv-for=\"item in group\"\n\t\t\t\t\t@click=\"onClick(item.dialogId)\"\n\t\t\t\t\t:item=\"item\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","// @vue/component\n\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tcomputed:\n\t{\n\t\tmessage(): string\n\t\t{\n\t\t\treturn this.loc('IMOL_LIST_RECENT_EMPTY_MESSAGE');\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent-empty-state__container\">\n\t\t\t<p class=\"bx-im-list-openlines-empty-state__text\">\n\t\t\t\t{{message}}\n\t\t\t</p>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { RecentService } from 'imopenlines.v2.provider.service';\nimport { SessionManager, SessionStatus } from 'imopenlines.v2.lib.session-status';\nimport { RecentGroup } from './components/recent-group';\nimport { EmptyState } from './components/empty-state';\n\nimport './css/recent-list.css';\n\nimport type { ImolModelRecentItem } from 'imopenlines.v2.model';\nimport type { ImolModelSession } from 'imopenlines.v2.model';\n\n// @vue/component\n\nexport const RecentList = {\n\tname: 'RecentList',\n\tcomponents: { EmptyState, RecentGroup },\n\temits: ['chatClick'],\n\tcomputed:\n\t{\n\t\tcollection(): ImolModelRecentItem[]\n\t\t{\n\t\t\treturn Core.getStore().getters['recentOpenlines/getOpenlinesCollection'];\n\t\t},\n\t\tgroups(): Object\n\t\t{\n\t\t\treturn this.setGroups();\n\t\t},\n\t\tisEmptyCollection(): boolean\n\t\t{\n\t\t\treturn this.collection.length === 0;\n\t\t},\n\t},\n\tasync created(): Promise\n\t{\n\t\tawait this.getOpenlinesService().requestItems();\n\t},\n\tmethods:\n\t{\n\t\tonClick(dialogId)\n\t\t{\n\t\t\tthis.$emit('chatClick', dialogId);\n\t\t},\n\t\tgetOpenlinesService(): RecentService\n\t\t{\n\t\t\tthis.service = new RecentService();\n\n\t\t\treturn this.service;\n\t\t},\n\t\tgetSession(dialogId): ImolModelSession | null\n\t\t{\n\t\t\treturn this.$store.getters['recentOpenlines/getSession'](dialogId);\n\t\t},\n\t\tgetStatus(dialogId): string\n\t\t{\n\t\t\tconst session = this.getSession(dialogId);\n\n\t\t\tif (session)\n\t\t\t{\n\t\t\t\treturn session.status;\n\t\t\t}\n\n\t\t\treturn 'NEW';\n\t\t},\n\t\tisSessionStatusAvailable(statusName): Object\n\t\t{\n\t\t\treturn SessionManager.isSessionAvailable(statusName);\n\t\t},\n\t\tsetGroups(): Object\n\t\t{\n\t\t\tconst groups = {\n\t\t\t\tnew: [],\n\t\t\t\twork: [],\n\t\t\t\tanswered: [],\n\t\t\t};\n\n\t\t\tthis.collection.forEach((item: ImolModelRecentItem) => {\n\t\t\t\tconst status = this.getStatus(item.dialogId);\n\n\t\t\t\tif (this.isSessionStatusAvailable(SessionStatus.NEW)[status] || status === 'NEW')\n\t\t\t\t{\n\t\t\t\t\tgroups.new.push(item);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isSessionStatusAvailable(SessionStatus.WORK)[status])\n\t\t\t\t{\n\t\t\t\t\tgroups.work.push(item);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isSessionStatusAvailable(SessionStatus.ANSWERED)[status])\n\t\t\t\t{\n\t\t\t\t\tgroups.answered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn groups;\n\t\t},\n\t\tsetTitleGroup(group): string\n\t\t{\n\t\t\treturn this.loc(`IMOL_LIST_OPENLINE_STATUS_MESSAGE_${group.toUpperCase()}`);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent__content\">\n\t\t\t<EmptyState v-if=\"isEmptyCollection\" />\n\t\t\t<RecentGroup v-for=\"(group, key) in groups\" :group=\"group\" :key=\"key\"/>\n\t\t</div>\n\t`,\n};\n"],"names":["MessageText","name","props","item","type","Object","required","computed","recentItems","message","$store","getters","dialogId","formattedMessageText","SPLIT_INDEX","Utils","text","insertUnseenWhitespace","template","ItemCounter","recentItem","dialog","totalCounter","openLinesCounter","chatId","formattedCounter","formatCounter","methods","counter","toString","RecentItem","components","ChatTitle","ChatAvatar","AvatarSize","formattedDate","formatDate","date","DateFormatter","formatByTemplate","DateTemplate","recent","RecentGroup","component","emits","group","key","onClick","$emit","EmptyState","loc","phraseCode","$Bitrix","Loc","getMessage","RecentList","collection","Core","getStore","groups","setGroups","isEmptyCollection","length","created","getOpenlinesService","requestItems","service","RecentService","getSession","getStatus","session","status","isSessionStatusAvailable","statusName","SessionManager","isSessionAvailable","new","work","answered","forEach","SessionStatus","NEW","push","WORK","ANSWERED","setTitleGroup","toUpperCase"],"mappings":"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"}