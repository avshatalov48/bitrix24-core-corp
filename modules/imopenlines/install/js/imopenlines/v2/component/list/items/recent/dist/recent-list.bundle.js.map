{"version":3,"file":"recent-list.bundle.js","sources":["../src/components/empty-state.js","../src/components/recent-item/components/message-text.js","../src/components/recent-item/components/item-counter.js","../src/components/recent-item/recent-item.js","../src/components/recent-group.js","../src/recent-list.js"],"sourcesContent":["// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tcomputed:\n\t{\n\t\tmessage(): string\n\t\t{\n\t\t\treturn this.loc('IMOL_LIST_RECENT_EMPTY_MESSAGE');\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent-empty-state__container\">\n\t\t\t<p class=\"bx-im-list-openlines-empty-state__text\">\n\t\t\t\t{{ message }}\n\t\t\t</p>\n\t\t</div>\n\t`,\n};\n","import { Utils } from 'im.v2.lib.utils';\nimport { Parser } from 'im.v2.lib.parser';\n\nimport '../css/recent-item.css';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type { ImolModelRecentItem } from 'imopenlines.v2.model';\n\n// @vue/component\nexport const MessageText = {\n\tname: 'MessageText',\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trecentItems(): ImolModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tmessage(): ?ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.recentItems.messageId);\n\t\t},\n\t\tlastMessageAuthorAvatar(): string\n\t\t{\n\t\t\tconst authorDialog = this.$store.getters['chats/get'](this.message.authorId);\n\n\t\t\tif (!authorDialog)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn authorDialog.avatar;\n\t\t},\n\t\tlastMessageAuthorAvatarStyle(): Object\n\t\t{\n\t\t\treturn { backgroundImage: `url('${this.lastMessageAuthorAvatar}')` };\n\t\t},\n\t\tformattedMessageText(): string\n\t\t{\n\t\t\tif (this.message.isDeleted)\n\t\t\t{\n\t\t\t\treturn this.loc('IMOL_LIST_RECENT_DELETED_MESSAGE');\n\t\t\t}\n\n\t\t\tconst SPLIT_INDEX = 27;\n\n\t\t\tconst formattedText = Parser.purifyRecent(this.recentItems);\n\n\t\t\treturn Utils.text.insertUnseenWhitespace(formattedText, SPLIT_INDEX);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent-item__message\">\n\t\t\t<span class=\"bx-imol-list-recent-item__message_text-container\">\n\t\t\t\t<template v-if=\"message.authorId\">\n\t\t\t\t\t<span v-if=\"lastMessageAuthorAvatar\" :style=\"lastMessageAuthorAvatarStyle\" class=\"bx-imol-list-recent-item__message_author-icon --user\"></span>\n\t\t\t\t\t<span v-else class=\"bx-imol-list-recent-item__message_author-icon --user --default\"></span>\n\t\t\t\t</template>\n\t\t\t\t<span class=\"bx-imol-list-recent-item__message_text\">{{ formattedMessageText }}</span>\n\t\t\t</span>\n\t\t</div>\n\t`,\n};\n","import type { ImModelChat } from 'im.v2.model';\nimport type { ImolModelRecentItem } from 'imopenliens.v2.model';\n\n// @vue/component\nexport const ItemCounter = {\n\tname: 'ItemCounter',\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trecentItem(): ImolModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tdialog(): ?ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.item.dialogId);\n\t\t},\n\t\topenLinesCounter(): number\n\t\t{\n\t\t\treturn this.$store.getters['counters/getSpecificLinesCounter'](this.dialog.chatId);\n\t\t},\n\t\ttotalCounter(): number\n\t\t{\n\t\t\treturn this.openLinesCounter;\n\t\t},\n\t\tformattedCounter(): string\n\t\t{\n\t\t\treturn this.formatCounter(this.totalCounter);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatCounter(counter: number): string\n\t\t{\n\t\t\treturn counter > 99 ? '99+' : counter.toString();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent-item__counter_wrap\">\n\t\t\t<div class=\"bx-imol-list-recent-item__counter_container\">\n\t\t\t\t<div v-if=\"formattedCounter > 0\" class=\"bx-imol-list-recent-item__counter_number\">\n\t\t\t\t\t{{ formattedCounter }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { ChatTitle, ChatAvatar, AvatarSize } from 'im.v2.component.elements';\nimport { Layout } from 'im.v2.const';\nimport { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport { MessageText } from './components/message-text';\nimport { ItemCounter } from './components/item-counter';\n\nimport './css/recent-item.css';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { ImolModelRecentItem } from 'imopenlines.v2.model';\n\n// @vue/component\nexport const RecentItem = {\n\tname: 'RecentItem',\n\tcomponents: { ChatTitle, ChatAvatar, MessageText, ItemCounter },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tdialog(): ?ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.item.dialogId, true);\n\t\t},\n\t\tlayout(): { name: string, entityId: string }\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tmessage(): ?ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.item.messageId);\n\t\t},\n\t\trecentItem(): ImolModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tformattedDate(): string\n\t\t{\n\t\t\treturn this.message ? this.formatDate(this.message.date) : '';\n\t\t},\n\t\tisChatSelected(): boolean\n\t\t{\n\t\t\tif (this.layout.name !== Layout.openlinesV2.name)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.layout.entityId === this.recentItem.dialogId;\n\t\t},\n\t\twrapClasses(): { [string]: boolean }\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--selected': this.isChatSelected,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatDate(date: Date): string\n\t\t{\n\t\t\treturn DateFormatter.formatByTemplate(date, DateTemplate.recent);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent__item\" :class=\"wrapClasses\">\n\t\t\t<div class=\"bx-imol-list-recent-item__main_content\">\n\t\t\t\t<div class=\"bx-imol-list-recent-item__avatar_container\">\n\t\t\t\t\t<div class=\"bx-imol-list-recent-item__avatar_content\">\n\t\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t\t:avatarDialogId=\"recentItem.dialogId\"\n\t\t\t\t\t\t\t:contextDialogId=\"recentItem.dialogId\"\n\t\t\t\t\t\t\t:size=\"AvatarSize.XL\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-imol-list-recent-item__content_right\">\n\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_header\">\n\t\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_title\">\n\t\t\t\t\t\t\t<ChatTitle :dialogId=\"recentItem.dialogId\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_date\">\n\t\t\t\t\t\t\t<span class=\"bx-imol-list-recent-item__content_date\">{{ formattedDate }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-imol-list-recent-item__content_bottom\">\n\t\t\t\t\t\t<MessageText :item=\"recentItem\" />\n\t\t\t\t\t\t<ItemCounter :item=\"recentItem\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { RecentItem } from './recent-item/recent-item';\n\n// @vue/component\nexport const RecentGroup = {\n\tname: 'RecentGroup',\n\tcomponents: { RecentItem },\n\tprops:\n\t{\n\t\tgroupItems: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tgroupName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['recentClick'],\n\tcomputed:\n\t{\n\t\tgroupTitle(): string\n\t\t{\n\t\t\treturn this.loc(`IMOL_LIST_STATUS_MESSAGE_${this.groupName.toUpperCase()}`);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonRecentClick(dialogId: string)\n\t\t{\n\t\t\tthis.$emit('recentClick', dialogId);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent__group-item_container\" v-if=\"groupItems.length !== 0\">\n\t\t\t<span \n\t\t\t\tclass=\"bx-imol-list-recent__group_name\" \n\t\t\t\t:class=\"'bx-imol-list-recent__group_name_' + groupName.toLowerCase()\"\n\t\t\t>\n\t\t\t\t{{ groupTitle }}\n\t\t\t</span>\n\t\t\t<RecentItem\n\t\t\t\tv-for=\"item in groupItems\"\n\t\t\t\t:item=\"item\"\n\t\t\t\t:key=\"item.dialogId\"\n\t\t\t\t@click=\"onRecentClick(item.dialogId)\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { ListLoadingState as LoadingState } from 'im.v2.component.elements';\nimport { Utils } from 'im.v2.lib.utils';\nimport { StatusGroup } from 'imopenlines.v2.const';\nimport { RecentService } from 'imopenlines.v2.provider.service';\n\nimport { EmptyState } from './components/empty-state';\nimport { RecentGroup } from './components/recent-group';\n\nimport './css/recent-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImolModelRecentItem, ImolModelSession } from 'imopenlines.v2.model';\nimport type { StatusGroupName } from 'imopenlines.v2.const';\n\ntype StatusGroupItemCollection = {\n\t[StatusGroupName]: ImolModelRecentItem[];\n};\n\n// @vue/component\nexport const RecentList = {\n\tname: 'RecentList',\n\tcomponents: { EmptyState, RecentGroup, LoadingState },\n\temits: ['chatClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisLoading: false,\n\t\t\tisLoadingNextPage: false,\n\t\t\tfirstPageLoaded: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tcollection(): ImolModelRecentItem[]\n\t\t{\n\t\t\treturn Core.getStore().getters['recentOpenLines/getOpenLinesCollection'];\n\t\t},\n\t\tcollectionByGroups(): StatusGroupItemCollection\n\t\t{\n\t\t\tconst groupsRecent: StatusGroupItemCollection = {\n\t\t\t\t[StatusGroup.new]: [],\n\t\t\t\t[StatusGroup.work]: [],\n\t\t\t\t[StatusGroup.answered]: [],\n\t\t\t};\n\n\t\t\tthis.collection.forEach((item: ImolModelRecentItem) => {\n\t\t\t\tconst recentItem = item;\n\n\t\t\t\tconst statusName = this.getStatusByDialogId(recentItem.dialogId);\n\n\t\t\t\tgroupsRecent[statusName].push(recentItem);\n\t\t\t});\n\n\t\t\treturn groupsRecent;\n\t\t},\n\t\tsortedCollectionByGroups(): StatusGroupItemCollection\n\t\t{\n\t\t\tconst sortedGroups = {};\n\n\t\t\tObject.entries(this.collectionByGroups).forEach(([groupName, items]) => {\n\t\t\t\tsortedGroups[groupName] = this.sortGroupItems(groupName, items);\n\t\t\t});\n\n\t\t\treturn sortedGroups;\n\t\t},\n\t\tisEmptyCollection(): boolean\n\t\t{\n\t\t\treturn this.collection.length === 0;\n\t\t},\n\t},\n\tasync activated(): Promise\n\t{\n\t\tthis.isLoading = true;\n\t\tawait this.getRecentService().loadFirstPage();\n\t\tthis.firstPageLoaded = true;\n\t\tthis.isLoading = false;\n\t},\n\tmethods:\n\t{\n\t\tasync onScroll(event: Event)\n\t\t{\n\t\t\tif (!Utils.dom.isOneScreenRemaining(event.target) || !this.getRecentService().hasMoreItemsToLoad())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isLoadingNextPage = true;\n\t\t\tawait this.getRecentService().loadNextPage();\n\t\t\tthis.isLoadingNextPage = false;\n\t\t},\n\t\tonClick(dialogId: string)\n\t\t{\n\t\t\tthis.$emit('chatClick', dialogId);\n\t\t},\n\t\tgetSessionByDialogId(dialogId: string): ?ImolModelSession\n\t\t{\n\t\t\treturn this.$store.getters['recentOpenLines/getSession'](dialogId);\n\t\t},\n\t\tgetStatusByDialogId(dialogId: string): StatusGroupName\n\t\t{\n\t\t\tconst session = this.getSessionByDialogId(dialogId);\n\n\t\t\treturn session ? session.status : StatusGroup.new;\n\t\t},\n\t\tsortGroupItems(groupName: StatusGroupName, items: ImolModelRecentItem[]): ImolModelRecentItem[]\n\t\t{\n\t\t\tif (groupName === StatusGroup.answered)\n\t\t\t{\n\t\t\t\treturn this.sortItemsDesc(items);\n\t\t\t}\n\n\t\t\treturn this.sortItemsAsc(items);\n\t\t},\n\t\tsortItemsAsc(items: ImolModelRecentItem[]): ImolModelRecentItem[]\n\t\t{\n\t\t\treturn items.sort((a, z) => a.sessionId - z.sessionId);\n\t\t},\n\t\tsortItemsDesc(items: ImolModelRecentItem[]): ImolModelRecentItem[]\n\t\t{\n\t\t\treturn items.sort((a, z) => {\n\t\t\t\tconst dateA = this.messageDate(a.messageId);\n\t\t\t\tconst dateZ = this.messageDate(z.messageId);\n\n\t\t\t\treturn dateZ - dateA;\n\t\t\t});\n\t\t},\n\t\tmessageDate(messageId: number): ?Date\n\t\t{\n\t\t\tconst message = Core.getStore().getters['messages/getById'](messageId);\n\n\t\t\treturn message ? message.date : null;\n\t\t},\n\t\tgetRecentService(): RecentService\n\t\t{\n\t\t\tif (!this.service)\n\t\t\t{\n\t\t\t\tthis.service = new RecentService();\n\t\t\t}\n\n\t\t\treturn this.service;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-list-recent__content\">\n\t\t\t<LoadingState v-if=\"isLoading && !firstPageLoaded\" />\n\t\t\t<div v-else @scroll=\"onScroll\"  class=\"bx-imol-list-recent__scroll-container\">\n\t\t\t\t<EmptyState v-if=\"isEmptyCollection\" />\n\t\t\t\t<RecentGroup\n\t\t\t\t\tv-for=\"(groupItems, groupName) in sortedCollectionByGroups\"\n\t\t\t\t\t:groupItems=\"groupItems\"\n\t\t\t\t\t:groupName=\"groupName\"\n\t\t\t\t\t:key=\"groupName\"\n\t\t\t\t\t@recentClick=\"onClick\"\n\t\t\t\t/>\n\t\t\t\t<LoadingState v-if=\"isLoadingNextPage\" />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n"],"names":["EmptyState","name","computed","message","loc","methods","phraseCode","$Bitrix","Loc","getMessage","template","MessageText","props","item","type","Object","required","recentItems","$store","getters","messageId","lastMessageAuthorAvatar","authorDialog","authorId","avatar","lastMessageAuthorAvatarStyle","backgroundImage","formattedMessageText","isDeleted","SPLIT_INDEX","formattedText","Parser","purifyRecent","Utils","text","insertUnseenWhitespace","ItemCounter","recentItem","dialog","dialogId","openLinesCounter","chatId","totalCounter","formattedCounter","formatCounter","counter","toString","RecentItem","components","ChatTitle","ChatAvatar","AvatarSize","layout","formattedDate","formatDate","date","isChatSelected","Layout","openlinesV2","entityId","wrapClasses","DateFormatter","formatByTemplate","DateTemplate","recent","RecentGroup","groupItems","Array","groupName","String","emits","groupTitle","toUpperCase","onRecentClick","$emit","RecentList","LoadingState","data","isLoading","isLoadingNextPage","firstPageLoaded","collection","Core","getStore","collectionByGroups","groupsRecent","StatusGroup","new","work","answered","forEach","statusName","getStatusByDialogId","push","sortedCollectionByGroups","sortedGroups","entries","items","sortGroupItems","isEmptyCollection","length","activated","getRecentService","loadFirstPage","onScroll","event","dom","isOneScreenRemaining","target","hasMoreItemsToLoad","loadNextPage","onClick","getSessionByDialogId","session","status","sortItemsDesc","sortItemsAsc","sort","a","z","sessionId","dateA","messageDate","dateZ","service","RecentService"],"mappings":"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"}