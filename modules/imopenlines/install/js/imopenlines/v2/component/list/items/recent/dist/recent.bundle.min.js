this.BX=this.BX||{};this.BX.OpenLines=this.BX.OpenLines||{};this.BX.OpenLines.v2=this.BX.OpenLines.v2||{};this.BX.OpenLines.v2.Component=this.BX.OpenLines.v2.Component||{};(function(t,e,n,s,i,r,o){"use strict";const a={name:"MessageText",props:{item:{type:Object,required:true}},computed:{recentItems(){return this.item},message(){return this.$store.getters["recentOpenlines/getMessage"](this.recentItems.dialogId)},formattedMessageText(){const t=27;return o.Utils.text.insertUnseenWhitespace(this.message.text,t)}},template:`\n\t\t<div class="bx-imol-list-recent-item__text_date">\n\t\t\t<span class="bx-imol-list-recent-item__message_text">{{formattedMessageText}}</span>\n\t\t</div>\n\t`};const c={name:"ItemCounter",props:{item:{type:Object,required:true}},computed:{recentItem(){return this.item},dialog(){return this.$store.getters["chats/get"](this.recentItem.dialogId,true)},totalCounter(){return this.openLinesCounter},openLinesCounter(){return this.$store.getters["counters/getSpecificLinesCounter"](this.dialog.chatId)},formattedCounter(){return this.formatCounter(this.totalCounter)}},methods:{formatCounter(t){return t>99?"99+":t.toString()}},template:`\n\t\t<div class="bx-imol-list-recent-item__counter_wrap">\n\t\t\t<div class="bx-imol-list-recent-item__counter_container">\n\t\t\t\t<div v-if="formattedCounter > 0" class="bx-imol-list-recent-item__counter_number">\n\t\t\t\t\t{{ formattedCounter }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const l={name:"RecentItem",components:{ChatTitle:i.ChatTitle,ChatAvatar:i.ChatAvatar,MessageText:a,ItemCounter:c},props:{item:{type:Object,required:true}},computed:{recentItem(){return this.item},AvatarSize:()=>i.AvatarSize,message(){return this.$store.getters["recentOpenlines/getMessage"](this.item.dialogId)},formattedDate(){return this.formatDate(this.message.date)},dialog(){return this.$store.getters["chats/get"](this.item.dialogId,true)}},methods:{formatDate(t){return r.DateFormatter.formatByTemplate(t,r.DateTemplate.recent)}},template:`\n\t\t<div class="bx-imol-list-recent__item">\n\t\t\t<div class="bx-imol-list-recent-item__main_content">\n\t\t\t\t<div class="bx-imol-list-recent-item__avatar_container">\n\t\t\t\t\t<div class="bx-imol-list-recent-item__avatar_content">\n\t\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t\t:avatarDialogId="recentItem.dialogId"\n\t\t\t\t\t\t\t:contextDialogId="recentItem.dialogId"\n\t\t\t\t\t\t\t:size="AvatarSize.XL"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-imol-list-recent-item__content_right">\n\t\t\t\t\t<div class="bx-imol-list-recent-item__content_header">\n\t\t\t\t\t\t<div class="bx-imol-list-recent-item__content_title">\n\t\t\t\t\t\t\t<ChatTitle :dialogId="recentItem.dialogId" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-imol-list-recent-item__content_date">\n\t\t\t\t\t\t\t<span class="bx-imol-list-recent-item__content_date">{{formattedDate}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-imol-list-recent-item__content_bottom">\n\t\t\t\t\t\t<MessageText :item="recentItem" />\n\t\t\t\t\t\t<ItemCounter :item="recentItem" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const m={name:"RecentGroup",component:{RecentItem:l},emits:["chatClick"],props:{group:{required:true},key:{required:true}},methods:{onClick(t){this.$emit("chatClick",t)}},template:`\n\t\t<div>\n\t\t\t<div v-if="group.length !== 0">\n\t\t\t\t<span class="bx-imol-list-recent__group_name" :class="'bx-imol-list-recent__group_name_' + key">{{key}}</span>\n\t\t\t\t<RecentItem\n\t\t\t\t\tv-for="item in group"\n\t\t\t\t\t@click="onClick(item.dialogId)"\n\t\t\t\t\t:item="item"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const u={name:"EmptyState",computed:{message(){return this.loc("IMOL_LIST_RECENT_EMPTY_MESSAGE")}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-imol-list-recent-empty-state__container">\n\t\t\t<p class="bx-im-list-openlines-empty-state__text">\n\t\t\t\t{{message}}\n\t\t\t</p>\n\t\t</div>\n\t`};const p={name:"RecentList",components:{EmptyState:u,RecentGroup:m},emits:["chatClick"],computed:{collection(){return e.Core.getStore().getters["recentOpenlines/getOpenlinesCollection"]},groups(){return this.setGroups()},isEmptyCollection(){return this.collection.length===0}},async created(){await this.getOpenlinesService().requestItems()},methods:{onClick(t){this.$emit("chatClick",t)},getOpenlinesService(){this.service=new n.RecentService;return this.service},getSession(t){return this.$store.getters["recentOpenlines/getSession"](t)},getStatus(t){const e=this.getSession(t);if(e){return e.status}return"NEW"},isSessionStatusAvailable(t){return s.SessionManager.isSessionAvailable(t)},setGroups(){const t={new:[],work:[],answered:[]};this.collection.forEach((e=>{const n=this.getStatus(e.dialogId);if(this.isSessionStatusAvailable(s.SessionStatus.NEW)[n]||n==="NEW"){t.new.push(e);return}if(this.isSessionStatusAvailable(s.SessionStatus.WORK)[n]){t.work.push(e);return}if(this.isSessionStatusAvailable(s.SessionStatus.ANSWERED)[n]){t.answered.push(e)}}));return t},setTitleGroup(t){return this.loc(`IMOL_LIST_OPENLINE_STATUS_MESSAGE_${t.toUpperCase()}`)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-imol-list-recent__content">\n\t\t\t<EmptyState v-if="isEmptyCollection" />\n\t\t\t<RecentGroup v-for="(group, key) in groups" :group="group" :key="key"/>\n\t\t</div>\n\t`};t.RecentList=p})(this.BX.OpenLines.v2.Component.List=this.BX.OpenLines.v2.Component.List||{},BX.Messenger.v2.Application,BX.OpenLines.v2.Provider.Service,BX.OpenLines.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=recent.bundle.map.js