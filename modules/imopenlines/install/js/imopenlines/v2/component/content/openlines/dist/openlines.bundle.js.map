{"version":3,"file":"openlines.bundle.js","sources":["../src/components/content/components/entity-selector/chat-transfer/chat-transfer-content.js","../src/components/content/components/entity-selector/chat-transfer/chat-transfer.js","../src/components/content/components/join-panel/components/chat-control-panel.js","../src/components/content/components/join-panel/components/join-panel.js","../src/components/content/components/join-panel/join-panel-container.js","../src/components/content/components/header/header.js","../src/components/content/components/textarea/textarea.js","../src/components/content/components/message-list/classes/message-menu.js","../src/components/content/components/message-list/message-list.js","../src/components/content/openlines.js","../src/components/openers/components/empty-state.js","../src/components/openers/openlines-opener.js","../src/openlines-content.js"],"sourcesContent":["import { TagSelector } from 'ui.entity-selector';\n\nimport { Button as MessengerButton, ButtonSize, ButtonColor } from 'im.v2.component.elements';\nimport { ChatSearch } from 'im.v2.component.search.chat-search';\nimport { TransferService } from 'imopenlines.v2.provider.service';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelUser } from 'im.v2.model';\n\nimport type { TagItemOptions } from './types/tag-item-options';\n\nconst searchConfig = Object.freeze({\n\tchats: false,\n\tusers: true,\n});\n\nconst SEARCH_ENTITY_ID = 'user';\n\nexport const ChatTransferContent = {\n\tname: 'ChatTransferContent',\n\tcomponents: { MessengerButton, ChatSearch },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tsearchQuery: '',\n\t\t\tselectedItems: new Set(),\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t\tsearchConfig: () => searchConfig,\n\t},\n\tcreated()\n\t{\n\t\tthis.membersSelector = this.getTagSelector();\n\t},\n\tmounted()\n\t{\n\t\tthis.membersSelector.renderTo(this.$refs['tag-selector']);\n\t\tthis.membersSelector.focusTextBox();\n\t},\n\tmethods:\n\t{\n\t\tgetTagSelector(): TagSelector\n\t\t{\n\t\t\treturn new TagSelector({\n\t\t\t\tmaxHeight: 150,\n\t\t\t\tshowAddButton: false,\n\t\t\t\tshowTextBox: true,\n\t\t\t\tshowCreateButton: false,\n\t\t\t\tevents: {\n\t\t\t\t\tonAfterTagAdd: (event) => {\n\t\t\t\t\t\tconst { tag } = event.getData();\n\t\t\t\t\t\tthis.selectedItems.add(tag.id);\n\t\t\t\t\t},\n\t\t\t\t\tonAfterTagRemove: (event) => {\n\t\t\t\t\t\tconst { tag } = event.getData();\n\t\t\t\t\t\tthis.selectedItems.delete(tag.id);\n\t\t\t\t\t},\n\t\t\t\t\tonInput: () => {\n\t\t\t\t\t\tthis.searchQuery = this.membersSelector.getTextBoxValue();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tonSelectItem(event: {dialogId: string, nativeEvent: PointerEvent})\n\t\t{\n\t\t\tconst { dialogId, nativeEvent } = event;\n\n\t\t\tif (this.selectedItems.has(dialogId))\n\t\t\t{\n\t\t\t\tconst tag = {\n\t\t\t\t\tid: dialogId,\n\t\t\t\t\tentityId: SEARCH_ENTITY_ID,\n\t\t\t\t};\n\n\t\t\t\tthis.membersSelector.removeTag(tag);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.membersSelector.removeTags();\n\n\t\t\t\tconst newTag = this.getTagsByDialogId(dialogId);\n\t\t\t\tthis.membersSelector.addTag(newTag);\n\t\t\t}\n\n\t\t\tthis.membersSelector.clearTextBox();\n\n\t\t\tif (!nativeEvent.altKey)\n\t\t\t{\n\t\t\t\tthis.searchQuery = '';\n\t\t\t}\n\t\t},\n\t\tgetTagsByDialogId(dialogId: string): TagItemOptions\n\t\t{\n\t\t\tconst user: ImModelUser = this.$store.getters['users/get'](dialogId, true);\n\n\t\t\treturn {\n\t\t\t\tid: dialogId,\n\t\t\t\tentityId: SEARCH_ENTITY_ID,\n\t\t\t\ttitle: user.name,\n\t\t\t\tavatar: user.avatar.length > 0 ? user.avatar : null,\n\t\t\t};\n\t\t},\n\t\tonChatTransfer(): Promise\n\t\t{\n\t\t\tconst newOperatorId = [...this.selectedItems][0];\n\n\t\t\treturn this.getTransferService().chatTransfer(this.dialogId, newOperatorId);\n\t\t},\n\t\tgetTransferService(): TransferService\n\t\t{\n\t\t\tif (!this.transferService)\n\t\t\t{\n\t\t\t\tthis.transferService = new TransferService();\n\t\t\t}\n\n\t\t\treturn this.transferService;\n\t\t},\n\t\tloc(key: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(key);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-entity-selector-chat-transfer__container\">\n\t\t\t<div class=\"bx-imol-entity-selector-chat-transfer__input\" ref=\"tag-selector\"></div>\n\t\t\t<div class=\"bx-imol-entity-selector-chat-transfer__search-result-container\">\n\t\t\t\t<ChatSearch\n\t\t\t\t\t:searchMode=\"true\"\n\t\t\t\t\t:searchQuery=\"searchQuery\"\n\t\t\t\t\t:selectMode=\"true\"\n\t\t\t\t\t:searchConfig=\"searchConfig\"\n\t\t\t\t\t:selectedItems=\"[...selectedItems]\"\n\t\t\t\t\t:showMyNotes=\"false\"\n\t\t\t\t\t@clickItem=\"onSelectItem\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"bx-imol-entity-selector-chat-transfer__buttons\">\n\t\t\t\t<MessengerButton\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:text=\"loc('IMOL_CONTENT_BUTTON_TRANSFER')\"\n\t\t\t\t\t:isDisabled=\"selectedItems.size === 0\"\n\t\t\t\t\t@click=\"onChatTransfer\"\n\t\t\t\t/>\n\t\t\t\t<MessengerButton\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:color=\"ButtonColor.LightBorder\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:text=\"loc('IMOL_ENTITY_SELECTOR_CHAT_TRANSFER_CANCEL_BUTTON')\"\n\t\t\t\t\t@click=\"$emit('close')\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { PopupOptions } from 'main.popup';\nimport { MessengerPopup } from 'im.v2.component.elements';\n\nimport { ChatTransferContent } from './chat-transfer-content';\n\nimport './css/chat-transfer.css';\n\nconst POPUP_ID = 'imol-chat-transfer-popup';\n\n// @vue/component\nexport const ChatTransfer = {\n\tname: 'ChatTransfer',\n\tcomponents: { MessengerPopup, ChatTransferContent },\n\tprops:\n\t{\n\t\tshowPopup: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tpopupConfig: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig(): PopupOptions\n\t\t{\n\t\t\treturn {\n\t\t\t\ttitleBar: this.$Bitrix.Loc.getMessage('IMOL_CONTENT_BUTTON_TRANSFER'),\n\t\t\t\tcloseIcon: true,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\toffsetTop: this.popupConfig.offsetTop,\n\t\t\t\toffsetLeft: this.popupConfig.offsetLeft,\n\t\t\t\tpadding: 0,\n\t\t\t\tcontentPadding: 0,\n\t\t\t\tcontentBackground: '#fff',\n\t\t\t\tclassName: 'bx-imol-entity-selector-chat-transfer__container',\n\t\t\t};\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\tv-if=\"showPopup\"\n\t\t\t:config=\"config\"\n\t\t\t@close=\"$emit('close')\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t>\n\t\t\t<ChatTransferContent :dialogId=\"dialogId\" @close=\"$emit('close')\"/>\n\t\t</MessengerPopup>\n\t`,\n};\n","import { Button as ButtonPanel, ButtonColor, ButtonSize } from 'im.v2.component.elements';\nimport { AnswerService, SkipService } from 'imopenlines.v2.provider.service';\n\nimport { ChatTransfer } from '../../entity-selector/chat-transfer/chat-transfer';\n\nimport type { JsonObject } from 'main.core';\nimport type { CustomColorScheme } from 'im.v2.component.elements';\n\nconst BUTTON_COLOR = '#eef0f2';\nconst BUTTON_COLOR_TEXT = '#535658';\nconst BUTTON_COLOR_HOVER = '#dfe0e3';\n\n// @vue/component\nexport const ChatControlPanel = {\n\tname: 'ChatControlPanel',\n\tcomponents: { ButtonPanel, ChatTransfer },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tisQueueTypeAll: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowChatTransferPopup: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t\tbuttonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tbackgroundColor: BUTTON_COLOR,\n\t\t\t\tborderColor: 'transparent',\n\t\t\t\ticonColor: BUTTON_COLOR,\n\t\t\t\ttextColor: BUTTON_COLOR_TEXT,\n\t\t\t\thoverColor: BUTTON_COLOR_HOVER,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\treplyDialog(): Promise\n\t\t{\n\t\t\treturn this.getAnswerService().requestAnswer(this.dialogId);\n\t\t},\n\t\tskipDialog(): Promise\n\t\t{\n\t\t\treturn this.getSkipService().requestSkip(this.dialogId);\n\t\t},\n\t\tgetAnswerService(): AnswerService\n\t\t{\n\t\t\tif (!this.answerService)\n\t\t\t{\n\t\t\t\tthis.answerService = new AnswerService();\n\t\t\t}\n\n\t\t\treturn this.answerService;\n\t\t},\n\t\tgetSkipService(): SkipService\n\t\t{\n\t\t\tif (!this.skipService)\n\t\t\t{\n\t\t\t\tthis.skipService = new SkipService();\n\t\t\t}\n\n\t\t\treturn this.skipService;\n\t\t},\n\t\topenChatTransferPopup()\n\t\t{\n\t\t\tthis.showChatTransferPopup = true;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ul class=\"bx-imol-textarea_join-panel-list-button\">\n\t\t\t<li class=\"bx-imol-textarea_join-panel-item-button\">\n\t\t\t\t<ButtonPanel\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:color=\"ButtonColor.Success\"\n\t\t\t\t\t:text=\"loc('IMOL_CONTENT_TEXTAREA_JOIN_PANEL_ANSWER')\"\n\t\t\t\t\t@click=\"replyDialog\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t\t<li v-if=\"!isQueueTypeAll\" class=\"bx-imol-textarea_join-panel-item-button\">\n\t\t\t\t<ButtonPanel\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:color=\"ButtonColor.Danger\"\n\t\t\t\t\t:text=\"loc('IMOL_CONTENT_TEXTAREA_JOIN_PANEL_SKIP')\"\n\t\t\t\t\t@click=\"skipDialog\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t\t<li class=\"bx-imol-textarea_join-panel-item-button\" ref=\"transfer-chat\">\n\t\t\t\t<ButtonPanel\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:customColorScheme=\"buttonColorScheme\"\n\t\t\t\t\t:text=\"loc('IMOL_CONTENT_BUTTON_TRANSFER')\"\n\t\t\t\t\t@click=\"openChatTransferPopup\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t</ul>\n\t\t<ChatTransfer\n\t\t\t:bindElement=\"$refs['transfer-chat'] || {}\"\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:showPopup=\"showChatTransferPopup\"\n\t\t\t:popupConfig=\"{offsetTop: -700, offsetLeft: 0}\"\n\t\t\t@close=\"showChatTransferPopup = false\"\n\t\t/>\n\n\t`,\n};\n","import { Messenger } from 'im.public';\nimport { Button as ButtonPanel, ButtonColor, ButtonSize } from 'im.v2.component.elements';\nimport { Layout } from 'im.v2.const';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { JoinService, StartService } from 'imopenlines.v2.provider.service';\n\n// @vue/component\nexport const JoinPanel = {\n\tname: 'JoinPanel',\n\tcomponents: { ButtonPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tisNewSession: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tisClosed: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t\ttextStartJoinButtons(): string\n\t\t{\n\t\t\treturn this.isClosed\n\t\t\t\t? this.loc('IMOL_CONTENT_TEXTAREA_JOIN_PANEL_START')\n\t\t\t\t: this.loc('IMOL_CONTENT_TEXTAREA_JOIN_PANEL_JOIN_BUTTON');\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\thandleDialogAccess(): Promise\n\t\t{\n\t\t\tif (this.isClosed)\n\t\t\t{\n\t\t\t\treturn this.getStartService().startDialog(this.dialogId);\n\t\t\t}\n\n\t\t\treturn this.getJoinService().joinToDialog(this.dialogId);\n\t\t},\n\t\tcloseDialog()\n\t\t{\n\t\t\tvoid Messenger.openLines();\n\t\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.openlinesV2.name, '');\n\t\t},\n\t\tgetStartService(): StartService\n\t\t{\n\t\t\tif (!this.startService)\n\t\t\t{\n\t\t\t\tthis.startService = new StartService();\n\t\t\t}\n\n\t\t\treturn this.startService;\n\t\t},\n\t\tgetJoinService(): JoinService\n\t\t{\n\t\t\tif (!this.joinService)\n\t\t\t{\n\t\t\t\tthis.joinService = new JoinService();\n\t\t\t}\n\n\t\t\treturn this.joinService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ul class=\"bx-imol-textarea_join-panel-list-button\">\n\t\t\t<li v-if=\"!isNewSession\" class=\"bx-imol-textarea_join-panel-item-button\">\n\t\t\t\t<ButtonPanel\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:color=\"ButtonColor.Success\"\n\t\t\t\t\t:text=textStartJoinButtons\n\t\t\t\t\t@click=\"handleDialogAccess\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t\t<li class=\"bx-imol-textarea_join-panel-item-button\">\n\t\t\t\t<ButtonPanel\n\t\t\t\t\t:size=\"ButtonSize.L\"\n\t\t\t\t\t:color=\"ButtonColor.Danger\"\n\t\t\t\t\t:text=\"loc('IMOL_CONTENT_TEXTAREA_JOIN_PANEL_CLOSE')\"\n\t\t\t\t\t@click=\"closeDialog\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t</ul>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { Button as OpenLinesButton } from 'im.v2.component.elements';\nimport { StatusGroup } from 'imopenlines.v2.const';\n\nimport { ChatControlPanel } from './components/chat-control-panel';\nimport { JoinPanel } from './components/join-panel';\n\nimport './css/join-panel.css';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { ImolModelSession } from 'imopenlines.v2.model';\n\n// @vue/component\nexport const JoinPanelContainer = {\n\tname: 'JoinPanelContainer',\n\tcomponents: { OpenLinesButton, ChatControlPanel, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tisQueueTypeAll: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ?ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tsession(): ?ImolModelSession\n\t\t{\n\t\t\treturn this.$store.getters['sessions/getByChatId'](this.dialog.chatId, true);\n\t\t},\n\t\tisNewSession(): boolean\n\t\t{\n\t\t\tif (!this.session)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.session.status === StatusGroup.new;\n\t\t},\n\t\tisOperator(): boolean\n\t\t{\n\t\t\tconst userId = Core.getUserId();\n\n\t\t\treturn userId === this.session.operatorId;\n\t\t},\n\t\tisClosed(): boolean\n\t\t{\n\t\t\treturn this.session ? this.session.isClosed : false;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-textarea_join-panel-container\">\n\t\t\t<ChatControlPanel v-if=\"(isNewSession && isOperator) || isQueueTypeAll\" :dialogId=\"dialogId\" :isQueueTypeAll=\"isQueueTypeAll\"/>\n\t\t\t<JoinPanel v-else :dialogId=\"dialogId\" :isClosed=\"isClosed\" :isNewSession=\"isNewSession\"/>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { StatusGroup } from 'imopenlines.v2.const';\nimport { FinishService, PinService, InterceptService } from 'imopenlines.v2.provider.service';\nimport type { JsonObject } from 'main.core';\n\nimport { ChatHeader } from 'im.v2.component.content.elements';\nimport { ChatTransfer } from '../entity-selector/chat-transfer/chat-transfer';\n\nimport './css/header.css';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { ImolModelSession } from 'imopenlines.v2.model';\n\n// @vue/component\nexport const OpenLinesHeader = {\n\tname: 'OpenLinesHeader',\n\tcomponents: { ChatHeader, ChatTransfer },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tisQueueTypeAll: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowChatTransferPopup: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tsession(): ImolModelSession\n\t\t{\n\t\t\treturn this.$store.getters['sessions/getByChatId'](this.dialog.chatId, true);\n\t\t},\n\t\tisPinned(): boolean\n\t\t{\n\t\t\treturn this.session ? this.session.pinned : false;\n\t\t},\n\t\tisClosed(): boolean\n\t\t{\n\t\t\treturn this.session ? this.session.isClosed : false;\n\t\t},\n\t\tisOwner(): boolean\n\t\t{\n\t\t\tconst ownerId = this.dialog.ownerId;\n\n\t\t\tif (!ownerId)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst userId = Core.getUserId();\n\n\t\t\treturn ownerId === userId;\n\t\t},\n\t\tisNewSession(): boolean\n\t\t{\n\t\t\tif (!this.session)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.session.status === StatusGroup.new;\n\t\t},\n\t\tisOperator(): boolean\n\t\t{\n\t\t\tconst userId = Core.getUserId();\n\n\t\t\treturn userId === this.session.operatorId;\n\t\t},\n\t\ttextForPinButton(): string\n\t\t{\n\t\t\treturn this.isPinned\n\t\t\t\t? this.loc('IMOL_CONTENT_HEADER_BUTTON_UNPIN')\n\t\t\t\t: this.loc('IMOL_CONTENT_HEADER_BUTTON_PIN');\n\t\t},\n\t\tclassIconButtonPin(): string\n\t\t{\n\t\t\treturn this.isPinned ? 'fa-link-slash' : 'fa-link';\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonMarkSpam(): Promise\n\t\t{\n\t\t\treturn this.getFinishService().markSpamChat(this.dialogId);\n\t\t},\n\t\tonFinish(): Promise\n\t\t{\n\t\t\treturn this.getFinishService().finishChat(this.dialogId);\n\t\t},\n\t\tonPin(): Promise\n\t\t{\n\t\t\tif (this.isPinned)\n\t\t\t{\n\t\t\t\treturn this.getPinService().unpinChat(this.dialogId);\n\t\t\t}\n\n\t\t\treturn this.getPinService().pinChat(this.dialogId);\n\t\t},\n\t\tonIntercept(): Promise\n\t\t{\n\t\t\treturn this.getInterceptService().interceptDialog(this.dialogId);\n\t\t},\n\t\topenChatTransferPopup()\n\t\t{\n\t\t\tthis.showChatTransferPopup = true;\n\t\t},\n\t\tgetFinishService(): FinishService\n\t\t{\n\t\t\tif (!this.finishService)\n\t\t\t{\n\t\t\t\tthis.finishService = new FinishService();\n\t\t\t}\n\n\t\t\treturn this.finishService;\n\t\t},\n\t\tgetPinService(): PinService\n\t\t{\n\t\t\tif (!this.pinService)\n\t\t\t{\n\t\t\t\tthis.pinService = new PinService();\n\t\t\t}\n\n\t\t\treturn this.pinService;\n\t\t},\n\t\tgetInterceptService(): InterceptService\n\t\t{\n\t\t\tif (!this.interceptService)\n\t\t\t{\n\t\t\t\tthis.interceptService = new InterceptService();\n\t\t\t}\n\n\t\t\treturn this.interceptService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-header-button_container\">\n\t\t\t<ChatHeader :dialogId=\"dialogId\" :withCallButton=\"false\" :withSearchButton=\"false\">\n\t\t\t\t<template v-if=\"!isClosed\" #before-actions>\n\t\t\t\t\t<ul v-if=\"isOperator || isNewSession\" class=\"bx-imol-header-button_container-list\">\n\t\t\t\t\t\t<li v-if=\"isOperator || isQueueTypeAll\" class=\"bx-imol-header-button_container-item\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t:title=\"loc('IMOL_CONTENT_HEADER_BUTTON_SPAM')\"\n\t\t\t\t\t\t\t\tclass=\"bx-imol-header-button__icon-container\"\n\t\t\t\t\t\t\t\t@click=\"onMarkSpam\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i class=\"bx-imol-header-button__icon fa-solid fa-triangle-exclamation fa-lg\"></i>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<template v-if=\"isOwner\">\n\t\t\t\t\t\t\t<li class=\"bx-imol-header-button_container-item\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t:title=\"loc('IMOL_CONTENT_HEADER_BUTTON_FINISH')\"\n\t\t\t\t\t\t\t\t\tclass=\"bx-imol-header-button__icon-container\"\n\t\t\t\t\t\t\t\t\t@click=\"onFinish\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i class=\"bx-imol-header-button__icon fa-regular fa-circle-check fa-lg\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"bx-imol-header-button_container-item\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t:title=\"textForPinButton\"\n\t\t\t\t\t\t\t\t\tclass=\"bx-imol-header-button__icon-container\"\n\t\t\t\t\t\t\t\t\t@click=\"onPin\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i class=\"bx-imol-header-button__icon fa-solid fa-lg\" :class=\"classIconButtonPin\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"bx-imol-header-button_container-item\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t:title=\"loc('IMOL_CONTENT_BUTTON_TRANSFER')\"\n\t\t\t\t\t\t\t\t\t:class=\"{'--active': showChatTransferPopup}\"\n\t\t\t\t\t\t\t\t\tclass=\"bx-imol-header-button__icon-container\"\n\t\t\t\t\t\t\t\t\t@click=\"openChatTransferPopup\"\n\t\t\t\t\t\t\t\t\tref=\"transfer-chat\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i class=\"bx-imol-header-button__icon fa-solid fa-arrows-turn-right fa-lg\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div v-else class=\"bx-imol-header-button_container-item\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t:title=\"loc('IMOL_CONTENT_HEADER_BUTTON_INTERCEPT')\"\n\t\t\t\t\t\t\tclass=\"bx-imol-header-button__icon-container\"\n\t\t\t\t\t\t\t@click=\"onIntercept\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class=\"bx-imol-header-button__icon fa-solid fa-arrows-left-right fa-xl\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</ChatHeader>\n\t\t\t<ChatTransfer\n\t\t\t\t:bindElement=\"$refs['transfer-chat'] || {}\"\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:showPopup=\"showChatTransferPopup\"\n\t\t\t\t:popupConfig=\"{offsetTop: 15, offsetLeft: -300}\"\n\t\t\t\t@close=\"showChatTransferPopup = false\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\nimport './css/textarea.css';\n\n// @vue/component\nexport const OpenLinesTextarea = {\n\tname: 'OpenLinesTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:key=\"dialogId\"\n\t\t\t:withAudioInput=\"false\"\n\t\t>\n\t\t</ChatTextarea>\n\t`,\n};\n","import { MessageMenu } from 'im.v2.component.message-list';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\n\nexport class OpenLinesMessageMenu extends MessageMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDeleteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getMarkItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getSelectItem(),\n\t\t];\n\t}\n}\n","import { MessageList } from 'im.v2.component.message-list';\n\nimport { OpenLinesMessageMenu } from './classes/message-menu';\n\n// @vue/component\nexport const OpenLinesMessageList = {\n\tname: 'OpenLinesMessageList',\n\tcomponents: { MessageList },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tOpenLinesMessageMenu: () => OpenLinesMessageMenu,\n\t},\n\ttemplate: `\n\t\t<MessageList :dialogId=\"dialogId\" :messageMenuClass=\"OpenLinesMessageMenu\" />\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\nimport { QueueType } from 'imopenlines.v2.lib.queue';\nimport { ChatDialog } from 'im.v2.component.dialog.chat';\n\nimport { JoinPanelContainer } from './components/join-panel/join-panel-container';\nimport { OpenLinesHeader } from './components/header/header';\nimport { OpenLinesTextarea } from './components/textarea/textarea';\nimport { OpenLinesMessageList } from './components/message-list/message-list';\n\nimport type { ImolModelSession } from 'imopenlines.v2.model';\nimport type { QueueTypeName } from 'imopenlines.v2.lib.queue';\n\n// @vue/component\nexport const OpenLinesContent = {\n\tname: 'OpenLinesContent',\n\tcomponents: {\n\t\tBaseChatContent,\n\t\tJoinPanelContainer,\n\t\tOpenLinesHeader,\n\t\tChatDialog,\n\t\tOpenLinesTextarea,\n\t\tOpenLinesMessageList,\n\t},\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tqueueType(): ?QueueTypeName\n\t\t{\n\t\t\tconst session = this.getSessionByDialogId(this.dialogId);\n\t\t\tconst queueType = this.$store.getters['queue/getTypeById'](session.queueId, true);\n\n\t\t\treturn session ? queueType : null;\n\t\t},\n\t\tisQueueTypeAll(): boolean\n\t\t{\n\t\t\treturn this.queueType === QueueType.all;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tgetSessionByDialogId(dialogId: string): ?ImolModelSession\n\t\t{\n\t\t\treturn this.$store.getters['recentOpenLines/getSession'](dialogId, true);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<OpenLinesHeader :dialogId=\"dialogId\" :key=\"dialogId\" :isQueueTypeAll=\"isQueueTypeAll\" />\n\t\t\t</template>\n\t\t\t<template #dialog>\n\t\t\t\t<ChatDialog :dialogId=\"dialogId\" :key=\"dialogId\">\n\t\t\t\t\t<template #message-list>\n\t\t\t\t\t\t<OpenLinesMessageList :dialogId=\"dialogId\" />\n\t\t\t\t\t</template>\n\t\t\t\t</ChatDialog>\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<OpenLinesTextarea :dialogId=\"dialogId\" @mounted=\"onTextareaMount\"/>\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanelContainer :dialogId=\"dialogId\" :isQueueTypeAll=\"isQueueTypeAll\"/>\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { ThemeManager } from 'im.v2.lib.theme';\n\nimport '../css/empty-state.css';\n\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\n// @vue/component\nexport const EmptyState = {\n\tcomputed:\n\t{\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-content-openlines-start__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-imol-content-openlines-start__content\">\n\t\t\t\t<div class=\"bx-imol-content-openlines-start__icon --default\"></div>\n\t\t\t\t<div class=\"bx-imol-content-openlines-start__title\">\n\t\t\t\t\t{{ loc('IMOL_CONTENT_START_MESSAGE') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { AccessErrorCode } from 'im.v2.lib.access';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatService } from 'im.v2.provider.service';\nimport { Messenger } from 'im.public';\n\nimport { OpenLinesContent } from '../content/openlines';\nimport { EmptyState } from './components/empty-state';\n\nimport './css/default-openlines-content.css';\n\n// @vue/component\nexport const OpenLinesOpener = {\n\tname: 'OpenLinesOpener',\n\tcomponents: { EmptyState, OpenLinesContent },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tdialogId(newValue: string, oldValue: string)\n\t\t{\n\t\t\tLogger.warn(`OpenLinesContent: switching from ${oldValue || 'empty'} to ${newValue}`);\n\t\t\tvoid this.loadChat();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tif (!this.dialogId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.loadChat();\n\t},\n\tmethods:\n\t{\n\t\tasync loadChat()\n\t\t{\n\t\t\tif (this.dialogId === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tLogger.warn(`OpenLinesContent: loading openlines ${this.dialogId}`);\n\n\t\t\tawait this.getChatService().loadChatWithMessages(this.dialogId)\n\t\t\t\t.catch((errors) => {\n\t\t\t\t\tthis.handleChatLoadError(errors);\n\t\t\t\t\tLogger.error(errors);\n\t\t\t\t\tMessenger.openLines();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`OpenLinesContent: openlines ${this.dialogId} is loaded`);\n\t\t},\n\t\thandleChatLoadError(errors: Error[]): void\n\t\t{\n\t\t\tconst [firstError] = errors;\n\t\t\tif (firstError.code === AccessErrorCode.accessDenied)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IMOL_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t}\n\t\t\telse if (firstError.code === AccessErrorCode.messageNotFound)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IMOL_CONTENT_CHAT_CONTEXT_MESSAGE_NOT_FOUND'));\n\t\t\t}\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-imol-content-default-openlines__container bx-imol-messenger__scope\">\n\t\t\t<EmptyState v-if=\"!dialogId\" />\n\t\t\t<OpenLinesContent\n\t\t\t\tv-else\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import 'imopenlines.v2.css.tokens';\n\nimport { OpenLinesOpener } from './components/openers/openlines-opener';\n\n// @vue/component\nexport const OpenLinesContent = {\n\tname: 'OpenLinesContent',\n\tcomponents: { OpenLinesOpener },\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<OpenLinesOpener :dialogId=\"entityId\" />\n\t`,\n};\n"],"names":["searchConfig","Object","freeze","chats","users","SEARCH_ENTITY_ID","ChatTransferContent","name","components","MessengerButton","ChatSearch","props","dialogId","type","String","required","data","searchQuery","selectedItems","Set","computed","ButtonSize","ButtonColor","created","membersSelector","getTagSelector","mounted","renderTo","$refs","focusTextBox","methods","TagSelector","maxHeight","showAddButton","showTextBox","showCreateButton","events","onAfterTagAdd","event","tag","getData","add","id","onAfterTagRemove","delete","onInput","getTextBoxValue","onSelectItem","nativeEvent","has","entityId","removeTag","removeTags","newTag","getTagsByDialogId","addTag","clearTextBox","altKey","user","$store","getters","title","avatar","length","onChatTransfer","newOperatorId","getTransferService","chatTransfer","transferService","TransferService","loc","key","$Bitrix","Loc","getMessage","template","POPUP_ID","ChatTransfer","MessengerPopup","showPopup","Boolean","bindElement","popupConfig","emits","config","titleBar","closeIcon","offsetTop","offsetLeft","padding","contentPadding","contentBackground","className","BUTTON_COLOR","BUTTON_COLOR_TEXT","BUTTON_COLOR_HOVER","ChatControlPanel","ButtonPanel","isQueueTypeAll","showChatTransferPopup","buttonColorScheme","backgroundColor","borderColor","iconColor","textColor","hoverColor","replyDialog","getAnswerService","requestAnswer","skipDialog","getSkipService","requestSkip","answerService","AnswerService","skipService","SkipService","openChatTransferPopup","phraseCode","JoinPanel","isNewSession","isClosed","textStartJoinButtons","handleDialogAccess","getStartService","startDialog","getJoinService","joinToDialog","closeDialog","Messenger","openLines","LayoutManager","getInstance","setLastOpenedElement","Layout","openlinesV2","startService","StartService","joinService","JoinService","JoinPanelContainer","OpenLinesButton","dialog","session","chatId","status","StatusGroup","new","isOperator","userId","Core","getUserId","operatorId","OpenLinesHeader","ChatHeader","isPinned","pinned","isOwner","ownerId","textForPinButton","classIconButtonPin","onMarkSpam","getFinishService","markSpamChat","onFinish","finishChat","onPin","getPinService","unpinChat","pinChat","onIntercept","getInterceptService","interceptDialog","finishService","FinishService","pinService","PinService","interceptService","InterceptService","OpenLinesTextarea","ChatTextarea","default","OpenLinesMessageMenu","MessageMenu","getMenuItems","getReplyItem","getCopyItem","getForwardItem","getFavoriteItem","getDelimiter","getDownloadFileItem","getEditItem","getDeleteItem","getMarkItem","getSelectItem","OpenLinesMessageList","MessageList","OpenLinesContent","BaseChatContent","ChatDialog","queueType","getSessionByDialogId","queueId","QueueType","all","EmptyState","backgroundStyle","ThemeManager","getCurrentBackgroundStyle","OpenLinesOpener","watch","newValue","oldValue","Logger","warn","loadChat","getChatService","loadChatWithMessages","catch","errors","handleChatLoadError","error","firstError","code","AccessErrorCode","accessDenied","showNotification","messageNotFound","text","BX","UI","Notification","Center","notify","content","chatService","ChatService"],"mappings":"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"}