jn.define("bizproc/fields",((e,t,i)=>{const{FieldFactory:o,StringType:r}=e("layout/ui/fields");const{propertyToField:n}=e("bizproc/fields/types");const{isFunction:s,merge:l}=e("utils/object");const{isNil:c}=e("utils/type");const u=e=>e===""||c(e);const p=(e,t,i)=>{const{extractor:o}=n[e.Type]||{};if(s(o)){return o(t,i)}return t};const a=function(e,t,i={}){const{type:c,config:u}=n[e.Type]||{type:r};const p=i.config||{};console.log(`render "${c}" with value "${t}" (default: "${e.Default}")`);return View({},o.create(c,{testId:`PROPERTY_${e.Id.toUpperCase()}`,config:l(p,s(u)?u(e):u||{}),...i,title:e.Name||e.Id,value:t,required:e.Required||false,multiple:e.Multiple||false}))};i.exports={renderProperty:a,isEmptyValue:u,extractValue:p}}));
//# sourceMappingURL=extension.map.js