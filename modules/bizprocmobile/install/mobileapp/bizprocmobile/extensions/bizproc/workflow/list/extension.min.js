jn.define("bizproc/workflow/list",((t,e,s)=>{const{dispatch:o}=t("statemanager/redux/store");const{usersUpserted:i,usersAdded:n}=t("statemanager/redux/slices/users");const{PureComponent:a}=t("layout/pure-component");const{Loc:r}=t("loc");const{EmptyScreen:l}=t("layout/ui/empty-screen");const{StatefulList:c}=t("layout/ui/stateful-list");const{ListItemsFactory:h}=t("layout/ui/simple-list/items");const{WorkflowItem:u}=t("bizproc/workflow/list/item");const{SearchLayout:d}=t("layout/ui/search-bar");const{magnifierWithMenuAndDot:m}=t("assets/common");const I=t("apptheme");const{SkeletonFactory:L}=t("layout/ui/simple-list/skeleton");const{Skeleton:p}=t("bizproc/workflow/list/skeleton");const{EventEmitter:f}=t("event-emitter");const{showToast:g}=t("toast");L.register("workflow",p);class w extends a{constructor(t){super(t);this.statefulList=null;this.showSearch=this.showSearch.bind(this);this.onSearch=this.onSearch.bind(this);this.onPanList=this.onPanList.bind(this);this.search=new d({layout:this.layout,id:"bp_list",cacheId:`bp_list_${env.userId}`,presetId:"in_work",searchDataAction:"bizprocmobile.Workflow.getFilterPresets",searchDataActionParams:{},onSearch:this.onSearch,onCancel:this.onSearch});this.filterPresetId="in_work";this.customEventEmitter=f.createWithUid("bizproc");this.onTaskTouch=this.onTaskTouch.bind(this)}componentDidMount(){this.customEventEmitter.on("Task:onTouch",this.onTaskTouch)}componentWillUnmount(){this.customEventEmitter.off("Task:onTouch",this.onTaskTouch)}onTaskTouch({task:t}){const e=this.statefulList.getItem(t.workflowId);if(e&&e.data.authorId!==Number(env.userId)){this.statefulList.deleteItem(t.workflowId)}if(t&&t.name){g({message:r.getMessage("BPMOBILE_WORKFLOW_LIST_TASK_TOUCHED",{"#TASK_NAME#":t.name}),time:2},this.layout)}}onSearch({text:t,presetId:e}){if(t&&t.length>0){InAppNotifier.showNotification({backgroundColor:I.colors.baseBlackFixed,message:r.getMessage("BPMOBILE_WORKFLOW_LIST_SEARCH_UNAVAILABLE"),code:"bp-workflow-list-search",time:3})}if(this.filterPresetId===e){return}this.filterPresetId=e;this.setState({},(()=>{this.statefulList.reload({menuButtons:this.getMenuButtons()},{extra:this.getSearchParams(),useCache:false})}))}onPanList(){this.search.close()}getSearchParams(){return{filterPresetId:this.filterPresetId}}showSearch(){this.search.show()}getMenuButtons(){return[this.getSearchButton()]}getSearchButton(){return{testId:"BP_WORKFLOW_LIST_SEARCH_BUTTON",type:"search",badgeCode:"search",callback:this.showSearch,svg:{content:m(I.colors.base4,this.search.getSearchButtonBackgroundColor())}}}get layout(){return this.props.layout||{}}render(){return this.createStatefulList()}createStatefulList(){return new c({testId:"BP_WORKFLOW_LIST",actions:{loadItems:"bizprocmobile.Workflow.loadList"},actionParams:{loadItems:{extra:this.getSearchParams()}},actionCallbacks:{loadItems:this.onItemsLoaded},itemLayoutOptions:{useItemMenu:true},isShowFloatingButton:true,itemDetailOpenHandler:this.handleWorkflowDetailOpen.bind(this),itemActions:this.getItemActions(),itemParams:{},getEmptyListComponent:this.renderEmptyListComponent.bind(this),layout:layout,layoutOptions:{useSearch:false,useOnViewLoaded:true},onPanListHandler:this.onPanList,menuButtons:this.getMenuButtons(),onFloatingButtonClick:this.handleFloatingButtonClick.bind(this),cacheName:`bizproc.workflow.list.${env.userId}`,itemType:"workflow",itemFactory:k,pull:{moduleId:"bizproc",callback:t=>new Promise((e=>{if(t.command==="workflow"){e(t)}})),notificationAddText:r.getMessage("BPMOBILE_WORKFLOW_LIST_NEW_TASKS_NOTIFICATION"),shouldReloadDynamically:true},ref:t=>this.statefulList=t})}renderEmptyListComponent(){const t=this.filterPresetId!=="in_work";return new l({styles:{container:{paddingHorizontal:20},icon:{marginBottom:50}},image:{uri:l.makeLibraryImagePath("workflows.png","bizproc"),style:{width:148,height:149}},title:r.getMessage(t?"BPMOBILE_WORKFLOW_LIST_EMPTY_TITLE":"BPMOBILE_WORKFLOW_LIST_EMPTY_FILTERED_TITLE"),description:t?null:r.getMessage("BPMOBILE_WORKFLOW_LIST_EMPTY_DESCRIPTION")})}handleWorkflowDetailOpen(t,e){}getItemActions(){return[]}handleFloatingButtonClick(){void requireLazy("lists:element-creation-guide").then((({ElementCreationGuide:t})=>{t.open({layout:this.layout})}))}onItemsLoaded(t,e){const{users:s=[]}=t||{};const a=e==="cache";if(s.length>0){o(a?n(s):i(s))}}}class k extends h{static create(t,e){if(t==="workflow"){return new u(e)}return super.create(t,e)}}s.exports={WorkflowList:w}}));
//# sourceMappingURL=extension.map.js