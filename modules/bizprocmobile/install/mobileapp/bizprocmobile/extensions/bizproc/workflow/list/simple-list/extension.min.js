jn.define("bizproc/workflow/list/simple-list",((e,t,s)=>{const i=e("apptheme");const{EventEmitter:o}=e("event-emitter");const{Loc:a}=e("loc");const{showToast:l,Position:n}=e("toast");const{Type:r}=e("type");const{clone:d,isEmpty:h}=e("utils/object");const{PureComponent:c}=e("layout/pure-component");const{SimpleList:k}=e("layout/ui/simple-list");const{ListItemsFactory:p,ListItemType:T}=e("layout/ui/simple-list/items");const{TaskErrorCode:f}=e("bizproc/task/task-constants");const{ViewMode:m}=e("bizproc/workflow/list/view-mode");const{WorkflowSimpleListItem:u}=e("bizproc/workflow/list/simple-list/item");const{BottomPanel:w}=e("bizproc/workflow/list/simple-list/bottom-panel");class y extends c{static open(e=PageManager,t={}){e.openWidget("layout",{modal:true,titleParams:{text:a.getMessage("BPMOBILE_WORKFLOW_TIMELINE_TITLE_MSGVER_1")},backgroundColor:i.colors.bgContentPrimary,backdrop:{onlyMediumPosition:false,mediumPositionPercent:90,navigationBarColor:i.colors.bgSecondary,swipeAllowed:true,swipeContentAllowed:false,horizontalSwipeAllowed:false},onReady:e=>{e.showComponent(new y({layout:e,...t}))}})}constructor(e){super(e);this.state={selectedTasks:null,viewMode:m.REGULAR,isRefreshing:false};this.items=BX.prop.getArray(this.props,"items",[]);this.fillSelectedTasks();this.uid=e.uid||"bizproc";this.customEventEmitter=o.createWithUid(this.uid);this.onTaskTouch=this.onTaskTouch.bind(this);this.handleWorkflowDetailOpen=this.handleWorkflowDetailOpen.bind(this);this.onTaskSelected=this.onTaskSelected.bind(this);this.onTaskDeselected=this.onTaskDeselected.bind(this);this.onTaskLoadFailed=this.onTaskLoadFailed.bind(this);this.onTaskDelegated=this.onTaskDelegated.bind(this);this.listRef=null;this.listCallbackRef=this.listCallbackRef.bind(this)}fillSelectedTasks(){if(Array.isArray(this.items)){this.state.selectedTasks=new Map;this.state.viewMode=m.MULTISELECT;this.items.forEach((e=>{if(e.selected===true&&!h(e.data.tasks)){const t=e.data.tasks[0];const s=parseInt(t.id,10);this.state.selectedTasks.set(s,{...t,workflowId:e.id,typeName:e.data.typeName,item:e})}}));if(this.state.selectedTasks.size<=0){this.state.selectedTasks=null;this.state.viewMode=m.REGULAR}}}componentDidMount(){this.customEventEmitter.on("TaskDetails:onTaskDelegated",this.onTaskDelegated).on("TaskDetails:onLoadFailed",this.onTaskLoadFailed).on("Task:onTouch",this.onTaskTouch).on("Task:onSelect",this.onTaskSelected).on("Task:onDeselect",this.onTaskDeselected)}componentWillUnmount(){this.customEventEmitter.off("TaskDetails:onTaskDelegated",this.onTaskDelegated).off("TaskDetails:onLoadFailed",this.onTaskLoadFailed).off("Task:onTouch",this.onTaskTouch).off("Task:onSelect",this.onTaskSelected).off("Task:onDeselect",this.onTaskDeselected)}componentWillReceiveProps(e){if(e.items!==undefined){this.items=e.items;this.fillSelectedTasks()}}listCallbackRef(e){this.listRef=e}onTaskTouch({task:e,isInline:t}){const s=this.listRef.getItem(e.workflowId);if(s){this.hideItem(e.workflowId)}if(this.state.selectedTasks){this.onTaskDeselected({task:e})}if(t){this.notifyAboutCompletedTask(e)}}onTaskSelected({task:e,workflowId:t,typeName:s,item:i}){if(!e){return}const o=d(this.selectedTasks);o.set(parseInt(e.id,10),{...e,workflowId:t,typeName:s,item:i});this.setMultipleViewMode(o)}onTaskDeselected({task:e}){if(!e){return}const t=d(this.selectedTasks);t.delete(parseInt(e.id,10));if(h(t)){this.setRegularViewMode();return}this.setMultipleViewMode(t)}onTaskLoadFailed({errors:e,taskId:t,workflowId:s}){if(!this.listRef||!s){return}const i=Array.isArray(e)&&e.length>0?e[0]:{};if(!f.isTaskNotFoundErrorCode(i.code)){return}if(this.isWorkflowFirstTask(s,t)){this.hideItem(s);if(this.state.selectedTasks){this.onTaskDeselected({task:{id:t}})}}}onTaskDelegated({task:e}){if(this.state.selectedTasks){this.onTaskDeselected({task:e})}if(this.isWorkflowFirstTask(e.workflowId,e.id)){this.hideItem(e.workflowId)}}notifyAboutCompletedTask(e){if(e&&e.name&&BX.prop.getBoolean(this.props,"showNotifications",true)===true){l({message:a.getMessage("BPMOBILE_WORKFLOW_SIMPLE_LIST_TASK_TOUCHED",{"#TASK_NAME#":e.name}),time:2,position:this.state.viewMode===m.REGULAR?n.BOTTOM:n.TOP},this.layout)}}get layout(){return this.props.layout||{}}get selectedTasks(){return this.state.selectedTasks||new Map}render(){return View({},this.createList(),this.renderBottomToolbar())}createList(){return new k({testId:"BX_WORKFLOW_SIMPLE_LIST",layout:this.layout,isDynamicMode:false,allItemsLoaded:true,showFloatingButton:false,itemType:"workflow",items:this.addEmptyItem(this.prepareItems(this.items)),itemFactory:I,itemDetailOpenHandler:this.handleWorkflowDetailOpen.bind(this),isRefreshing:this.state.isRefreshing,reloadListHandler:()=>{this.setState({isRefreshing:true},(()=>{this.setState({isRefreshing:false})}))},ref:e=>{this.listRef=e}})}prepareItems(e){const t=d(e);const s=this.selectedTasks;for(const e of t){e.uid=this.uid;e.viewMode=this.state.viewMode;e.selected=false;if(!h(e.data.tasks)){const t=parseInt(e.data.tasks[0].id,10);e.selected=s.has(t)}}return t}addEmptyItem(e){if(e.length>0){e.push({itemType:T.EMPTY_SPACE,type:T.EMPTY_SPACE,key:`${T.EMPTY_SPACE}_bottom`,height:150})}return e}renderBottomToolbar(){if(this.state.viewMode===m.MULTISELECT&&r.isFunction(this.props.bottomPanelContent)){const e=this.selectedTasks;return new w({items:[...e.values()],renderContent:this.props.bottomPanelContent})}return null}handleWorkflowDetailOpen(e,t){const s=t.tasks[0];if(!s){void requireLazy("bizproc:workflow/details").then((({WorkflowDetails:s})=>{if(s){s.open({uid:this.uid,workflowId:e,title:t.typeName||null},this.props.layout)}}));return}void requireLazy("bizproc:task/details").then((({TaskDetails:e})=>{void e.open(this.props.layout,{uid:this.uid,taskId:s.id,workflowId:t.id,title:t.typeName,readOnlyTimeline:BX.prop.getBoolean(this.props,"readOnlyTimeline",false),showNotifications:BX.prop.getBoolean(this.props,"showNotifications",true)})}))}hideItem(e){if(BX.prop.getBoolean(this.props,"canRemoveItems",false)===true){const t=this.items.findIndex((t=>t.id===e));if(t!==-1){this.items.splice(t,1)}}this.listRef.deleteRow(e)}isWorkflowFirstTask(e,t){const s=this.listRef.getItem(e);return Boolean(s&&s.data.tasks&&s.data.tasks[0]?.id===t)}setRegularViewMode(){this.setState({selectedTasks:null,viewMode:m.REGULAR})}setMultipleViewMode(e){this.setState({selectedTasks:e,viewMode:m.MULTISELECT})}}class I extends p{static create(e,t){if(e==="workflow"){return new u(t)}return super.create(e,t)}}s.exports={WorkflowSimpleList:y}}));
//# sourceMappingURL=extension.map.js