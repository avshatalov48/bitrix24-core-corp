jn.define("bizproc/task/tasks-performer/informers/task-list-informer",((t,s,e)=>{const o=t("apptheme");const{EventEmitter:i}=t("event-emitter");const{Loc:n}=t("loc");const{clone:a}=t("utils/object");const{Type:l}=t("type");const{showToast:r,Position:d}=t("toast");const{PureComponent:h}=t("layout/pure-component");const{WorkflowSimpleList:k}=t("bizproc/workflow/list/simple-list");const{AcceptButton:u,Button:T}=t("bizproc/task/buttons");const{TaskErrorCode:c}=t("bizproc/task/task-constants");class p extends h{static open(t={},s=PageManager){return new Promise(((e,i)=>{s.openWidget("layout",{modal:true,titleParams:{text:t.title||"",type:"dialog"},backgroundColor:o.colors.bgContentPrimary,backdrop:{onlyMediumPosition:false,mediumPositionPercent:93,navigationBarColor:o.colors.bgSecondary,swipeAllowed:true,swipeContentAllowed:true,horizontalSwipeAllowed:false},onReady:s=>{s.showComponent(new p({layout:s,tasks:t.tasks,onClose:e,onTasksCompleted:t.onTasksCompleted,onTasksDelegated:t.onTasksDelegated,onTaskNotFoundError:t.onTaskNotFoundError,generateExitButton:t.generateExitButton}))}},s).then((()=>{})).catch(i)}))}constructor(t){super(t);this.uid="task-list-informer";this.customEventEmitter=i.createWithUid(this.uid);this.state={tasks:{}};t.tasks.forEach((t=>{this.state.tasks[t.id]=t}));this.selectedTasks={};this.isClosing=false;this.result={applyToAllTasks:null,oneByOneTasks:null,cancel:false};this.onViewHidden=()=>{if(this.isClosing===false){this.result={oneByOneTasks:Object.values(this.state.tasks)}}this.onClose(this.result)};this.exitButton=null;if(l.isFunction(t.generateExitButton)){this.exitButton=t.generateExitButton((()=>{this.isClosing=true;this.result={cancel:true};this.layout.close()}))}this.onTaskCompleted=this.onTaskCompleted.bind(this);this.onTaskTouch=this.onTaskTouch.bind(this);this.onTasksDelegated=this.onTasksDelegated.bind(this);this.onTaskLoadFailed=this.onTaskLoadFailed.bind(this);this.onTaskCompleteFailed=this.onTaskCompleteFailed.bind(this);this.onApplyToSelectedButtonClick=this.onApplyToSelectedButtonClick.bind(this);this.onDoOneByOneButtonClick=this.onDoOneByOneButtonClick.bind(this);this.renderBottomPanelContent=this.renderBottomPanelContent.bind(this)}get layout(){return this.props.layout}get onClose(){return BX.prop.getFunction(this.props,"onClose",(()=>{}))}componentDidMount(){if(this.exitButton){this.layout.setRightButtons([this.exitButton])}this.layout.on("onViewHidden",this.onViewHidden);this.customEventEmitter.on("Task:onTouch",this.onTaskTouch).on("TaskDetails:onLoadFailed",this.onTaskLoadFailed).on("TaskDetails:onTaskDelegated",this.onTasksDelegated).on("TaskDetails:OnTaskCompleted",this.onTaskCompleted).on("TaskDetails:OnTaskCompleteFailed",this.onTaskCompleteFailed)}componentWillUnmount(){this.layout.off("onViewHidden",this.onViewHidden);this.customEventEmitter.off("Task:onTouch",this.onTaskTouch).off("TaskDetails:onLoadFailed",this.onTaskLoadFailed).off("TaskDetails:onTaskDelegated",this.onTasksDelegated).off("TaskDetails:OnTaskCompleted",this.onTaskCompleted).off("TaskDetails:OnTaskCompleteFailed",this.onTaskCompleteFailed)}render(){return new k({uid:this.uid,showNotifications:false,canRemoveItems:true,layout:this.layout,items:this.listItems,readOnlyTimeline:true,bottomPanelContent:this.renderBottomPanelContent})}get listItems(){const t=[];Object.values(this.state.tasks).forEach((s=>{const e=a(s.item);e.data.readOnlyTimeline=true;e.selected=true;t.push(e)}));return t}onTaskTouch({task:t,isInline:s}){if(s){this.onTaskCompleted({task:t})}}onTaskCompleted({task:t}){if(l.isFunction(this.props.onTasksCompleted)){this.props.onTasksCompleted([t])}this.startTaskDeleting(t.id)}onTasksDelegated({task:t}){if(l.isFunction(this.props.onTasksDelegated)){this.props.onTasksDelegated([t])}this.startTaskDeleting(t.id)}onTaskLoadFailed({taskId:t,errors:s}){const e=Array.isArray(s)&&s.length>0?s[0]:{};if(!c.isTaskNotFoundErrorCode(e.code)){return}if(l.isFunction(this.props.onTaskNotFoundError)){this.props.onTaskNotFoundError([{id:t}])}this.startTaskDeleting(t)}onTaskCompleteFailed({errors:t,task:s}){const e=Array.isArray(t)&&t.length>0?t[0]:{};if(!c.isTaskNotFoundErrorCode(e.code)){return}r({message:e.message,position:d.TOP});if(l.isFunction(this.props.onTaskNotFoundError)){this.props.onTaskNotFoundError([{id:s.id}])}this.startTaskDeleting(s.id)}renderBottomPanelContent(t){this.selectedTasks={};t.forEach((t=>{this.selectedTasks[t.id]=t}));return View({style:{flex:1,flexDirection:"column",marginTop:18}},View({style:{marginBottom:20}},new u({text:n.getMessage("BPMOBILE_TASK_TASKS_PERFORMER_INFORMERS_APPLY_TO_SELECTED"),onClick:this.onApplyToSelectedButtonClick,testId:"MBPTasksPerformerInformersApplyToSelectedButton"})),View({},new T({text:n.getMessage("BPMOBILE_TASK_TASKS_PERFORMER_INFORMERS_DO_ONE_BY_ONE"),style:{borderColor:o.colors.base3,textColor:o.colors.base2},onClick:this.onDoOneByOneButtonClick,testId:"MBPTasksPerformerInformersDoOneByOneButton"})))}onApplyToSelectedButtonClick(){const t=[];const s=[];Object.entries(this.state.tasks).forEach((([e,o])=>{if(l.isUndefined(this.selectedTasks[e])){s.push(o)}else{t.push(o)}}));this.isClosing=true;this.result={applyToAllTasks:t,oneByOneTasks:s};this.layout.close()}onDoOneByOneButtonClick(){this.isClosing=true;this.result={applyToAllTasks:null,oneByOneTasks:Object.values(this.state.tasks)};this.layout.close()}startTaskDeleting(t){delete this.state.tasks[t];if(Object.keys(this.state.tasks).length<=0){setTimeout((()=>{if(this.layout){this.layout.close()}}),100)}}}e.exports={TaskListInformer:p}}));
//# sourceMappingURL=task-list-informer.map.js