jn.define("bizproc/task/tasks-performer/rules/task-hash-rule",((e,t,s)=>{const{Loc:r}=e("loc");const{Rule:n}=e("bizproc/task/tasks-performer/rules/rule");const{OneByOneRule:a}=e("bizproc/task/tasks-performer/rules/one-by-one-rule");const{SimilarTasksInformer:o,TaskListInformer:i}=e("bizproc/task/tasks-performer/informers");class l extends n{static isApplicable(e,t){if(e.length<=0){return false}const s=t.hash;for(const t of e){if(t.hash===s){return true}}return false}constructor(e){super(e);this.delegateRequest=e.delegateRequest;this.doTaskRequest=e.doTaskRequest}async start(){const e=this.tasks[0]??null;if(!e){return Promise.resolve()}const{applyToAll:t,seeDetails:s,doOneByOne:r,cancel:n}=await o.open({typeName:e.typeName,count:this.tasks.length,generateExitButton:this.generateExitButton},this.layout);if(n===true){return Promise.reject()}if(t===true){this.applyDecision(this.tasks);return Promise.resolve()}if(r===true||!t&&!s&&!r){return this.applyOneByOneRule(this.tasks)}if(s===true){return this.openDetailsWidget()}return Promise.resolve()}async openDetailsWidget(){const{applyToAllTasks:e,oneByOneTasks:t,cancel:s}=await i.open({tasks:this.tasks,title:r.getMessage("MBP_TASK_TASKS_PERFORMER_RULES_ONE_TYPE_TASKS_TITLE"),onTasksCompleted:this.onTasksCompleted.bind(this),onTasksDelegated:this.onTasksDelegated.bind(this),onTaskNotFoundError:this.onTaskNotFoundError.bind(this),generateExitButton:this.generateExitButton},this.layout);if(s===true){return Promise.reject()}if(Array.isArray(e)&&e.length>0){this.applyDecision(e)}if(Array.isArray(t)&&t.length>0){return this.applyOneByOneRule(t)}return Promise.resolve()}applyDecision(e){if(this.delegateRequest){this.delegateTasks(e,this.delegateRequest).then((()=>{})).catch((()=>{}))}else if(this.doTaskRequest){this.doTaskCollection(e,this.doTaskRequest).then((()=>{})).catch((()=>{}))}}applyOneByOneRule(e){const t=new a({layout:this.layout,tasks:e,onTasksCancel:this.onTasksCancel.bind(this),onTasksCompleted:this.onTasksCompleted.bind(this),onTasksDelegated:this.onTasksDelegated.bind(this),onTaskNotFoundError:this.onTaskNotFoundError.bind(this),generateExitButton:this.generateExitButton});return t.start()}}s.exports={TaskHashRule:l}}));
//# sourceMappingURL=task-hash-rule.map.js