jn.define("bizproc/task/tasks-performer",((s,t,e)=>{const{Type:o}=s("type");const{PureComponent:r}=s("layout/pure-component");const{Notifier:n}=s("bizproc/task/tasks-performer/notifier");const{RulesChain:a}=s("bizproc/task/tasks-performer/rules");class p extends r{constructor(s){super(s);this.onTasksCompleted=this.onTasksCompleted.bind(this)}onTasksCompleted(s,t){if(o.isFunction(this.props.onTasksCompleted)){this.props.onTasksCompleted(s,t)}}get parentLayout(){return this.props.parentLayout}get tasks(){return BX.prop.getArray(this.props,"tasks",[])}render(){return View({},new a({layout:this.parentLayout,tasks:this.tasks,onFinishRule:this.onTasksCompleted,notifier:new n({tasks:this.tasks}),useInlineDelegation:false}))}}e.exports={TasksPerformer:p}}));
//# sourceMappingURL=extension.map.js