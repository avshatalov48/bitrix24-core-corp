jn.define("bizproc/task/buttons",((t,e,s)=>{const{Alert:i}=t("alert");const n=t("apptheme");const{Loc:o}=t("loc");const{PureComponent:r}=t("layout/pure-component");const{isFunction:a}=t("utils/object");const{Type:l}=t("type");const{EventEmitter:c}=t("event-emitter");class h extends r{constructor(t){super(t);this.customEventEmitter=c.createWithUid("bizproc");this.onTaskTouch=this.onTaskTouch.bind(this)}componentDidMount(){this.customEventEmitter.on("Task:onTouch",this.onTaskTouch)}componentWillUnmount(){this.customEventEmitter.off("Task:onTouch",this.onTaskTouch)}onTaskTouch({task:t}){if(t.id===this.task.id&&this.props.isInline){this.setIsDoing(true)}}get task(){return this.props.task||{}}render(){return View({style:{width:"100%",flexDirection:"row",flexWrap:"no-wrap",height:36},ref:t=>{this.elementRef=t}},this.renderIsDoing(),...this.getButtons())}getButtons(){const t=this.task;let e=[];if(this.state.isDoing){return e}if(this.props.isInline&&!t.isInline){e.push(this.renderStartButton(o.getMessage("BPMOBILE_TASK_BUTTONS_DETAILS"),(()=>{void requireLazy("bizproc:task/details").then((({TaskDetails:e})=>{void e.open(this.props.layout,{taskId:t.id,title:this.props.title})}))})))}else if(t.buttons&&t.buttons.length>0){e=t.buttons.map((e=>{const s=e.TARGET_USER_STATUS===2||e.TARGET_USER_STATUS===4;if(s){return this.renderDeclineButton(e.TEXT,(()=>this.onTaskButtonAction(t,e)))}return this.renderAcceptButton(e.TEXT,(()=>this.onTaskButtonAction(t,e)))}))}if(e.length<2&&this.props.isInline){e.push(this.renderDetailButton(o.getMessage("BPMOBILE_TASK_BUTTONS_DETAILS_LINK")))}return e}renderIsDoing(){if(this.state.isDoing!==true){return null}return View({},Text({text:o.getMessage("BPMOBILE_TASK_BUTTONS_STATUS_LABEL"),style:p.statusTitle}),Text({testId:`${this.testId}_STATUS_TEXT`,text:o.getMessage("BPMOBILE_TASK_BUTTONS_STATUS_IS_DOING"),style:p.statusText,numberOfLines:1,ellipsize:"end"}))}renderStartButton(t,e){return this.renderButton("start",t,e)}renderAcceptButton(t,e){return this.renderButton("accept",t,e)}renderDeclineButton(t,e){return this.renderButton("decline",t,e)}renderButton(t,e,s){const i=!this.props.isInline&&this.task.buttons.length===1;return View({style:{flexGrow:1,flexShrink:1,flexDirection:"row",marginLeft:d[t].marginLeft,marginRight:i?0:d[t].marginRight,justifyContent:"center",height:36,borderRadius:100,borderWidth:1,borderColor:d[t].borderColor,padding:8,paddingHorizontal:16,width:i?"100%":"50%",maxWidth:i?"100%":"50%"},testId:`${this.testId}_BUTTON_${t.toUpperCase()}`,onClick:s},u[t]&&Image({style:{width:28,height:28,alignSelf:"center"},svg:{content:u[t]}}),Text({style:{fontWeight:"500",fontSize:this.props.isInline?15:14,color:d[t].textColor},text:e,ellipsize:"end",numberOfLines:1}))}renderDetailButton(t){return View({style:{flexGrow:1,flexDirection:"row",justifyContent:"center",height:36,padding:8},testId:`${this.testId}_BUTTON_DETAILS`,onClick:()=>{void requireLazy("bizproc:task/details").then((({TaskDetails:t})=>{void t.open(this.props.layout,{taskId:this.task.id,title:this.props.title})}))}},Text({style:{fontWeight:"500",fontSize:14,ellipsize:"end",numberOfLines:1,color:n.colors.base3},text:t}))}onTaskButtonAction(t,e){const s={taskId:t.id,taskRequest:{INLINE_USER_STATUS:e.TARGET_USER_STATUS}};const i=a(this.props.onBeforeAction)?this.props.onBeforeAction(t,e):null;const n=a(i?.then)?i:Promise.resolve(i);n.then((t=>{if(!l.isNil(t)){s.taskRequest.fields=t}this.doTask(s)})).catch((()=>{}))}doTask(t){this.customEventEmitter.emit("Task:onTouch",{task:this.task});BX.ajax.runAction("bizprocmobile.Task.do",{data:t}).then((t=>{if(a(this.props.onComplete)){this.props.onComplete(t.data)}})).catch((({errors:t})=>{i.alert(t.pop().message);if(a(this.props.onFail)){this.props.onFail()}}))}setIsDoing(t){if(t===this.state.isDoing){return}if(!this.elementRef){return}const e=300;const s=0;this.elementRef.animate({duration:e,opacity:s},(()=>{this.setState({isDoing:t},(()=>{this.elementRef.animate({duration:e,opacity:1},(()=>{this.state.isDoing=!t}))}))}))}}const u={accept:(()=>{const t=n.colors.accentMainSuccess;return`\n\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" width="23" height="22" viewBox="0 0 23 22" fill="none">\n\t\t\t\t\t<path fill-rule="evenodd" clip-rule="evenodd" d="M5.33044 12.102L9.88012 16.7472L18.1638 8.28963L16.5714 6.66382L9.88012 13.4955L6.92283 10.4762L5.33044 12.102Z" fill="${t}"/>\n\t\t\t\t</svg>\n\t\t\t`})(),decline:(()=>{const t=n.colors.base2;return`\n\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" width="23" height="22" viewBox="0 0 23 22" fill="none">\n\t\t\t\t\t<path fill-rule="evenodd" clip-rule="evenodd" d="M15.6939 17.1677L17.6673 15.1943L13.7205 11.2475L17.6673 7.30077L15.6939 5.32739L11.7472 9.27415L7.8004 5.32739L5.82703 7.30077L9.77378 11.2475L5.82703 15.1943L7.8004 17.1677L11.7472 13.2209L15.6939 17.1677Z" fill="${t}"/>\n\t\t\t\t</svg>\n\t\t\t`})()};const d={accept:{borderColor:n.colors.accentMainSuccess,textColor:n.colors.accentMainSuccess,marginLeft:0,marginRight:6},decline:{borderColor:n.colors.base5,textColor:n.colors.base2,marginLeft:6,marginRight:0},start:{borderColor:n.colors.accentMainPrimary,textColor:n.colors.accentMainPrimary,marginLeft:0,marginRight:6}};const p={statusTitle:{fontSize:11,height:14,fontWeight:"400",color:n.colors.base4},statusText:{fontSize:14,height:17,fontWeight:"400",color:n.colors.base1}};s.exports={TaskButtons:h}}));
//# sourceMappingURL=extension.map.js