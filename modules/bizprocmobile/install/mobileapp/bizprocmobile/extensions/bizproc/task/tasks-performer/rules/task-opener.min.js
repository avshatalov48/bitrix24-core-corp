jn.define("bizproc/task/tasks-performer/rules/task-opener",((t,e,s)=>{const o=t("apptheme");const{EventEmitter:i}=t("event-emitter");const{Type:a}=t("type");const{showToast:n,Position:r}=t("toast");const{TaskErrorCode:l}=t("bizproc/task/task-constants");const{TaskDetails:u}=t("bizproc/task/details");class d{constructor(t){this.parentLayout=t.parentLayout;this.widgetParams={modal:true,titleParams:{text:t.widgetTitle,type:"dialog"},backgroundColor:o.colors.bgSecondary,backdrop:{onlyMediumPosition:false,mediumPositionPercent:90,navigationBarColor:o.colors.bgSecondary,swipeAllowed:true,swipeContentAllowed:true,horizontalSwipeAllowed:false}};this.uid=`${t.uid}-task-${t.taskId}`;this.customEventEmitter=i.createWithUid(this.uid);this.componentParams={uid:this.uid,parentLayout:this.parentLayout,taskId:t.taskId,workflowId:null,targetUserId:null,readOnlyTimeline:true,showNotifications:false};this.layout=null;this.result={doTaskRequest:null,delegateRequest:null,finishRule:false,taskNotFound:false};this.exitButton=null;if(a.isFunction(t.generateExitButton)){this.exitButton=t.generateExitButton((()=>{this.result.finishRule=true;if(this.layout){this.layout.close()}}))}this.subscribeOnEvents()}async open(){let t=false;return new Promise((e=>{this.parentLayout.openWidget("layout",{...this.widgetParams,onReady:s=>{this.layout=s;this.layout.setListener((s=>{if(t||s!=="onViewWillHidden"&&s!=="onViewRemoved"){return}t=true;this.unsubscribeOnEvents();e(this.result)}));this.layout.showComponent(new u({...this.componentParams,layout:this.layout}))}})}))}subscribeOnEvents(){this.eventCallbacks={"TaskDetails:onLoadFailed":({errors:t})=>{if(Array.isArray(t)&&t.length>0){const e=t[0];if(l.isTaskNotFoundErrorCode(e.code)){this.result.taskNotFound=true}}},"TaskDetails:OnTaskCompleteFailed":({errors:t})=>{if(Array.isArray(t)&&t.length>0){const e=t[0];if(l.isTaskNotFoundErrorCode(e.code)){n({message:e.message,position:r.TOP});this.result.taskNotFound=true}}},"TaskDetails:onLoadSuccess":()=>{if(this.layout&&this.layout.setRightButtons&&this.exitButton){this.layout.setRightButtons([this.exitButton])}},"TaskDetails:onTaskDelegated":({request:t})=>{this.result.delegateRequest=t},"TaskDetails:OnTaskCompleted":({request:t})=>{this.result.doTaskRequest=t.taskRequest}};Object.entries(this.eventCallbacks).forEach((([t,e])=>{this.customEventEmitter.on(t,e)}))}unsubscribeOnEvents(){Object.entries(this.eventCallbacks).forEach((([t,e])=>{this.customEventEmitter.off(t,e)}))}}s.exports={TaskOpener:d}}));
//# sourceMappingURL=task-opener.map.js