this.BX=this.BX||{};this.BX.Humanresources=this.BX.Humanresources||{};(function(e,t,s){"use strict";const r=t.defineStore("hr-org-chart",{state:()=>({departments:new Map,currentDepartments:[],focusedNode:0,searchedUserId:0,userId:0}),actions:{async refreshDepartments(e){const[t,r]=await Promise.all([s.getData("humanresources.api.Structure.Node.getByIds",{nodeIds:e}),s.getData("humanresources.api.Structure.Node.current")]);this.currentDepartments=r;Object.keys(t).forEach((e=>{const s=t[e];const r=this.departments.get(Number(e))||{};this.departments.set(Number(e),{...r,heads:s.heads,userCount:s.userCount,employees:null,employeeListOptions:{page:0,shouldUpdateList:true,isListUpdated:false}})}))},changeCurrentDepartment(e,t){const s=this.currentDepartments.filter((t=>t!==e));if(!t){this.currentDepartments=s;return}this.currentDepartments=[...s,t]},async loadHeads(e){if(e.length===0){return}const t=await s.getData("humanresources.api.Structure.Node.getHeadsByIds",{nodeIds:e});e.forEach((e=>{const s=this.departments.get(e);if(t[e]){this.departments.set(e,{...s,heads:t[e]})}}))}}});e.useChartStore=r})(this.BX.Humanresources.CompanyStructure=this.BX.Humanresources.CompanyStructure||{},BX.Vue3.Pinia,BX.Humanresources.CompanyStructure);
//# sourceMappingURL=chart-store.bundle.map.js