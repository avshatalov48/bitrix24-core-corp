{"version":3,"file":"checker.bundle.js","sources":["../../org-chart/src/api.js","../src/checker.js"],"sourcesContent":["import { getData, postData } from 'humanresources.company-structure.api';\nimport type { TreeItem } from './types';\n\nconst createTreeDataStore = (treeData: Array<TreeItem>): Map<number, TreeItem> => {\n\tconst dataMap = new Map();\n\ttreeData.forEach((item) => {\n\t\tconst { id, parentId } = item;\n\t\tconst mapItem = dataMap.get(id) ?? {};\n\t\tdataMap.set(id, { ...mapItem, ...item });\n\t\tif (parentId === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst mapParentItem = dataMap.get(parentId) ?? {};\n\t\tconst children = mapParentItem.children ?? [];\n\t\tdataMap.set(parentId, {\n\t\t\t...mapParentItem,\n\t\t\tchildren: [...children, id],\n\t\t});\n\t});\n\n\treturn dataMap;\n};\n\nexport const chartAPI = {\n\tremoveDepartment: (id: Number): Promise<void> => {\n\t\treturn getData('humanresources.api.Structure.Node.delete', { nodeId: id });\n\t},\n\tgetDepartmentsData: (): Promise<Array<TreeItem>> => {\n\t\treturn getData('humanresources.api.Structure.get', {}, { tool: 'structure', category: 'structure', event: 'open_structure' });\n\t},\n\tgetCurrentDepartments: (): Promise<number[]> => {\n\t\treturn getData('humanresources.api.Structure.Node.current');\n\t},\n\tgetDictionary: (): Promise<string> => {\n\t\treturn getData('humanresources.api.Structure.dictionary');\n\t},\n\tgetUserId: (): Promise<number> => {\n\t\treturn getData('humanresources.api.User.getCurrentId');\n\t},\n\tfirstTimeOpened: (): Promise<void> => {\n\t\treturn postData('humanresources.api.User.firstTimeOpen');\n\t},\n\tcreateTreeDataStore,\n};\n","/* eslint-disable no-constructor-return */\nimport { chartAPI } from '../../org-chart/src/api';\nimport { useChartStore } from 'humanresources.company-structure.chart-store';\n\nexport const PermissionActions = Object.freeze({\n\tstructureView: 'ACTION_STRUCTURE_VIEW',\n\tchanelBindToStructure: 'ACTION_CHANEL_BIND_TO_STRUCTURE',\n\tchanelUnbindToStructure: 'ACTION_CHANEL_UNBIND_TO_STRUCTURE',\n\tchatBindToStructure: 'ACTION_CHAT_BIND_TO_STRUCTURE',\n\tchatUnbindToStructure: 'ACTION_CHAT_UNBIND_TO_STRUCTURE',\n\tdepartmentCreate: 'ACTION_DEPARTMENT_CREATE',\n\tdepartmentDelete: 'ACTION_DEPARTMENT_DELETE',\n\tdepartmentEdit: 'ACTION_DEPARTMENT_EDIT',\n\temployeeAddToDepartment: 'ACTION_EMPLOYEE_ADD_TO_DEPARTMENT',\n\temployeeRemoveFromDepartment: 'ACTION_EMPLOYEE_REMOVE_FROM_DEPARTMENT',\n\taccessEdit: 'ACTION_USERS_ACCESS_EDIT',\n\tinviteToDepartment: 'ACTION_USER_INVITE',\n});\n\nclass PermissionCheckerClass\n{\n\tstatic FULL_COMPANY = 30;\n\tstatic SELF_AND_SUB = 20;\n\tstatic SELF = 10;\n\tstatic NONE = 0;\n\n\tconstructor(): PermissionCheckerClass\n\t{\n\t\tif (!PermissionCheckerClass.instance)\n\t\t{\n\t\t\tthis.currentUserPermissions = {};\n\t\t\tthis.permissionVariablesDictionary = [];\n\t\t\tthis.isInitialized = false;\n\t\t\tPermissionCheckerClass.instance = this;\n\t\t}\n\n\t\treturn PermissionCheckerClass.instance;\n\t}\n\n\tgetInstance(): PermissionCheckerClass\n\t{\n\t\treturn PermissionCheckerClass.instance;\n\t}\n\n\tasync init(): Promise<void>\n\t{\n\t\tif (this.isInitialized)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { currentUserPermissions, permissionVariablesDictionary } = await chartAPI.getDictionary();\n\t\tthis.currentUserPermissions = currentUserPermissions;\n\n\t\tthis.permissionVariablesDictionary = permissionVariablesDictionary;\n\n\t\tthis.isInitialized = true;\n\t}\n\n\thasPermission(action: string, departmentId: number): boolean\n\t{\n\t\tconst permissionLevel = this.currentUserPermissions[action];\n\n\t\tif (!permissionLevel)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst permissionObject = this.permissionVariablesDictionary.find((item) => item.id === permissionLevel);\n\n\t\tif (!permissionObject)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst departments = useChartStore().departments;\n\t\tif (action === PermissionActions.departmentDelete)\n\t\t{\n\t\t\tconst rootId = [...departments.values()].find((department) => department.parentId === 0).id;\n\t\t\tif (departmentId === rootId)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tconst userDepartments = useChartStore().currentDepartments;\n\t\tswitch (permissionObject.id)\n\t\t{\n\t\t\tcase PermissionCheckerClass.FULL_COMPANY:\n\t\t\t\treturn true;\n\n\t\t\tcase PermissionCheckerClass.SELF_AND_SUB:\n\t\t\t{\n\t\t\t\tif (userDepartments.includes(departmentId))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet currentDepartment = departments.get(departmentId);\n\n\t\t\t\twhile (currentDepartment)\n\t\t\t\t{\n\t\t\t\t\tif (userDepartments.includes(currentDepartment.id))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepartment = departments.get(currentDepartment.parentId);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcase PermissionCheckerClass.SELF:\n\t\t\t\treturn userDepartments.includes(departmentId);\n\n\t\t\tcase PermissionCheckerClass.NONE:\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\thasPermissionOfAction(action: string): boolean\n\t{\n\t\treturn this.currentUserPermissions[action] !== undefined\n\t\t\t&& this.currentUserPermissions[action] !== null\n\t\t\t&& this.currentUserPermissions[action] !== PermissionCheckerClass.NONE\n\t\t;\n\t}\n}\n\nexport const PermissionChecker = new PermissionCheckerClass();\n"],"names":["createTreeDataStore","treeData","dataMap","Map","forEach","item","id","parentId","mapItem","get","set","mapParentItem","children","chartAPI","removeDepartment","getData","nodeId","getDepartmentsData","tool","category","event","getCurrentDepartments","getDictionary","getUserId","firstTimeOpened","postData","PermissionActions","Object","freeze","structureView","chanelBindToStructure","chanelUnbindToStructure","chatBindToStructure","chatUnbindToStructure","departmentCreate","departmentDelete","departmentEdit","employeeAddToDepartment","employeeRemoveFromDepartment","accessEdit","inviteToDepartment","PermissionCheckerClass","constructor","instance","currentUserPermissions","permissionVariablesDictionary","isInitialized","getInstance","init","hasPermission","action","departmentId","permissionLevel","permissionObject","find","departments","useChartStore","rootId","values","department","userDepartments","currentDepartments","FULL_COMPANY","SELF_AND_SUB","includes","currentDepartment","SELF","NONE","hasPermissionOfAction","undefined","PermissionChecker"],"mappings":"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"}