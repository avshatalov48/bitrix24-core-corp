this.BX=this.BX||{};this.BX.Humanresources=this.BX.Humanresources||{};(function(e,t,n,a){"use strict";const s=Object.freeze({HEADER:"header",CARD:"card",DETAIL:"dept_menu",PLUS:"plus"});const o=Object.freeze({employee:"MEMBER_EMPLOYEE",head:"MEMBER_HEAD",deputyHead:"MEMBER_DEPUTY_HEAD"});const c=async(e,n,s={},o={})=>{var c;const r={method:e};if(e==="POST"){Object.assign(r,{data:s},{headers:[{name:"Content-Type",value:"application/json"}]})}let i=null;if(e==="POST"){i=await t.ajax.runAction(n,r)}else{const e={data:s};i=await t.ajax.runAction(n,e)}if((o==null?void 0:(c=o.event)==null?void 0:c.length)>0){a.sendData(o)}return i.data};const r=e=>{var t;if(((t=e.errors)==null?void 0:t.length)>0){const t=e.errors[0];if(t.code!=="STRUCTURE_ACCESS_DENIED"){throw t}n.UI.Notification.Center.notify({content:t.message,autoHideDelay:4e3})}};const i=(e,t,n)=>c("GET",e,t!=null?t:{},n!=null?n:{}).catch(r);const u=(e,t,n)=>c("POST",e,t,n!=null?n:{}).catch(r);e.getData=i;e.postData=u;e.memberRoles=o;e.AnalyticsSourceType=s})(this.BX.Humanresources.CompanyStructure=this.BX.Humanresources.CompanyStructure||{},BX,BX,BX.UI.Analytics);
//# sourceMappingURL=api.bundle.map.js