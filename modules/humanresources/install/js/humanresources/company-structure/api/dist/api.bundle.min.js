this.BX=this.BX||{};this.BX.Humanresources=this.BX.Humanresources||{};(function(e,t,n,a){"use strict";const s=Object.freeze({HEADER:"header",CARD:"card",DETAIL:"dept_menu",PLUS:"plus"});const o=Object.freeze({employee:"MEMBER_EMPLOYEE",head:"MEMBER_HEAD",deputyHead:"MEMBER_DEPUTY_HEAD"});const r=async(e,n,s={},o={})=>{var r;const u={method:e};if(e==="POST"){Object.assign(u,{data:s},{headers:[{name:"Content-Type",value:"application/json"}]})}let i=null;try{if(e==="POST"){i=await t.ajax.runAction(n,u)}else{const e={data:s};i=await t.ajax.runAction(n,e)}}catch(e){c(e);return null}if((o==null?void 0:(r=o.event)==null?void 0:r.length)>0){a.sendData(o)}return i.data};const c=e=>{var t;if(((t=e.errors)==null?void 0:t.length)>0){const[t]=e.errors;if(t.code!=="STRUCTURE_ACCESS_DENIED"){throw t}n.UI.Notification.Center.notify({content:t.message,autoHideDelay:4e3})}};const u=(e,t,n)=>r("GET",e,t!=null?t:{},n!=null?n:{});const i=(e,t,n)=>r("POST",e,t,n!=null?n:{});e.getData=u;e.postData=i;e.memberRoles=o;e.AnalyticsSourceType=s})(this.BX.Humanresources.CompanyStructure=this.BX.Humanresources.CompanyStructure||{},BX,BX,BX.UI.Analytics);
//# sourceMappingURL=api.bundle.map.js