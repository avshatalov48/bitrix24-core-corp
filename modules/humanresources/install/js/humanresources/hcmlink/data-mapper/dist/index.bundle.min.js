this.BX=this.BX||{};this.BX.Humanresources=this.BX.Humanresources||{};(function(t,e,n,s,i,o,r,a,l,c,p,d,m){"use strict";const u={name:"Separator",props:{hasLink:{required:true,type:Boolean}},computed:{styleObject(){return{"--ui-icon-set__icon-color":this.hasLink?"#FFC34D":"#D5D7DB"}}},template:`\n\t\t<div class="hr-hcmlink-separator__container" ref="container">\n            <div \n\t            style="--ui-icon-set__icon-size: 24px;"\n\t            :style="styleObject"\n                class="ui-icon-set"\n\t            :class="[ hasLink ? '--arrow-right' : '--delete-hyperlink']"\n            ></div>\n\t\t</div>\n\t`};const h={name:"PersonItem",props:{config:{required:true,type:Object},mappedUserIds:{required:true,type:Array}},data(){return{isBorderedEmployee:this.config.mode==="direct"}},emits:["addEntity","removeEntity"],mounted(){const t=this.config.mode==="direct"?this.getPersonTagSelector():this.getUserTagSelector();t.renderTo(this.$refs.container)},methods:{getUserTagSelector(){const t=new n.TagSelector({multiple:false,events:{onTagRemove:t=>{const{tag:e}=t.getData();this.handleItemRemove(e)},onTagAdd:t=>{const{tag:e}=t.getData();this.handleItemSelect(e)}},addButtonCaption:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_SELECTOR_BUTTON_CAPTION"),showCreateButton:false,dialogOptions:{id:"hcmlink-user-dialog",width:380,searchOptions:{allowCreateItem:false},entities:[{id:"user",options:{"!userId":this.mappedUserIds,inviteEmployeeLink:false,intranetUsersOnly:true}}],tabs:[{id:"user",title:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_DIALOG_TAB_TITLE_USER")}],recentTabOptions:{visible:false}}});t.getOuterContainer().style.width="100%";return t},getPersonTagSelector(){const t=new n.TagSelector({multiple:false,events:{onTagRemove:t=>{const{tag:e}=t.getData();this.handleItemRemove(e)},onTagAdd:t=>{const{tag:e}=t.getData();this.handleItemSelect(e)}},addButtonCaption:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_SELECTOR_BUTTON_CAPTION"),showCreateButton:false,tagTextColor:"#333",tagBgColor:"#FFF1D6",tagFontWeight:"400",dialogOptions:{id:"hcmlink-person-dialog",enableSearch:true,width:380,searchOptions:{allowCreateItem:false},entities:[{id:"hcmlink-person-data",options:{companyId:this.config.companyId,inviteEmployeeLink:false},dynamicLoad:true,dynamicSearch:true,enableSearch:true}],tabs:[{id:"persons",title:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_DIALOG_TAB_TITLE_PERSON")}],recentTabOptions:{visible:false}}});t.getOuterContainer().style.border="none";t.getOuterContainer().style.width="100%";return t},handleItemRemove(t){this.$emit("removeEntity",{id:t.id})},handleItemSelect(t){this.$emit("addEntity",{id:t.id})}},template:`\n\t\t<div \n\t\t\tclass="hr-hcmlink-item-employee__container"\n\t\t\t:class="{'hr-hcmlink-selector-entity__border': isBorderedEmployee}"\n\t\t\tref="container"\n\t\t></div>\n\t`};const g={name:"UserItem",props:{item:{type:Object,required:true},mode:{type:String,required:true}},mounted(){this.getUserAvatarEntity().renderTo(this.$refs.avatarContainer)},methods:{getUserAvatarEntity(){return new i.AvatarRound({size:36,userName:this.item.name,baseColor:"#FF7C78",userpicPath:this.item.avatarLink})}},template:`\n\t\t<div \n\t\t\tclass="hr-hcmlink-item-user__container"\n\t\t\t:class="{'hr-hcmlink-item-user__container_person': mode === 'reverse'}"\n\t\t\tref="container"\n\t\t>\n\t\t\t<div class="hr-hcmlink-item-user__avatar" ref="avatarContainer"></div>\n\t\t\t<div class="hr-hcmlink-item-user_info">\n\t\t\t\t<div class="hr-hcmlink-item-user__info-name">{{ item.name }}</div>\n\t\t\t\t<div class="hr-hcmlink-item-user__info-position">{{ item.position }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const _={name:"MoreOption",methods:{showMenu(){const t=r.PopupMenu.create({id:"humanresources-mapper-menu-line-option",autoHide:true,bindElement:this.$refs.container,items:[{text:"first",onclick:(t,e)=>{e.menuWindow.close()}},{text:"second",onclick:(t,e)=>{e.menuWindow.close()}}]});t.show()}},mounted(){new o.Icon({icon:o.Main.MORE_INFORMATION,size:24,color:getComputedStyle(document.body).getPropertyValue("--ui-color-palette-gray-30")}).renderTo(this.$refs.container)},template:`\n\t\t<div class="hr-hcmlink-more-options__container">\n\t\t\t<span \n\t\t\t\tref="container"\n\t\t\t\t@click="showMenu"\n\t\t\t></span>\n\t\t</div>\n\t`};const v={name:"Line",props:{item:{type:Object,required:true},mappedUserIds:{type:Array,required:true},config:{type:Object,required:true}},data(){return{hasLink:false}},emits:["createLink","removeLink"],components:{PersonItem:h,UserItem:g,Separator:u,MoreOptions:_},methods:{onAddEntity(t){if(this.config.mode==="direct"){this.$emit("createLink",{userId:this.item.id,personId:t.id});this.hasLink=true}else{this.$emit("createLink",{userId:t.id,personId:this.item.id});this.hasLink=true}},onRemoveEntity(t){const e=this.config.mode==="direct"?this.item.id:t.id;this.$emit("removeLink",{userId:e});this.hasLink=false}},template:`\n\t\t<div class="hr-hcmlink-sync__line-container">\n\t\t\t<div class="hr-hcmlink-sync__line-left-container">\n\t\t\t\t<UserItem\n\t\t\t\t\t:item = item\n\t\t\t\t    :mode="config.mode"\n\t\t\t\t></UserItem>\n\t\t\t\t<Separator\n\t\t\t\t\t:hasLink = hasLink\n\t\t\t\t></Separator>\n\t\t\t</div>\n\t\t\t<div class="hr-hcmlink-sync__line-right-container">\n\t\t\t\t<PersonItem\n\t\t\t\t\t:config = config\n\t\t\t\t\t:mappedUserIds=mappedUserIds\n\t\t\t\t\t@addEntity="onAddEntity"\n\t\t\t\t\t@removeEntity="onRemoveEntity"\n\t\t\t\t></PersonItem>\n\t\t\t</div>\n\t\t</div>\n\t`};const E={name:"ColumnTitle",props:{mode:{type:String,required:true}},template:`\n\t\t<template v-if="mode=='direct'">\n\t\t\t<div class="hr-hcmlink-sync__column-title-container">\n\t\t\t\t<div>\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('HUMANRESOURCES_HCMLINK_MAPPER_COLUMN_TITLE_BITRIX') }}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('HUMANRESOURCES_HCMLINK_MAPPER_COLUMN_TITLE_ZUP') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template v-else>\n\t\t\t<div class="hr-hcmlink-sync__column-title-container">\n\t\t\t\t<div>\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('HUMANRESOURCES_HCMLINK_MAPPER_COLUMN_TITLE_ZUP') }}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('HUMANRESOURCES_HCMLINK_MAPPER_COLUMN_TITLE_BITRIX') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t`};const I={name:"Counter",props:{countAllPersonsForMap:{required:true,type:Number},countMappedPersons:{required:true,type:Number},countUnmappedPersons:{required:true,type:Number},config:{required:true,type:Object}},template:`\n        <div class="hr-hcmlink-sync__page_counter_container">\n\t\t\t<template v-if="config.mode === 'direct'">\n\t\t\t\t<span class="hr-hcmlink-sync__page_count-title">{{ $Bitrix.Loc.getMessage('HUMANRESOURCES_HCMLINK_MAPPER_SLIDER_PAGE_MAPPED_TITLE') }}: </span>\n\t\t\t\t<span class="hr-hcmlink-sync__page_mapped-persons-count">{{ countMappedPersons }} </span>\n\t\t\t\t<span class="hr-hcmlink-sync__page_all-persons-count"> / {{ countAllPersonsForMap }} </span>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<span class="hr-hcmlink-sync__page_count-title">{{ $Bitrix.Loc.getMessage('HUMANRESOURCES_HCMLINK_MAPPER_SLIDER_PAGE_UNMAPPED_TITLE') }}: </span>\n\t\t\t\t<span class="hr-hcmlink-sync__page_mapped-persons-count">{{ countUnmappedPersons }} </span>\n\t\t\t</template>\n        </div>\n\t`};let M=t=>t,f;const y="23343056";const S={name:"Page",props:{collection:{required:true,type:Array},mappedUserIds:{required:true,type:Array},config:{required:true,type:{mode:String,isHideInfoAlert:Boolean}}},components:{Line:v,ColumnTitle:E,Counter:I},emits:["createLink","removeLink","closeAlert"],mounted(){if(!this.config.isHideInfoAlert){this.showAlert()}},methods:{showAlert(){const t=d.Tag.render(f||(f=M`<span class="hr-hcmlink-mapping-alert-container__more-button">${0}</span>`),d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_SHOW_MORE_BUTTON"));const n=new e.Alert({text:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_ALERT_INFO"),color:e.Alert.Color.PRIMARY,size:e.Alert.Size.MD,closeBtn:true,animated:true,customClass:"hr-hcmlink-mapping-alert-container",afterMessageHtml:t});n.renderTo(this.$refs.alertContainer);d.Event.bind(n.getCloseBtn(),"click",this.onCloseAlertButton);d.Event.bind(t,"click",this.showDocumentation)},showDocumentation(t){if(top.BX.Helper){t.preventDefault();top.BX.Helper.show(`redirect=detail&code=${y}`)}},onCloseAlertButton(){this.$emit("closeAlert")},onCreateLink(t){this.$emit("createLink",t)},onRemoveLink(t){this.$emit("removeLink",t)}},template:`\n\t\t<div>\n\t\t\t<div ref="alertContainer" v-if="!config.isHideInfoAlert"></div>\n\t\t\t<div class="hr-hcmlink-mapping-page-container" ref="container">\n\t\t\t\t<div style="z-index: 100">\n\t\t\t\t\t<ColumnTitle\n\t\t\t\t\t\t:mode = config.mode\n\t\t\t\t\t></ColumnTitle>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for="item in collection"\n\t\t\t\t\t\t:key="item.id"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\t:item = item\n\t\t\t\t\t\t\t:config = config\n\t\t\t\t\t\t\t:mappedUserIds=mappedUserIds\n\t\t\t\t\t\t\t@createLink="onCreateLink"\n\t\t\t\t\t\t\t@removeLink="onRemoveLink"\n\t\t\t\t\t\t></Line>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="hr-hcmlink-mapping-page-person-wrapper hr-hcmlink-mapping-page-person-wrapper_right" ref="person_wrapper" v-if="config.mode == 'direct'"></div>\n\t\t\t\t<div class="hr-hcmlink-mapping-page-person-wrapper hr-hcmlink-mapping-page-person-wrapper_left" ref="person_wrapper" v-if="config.mode == 'reverse'"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const L={name:"Loader",props:{size:{type:Number,default:70},color:{type:String,default:"#2fc6f6"},offset:{type:Object,default:null},mode:{type:String,default:""}},created(){this.loader=null},async mounted(){const{Loader:t}=await d.Runtime.loadExtension("main.loader");this.loader=new t({target:this.$refs.container,size:this.size,color:this.color,offset:this.offset,mode:this.mode});this.loader.show()},beforeUnmount(){if(this.loader){this.loader.destroy();this.loader=null}},template:'<span ref="container"></span>'};const C={name:"StateScreen",props:{status:{required:true,type:String}},data(){return{state:this.isDoneState()?"done":"pending"}},emits:["completeMapping"],methods:{isDoneState(){return["done","salaryDone"].includes(this.status)},getButton(){const t=this.status==="done"?d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_BUTTON_CLOSE"):d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_BUTTON_SALARY_CLOSE");return new c.Button({color:c.Button.Color.LIGHT_BORDER,round:true,size:c.Button.Size.LARGE,text:t,onclick:()=>{this.$emit("completeMapping");BX.SidePanel.Instance.getTopSlider().close()}})}},mounted(){this.getButton().renderTo(this.$refs.buttonContainer)},computed:{title(){switch(this.status){case"pending":return d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_TITLE_STATUS_PENDING");case"done":return d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_TITLE_STATUS_DONE");case"salaryDone":return d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_TITLE_STATUS_SALARY_DONE");default:return""}},description(){switch(this.status){case"pending":return d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_DESCRIPTION_STATUS_PENDING");case"done":return d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_DESCRIPTION_STATUS_DONE");case"salaryDone":return d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_STATE_DESCRIPTION_STATUS_SALARY_DONE");default:return""}},stateClassList(){return{"--done":this.isDoneState(),"--pending":this.status==="pending"}}},template:`\n\t\t<div \n\t\t\tclass="hr-hcmlink-mapping-person__state-screen"\n            :class="stateClassList"\n\t\t>\n\t\t\t<div class="hr-hcmlink-mapping-person__state-screen_icon"></div>\n\t\t\t<div class="hr-hcmlink-mapping-person__state-screen_title">{{ title }}</div>\n\t\t\t<div \n\t\t\t\tclass="hr-hcmlink-mapping-person__state-screen_desc"\n\t\t\t\tv-html="description"\n\t\t\t>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tv-if="state === 'done'"\n\t\t\t\tclass="hr-hcmlink-mapping-person__state-screen_close-button" ref="buttonContainer"\n\t\t\t></div>\n\t\t</div>\n\t`};let R=t=>t,A;var T=babelHelpers.classPrivateFieldLooseKey("container");var P=babelHelpers.classPrivateFieldLooseKey("application");class U{constructor(t){Object.defineProperty(this,T,{writable:true,value:void 0});Object.defineProperty(this,P,{writable:true,value:null});this.api=new p.Api;this.options=t;if(d.Type.isNil(this.options.userIds)){this.options.userIds=new Set}}static openSlider(t,e){var n;BX.SidePanel.Instance.open("humanresources:mapper",{width:800,loader:"default-loader",cacheable:false,contentCallback:()=>top.BX.Runtime.loadExtension("humanresources.hcmlink.data-mapper").then((e=>new e.Mapper(t).getLayout())),events:{onClose:(n=e==null?void 0:e.onCloseHandler)!=null?n:()=>{}}})}renderTo(t){d.Dom.append(this.render(),t)}render(){babelHelpers.classPrivateFieldLooseBase(this,T)[T]=document.createElement("div");if(babelHelpers.classPrivateFieldLooseBase(this,P)[P]===null){babelHelpers.classPrivateFieldLooseBase(this,P)[P]=l.BitrixVue.createApp(this.makeRootVueComponent());this.component=babelHelpers.classPrivateFieldLooseBase(this,P)[P].mount(babelHelpers.classPrivateFieldLooseBase(this,T)[T])}return babelHelpers.classPrivateFieldLooseBase(this,T)[T]}async getLayout(){const t=function(){return this.render()}.bind(this);const e=async function(){const t=Object.values(this.component.getUserMappingSet());return this.api.saveMapping({collection:t,companyId:this.options.companyId})}.bind(this);const n=async function(){this.component.prepareNextUsers()}.bind(this);this.layout=await m.Layout.createLayout({extensions:["humanresources.hcmlink.data-mapper","ui.entity-selector","ui.icon-set.actions","ui.select","popup"],title:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_SLIDER_TITLE"),toolbar(){return[d.Tag.render(A||(A=R`<div id="hr-hcmlink-toolbar-container"></div>`))]},content(){return t()},buttons({cancelButton:t,SaveButton:s}){return[new s({text:d.Loc.getMessage("HUMANRESOURCES_HCMLINK_MAPPER_BUTTON_SAVE_AND_CONTINUE"),async onclick(){const t=await e();if(t){await n()}},round:true}),t]}});return this.layout.render()}makeRootVueComponent(){const t=this;return{name:"HumanresourcesHcmlinkMapper",components:{Page:S,Loader:L,Counter:I,StateScreen:C},data(){var e;return{loading:false,config:{companyId:t.options.companyId,mode:(e=t.options.mode)!=null?e:"direct",isHideInfoAlert:true},pageCount:0,mappingEntityCollection:[],userMappingSet:{},userIdCollection:[...t.options.userIds],isJobResolved:false,jobId:null,isDone:false,countAllPersonsForMap:0,countMappedPersons:0,countUnmappedPersons:0,counterContainer:"#hr-hcmlink-toolbar-container",isReadyToolbar:false,completedStatus:t.options.mode==="direct"?"done":"salaryDone",jobResolverInterval:null,mappedUserIds:[]}},created(){this.footerDisplay(false);this.createUpdateEmployeeListJob()},computed:{isJobPending(){return!this.isJobResolved&&!this.isDone},isMappingReady(){return this.isJobResolved&&!this.isDone},isMappingDone(){return this.isJobResolved&&this.isDone}},watch:{pageCount(){this.loadConfig()},isMappingReady(t){if(t){this.footerDisplay(true)}},isMappingDone(t){if(t){this.footerDisplay(false)}}},mounted(){this.countAllPersonsForMap=this.userIdCollection.length;this.$nextTick((()=>{this.isReadyToolbar=true}))},unmounted(){clearInterval(this.jobResolverInterval)},methods:{prepareNextUsers(){this.userMappingSet={};this.pageCount++},getUserMappingSet(){return this.userMappingSet},onCreateLink(t){this.userMappingSet[t.userId]=t},onRemoveLink(t){if(this.userMappingSet[t.userId]!==undefined){delete this.userMappingSet[t.userId]}},onCloseAlert(){t.api.closeInfoAlert()},onCompleteMapping(){t.api.createCompleteMappingEmployeeListJob({companyId:this.config.companyId})},async loadConfig(){this.loading=true;const{items:e,countMappedPersons:n,countUnmappedPersons:s,isHideInfoAlert:i,mappedUserIds:o}=await t.api.loadMapperConfig({companyId:this.config.companyId,userIds:this.userIdCollection,mode:this.config.mode});this.config.isHideInfoAlert=i;this.countUnmappedPersons=s;this.countMappedPersons=n;this.mappingEntityCollection=d.Type.isArray(e)?e:[];this.mappedUserIds=o;this.isDone=this.mappingEntityCollection.length===0;this.loading=false},async createUpdateEmployeeListJob(){const e=await t.api.createUpdateEmployeeListJob({companyId:this.config.companyId});this.jobId=e.jobId;this.jobResolverInterval=setInterval(this.jobResolver.bind(this),3e4);BX.PULL.subscribe({type:BX.PullClient.SubscriptionType.Server,moduleId:"humanresources",command:"external_employee_list_updated",callback:async function(t){if(t.jobId===this.jobId&&t.status===3){clearInterval(this.jobResolverInterval);await this.loadConfig(t);this.isJobResolved=true}}.bind(this)});BX.PULL.extendWatch("humanresources_person_mapping")},async jobResolver(){const{params:e}=await t.api.getJobStatus({jobId:this.jobId});if(e.status===3){clearInterval(this.jobResolverInterval);await this.loadConfig(e);this.isJobResolved=true}},footerDisplay(e){var n;if(!t.layout){return}if(t.layout.getFooterContainer()){d.Dom.style(t.layout.getFooterContainer(),"display",e?"block":"none")}const s=(n=t.layout.getContainer())==null?void 0:n.getElementsByClassName("ui-sidepanel-layout-footer-anchor")[0];if(s){d.Dom.style(s,"display",e?"block":"none")}}},template:`\n                <template v-if="isJobPending">\n                    <StateScreen\n                        status='pending'\n                    ></StateScreen>\n                </template>\n                <template v-if="isMappingReady">\n                    <Loader v-if="loading"></Loader>\n                    <Page\n                        :collection=mappingEntityCollection\n\t\t\t\t\t\t:mappedUserIds=mappedUserIds\n                        :config=config\n                        @createLink="onCreateLink"\n                        @removeLink="onRemoveLink"\n\t\t\t\t\t\t@closeAlert="onCloseAlert"\n                    ></Page>\n                </template>\n                <template v-if="isMappingDone">\n                    <StateScreen\n\t                    :status=completedStatus\n\t\t\t\t\t\t@completeMapping='onCompleteMapping'\n                    ></StateScreen>\n                </template>\n\t\t\t\t<Teleport v-if="isReadyToolbar && isMappingReady" :to="counterContainer">\n\t\t\t\t\t<Counter\n\t\t\t\t\t\t:countAllPersonsForMap=countAllPersonsForMap\n\t\t\t\t\t\t:countMappedPersons=countMappedPersons\n\t\t\t\t\t\t:countUnmappedPersons=countUnmappedPersons\n\t\t\t\t\t\t:config=config\n\t\t\t\t\t></Counter>\n\t\t\t\t</Teleport>\n\t\t\t`}}}U.MODE_DIRECT="direct";U.MODE_REVERSE="reverse";t.Mapper=U})(this.BX.Humanresources.Hcmlink=this.BX.Humanresources.Hcmlink||{},BX.UI,BX.UI.EntitySelector,BX.Event,BX.UI,BX.UI.IconSet,BX.Main,BX,BX.Vue3,BX.UI,BX.Humanresources.Hcmlink,BX,BX.UI.SidePanel);
//# sourceMappingURL=index.bundle.map.js