{"version":3,"file":"script.js","sources":["src/entity-counter-manager.js","src/entity-counter-type.js","src/entity-counter-filter-manager.js","src/entity-counter-panel.js"],"sourcesContent":["import { ajax as Ajax, Loc, Text, Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport type { EntityCounterManagerOptions } from './entity-counter-manager-options';\n\nexport default class EntityCounterManager\n{\n\tstatic lastInstance:?EntityCounterManager = null;\n\n\t#id: string;\n\t#entityTypeId: number;\n\t#entityTypeName: string;\n\t#serviceUrl: string;\n\t#codes: Array;\n\t#extras: Object;\n\t#counterData: Object;\n\t#isRequestRunning: boolean;\n\n\tconstructor(options: EntityCounterManagerOptions): void\n\t{\n\t\tif (!Type.isPlainObject(options))\n\t\t{\n\t\t\tthrow 'BX.Crm.EntityCounterManager: The \"options\" argument must be object.';\n\t\t}\n\n\t\tthis.#id = Type.isString(options.id) ? options.id : '';\n\t\tif (this.#id === '')\n\t\t{\n\t\t\tthrow 'BX.Crm.EntityCounterManager: The \"id\" argument must be specified.';\n\t\t}\n\n\t\tthis.#serviceUrl = Type.isString(options.serviceUrl) ? options.serviceUrl : '';\n\t\tif (this.#serviceUrl === '')\n\t\t{\n\t\t\tthrow 'BX.Crm.EntityCounterManager: The \"serviceUrl\" argument must be specified.';\n\t\t}\n\n\t\tthis.#entityTypeId = options.entityTypeId ? Text.toInteger(options.entityTypeId) : 0;\n\t\tthis.#entityTypeName = BX.CrmEntityType.resolveName(this.#entityTypeId);\n\t\tthis.#codes = Type.isArray(options.codes) ? options.codes : [];\n\t\tthis.#extras = Type.isObject(options.extras) ? options.extras : {};\n\t\tthis.#counterData = {};\n\n\t\tthis.#bindEvents();\n\n\t\tthis.constructor.lastInstance = this;\n\t}\n\n\t#bindEvents(): void\n\t{\n\t\tEventEmitter.subscribe('onPullEvent-main', this.#onPullEvent.bind(this));\n\t}\n\n\t#onPullEvent(event: BaseEvent): void\n\t{\n\t\tconst [ command, params ] = event.getData();\n\t\tif (command !== 'user_counter')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet enableRecalculation = false;\n\t\tlet enableRecalculationWithRequest = false;\n\t\tconst currentSiteId = Loc.getMessage('SITE_ID');\n\t\tconst counterData = Type.isPlainObject(params[currentSiteId]) ? params[currentSiteId] : {};\n\t\tfor (let counterId in counterData)\n\t\t{\n\t\t\tif (\n\t\t\t\t!counterData.hasOwnProperty(counterId)\n\t\t\t\t|| this.#codes.indexOf(counterId) < 0\n\t\t\t)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst counterValue = BX.prop.getInteger(counterData, counterId, 0);\n\t\t\tif (counterValue < 0)\n\t\t\t{\n\t\t\t\tenableRecalculationWithRequest = true;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst currentCounterValue = BX.prop.getInteger(this.#counterData, counterId, 0);\n\t\t\tif (currentCounterValue !== counterValue)\n\t\t\t{\n\t\t\t\tenableRecalculation = true;\n\n\t\t\t\t// update counter data\n\t\t\t\tthis.#counterData[counterId] = counterValue;\n\t\t\t}\n\t\t}\n\n\t\tif (enableRecalculationWithRequest)\n\t\t{\n\t\t\tthis.#startRecalculationRequest();\n\t\t}\n\n\t\tif (enableRecalculation)\n\t\t{\n\t\t\tEventEmitter.emit('BX.Crm.EntityCounterManager:onRecalculate', this);\n\t\t}\n\t}\n\n\t#startRecalculationRequest(): void\n\t{\n\t\tif (this.#isRequestRunning)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#isRequestRunning = true;\n\n\t\tAjax({\n\t\t\turl: this.#serviceUrl,\n\t\t\tmethod: 'POST',\n\t\t\tdataType: 'json',\n\t\t\tdata: {\n\t\t\t\t'ACTION': 'RECALCULATE',\n\t\t\t\t'ENTITY_TYPES': [ this.#entityTypeName ],\n\t\t\t\t'EXTRAS': this.#extras\n\t\t\t},\n\t\t\tonsuccess: BX.delegate(this.#onRecalculationSuccess, this)\n\t\t});\n\t}\n\n\t#onRecalculationSuccess(result: Object): void\n\t{\n\t\tthis.#isRequestRunning = false;\n\n\t\tconst data = Type.isPlainObject(result['DATA']) ? result['DATA'] : null;\n\t\tif (data === null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setCounterData(\n\t\t\tType.isPlainObject(data[this.#entityTypeName])\n\t\t\t\t? data[this.#entityTypeName]\n\t\t\t\t: {}\n\t\t);\n\n\t\tEventEmitter.emit('BX.Crm.EntityCounterManager:onRecalculate', this);\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tgetCounterData(): Object\n\t{\n\t\treturn this.#counterData;\n\t}\n\n\tsetCounterData(data: Object): void\n\t{\n\t\tthis.#counterData = data;\n\t}\n\n\tstatic getLastInstance(): ?EntityCounterManager\n\t{\n\t\treturn this.lastInstance;\n\t}\n}\n","export default class EntityCounterType\n{\n\t// type ID\n\tstatic UNDEFINED = 0;\n\tstatic IDLE = 1;\n\tstatic PENDING = 2;\n\tstatic OVERDUE = 4;\n\tstatic CURRENT = 6; // PENDING|OVERDUE\n\tstatic ALL_DEADLINE_BASED = 7;  //IDLE|PENDING|OVERDUE\n\tstatic INCOMING_CHANNEL = 8;\n\tstatic ALL = 15;  //IDLE|PENDING|OVERDUE|INCOMING_CHANNEL\n\n\t// type name\n\tstatic IDLE_NAME  = 'IDLE';\n\tstatic PENDING_NAME = 'PENDING';\n\tstatic OVERDUE_NAME = 'OVERDUE';\n\tstatic CURRENT_NAME = 'CURRENT';\n\tstatic INCOMING_CHANNEL_NAME = 'INCOMINGCHANNEL';\n\tstatic ALL_DEADLINE_BASED_NAME = 'ALLDEADLINEBASED';\n\tstatic ALL_NAME = 'ALL';\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport EntityCounterType from './entity-counter-type';\n\nexport default class EntityCounterFilterManager\n{\n\tstatic COUNTER_TYPE_FIELD = 'ACTIVITY_COUNTER';\n\tstatic COUNTER_USER_FIELD = 'ASSIGNED_BY_ID';\n\n\tstatic EXCLUDED_FIELDS = [\n\t\t'FIND'\n\t];\n\n\t#filterManager: BX.Main.Filter;\n\t#fields: Object;\n\t#isActive = true;\n\n\tconstructor()\n\t{\n\t\tconst filters = Type.isObject(BX.Main.filterManager) && BX.Main.filterManager.hasOwnProperty('getList')\n\t\t\t? BX.Main.filterManager.getList()\n\t\t\t: Object.values(BX.Main.filterManager.data);\n\n\t\tif (filters.length === 0)\n\t\t{\n\t\t\tconsole.warn('BX.Crm.EntityCounterFilter: Unable to define filter.');\n\t\t\tthis.#isActive = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#filterManager = filters[0]; // use first filter to work\n\t\t\tthis.#bindEvents();\n\t\t\tthis.updateFields();\n\t\t}\n\t}\n\n\t#bindEvents(): void\n\t{\n\t\tEventEmitter.subscribe('BX.Main.Filter:apply', this.#onFilterApply.bind(this));\n\t}\n\n\t#onFilterApply(): void\n\t{\n\t\tthis.updateFields();\n\t}\n\n\t#isFilteredByField(field: string): boolean\n\t{\n\t\tif (Type.isArray(this.#fields[field]))\n\t\t{\n\t\t\treturn this.#fields[field].length > 0;\n\t\t}\n\n\t\tif (Type.isObject(this.#fields[field]))\n\t\t{\n\t\t\treturn Object.values(this.#fields[field]).length > 0;\n\t\t}\n\n\t\treturn this.#fields[field] !== '';\n\t}\n\n\tgetManager(): BX.Main.filterManager\n\t{\n\t\treturn this.#filterManager;\n\t}\n\n\tisActive(): boolean\n\t{\n\t\treturn this.#isActive;\n\t}\n\n\tgetFields(isFilterEmpty: boolean = false): Object\n\t{\n\t\tif (isFilterEmpty)\n\t\t{\n\t\t\tconst filtered = Object.entries(this.#fields).filter(([field, value]) => this.#isFilteredByField(field));\n\n\t\t\treturn Object.fromEntries(filtered);\n\t\t}\n\n\t\treturn this.#fields;\n\t}\n\n\tgetApi(): BX.Filter.Api\n\t{\n\t\treturn this.#filterManager.getApi();\n\t}\n\n\tupdateFields(): void\n\t{\n\t\tthis.#fields = this.#filterManager.getFilterFieldsValues();\n\t}\n\n\tisFilteredByFieldEx(field: string): boolean\n\t{\n\t\tif (\n\t\t\t!Object.keys(this.#fields).includes(field)\n\t\t\t|| field.endsWith('_datesel')\n\t\t\t|| field.endsWith('_numsel')\n\t\t\t|| field.endsWith('_label')\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn this.#isFilteredByField(field);\n\t}\n\t\n\tisFiltered(userId: number, typeId: number, entityTypeId: number): boolean\n\t{\n\t\tif (userId === 0 || typeId === EntityCounterType.UNDEFINED)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst isFilteredByUser = entityTypeId === BX.CrmEntityType.enumeration.order\n\t\t\t? true\n\t\t\t: this.isFilteredByFieldEx(EntityCounterFilterManager.COUNTER_USER_FIELD)\n\t\t\t\t&& Type.isArray(this.#fields[EntityCounterFilterManager.COUNTER_USER_FIELD])\n\t\t\t\t&& this.#fields[EntityCounterFilterManager.COUNTER_USER_FIELD].length === 1\n\t\t\t\t&& parseInt(this.#fields[EntityCounterFilterManager.COUNTER_USER_FIELD][0], 10) === userId\n\t\t;\n\n\t\tconst hasFilteredByTypeValue = this.isFilteredByFieldEx(EntityCounterFilterManager.COUNTER_TYPE_FIELD)\n\t\t\t&& Type.isObject(this.#fields[EntityCounterFilterManager.COUNTER_TYPE_FIELD])\n\t\t;\n\n\t\tconst filteredTypeValues = hasFilteredByTypeValue\n\t\t\t? Object.values(this.#fields[EntityCounterFilterManager.COUNTER_TYPE_FIELD])\n\t\t\t\t.map((item) => parseInt(item, 10))\n\t\t\t\t.sort()\n\t\t\t: []\n\t\t;\n\n\t\tconst isFilteredByType =\n\t\t\t(filteredTypeValues.length === 1 && filteredTypeValues[0] === typeId)\n\t\t\t|| (\n\t\t\t\tfilteredTypeValues.length === 2\n\t\t\t\t&& typeId === EntityCounterType.CURRENT\n\t\t\t\t&& filteredTypeValues[0] === EntityCounterType.PENDING\n\t\t\t\t&& filteredTypeValues[1] === EntityCounterType.OVERDUE\n\t\t\t)\n\t\t;\n\n\t\tlet counterFields = [\n\t\t\tEntityCounterFilterManager.COUNTER_USER_FIELD,\n\t\t\tEntityCounterFilterManager.COUNTER_TYPE_FIELD,\n\t\t\t... EntityCounterFilterManager.EXCLUDED_FIELDS\n\t\t];\n\n\t\tconst keysFields = Object.keys(this.#fields);\n\t\tconst otherFields = counterFields\n\t\t\t.filter(item => !keysFields.includes(item))\n\t\t\t.concat(keysFields.filter(x => !counterFields.includes(x))); // exclude checked fields\n\t\tconst isOtherFilterUsed = otherFields.some(item => this.isFilteredByFieldEx(item));\n\n\t\treturn isFilteredByUser && isFilteredByType && !isOtherFilterUsed;\n\t}\n}\n","import { Loc, Reflection, Text, Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\nimport { CounterPanel, CounterItem } from 'ui.counterpanel';\nimport EntityCounterManager from './entity-counter-manager';\nimport EntityCounterType from './entity-counter-type';\nimport EntityCounterFilterManager from './entity-counter-filter-manager';\n\nimport type { EntityCounterPanelOptions } from './entity-counter-panel-options';\n\nconst namespace = Reflection.namespace('BX.Crm');\n\nclass EntityCounterPanel extends CounterPanel\n{\n\t#id: String;\n\t#entityTypeId: Number;\n\t#userId: Number;\n\t#userName: String;\n\t#data: Array;\n\t#counterManager: ?EntityCounterManager;\n\t#filterManager: ?EntityCounterFilterManager;\n\t#filterLastPresetId: String;\n\t#filterLastPreset: Object;\n\n\tconstructor(options: EntityCounterPanelOptions): void\n\t{\n\t\tif (!Type.isPlainObject(options))\n\t\t{\n\t\t\tthrow 'BX.Crm.EntityCounterPanel: The \"options\" argument must be object.';\n\t\t}\n\n\t\tconst data = Type.isPlainObject(options.data) ? options.data : {};\n\n\t\tsuper({\n\t\t\ttarget: BX(options.id),\n\t\t\titems: EntityCounterPanel.getCounterItems(data),\n\t\t\tmultiselect: false // disable multiselect for CRM counters\n\t\t});\n\n\t\tthis.#id = options.id;\n\t\tthis.#entityTypeId = options.entityTypeId ? Text.toInteger(options.entityTypeId) : 0;\n\t\tthis.#userId = options.userId ? Text.toInteger(options.userId) : 0;\n\t\tthis.#userName = Type.isStringFilled(options.userName) ? options.userName : this.#userId;\n\t\tthis.#data = data;\n\n\t\tif (BX.CrmEntityType.isDefined(this.#entityTypeId))\n\t\t{\n\t\t\tthis.#counterManager = new EntityCounterManager({\n\t\t\t\tid: this.#id,\n\t\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\t\tserviceUrl: Type.isString(options.serviceUrl) ? options.serviceUrl : '',\n\t\t\t\tcodes: Type.isArray(options.codes) ? options.codes : [],\n\t\t\t\textras: Type.isObject(options.extras) ? options.extras : {}\n\t\t\t});\n\t\t}\n\n\t\tthis.#filterManager = new EntityCounterFilterManager();\n\t\tthis.#filterLastPresetId = options.filterLastPresetId;\n\t\tthis.#filterLastPreset = Type.isArray(options.filterLastPresetData)\n\t\t\t? JSON.parse(options.filterLastPresetData[0])\n\t\t\t: {presetId: null};\n\n\t\tthis.#bindEvents();\n\t}\n\n\t#bindEvents(): void\n\t{\n\t\tEventEmitter.subscribe('BX.UI.CounterPanel.Item:activate', this.#onActivateItem.bind(this));\n\t\tEventEmitter.subscribe('BX.UI.CounterPanel.Item:deactivate', this.#onDeactivateItem.bind(this));\n\t\tEventEmitter.subscribe('BX.Main.Filter:apply', this.#onFilterApply.bind(this));\n\t\tEventEmitter.subscribe('BX.Crm.EntityCounterManager:onRecalculate', this.#onRecalculate.bind(this));\n\t}\n\n\t#onActivateItem(event: BaseEvent): void\n\t{\n\t\tconst item = event.getData();\n\n\t\tif (!this.#processItemSelection(item))\n\t\t{\n\t\t\treturn BX.PreventDefault(event);\n\t\t}\n\t}\n\n\t#onDeactivateItem(): void\n\t{\n\t\tif (this.#isAllDeactivated() && this.#filterManager.isActive())\n\t\t{\n\t\t\tconst api = this.#filterManager.getApi();\n\n\t\t\tif (this.#filterLastPreset.presetId === 'tmp_filter')\n\t\t\t{\n\t\t\t\tapi.setFields(this.#filterLastPreset.fields);\n\t\t\t\tapi.apply();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tapi.setFilter({preset_id: this.#filterLastPreset.presetId});\n\t\t\t}\n\t\t}\n\t}\n\n\t#onFilterApply(): void\n\t{\n\t\tif (this.#filterManager.isActive())\n\t\t{\n\t\t\tthis.#filterManager.updateFields();\n\t\t}\n\t\tthis.#markCounters();\n\t}\n\n\t#onRecalculate(): void\n\t{\n\t\tconst data = this.#counterManager.getCounterData();\n\t\tfor (let code in data)\n\t\t{\n\t\t\tif (\n\t\t\t\t!data.hasOwnProperty(code)\n\t\t\t\t|| !(code.indexOf('crm') === 0 && data[code] >= 0) // HACK: Skip of CRM counter reset\n\t\t\t\t|| !this.#data.hasOwnProperty(code)\n\t\t\t\t|| Text.toNumber(this.#data[code].VALUE) === Text.toNumber(data[code])\n\t\t\t)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.#data[code].VALUE = data[code];\n\n\t\t\tconst item = this.getItemById(code);\n\t\t\titem.updateValue(Text.toNumber(data[code]));\n\t\t\titem.updateColor(EntityCounterPanel.detectCounterItemColor(this.#data[code].TYPE_NAME, Text.toNumber(data[code])));\n\t\t}\n\t}\n\n\t#processItemSelection(item: CounterItem): Boolean\n\t{\n\t\tconst typeId = parseInt(this.#data[item.id].TYPE_ID, 10);\n\t\tif (typeId > 0)\n\t\t{\n\t\t\tconst eventArgs = {\n\t\t\t\tuserId: this.#userId.toString(),\n\t\t\t\tuserName: this.#userName,\n\t\t\t\tcounterTypeId: this.#prepareFilterTypeId(typeId),\n\t\t\t\tcancel: false\n\t\t\t};\n\n\t\t\tif (this.#filterManager.isActive())\n\t\t\t{\n\t\t\t\tconst filteredFields = this.#filterManager.getFields(true);\n\t\t\t\tif (typeof (filteredFields[EntityCounterFilterManager.COUNTER_TYPE_FIELD]) === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tthis.#filterLastPreset.presetId = this.#filterManager.getApi().parent.getPreset().getCurrentPresetId();\n\t\t\t\t\tif (this.#filterLastPreset.presetId === 'tmp_filter')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#filterLastPreset.fields = filteredFields\n\t\t\t\t\t}\n\n\t\t\t\t\tBX.userOptions.save('crm', this.#filterLastPresetId, '', JSON.stringify(this.#filterLastPreset));\n\t\t\t\t}\n\n\t\t\t\tBX.onCustomEvent(window, 'BX.CrmEntityCounterPanel:applyFilter', [this, eventArgs]);\n\t\t\t\tif (eventArgs.cancel)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\t#prepareFilterTypeId(typeId: Number): Object\n\t{\n\t\tif (typeId === EntityCounterType.CURRENT)\n\t\t{\n\t\t\treturn {\n\t\t\t\t0: EntityCounterType.OVERDUE.toString(),\n\t\t\t\t1: EntityCounterType.PENDING.toString(),\n\t\t\t}\n\t\t}\n\n\t\treturn typeId.toString();\n\t}\n\n\t#markCounters(): void\n\t{\n\t\tif (!this.#filterManager.isActive())\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tObject.entries(this.#data).forEach(([code, record]) => {\n\t\t\tlet item = this.getItemById(code);\n\n\t\t\tthis.#filterManager.isFiltered(this.#userId, parseInt(record.TYPE_ID, 10), this.#entityTypeId)\n\t\t\t\t? item.activate(false)\n\t\t\t\t: item.deactivate(false)\n\n\t\t\t// TODO: need fix it in parent CounterItem class\n\t\t\tif (item.value !== item.counter.getValue())\n\t\t\t{\n\t\t\t\titem.updateValue(item.value);\n\t\t\t}\n\t\t});\n\t}\n\n\t#isAllDeactivated(): Boolean\n\t{\n\t\treturn this.getItems().every((record: CounterItem) => {\n\t\t\treturn !record.isActive\n\t\t});\n\t}\n\n\tinit(): void\n\t{\n\t\tsuper.init();\n\n\t\tthis.#markCounters();\n\t}\n\n\tgetId(): String\n\t{\n\t\treturn this.#id;\n\t}\n\n\tstatic getCounterItems(input: Object): Array\n\t{\n\t\treturn Object.entries(input).map(([code: String, item: Object]) => {\n\t\t\tconst value = parseInt(item.VALUE, 10);\n\n\t\t\treturn {\n\t\t\t\tid: code,\n\t\t\t\ttitle: Loc.getMessage('NEW_CRM_COUNTER_TYPE_' + item.TYPE_NAME),\n\t\t\t\tvalue: value,\n\t\t\t\tcolor: EntityCounterPanel.detectCounterItemColor(item.TYPE_NAME, value)\n\t\t\t};\n\t\t}, this);\n\t}\n\n\tstatic detectCounterItemColor(type: String, value: Number): String\n\t{\n\t\tconst isRedCounter = [\n\t\t\tEntityCounterType.IDLE_NAME,\n\t\t\tEntityCounterType.OVERDUE_NAME,\n\t\t\tEntityCounterType.CURRENT_NAME,\n\t\t].includes(type);\n\n\t\tconst isGreenCounter  =  [\n\t\t\tEntityCounterType.INCOMING_CHANNEL_NAME,\n\t\t].includes(type);\n\n\t\treturn (value > 0)\n\t\t\t? (isRedCounter ? 'DANGER' : (isGreenCounter ? 'SUCCESS' : 'THEME'))\n\t\t\t: 'THEME';\n\t}\n}\n\nnamespace.EntityCounterPanel = EntityCounterPanel;\n"],"names":["EntityCounterManager","options","Type","isPlainObject","isString","id","serviceUrl","entityTypeId","Text","toInteger","BX","CrmEntityType","resolveName","isArray","codes","isObject","extras","constructor","lastInstance","data","EventEmitter","subscribe","bind","event","getData","command","params","enableRecalculation","enableRecalculationWithRequest","currentSiteId","Loc","getMessage","counterData","counterId","hasOwnProperty","indexOf","counterValue","prop","getInteger","currentCounterValue","emit","Ajax","url","method","dataType","onsuccess","delegate","result","setCounterData","EntityCounterType","EntityCounterFilterManager","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","filters","Main","filterManager","getList","Object","values","length","console","warn","_classPrivateMethodGet","updateFields","isFilterEmpty","filtered","entries","filter","field","value","fromEntries","getApi","getFilterFieldsValues","keys","includes","endsWith","userId","typeId","UNDEFINED","isFilteredByUser","enumeration","order","isFilteredByFieldEx","COUNTER_USER_FIELD","parseInt","hasFilteredByTypeValue","COUNTER_TYPE_FIELD","filteredTypeValues","map","item","sort","isFilteredByType","CURRENT","PENDING","OVERDUE","counterFields","EXCLUDED_FIELDS","keysFields","otherFields","concat","x","isOtherFilterUsed","some","namespace","Reflection","EntityCounterPanel","target","items","getCounterItems","multiselect","isStringFilled","userName","isDefined","filterLastPresetId","filterLastPresetData","JSON","parse","presetId","input","code","VALUE","title","TYPE_NAME","color","detectCounterItemColor","type","isRedCounter","IDLE_NAME","OVERDUE_NAME","CURRENT_NAME","isGreenCounter","INCOMING_CHANNEL_NAME","CounterPanel","PreventDefault","isActive","api","setFields","fields","apply","setFilter","preset_id","getCounterData","toNumber","getItemById","updateValue","updateColor","TYPE_ID","eventArgs","toString","counterTypeId","cancel","filteredFields","getFields","parent","getPreset","getCurrentPresetId","userOptions","save","stringify","onCustomEvent","window","forEach","record","isFiltered","activate","deactivate","counter","getValue","getItems","every"],"mappings":"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"}