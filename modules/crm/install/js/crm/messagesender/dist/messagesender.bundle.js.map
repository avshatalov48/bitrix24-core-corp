{"version":3,"file":"messagesender.bundle.js","sources":["../src/condition-checker/common/consent-approver.js","../src/condition-checker/common/utilites.js","../src/condition-checker/scenarios/base.js","../src/condition-checker/scenarios/ru-whatsapp.js","../src/condition-checker/scenarios/telegram.js","../src/condition-checker/scenarios/whatsapp.js","../src/condition-checker/factory.js","../src/condition-checker/checker.js","../src/internal/validation.js","../src/receiver.js","../src/internal/extract-receivers.js","../src/receiver-repository.js"],"sourcesContent":["import { ajax, Loc } from 'main.core';\n\nexport const Types: Readonly<string, string> = Object.freeze({\n\tbitrix24: 'bitrix24',\n\tsms: 'sms_provider',\n});\n\nexport type SenderType = Types.sms | Types.bitrix24;\n\nexport class ConsentApprover\n{\n\t#senderType: ?string = null;\n\n\tconstructor(senderType: ?string = null)\n\t{\n\t\tthis.#senderType = senderType;\n\t}\n\n\tasync checkAndApprove(): Promise<boolean>\n\t{\n\t\tif (this.#senderType !== Types.bitrix24)\n\t\t{\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tajax.runAction('notifications.consent.Agreement.get')\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (!data || !data.html)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.#showConsentAgreementBox(data, resolve);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.#showNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_CONSENT_AGREEMENT_VALIDATION_ERROR'));\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\t#showConsentAgreementBox({ title, html: message }, resolve: Function): void\n\t{\n\t\tBX.UI.Dialogs.MessageBox.show({\n\t\t\tmodal: true,\n\t\t\tminWidth: 980,\n\t\t\ttitle,\n\t\t\tmessage,\n\t\t\tbuttons: this.#getButtons(resolve),\n\t\t\tpopupOptions: {\n\t\t\t\tclassName: 'crm-agreement-terms-popup',\n\t\t\t},\n\t\t});\n\t}\n\n\t#getButtons(resolve: Function): BX.UI.Button[]\n\t{\n\t\treturn [\n\t\t\tnew BX.UI.Button({\n\t\t\t\tclassName: 'ui-btn-round',\n\t\t\t\tcolor: BX.UI.Button.Color.SUCCESS,\n\t\t\t\ttext: Loc.getMessage('CRM_MESSAGESENDER_B24_CONSENT_ACCEPT'),\n\t\t\t\tonclick: (button) => {\n\t\t\t\t\tthis.#approveConsent();\n\t\t\t\t\tthis.#showNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_AGREEMENT_ACCEPT'));\n\t\t\t\t\tthis.#closeAgreementBox(button);\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t},\n\t\t\t}),\n\t\t\tnew BX.UI.Button({\n\t\t\t\tclassName: 'ui-btn-round',\n\t\t\t\tcolor: BX.UI.Button.Color.LIGHT_BORDER,\n\t\t\t\ttext: Loc.getMessage('CRM_MESSAGESENDER_B24_CONSENT_REJECT'),\n\t\t\t\tonclick: (button) => {\n\t\t\t\t\tthis.#closeAgreementBox(button);\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t},\n\t\t\t}),\n\t\t];\n\t}\n\n\t#approveConsent(): void\n\t{\n\t\tvoid ajax.runAction('notifications.consent.Agreement.approve');\n\t}\n\n\t#closeAgreementBox({ context }): void\n\t{\n\t\tcontext.close();\n\t}\n\n\t#showNotify(content: string): void\n\t{\n\t\tBX.UI.Notification.Center.notify({ content });\n\t}\n}\n","export const showNotify = (content: string): void => {\n\tBX.UI.Notification.Center.notify({ content });\n}","import { Router } from 'crm.router';\nimport { ajax, Loc, Type } from 'main.core';\nimport type { SenderType } from '../common/consent-approver';\nimport { showNotify } from '../common/utilites';\nimport type { Scenario } from '../scenario';\n\ntype OpenLineItems = {\n\t[key: string]: OpenLineItem;\n}\n\ntype OpenLineItem = {\n\tname: string;\n\tselected: boolean;\n\turl: string;\n}\n\nexport type Settings = {\n\tmarketUrl: string;\n\tcanUseNotifications: boolean;\n}\n\nexport class Base implements Scenario\n{\n\topenLineItems: OpenLineItems = null;\n\tsenderType: SenderType = null;\n\tentityTypeId: number = null;\n\n\tconstructor(params: Object)\n\t{\n\t\tif (Type.isPlainObject(params?.openLineItems))\n\t\t{\n\t\t\tthis.openLineItems = params.openLineItems ?? null;\n\t\t\tthis.senderType = params.senderType ?? null;\n\t\t}\n\n\t\tif (Type.isNumber(params?.entityTypeId))\n\t\t{\n\t\t\tthis.entityTypeId = params.entityTypeId;\n\t\t}\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\tthrow new Error('Must be implement in child class');\n\t}\n\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tawait this.#showConnectAlertMessage();\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tasync isOpenLineItemSelected(force: boolean = false): Promise<boolean>\n\t{\n\t\tconst item = await this.getOpenLineItem(force);\n\n\t\tif (!item)\n\t\t{\n\t\t\tthrow new ReferenceError(`OpenLine item with code: ${this.getOpenLineCode()} not found`);\n\t\t}\n\n\t\treturn item.selected;\n\t}\n\n\tasync getOpenLineItem(force: boolean = false, openLineCode: string = null): ?OpenLineItem\n\t{\n\t\tif (this.openLineItems === null || force)\n\t\t{\n\t\t\tthis.openLineItems = await this.fetchOpenLineItems();\n\t\t}\n\n\t\treturn this.openLineItems[openLineCode ?? this.getOpenLineCode()];\n\t}\n\n\tasync fetchOpenLineItems(): Promise<OpenLineItems>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax.runAction('crm.controller.integration.openlines.getItems')\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => {\n\t\t\t\t\treject(data);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tasync getLineId(): Promise<number | null>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tconst ajaxParameters = {\n\t\t\t\tconnectorId: this.getOpenLineCode(),\n\t\t\t\twithConnector: true,\n\t\t\t};\n\n\t\t\tajax.runAction('imconnector.Openlines.list', { data: ajaxParameters })\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (Type.isArrayFilled(data))\n\t\t\t\t\t{\n\t\t\t\t\t\tconst { lineId } = data[data.length - 1];\n\t\t\t\t\t\tresolve(lineId);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tasync canEditConnector(): Promise<boolean>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tajax.runAction('imconnector.Openlines.hasAccess')\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data.canEditConnector)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => this.#showConnectAlertMessage())\n\t\t\t;\n\t\t});\n\t}\n\n\tasync #showConnectAlertMessage(): Promise<void>\n\t{\n\t\tconst item = await this.getOpenLineItem();\n\n\t\tconst message = Loc.getMessage(\n\t\t\t'CRM_MESSAGESENDER_B24_CONNECT_ACCESS_DENIED',\n\t\t\t{\n\t\t\t\t'#SERVICE_NAME#': item.name,\n\t\t\t},\n\t\t);\n\n\t\tshowNotify(message);\n\t}\n\n\tasync openConnectSidePanel(url: string, onCloseCallback: Function): Promise\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tif (Type.isStringFilled(url))\n\t\t\t{\n\t\t\t\tvoid Router.openSlider(\n\t\t\t\t\turl,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 700,\n\t\t\t\t\t\tcacheable: false,\n\t\t\t\t\t},\n\t\t\t\t).then(() => {\n\t\t\t\t\tonCloseCallback(resolve);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\t\t\tresolve(null);\n\t\t});\n\t}\n}\n","import { ajax, Loc, Reflection, Type } from 'main.core';\nimport { showNotify } from '../common/utilites';\nimport { Base } from './base';\n\nexport class RuWhatsApp extends Base\n{\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tconst isWhatsAppAvailable = await this.#checkVirtualWhatsAppAvailable();\n\t\tif (!isWhatsAppAvailable)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isSelected = await this.isOpenLineItemSelected();\n\n\t\tif (isSelected)\n\t\t{\n\t\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t\t{\n\t\t\t\treturn this.getLineId();\n\t\t\t}\n\n\t\t\tconst canEditConnector = await this.canEditConnector();\n\t\t\tif (canEditConnector)\n\t\t\t{\n\t\t\t\tconst url = this.openLineItems?.virtual_whatsapp?.url;\n\n\t\t\t\treturn this.openConnectSidePanel(url, this.onConnectVirtualWhatsApp.bind(this));\n\t\t\t}\n\n\t\t\treturn super.checkAndGetLineId();\n\t\t}\n\n\t\tconst canEditConnector = await this.canEditConnector();\n\t\tif (canEditConnector)\n\t\t{\n\t\t\tconst item = await this.getOpenLineItem();\n\n\t\t\treturn this.openConnectSidePanel(item.url, this.onConnect.bind(this));\n\t\t}\n\n\t\treturn super.checkAndGetLineId();\n\t}\n\n\tasync #checkVirtualWhatsAppAvailable(): Promise<boolean>\n\t{\n\t\tconst config = await this.#fetchVirtualWhatsAppConfig();\n\n\t\tif (Type.isStringFilled(config.infoHelperCode))\n\t\t{\n\t\t\tif (Reflection.getClass('BX.UI.InfoHelper.show'))\n\t\t\t{\n\t\t\t\tBX.UI.InfoHelper.show(config.infoHelperCode);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#fetchVirtualWhatsAppConfig(): Promise<Object>\n\t{\n\t\tconst { entityTypeId } = this;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax\n\t\t\t\t.runAction(\n\t\t\t\t\t'crm.controller.messagesender.conditionchecker.getVirtualWhatsAppConfig',\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tentityTypeId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => reject(data))\n\t\t\t;\n\t\t});\n\t}\n\n\tasync onConnectVirtualWhatsApp(resolve: Function): Promise<number | null>\n\t{\n\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t{\n\t\t\treturn resolve(this.getLineId());\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\treturn resolve(null);\n\t}\n\n\tasync #isVirtualWhatsAppConnected(): Promise<boolean>\n\t{\n\t\tconst virtualWhatsAppItem = await this.getOpenLineItem(true, 'virtual_whatsapp');\n\n\t\treturn virtualWhatsAppItem?.selected;\n\t}\n\n\tasync onConnect(resolve: Function): Promise<number | null>\n\t{\n\t\tconst isSelected = await this.isOpenLineItemSelected(true);\n\n\t\tif (isSelected)\n\t\t{\n\t\t\treturn resolve(this.checkAndGetLineId());\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\treturn resolve(null);\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\treturn 'notifications';\n\t}\n}\n","import { Loc } from 'main.core';\nimport { ConsentApprover } from '../common/consent-approver';\nimport { showNotify } from '../common/utilites';\nimport { Base } from './base';\n\nexport class Telegram extends Base\n{\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tconst isSelected = await this.isOpenLineItemSelected();\n\n\t\tif (isSelected)\n\t\t{\n\t\t\tconst isApproved = await this.#checkConsentApproved();\n\t\t\tif (isApproved)\n\t\t\t{\n\t\t\t\tconst lineId: number = await this.getLineId();\n\t\t\t\tif (!lineId)\n\t\t\t\t{\n\t\t\t\t\tconst item = await this.getOpenLineItem();\n\n\t\t\t\t\treturn this.openConnectSidePanel(item.url, this.onConnect.bind(this));\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(lineId);\n\t\t\t}\n\n\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_AGREEMENT_NOTIFY'));\n\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst canEditConnector = await this.canEditConnector();\n\t\tif (canEditConnector)\n\t\t{\n\t\t\tconst item = await this.getOpenLineItem();\n\n\t\t\treturn this.openConnectSidePanel(item.url, this.onConnect.bind(this));\n\t\t}\n\n\t\treturn super.checkAndGetLineId();\n\t}\n\n\tasync onConnect(resolve: Function): Promise<number | null>\n\t{\n\t\tconst lineId = await this.getLineId();\n\n\t\tif (lineId === null)\n\t\t{\n\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\t\treturn resolve(null);\n\t\t}\n\n\t\tconst item = await this.getOpenLineItem(true);\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_CONNECT_SUCCESS', {\n\t\t\t'#LINE_NAME#': item.name,\n\t\t}));\n\n\t\tconst isApproved = await this.#checkConsentApproved();\n\t\tif (isApproved)\n\t\t{\n\t\t\treturn resolve(lineId);\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_AGREEMENT_NOTIFY'));\n\n\t\treturn resolve(null);\n\t}\n\n\tasync #checkConsentApproved(): Promise<boolean>\n\t{\n\t\treturn (new ConsentApprover(this.senderType)).checkAndApprove();\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\treturn 'telegrambot';\n\t}\n}\n","import { ajax, Extension, Loc, Reflection, Type } from 'main.core';\nimport { MessageBox, MessageBoxButtons } from 'ui.dialogs.messagebox';\nimport { showNotify } from '../common/utilites';\nimport type { Settings } from './base';\nimport { Base } from './base';\n\nexport class WhatsApp extends Base\n{\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tconst isWhatsAppAvailable = await this.#checkVirtualWhatsAppAvailable();\n\t\tif (!isWhatsAppAvailable)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t{\n\t\t\tconst hasAvailableProvider = await this.#hasAvailableSmsProvider();\n\n\t\t\tif (hasAvailableProvider)\n\t\t\t{\n\t\t\t\t// notification connector does not take into account the open line number when generating the link\n\t\t\t\treturn Promise.resolve(0);\n\t\t\t}\n\n\t\t\tconst canEditConnector = await this.canEditConnector();\n\t\t\tif (canEditConnector)\n\t\t\t{\n\t\t\t\treturn this.#showMarketplaceDialog();\n\t\t\t}\n\n\t\t\treturn super.checkAndGetLineId();\n\t\t}\n\n\t\tconst canEditConnector = await this.canEditConnector();\n\t\tif (canEditConnector)\n\t\t{\n\t\t\tconst url = this.openLineItems?.virtual_whatsapp?.url;\n\n\t\t\treturn this.openConnectSidePanel(url, this.onConnectVirtualWhatsApp.bind(this));\n\t\t}\n\n\t\treturn super.checkAndGetLineId();\n\t}\n\n\tasync #checkVirtualWhatsAppAvailable(): Promise<boolean>\n\t{\n\t\tconst config = await this.#fetchVirtualWhatsAppConfig();\n\n\t\tif (Type.isStringFilled(config.infoHelperCode))\n\t\t{\n\t\t\tif (Reflection.getClass('BX.UI.InfoHelper.show'))\n\t\t\t{\n\t\t\t\tBX.UI.InfoHelper.show(config.infoHelperCode);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#fetchVirtualWhatsAppConfig(): Promise<Object>\n\t{\n\t\tconst { entityTypeId } = this;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax\n\t\t\t\t.runAction(\n\t\t\t\t\t'crm.controller.messagesender.conditionchecker.getVirtualWhatsAppConfig',\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tentityTypeId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => reject(data))\n\t\t\t;\n\t\t});\n\t}\n\n\tasync onConnectVirtualWhatsApp(resolve: Function): Promise<number | null>\n\t{\n\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t{\n\t\t\treturn resolve(this.checkAndGetLineId());\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\treturn resolve(null);\n\t}\n\n\tasync #isVirtualWhatsAppConnected(): Promise<boolean>\n\t{\n\t\tconst virtualWhatsAppItem = await this.getOpenLineItem(true, 'virtual_whatsapp');\n\n\t\treturn virtualWhatsAppItem?.selected;\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\treturn 'notifications';\n\t}\n\n\tasync #hasAvailableSmsProvider(): Promise<boolean>\n\t{\n\t\tconst smsSenders = await this.#getSmsSenders();\n\n\t\treturn Promise.resolve(smsSenders.some((provider) => provider.canUse && !provider.isTemplatesBased));\n\t}\n\n\tasync #getSmsSenders(): Promise<Object[]>\n\t{\n\t\tconst { entityTypeId } = this;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax\n\t\t\t\t.runAction(\n\t\t\t\t\t'crm.controller.messagesender.conditionchecker.getSmsSenders',\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tentityTypeId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => reject(data))\n\t\t\t;\n\t\t});\n\t}\n\n\t#showMarketplaceDialog(): Promise<number | null>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tMessageBox.show({\n\t\t\t\tmessage: Loc.getMessage('CRM_MESSAGESENDER_B24_CONDITION_CHECKER_MARKET_MESSAGE'),\n\t\t\t\tmodal: true,\n\t\t\t\tbuttons: MessageBoxButtons.OK_CANCEL,\n\t\t\t\tokCaption: Loc.getMessage('CRM_MESSAGESENDER_B24_CONDITION_CHECKER_OK_BTN_TEXT'),\n\t\t\t\tonOk: (messageBox) => {\n\t\t\t\t\tvoid this.#openMarketplace(resolve);\n\t\t\t\t\tmessageBox.close();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t#openMarketplace(resolve): Promise\n\t{\n\t\tconst marketUrl = this.#getSettings().marketUrl;\n\n\t\tBX.SidePanel.Instance.open(\n\t\t\tmarketUrl,\n\t\t\t{\n\t\t\t\tcacheable: false,\n\t\t\t\tevents: {\n\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\tvoid this.#onCloseMarketplace(resolve);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync #onCloseMarketplace(resolve): Promise<void>\n\t{\n\t\tconst hasAvailableSmsProvider = await this.#hasAvailableSmsProvider();\n\n\t\tif (hasAvailableSmsProvider)\n\t\t{\n\t\t\tresolve(0);\n\n\t\t\treturn;\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\tresolve(null);\n\t}\n\n\t#getSettings(): Settings\n\t{\n\t\treturn Extension.getSettings('crm.messagesender');\n\t}\n}\n","import type { Scenario } from './scenario';\nimport { RuWhatsApp } from './scenarios/ru-whatsapp';\nimport { Telegram } from './scenarios/telegram';\nimport { WhatsApp } from './scenarios/whatsapp';\n\nexport class Factory\n{\n\tstatic getScenarioInstance(name: string, params: Object): Scenario\n\t{\n\t\tif (name === 'telegrambot')\n\t\t{\n\t\t\treturn new Telegram(params);\n\t\t}\n\n\t\tif (name === 'ru-whatsapp') // for RU region\n\t\t{\n\t\t\treturn new RuWhatsApp(params);\n\t\t}\n\n\t\tif (name === 'whatsapp') // for not RU region\n\t\t{\n\t\t\treturn new WhatsApp(params);\n\t\t}\n\n\t\tthrow new RangeError(`Unknown scenario name: ${name}`);\n\t}\n}\n","import { Type } from 'main.core';\nimport type { SenderType } from './common/consent-approver';\nimport { ConsentApprover } from './common/consent-approver';\nimport { Factory } from './factory';\n\ntype OpenLineItems = {\n\t[key: string]: OpenLineItem;\n}\n\ntype OpenLineItem = {\n\tname: string;\n\tselected: boolean;\n\turl: string;\n}\n\nexport class ConditionChecker\n{\n\t#openLineItems: ?OpenLineItems = null;\n\t#senderType: SenderType;\n\t#serviceId: string;\n\t#entityTypeId: number;\n\n\t/**\n\t * @param {SenderType} senderType\n\t * @param {OpenLineItems | null} openLineItems\n\t * @param {string | null} serviceId\n\t * @param {number | null} entityTypeId\n\t * @returns {Promise<number|null>}\n\t */\n\tstatic async checkAndGetLine({\n\t\tsenderType,\n\t\topenLineItems = null,\n\t\tserviceId = null,\n\t\tentityTypeId = null,\n\t}): Promise<number | null>\n\t{\n\t\tconst instance = new ConditionChecker({\n\t\t\tsenderType,\n\t\t});\n\n\t\tif (Type.isObjectLike(openLineItems))\n\t\t{\n\t\t\tinstance.setOpenLineItems(openLineItems);\n\t\t}\n\n\t\tif (Type.isStringFilled(serviceId))\n\t\t{\n\t\t\tinstance.setServiceId(serviceId);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('ServiceId is required');\n\t\t}\n\n\t\tif (BX.CrmEntityType.isDefined(entityTypeId))\n\t\t{\n\t\t\tinstance.setEntityTypeId(entityTypeId);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('EntityTypeId is not specified or incorrect');\n\t\t}\n\n\t\treturn instance.check();\n\t}\n\n\tstatic async checkIsApproved({ senderType }): Promise<boolean>\n\t{\n\t\tconst instance = new ConditionChecker({\n\t\t\tsenderType,\n\t\t});\n\n\t\treturn instance.checkApproveConsent();\n\t}\n\n\t/**\n\t * @param {string} openLineCode\n\t * @param {string} senderType\n\t */\n\tconstructor({ senderType })\n\t{\n\t\tthis.#senderType = senderType;\n\t}\n\n\tsetOpenLineItems(items: OpenLineItems): ConditionChecker\n\t{\n\t\tthis.#openLineItems = items;\n\n\t\treturn this;\n\t}\n\n\tsetServiceId(serviceId: ?string): ConditionChecker\n\t{\n\t\tthis.#serviceId = serviceId;\n\n\t\treturn this;\n\t}\n\n\tsetEntityTypeId(entityTypeId: ?number): ConditionChecker\n\t{\n\t\tthis.#entityTypeId = entityTypeId;\n\n\t\treturn this;\n\t}\n\n\tasync check(): Promise<number | null>\n\t{\n\t\tconst scenario = Factory.getScenarioInstance(this.#serviceId, {\n\t\t\tsenderType: this.#senderType,\n\t\t\topenLineItems: this.#openLineItems,\n\t\t\tentityTypeId: this.#entityTypeId,\n\t\t});\n\n\t\treturn scenario.checkAndGetLineId();\n\t}\n\n\tasync checkApproveConsent(): Promise<boolean | null>\n\t{\n\t\tconst isApproved = await (new ConsentApprover(this.#senderType)).checkAndApprove();\n\t\tif (isApproved)\n\t\t{\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n}\n","import { Type } from 'main.core';\nimport { ItemIdentifier } from 'crm.data-structures';\nimport { Receiver } from '../receiver';\n\nexport function ensureIsItemIdentifier(candidate: any): void\n{\n\tif (candidate instanceof ItemIdentifier)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an instance of ItemIdentifier');\n}\n\nexport function ensureIsReceiver(candidate: any): void\n{\n\tif (candidate instanceof Receiver)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an instance of Receiver');\n}\n\nexport function ensureIsValidMultifieldValue(candidate: any): void\n{\n\t// noinspection OverlyComplexBooleanExpressionJS\n\tconst isValidValue = (\n\t\tType.isPlainObject(candidate)\n\t\t&& (Type.isNil(candidate.id) || Type.isInteger(candidate.id))\n\t\t&& Type.isStringFilled(candidate.typeId)\n\t\t&& Type.isStringFilled(candidate.valueType)\n\t\t&& Type.isStringFilled(candidate.value)\n\t);\n\n\tif (isValidValue)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an object of valid MultifieldValue structure');\n}\n\nexport function ensureIsValidSourceData(candidate: any): void\n{\n\tconst isValid = (\n\t\tType.isPlainObject(candidate)\n\t\t&& Type.isStringFilled(candidate.title)\n\t);\n\n\tif (isValid)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an object of valid SourceData structure')\n}\n","import { ItemIdentifier } from 'crm.data-structures';\nimport { ensureIsItemIdentifier, ensureIsValidMultifieldValue, ensureIsValidSourceData } from './internal/validation';\n\nexport type MultifieldValue = {\n\tid: ?number,\n\ttypeId: string,\n\tvalueType: string,\n\tvalue: string,\n\tvalueFormatted: ?string,\n};\n\nexport type SourceData = {\n\ttitle: string,\n};\n\nexport class Receiver\n{\n\t#rootSource: ItemIdentifier;\n\t#addressSource: ItemIdentifier;\n\t#addressSourceData: ?SourceData = null;\n\t#address: MultifieldValue;\n\n\tconstructor(\n\t\trootSource: ItemIdentifier,\n\t\taddressSource: ItemIdentifier,\n\t\taddress: MultifieldValue,\n\t\taddressSourceData: ?SourceData = null,\n\t)\n\t{\n\t\tensureIsItemIdentifier(rootSource);\n\t\tthis.#rootSource = rootSource;\n\n\t\tensureIsItemIdentifier(addressSource);\n\t\tthis.#addressSource = addressSource;\n\n\t\tensureIsValidMultifieldValue(address);\n\t\tthis.#address = Object.freeze({\n\t\t\tid: address.id,\n\t\t\ttypeId: address.typeId,\n\t\t\tvalueType: address.valueType,\n\t\t\tvalue: address.value,\n\t\t\tvalueFormatted: address.valueFormatted,\n\t\t});\n\n\t\tif (addressSourceData)\n\t\t{\n\t\t\tensureIsValidSourceData(addressSourceData);\n\t\t\tthis.#addressSourceData = Object.freeze({\n\t\t\t\ttitle: addressSourceData.title,\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic fromJSON(data: Object): ?Receiver\n\t{\n\t\tconst rootSource = ItemIdentifier.fromJSON(data?.rootSource);\n\t\tif (!rootSource)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst addressSource = ItemIdentifier.fromJSON(data?.addressSource);\n\t\tif (!addressSource)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\treturn new Receiver(rootSource, addressSource, data?.address, data?.addressSourceData);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tget rootSource(): ItemIdentifier\n\t{\n\t\treturn this.#rootSource;\n\t}\n\n\tget addressSource(): ItemIdentifier\n\t{\n\t\treturn this.#addressSource;\n\t}\n\n\tget addressSourceData(): ?SourceData\n\t{\n\t\treturn this.#addressSourceData;\n\t}\n\n\tget address(): MultifieldValue\n\t{\n\t\treturn this.#address;\n\t}\n\n\tisEqualTo(another: Receiver): boolean\n\t{\n\t\tif (!(another instanceof Receiver))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// noinspection OverlyComplexBooleanExpressionJS\n\t\treturn (\n\t\t\tthis.rootSource.isEqualTo(another.rootSource)\n\t\t\t&& this.addressSource.isEqualTo(another.addressSource)\n\t\t\t&& String(this.address.typeId) === String(another.address.typeId)\n\t\t\t&& String(this.address.valueType) === String(another.address.valueType)\n\t\t\t&& String(this.address.value) === String(another.address.value)\n\t\t);\n\t}\n}\n","import { Text, Type } from 'main.core';\nimport { Receiver } from '../receiver';\nimport { ItemIdentifier } from 'crm.data-structures';\n\nexport function extractReceivers(item: ItemIdentifier, entityData: ?Object): Receiver[]\n{\n\tconst receivers = [];\n\tif (entityData?.hasOwnProperty('MULTIFIELD_DATA'))\n\t{\n\t\treceivers.push(...extractReceiversFromMultifieldData(item, entityData));\n\t}\n\tif (entityData?.hasOwnProperty('CLIENT_INFO'))\n\t{\n\t\treceivers.push(...extractReceiversFromClientInfo(item, entityData.CLIENT_INFO));\n\t}\n\n\treturn unique(receivers);\n}\n\nfunction extractReceiversFromMultifieldData(item: ItemIdentifier, entityData: Object): Receiver[]\n{\n\tconst receivers: Receiver[] = [];\n\n\tconst multifields = entityData.MULTIFIELD_DATA;\n\tfor (const multifieldTypeId in multifields)\n\t{\n\t\tif (!multifields.hasOwnProperty(multifieldTypeId) || !Type.isPlainObject(multifields[multifieldTypeId]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const itemSlug in multifields[multifieldTypeId])\n\t\t{\n\t\t\tif (\n\t\t\t\t!multifields[multifieldTypeId].hasOwnProperty(itemSlug)\n\t\t\t\t|| !Type.isArrayFilled(multifields[multifieldTypeId][itemSlug])\n\t\t\t)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst [entityTypeId, entityId] = itemSlug.split('_');\n\t\t\tlet addressSource: ItemIdentifier;\n\t\t\ttry\n\t\t\t{\n\t\t\t\taddressSource = new ItemIdentifier(Text.toInteger(entityTypeId), Text.toInteger(entityId));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst addressSourceTitle = getAddressSourceTitle(item, addressSource, entityData);\n\n\t\t\tfor (const singleMultifield of multifields[multifieldTypeId][itemSlug])\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treceivers.push(new Receiver(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taddressSource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: Text.toInteger(singleMultifield.ID),\n\t\t\t\t\t\t\ttypeId: String(multifieldTypeId),\n\t\t\t\t\t\t\tvalueType: stringOrUndefined(singleMultifield.VALUE_TYPE),\n\t\t\t\t\t\t\tvalue: stringOrUndefined(singleMultifield.VALUE),\n\t\t\t\t\t\t\tvalueFormatted: stringOrUndefined(singleMultifield.VALUE_FORMATTED),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: addressSourceTitle,\n\t\t\t\t\t\t},\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn receivers;\n}\n\nfunction getAddressSourceTitle(rootSource: ItemIdentifier, addressSource: ItemIdentifier, entityData: ?Object): string\n{\n\tif (rootSource.isEqualTo(addressSource))\n\t{\n\t\treturn entityData?.TITLE ?? entityData.FORMATTED_NAME ?? '';\n\t}\n\n\tconst clientDataKey = `${BX.CrmEntityType.resolveName(addressSource.entityTypeId)}_DATA`;\n\tif (Type.isArrayFilled(entityData?.CLIENT_INFO?.[clientDataKey]))\n\t{\n\t\tconst client = entityData.CLIENT_INFO[clientDataKey].find(clientInfo => {\n\t\t\treturn Text.toInteger(clientInfo.id) === addressSource.entityId;\n\t\t});\n\n\t\tif (Type.isString(client?.title))\n\t\t{\n\t\t\treturn client.title;\n\t\t}\n\t}\n\n\treturn '';\n}\n\nfunction extractReceiversFromClientInfo(item: ItemIdentifier, clientInfo: Object): Receiver[]\n{\n\tconst receivers = [];\n\n\tfor (const clientsOfSameType of Object.values(clientInfo))\n\t{\n\t\tif (!Type.isArrayFilled(clientsOfSameType))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const singleClient of clientsOfSameType)\n\t\t{\n\t\t\tif (!Type.isPlainObject(singleClient))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet addressSource: ItemIdentifier;\n\t\t\ttry\n\t\t\t{\n\t\t\t\taddressSource = new ItemIdentifier(BX.CrmEntityType.resolveId(singleClient.typeName), singleClient.id);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst multifields = singleClient.advancedInfo?.multiFields;\n\t\t\tif (!Type.isArrayFilled(multifields))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const singleMultifield of multifields)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treceivers.push(new Receiver(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taddressSource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: Text.toInteger(singleMultifield.ID),\n\t\t\t\t\t\t\ttypeId: stringOrUndefined(singleMultifield.TYPE_ID),\n\t\t\t\t\t\t\tvalueType: stringOrUndefined(singleMultifield.VALUE_TYPE),\n\t\t\t\t\t\t\tvalue: stringOrUndefined(singleMultifield.VALUE),\n\t\t\t\t\t\t\tvalueFormatted: stringOrUndefined(singleMultifield.VALUE_FORMATTED),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: stringOrUndefined(singleClient.title),\n\t\t\t\t\t\t},\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn receivers;\n}\n\nfunction stringOrUndefined(value: ?string): string | undefined\n{\n\treturn Type.isNil(value) ? undefined : String(value);\n}\n\nfunction unique(receivers: Receiver[]): Receiver[]\n{\n\treturn receivers.filter((receiver, index) => {\n\t\tconst anotherIndex = receivers.findIndex(anotherReceiver => receiver.isEqualTo(anotherReceiver));\n\n\t\treturn anotherIndex === index;\n\t});\n}\n","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Reflection, Type } from 'main.core';\nimport { ItemIdentifier } from 'crm.data-structures';\nimport { Receiver } from './receiver';\nimport { extractReceivers } from './internal/extract-receivers';\nimport { ensureIsItemIdentifier, ensureIsReceiver } from './internal/validation';\n\nconst OBSERVED_EVENTS = new Set([\n\t'onCrmEntityCreate',\n\t'onCrmEntityUpdate',\n\t'onCrmEntityDelete',\n]);\n\n/**\n * @memberOf BX.Crm.MessageSender\n * @mixes EventEmitter\n *\n * @emits BX.Crm.MessageSender.ReceiverRepository:OnReceiversChanged\n * @emits BX.Crm.MessageSender.ReceiverRepository:OnItemDeleted\n *\n * Currently, this class is supposed to work only in the context of entity details tab.\n * In the future, it can be extended to work on any page.\n */\nexport class ReceiverRepository\n{\n\tstatic #instance: ?ReceiverRepository;\n\n\t#onDetailsTabChangeEventHandler: (BaseEvent) => void;\n\n\t#storage: {[itemHash: string]: Receiver[]} = {};\n\n\t#observedItems: {[entityTypeId: number]: Set<number>} = {};\n\n\n\tstatic get Instance(): ReceiverRepository\n\t{\n\t\tif ((window.top !== window) && Reflection.getClass('top.BX.Crm.MessageSender.ReceiverRepository'))\n\t\t{\n\t\t\treturn window.top.BX.Crm.MessageSender.ReceiverRepository;\n\t\t}\n\n\t\tif (!ReceiverRepository.#instance)\n\t\t{\n\t\t\tReceiverRepository.#instance = new ReceiverRepository();\n\t\t}\n\n\t\treturn ReceiverRepository.#instance;\n\t}\n\n\t/**\n\t * @internal This class is a singleton. Use Instance getter instead of constructing a new instance\n\t */\n\tconstructor()\n\t{\n\t\tif (ReceiverRepository.#instance)\n\t\t{\n\t\t\tthrow new Error('Attempt to make a new instance of a singleton');\n\t\t}\n\n\t\tthis.#init();\n\t}\n\n\t#init(): void\n\t{\n\t\tEventEmitter.makeObservable(this, 'BX.Crm.MessageSender.ReceiverRepository');\n\n\t\tthis.#onDetailsTabChangeEventHandler = (event: BaseEvent) => {\n\t\t\tif (!(event instanceof BaseEvent))\n\t\t\t{\n\t\t\t\tconsole.error('unexpected event type', event);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!Type.isArrayFilled(event.getData()) || !Type.isPlainObject(event.getData()[0]))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#onCrmEntityChange(event.getType(), event.getData()[0]);\n\t\t};\n\t\tthis.#onDetailsTabChangeEventHandler = this.#onDetailsTabChangeEventHandler.bind(this);\n\n\t\tfor (const eventName of OBSERVED_EVENTS)\n\t\t{\n\t\t\tEventEmitter.subscribe(eventName, this.#onDetailsTabChangeEventHandler);\n\t\t}\n\t\tif (BX.SidePanel?.Instance?.isOpen())\n\t\t{\n\t\t\t// we are on entity details slider\n\t\t\tEventEmitter.subscribe('SidePanel.Slider:onDestroy', this.#destroy.bind(this));\n\t\t}\n\t}\n\n\t#destroy(): void\n\t{\n\t\tfor (const eventName of OBSERVED_EVENTS)\n\t\t{\n\t\t\tEventEmitter.unsubscribe(eventName, this.#onDetailsTabChangeEventHandler);\n\t\t}\n\t\tReceiverRepository.#instance = null;\n\t}\n\n\t#onCrmEntityChange(eventType: string, {entityTypeId, entityId, entityData}): void\n\t{\n\t\tif (!this.#observedItems[entityTypeId]?.has(entityId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = new ItemIdentifier(entityTypeId, entityId);\n\n\t\tif (\n\t\t\teventType.toLowerCase() === 'onCrmEntityCreate'.toLowerCase()\n\t\t\t|| eventType.toLowerCase() === 'onCrmEntityUpdate'.toLowerCase()\n\t\t)\n\t\t{\n\t\t\tconst oldReceivers = this.#storage[item.hash] ?? [];\n\t\t\tconst newReceivers = extractReceivers(item, entityData);\n\n\t\t\tthis.#storage[item.hash] = newReceivers;\n\n\t\t\tconst added = newReceivers.filter(newReceiver => {\n\t\t\t\treturn Type.isNil(oldReceivers.find(oldReceiver => oldReceiver.isEqualTo(newReceiver)));\n\t\t\t});\n\t\t\tconst deleted = oldReceivers.filter(oldReceiver => {\n\t\t\t\treturn Type.isNil(newReceivers.find(newReceiver => newReceiver.isEqualTo(oldReceiver)));\n\t\t\t});\n\n\t\t\tif (added.length > 0 || deleted.length > 0)\n\t\t\t{\n\t\t\t\tthis.emit('OnReceiversChanged', {item, previous: oldReceivers, current: newReceivers, added, deleted});\n\t\t\t}\n\t\t}\n\t\telse if (eventType.toLowerCase() === 'onCrmEntityDelete'.toLowerCase())\n\t\t{\n\t\t\tdelete this.#storage[item.hash];\n\t\t\tthis.#observedItems[item.entityTypeId].delete(item.entityId);\n\t\t\tthis.emit('OnItemDeleted', {item});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.error('unknown event type', eventType);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tstatic onDetailsLoad(entityTypeId: number, entityId: number, receiversJSONString: string): void\n\t{\n\t\tlet item: ItemIdentifier;\n\t\ttry\n\t\t{\n\t\t\titem = new ItemIdentifier(entityTypeId, entityId);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst instance = ReceiverRepository.Instance;\n\t\tinstance.#startObservingItem(item);\n\n\t\tconst receiversJSON = JSON.parse(receiversJSONString);\n\t\tif (Type.isArrayFilled(receiversJSON))\n\t\t{\n\t\t\tconst receivers = [];\n\t\t\tfor (const singleReceiverJSON of receiversJSON)\n\t\t\t{\n\t\t\t\tconst receiver = Receiver.fromJSON(singleReceiverJSON);\n\t\t\t\tif (!Type.isNil(receiver))\n\t\t\t\t{\n\t\t\t\t\treceivers.push(receiver);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(receivers))\n\t\t\t{\n\t\t\t\tinstance.#addReceivers(item, receivers);\n\t\t\t}\n\t\t}\n\t}\n\n\t#addReceivers(item: ItemIdentifier, receivers: Receiver[]): void\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\tthis.#storage[item.hash] = [];\n\t\tfor (const receiver of receivers)\n\t\t{\n\t\t\tensureIsReceiver(receiver);\n\n\t\t\tthis.#storage[item.hash].push(receiver);\n\t\t}\n\n\t\tthis.#startObservingItem(item);\n\t}\n\n\t#startObservingItem(item: ItemIdentifier): void\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\tconst observedItemsOfThisType = this.#observedItems[item.entityTypeId] ?? new Set();\n\t\tobservedItemsOfThisType.add(item.entityId);\n\t\tthis.#observedItems[item.entityTypeId] = observedItemsOfThisType;\n\t}\n\n\tgetReceivers(entityTypeId: number, entityId: number): Receiver[]\n\t{\n\t\ttry\n\t\t{\n\t\t\treturn this.getReceiversByIdentifier(new ItemIdentifier(entityTypeId, entityId));\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tgetReceiversByIdentifier(item: ItemIdentifier): Receiver[]\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\treturn this.#storage[item.hash] ?? [];\n\t}\n}\n"],"names":["Types","Object","freeze","bitrix24","sms","ConsentApprover","constructor","senderType","checkAndApprove","Promise","resolve","ajax","runAction","then","data","html","catch","Loc","getMessage","title","message","BX","UI","Dialogs","MessageBox","show","modal","minWidth","buttons","popupOptions","className","Button","color","Color","SUCCESS","text","onclick","button","LIGHT_BORDER","context","close","content","Notification","Center","notify","showNotify","Base","params","openLineItems","entityTypeId","Type","isPlainObject","isNumber","getOpenLineCode","Error","checkAndGetLineId","isOpenLineItemSelected","force","item","getOpenLineItem","ReferenceError","selected","openLineCode","fetchOpenLineItems","reject","status","errors","getLineId","ajaxParameters","connectorId","withConnector","isArrayFilled","lineId","length","canEditConnector","openConnectSidePanel","url","onCloseCallback","isStringFilled","Router","openSlider","width","cacheable","name","RuWhatsApp","isWhatsAppAvailable","isSelected","virtual_whatsapp","onConnectVirtualWhatsApp","bind","onConnect","config","infoHelperCode","Reflection","getClass","InfoHelper","virtualWhatsAppItem","Telegram","isApproved","WhatsApp","hasAvailableProvider","smsSenders","some","provider","canUse","isTemplatesBased","MessageBoxButtons","OK_CANCEL","okCaption","onOk","messageBox","marketUrl","SidePanel","Instance","open","events","onClose","hasAvailableSmsProvider","Extension","getSettings","Factory","getScenarioInstance","RangeError","ConditionChecker","checkAndGetLine","serviceId","instance","isObjectLike","setOpenLineItems","setServiceId","TypeError","CrmEntityType","isDefined","setEntityTypeId","check","checkIsApproved","checkApproveConsent","items","scenario","ensureIsItemIdentifier","candidate","ItemIdentifier","ensureIsReceiver","Receiver","ensureIsValidMultifieldValue","isValidValue","isNil","id","isInteger","typeId","valueType","value","ensureIsValidSourceData","isValid","rootSource","addressSource","address","addressSourceData","valueFormatted","fromJSON","e","isEqualTo","another","String","extractReceivers","entityData","receivers","hasOwnProperty","push","extractReceiversFromMultifieldData","extractReceiversFromClientInfo","CLIENT_INFO","unique","multifields","MULTIFIELD_DATA","multifieldTypeId","itemSlug","entityId","split","Text","toInteger","addressSourceTitle","getAddressSourceTitle","singleMultifield","ID","stringOrUndefined","VALUE_TYPE","VALUE","VALUE_FORMATTED","TITLE","FORMATTED_NAME","clientDataKey","resolveName","client","find","clientInfo","isString","clientsOfSameType","values","singleClient","resolveId","typeName","advancedInfo","multiFields","TYPE_ID","undefined","filter","receiver","index","anotherIndex","findIndex","anotherReceiver","OBSERVED_EVENTS","Set","ReceiverRepository","window","top","Crm","MessageSender","onDetailsLoad","receiversJSONString","receiversJSON","JSON","parse","singleReceiverJSON","getReceivers","getReceiversByIdentifier","hash","EventEmitter","makeObservable","event","BaseEvent","console","error","getData","getType","eventName","subscribe","isOpen","unsubscribe","eventType","has","toLowerCase","oldReceivers","newReceivers","added","newReceiver","oldReceiver","deleted","emit","previous","current","delete","observedItemsOfThisType","add"],"mappings":"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"}