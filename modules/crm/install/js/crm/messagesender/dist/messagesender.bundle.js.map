{"version":3,"file":"messagesender.bundle.js","sources":["../src/condition-checker/common/consent-approver.js","../src/condition-checker/common/utilites.js","../src/condition-checker/scenarios/base.js","../src/condition-checker/scenarios/ru-whatsapp.js","../src/condition-checker/scenarios/telegram.js","../src/condition-checker/scenarios/whatsapp.js","../src/condition-checker/factory.js","../src/condition-checker/checker.js","../src/internal/validation.js","../src/receiver.js","../src/internal/extract-receivers.js","../src/receiver-repository.js"],"sourcesContent":["import { ajax, Loc } from 'main.core';\n\nexport const Types: Readonly<string, string> = Object.freeze({\n\tbitrix24: 'bitrix24',\n\tsms: 'sms_provider',\n});\n\nexport type SenderType = Types.sms | Types.bitrix24;\n\nexport class ConsentApprover\n{\n\t#senderType: ?string = null;\n\n\tconstructor(senderType: ?string = null)\n\t{\n\t\tthis.#senderType = senderType;\n\t}\n\n\tasync checkAndApprove(): Promise<boolean>\n\t{\n\t\t// if (this.#senderType !== Types.bitrix24)\n\t\t// {\n\t\t// \treturn Promise.resolve(true);\n\t\t// }\n\n\t\treturn new Promise((resolve) => {\n\t\t\tajax.runAction('notifications.consent.Agreement.get')\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (!data || !data.html)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.#showConsentAgreementBox(data, resolve);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.#showErrorNotify();\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\t#showConsentAgreementBox({ title, html: message }, resolve: Function): void\n\t{\n\t\tBX.UI.Dialogs.MessageBox.show({\n\t\t\tmodal: true,\n\t\t\tminWidth: 980,\n\t\t\ttitle,\n\t\t\tmessage,\n\t\t\tbuttons: this.#getButtons(resolve),\n\t\t\tpopupOptions: {\n\t\t\t\tclassName: 'crm-agreement-terms-popup',\n\t\t\t},\n\t\t});\n\t}\n\n\t#getButtons(resolve: Function): BX.UI.Button[]\n\t{\n\t\treturn [\n\t\t\tnew BX.UI.Button({\n\t\t\t\tclassName: 'ui-btn-round',\n\t\t\t\tcolor: BX.UI.Button.Color.SUCCESS,\n\t\t\t\ttext: Loc.getMessage('CRM_MESSAGESENDER_B24_CONSENT_ACCEPT'),\n\t\t\t\tonclick: (button) => {\n\t\t\t\t\tthis\n\t\t\t\t\t\t.#approveConsent()\n\t\t\t\t\t\t.then((isApprovedConsent) => {\n\t\t\t\t\t\t\tif (isApprovedConsent)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.#showNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_AGREEMENT_ACCEPT'));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.#closeAgreementBox(button);\n\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tthis.#showErrorNotify();\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t})\n\t\t\t\t\t;\n\t\t\t\t},\n\t\t\t}),\n\t\t\tnew BX.UI.Button({\n\t\t\t\tclassName: 'ui-btn-round',\n\t\t\t\tcolor: BX.UI.Button.Color.LIGHT_BORDER,\n\t\t\t\ttext: Loc.getMessage('CRM_MESSAGESENDER_B24_CONSENT_REJECT'),\n\t\t\t\tonclick: (button) => {\n\t\t\t\t\tthis.#closeAgreementBox(button);\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t},\n\t\t\t}),\n\t\t];\n\t}\n\n\t#approveConsent(): Promise<boolean>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tajax\n\t\t\t\t.runAction('notifications.consent.Agreement.approve')\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (response?.status === 'success' && response?.data)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\t#closeAgreementBox({ context }): void\n\t{\n\t\tcontext.close();\n\t}\n\n\t#showErrorNotify(): void\n\t{\n\t\tthis.#showNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_CONSENT_AGREEMENT_VALIDATION_ERROR'));\n\t}\n\n\t#showNotify(content: string): void\n\t{\n\t\tBX.UI.Notification.Center.notify({ content });\n\t}\n}\n","export const showNotify = (content: string): void => {\n\tBX.UI.Notification.Center.notify({ content });\n}","import { Router } from 'crm.router';\nimport { ajax, Loc, Type } from 'main.core';\nimport type { SenderType } from '../common/consent-approver';\nimport { showNotify } from '../common/utilites';\nimport type { Scenario } from '../scenario';\n\ntype OpenLineItems = {\n\t[key: string]: OpenLineItem;\n}\n\ntype OpenLineItem = {\n\tname: string;\n\tselected: boolean;\n\turl: string;\n}\n\nexport type Settings = {\n\tmarketUrl: string;\n\tcanUseNotifications: boolean;\n}\n\nexport class Base implements Scenario\n{\n\topenLineItems: OpenLineItems = null;\n\tsenderType: SenderType = null;\n\tentityTypeId: number = null;\n\n\tconstructor(params: Object)\n\t{\n\t\tif (Type.isPlainObject(params?.openLineItems))\n\t\t{\n\t\t\tthis.openLineItems = params.openLineItems ?? null;\n\t\t\tthis.senderType = params.senderType ?? null;\n\t\t}\n\n\t\tif (Type.isNumber(params?.entityTypeId))\n\t\t{\n\t\t\tthis.entityTypeId = params.entityTypeId;\n\t\t}\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\tthrow new Error('Must be implement in child class');\n\t}\n\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tawait this.#showConnectAlertMessage();\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tasync isOpenLineItemSelected(force: boolean = false): Promise<boolean>\n\t{\n\t\tconst item = await this.getOpenLineItem(force);\n\n\t\tif (!item)\n\t\t{\n\t\t\tthrow new ReferenceError(`OpenLine item with code: ${this.getOpenLineCode()} not found`);\n\t\t}\n\n\t\treturn item.selected;\n\t}\n\n\tasync getOpenLineItem(force: boolean = false, openLineCode: string = null): ?OpenLineItem\n\t{\n\t\tif (this.openLineItems === null || force)\n\t\t{\n\t\t\tthis.openLineItems = await this.fetchOpenLineItems();\n\t\t}\n\n\t\treturn this.openLineItems[openLineCode ?? this.getOpenLineCode()];\n\t}\n\n\tasync fetchOpenLineItems(): Promise<OpenLineItems>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax.runAction('crm.controller.integration.openlines.getItems')\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => {\n\t\t\t\t\treject(data);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tasync getLineId(): Promise<number | null>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tconst ajaxParameters = {\n\t\t\t\tconnectorId: this.getOpenLineCode(),\n\t\t\t\twithConnector: true,\n\t\t\t};\n\n\t\t\tajax.runAction('imconnector.Openlines.list', { data: ajaxParameters })\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (Type.isArrayFilled(data))\n\t\t\t\t\t{\n\t\t\t\t\t\tconst { lineId } = data[data.length - 1];\n\t\t\t\t\t\tresolve(lineId);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tasync canEditConnector(): Promise<boolean>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tajax.runAction('imconnector.Openlines.hasAccess')\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (data.canEditConnector)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => this.#showConnectAlertMessage())\n\t\t\t;\n\t\t});\n\t}\n\n\tasync #showConnectAlertMessage(): Promise<void>\n\t{\n\t\tconst item = await this.getOpenLineItem();\n\n\t\tconst message = Loc.getMessage(\n\t\t\t'CRM_MESSAGESENDER_B24_CONNECT_ACCESS_DENIED',\n\t\t\t{\n\t\t\t\t'#SERVICE_NAME#': item.name,\n\t\t\t},\n\t\t);\n\n\t\tshowNotify(message);\n\t}\n\n\tasync openConnectSidePanel(url: string, onCloseCallback: Function): Promise\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tif (Type.isStringFilled(url))\n\t\t\t{\n\t\t\t\tvoid Router.openSlider(\n\t\t\t\t\turl,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: 700,\n\t\t\t\t\t\tcacheable: false,\n\t\t\t\t\t},\n\t\t\t\t).then(() => {\n\t\t\t\t\tonCloseCallback(resolve);\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\t\t\tresolve(null);\n\t\t});\n\t}\n}\n","import { ajax, Loc, Reflection, Type } from 'main.core';\nimport { showNotify } from '../common/utilites';\nimport { Base } from './base';\n\nexport class RuWhatsApp extends Base\n{\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tconst isWhatsAppAvailable = await this.#checkVirtualWhatsAppAvailable();\n\t\tif (!isWhatsAppAvailable)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isSelected = await this.isOpenLineItemSelected();\n\n\t\tif (isSelected)\n\t\t{\n\t\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t\t{\n\t\t\t\treturn this.getLineId();\n\t\t\t}\n\n\t\t\tconst canEditConnector = await this.canEditConnector();\n\t\t\tif (canEditConnector)\n\t\t\t{\n\t\t\t\tconst url = this.openLineItems?.virtual_whatsapp?.url;\n\n\t\t\t\treturn this.openConnectSidePanel(url, this.onConnectVirtualWhatsApp.bind(this));\n\t\t\t}\n\n\t\t\treturn super.checkAndGetLineId();\n\t\t}\n\n\t\tconst canEditConnector = await this.canEditConnector();\n\t\tif (canEditConnector)\n\t\t{\n\t\t\tconst item = await this.getOpenLineItem();\n\n\t\t\treturn this.openConnectSidePanel(item.url, this.onConnect.bind(this));\n\t\t}\n\n\t\treturn super.checkAndGetLineId();\n\t}\n\n\tasync #checkVirtualWhatsAppAvailable(): Promise<boolean>\n\t{\n\t\tconst config = await this.#fetchVirtualWhatsAppConfig();\n\n\t\tif (Type.isStringFilled(config.infoHelperCode))\n\t\t{\n\t\t\tif (Reflection.getClass('BX.UI.InfoHelper.show'))\n\t\t\t{\n\t\t\t\tBX.UI.InfoHelper.show(config.infoHelperCode);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#fetchVirtualWhatsAppConfig(): Promise<Object>\n\t{\n\t\tconst { entityTypeId } = this;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax\n\t\t\t\t.runAction(\n\t\t\t\t\t'crm.controller.messagesender.conditionchecker.getVirtualWhatsAppConfig',\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tentityTypeId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => reject(data))\n\t\t\t;\n\t\t});\n\t}\n\n\tasync onConnectVirtualWhatsApp(resolve: Function): Promise<number | null>\n\t{\n\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t{\n\t\t\treturn resolve(this.getLineId());\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\treturn resolve(null);\n\t}\n\n\tasync #isVirtualWhatsAppConnected(): Promise<boolean>\n\t{\n\t\tconst virtualWhatsAppItem = await this.getOpenLineItem(true, 'virtual_whatsapp');\n\n\t\treturn virtualWhatsAppItem?.selected;\n\t}\n\n\tasync onConnect(resolve: Function): Promise<number | null>\n\t{\n\t\tconst isSelected = await this.isOpenLineItemSelected(true);\n\n\t\tif (isSelected)\n\t\t{\n\t\t\treturn resolve(this.checkAndGetLineId());\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\treturn resolve(null);\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\treturn 'notifications';\n\t}\n}\n","import { Loc } from 'main.core';\nimport { ConsentApprover } from '../common/consent-approver';\nimport { showNotify } from '../common/utilites';\nimport { Base } from './base';\n\nexport class Telegram extends Base\n{\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tconst isSelected = await this.isOpenLineItemSelected();\n\n\t\tif (isSelected)\n\t\t{\n\t\t\tconst isApproved = await this.#checkConsentApproved();\n\t\t\tif (isApproved)\n\t\t\t{\n\t\t\t\tconst lineId: number = await this.getLineId();\n\t\t\t\tif (!lineId)\n\t\t\t\t{\n\t\t\t\t\tconst item = await this.getOpenLineItem();\n\n\t\t\t\t\treturn this.openConnectSidePanel(item.url, this.onConnect.bind(this));\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(lineId);\n\t\t\t}\n\n\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_AGREEMENT_NOTIFY'));\n\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst canEditConnector = await this.canEditConnector();\n\t\tif (canEditConnector)\n\t\t{\n\t\t\tconst item = await this.getOpenLineItem();\n\n\t\t\treturn this.openConnectSidePanel(item.url, this.onConnect.bind(this));\n\t\t}\n\n\t\treturn super.checkAndGetLineId();\n\t}\n\n\tasync onConnect(resolve: Function): Promise<number | null>\n\t{\n\t\tconst lineId = await this.getLineId();\n\n\t\tif (lineId === null)\n\t\t{\n\t\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\t\treturn resolve(null);\n\t\t}\n\n\t\tconst item = await this.getOpenLineItem(true);\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_CONNECT_SUCCESS', {\n\t\t\t'#LINE_NAME#': item.name,\n\t\t}));\n\n\t\tconst isApproved = await this.#checkConsentApproved();\n\t\tif (isApproved)\n\t\t{\n\t\t\treturn resolve(lineId);\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_AGREEMENT_NOTIFY'));\n\n\t\treturn resolve(null);\n\t}\n\n\tasync #checkConsentApproved(): Promise<boolean>\n\t{\n\t\treturn (new ConsentApprover(this.senderType)).checkAndApprove();\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\treturn 'telegrambot';\n\t}\n}\n","import { ajax, Extension, Loc, Reflection, Type } from 'main.core';\nimport { MessageBox, MessageBoxButtons } from 'ui.dialogs.messagebox';\nimport { showNotify } from '../common/utilites';\nimport type { Settings } from './base';\nimport { Base } from './base';\n\nexport class WhatsApp extends Base\n{\n\tasync checkAndGetLineId(): Promise<number | null>\n\t{\n\t\tconst isWhatsAppAvailable = await this.#checkVirtualWhatsAppAvailable();\n\t\tif (!isWhatsAppAvailable)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t{\n\t\t\tconst hasAvailableProvider = await this.#hasAvailableSmsProvider();\n\n\t\t\tif (hasAvailableProvider)\n\t\t\t{\n\t\t\t\t// notification connector does not take into account the open line number when generating the link\n\t\t\t\treturn Promise.resolve(0);\n\t\t\t}\n\n\t\t\tconst canEditConnector = await this.canEditConnector();\n\t\t\tif (canEditConnector)\n\t\t\t{\n\t\t\t\treturn this.#showMarketplaceDialog();\n\t\t\t}\n\n\t\t\treturn super.checkAndGetLineId();\n\t\t}\n\n\t\tconst canEditConnector = await this.canEditConnector();\n\t\tif (canEditConnector)\n\t\t{\n\t\t\tconst url = this.openLineItems?.virtual_whatsapp?.url;\n\n\t\t\treturn this.openConnectSidePanel(url, this.onConnectVirtualWhatsApp.bind(this));\n\t\t}\n\n\t\treturn super.checkAndGetLineId();\n\t}\n\n\tasync #checkVirtualWhatsAppAvailable(): Promise<boolean>\n\t{\n\t\tconst config = await this.#fetchVirtualWhatsAppConfig();\n\n\t\tif (Type.isStringFilled(config.infoHelperCode))\n\t\t{\n\t\t\tif (Reflection.getClass('BX.UI.InfoHelper.show'))\n\t\t\t{\n\t\t\t\tBX.UI.InfoHelper.show(config.infoHelperCode);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#fetchVirtualWhatsAppConfig(): Promise<Object>\n\t{\n\t\tconst { entityTypeId } = this;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax\n\t\t\t\t.runAction(\n\t\t\t\t\t'crm.controller.messagesender.conditionchecker.getVirtualWhatsAppConfig',\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tentityTypeId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => reject(data))\n\t\t\t;\n\t\t});\n\t}\n\n\tasync onConnectVirtualWhatsApp(resolve: Function): Promise<number | null>\n\t{\n\t\tif (await this.#isVirtualWhatsAppConnected())\n\t\t{\n\t\t\treturn resolve(this.checkAndGetLineId());\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\treturn resolve(null);\n\t}\n\n\tasync #isVirtualWhatsAppConnected(): Promise<boolean>\n\t{\n\t\tconst virtualWhatsAppItem = await this.getOpenLineItem(true, 'virtual_whatsapp');\n\n\t\treturn virtualWhatsAppItem?.selected;\n\t}\n\n\tgetOpenLineCode(): string\n\t{\n\t\treturn 'notifications';\n\t}\n\n\tasync #hasAvailableSmsProvider(): Promise<boolean>\n\t{\n\t\tconst smsSenders = await this.#getSmsSenders();\n\n\t\treturn Promise.resolve(smsSenders.some((provider) => provider.canUse && !provider.isTemplatesBased));\n\t}\n\n\tasync #getSmsSenders(): Promise<Object[]>\n\t{\n\t\tconst { entityTypeId } = this;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tajax\n\t\t\t\t.runAction(\n\t\t\t\t\t'crm.controller.messagesender.conditionchecker.getSmsSenders',\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tentityTypeId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t\t.then(({ status, data, errors }) => {\n\t\t\t\t\tif (status === 'success')\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(data);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treject(errors);\n\t\t\t\t})\n\t\t\t\t.catch((data) => reject(data))\n\t\t\t;\n\t\t});\n\t}\n\n\t#showMarketplaceDialog(): Promise<number | null>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tMessageBox.show({\n\t\t\t\tmessage: Loc.getMessage('CRM_MESSAGESENDER_B24_CONDITION_CHECKER_MARKET_MESSAGE'),\n\t\t\t\tmodal: true,\n\t\t\t\tbuttons: MessageBoxButtons.OK_CANCEL,\n\t\t\t\tokCaption: Loc.getMessage('CRM_MESSAGESENDER_B24_CONDITION_CHECKER_OK_BTN_TEXT'),\n\t\t\t\tonOk: (messageBox) => {\n\t\t\t\t\tvoid this.#openMarketplace(resolve);\n\t\t\t\t\tmessageBox.close();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t#openMarketplace(resolve): Promise\n\t{\n\t\tconst marketUrl = this.#getSettings().marketUrl;\n\n\t\tBX.SidePanel.Instance.open(\n\t\t\tmarketUrl,\n\t\t\t{\n\t\t\t\tcacheable: false,\n\t\t\t\tevents: {\n\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\tvoid this.#onCloseMarketplace(resolve);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tasync #onCloseMarketplace(resolve): Promise<void>\n\t{\n\t\tconst hasAvailableSmsProvider = await this.#hasAvailableSmsProvider();\n\n\t\tif (hasAvailableSmsProvider)\n\t\t{\n\t\t\tresolve(0);\n\n\t\t\treturn;\n\t\t}\n\n\t\tshowNotify(Loc.getMessage('CRM_MESSAGESENDER_B24_OPENLINE_LINEID_ERROR'));\n\n\t\tresolve(null);\n\t}\n\n\t#getSettings(): Settings\n\t{\n\t\treturn Extension.getSettings('crm.messagesender');\n\t}\n}\n","import type { Scenario } from './scenario';\nimport { RuWhatsApp } from './scenarios/ru-whatsapp';\nimport { Telegram } from './scenarios/telegram';\nimport { WhatsApp } from './scenarios/whatsapp';\n\nexport class Factory\n{\n\tstatic getScenarioInstance(name: string, params: Object): Scenario\n\t{\n\t\tif (name === 'telegrambot')\n\t\t{\n\t\t\treturn new Telegram(params);\n\t\t}\n\n\t\tif (name === 'ru-whatsapp') // for RU region\n\t\t{\n\t\t\treturn new RuWhatsApp(params);\n\t\t}\n\n\t\tif (name === 'whatsapp') // for not RU region\n\t\t{\n\t\t\treturn new WhatsApp(params);\n\t\t}\n\n\t\tthrow new RangeError(`Unknown scenario name: ${name}`);\n\t}\n}\n","import { Type } from 'main.core';\nimport type { SenderType } from './common/consent-approver';\nimport { ConsentApprover } from './common/consent-approver';\nimport { Factory } from './factory';\n\ntype OpenLineItems = {\n\t[key: string]: OpenLineItem;\n}\n\ntype OpenLineItem = {\n\tname: string;\n\tselected: boolean;\n\turl: string;\n}\n\nexport class ConditionChecker\n{\n\t#openLineItems: ?OpenLineItems = null;\n\t#senderType: SenderType;\n\t#serviceId: string;\n\t#entityTypeId: number;\n\n\t/**\n\t * @param {SenderType} senderType\n\t * @param {OpenLineItems | null} openLineItems\n\t * @param {string | null} serviceId\n\t * @param {number | null} entityTypeId\n\t * @returns {Promise<number|null>}\n\t */\n\tstatic async checkAndGetLine({\n\t\tsenderType,\n\t\topenLineItems = null,\n\t\tserviceId = null,\n\t\tentityTypeId = null,\n\t}): Promise<number | null>\n\t{\n\t\tconst instance = new ConditionChecker({\n\t\t\tsenderType,\n\t\t});\n\n\t\tif (Type.isObjectLike(openLineItems))\n\t\t{\n\t\t\tinstance.setOpenLineItems(openLineItems);\n\t\t}\n\n\t\tif (Type.isStringFilled(serviceId))\n\t\t{\n\t\t\tinstance.setServiceId(serviceId);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('ServiceId is required');\n\t\t}\n\n\t\tif (BX.CrmEntityType.isDefined(entityTypeId))\n\t\t{\n\t\t\tinstance.setEntityTypeId(entityTypeId);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('EntityTypeId is not specified or incorrect');\n\t\t}\n\n\t\treturn instance.check();\n\t}\n\n\tstatic async checkIsApproved({ senderType }): Promise<boolean>\n\t{\n\t\tconst instance = new ConditionChecker({\n\t\t\tsenderType,\n\t\t});\n\n\t\treturn instance.checkApproveConsent();\n\t}\n\n\t/**\n\t * @param {string} openLineCode\n\t * @param {string} senderType\n\t */\n\tconstructor({ senderType })\n\t{\n\t\tthis.#senderType = senderType;\n\t}\n\n\tsetOpenLineItems(items: OpenLineItems): ConditionChecker\n\t{\n\t\tthis.#openLineItems = items;\n\n\t\treturn this;\n\t}\n\n\tsetServiceId(serviceId: ?string): ConditionChecker\n\t{\n\t\tthis.#serviceId = serviceId;\n\n\t\treturn this;\n\t}\n\n\tsetEntityTypeId(entityTypeId: ?number): ConditionChecker\n\t{\n\t\tthis.#entityTypeId = entityTypeId;\n\n\t\treturn this;\n\t}\n\n\tasync check(): Promise<number | null>\n\t{\n\t\tconst scenario = Factory.getScenarioInstance(this.#serviceId, {\n\t\t\tsenderType: this.#senderType,\n\t\t\topenLineItems: this.#openLineItems,\n\t\t\tentityTypeId: this.#entityTypeId,\n\t\t});\n\n\t\treturn scenario.checkAndGetLineId();\n\t}\n\n\tasync checkApproveConsent(): Promise<boolean | null>\n\t{\n\t\tconst isApproved = await (new ConsentApprover(this.#senderType)).checkAndApprove();\n\t\tif (isApproved)\n\t\t{\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n}\n","import { Type } from 'main.core';\nimport { ItemIdentifier } from 'crm.data-structures';\nimport { Receiver } from '../receiver';\n\nexport function ensureIsItemIdentifier(candidate: any): void\n{\n\tif (candidate instanceof ItemIdentifier)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an instance of ItemIdentifier');\n}\n\nexport function ensureIsReceiver(candidate: any): void\n{\n\tif (candidate instanceof Receiver)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an instance of Receiver');\n}\n\nexport function ensureIsValidMultifieldValue(candidate: any): void\n{\n\t// noinspection OverlyComplexBooleanExpressionJS\n\tconst isValidValue = (\n\t\tType.isPlainObject(candidate)\n\t\t&& (Type.isNil(candidate.id) || Type.isInteger(candidate.id))\n\t\t&& Type.isStringFilled(candidate.typeId)\n\t\t&& Type.isStringFilled(candidate.valueType)\n\t\t&& Type.isStringFilled(candidate.value)\n\t);\n\n\tif (isValidValue)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an object of valid MultifieldValue structure');\n}\n\nexport function ensureIsValidSourceData(candidate: any): void\n{\n\tconst isValid = (\n\t\tType.isPlainObject(candidate)\n\t\t&& Type.isStringFilled(candidate.title)\n\t);\n\n\tif (isValid)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an object of valid SourceData structure')\n}\n","import { ItemIdentifier } from 'crm.data-structures';\nimport { ensureIsItemIdentifier, ensureIsValidMultifieldValue, ensureIsValidSourceData } from './internal/validation';\n\nexport type MultifieldValue = {\n\tid: ?number,\n\ttypeId: string,\n\tvalueType: string,\n\tvalue: string,\n\tvalueFormatted: ?string,\n};\n\nexport type SourceData = {\n\ttitle: string,\n};\n\nexport class Receiver\n{\n\t#rootSource: ItemIdentifier;\n\t#addressSource: ItemIdentifier;\n\t#addressSourceData: ?SourceData = null;\n\t#address: MultifieldValue;\n\n\tconstructor(\n\t\trootSource: ItemIdentifier,\n\t\taddressSource: ItemIdentifier,\n\t\taddress: MultifieldValue,\n\t\taddressSourceData: ?SourceData = null,\n\t)\n\t{\n\t\tensureIsItemIdentifier(rootSource);\n\t\tthis.#rootSource = rootSource;\n\n\t\tensureIsItemIdentifier(addressSource);\n\t\tthis.#addressSource = addressSource;\n\n\t\tensureIsValidMultifieldValue(address);\n\t\tthis.#address = Object.freeze({\n\t\t\tid: address.id,\n\t\t\ttypeId: address.typeId,\n\t\t\tvalueType: address.valueType,\n\t\t\tvalue: address.value,\n\t\t\tvalueFormatted: address.valueFormatted,\n\t\t});\n\n\t\tif (addressSourceData)\n\t\t{\n\t\t\tensureIsValidSourceData(addressSourceData);\n\t\t\tthis.#addressSourceData = Object.freeze({\n\t\t\t\ttitle: addressSourceData.title,\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic fromJSON(data: Object): ?Receiver\n\t{\n\t\tconst rootSource = ItemIdentifier.fromJSON(data?.rootSource);\n\t\tif (!rootSource)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst addressSource = ItemIdentifier.fromJSON(data?.addressSource);\n\t\tif (!addressSource)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\treturn new Receiver(rootSource, addressSource, data?.address, data?.addressSourceData);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tget rootSource(): ItemIdentifier\n\t{\n\t\treturn this.#rootSource;\n\t}\n\n\tget addressSource(): ItemIdentifier\n\t{\n\t\treturn this.#addressSource;\n\t}\n\n\tget addressSourceData(): ?SourceData\n\t{\n\t\treturn this.#addressSourceData;\n\t}\n\n\tget address(): MultifieldValue\n\t{\n\t\treturn this.#address;\n\t}\n\n\tisEqualTo(another: Receiver): boolean\n\t{\n\t\tif (!(another instanceof Receiver))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// noinspection OverlyComplexBooleanExpressionJS\n\t\treturn (\n\t\t\tthis.rootSource.isEqualTo(another.rootSource)\n\t\t\t&& this.addressSource.isEqualTo(another.addressSource)\n\t\t\t&& String(this.address.typeId) === String(another.address.typeId)\n\t\t\t&& String(this.address.valueType) === String(another.address.valueType)\n\t\t\t&& String(this.address.value) === String(another.address.value)\n\t\t);\n\t}\n}\n","import { Text, Type } from 'main.core';\nimport { Receiver } from '../receiver';\nimport { ItemIdentifier } from 'crm.data-structures';\n\nexport function extractReceivers(item: ItemIdentifier, entityData: ?Object): Receiver[]\n{\n\tconst receivers = [];\n\tif (entityData?.hasOwnProperty('MULTIFIELD_DATA'))\n\t{\n\t\treceivers.push(...extractReceiversFromMultifieldData(item, entityData));\n\t}\n\tif (entityData?.hasOwnProperty('CLIENT_INFO'))\n\t{\n\t\treceivers.push(...extractReceiversFromClientInfo(item, entityData.CLIENT_INFO));\n\t}\n\n\treturn unique(receivers);\n}\n\nfunction extractReceiversFromMultifieldData(item: ItemIdentifier, entityData: Object): Receiver[]\n{\n\tconst receivers: Receiver[] = [];\n\n\tconst multifields = entityData.MULTIFIELD_DATA;\n\tfor (const multifieldTypeId in multifields)\n\t{\n\t\tif (!multifields.hasOwnProperty(multifieldTypeId) || !Type.isPlainObject(multifields[multifieldTypeId]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const itemSlug in multifields[multifieldTypeId])\n\t\t{\n\t\t\tif (\n\t\t\t\t!multifields[multifieldTypeId].hasOwnProperty(itemSlug)\n\t\t\t\t|| !Type.isArrayFilled(multifields[multifieldTypeId][itemSlug])\n\t\t\t)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst [entityTypeId, entityId] = itemSlug.split('_');\n\t\t\tlet addressSource: ItemIdentifier;\n\t\t\ttry\n\t\t\t{\n\t\t\t\taddressSource = new ItemIdentifier(Text.toInteger(entityTypeId), Text.toInteger(entityId));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst addressSourceTitle = getAddressSourceTitle(item, addressSource, entityData);\n\n\t\t\tfor (const singleMultifield of multifields[multifieldTypeId][itemSlug])\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treceivers.push(new Receiver(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taddressSource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: Text.toInteger(singleMultifield.ID),\n\t\t\t\t\t\t\ttypeId: String(multifieldTypeId),\n\t\t\t\t\t\t\tvalueType: stringOrUndefined(singleMultifield.VALUE_TYPE),\n\t\t\t\t\t\t\tvalue: stringOrUndefined(singleMultifield.VALUE),\n\t\t\t\t\t\t\tvalueFormatted: stringOrUndefined(singleMultifield.VALUE_FORMATTED),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: addressSourceTitle,\n\t\t\t\t\t\t},\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn receivers;\n}\n\nfunction getAddressSourceTitle(rootSource: ItemIdentifier, addressSource: ItemIdentifier, entityData: ?Object): string\n{\n\tif (rootSource.isEqualTo(addressSource))\n\t{\n\t\treturn entityData?.TITLE ?? entityData.FORMATTED_NAME ?? '';\n\t}\n\n\tconst clientDataKey = `${BX.CrmEntityType.resolveName(addressSource.entityTypeId)}_DATA`;\n\tif (Type.isArrayFilled(entityData?.CLIENT_INFO?.[clientDataKey]))\n\t{\n\t\tconst client = entityData.CLIENT_INFO[clientDataKey].find(clientInfo => {\n\t\t\treturn Text.toInteger(clientInfo.id) === addressSource.entityId;\n\t\t});\n\n\t\tif (Type.isString(client?.title))\n\t\t{\n\t\t\treturn client.title;\n\t\t}\n\t}\n\n\treturn '';\n}\n\nfunction extractReceiversFromClientInfo(item: ItemIdentifier, clientInfo: Object): Receiver[]\n{\n\tconst receivers = [];\n\n\tfor (const clientsOfSameType of Object.values(clientInfo))\n\t{\n\t\tif (!Type.isArrayFilled(clientsOfSameType))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const singleClient of clientsOfSameType)\n\t\t{\n\t\t\tif (!Type.isPlainObject(singleClient))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet addressSource: ItemIdentifier;\n\t\t\ttry\n\t\t\t{\n\t\t\t\taddressSource = new ItemIdentifier(BX.CrmEntityType.resolveId(singleClient.typeName), singleClient.id);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst multifields = singleClient.advancedInfo?.multiFields;\n\t\t\tif (!Type.isArrayFilled(multifields))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const singleMultifield of multifields)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treceivers.push(new Receiver(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taddressSource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: Text.toInteger(singleMultifield.ID),\n\t\t\t\t\t\t\ttypeId: stringOrUndefined(singleMultifield.TYPE_ID),\n\t\t\t\t\t\t\tvalueType: stringOrUndefined(singleMultifield.VALUE_TYPE),\n\t\t\t\t\t\t\tvalue: stringOrUndefined(singleMultifield.VALUE),\n\t\t\t\t\t\t\tvalueFormatted: stringOrUndefined(singleMultifield.VALUE_FORMATTED),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: stringOrUndefined(singleClient.title),\n\t\t\t\t\t\t},\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn receivers;\n}\n\nfunction stringOrUndefined(value: ?string): string | undefined\n{\n\treturn Type.isNil(value) ? undefined : String(value);\n}\n\nfunction unique(receivers: Receiver[]): Receiver[]\n{\n\treturn receivers.filter((receiver, index) => {\n\t\tconst anotherIndex = receivers.findIndex(anotherReceiver => receiver.isEqualTo(anotherReceiver));\n\n\t\treturn anotherIndex === index;\n\t});\n}\n","import { ItemIdentifier } from 'crm.data-structures';\nimport { Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\nimport { extractReceivers } from './internal/extract-receivers';\nimport { ensureIsItemIdentifier, ensureIsReceiver } from './internal/validation';\nimport { Receiver } from './receiver';\n\nconst OBSERVED_EVENTS = new Set([\n\t'onCrmEntityCreate',\n\t'onCrmEntityUpdate',\n\t'onCrmEntityDelete',\n]);\n\n/**\n * @memberOf BX.Crm.MessageSender\n * @mixes EventEmitter\n *\n * @emits BX.Crm.MessageSender.ReceiverRepository:OnReceiversChanged\n * @emits BX.Crm.MessageSender.ReceiverRepository:OnItemDeleted\n *\n * Currently, this class is supposed to work only in the context of entity details tab.\n * In the future, it can be extended to work on any page. (see todos)\n */\nexport class ReceiverRepository\n{\n\tstatic #instance: ?ReceiverRepository;\n\n\t#onDetailsTabChangeEventHandler: (BaseEvent) => void;\n\n\t#storage: {[itemHash: string]: Receiver[]} = {};\n\n\t#observedItems: {[entityTypeId: number]: Set<number>} = {};\n\n\tstatic get Instance(): ReceiverRepository\n\t{\n\t\tif (!ReceiverRepository.#instance)\n\t\t{\n\t\t\tReceiverRepository.#instance = new ReceiverRepository();\n\t\t}\n\n\t\treturn ReceiverRepository.#instance;\n\t}\n\n\t/**\n\t * @internal This class is a singleton. Use Instance getter instead of constructing a new instance\n\t */\n\tconstructor()\n\t{\n\t\tif (ReceiverRepository.#instance)\n\t\t{\n\t\t\tthrow new Error('Attempt to make a new instance of a singleton');\n\t\t}\n\n\t\tthis.#init();\n\t}\n\n\t#init(): void\n\t{\n\t\tEventEmitter.makeObservable(this, 'BX.Crm.MessageSender.ReceiverRepository');\n\n\t\tthis.#onDetailsTabChangeEventHandler = (event: BaseEvent) => {\n\t\t\tif (!(event instanceof BaseEvent))\n\t\t\t{\n\t\t\t\tconsole.error('unexpected event type', event);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!Type.isArrayFilled(event.getData()) || !Type.isPlainObject(event.getData()[0]))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#onCrmEntityChange(event.getType(), event.getData()[0]);\n\t\t};\n\t\tthis.#onDetailsTabChangeEventHandler = this.#onDetailsTabChangeEventHandler.bind(this);\n\n\t\tfor (const eventName of OBSERVED_EVENTS)\n\t\t{\n\t\t\t// todo use BX.Crm.EntityEvent.subscribe instead, we will get data from all tabs/sliders\n\t\t\tEventEmitter.subscribe(eventName, this.#onDetailsTabChangeEventHandler);\n\t\t}\n\n\t\tif (BX.SidePanel?.Instance?.isOpen())\n\t\t{\n\t\t\t// we are on entity details slider\n\t\t\tEventEmitter.subscribe('SidePanel.Slider:onDestroy', this.#destroy.bind(this));\n\t\t}\n\t}\n\n\t#destroy(): void\n\t{\n\t\tfor (const eventName of OBSERVED_EVENTS)\n\t\t{\n\t\t\tEventEmitter.unsubscribe(eventName, this.#onDetailsTabChangeEventHandler);\n\t\t}\n\t\tReceiverRepository.#instance = null;\n\t}\n\n\t#onCrmEntityChange(eventType: string, { entityTypeId, entityId, entityData }): void\n\t{\n\t\tif (!this.#observedItems[entityTypeId]?.has(entityId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = new ItemIdentifier(entityTypeId, entityId);\n\n\t\tif (\n\t\t\teventType.toLowerCase() === 'onCrmEntityCreate'.toLowerCase()\n\t\t\t|| eventType.toLowerCase() === 'onCrmEntityUpdate'.toLowerCase()\n\t\t)\n\t\t{\n\t\t\tconst oldReceivers = this.#storage[item.hash] ?? [];\n\t\t\tconst newReceivers = extractReceivers(item, entityData);\n\n\t\t\tthis.#storage[item.hash] = newReceivers;\n\n\t\t\tconst added = newReceivers.filter((newReceiver) => {\n\t\t\t\treturn Type.isNil(oldReceivers.find((oldReceiver) => oldReceiver.isEqualTo(newReceiver)));\n\t\t\t});\n\t\t\tconst deleted = oldReceivers.filter((oldReceiver) => {\n\t\t\t\treturn Type.isNil(newReceivers.find((newReceiver) => newReceiver.isEqualTo(oldReceiver)));\n\t\t\t});\n\n\t\t\tif (added.length > 0 || deleted.length > 0)\n\t\t\t{\n\t\t\t\tthis.emit('OnReceiversChanged', { item, previous: oldReceivers, current: newReceivers, added, deleted });\n\t\t\t}\n\t\t}\n\t\telse if (eventType.toLowerCase() === 'onCrmEntityDelete'.toLowerCase())\n\t\t{\n\t\t\tdelete this.#storage[item.hash];\n\t\t\tthis.#observedItems[item.entityTypeId].delete(item.entityId);\n\t\t\tthis.emit('OnItemDeleted', { item });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.error('unknown event type', eventType);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tstatic onDetailsLoad(entityTypeId: number, entityId: number, receiversJSONString: string): void\n\t{\n\t\tlet item: ItemIdentifier = null;\n\t\ttry\n\t\t{\n\t\t\titem = new ItemIdentifier(entityTypeId, entityId);\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst instance = ReceiverRepository.Instance;\n\t\t// todo notify instances of this class on other tabs/sliders\n\t\tinstance.#startObservingItem(item);\n\n\t\tconst receiversJSON = JSON.parse(receiversJSONString);\n\t\tif (Type.isArrayFilled(receiversJSON))\n\t\t{\n\t\t\tconst receivers = [];\n\t\t\tfor (const singleReceiverJSON of receiversJSON)\n\t\t\t{\n\t\t\t\tconst receiver = Receiver.fromJSON(singleReceiverJSON);\n\t\t\t\tif (!Type.isNil(receiver))\n\t\t\t\t{\n\t\t\t\t\treceivers.push(receiver);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(receivers))\n\t\t\t{\n\t\t\t\t// todo add receivers to instances of this class on other tabs/sliders\n\t\t\t\tinstance.#addReceivers(item, receivers);\n\t\t\t}\n\t\t}\n\t}\n\n\t#addReceivers(item: ItemIdentifier, receivers: Receiver[]): void\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\tthis.#storage[item.hash] = [];\n\t\tfor (const receiver of receivers)\n\t\t{\n\t\t\tensureIsReceiver(receiver);\n\n\t\t\tthis.#storage[item.hash].push(receiver);\n\t\t}\n\n\t\tthis.#startObservingItem(item);\n\t}\n\n\t#startObservingItem(item: ItemIdentifier): void\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\tconst observedItemsOfThisType = this.#observedItems[item.entityTypeId] ?? new Set();\n\t\tobservedItemsOfThisType.add(item.entityId);\n\t\tthis.#observedItems[item.entityTypeId] = observedItemsOfThisType;\n\t}\n\n\tgetReceivers(entityTypeId: number, entityId: number): Receiver[]\n\t{\n\t\ttry\n\t\t{\n\t\t\treturn this.getReceiversByIdentifier(new ItemIdentifier(entityTypeId, entityId));\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tgetReceiversByIdentifier(item: ItemIdentifier): Receiver[]\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\treturn this.#storage[item.hash] ?? [];\n\t}\n}\n"],"names":["Types","Object","freeze","bitrix24","sms","ConsentApprover","constructor","senderType","checkAndApprove","Promise","resolve","ajax","runAction","then","data","html","catch","title","message","BX","UI","Dialogs","MessageBox","show","modal","minWidth","buttons","popupOptions","className","Button","color","Color","SUCCESS","text","Loc","getMessage","onclick","button","isApprovedConsent","LIGHT_BORDER","response","status","context","close","content","Notification","Center","notify","showNotify","Base","params","openLineItems","entityTypeId","Type","isPlainObject","isNumber","getOpenLineCode","Error","checkAndGetLineId","isOpenLineItemSelected","force","item","getOpenLineItem","ReferenceError","selected","openLineCode","fetchOpenLineItems","reject","errors","getLineId","ajaxParameters","connectorId","withConnector","isArrayFilled","lineId","length","canEditConnector","openConnectSidePanel","url","onCloseCallback","isStringFilled","Router","openSlider","width","cacheable","name","RuWhatsApp","isWhatsAppAvailable","isSelected","virtual_whatsapp","onConnectVirtualWhatsApp","bind","onConnect","config","infoHelperCode","Reflection","getClass","InfoHelper","virtualWhatsAppItem","Telegram","isApproved","WhatsApp","hasAvailableProvider","smsSenders","some","provider","canUse","isTemplatesBased","MessageBoxButtons","OK_CANCEL","okCaption","onOk","messageBox","marketUrl","SidePanel","Instance","open","events","onClose","hasAvailableSmsProvider","Extension","getSettings","Factory","getScenarioInstance","RangeError","ConditionChecker","checkAndGetLine","serviceId","instance","isObjectLike","setOpenLineItems","setServiceId","TypeError","CrmEntityType","isDefined","setEntityTypeId","check","checkIsApproved","checkApproveConsent","items","scenario","ensureIsItemIdentifier","candidate","ItemIdentifier","ensureIsReceiver","Receiver","ensureIsValidMultifieldValue","isValidValue","isNil","id","isInteger","typeId","valueType","value","ensureIsValidSourceData","isValid","rootSource","addressSource","address","addressSourceData","valueFormatted","fromJSON","e","isEqualTo","another","String","extractReceivers","entityData","receivers","hasOwnProperty","push","extractReceiversFromMultifieldData","extractReceiversFromClientInfo","CLIENT_INFO","unique","multifields","MULTIFIELD_DATA","multifieldTypeId","itemSlug","entityId","split","Text","toInteger","addressSourceTitle","getAddressSourceTitle","singleMultifield","ID","stringOrUndefined","VALUE_TYPE","VALUE","VALUE_FORMATTED","TITLE","FORMATTED_NAME","clientDataKey","resolveName","client","find","clientInfo","isString","clientsOfSameType","values","singleClient","resolveId","typeName","advancedInfo","multiFields","TYPE_ID","undefined","filter","receiver","index","anotherIndex","findIndex","anotherReceiver","OBSERVED_EVENTS","Set","ReceiverRepository","onDetailsLoad","receiversJSONString","receiversJSON","JSON","parse","singleReceiverJSON","getReceivers","getReceiversByIdentifier","hash","EventEmitter","makeObservable","event","BaseEvent","console","error","getData","getType","eventName","subscribe","isOpen","unsubscribe","eventType","has","toLowerCase","oldReceivers","newReceivers","added","newReceiver","oldReceiver","deleted","emit","previous","current","delete","observedItemsOfThisType","add"],"mappings":"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"}