{"version":3,"file":"messagesender.bundle.js","sources":["../src/internal/validation.js","../src/receiver.js","../src/internal/extract-receivers.js","../src/receiver-repository.js"],"sourcesContent":["import { Type } from 'main.core';\nimport { ItemIdentifier } from 'crm.data-structures';\nimport { Receiver } from '../receiver';\n\nexport function ensureIsItemIdentifier(candidate: any): void\n{\n\tif (candidate instanceof ItemIdentifier)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an instance of ItemIdentifier');\n}\n\nexport function ensureIsReceiver(candidate: any): void\n{\n\tif (candidate instanceof Receiver)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an instance of Receiver');\n}\n\nexport function ensureIsValidMultifieldValue(candidate: any): void\n{\n\t// noinspection OverlyComplexBooleanExpressionJS\n\tconst isValidValue = (\n\t\tType.isPlainObject(candidate)\n\t\t&& (Type.isNil(candidate.id) || Type.isInteger(candidate.id))\n\t\t&& Type.isStringFilled(candidate.typeId)\n\t\t&& Type.isStringFilled(candidate.valueType)\n\t\t&& Type.isStringFilled(candidate.value)\n\t);\n\n\tif (isValidValue)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an object of valid MultifieldValue structure');\n}\n\nexport function ensureIsValidSourceData(candidate: any): void\n{\n\tconst isValid = (\n\t\tType.isPlainObject(candidate)\n\t\t&& Type.isStringFilled(candidate.title)\n\t);\n\n\tif (isValid)\n\t{\n\t\treturn;\n\t}\n\n\tthrow new Error('Argument should be an object of valid SourceData structure')\n}\n","import { ItemIdentifier } from 'crm.data-structures';\nimport { ensureIsItemIdentifier, ensureIsValidMultifieldValue, ensureIsValidSourceData } from './internal/validation';\n\nexport type MultifieldValue = {\n\tid: ?number,\n\ttypeId: string,\n\tvalueType: string,\n\tvalue: string,\n\tvalueFormatted: ?string,\n};\n\nexport type SourceData = {\n\ttitle: string,\n};\n\nexport class Receiver\n{\n\t#rootSource: ItemIdentifier;\n\t#addressSource: ItemIdentifier;\n\t#addressSourceData: ?SourceData = null;\n\t#address: MultifieldValue;\n\n\tconstructor(\n\t\trootSource: ItemIdentifier,\n\t\taddressSource: ItemIdentifier,\n\t\taddress: MultifieldValue,\n\t\taddressSourceData: ?SourceData = null,\n\t)\n\t{\n\t\tensureIsItemIdentifier(rootSource);\n\t\tthis.#rootSource = rootSource;\n\n\t\tensureIsItemIdentifier(addressSource);\n\t\tthis.#addressSource = addressSource;\n\n\t\tensureIsValidMultifieldValue(address);\n\t\tthis.#address = Object.freeze({\n\t\t\tid: address.id,\n\t\t\ttypeId: address.typeId,\n\t\t\tvalueType: address.valueType,\n\t\t\tvalue: address.value,\n\t\t\tvalueFormatted: address.valueFormatted,\n\t\t});\n\n\t\tif (addressSourceData)\n\t\t{\n\t\t\tensureIsValidSourceData(addressSourceData);\n\t\t\tthis.#addressSourceData = Object.freeze({\n\t\t\t\ttitle: addressSourceData.title,\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic fromJSON(data: Object): ?Receiver\n\t{\n\t\tconst rootSource = ItemIdentifier.fromJSON(data?.rootSource);\n\t\tif (!rootSource)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst addressSource = ItemIdentifier.fromJSON(data?.addressSource);\n\t\tif (!addressSource)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\treturn new Receiver(rootSource, addressSource, data?.address, data?.addressSourceData);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tget rootSource(): ItemIdentifier\n\t{\n\t\treturn this.#rootSource;\n\t}\n\n\tget addressSource(): ItemIdentifier\n\t{\n\t\treturn this.#addressSource;\n\t}\n\n\tget addressSourceData(): ?SourceData\n\t{\n\t\treturn this.#addressSourceData;\n\t}\n\n\tget address(): MultifieldValue\n\t{\n\t\treturn this.#address;\n\t}\n\n\tisEqualTo(another: Receiver): boolean\n\t{\n\t\tif (!(another instanceof Receiver))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// noinspection OverlyComplexBooleanExpressionJS\n\t\treturn (\n\t\t\tthis.rootSource.isEqualTo(another.rootSource)\n\t\t\t&& this.addressSource.isEqualTo(another.addressSource)\n\t\t\t&& String(this.address.typeId) === String(another.address.typeId)\n\t\t\t&& String(this.address.valueType) === String(another.address.valueType)\n\t\t\t&& String(this.address.value) === String(another.address.value)\n\t\t);\n\t}\n}\n","import { Text, Type } from 'main.core';\nimport { Receiver } from '../receiver';\nimport { ItemIdentifier } from 'crm.data-structures';\n\nexport function extractReceivers(item: ItemIdentifier, entityData: ?Object): Receiver[]\n{\n\tconst receivers = [];\n\tif (entityData?.hasOwnProperty('MULTIFIELD_DATA'))\n\t{\n\t\treceivers.push(...extractReceiversFromMultifieldData(item, entityData));\n\t}\n\tif (entityData?.hasOwnProperty('CLIENT_INFO'))\n\t{\n\t\treceivers.push(...extractReceiversFromClientInfo(item, entityData.CLIENT_INFO));\n\t}\n\n\treturn unique(receivers);\n}\n\nfunction extractReceiversFromMultifieldData(item: ItemIdentifier, entityData: Object): Receiver[]\n{\n\tconst receivers: Receiver[] = [];\n\n\tconst multifields = entityData.MULTIFIELD_DATA;\n\tfor (const multifieldTypeId in multifields)\n\t{\n\t\tif (!multifields.hasOwnProperty(multifieldTypeId) || !Type.isPlainObject(multifields[multifieldTypeId]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const itemSlug in multifields[multifieldTypeId])\n\t\t{\n\t\t\tif (\n\t\t\t\t!multifields[multifieldTypeId].hasOwnProperty(itemSlug)\n\t\t\t\t|| !Type.isArrayFilled(multifields[multifieldTypeId][itemSlug])\n\t\t\t)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst [entityTypeId, entityId] = itemSlug.split('_');\n\t\t\tlet addressSource: ItemIdentifier;\n\t\t\ttry\n\t\t\t{\n\t\t\t\taddressSource = new ItemIdentifier(Text.toInteger(entityTypeId), Text.toInteger(entityId));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst addressSourceTitle = getAddressSourceTitle(item, addressSource, entityData);\n\n\t\t\tfor (const singleMultifield of multifields[multifieldTypeId][itemSlug])\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treceivers.push(new Receiver(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taddressSource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: Text.toInteger(singleMultifield.ID),\n\t\t\t\t\t\t\ttypeId: String(multifieldTypeId),\n\t\t\t\t\t\t\tvalueType: stringOrUndefined(singleMultifield.VALUE_TYPE),\n\t\t\t\t\t\t\tvalue: stringOrUndefined(singleMultifield.VALUE),\n\t\t\t\t\t\t\tvalueFormatted: stringOrUndefined(singleMultifield.VALUE_FORMATTED),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: addressSourceTitle,\n\t\t\t\t\t\t},\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn receivers;\n}\n\nfunction getAddressSourceTitle(rootSource: ItemIdentifier, addressSource: ItemIdentifier, entityData: ?Object): string\n{\n\tif (rootSource.isEqualTo(addressSource))\n\t{\n\t\treturn entityData?.TITLE ?? entityData.FORMATTED_NAME ?? '';\n\t}\n\n\tconst clientDataKey = `${BX.CrmEntityType.resolveName(addressSource.entityTypeId)}_DATA`;\n\tif (Type.isArrayFilled(entityData?.CLIENT_INFO?.[clientDataKey]))\n\t{\n\t\tconst client = entityData.CLIENT_INFO[clientDataKey].find(clientInfo => {\n\t\t\treturn Text.toInteger(clientInfo.id) === addressSource.entityId;\n\t\t});\n\n\t\tif (Type.isString(client?.title))\n\t\t{\n\t\t\treturn client.title;\n\t\t}\n\t}\n\n\treturn '';\n}\n\nfunction extractReceiversFromClientInfo(item: ItemIdentifier, clientInfo: Object): Receiver[]\n{\n\tconst receivers = [];\n\n\tfor (const clientsOfSameType of Object.values(clientInfo))\n\t{\n\t\tif (!Type.isArrayFilled(clientsOfSameType))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const singleClient of clientsOfSameType)\n\t\t{\n\t\t\tif (!Type.isPlainObject(singleClient))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet addressSource: ItemIdentifier;\n\t\t\ttry\n\t\t\t{\n\t\t\t\taddressSource = new ItemIdentifier(BX.CrmEntityType.resolveId(singleClient.typeName), singleClient.id);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst multifields = singleClient.advancedInfo?.multiFields;\n\t\t\tif (!Type.isArrayFilled(multifields))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const singleMultifield of multifields)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\treceivers.push(new Receiver(\n\t\t\t\t\t\titem,\n\t\t\t\t\t\taddressSource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: Text.toInteger(singleMultifield.ID),\n\t\t\t\t\t\t\ttypeId: stringOrUndefined(singleMultifield.TYPE_ID),\n\t\t\t\t\t\t\tvalueType: stringOrUndefined(singleMultifield.VALUE_TYPE),\n\t\t\t\t\t\t\tvalue: stringOrUndefined(singleMultifield.VALUE),\n\t\t\t\t\t\t\tvalueFormatted: stringOrUndefined(singleMultifield.VALUE_FORMATTED),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: stringOrUndefined(singleClient.title),\n\t\t\t\t\t\t},\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn receivers;\n}\n\nfunction stringOrUndefined(value: ?string): string | undefined\n{\n\treturn Type.isNil(value) ? undefined : String(value);\n}\n\nfunction unique(receivers: Receiver[]): Receiver[]\n{\n\treturn receivers.filter((receiver, index) => {\n\t\tconst anotherIndex = receivers.findIndex(anotherReceiver => receiver.isEqualTo(anotherReceiver));\n\n\t\treturn anotherIndex === index;\n\t});\n}\n","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Reflection, Type } from 'main.core';\nimport { ItemIdentifier } from 'crm.data-structures';\nimport { Receiver } from './receiver';\nimport { extractReceivers } from './internal/extract-receivers';\nimport { ensureIsItemIdentifier, ensureIsReceiver } from './internal/validation';\n\nconst OBSERVED_EVENTS = new Set([\n\t'onCrmEntityCreate',\n\t'onCrmEntityUpdate',\n\t'onCrmEntityDelete',\n]);\n\n/**\n * @memberOf BX.Crm.MessageSender\n * @mixes EventEmitter\n *\n * @emits BX.Crm.MessageSender.ReceiverRepository:OnReceiversChanged\n * @emits BX.Crm.MessageSender.ReceiverRepository:OnItemDeleted\n *\n * Currently, this class is supposed to work only in the context of entity details tab.\n * In the future, it can be extended to work on any page.\n */\nexport class ReceiverRepository\n{\n\tstatic #instance: ?ReceiverRepository;\n\n\t#onDetailsTabChangeEventHandler: (BaseEvent) => void;\n\n\t#storage: {[itemHash: string]: Receiver[]} = {};\n\n\t#observedItems: {[entityTypeId: number]: Set<number>} = {};\n\n\n\tstatic get Instance(): ReceiverRepository\n\t{\n\t\tif ((window.top !== window) && Reflection.getClass('top.BX.Crm.MessageSender.ReceiverRepository'))\n\t\t{\n\t\t\treturn window.top.BX.Crm.MessageSender.ReceiverRepository;\n\t\t}\n\n\t\tif (!ReceiverRepository.#instance)\n\t\t{\n\t\t\tReceiverRepository.#instance = new ReceiverRepository();\n\t\t}\n\n\t\treturn ReceiverRepository.#instance;\n\t}\n\n\t/**\n\t * @internal This class is a singleton. Use Instance getter instead of constructing a new instance\n\t */\n\tconstructor()\n\t{\n\t\tif (ReceiverRepository.#instance)\n\t\t{\n\t\t\tthrow new Error('Attempt to make a new instance of a singleton');\n\t\t}\n\n\t\tthis.#init();\n\t}\n\n\t#init(): void\n\t{\n\t\tEventEmitter.makeObservable(this, 'BX.Crm.MessageSender.ReceiverRepository');\n\n\t\tthis.#onDetailsTabChangeEventHandler = (event: BaseEvent) => {\n\t\t\tif (!(event instanceof BaseEvent))\n\t\t\t{\n\t\t\t\tconsole.error('unexpected event type', event);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!Type.isArrayFilled(event.getData()) || !Type.isPlainObject(event.getData()[0]))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#onCrmEntityChange(event.getType(), event.getData()[0]);\n\t\t};\n\t\tthis.#onDetailsTabChangeEventHandler = this.#onDetailsTabChangeEventHandler.bind(this);\n\n\t\tfor (const eventName of OBSERVED_EVENTS)\n\t\t{\n\t\t\tEventEmitter.subscribe(eventName, this.#onDetailsTabChangeEventHandler);\n\t\t}\n\t\tif (BX.SidePanel?.Instance?.isOpen())\n\t\t{\n\t\t\t// we are on entity details slider\n\t\t\tEventEmitter.subscribe('SidePanel.Slider:onDestroy', this.#destroy.bind(this));\n\t\t}\n\t}\n\n\t#destroy(): void\n\t{\n\t\tfor (const eventName of OBSERVED_EVENTS)\n\t\t{\n\t\t\tEventEmitter.unsubscribe(eventName, this.#onDetailsTabChangeEventHandler);\n\t\t}\n\t\tReceiverRepository.#instance = null;\n\t}\n\n\t#onCrmEntityChange(eventType: string, {entityTypeId, entityId, entityData}): void\n\t{\n\t\tif (!this.#observedItems[entityTypeId]?.has(entityId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = new ItemIdentifier(entityTypeId, entityId);\n\n\t\tif (\n\t\t\teventType.toLowerCase() === 'onCrmEntityCreate'.toLowerCase()\n\t\t\t|| eventType.toLowerCase() === 'onCrmEntityUpdate'.toLowerCase()\n\t\t)\n\t\t{\n\t\t\tconst oldReceivers = this.#storage[item.hash] ?? [];\n\t\t\tconst newReceivers = extractReceivers(item, entityData);\n\n\t\t\tthis.#storage[item.hash] = newReceivers;\n\n\t\t\tconst added = newReceivers.filter(newReceiver => {\n\t\t\t\treturn Type.isNil(oldReceivers.find(oldReceiver => oldReceiver.isEqualTo(newReceiver)));\n\t\t\t});\n\t\t\tconst deleted = oldReceivers.filter(oldReceiver => {\n\t\t\t\treturn Type.isNil(newReceivers.find(newReceiver => newReceiver.isEqualTo(oldReceiver)));\n\t\t\t});\n\n\t\t\tif (added.length > 0 || deleted.length > 0)\n\t\t\t{\n\t\t\t\tthis.emit('OnReceiversChanged', {item, previous: oldReceivers, current: newReceivers, added, deleted});\n\t\t\t}\n\t\t}\n\t\telse if (eventType.toLowerCase() === 'onCrmEntityDelete'.toLowerCase())\n\t\t{\n\t\t\tdelete this.#storage[item.hash];\n\t\t\tthis.#observedItems[item.entityTypeId].delete(item.entityId);\n\t\t\tthis.emit('OnItemDeleted', {item});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.error('unknown event type', eventType);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tstatic onDetailsLoad(entityTypeId: number, entityId: number, receiversJSONString: string): void\n\t{\n\t\tlet item: ItemIdentifier;\n\t\ttry\n\t\t{\n\t\t\titem = new ItemIdentifier(entityTypeId, entityId);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst instance = ReceiverRepository.Instance;\n\t\tinstance.#startObservingItem(item);\n\n\t\tconst receiversJSON = JSON.parse(receiversJSONString);\n\t\tif (Type.isArrayFilled(receiversJSON))\n\t\t{\n\t\t\tconst receivers = [];\n\t\t\tfor (const singleReceiverJSON of receiversJSON)\n\t\t\t{\n\t\t\t\tconst receiver = Receiver.fromJSON(singleReceiverJSON);\n\t\t\t\tif (!Type.isNil(receiver))\n\t\t\t\t{\n\t\t\t\t\treceivers.push(receiver);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(receivers))\n\t\t\t{\n\t\t\t\tinstance.#addReceivers(item, receivers);\n\t\t\t}\n\t\t}\n\t}\n\n\t#addReceivers(item: ItemIdentifier, receivers: Receiver[]): void\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\tthis.#storage[item.hash] = [];\n\t\tfor (const receiver of receivers)\n\t\t{\n\t\t\tensureIsReceiver(receiver);\n\n\t\t\tthis.#storage[item.hash].push(receiver);\n\t\t}\n\n\t\tthis.#startObservingItem(item);\n\t}\n\n\t#startObservingItem(item: ItemIdentifier): void\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\tconst observedItemsOfThisType = this.#observedItems[item.entityTypeId] ?? new Set();\n\t\tobservedItemsOfThisType.add(item.entityId);\n\t\tthis.#observedItems[item.entityTypeId] = observedItemsOfThisType;\n\t}\n\n\tgetReceivers(entityTypeId: number, entityId: number): Receiver[]\n\t{\n\t\ttry\n\t\t{\n\t\t\treturn this.getReceiversByIdentifier(new ItemIdentifier(entityTypeId, entityId));\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tgetReceiversByIdentifier(item: ItemIdentifier): Receiver[]\n\t{\n\t\tensureIsItemIdentifier(item);\n\n\t\treturn this.#storage[item.hash] ?? [];\n\t}\n}\n"],"names":["ensureIsItemIdentifier","candidate","ItemIdentifier","Error","ensureIsReceiver","Receiver","ensureIsValidMultifieldValue","isValidValue","Type","isPlainObject","isNil","id","isInteger","isStringFilled","typeId","valueType","value","ensureIsValidSourceData","isValid","title","constructor","rootSource","addressSource","address","addressSourceData","Object","freeze","valueFormatted","fromJSON","data","e","isEqualTo","another","String","extractReceivers","item","entityData","receivers","hasOwnProperty","push","extractReceiversFromMultifieldData","extractReceiversFromClientInfo","CLIENT_INFO","unique","multifields","MULTIFIELD_DATA","multifieldTypeId","itemSlug","isArrayFilled","entityTypeId","entityId","split","Text","toInteger","addressSourceTitle","getAddressSourceTitle","singleMultifield","ID","stringOrUndefined","VALUE_TYPE","VALUE","VALUE_FORMATTED","TITLE","FORMATTED_NAME","clientDataKey","BX","CrmEntityType","resolveName","client","find","clientInfo","isString","clientsOfSameType","values","singleClient","resolveId","typeName","advancedInfo","multiFields","TYPE_ID","undefined","filter","receiver","index","anotherIndex","findIndex","anotherReceiver","OBSERVED_EVENTS","Set","ReceiverRepository","Instance","window","top","Reflection","getClass","Crm","MessageSender","onDetailsLoad","receiversJSONString","instance","receiversJSON","JSON","parse","singleReceiverJSON","getReceivers","getReceiversByIdentifier","hash","EventEmitter","makeObservable","event","BaseEvent","console","error","getData","getType","bind","eventName","subscribe","SidePanel","isOpen","unsubscribe","eventType","has","toLowerCase","oldReceivers","newReceivers","added","newReceiver","oldReceiver","deleted","length","emit","previous","current","delete","observedItemsOfThisType","add"],"mappings":";;;;;CAIO,SAASA,sBAAsB,CAACC,SAAc,EACrD;GACC,IAAIA,SAAS,YAAYC,iCAAc,EACvC;KACC;;GAGD,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;CACpE;AAEA,CAAO,SAASC,gBAAgB,CAACH,SAAc,EAC/C;GACC,IAAIA,SAAS,YAAYI,QAAQ,EACjC;KACC;;GAGD,MAAM,IAAIF,KAAK,CAAC,4CAA4C,CAAC;CAC9D;AAEA,CAAO,SAASG,4BAA4B,CAACL,SAAc,EAC3D;;GAEC,MAAMM,YAAY,GACjBC,cAAI,CAACC,aAAa,CAACR,SAAS,CAAC,KACzBO,cAAI,CAACE,KAAK,CAACT,SAAS,CAACU,EAAE,CAAC,IAAIH,cAAI,CAACI,SAAS,CAACX,SAAS,CAACU,EAAE,CAAC,CAAC,IAC1DH,cAAI,CAACK,cAAc,CAACZ,SAAS,CAACa,MAAM,CAAC,IACrCN,cAAI,CAACK,cAAc,CAACZ,SAAS,CAACc,SAAS,CAAC,IACxCP,cAAI,CAACK,cAAc,CAACZ,SAAS,CAACe,KAAK,CACtC;GAED,IAAIT,YAAY,EAChB;KACC;;GAGD,MAAM,IAAIJ,KAAK,CAAC,iEAAiE,CAAC;CACnF;AAEA,CAAO,SAASc,uBAAuB,CAAChB,SAAc,EACtD;GACC,MAAMiB,OAAO,GACZV,cAAI,CAACC,aAAa,CAACR,SAAS,CAAC,IAC1BO,cAAI,CAACK,cAAc,CAACZ,SAAS,CAACkB,KAAK,CACtC;GAED,IAAID,OAAO,EACX;KACC;;GAGD,MAAM,IAAIf,KAAK,CAAC,4DAA4D,CAAC;CAC9E;;CCvDsH;CAAA;CAAA;CAAA;AActH,CAAO,MAAME,QAAQ,CACrB;GAMCe,WAAW,CACVC,UAA0B,EAC1BC,aAA6B,EAC7BC,OAAwB,EACxBC,iBAA8B,GAAG,IAAI,EAEtC;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OATkC;;KAAI;OAAA;OAAA;;KAUrCxB,sBAAsB,CAACqB,UAAU,CAAC;KAClC,4CAAI,8BAAeA,UAAU;KAE7BrB,sBAAsB,CAACsB,aAAa,CAAC;KACrC,4CAAI,oCAAkBA,aAAa;KAEnChB,4BAA4B,CAACiB,OAAO,CAAC;KACrC,4CAAI,wBAAYE,MAAM,CAACC,MAAM,CAAC;OAC7Bf,EAAE,EAAEY,OAAO,CAACZ,EAAE;OACdG,MAAM,EAAES,OAAO,CAACT,MAAM;OACtBC,SAAS,EAAEQ,OAAO,CAACR,SAAS;OAC5BC,KAAK,EAAEO,OAAO,CAACP,KAAK;OACpBW,cAAc,EAAEJ,OAAO,CAACI;MACxB,CAAC;KAEF,IAAIH,iBAAiB,EACrB;OACCP,uBAAuB,CAACO,iBAAiB,CAAC;OAC1C,4CAAI,4CAAsBC,MAAM,CAACC,MAAM,CAAC;SACvCP,KAAK,EAAEK,iBAAiB,CAACL;QACzB,CAAC;;;GAIJ,OAAOS,QAAQ,CAACC,IAAY,EAC5B;KACC,MAAMR,UAAU,GAAGnB,iCAAc,CAAC0B,QAAQ,CAACC,IAAI,oBAAJA,IAAI,CAAER,UAAU,CAAC;KAC5D,IAAI,CAACA,UAAU,EACf;OACC,OAAO,IAAI;;KAGZ,MAAMC,aAAa,GAAGpB,iCAAc,CAAC0B,QAAQ,CAACC,IAAI,oBAAJA,IAAI,CAAEP,aAAa,CAAC;KAClE,IAAI,CAACA,aAAa,EAClB;OACC,OAAO,IAAI;;KAGZ,IACA;OACC,OAAO,IAAIjB,QAAQ,CAACgB,UAAU,EAAEC,aAAa,EAAEO,IAAI,oBAAJA,IAAI,CAAEN,OAAO,EAAEM,IAAI,oBAAJA,IAAI,CAAEL,iBAAiB,CAAC;MACtF,CACD,OAAOM,CAAC,EACR;OACC,OAAO,IAAI;;;GAIb,IAAIT,UAAU,GACd;KACC,+CAAO,IAAI;;GAGZ,IAAIC,aAAa,GACjB;KACC,+CAAO,IAAI;;GAGZ,IAAIE,iBAAiB,GACrB;KACC,+CAAO,IAAI;;GAGZ,IAAID,OAAO,GACX;KACC,+CAAO,IAAI;;GAGZQ,SAAS,CAACC,OAAiB,EAC3B;KACC,IAAI,EAAEA,OAAO,YAAY3B,QAAQ,CAAC,EAClC;OACC,OAAO,KAAK;;;;KAIb,OACC,IAAI,CAACgB,UAAU,CAACU,SAAS,CAACC,OAAO,CAACX,UAAU,CAAC,IAC1C,IAAI,CAACC,aAAa,CAACS,SAAS,CAACC,OAAO,CAACV,aAAa,CAAC,IACnDW,MAAM,CAAC,IAAI,CAACV,OAAO,CAACT,MAAM,CAAC,KAAKmB,MAAM,CAACD,OAAO,CAACT,OAAO,CAACT,MAAM,CAAC,IAC9DmB,MAAM,CAAC,IAAI,CAACV,OAAO,CAACR,SAAS,CAAC,KAAKkB,MAAM,CAACD,OAAO,CAACT,OAAO,CAACR,SAAS,CAAC,IACpEkB,MAAM,CAAC,IAAI,CAACV,OAAO,CAACP,KAAK,CAAC,KAAKiB,MAAM,CAACD,OAAO,CAACT,OAAO,CAACP,KAAK,CAAC;;CAGlE;;CC7GO,SAASkB,gBAAgB,CAACC,IAAoB,EAAEC,UAAmB,EAC1E;GACC,MAAMC,SAAS,GAAG,EAAE;GACpB,IAAID,UAAU,YAAVA,UAAU,CAAEE,cAAc,CAAC,iBAAiB,CAAC,EACjD;KACCD,SAAS,CAACE,IAAI,CAAC,GAAGC,kCAAkC,CAACL,IAAI,EAAEC,UAAU,CAAC,CAAC;;GAExE,IAAIA,UAAU,YAAVA,UAAU,CAAEE,cAAc,CAAC,aAAa,CAAC,EAC7C;KACCD,SAAS,CAACE,IAAI,CAAC,GAAGE,8BAA8B,CAACN,IAAI,EAAEC,UAAU,CAACM,WAAW,CAAC,CAAC;;GAGhF,OAAOC,MAAM,CAACN,SAAS,CAAC;CACzB;CAEA,SAASG,kCAAkC,CAACL,IAAoB,EAAEC,UAAkB,EACpF;GACC,MAAMC,SAAqB,GAAG,EAAE;GAEhC,MAAMO,WAAW,GAAGR,UAAU,CAACS,eAAe;GAC9C,KAAK,MAAMC,gBAAgB,IAAIF,WAAW,EAC1C;KACC,IAAI,CAACA,WAAW,CAACN,cAAc,CAACQ,gBAAgB,CAAC,IAAI,CAACtC,cAAI,CAACC,aAAa,CAACmC,WAAW,CAACE,gBAAgB,CAAC,CAAC,EACvG;OACC;;KAGD,KAAK,MAAMC,QAAQ,IAAIH,WAAW,CAACE,gBAAgB,CAAC,EACpD;OACC,IACC,CAACF,WAAW,CAACE,gBAAgB,CAAC,CAACR,cAAc,CAACS,QAAQ,CAAC,IACpD,CAACvC,cAAI,CAACwC,aAAa,CAACJ,WAAW,CAACE,gBAAgB,CAAC,CAACC,QAAQ,CAAC,CAAC,EAEhE;SACC;;OAGD,MAAM,CAACE,YAAY,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;OACpD,IAAI7B,aAA6B;OACjC,IACA;SACCA,aAAa,GAAG,IAAIpB,iCAAc,CAACkD,cAAI,CAACC,SAAS,CAACJ,YAAY,CAAC,EAAEG,cAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;QAC1F,CACD,OAAOpB,CAAC,EACR;SACC;;OAGD,MAAMwB,kBAAkB,GAAGC,qBAAqB,CAACpB,IAAI,EAAEb,aAAa,EAAEc,UAAU,CAAC;OAEjF,KAAK,MAAMoB,gBAAgB,IAAIZ,WAAW,CAACE,gBAAgB,CAAC,CAACC,QAAQ,CAAC,EACtE;SACC,IACA;WACCV,SAAS,CAACE,IAAI,CAAC,IAAIlC,QAAQ,CAC1B8B,IAAI,EACJb,aAAa,EACb;aACCX,EAAE,EAAEyC,cAAI,CAACC,SAAS,CAACG,gBAAgB,CAACC,EAAE,CAAC;aACvC3C,MAAM,EAAEmB,MAAM,CAACa,gBAAgB,CAAC;aAChC/B,SAAS,EAAE2C,iBAAiB,CAACF,gBAAgB,CAACG,UAAU,CAAC;aACzD3C,KAAK,EAAE0C,iBAAiB,CAACF,gBAAgB,CAACI,KAAK,CAAC;aAChDjC,cAAc,EAAE+B,iBAAiB,CAACF,gBAAgB,CAACK,eAAe;YAClE,EACD;aACC1C,KAAK,EAAEmC;YACP,CACD,CAAC;UACF,CACD,OAAOxB,CAAC,EACR;;;;GAOH,OAAOO,SAAS;CACjB;CAEA,SAASkB,qBAAqB,CAAClC,UAA0B,EAAEC,aAA6B,EAAEc,UAAmB,EAC7G;GAAA;GACC,IAAIf,UAAU,CAACU,SAAS,CAACT,aAAa,CAAC,EACvC;KAAA;KACC,oCAAOc,UAAU,oBAAVA,UAAU,CAAE0B,KAAK,gCAAI1B,UAAU,CAAC2B,cAAc,mBAAI,EAAE;;GAG5D,MAAMC,aAAa,GAAI,GAAEC,EAAE,CAACC,aAAa,CAACC,WAAW,CAAC7C,aAAa,CAAC2B,YAAY,CAAE,OAAM;GACxF,IAAIzC,cAAI,CAACwC,aAAa,CAACZ,UAAU,6CAAVA,UAAU,CAAEM,WAAW,qBAAvB,sBAA0BsB,aAAa,CAAC,CAAC,EAChE;KACC,MAAMI,MAAM,GAAGhC,UAAU,CAACM,WAAW,CAACsB,aAAa,CAAC,CAACK,IAAI,CAACC,UAAU,IAAI;OACvE,OAAOlB,cAAI,CAACC,SAAS,CAACiB,UAAU,CAAC3D,EAAE,CAAC,KAAKW,aAAa,CAAC4B,QAAQ;MAC/D,CAAC;KAEF,IAAI1C,cAAI,CAAC+D,QAAQ,CAACH,MAAM,oBAANA,MAAM,CAAEjD,KAAK,CAAC,EAChC;OACC,OAAOiD,MAAM,CAACjD,KAAK;;;GAIrB,OAAO,EAAE;CACV;CAEA,SAASsB,8BAA8B,CAACN,IAAoB,EAAEmC,UAAkB,EAChF;GACC,MAAMjC,SAAS,GAAG,EAAE;GAEpB,KAAK,MAAMmC,iBAAiB,IAAI/C,MAAM,CAACgD,MAAM,CAACH,UAAU,CAAC,EACzD;KACC,IAAI,CAAC9D,cAAI,CAACwC,aAAa,CAACwB,iBAAiB,CAAC,EAC1C;OACC;;KAGD,KAAK,MAAME,YAAY,IAAIF,iBAAiB,EAC5C;OAAA;OACC,IAAI,CAAChE,cAAI,CAACC,aAAa,CAACiE,YAAY,CAAC,EACrC;SACC;;OAGD,IAAIpD,aAA6B;OACjC,IACA;SACCA,aAAa,GAAG,IAAIpB,iCAAc,CAAC+D,EAAE,CAACC,aAAa,CAACS,SAAS,CAACD,YAAY,CAACE,QAAQ,CAAC,EAAEF,YAAY,CAAC/D,EAAE,CAAC;QACtG,CACD,OAAOmB,CAAC,EACR;SACC;;OAGD,MAAMc,WAAW,4BAAG8B,YAAY,CAACG,YAAY,qBAAzB,sBAA2BC,WAAW;OAC1D,IAAI,CAACtE,cAAI,CAACwC,aAAa,CAACJ,WAAW,CAAC,EACpC;SACC;;OAGD,KAAK,MAAMY,gBAAgB,IAAIZ,WAAW,EAC1C;SACC,IACA;WACCP,SAAS,CAACE,IAAI,CAAC,IAAIlC,QAAQ,CAC1B8B,IAAI,EACJb,aAAa,EACb;aACCX,EAAE,EAAEyC,cAAI,CAACC,SAAS,CAACG,gBAAgB,CAACC,EAAE,CAAC;aACvC3C,MAAM,EAAE4C,iBAAiB,CAACF,gBAAgB,CAACuB,OAAO,CAAC;aACnDhE,SAAS,EAAE2C,iBAAiB,CAACF,gBAAgB,CAACG,UAAU,CAAC;aACzD3C,KAAK,EAAE0C,iBAAiB,CAACF,gBAAgB,CAACI,KAAK,CAAC;aAChDjC,cAAc,EAAE+B,iBAAiB,CAACF,gBAAgB,CAACK,eAAe;YAClE,EACD;aACC1C,KAAK,EAAEuC,iBAAiB,CAACgB,YAAY,CAACvD,KAAK;YAC3C,CACD,CAAC;UACF,CACD,OAAOW,CAAC,EACR;;;;GAMH,OAAOO,SAAS;CACjB;CAEA,SAASqB,iBAAiB,CAAC1C,KAAc,EACzC;GACC,OAAOR,cAAI,CAACE,KAAK,CAACM,KAAK,CAAC,GAAGgE,SAAS,GAAG/C,MAAM,CAACjB,KAAK,CAAC;CACrD;CAEA,SAAS2B,MAAM,CAACN,SAAqB,EACrC;GACC,OAAOA,SAAS,CAAC4C,MAAM,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;KAC5C,MAAMC,YAAY,GAAG/C,SAAS,CAACgD,SAAS,CAACC,eAAe,IAAIJ,QAAQ,CAACnD,SAAS,CAACuD,eAAe,CAAC,CAAC;KAEhG,OAAOF,YAAY,KAAKD,KAAK;IAC7B,CAAC;CACH;;CC/KA,MAAMI,eAAe,GAAG,IAAIC,GAAG,CAAC,CAC/B,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACnB,CAAC;;CAEF;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CATA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAUA,CAAO,MAAMC,kBAAkB,CAC/B;GAUC,WAAWC,QAAQ,GACnB;KACC,IAAKC,MAAM,CAACC,GAAG,KAAKD,MAAM,IAAKE,oBAAU,CAACC,QAAQ,CAAC,6CAA6C,CAAC,EACjG;OACC,OAAOH,MAAM,CAACC,GAAG,CAAC3B,EAAE,CAAC8B,GAAG,CAACC,aAAa,CAACP,kBAAkB;;KAG1D,IAAI,yCAACA,kBAAkB,uBAAU,EACjC;OACC,wCAAAA,kBAAkB,0BAAa,IAAIA,kBAAkB,EAAE;;KAGxD,+CAAOA,kBAAkB;;;;CAI3B;CACA;GACCrE,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OAxB6C;;KAAE;OAAA;OAAA,OAES;;KAuBvD,4CAAIqE,kBAAkB,yBACtB;OACC,MAAM,IAAItF,KAAK,CAAC,+CAA+C,CAAC;;KAGjE,4CAAI;;;CAuFN;CACA;GACC,OAAO8F,aAAa,CAAChD,YAAoB,EAAEC,QAAgB,EAAEgD,mBAA2B,EACxF;KACC,IAAI/D,IAAoB;KACxB,IACA;OACCA,IAAI,GAAG,IAAIjC,iCAAc,CAAC+C,YAAY,EAAEC,QAAQ,CAAC;MACjD,CACD,OAAOpB,CAAC,EACR;OACC;;KAGD,MAAMqE,QAAQ,GAAGV,kBAAkB,CAACC,QAAQ;KAC5C,wCAAAS,QAAQ,4CAAqBhE,IAAI;KAEjC,MAAMiE,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,mBAAmB,CAAC;KACrD,IAAI1F,cAAI,CAACwC,aAAa,CAACoD,aAAa,CAAC,EACrC;OACC,MAAM/D,SAAS,GAAG,EAAE;OACpB,KAAK,MAAMkE,kBAAkB,IAAIH,aAAa,EAC9C;SACC,MAAMlB,QAAQ,GAAG7E,QAAQ,CAACuB,QAAQ,CAAC2E,kBAAkB,CAAC;SACtD,IAAI,CAAC/F,cAAI,CAACE,KAAK,CAACwE,QAAQ,CAAC,EACzB;WACC7C,SAAS,CAACE,IAAI,CAAC2C,QAAQ,CAAC;;;OAI1B,IAAI1E,cAAI,CAACwC,aAAa,CAACX,SAAS,CAAC,EACjC;SACC,wCAAA8D,QAAQ,gCAAehE,IAAI,EAAEE,SAAS;;;;GA6BzCmE,YAAY,CAACvD,YAAoB,EAAEC,QAAgB,EACnD;KACC,IACA;OACC,OAAO,IAAI,CAACuD,wBAAwB,CAAC,IAAIvG,iCAAc,CAAC+C,YAAY,EAAEC,QAAQ,CAAC,CAAC;MAChF,CACD,OAAOpB,CAAC,EACR;OACC,OAAO,EAAE;;;GAIX2E,wBAAwB,CAACtE,IAAoB,EAC7C;KAAA;KACCnC,sBAAsB,CAACmC,IAAI,CAAC;KAE5B,gCAAO,4CAAI,sBAAUA,IAAI,CAACuE,IAAI,CAAC,oCAAI,EAAE;;CAEvC;CAAC,kBAlKA;GAAA;GACCC,6BAAY,CAACC,cAAc,CAAC,IAAI,EAAE,yCAAyC,CAAC;GAE5E,4CAAI,sEAAoCC,KAAgB,IAAK;KAC5D,IAAI,EAAEA,KAAK,YAAYC,0BAAS,CAAC,EACjC;OACCC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEH,KAAK,CAAC;OAC7C;;KAGD,IAAI,CAACrG,cAAI,CAACwC,aAAa,CAAC6D,KAAK,CAACI,OAAO,EAAE,CAAC,IAAI,CAACzG,cAAI,CAACC,aAAa,CAACoG,KAAK,CAACI,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EACnF;OACC;;KAGD,4CAAI,0CAAoBJ,KAAK,CAACK,OAAO,EAAE,EAAEL,KAAK,CAACI,OAAO,EAAE,CAAC,CAAC,CAAC;IAC3D;GACD,4CAAI,sEAAmC,4CAAI,oEAAiCE,IAAI,CAAC,IAAI,CAAC;GAEtF,KAAK,MAAMC,SAAS,IAAI7B,eAAe,EACvC;KACCoB,6BAAY,CAACU,SAAS,CAACD,SAAS,0CAAE,IAAI,oEAAiC;;GAExE,qBAAInD,EAAE,CAACqD,SAAS,sCAAZ,cAAc5B,QAAQ,aAAtB,sBAAwB6B,MAAM,EAAE,EACpC;;KAECZ,6BAAY,CAACU,SAAS,CAAC,4BAA4B,EAAE,4CAAI,sBAAUF,IAAI,CAAC,IAAI,CAAC,CAAC;;CAEhF;CAAC,qBAGD;GACC,KAAK,MAAMC,SAAS,IAAI7B,eAAe,EACvC;KACCoB,6BAAY,CAACa,WAAW,CAACJ,SAAS,0CAAE,IAAI,oEAAiC;;GAE1E,wCAAA3B,kBAAkB,0BAAa,IAAI;CACpC;CAAC,6BAEkBgC,SAAiB,EAAE;GAACxE,YAAY;GAAEC,QAAQ;GAAEd;CAAU,CAAC,EAC1E;GAAA;GACC,IAAI,4BAAC,4CAAI,kCAAgBa,YAAY,CAAC,aAAjC,uBAAmCyE,GAAG,CAACxE,QAAQ,CAAC,GACrD;KACC;;GAGD,MAAMf,IAAI,GAAG,IAAIjC,iCAAc,CAAC+C,YAAY,EAAEC,QAAQ,CAAC;GAEvD,IACCuE,SAAS,CAACE,WAAW,EAAE,KAAK,mBAAmB,CAACA,WAAW,EAAE,IAC1DF,SAAS,CAACE,WAAW,EAAE,KAAK,mBAAmB,CAACA,WAAW,EAAE,EAEjE;KAAA;KACC,MAAMC,YAAY,6BAAG,4CAAI,sBAAUzF,IAAI,CAACuE,IAAI,CAAC,qCAAI,EAAE;KACnD,MAAMmB,YAAY,GAAG3F,gBAAgB,CAACC,IAAI,EAAEC,UAAU,CAAC;KAEvD,4CAAI,sBAAUD,IAAI,CAACuE,IAAI,CAAC,GAAGmB,YAAY;KAEvC,MAAMC,KAAK,GAAGD,YAAY,CAAC5C,MAAM,CAAC8C,WAAW,IAAI;OAChD,OAAOvH,cAAI,CAACE,KAAK,CAACkH,YAAY,CAACvD,IAAI,CAAC2D,WAAW,IAAIA,WAAW,CAACjG,SAAS,CAACgG,WAAW,CAAC,CAAC,CAAC;MACvF,CAAC;KACF,MAAME,OAAO,GAAGL,YAAY,CAAC3C,MAAM,CAAC+C,WAAW,IAAI;OAClD,OAAOxH,cAAI,CAACE,KAAK,CAACmH,YAAY,CAACxD,IAAI,CAAC0D,WAAW,IAAIA,WAAW,CAAChG,SAAS,CAACiG,WAAW,CAAC,CAAC,CAAC;MACvF,CAAC;KAEF,IAAIF,KAAK,CAACI,MAAM,GAAG,CAAC,IAAID,OAAO,CAACC,MAAM,GAAG,CAAC,EAC1C;OACC,IAAI,CAACC,IAAI,CAAC,oBAAoB,EAAE;SAAChG,IAAI;SAAEiG,QAAQ,EAAER,YAAY;SAAES,OAAO,EAAER,YAAY;SAAEC,KAAK;SAAEG;QAAQ,CAAC;;IAEvG,MACI,IAAIR,SAAS,CAACE,WAAW,EAAE,KAAK,mBAAmB,CAACA,WAAW,EAAE,EACtE;KACC,OAAO,4CAAI,sBAAUxF,IAAI,CAACuE,IAAI,CAAC;KAC/B,4CAAI,kCAAgBvE,IAAI,CAACc,YAAY,CAAC,CAACqF,MAAM,CAACnG,IAAI,CAACe,QAAQ,CAAC;KAC5D,IAAI,CAACiF,IAAI,CAAC,eAAe,EAAE;OAAChG;MAAK,CAAC;IAClC,MAED;KACC4E,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAES,SAAS,CAAC;;CAEhD;CAAC,wBAwCatF,IAAoB,EAAEE,SAAqB,EACzD;GACCrC,sBAAsB,CAACmC,IAAI,CAAC;GAE5B,4CAAI,sBAAUA,IAAI,CAACuE,IAAI,CAAC,GAAG,EAAE;GAC7B,KAAK,MAAMxB,QAAQ,IAAI7C,SAAS,EAChC;KACCjC,gBAAgB,CAAC8E,QAAQ,CAAC;KAE1B,4CAAI,sBAAU/C,IAAI,CAACuE,IAAI,CAAC,CAACnE,IAAI,CAAC2C,QAAQ,CAAC;;GAGxC,4CAAI,4CAAqB/C,IAAI;CAC9B;CAAC,8BAEmBA,IAAoB,EACxC;GAAA;GACCnC,sBAAsB,CAACmC,IAAI,CAAC;GAE5B,MAAMoG,uBAAuB,6BAAG,4CAAI,kCAAgBpG,IAAI,CAACc,YAAY,CAAC,qCAAI,IAAIuC,GAAG,EAAE;GACnF+C,uBAAuB,CAACC,GAAG,CAACrG,IAAI,CAACe,QAAQ,CAAC;GAC1C,4CAAI,kCAAgBf,IAAI,CAACc,YAAY,CAAC,GAAGsF,uBAAuB;CACjE;CAAC,sBAtLW9C,kBAAkB;GAAA;GAAA;CAAA;;;;;;;;;"}