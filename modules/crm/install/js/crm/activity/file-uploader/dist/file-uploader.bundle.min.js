this.BX=this.BX||{};this.BX.Crm=this.BX.Crm||{};(function(e,r,t){"use strict";let s=e=>e,i;const l=1024*1024*50;var a=babelHelpers.classPrivateFieldLooseKey("container");var o=babelHelpers.classPrivateFieldLooseKey("widget");var n=babelHelpers.classPrivateFieldLooseKey("assertValidParams");class d{constructor(e){Object.defineProperty(this,n,{value:p});Object.defineProperty(this,a,{writable:true,value:null});Object.defineProperty(this,o,{writable:true,value:null});babelHelpers.classPrivateFieldLooseBase(this,n)[n](e);babelHelpers.classPrivateFieldLooseBase(this,o)[o]=new t.TileWidget({controller:"crm.fileUploader.todoActivityUploaderController",controllerOptions:{entityId:e.ownerId,entityTypeId:e.ownerTypeId,activityId:e.activityId},files:r.Type.isArrayFilled(e.files)?e.files:[],events:r.Type.isPlainObject(e.events)?e.events:{},multiple:true,autoUpload:true,maxFileSize:l});if(r.Type.isDomNode(e.baseContainer)){babelHelpers.classPrivateFieldLooseBase(this,a)[a]=r.Tag.render(i||(i=s`<div class="crm-activity__todo-editor-file-uploader-wrapper"></div>`));const t=e.baseContainer;r.Dom.insertAfter(babelHelpers.classPrivateFieldLooseBase(this,a)[a],t);babelHelpers.classPrivateFieldLooseBase(this,o)[o].renderTo(babelHelpers.classPrivateFieldLooseBase(this,a)[a])}}getWidget(){return babelHelpers.classPrivateFieldLooseBase(this,o)[o]}getContainer(){return babelHelpers.classPrivateFieldLooseBase(this,a)[a]}renderTo(e){if(!r.Type.isDomNode(e)){throw new Error("FileUploader container must be a DOM Node")}babelHelpers.classPrivateFieldLooseBase(this,a)[a]=e;babelHelpers.classPrivateFieldLooseBase(this,o)[o].renderTo(e)}getFiles(){return babelHelpers.classPrivateFieldLooseBase(this,o)[o].getUploader().getFiles()}getServerFileIds(){const e=babelHelpers.classPrivateFieldLooseBase(this,o)[o].getUploader().getFiles();if(e.length===0){return[]}const r=e.filter((e=>e.isComplete()));if(r.length===0){return[]}return r.map((e=>e.getServerId()))}}function p(e){if(!r.Type.isPlainObject(e)){throw new Error('BX.Crm.Activity.FileUploader: The "params" argument must be object.')}if(!r.Type.isNumber(e.ownerId)){throw new Error('BX.Crm.Activity.FileUploader: The "ownerId" argument must be set.')}if(!r.Type.isNumber(e.ownerTypeId)){throw new Error('BX.Crm.Activity.FileUploader: The "ownerTypeId" argument must be set.')}}e.FileUploader=d})(this.BX.Crm.Activity=this.BX.Crm.Activity||{},BX,BX.UI.Uploader);
//# sourceMappingURL=file-uploader.bundle.map.js