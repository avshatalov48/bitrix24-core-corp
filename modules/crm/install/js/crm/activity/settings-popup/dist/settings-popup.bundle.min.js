this.BX=this.BX||{};this.BX.Crm=this.BX.Crm||{};(function(t,e,i,s,n,a,o,r,l,c,d){"use strict";const u={props:{id:{type:String,required:true},toggleTitle:{type:String,default:""},toggleEnabled:{type:Boolean,default:true},toggleVisible:{type:Boolean,default:true}},watch:{enabled(){this.$emit("onToggle",{id:this.id,isActive:this.enabled})}},data(){return{enabled:this.toggleEnabled}},template:`\n\t\t<section>\n\t\t\t<div class="ui-form-row" v-if="toggleVisible">\n\t\t\t\t<label for class="ui-ctl ui-ctl-checkbox" @click="enabled = !enabled">\n\t\t\t\t\t<input type="checkbox" class="ui-ctl-element" v-model="enabled">\n\t\t\t\t\t<div class="ui-ctl-label-text">{{ toggleTitle }}</div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class="ui-form-row" v-else>\n\t\t\t\t<label>\n\t\t\t\t\t<div class="ui-ctl-label-text">{{ toggleTitle }}</div>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<slot v-if="enabled"></slot>\n\t\t</section>\n\t`};const h={props:{id:String,active:Boolean,title:String},methods:{onClick:function(){this.$emit("onClick",this.id)}},template:`\n\t\t<button @click="onClick" :class="['ui-btn ui-btn-secondary ui-btn-md ui-btn-no-caps', { active }]">\n\t\t\t{{this.title}}\n\t\t</button>\n\t`};const m={today:{id:"today",days:0},tomorrow:{id:"tomorrow",days:1},after2days:{id:"after2days",days:2},after3days:{id:"after3days",days:3}};const p={minute:{id:"minute",seconds:60},hour:{id:"hour",seconds:60*60},day:{id:"day",seconds:60*60*24}};const v={components:{RecallButton:h},props:{params:{type:Object,default:{}}},data(){const t=this.params.from||o.Factory.getUserNow().getTime()/1e3;const e=Math.round(t/60)*60;let i=1;let s=p.hour.id;if(this.params.duration){s=this.getPeriodIdBySeconds(this.params.duration);i=this.params.duration/p[s].seconds}const n=e+i*p[s].seconds;return{id:this.getId(),from:e,to:n,duration:i,durationPeriodId:s,timeFromClockInstance:null,timeToClockInstance:null,plannerInstance:null}},computed:{DurationPeriods:()=>p,Recall:()=>m,fromDateFormatted:{get(){return n.Date.format(BX.Crm.DateTime.Dictionary.Format.SHORT_DATE_FORMAT,this.from)},set(t){const e=n.Date.parse(t);const i=this.createDateInstance(this.from);e.setHours(i.getHours(),i.getMinutes(),0,0);this.from=e.getTime()/1e3;this.to=this.from+this.duration}},fromTimeFormatted:{get(){return this.getFormattedTime("from")},set(t){const e=this.getDateInstanceWithTime(this.from,t);this.from=e.getTime()/1e3;this.timeFromClockInstance.closeWnd()}},toDateFormatted:{get(){const t=this.from+this.duration*p[this.durationPeriodId].seconds;return n.Date.format(BX.Crm.DateTime.Dictionary.Format.SHORT_DATE_FORMAT,t)},set(t){const e=n.Date.parse(t);const i=this.from+this.duration*p[this.durationPeriodId].seconds;const s=o.Factory.createFromTimestampInUserTimezone(i);e.setHours(s.getHours(),s.getMinutes(),0,0);this.calcDuration(e)}},toTimeFormatted:{get(){const t=this.from+this.duration*p[this.durationPeriodId].seconds;return n.Date.format(BX.Crm.DateTime.Dictionary.Format.SHORT_TIME_FORMAT,t)},set(t){const e=this.getDateInstanceWithTime(this.to,t);this.calcDuration(e);this.timeToClockInstance.closeWnd()}},activeRecallId(){const t=(t,e)=>t.getTime()===e.getTime();const e=this.createDateInstance(this.from,true);const i=this.createDateInstance(null,true);if(t(e,i)){return m.today.id}const s=t=>t.setDate(t.getDate()+1);s(i);if(t(e,i)){return m.tomorrow.id}s(i);if(t(e,i)){return m.after2days.id}s(i);if(t(e,i)){return m.after3days.id}return null}},mounted(){this.plannerInstance=new a.Planner({wrap:this.$refs.plannerContainer,compactMode:true,minWidth:770,minHeight:104,height:104,width:770});this.plannerInstance.subscribe("onDateChange",this.handlePlannerSelectorChanges.bind(this));this.plannerInstance.show();this.getAccessibilityForUsers();this.onDataUpdate()},unmounted(){this.emitSettingsChange(false)},watch:{duration(){this.onDataUpdate()},durationPeriodId(){this.onDataUpdate()},from(){this.onDataUpdate()},to(){this.onDataUpdate()}},methods:{getId(){return"calendar"},getDateInstanceWithTime(t,e){const i=e.split(":");const s=o.Factory.createFromTimestampInUserTimezone(t);let n=Number(i[0]);let a=i[1];const r=a.includes("am")||a.includes("pm");if(r){if(a.includes("pm")&&n!==12){n+=12}a=parseInt(a,10)}s.setHours(n,a,0,0);return s},calcDuration(t){const e=t.getTime()/1e3-this.from;if(e%p[this.durationPeriodId].seconds===0){this.duration=e/p[this.durationPeriodId].seconds}else{this.duration=e/p.minute.seconds;this.durationPeriodId=p.minute.id}},getPeriodIdBySeconds(t){if(t%p.day.seconds===0){return p.day.id}if(t%p.hour.seconds===0){return p.hour.id}return p.minute.id},handlePlannerSelectorChanges({data:{dateFrom:t,dateTo:e}}){this.from=t.getTime()/1e3;this.calcDuration(e)},onDataUpdate(){this.updatePlanner();this.emitSettingsChange()},updatePlanner(){const t=this.createDateInstance(this.from);const e=this.getDurationSeconds();const i=this.createDateInstance(this.from+e);this.plannerInstance.updateSelector(t,i)},emitSettingsChange(t=true){const e=this.exportParams(t);if(t&&this.validateParams(e)||!t){this.$Bitrix.eventEmitter.emit(r.Events.EVENT_SETTINGS_CHANGE,e)}else{this.$Bitrix.eventEmitter.emit(r.Events.EVENT_SETTINGS_VALIDATION,{isValid:false})}},getDurationSeconds(){return this.duration*p[this.durationPeriodId].seconds},getFormattedDate(t){return this.getFormattedValue(t,BX.Crm.DateTime.Dictionary.Format.SHORT_DATE_FORMAT)},getFormattedTime(t){return this.getFormattedValue(t,BX.Crm.DateTime.Dictionary.Format.SHORT_TIME_FORMAT)},getFormattedValue(t,e){const i=t==="from"?this.from:this.to;return n.Date.format(e,i)},getSecondsFromStartOfDay(t){const e=this.createDateInstance(t,true);return t-e.getTime()/1e3},getDurationPeriodTitle(t){const e=`CRM_SETTINGS_POPUP_CALENDAR_DURATION_${t.toUpperCase()}S`;return this.$Bitrix.Loc.getMessage(e)},onDateFromClick(){BX.calendar({node:this.$refs.dateFrom,field:this.$refs.dateFrom,bTime:false})},onDateFromChange(t){this.fromDateFormatted=t.target.value},onDateToChange(t){this.toDateFormatted=t.target.value},onDateToClick(){BX.calendar({node:this.$refs.dateTo,field:this.$refs.dateTo,bTime:false})},onTimeFromClick(){this.showClockSelector("timeFromClockInstance",this.from,this.$refs.timeFrom,"fromTimeFormatted")},onTimeToClick(){this.showClockSelector("timeToClockInstance",this.to,this.$refs.timeTo,"toTimeFormatted")},showClockSelector(t,e,i,s){if(!this[t]){this[t]=new BX.CClockSelector({start_time:this.getSecondsFromStartOfDay(e),node:i,callback:t=>{this[s]=t}})}this[t].Show()},onDurationKeyUp(){this.duration=this.duration.replace(/\D/g,"")},onRecallClick(t){const e=this.createDateInstance(this.from);const i=this.createDateInstance(null,true);i.setHours(e.getHours(),e.getMinutes());this.from=i.setDate(i.getDate()+m[t].days)/1e3;const s=this.duration*p[this.durationPeriodId].seconds;this.to=this.from+s},createDateInstance(t=null,e=false){if(!t){t=Date.now()/1e3}const i=new Date(t*1e3);if(e){i.setHours(0,0,0,0)}return i},isActiveRecall(t){return t===this.activeRecallId},exportParams(t=true){const e=this.from;const i=this.duration*p[this.durationPeriodId].seconds;const s=this.from+i;return{id:this.id,from:e,duration:i,to:s,active:t,fromText:n.DateTimeFormat.format(c.DatetimeConverter.getSiteDateTimeFormat(),e),toText:n.DateTimeFormat.format(c.DatetimeConverter.getSiteDateTimeFormat(),s)}},validateParams(t){if(t.duration<0){this.$refs.durationRegion.classList.add("ui-ctl-danger");return false}this.$refs.durationRegion.classList.remove("ui-ctl-danger");return true},getAccessibilityForUsers(){const t=12*24*3600;l.ajax.runAction("crm.activity.settings.calendar.getAccessibilityForUsers",{data:{from:this.from-t,to:this.from+t}}).then((({data:t})=>this.plannerInstance.update(t.entries,t.accessibility)))},updateSettings(t){if(!t||!t.deadline){return}this.from=t.deadline.getTime()/1e3}},template:`\n\t\t<div class="ui-form">\n\t\t\t<div class="ui-form-row-inline">\n\t\t\t\t<div class="ui-form-row">\n\t\t\t\t\t<div class="ui-form-label">\n                \t\t<div class="ui-ctl-label-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_FROM_DATETIME') }}\n\t\t\t\t\t\t</div>\n            \t\t</div>\n            \t\t<div class="ui-form-content">\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-date">\n\t\t\t\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-calendar"></div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref="dateFrom"\n\t\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\t@click="onDateFromClick"\n\t\t\t\t\t\t\t\t@change="onDateFromChange"\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\tv-model="fromDateFormatted"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-time">\n    \t\t\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-clock"></div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref="timeFrom"\n\t\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\t@click="onTimeFromClick"\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\tv-model="fromTimeFormatted"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-form-row">\n\t\t\t\t\t<div class="ui-form-label">\n                \t\t<div class="ui-ctl-label-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_DURATION') }}\n\t\t\t\t\t\t</div>\n            \t\t</div>\n            \t\t<div class="ui-form-content">\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-date" ref="durationRegion">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref="durationValue"\n\t\t\t\t\t\t\t\ttype="text" \n\t\t\t\t\t\t\t\tv-model="duration"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\t@keyup="onDurationKeyUp"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-dropdown">\n    \t\t\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-angle"></div>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tref="durationPeriod"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\tv-model="durationPeriodId"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\tv-for="duration in DurationPeriods"\n\t\t\t\t\t\t\t\t\tkey="id"\n\t\t\t\t\t\t\t\t\t:selected="duration.id === durationPeriodId"\n\t\t\t\t\t\t\t\t\t:value="duration.id"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{ getDurationPeriodTitle(duration.id) }}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-form-row">\n\t\t\t\t\t<div class="ui-form-label">\n                \t\t<div class="ui-ctl-label-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_TO_DATETIME') }}\n\t\t\t\t\t\t</div>\n            \t\t</div>\n            \t\t<div class="ui-form-content">\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-date">\n\t\t\t\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-calendar"></div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref="dateTo"\n\t\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\t@click="onDateToClick"\n\t\t\t\t\t\t\t\t@change="onDateToChange"\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\tv-model="toDateFormatted"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-time">\n    \t\t\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-clock"></div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref="timeTo"\n\t\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\t@click="onTimeToClick"\n\t\t\t\t\t\t\t\treadonly\n\t\t\t\t\t\t\t\tv-model="toTimeFormatted"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="ui-form-row-inline crm-activity__settings_popup__calendar__recall-container">\n\t\t\t\t<RecallButton\n\t\t\t\t\t:id=Recall.today.id\n\t\t\t\t\t:active=isActiveRecall(Recall.today.id)\n\t\t\t\t\t@onClick="this.onRecallClick"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_RECALL_TODAY')"\n\t\t\t\t/>\n\t\t\t\t<RecallButton\n\t\t\t\t\t:id=Recall.tomorrow.id\n\t\t\t\t\t:active=isActiveRecall(Recall.tomorrow.id)\n\t\t\t\t\t@onClick="this.onRecallClick"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_RECALL_TOMORROW')"\n\t\t\t\t/>\n\t\t\t\t<RecallButton\n\t\t\t\t\t:id=Recall.after2days.id\n\t\t\t\t\t:active=isActiveRecall(Recall.after2days.id)\n\t\t\t\t\t@onClick="this.onRecallClick"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_RECALL_AFTER_2_DAYS')"\n\t\t\t\t/>\n\t\t\t\t<RecallButton\n\t\t\t\t\t:id=Recall.after3days.id\n\t\t\t\t\t:active=isActiveRecall(Recall.after3days.id)\n\t\t\t\t\t@onClick="this.onRecallClick"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('CRM_SETTINGS_POPUP_CALENDAR_RECALL_AFTER_3_DAYS')"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div ref="plannerContainer" class="crm-activity__settings_popup__calendar__planner-container"></div>\n\t\t</div>\n\t`};const g={components:{WrapperSection:u,SettingsPopupCalendar:v},props:{onSettingsChangeCallback:{type:Function,required:true},onSettingsValidationCallback:{type:Function},sections:{type:Array,required:true}},data(){return{settings:new Map}},computed:{activeSettingsIds(){const t={};this.sections.forEach((e=>{t[e.id]=Boolean(e.active)}));return t}},methods:{getSectionTitle(t){t=t.toUpperCase();const e="CRM_SETTINGS_POPUP_SECTION_SWITCH";const i=`${e}_${t}`;return this.$Bitrix.Loc.getMessage(i)||this.$Bitrix.Loc.getMessage(e)},getSectionToggle(t){if(l.Type.isBoolean(t)){return t}return true},prepareSettings(){for(const t in this.activeSettingsIds){if(!this.activeSettingsIds[t]){continue}const e=this.sections.find((e=>e.id===t));if(!e){continue}const i={id:e.id,...e.params};this.settings.set(t,i)}},onSettingsChange({data:t}){if(t.id){if(t.active){this.settings.set(t.id,t)}else{this.settings.delete(t.id)}}if(this.onSettingsChangeCallback){this.onSettingsChangeCallback(this.exportParams())}},onSettingsValidation({data:t}){if(this.onSettingsChangeCallback){this.onSettingsValidationCallback(t)}},exportParams(){const t=Object.fromEntries(this.settings);let e={};for(const i in this.activeSettingsIds){if(this.activeSettingsIds[i]&&t[i]){e[i]=t[i]}}return e},onToggleSettingsSection({id:t,isActive:e}){if(this.activeSettingsIds.hasOwnProperty(t)){this.activeSettingsIds[t]=e}},updateSettings(t){this.sections.forEach((e=>{if(this.$refs["section-"+e.id]&&this.$refs["section-"+e.id][0]){this.$refs["section-"+e.id][0].updateSettings(t)}}))}},mounted(){this.prepareSettings();this.$Bitrix.eventEmitter.subscribe(r.Events.EVENT_SETTINGS_CHANGE,this.onSettingsChange);this.$Bitrix.eventEmitter.subscribe(r.Events.EVENT_SETTINGS_VALIDATION,this.onSettingsValidation)},beforeUnmount(){this.$Bitrix.eventEmitter.unsubscribe(r.Events.EVENT_SETTINGS_CHANGE,this.onSettingsChange);this.$Bitrix.eventEmitter.unsubscribe(r.Events.EVENT_SETTINGS_VALIDATION,this.onSettingsValidation)},template:`\n\t\t<div class="crm-activity__settings-popup_body">\n\t\t\t<WrapperSection\n\t\t\t\tv-for="section in sections"\n\t\t\t\t:id="section.id"\n\t\t\t\t:toggle-title="getSectionTitle(section.id)"\n\t\t\t\t:toggle-enabled="activeSettingsIds[section.id]"\n\t\t\t\t:toggle-visible="getSectionToggle(section.showToggleSelector)"\n\t\t\t\t@onToggle="onToggleSettingsSection"\n\t\t\t>\n\t\t\t\t<component \n\t\t\t\t\tv-bind:is="section.component"\n\t\t\t\t\t:params="section.params || {}"\n\t\t\t\t\t:ref="'section-' + section.id"\n\t\t\t\t></component>\n\t\t\t</WrapperSection>\n\t\t</div>\n\t`};let b=t=>t,f;const T="save";const P="cancel";const y={EVENT_SETTINGS_CHANGE:"crm:settings-popup:settings-change",EVENT_SETTINGS_VALIDATION:"crm:settings-popup:settings-validation"};var S=babelHelpers.classPrivateFieldLooseKey("onSettingsChange");var C=babelHelpers.classPrivateFieldLooseKey("onSave");var F=babelHelpers.classPrivateFieldLooseKey("settingsSections");var _=babelHelpers.classPrivateFieldLooseKey("fetchSettingsPath");var D=babelHelpers.classPrivateFieldLooseKey("ownerTypeId");var I=babelHelpers.classPrivateFieldLooseKey("ownerId");var B=babelHelpers.classPrivateFieldLooseKey("id");var L=babelHelpers.classPrivateFieldLooseKey("currentSettings");var E=babelHelpers.classPrivateFieldLooseKey("onSettingsValidation");var H=babelHelpers.classPrivateFieldLooseKey("getPopupContent");var R=babelHelpers.classPrivateFieldLooseKey("getPopupTitle");var A=babelHelpers.classPrivateFieldLooseKey("getPopupButtons");var O=babelHelpers.classPrivateFieldLooseKey("cancel");var k=babelHelpers.classPrivateFieldLooseKey("initLayoutComponent");var N=babelHelpers.classPrivateFieldLooseKey("adjustPopup");var w=babelHelpers.classPrivateFieldLooseKey("closePopup");class M{constructor(t){Object.defineProperty(this,w,{value:K});Object.defineProperty(this,N,{value:j});Object.defineProperty(this,k,{value:X});Object.defineProperty(this,O,{value:G});Object.defineProperty(this,A,{value:V});Object.defineProperty(this,R,{value:U});Object.defineProperty(this,H,{value:$});Object.defineProperty(this,E,{value:x});this.container=null;this.layoutApp=null;this.layoutComponent=null;this.popup=null;Object.defineProperty(this,S,{writable:true,value:null});Object.defineProperty(this,C,{writable:true,value:null});Object.defineProperty(this,F,{writable:true,value:[]});Object.defineProperty(this,_,{writable:true,value:null});Object.defineProperty(this,D,{writable:true,value:null});Object.defineProperty(this,I,{writable:true,value:null});Object.defineProperty(this,B,{writable:true,value:null});Object.defineProperty(this,L,{writable:true,value:null});babelHelpers.classPrivateFieldLooseBase(this,F)[F]=t.sections||[];babelHelpers.classPrivateFieldLooseBase(this,_)[_]=t.fetchSettingsPath||null;babelHelpers.classPrivateFieldLooseBase(this,D)[D]=t.ownerTypeId||null;babelHelpers.classPrivateFieldLooseBase(this,I)[I]=t.ownerId||null;babelHelpers.classPrivateFieldLooseBase(this,B)[B]=t.id||null;babelHelpers.classPrivateFieldLooseBase(this,S)[S]=t.onSettingsChange||null;babelHelpers.classPrivateFieldLooseBase(this,L)[L]=t.settings||null;if(t.onSave){babelHelpers.classPrivateFieldLooseBase(this,C)[C]=t.onSave}}show(){if(!this.popup||this.popup.isDestroyed()){const t=getComputedStyle(document.documentElement);const i=t.getPropertyValue("--ui-space-inset-sm");const n=parseFloat(i)||12;const a=t.getPropertyValue("--ui-color-base-solid")||"#000000";const o=l.Tag.render(f||(f=b`
				<div class="crm-activity__settings">
					<div class="crm-activity__settings_title">${0}</div>
					<div class="crm-activity__todo-settings_content"></div>
				</div>
			`),babelHelpers.classPrivateFieldLooseBase(this,R)[R]());this.popup=new e.Popup({closeIcon:true,closeByEsc:true,padding:n,overlay:{opacity:40,backgroundColor:a},content:o,buttons:babelHelpers.classPrivateFieldLooseBase(this,A)[A](),minWidth:850,width:850,className:"crm-activity__settings-popup"});this.popup.subscribeOnce("onFirstShow",(()=>{this.loadSettings().then((()=>{babelHelpers.classPrivateFieldLooseBase(this,H)[H]();this.popup.adjustPosition()}),(()=>{s.UI.Notification.Center.notify({content:l.Loc.getMessage("CRM_SETTINGS_POPUP_ERROR"),autoHideDelay:5e3})}))}));this.popup.subscribe("onClose",babelHelpers.classPrivateFieldLooseBase(this,k)[k].bind(this))}this.popup.show()}loadSettings(){if(!babelHelpers.classPrivateFieldLooseBase(this,_)[_]){return Promise.resolve()}const t={id:babelHelpers.classPrivateFieldLooseBase(this,B)[B],ownerTypeId:babelHelpers.classPrivateFieldLooseBase(this,D)[D],ownerId:babelHelpers.classPrivateFieldLooseBase(this,I)[I]};return new Promise(((e,i)=>{l.ajax.runAction(babelHelpers.classPrivateFieldLooseBase(this,_)[_],{data:t}).then((({data:t})=>{t.forEach((t=>{const e=babelHelpers.classPrivateFieldLooseBase(this,F)[F].find((e=>e.id===t.id));if(!e){return}e.active=t.active;e.params=t.settings}));e()})).catch(i)}))}save(){babelHelpers.classPrivateFieldLooseBase(this,L)[L]=this.getSettings();if(babelHelpers.classPrivateFieldLooseBase(this,S)[S]){babelHelpers.classPrivateFieldLooseBase(this,S)[S](this.getSettings())}babelHelpers.classPrivateFieldLooseBase(this,w)[w]();if(babelHelpers.classPrivateFieldLooseBase(this,C)[C]){babelHelpers.classPrivateFieldLooseBase(this,C)[C](babelHelpers.classPrivateFieldLooseBase(this,D)[D],babelHelpers.classPrivateFieldLooseBase(this,I)[I],babelHelpers.classPrivateFieldLooseBase(this,B)[B],this.getSettings())}}getSettings(){var t;return(t=this.layoutComponent)==null?void 0:t.exportParams()}syncSettings(t=null){if(t&&this.layoutComponent){this.layoutComponent.updateSettings(t)}}}function x(t){if(this.popup){this.popup.buttons[0].setDisabled(!t.isValid)}}function $(){this.container=this.popup.getContentContainer().getElementsByClassName("crm-activity__todo-settings_content").item(0);babelHelpers.classPrivateFieldLooseBase(this,k)[k]();return this.layoutComponent}function U(){return l.Loc.getMessage("CRM_SETTINGS_POPUP_TITLE")}function V(){return[new i.SaveButton({id:T,round:true,state:i.ButtonState.ACTIVE,events:{click:this.save.bind(this)}}),new i.CancelButton({id:P,round:true,events:{click:babelHelpers.classPrivateFieldLooseBase(this,O)[O].bind(this)},text:l.Loc.getMessage("CRM_SETTINGS_POPUP_CANCEL"),color:i.ButtonColor.LIGHT_BORDER})]}function G(){babelHelpers.classPrivateFieldLooseBase(this,w)[w]();babelHelpers.classPrivateFieldLooseBase(this,k)[k]()}function X(){if(this.layoutApp&&this.layoutComponent){this.layoutApp.unmount(this.container)}if(babelHelpers.classPrivateFieldLooseBase(this,L)[L]){babelHelpers.classPrivateFieldLooseBase(this,F)[F].forEach((t=>{if(babelHelpers.classPrivateFieldLooseBase(this,L)[L][t.id]){t.active=true;t.params=babelHelpers.classPrivateFieldLooseBase(this,L)[L][t.id]}}))}this.layoutApp=d.BitrixVue.createApp(g,{onSettingsChangeCallback:babelHelpers.classPrivateFieldLooseBase(this,N)[N].bind(this),onSettingsValidationCallback:babelHelpers.classPrivateFieldLooseBase(this,E)[E].bind(this),sections:babelHelpers.classPrivateFieldLooseBase(this,F)[F]});this.layoutComponent=this.layoutApp.mount(this.container)}function j(){this.popup.adjustPosition();this.popup.buttons[0].setDisabled(false)}function K(){var t;(t=this.popup)==null?void 0:t.close()}t.Calendar=v;t.SettingsPopup=M;t.Events=y})(this.BX.Crm.Activity=this.BX.Crm.Activity||{},BX.Main,BX.UI,BX,BX.Main,BX.Calendar,BX.Crm.DateTime,BX.Crm.Activity,BX,BX.Crm.Timeline,BX.Vue3);
//# sourceMappingURL=settings-popup.bundle.map.js