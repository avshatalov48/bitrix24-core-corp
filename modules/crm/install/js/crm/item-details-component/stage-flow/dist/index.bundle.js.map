{"version":3,"file":"index.bundle.js","sources":["../src/chart.js"],"sourcesContent":["import { Dom, Text } from 'main.core';\nimport { StageFlow } from 'ui.stageflow';\nimport { Button } from 'ui.buttons';\nimport { PermissionChecker as StagePermissionChecker } from 'crm.stage.permission-checker';\nimport { StageModel } from 'crm.stage-model';\n\nimport './css/chart.css';\n\nexport class Chart extends StageFlow.Chart\n{\n\tpermissionChecker: StagePermissionChecker;\n\tgetStageModelCallback: (id: number) => ?StageModel;\n\tisNewItem: boolean = false;\n\n\tconstructor(\n\t\tparams: Object, /** @see StageFlow.Chart */\n\t\tstages: Array,\n\t\tpermissionChecker: StagePermissionChecker,\n\t\tgettingStageModelCallback: (id: number) => StageModel,\n\t\tisNewItem: boolean = false,\n\t)\n\t{\n\t\tsuper(params, stages);\n\n\t\tthis.permissionChecker = permissionChecker;\n\t\tthis.getStageModelCallback = gettingStageModelCallback;\n\t\tthis.isNewItem = isNewItem;\n\n\t\tif (!this.isNewItem)\n\t\t{\n\t\t\tthis.#adjustDisableStages();\n\t\t}\n\t}\n\n\tonStageMouseHover(stage: Stage): void\n\t{\n\t\tthis.increaseStageWidthForNameVisibility(stage);\n\t\tif (stage.isDisabled())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onStageMouseHover(stage);\n\t}\n\n\tonStageClick(stage: Stage): void\n\t{\n\t\tif (!this.#isHasPermissionToMove(stage.getId()))\n\t\t{\n\t\t\tthis.permissionChecker.showMissPermissionError();\n\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onStageClick(stage);\n\t}\n\n\tonFinalStageClick(stage: Stage): void\n\t{\n\t\tif (!this.#isHasPermissionToMoveAtLeastOneTerminationStage())\n\t\t{\n\t\t\tthis.permissionChecker.showMissPermissionError();\n\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onFinalStageClick(stage);\n\t}\n\n\tsetCurrentStageId(stageId: number): Chart\n\t{\n\t\tsuper.setCurrentStageId(stageId);\n\n\t\tthis.#adjust();\n\n\t\treturn this;\n\t}\n\n\tgetSemanticPopupSuccessButton(): Button\n\t{\n\t\tconst successButton = super.getSemanticPopupSuccessButton();\n\t\tif (!this.#isHasPermissionToMoveSuccessStage())\n\t\t{\n\t\t\tthis.#prepareDisableSemanticButton(successButton);\n\t\t}\n\n\t\treturn successButton;\n\t}\n\n\tgetSemanticPopupFailureButton(): ?Button\n\t{\n\t\tconst failureButton = super.getSemanticPopupFailureButton();\n\t\tif (failureButton === null)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.#isHasPermissionToMoveAtLeastOneFailureStages())\n\t\t{\n\t\t\tthis.#prepareDisableSemanticButton(failureButton);\n\t\t}\n\n\t\treturn failureButton;\n\t}\n\n\tgetFinalStagePopupFailStage(stage: Stage): HTMLElement\n\t{\n\t\tconst finalStage = super.getFinalStagePopupFailStage(stage);\n\n\t\tif (!this.#isHasPermissionToMove(stage.getId()))\n\t\t{\n\t\t\tfinalStage.onclick = (event: MouseEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.permissionChecker.showMissPermissionError();\n\t\t\t};\n\n\t\t\tDom.addClass(finalStage, '--disabled');\n\t\t}\n\n\t\treturn finalStage;\n\t}\n\n\tsetCheckedStageInFailStagesWrapper(failStageListWrapper: HTMLElement): void\n\t{\n\t\tconst failStages = [...this.extractFinalStagePopupFailStages(failStageListWrapper)];\n\t\tconst failStageInputs = failStages.map((radioButtonNode) => {\n\t\t\treturn radioButtonNode.querySelector('input');\n\t\t});\n\n\t\tconst firstAvailableFailStage = this.getFirstFailStage();\n\t\tif (!firstAvailableFailStage)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst relatedRadioButton = failStageInputs.find((radioButton: HTMLInputElement) => {\n\t\t\tconst stageId = radioButton?.dataset?.stageId;\n\t\t\tif (stageId)\n\t\t\t{\n\t\t\t\treturn firstAvailableFailStage.getId() === Text.toInteger(stageId);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\n\t\tif (relatedRadioButton)\n\t\t{\n\t\t\trelatedRadioButton.checked = true;\n\t\t}\n\t}\n\n\tgetFirstFailStage(): ?Stage\n\t{\n\t\tconst stages = [...this.stages.values()];\n\n\t\treturn stages.find((stage: Stage) => stage.isFail() && this.#isHasPermissionToMove(stage.getId()));\n\t}\n\n\tgetFirstFailStageName(): ?string\n\t{\n\t\t// get first fail stage name without permissions check\n\t\treturn super.getFirstFailStage()?.getName();\n\t}\n\n\t#prepareDisableSemanticButton(button: Button): void\n\t{\n\t\tbutton\n\t\t\t.setDisabled()\n\t\t\t.setProps({ disabled: null }) // necessary in order to show a notification about miss permissions\n\t\t\t.bindEvent('click', this.permissionChecker.showMissPermissionError)\n\t\t;\n\t}\n\n\t#getCurrentStage(): ?StageModel\n\t{\n\t\treturn this.getStageModelCallback(this.currentStage);\n\t}\n\n\t#getCurrentStatusId(): ?string\n\t{\n\t\treturn this.#getCurrentStage()?.getStatusId();\n\t}\n\n\t#getStage(id: number): ?StageModel\n\t{\n\t\treturn this.getStageModelCallback(id);\n\t}\n\n\t#isHasPermissionToMove(stageFlowId: number): boolean\n\t{\n\t\tconst compareStage = this.#getStage(stageFlowId);\n\t\tif (!compareStage)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.permissionChecker.isHasPermissionToMove(this.#getCurrentStatusId(), compareStage.getStatusId());\n\t}\n\n\t#isHasPermissionToMoveAtLeastOneTerminationStage(): boolean\n\t{\n\t\treturn this.permissionChecker.isHasPermissionToMoveAtLeastOneTerminationStage(this.#getCurrentStatusId());\n\t}\n\n\t#isHasPermissionToMoveSuccessStage(): boolean\n\t{\n\t\treturn this.permissionChecker.isHasPermissionToMoveSuccessStage(this.#getCurrentStatusId());\n\t}\n\n\t#isHasPermissionToMoveAtLeastOneFailureStages(): boolean\n\t{\n\t\treturn this.permissionChecker.isHasPermissionToMoveAtLeastOneFailureStage(this.#getCurrentStatusId());\n\t}\n\n\t#isDisableStageFlow(flowStage: Stage): boolean\n\t{\n\t\tif (flowStage.isFinal())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (flowStage === this.getFinalStage())\n\t\t{\n\t\t\treturn !this.#isHasPermissionToMoveAtLeastOneTerminationStage();\n\t\t}\n\n\t\treturn !this.#isHasPermissionToMove(flowStage.getId());\n\t}\n\n\t#adjust(): void\n\t{\n\t\tthis.#adjustDisableStages();\n\t\tthis.#adjustSemanticsSelectorPopupButtons();\n\t}\n\n\t#adjustDisableStages(): void\n\t{\n\t\tthis.stages.forEach((stage: Stage) => {\n\t\t\tstage.setDisable(this.#isDisableStageFlow(stage));\n\t\t});\n\t}\n\n\t#adjustSemanticsSelectorPopupButtons(): void\n\t{\n\t\tconst popup = super.getSemanticSelectorPopup();\n\t\tpopup.setButtons([\n\t\t\tthis.getSemanticPopupSuccessButton(),\n\t\t\tthis.getSemanticPopupFailureButton(),\n\t\t]);\n\t}\n}\n"],"names":["Chart","StageFlow","constructor","params","stages","permissionChecker","gettingStageModelCallback","isNewItem","super","Object","value","this","getStageModelCallback","babelHelpers","onStageMouseHover","stage","increaseStageWidthForNameVisibility","isDisabled","onStageClick","getId","showMissPermissionError","onFinalStageClick","setCurrentStageId","stageId","getSemanticPopupSuccessButton","successButton","getSemanticPopupFailureButton","failureButton","getFinalStagePopupFailStage","finalStage","onclick","event","preventDefault","Dom","addClass","setCheckedStageInFailStagesWrapper","failStageListWrapper","failStageInputs","extractFinalStagePopupFailStages","map","radioButtonNode","querySelector","firstAvailableFailStage","getFirstFailStage","relatedRadioButton","find","radioButton","dataset","_radioButton$dataset","Text","toInteger","checked","values","isFail","getFirstFailStageName","_super$getFirstFailSt","getName","button","setDisabled","setProps","disabled","bindEvent","currentStage","_babelHelpers$classPr","getStatusId","id","stageFlowId","compareStage","isHasPermissionToMove","isHasPermissionToMoveAtLeastOneTerminationStage","isHasPermissionToMoveSuccessStage","isHasPermissionToMoveAtLeastOneFailureStage","flowStage","isFinal","getFinalStage","forEach","setDisable","getSemanticSelectorPopup","setButtons"],"mappings":"y5BAQO,MAAMA,YAAcC,YAAUD,OAMpCE,YACCC,EACAC,EACAC,EACAC,EACAC,GAAqB,GAGrBC,MAAML,EAAQC,GAAQK,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAD,8BAAAC,UAAAC,KAVvBJ,WAAqB,EAYpBI,KAAKN,kBAAoBA,EACzBM,KAAKC,sBAAwBN,EAC7BK,KAAKJ,UAAYA,EAEZI,KAAKJ,WAETM,qDAIFC,kBAAkBC,GAEjBJ,KAAKK,oCAAoCD,GACrCA,EAAME,cAKVT,MAAMM,kBAAkBC,GAGzBG,aAAaH,2CAEPJ,WAA4BI,EAAMI,SAOvCX,MAAMU,aAAaH,GALlBJ,KAAKN,kBAAkBe,0BAQzBC,kBAAkBN,2CAEZJ,aAOLH,MAAMa,kBAAkBN,GALvBJ,KAAKN,kBAAkBe,0BAQzBE,kBAAkBC,GAMjB,OAJAf,MAAMc,kBAAkBC,GAExBV,qDAEOF,KAGRa,gCAEC,MAAMC,EAAgBjB,MAAMgB,gCAM5B,+CALKb,cAEJE,mDAAmCY,GAG7BA,EAGRC,gCAEC,MAAMC,EAAgBnB,MAAMkB,gCAC5B,OAAsB,OAAlBC,EAEI,8CAGHhB,cAEJE,mDAAmCc,GAG7BA,GAGRC,4BAA4Bb,GAE3B,MAAMc,EAAarB,MAAMoB,4BAA4Bb,GAYrD,+CAVKJ,WAA4BI,EAAMI,WAEtCU,EAAWC,QAAWC,IACrBA,EAAMC,iBACNrB,KAAKN,kBAAkBe,2BAGxBa,MAAIC,SAASL,EAAY,eAGnBA,EAGRM,mCAAmCC,GAElC,MACMC,EADa,IAAI1B,KAAK2B,iCAAiCF,IAC1BG,IAAKC,GAChCA,EAAgBC,cAAc,UAGhCC,EAA0B/B,KAAKgC,oBACrC,IAAKD,EAEJ,OAGD,MAAME,EAAqBP,EAAgBQ,KAAMC,IAAkC,MAClF,MAAMvB,QAAUuB,YAAAA,EAAaC,gBAAbC,EAAsBzB,QACtC,QAAIA,GAEImB,EAAwBvB,UAAY8B,OAAKC,UAAU3B,KAMxDqB,IAEHA,EAAmBO,SAAU,GAI/BR,oBAIC,MAFe,IAAIhC,KAAKP,OAAOgD,UAEjBP,KAAM9B,GAAiBA,EAAMsC,kDAAY1C,WAA4BI,EAAMI,UAG1FmC,wBACA,MAEC,gBAAO9C,MAAMmC,4BAANY,EAA2BC,WAyFnC,WAtF8BC,GAE7BA,EACEC,cACAC,SAAS,CAAEC,SAAU,OACrBC,UAAU,QAASlD,KAAKN,kBAAkBe,yBAE5C,aAIA,OAAOT,KAAKC,sBAAsBD,KAAKmD,cACvC,aAGD,MACC,wDAAOnD,qBAAAoD,EAAyBC,cAChC,WAESC,GAET,OAAOtD,KAAKC,sBAAsBqD,GAClC,WAEsBC,GAEtB,MAAMC,0CAAexD,WAAeuD,GACpC,QAAKC,GAKExD,KAAKN,kBAAkB+D,8DAAsBzD,aAA4BwD,EAAaH,eAC7F,aAIA,OAAOrD,KAAKN,kBAAkBgE,wFAAgD1D,cAC9E,aAIA,OAAOA,KAAKN,kBAAkBiE,0EAAkC3D,cAChE,aAIA,OAAOA,KAAKN,kBAAkBkE,oFAA4C5D,cAC1E,WAEmB6D,GAEnB,OAAIA,EAAUC,YAKVD,IAAc7D,KAAK+D,yDAEd/D,sDAGDA,WAA4B6D,EAAUrD,UAC9C,aAIAN,qDACAA,qDACA,aAIAF,KAAKP,OAAOuE,QAAS5D,IACpBA,EAAM6D,mDAAWjE,WAAyBI,MAE3C,yBAIoB8D,oCACdC,WAAW,CAChBnE,KAAKa,gCACLb,KAAKe"}