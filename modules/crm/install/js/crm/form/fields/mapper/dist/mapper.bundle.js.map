{"version":3,"file":"mapper.bundle.js","sources":["../src/mapper.js"],"sourcesContent":["import 'ui.sidepanel-content';\nimport './mapper.css';\nimport {Tag, Loc} from 'main.core';\nimport {EventEmitter} from 'main.core.events';\nimport 'landing.ui.collection.buttoncollection';\nimport 'landing.ui.collection.formcollection';\nimport {FieldsPanel} from 'landing.ui.panel.fieldspanel';\n\ntype MapItem = {\n\tinputMultiple: ?boolean;\n\tinputType: ?string;\n\tinputCode: string;\n\tinputName: string;\n\toutputCode: ?string;\n\toutputName: ?string;\n};\n\ntype Entity = {\n\tcaption: string;\n};\n\ntype Options = {\n\tfields: Array<Object>;\n\tmap: Array<MapItem>;\n\tfrom: Entity;\n};\n\nexport class Mapper extends EventEmitter\n{\n\t#fields = {};\n\t#map = [];\n\t#from: Entity = {};\n\t#container;\n\n\tconstructor(options: Options)\n\t{\n\t\tsuper();\n\t\tthis.#fields = options.fields;\n\t\tthis.#from = options.from;\n\t\tthis.setMap(options.map);\n\t}\n\n\tsetMap(map: Array<MapItem>)\n\t{\n\t\tthis.#map = map;\n\t\tthis.#map.forEach((item: MapItem) => this.#appendOutputData(item, item.outputCode));\n\t\tthis.render();\n\t\treturn this;\n\t}\n\n\tgetMap()\n\t{\n\t\treturn this.#map;\n\t}\n\n\t#getEntityNameByField(fieldName)\n\t{\n\t\tlet entityNameParts = fieldName.split('_');\n\t\tlet entityName = entityNameParts[0];\n\t\tif (entityName === 'DYNAMIC')\n\t\t{\n\t\t\tentityName = entityNameParts[0] + '_' + entityNameParts[1];\n\t\t}\n\n\t\treturn entityName;\n\t}\n\n\t#getFieldByName(name)\n\t{\n\t\tconst entityName = this.#getEntityNameByField(name);\n\t\tconst entity = this.#fields[entityName];\n\t\treturn entity.FIELDS.filter(field => field.name === name)[0] || null;\n\t}\n\n/*\t#onClickAddAuto(item: MapItem)\n\t{\n\t\titem.outputCode = '';\n\t\titem.outputName = '';\n\t\tthis.render();\n\t}*/\n\n\t#onClickChange(item: MapItem)\n\t{\n\t\tconst selectorOptions = {\n\t\t\tmultiple: false,\n\t\t\tallowedTypes: [],\n\t\t\tallowedCategories: [],\n\t\t};\n\t\tif (['email', 'phone'].includes(item.inputType))\n\t\t{\n\t\t\tselectorOptions.allowedTypes = [\n\t\t\t\t{type: 'typed_string', entityFieldName: 'PHONE'},\n\t\t\t\t{type: 'typed_string', entityFieldName: 'EMAIL'},\n\t\t\t];\n\t\t\tselectorOptions.allowedCategories = ['LEAD', 'CONTACT', 'COMPANY'];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tselectorOptions.allowedTypes = ['string', 'text'];\n\t\t}\n\n\t\tselectorOptions.disabledFields = this.getMap().map((item: MapItem) => item.outputCode);\n\n\t\tFieldsPanel\n\t\t\t.getInstance()\n\t\t\t.show(selectorOptions)\n\t\t\t.then(selectedNames => {\n\t\t\t\tthis.#appendOutputData(item, selectedNames[0])\n\t\t\t\tthis.render();\n\t\t\t\tthis.emit('change');\n\t\t\t})\n\t\t;\n\t}\n\n\t#appendOutputData(item, name)\n\t{\n\t\tif (!name)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst entityName = this.#getEntityNameByField(name);\n\t\tconst entity = this.#fields[entityName];\n\t\tconst field = this.#getFieldByName(name);\n\t\tif (!field)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\titem.outputCode = name;\n\t\titem.outputName = `${field.caption} - ${entity.CAPTION}`;\n\t}\n\n\trender()\n\t{\n\t\tif (!this.#container)\n\t\t{\n\t\t\tthis.#container = Tag.render`<div></div>`;\n\t\t}\n\n\t\tthis.#container.innerHTML = '';\n\t\tthis.getMap().forEach(field => {\n\t\t\tconst changeHandler = () => this.#onClickChange(field);\n\t\t\tconst element = Tag.render`\n\t\t\t\t\t<div class=\"ui-form-row\" style=\"background: #F5F7F8; border-radius: 12px;\">\n\t\t\t\t\t\t<div class=\"ui-form\" style=\"width: 100%; padding: 20px;\">\n\t\t\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Tag.safe`${field.inputName}`} - ${Tag.safe`${this.#from.caption}`}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"ui-form-content\">\n\t\t\t\t\t\t\t\t<div class=\"crm-form-fields-mapper-row\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclass=\"crm-form-fields-mapper-row-label ${field.outputName ? '' : 'crm-form-fields-mapper-row-label-error'}\"\n\t\t\t\t\t\t\t\t\t\tdata-role=\"caption\"\n\t\t\t\t\t\t\t\t\t>${Tag.safe`${field.outputName}` || Loc.getMessage('CRM_FORM_FIELDS_MAPPER_NOT_SELECTED')}</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<a class=\"ui-btn ui-btn-xs ui-btn-light-border ui-btn-round\"\n\t\t\t\t\t\t\t\t\t\t\tonclick=\"${changeHandler}\"\n\t\t\t\t\t\t\t\t\t\t>${Loc.getMessage('CRM_FORM_FIELDS_MAPPER_CHOOSE_FIELD')}</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\tfield.element = element;\n\t\t\tthis.#container.appendChild(element);\n\t\t});\n\n\t\treturn this.#container;\n\t}\n}\n"],"names":["Mapper","options","fields","from","setMap","map","forEach","item","outputCode","render","Tag","innerHTML","getMap","field","changeHandler","element","safe","inputName","caption","outputName","Loc","getMessage","appendChild","EventEmitter","fieldName","entityNameParts","split","entityName","name","entity","FIELDS","filter","selectorOptions","multiple","allowedTypes","allowedCategories","includes","inputType","type","entityFieldName","disabledFields","FieldsPanel","getInstance","show","then","selectedNames","emit","CAPTION"],"mappings":"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"}