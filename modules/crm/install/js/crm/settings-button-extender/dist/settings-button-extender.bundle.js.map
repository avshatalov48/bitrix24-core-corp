{"version":3,"file":"settings-button-extender.bundle.js","sources":["../src/params-handling.js","../src/grid/default-sort.js","../src/grid/sort-controller.js","../src/settings-button-extender.js"],"sourcesContent":["import { Type } from 'main.core';\n\nexport function requireClassOrNull(param: any, constructor: Function, paramName: string): ?Object\n{\n\tif (Type.isNil(param))\n\t{\n\t\treturn param;\n\t}\n\n\treturn requireClass(param, constructor, paramName);\n}\n\nexport function requireClass(param: any, constructor: Function, paramName: string): Object\n{\n\tif (param instanceof constructor)\n\t{\n\t\treturn param;\n\t}\n\n\tthrow new Error(`Expected ${paramName} be an instance of ${constructor.name}, got ${getType(param)} instead`);\n}\n\nexport function requireArrayOfString(param: any, paramName: string): Array<string>\n{\n\tif (!Type.isArray(param))\n\t{\n\t\tthrow new TypeError(`Expected ${paramName} should be an array of strings, got ${getType(param)} instead`);\n\t}\n\n\tparam.forEach((value, index) => {\n\t\tif (!Type.isString(value))\n\t\t{\n\t\t\tthrow new TypeError(`Expected ${paramName} should be an array of strings, instead the element at index ${index} is ${getType(value)}`);\n\t\t}\n\t});\n\n\treturn param;\n}\n\nexport function requireStringOrNull(param: any, paramName: string): ?string\n{\n\tif (Type.isStringFilled(param) || Type.isNil(param))\n\t{\n\t\treturn param;\n\t}\n\n\tthrow new Error(`Expected ${paramName} be either non-empty string or null, got ${getType(param)} instead`);\n}\n\nfunction getType(value: any): string\n{\n\tif (Type.isObject(value) && !Type.isPlainObject(value))\n\t{\n\t\treturn value?.constructor?.name || 'unknown';\n\t}\n\n\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-typeof\n\treturn typeof value;\n}\n","import { Extension } from 'main.core';\n\nconst aliases: {[key: number]: string} = Extension.getSettings('crm.settings-button-extender').get('createTimeAliases', {});\n\nconst DefaultSort: {[key: number]: {column: string, order: 'asc' | 'desc'}} = {};\n\nfor (const entityTypeId in aliases)\n{\n\tDefaultSort[entityTypeId] = {\n\t\tcolumn: aliases[entityTypeId],\n\t\torder: 'desc',\n\t};\n}\n\nObject.freeze(DefaultSort);\n\nexport {\n\tDefaultSort,\n}\n","import { Text, Type } from 'main.core';\nimport { requireClass } from '../params-handling';\nimport { DefaultSort } from './default-sort';\n\nexport class SortController\n{\n\t#entityTypeId: number;\n\t#grid: BX.Main.grid;\n\n\tconstructor(entityTypeId: number, grid: BX.Main.grid)\n\t{\n\t\tthis.#entityTypeId = Text.toInteger(entityTypeId);\n\t\tthis.#grid = requireClass(grid, BX.Main.grid, 'grid');\n\t}\n\n\tisLastActivitySortSupported(): boolean\n\t{\n\t\treturn this.#isColumnExists('LAST_ACTIVITY_TIME');\n\t}\n\n\tisLastActivitySortEnabled(): boolean\n\t{\n\t\tconst options = this.#grid.getUserOptions().getCurrentOptions();\n\n\t\tconst column = options.last_sort_by;\n\t\tconst order = options.last_sort_order;\n\n\t\treturn (\n\t\t\tcolumn?.toLowerCase() === 'last_activity_time'\n\t\t\t&& order?.toLowerCase() === 'desc'\n\t\t);\n\t}\n\n\ttoggleLastActivitySort(): void\n\t{\n\t\tif (this.isLastActivitySortEnabled())\n\t\t{\n\t\t\tthis.#disableLastActivitySort();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#enableLastActivitySort();\n\t\t}\n\t}\n\n\tasync #disableLastActivitySort(): Promise<void>\n\t{\n\t\tconst sort = DefaultSort[this.#entityTypeId];\n\n\t\tlet column: string;\n\n\t\tif (Type.isPlainObject(sort) && this.#isColumnExists(sort.column) && this.#isColumnSortable(sort.column))\n\t\t{\n\t\t\tcolumn = sort.column;\n\n\t\t\tif (!this.#isColumnShowed(column))\n\t\t\t{\n\t\t\t\tawait this.#showColumn(column);\n\t\t\t}\n\n\t\t\tthis.#setSortOrder(column, sort.order);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// fist showed different sortable\n\t\t\tcolumn = this.#getShowedColumnList().find((columnName) => {\n\t\t\t\treturn (\n\t\t\t\t\tcolumnName !== 'LAST_ACTIVITY_TIME'\n\t\t\t\t\t&& this.#isColumnSortable(columnName)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tthis.#grid.sortByColumn(column);\n\t}\n\n\tasync #enableLastActivitySort(): Promise<void>\n\t{\n\t\tif (!this.#isColumnShowed('LAST_ACTIVITY_TIME'))\n\t\t{\n\t\t\tawait this.#showColumn('LAST_ACTIVITY_TIME');\n\t\t}\n\n\t\tthis.#setSortOrder('LAST_ACTIVITY_TIME', 'desc');\n\n\t\tthis.#grid.sortByColumn('LAST_ACTIVITY_TIME');\n\t}\n\n\t#isColumnExists(column: string): boolean\n\t{\n\t\treturn this.#grid.getParam('COLUMNS_ALL', {}).hasOwnProperty(column);\n\t}\n\n\t#isColumnShowed(column: string): boolean\n\t{\n\t\treturn this.#getShowedColumnList().includes(column);\n\t}\n\n\t#isColumnSortable(column: string): boolean\n\t{\n\t\tconst columnParams = this.#grid.getColumnByName(column);\n\n\t\treturn !!(columnParams && columnParams.sort !== false);\n\t}\n\n\t#getShowedColumnList(): string[]\n\t{\n\t\treturn this.#grid.getSettingsWindow().getShowedColumns();\n\t}\n\n\t#setSortOrder(column: string, order: 'asc' | 'desc'): void\n\t{\n\t\tthis.#grid.getColumnByName(column).sort_order = order;\n\t}\n\n\t#showColumn(column: string): Promise<void, string>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!this.#isColumnExists(column))\n\t\t\t{\n\t\t\t\treject(new Error(`Column ${column} does not exists`));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.#isColumnShowed(column))\n\t\t\t{\n\t\t\t\treject(new Error(`Column ${column} is showed already`));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#grid.getSettingsWindow().select(column);\n\n\t\t\tconst showedColumns = this.#getShowedColumnList();\n\t\t\tshowedColumns.push(column);\n\n\t\t\tthis.#grid.getSettingsWindow().saveColumns(showedColumns, resolve);\n\t\t});\n\t}\n}\n","import { TodoNotificationSkipMenu } from 'crm.activity.todo-notification-skip-menu';\nimport { TodoPingSettingsMenu } from 'crm.activity.todo-ping-settings-menu';\nimport { Restriction } from 'crm.kanban.restriction';\nimport { SettingsController, Type as SortType } from 'crm.kanban.sort';\nimport {\n\tajax as Ajax,\n\ttype Collections,\n\tExtension,\n\tLoc,\n\tReflection,\n\tText,\n\tType,\n\tuserOptions as UserOptions,\n} from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Menu, MenuItem, MenuItemOptions } from 'main.popup';\nimport { Dialog } from 'ui.entity-selector';\nimport { SortController as GridSortController } from './grid/sort-controller';\nimport {\n\trequireClass,\n\trequireClassOrNull,\n\trequireStringOrNull,\n\trequireArrayOfString,\n} from './params-handling';\n\nconst EntityType = Reflection.getClass('BX.CrmEntityType');\n\nconst CHECKED_CLASS = 'menu-popup-item-accept';\nconst NOT_CHECKED_CLASS = 'menu-popup-item-none';\n\nconst COPILOT_LANGUAGE_ID_SAVE_REQUEST_DELAY = 750;\nconst COPILOT_LANGUAGE_SELECTOR_POPUP_WIDTH = 300;\n\nconst AUTOSTART_CALL_DIRECTION_INCOMING = 1;\nconst AUTOSTART_CALL_DIRECTION_OUTGOING = 2;\n\ntype AISettings = {\n\tautostartOperationTypes: number[],\n\tautostartTranscriptionOnlyOnFirstCallWithRecording: boolean,\n\tautostartCallDirections: number[],\n};\n\nexport type SettingsButtonExtenderParams = {\n\tentityTypeId: number,\n\tcategoryId: ?number,\n\taiAutostartSettings: ?string, // json\n\taiCopilotLanguageId: ?string,\n\tpingSettings: Object,\n\trootMenu: Menu,\n\ttodoCreateNotificationSkipPeriod: ?string,\n\ttargetItemId: ?string,\n\texpandsBehindThan: Array<string>;\n\tcontroller: ?SettingsController,\n\trestriction: ?Restriction,\n\tgrid: ?BX.Main.grid,\n};\n\n/**\n * @memberOf BX.Crm\n */\nexport class SettingsButtonExtender\n{\n\t#entityTypeId: number;\n\t#categoryId: ?number;\n\t#pingSettings: Object;\n\t#rootMenu: Menu;\n\t#targetItemId: ?string;\n\t#expandsBehindThan: Array<string>;\n\t#kanbanController: ?SettingsController;\n\t#restriction: ?Restriction;\n\t#gridController: ?GridSortController = null;\n\n\t#todoSkipMenu: TodoNotificationSkipMenu;\n\t#todoPingSettingsMenu: TodoPingSettingsMenu;\n\n\t#isSetSortRequestRunning: boolean = false;\n\t#smartActivityNotificationSupported: boolean = false;\n\n\t#aiAutostartSettings: null | AISettings = null;\n\t#aiCopilotLanguageId: null | string = null;\n\t#isSetAiSettingsRequestRunning: boolean = false;\n\n\t#extensionSettings: Collections.SettingsCollection = Extension.getSettings('crm.settings-button-extender');\n\n\tconstructor(params: SettingsButtonExtenderParams)\n\t{\n\t\tthis.#entityTypeId = Text.toInteger(params.entityTypeId);\n\t\tthis.#categoryId = Type.isInteger(params.categoryId) ? params.categoryId : null;\n\t\tthis.#pingSettings = Type.isPlainObject(params.pingSettings) ? params.pingSettings : {};\n\t\tthis.#expandsBehindThan = requireArrayOfString(params.expandsBehindThan ?? [], 'params.expandsBehindThan');\n\t\tthis.#smartActivityNotificationSupported = Text.toBoolean(params.smartActivityNotificationSupported);\n\n\t\tif (EntityType && !EntityType.isDefined(this.#entityTypeId))\n\t\t{\n\t\t\tthrow new Error(`Provided entityTypeId is invalid: ${this.#entityTypeId}`);\n\t\t}\n\n\t\tthis.#rootMenu = requireClass(params.rootMenu, Menu, 'params.rootMenu');\n\t\tthis.#targetItemId = requireStringOrNull(params.targetItemId, 'params.targetItemId');\n\n\t\tthis.#kanbanController = requireClassOrNull(params.controller, SettingsController, 'params.controller');\n\t\tthis.#restriction = requireClassOrNull(params.restriction, Restriction, 'params.restriction');\n\n\t\tif (Reflection.getClass('BX.Main.grid') && params.grid)\n\t\t{\n\t\t\tthis.#gridController = new GridSortController(this.#entityTypeId, params.grid);\n\t\t}\n\n\t\tthis.#todoSkipMenu = new TodoNotificationSkipMenu({\n\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\tselectedValue: requireStringOrNull(params.todoCreateNotificationSkipPeriod, 'params.todoCreateNotificationSkipPeriod'),\n\t\t});\n\n\t\tif (Object.keys(this.#pingSettings).length > 0)\n\t\t{\n\t\t\tthis.#todoPingSettingsMenu = new TodoPingSettingsMenu({\n\t\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\t\tsettings: this.#pingSettings,\n\t\t\t});\n\t\t}\n\n\t\tconst aiSettingsJson = requireStringOrNull(params.aiAutostartSettings, 'params.aiAutostartSettings');\n\t\tif (Type.isStringFilled(aiSettingsJson))\n\t\t{\n\t\t\tconst candidate = JSON.parse(aiSettingsJson);\n\t\t\tif (Type.isPlainObject(candidate))\n\t\t\t{\n\t\t\t\tthis.#aiAutostartSettings = candidate;\n\t\t\t}\n\t\t}\n\n\t\tthis.#aiCopilotLanguageId = params.aiCopilotLanguageId;\n\n\t\tthis.#bindEvents();\n\t}\n\n\t#bindEvents(): void\n\t{\n\t\tconst createdMenuItemIds = [];\n\n\t\tEventEmitter.subscribe(EventEmitter.GLOBAL_TARGET, 'onPopupShow', (event: BaseEvent) => {\n\t\t\tconst popup = event.getTarget();\n\t\t\tif (popup.getId() !== this.#rootMenu.getId())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst items = this.#getItems();\n\t\t\tif (items.length <= 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twhile (createdMenuItemIds.length > 0)\n\t\t\t{\n\t\t\t\tthis.#rootMenu.removeMenuItem(createdMenuItemIds.pop());\n\t\t\t}\n\n\t\t\tlet targetItemId = this.#resolveEarlyTargetId();\n\t\t\tfor (const item of items.reverse()) // new item is *prepended* on top of target item, therefore reverse\n\t\t\t{\n\t\t\t\tconst newItem = this.#rootMenu.addMenuItem(\n\t\t\t\t\titem,\n\t\t\t\t\ttargetItemId,\n\t\t\t\t);\n\n\t\t\t\tif (newItem)\n\t\t\t\t{\n\t\t\t\t\ttargetItemId = newItem.getId();\n\t\t\t\t\tcreatedMenuItemIds.push(newItem.getId());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t#getItems(): MenuItemOptions[]\n\t{\n\t\tconst items = [];\n\n\t\tconst pushCrmSettings = this.#getPushCrmSettings();\n\t\tif (pushCrmSettings)\n\t\t{\n\t\t\titems.push(pushCrmSettings);\n\t\t}\n\n\t\tconst coPilotSettings = this.#getCoPilotSettings();\n\t\tif (coPilotSettings)\n\t\t{\n\t\t\titems.push(coPilotSettings);\n\t\t}\n\n\t\treturn items;\n\t}\n\n\t#resolveEarlyTargetId(): ?string\n\t{\n\t\tconst items = this.#rootMenu.getMenuItems();\n\t\tconst earlyItem = items.find((item: MenuItem) => this.#expandsBehindThan.includes(item.getId()));\n\n\t\treturn earlyItem?.getId() ?? this.#targetItemId;\n\t}\n\n\t#getPushCrmSettings(): ?MenuItemOptions\n\t{\n\t\tconst pushCrmItems = [];\n\n\t\tif (this.#shouldShowLastActivitySortToggle())\n\t\t{\n\t\t\tpushCrmItems.push(this.#getLastActivitySortToggle());\n\t\t}\n\n\t\tif (this.#shouldShowTodoSkipMenu())\n\t\t{\n\t\t\tpushCrmItems.push(...this.#todoSkipMenu.getItems());\n\t\t}\n\n\t\tif (this.#shouldShowTodoPingSettingsMenu())\n\t\t{\n\t\t\tpushCrmItems.push(...this.#todoPingSettingsMenu.getItems());\n\t\t}\n\n\t\tif (pushCrmItems.length <= 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_PUSH_CRM'),\n\t\t\titems: pushCrmItems,\n\t\t};\n\t}\n\n\t#shouldShowLastActivitySortToggle(): boolean\n\t{\n\t\tconst shouldShowInKanban = (\n\t\t\tthis.#kanbanController?.getCurrentSettings().isTypeSupported(SortType.BY_LAST_ACTIVITY_TIME)\n\t\t\t&& this.#restriction?.isSortTypeChangeAvailable()\n\t\t);\n\n\t\treturn !!(shouldShowInKanban || this.#gridController?.isLastActivitySortSupported());\n\t}\n\n\t#getLastActivitySortToggle(): MenuItemOptions\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_PUSH_CRM_TOGGLE_SORT'),\n\t\t\tdisabled: this.#isSetSortRequestRunning,\n\t\t\tclassName: this.#isLastActivitySortEnabled() ? CHECKED_CLASS : NOT_CHECKED_CLASS,\n\t\t\tonclick: this.#handleLastActivitySortToggleClick.bind(this),\n\t\t};\n\t}\n\n\t#isLastActivitySortEnabled(): boolean\n\t{\n\t\tif (this.#kanbanController)\n\t\t{\n\t\t\treturn this.#kanbanController.getCurrentSettings().getCurrentType() === SortType.BY_LAST_ACTIVITY_TIME;\n\t\t}\n\n\t\tif (this.#gridController)\n\t\t{\n\t\t\treturn this.#gridController.isLastActivitySortEnabled();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#handleLastActivitySortToggleClick(event: PointerEvent, item: MenuItem): void\n\t{\n\t\titem.getMenuWindow()?.getRootMenuWindow()?.close();\n\t\titem.disable();\n\n\t\tif (this.#kanbanController)\n\t\t{\n\t\t\tif (this.#isSetSortRequestRunning)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#isSetSortRequestRunning = true;\n\n\t\t\tconst settings = this.#kanbanController.getCurrentSettings();\n\n\t\t\t// eslint-disable-next-line init-declarations\n\t\t\tlet newSortType: string;\n\t\t\tif (settings.getCurrentType() === SortType.BY_LAST_ACTIVITY_TIME)\n\t\t\t{\n\t\t\t\t// first different type\n\t\t\t\tnewSortType = settings.getSupportedTypes().find(sortType => sortType !== SortType.BY_LAST_ACTIVITY_TIME);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnewSortType = SortType.BY_LAST_ACTIVITY_TIME;\n\t\t\t}\n\n\t\t\tthis.#kanbanController.setCurrentSortType(newSortType)\n\t\t\t\t.then(() => {})\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#isSetSortRequestRunning = false;\n\t\t\t\t\titem.enable();\n\t\t\t\t})\n\t\t\t;\n\t\t}\n\t\telse if (this.#gridController)\n\t\t{\n\t\t\tthis.#gridController.toggleLastActivitySort();\n\t\t\titem.enable();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.error('Can not handle last activity toggle click');\n\t\t}\n\t}\n\n\t#closeMenuWindow(event: PointerEvent, item: MenuItem): void\n\t{\n\t\titem.getMenuWindow()?.close();\n\t}\n\n\t#shouldShowTodoSkipMenu(): boolean\n\t{\n\t\treturn this.#smartActivityNotificationSupported;\n\t}\n\n\t#shouldShowTodoPingSettingsMenu(): boolean\n\t{\n\t\treturn this.#todoPingSettingsMenu && this.#shouldShowLastActivitySortToggle();\n\t}\n\n\t#getCoPilotSettings(): ?MenuItemOptions\n\t{\n\t\tconst showInfoHelper = this.#getInfoHelper();\n\t\tconst menuItems = [];\n\t\tif (Type.isPlainObject(this.#aiAutostartSettings))\n\t\t{\n\t\t\tconst autoCallItems = [];\n\t\t\tconst isTranscriptionAutoStarted = this.#aiAutostartSettings\n\t\t\t\t?.autostartOperationTypes\n\t\t\t\t?.includes(this.#getTranscribeAIOperationType())\n\t\t\t;\n\t\t\tconst isOnlyFirst = this.#aiAutostartSettings?.autostartTranscriptionOnlyOnFirstCallWithRecording;\n\t\t\tconst isOnlyIncoming = this.#aiAutostartSettings?.autostartCallDirections?.length === 1\n\t\t\t\t&& this.#aiAutostartSettings?.autostartCallDirections?.includes(AUTOSTART_CALL_DIRECTION_INCOMING)\n\t\t\t;\n\t\t\tconst isOnlyOutgoing = this.#aiAutostartSettings?.autostartCallDirections?.length === 1\n\t\t\t\t&& this.#aiAutostartSettings?.autostartCallDirections?.includes(AUTOSTART_CALL_DIRECTION_OUTGOING)\n\t\t\t;\n\t\t\tconst isAIHasPackages = this.#extensionSettings.get('isAIHasPackages');\n\n\t\t\tautoCallItems.push({\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_AUTO_CALLS_PROCESSING_FIRST_INCOMING_MSGVER_1'),\n\t\t\t\tclassName: isTranscriptionAutoStarted && isAIHasPackages && isOnlyFirst && isOnlyIncoming\n\t\t\t\t\t? CHECKED_CLASS\n\t\t\t\t\t: NOT_CHECKED_CLASS,\n\t\t\t\tonclick: showInfoHelper ?? this.#handleCoPilotMenuItemClick.bind(this, 'firstCall'),\n\t\t\t}, {\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_AUTO_CALLS_PROCESSING_INCOMING'),\n\t\t\t\tclassName: isTranscriptionAutoStarted && isAIHasPackages && isOnlyIncoming && !isOnlyFirst\n\t\t\t\t\t? CHECKED_CLASS\n\t\t\t\t\t: NOT_CHECKED_CLASS,\n\t\t\t\tonclick: showInfoHelper ?? this.#handleCoPilotMenuItemClick.bind(this, 'allCalls'), // all incoming\n\t\t\t}, {\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_AUTO_CALLS_PROCESSING_OUTGOING'),\n\t\t\t\tclassName: isTranscriptionAutoStarted && isAIHasPackages && isOnlyOutgoing && !isOnlyFirst\n\t\t\t\t\t? CHECKED_CLASS\n\t\t\t\t\t: NOT_CHECKED_CLASS,\n\t\t\t\tonclick: showInfoHelper ?? this.#handleCoPilotMenuItemClick.bind(this, 'outgoingCalls'),\n\t\t\t}, {\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_AUTO_CALLS_PROCESSING_ALL_MSGVER_1'),\n\t\t\t\tclassName: isTranscriptionAutoStarted && isAIHasPackages && !isOnlyIncoming && !isOnlyOutgoing && !isOnlyFirst\n\t\t\t\t\t? CHECKED_CLASS\n\t\t\t\t\t: NOT_CHECKED_CLASS,\n\t\t\t\tonclick: showInfoHelper ?? this.#handleCoPilotMenuItemClick.bind(this, 'allIncomingOutgoingCalls'),\n\t\t\t}, {\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_MANUAL_CALLS_PROCESSING_MSGVER_1'),\n\t\t\t\tclassName: isTranscriptionAutoStarted && isAIHasPackages\n\t\t\t\t\t? NOT_CHECKED_CLASS\n\t\t\t\t\t: CHECKED_CLASS,\n\t\t\t\tonclick: showInfoHelper ?? this.#handleCoPilotMenuItemClick.bind(this, 'manual'),\n\t\t\t});\n\n\t\t\tmenuItems.push({\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_AUTO_CALLS'),\n\t\t\t\tdisabled: this.#isSetAiSettingsRequestRunning,\n\t\t\t\titems: autoCallItems,\n\t\t\t});\n\t\t}\n\n\t\tif (Type.isStringFilled(this.#aiCopilotLanguageId))\n\t\t{\n\t\t\tmenuItems.push({\n\t\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_LANGUAGE_MSGVER_1'),\n\t\t\t\tonclick: this.#getInfoHelper(true) ?? this.#handleCoPilotLanguageSelect.bind(this),\n\t\t\t});\n\t\t}\n\n\t\tif (menuItems.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('CRM_SETTINGS_BUTTON_EXTENDER_COPILOT_IN_CALLS'),\n\t\t\tdisabled: this.#isSetAiSettingsRequestRunning,\n\t\t\titems: menuItems,\n\t\t};\n\t}\n\n\t#handleCoPilotMenuItemClick(\n\t\taction: 'firstCall' | 'allCalls' | 'outgoingCalls' | 'allIncomingOutgoingCalls' | 'manual',\n\t\tevent: PointerEvent,\n\t\tmenuItem: MenuItem,\n\t): void\n\t{\n\t\tmenuItem.getMenuWindow()?.getRootMenuWindow()?.close();\n\t\tmenuItem.getMenuWindow()?.getParentMenuItem()?.disable();\n\n\t\tif (this.#isSetAiSettingsRequestRunning)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#isSetAiSettingsRequestRunning = true;\n\n\t\t// eslint-disable-next-line default-case\n\t\tswitch (action)\n\t\t{\n\t\t\tcase 'manual':\n\t\t\t\t// autostart all except first step\n\t\t\t\tthis.#aiAutostartSettings.autostartOperationTypes = this.#getAllOperationTypes().filter(\n\t\t\t\t\t(typeId) => typeId !== this.#getTranscribeAIOperationType(),\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'firstCall':\n\t\t\t\tthis.#aiAutostartSettings.autostartOperationTypes = this.#getAllOperationTypes();\n\t\t\t\tthis.#aiAutostartSettings.autostartTranscriptionOnlyOnFirstCallWithRecording = true;\n\t\t\t\tthis.#aiAutostartSettings.autostartCallDirections = [AUTOSTART_CALL_DIRECTION_INCOMING];\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'allCalls': // all incoming\n\t\t\t\tthis.#aiAutostartSettings.autostartOperationTypes = this.#getAllOperationTypes();\n\t\t\t\tthis.#aiAutostartSettings.autostartTranscriptionOnlyOnFirstCallWithRecording = false;\n\t\t\t\tthis.#aiAutostartSettings.autostartCallDirections = [AUTOSTART_CALL_DIRECTION_INCOMING];\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'outgoingCalls':\n\t\t\t\tthis.#aiAutostartSettings.autostartOperationTypes = this.#getAllOperationTypes();\n\t\t\t\tthis.#aiAutostartSettings.autostartTranscriptionOnlyOnFirstCallWithRecording = false;\n\t\t\t\tthis.#aiAutostartSettings.autostartCallDirections = [AUTOSTART_CALL_DIRECTION_OUTGOING];\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'allIncomingOutgoingCalls':\n\t\t\t\tthis.#aiAutostartSettings.autostartOperationTypes = this.#getAllOperationTypes();\n\t\t\t\tthis.#aiAutostartSettings.autostartTranscriptionOnlyOnFirstCallWithRecording = false;\n\t\t\t\tthis.#aiAutostartSettings.autostartCallDirections = [\n\t\t\t\t\tAUTOSTART_CALL_DIRECTION_INCOMING,\n\t\t\t\t\tAUTOSTART_CALL_DIRECTION_OUTGOING,\n\t\t\t\t];\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tAjax.runAction(\n\t\t\t'crm.settings.ai.saveAutostartSettings',\n\t\t\t{\n\t\t\t\tjson: {\n\t\t\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\t\t\tcategoryId: this.#categoryId,\n\t\t\t\t\tsettings: this.#aiAutostartSettings,\n\t\t\t\t},\n\t\t\t},\n\t\t).then(({ data }) => {\n\t\t\tthis.#aiAutostartSettings = data.settings;\n\n\t\t\tmenuItem.getMenuWindow()?.getParentMenuItem()?.enable();\n\t\t\tthis.#isSetAiSettingsRequestRunning = false;\n\t\t}).catch(({ errors }) => {\n\t\t\tconsole.error('Could not save ai settings', errors);\n\n\t\t\t// refresh settings, we need to know relevant state\n\t\t\treturn Ajax.runAction('crm.settings.ai.getAutostartSettings', {\n\t\t\t\tjson: {\n\t\t\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\t\t\tcategoryId: this.#categoryId,\n\t\t\t\t},\n\t\t\t});\n\t\t}).then(({ data }) => {\n\t\t\tthis.#aiAutostartSettings = data.settings;\n\n\t\t\tmenuItem.getMenuWindow()?.getParentMenuItem()?.enable();\n\t\t\tthis.#isSetAiSettingsRequestRunning = false;\n\t\t}).catch(({ errors }) => {\n\t\t\tconsole.error('Could not fetch ai settings after error in save', errors);\n\n\t\t\tmenuItem.getMenuWindow()?.getParentMenuItem()?.enable();\n\t\t\tthis.#isSetAiSettingsRequestRunning = false;\n\t\t});\n\t}\n\n\t#handleCoPilotLanguageSelect(event: PointerEvent): void\n\t{\n\t\tconst languageSelector = new Dialog({\n\t\t\ttargetNode: event.target,\n\t\t\tmultiple: false,\n\t\t\tshowAvatars: false,\n\t\t\tdropdownMode: true,\n\t\t\tcompactView: true,\n\t\t\tenableSearch: true,\n\t\t\tcontext: `COPILOT-LANGUAGE-SELECTOR-${this.#entityTypeId}-${this.#categoryId}`,\n\t\t\twidth: COPILOT_LANGUAGE_SELECTOR_POPUP_WIDTH,\n\t\t\ttagSelectorOptions: {\n\t\t\t\ttextBoxWidth: '100%',\n\t\t\t},\n\t\t\tpreselectedItems: [\n\t\t\t\t['copilot_language', this.#aiCopilotLanguageId],\n\t\t\t],\n\t\t\tentities: [{\n\t\t\t\tid: 'copilot_language',\n\t\t\t\toptions: {\n\t\t\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\t\t\tcategoryId: this.#categoryId,\n\t\t\t\t},\n\t\t\t}],\n\t\t\tevents: {\n\t\t\t\t'Item:onSelect': (selectEvent: BaseEvent): void => {\n\t\t\t\t\tconst item = selectEvent.getData().item;\n\t\t\t\t\tconst languageId = item.id.toLowerCase();\n\t\t\t\t\tif (!Type.isStringFilled(languageId))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error('Language ID is not defined');\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tlet optionName = `ai_config_${this.#entityTypeId}`;\n\t\t\t\t\t\tif (Type.isInteger(this.#categoryId))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toptionName += `_${this.#categoryId}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tUserOptions.save('crm', optionName, 'languageId', languageId);\n\n\t\t\t\t\t\tthis.#aiCopilotLanguageId = languageId;\n\t\t\t\t\t}, COPILOT_LANGUAGE_ID_SAVE_REQUEST_DELAY);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tlanguageSelector.show();\n\t}\n\n\t#getAllOperationTypes(): number[]\n\t{\n\t\treturn this.#extensionSettings.get('allAIOperationTypes').map((id) => Text.toInteger(id));\n\t}\n\n\t#getTranscribeAIOperationType(): number\n\t{\n\t\treturn Text.toInteger(this.#extensionSettings.get('transcribeAIOperationType'));\n\t}\n\n\t#getInfoHelper(skipPackagesCheck: boolean = false): ?Function\n\t{\n\t\tif (skipPackagesCheck)\n\t\t{\n\t\t\tif (this.#extensionSettings.get('isAIEnabledInGlobalSettings'))\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn (): void => {\n\t\t\t\tif (Reflection.getClass('BX.UI.InfoHelper.show'))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.InfoHelper.show(this.#extensionSettings.get('aiDisabledSliderCode'));\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.#extensionSettings.get('isAIEnabledInGlobalSettings')\n\t\t\t&& this.#extensionSettings.get('isAIHasPackages')\n\t\t)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tif (Reflection.getClass('BX.UI.InfoHelper.show'))\n\t\t\t{\n\t\t\t\tif (!this.#extensionSettings.get('isAIEnabledInGlobalSettings'))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.InfoHelper.show(this.#extensionSettings.get('aiDisabledSliderCode'));\n\t\t\t\t}\n\t\t\t\telse if (!this.#extensionSettings.get('isAIHasPackages'))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.InfoHelper.show(this.#extensionSettings.get('aiPackagesEmptySliderCode'));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n"],"names":["requireClassOrNull","param","constructor","paramName","Type","isNil","requireClass","Error","name","getType","requireArrayOfString","isArray","TypeError","forEach","value","index","isString","requireStringOrNull","isStringFilled","isObject","isPlainObject","aliases","Extension","getSettings","get","DefaultSort","entityTypeId","column","order","Object","freeze","SortController","grid","Text","toInteger","BX","Main","isLastActivitySortSupported","isLastActivitySortEnabled","options","getUserOptions","getCurrentOptions","last_sort_by","last_sort_order","toLowerCase","toggleLastActivitySort","sort","find","columnName","sortByColumn","getParam","hasOwnProperty","includes","columnParams","getColumnByName","getSettingsWindow","getShowedColumns","sort_order","Promise","resolve","reject","select","showedColumns","push","saveColumns","EntityType","Reflection","getClass","CHECKED_CLASS","NOT_CHECKED_CLASS","COPILOT_LANGUAGE_ID_SAVE_REQUEST_DELAY","COPILOT_LANGUAGE_SELECTOR_POPUP_WIDTH","AUTOSTART_CALL_DIRECTION_INCOMING","AUTOSTART_CALL_DIRECTION_OUTGOING","SettingsButtonExtender","params","isInteger","categoryId","pingSettings","expandsBehindThan","toBoolean","smartActivityNotificationSupported","isDefined","rootMenu","Menu","targetItemId","controller","SettingsController","restriction","Restriction","GridSortController","TodoNotificationSkipMenu","selectedValue","todoCreateNotificationSkipPeriod","keys","length","TodoPingSettingsMenu","settings","aiSettingsJson","aiAutostartSettings","candidate","JSON","parse","aiCopilotLanguageId","createdMenuItemIds","EventEmitter","subscribe","GLOBAL_TARGET","event","popup","getTarget","getId","items","removeMenuItem","pop","item","reverse","newItem","addMenuItem","pushCrmSettings","coPilotSettings","getMenuItems","earlyItem","pushCrmItems","getItems","text","Loc","getMessage","shouldShowInKanban","getCurrentSettings","isTypeSupported","SortType","BY_LAST_ACTIVITY_TIME","isSortTypeChangeAvailable","disabled","className","onclick","bind","getCurrentType","getMenuWindow","getRootMenuWindow","close","disable","newSortType","getSupportedTypes","sortType","setCurrentSortType","then","catch","finally","enable","console","error","showInfoHelper","menuItems","autoCallItems","isTranscriptionAutoStarted","autostartOperationTypes","isOnlyFirst","autostartTranscriptionOnlyOnFirstCallWithRecording","isOnlyIncoming","autostartCallDirections","isOnlyOutgoing","isAIHasPackages","action","menuItem","getParentMenuItem","filter","typeId","Ajax","runAction","json","data","errors","languageSelector","Dialog","targetNode","target","multiple","showAvatars","dropdownMode","compactView","enableSearch","context","width","tagSelectorOptions","textBoxWidth","preselectedItems","entities","id","events","selectEvent","getData","languageId","setTimeout","optionName","UserOptions","save","show","map","skipPackagesCheck","UI","InfoHelper"],"mappings":"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"}