{"version":3,"file":"edit.bundle.js","sources":["../src/components/expandcontrol.js","../src/components/permissioncontrol.js","../src/utils.js","../src/store/getters.js","../src/store/mutations.js","../src/store/actions.js","../src/store.js","../src/components/entitycontrol.js","../src/slider/slider-permissions.js","../src/slider/slider-manager.js","../src/components/row.js","../src/components/desk.js","../src/components/loader.js","../src/components/main.js","../src/app.js"],"sourcesContent":["import 'ui.design-tokens';\nimport '../css/expandcontrol.css';\n\nexport const ExpandControl = {\n\tname: 'ExpandControl',\n\tprops: {\n\t\tentity: Object,\n\t\tisExpanded: Boolean,\n\t},\n\temits: ['toggle'],\n\tmethods: {\n\t\ttoggleState() {\n\t\t\tthis.$emit('toggle');\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t:class=\"{'--expanded': isExpanded}\"\n\t\t\tclass=\"bx-crm-perms-edit-expand_control\"\n\t\t\t@click=\"toggleState\">\n\t\t</div>\n\t`,\n};\n","import '../css/permissioncontrol.css';\nimport { Event, Loc } from 'main.core';\nimport { mapGetters } from 'ui.vue3.vuex';\n\nexport const PermissionControl = {\n\tname: 'PermissionControl',\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tvaluesMap: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tpermissionIdentifier: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['valueChanged'],\n\tdata() {\n\t\treturn {\n\t\t\tlabel: {\n\t\t\t\tinherit: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_INHERIT'),\n\t\t\t},\n\t\t\tisEditMode: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters(['getAssignedAttribute']),\n\t\tcurrentPermissionName()\n\t\t{\n\t\t\tif (\n\t\t\t\tthis.permissionIdentifier.permissionCode === 'AUTOMATION'\n\t\t\t\t&& this.isReadOnlyMode\n\t\t\t)\n\t\t\t{\n\t\t\t\tconst forcePerm = 'X';\n\n\t\t\t\treturn this.valuesMap[forcePerm];\n\t\t\t}\n\n\t\t\tif (this.isStageControl && this.model === '-')\n\t\t\t{\n\t\t\t\treturn this.getParentName;\n\t\t\t}\n\n\t\t\treturn this.valuesMap[this.value];\n\t\t},\n\t\tisInherited() {\n\t\t\treturn this.isStageControl && this.model === '-';\n\t\t},\n\t\tmodel: {\n\t\t\tget() {\n\t\t\t\treturn this.value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$emit('valueChanged', { identifier: this.permissionIdentifier, value });\n\t\t\t},\n\t\t},\n\t\tisStageControl() {\n\t\t\treturn Boolean(this.permissionIdentifier.stageField);\n\t\t},\n\t\tgetParentName() {\n\t\t\tconst parentChose = this.getAssignedAttribute({\n\t\t\t\tpermissionCode: this.permissionIdentifier.permissionCode,\n\t\t\t\tentityCode: this.permissionIdentifier.entityCode,\n\t\t\t}) || '';\n\n\t\t\treturn this.valuesMap[parentChose];\n\t\t},\n\t\tisReadOnlyMode(): boolean {\n\t\t\tif (this.permissionIdentifier.permissionCode === 'AUTOMATION')\n\t\t\t{\n\t\t\t\treturn this.getAssignedAttribute({ permissionCode: 'WRITE', entityCode: 'CONFIG' }) === 'X';\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t},\n\tmethods: {\n\t\ttoEditMode(e) {\n\t\t\te.stopPropagation();\n\t\t\tif (this.isReadOnlyMode)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.isEditMode = true;\n\t\t\tEvent.bind(window, 'click', this.windowClickListener);\n\t\t},\n\t\twindowClickListener(event) {\n\t\t\tif (\n\t\t\t\tevent.target !== this.$refs.componentRef\n\t\t\t\t&& !event.composedPath().includes(this.$refs.componentRef)\n\t\t\t)\n\t\t\t{\n\t\t\t\tthis.isEditMode = false;\n\t\t\t\tEvent.unbind(window, 'click', this.windowClickListener);\n\t\t\t}\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div \n\t\t\tclass=\"bx-crm-perms-edit-permission_control\"\n\t\t\tref=\"componentRef\"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-text\"\n\t\t\t\t:class=\"{'--readonly': isReadOnlyMode, '--inherited': isInherited}\"\n\t\t\t\tv-if=\"!isEditMode\"\n\t\t\t\t@click=\"toEditMode\"\n\t\t\t>{{ currentPermissionName }}</div>\n\t\t\t<select \n\t\t\t\tv-model=\"model\" \n\t\t\t\tv-if=\"isEditMode\" \n\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-select\"\n\t\t\t>\n\t\t\t\t<option \n\t\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-select-option__grey\" \n\t\t\t\t\tv-if=\"isStageControl\" \n\t\t\t\t\tvalue=\"-\"\n\t\t\t\t>{{ label.inherit }}</option>\n\t\t\t\t<option v-for=\"val in Object.keys(valuesMap)\" :value=\"val\">\n\t\t\t\t\t{{ valuesMap[val] }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</div>\n\t`,\n};\n","import { PermissionEntityIdentifier } from './store';\n\nexport function entityHash(entity): string\n{\n\tif (entity.stageField)\n\t{\n\t\treturn `${entity.entityCode}__${entity.stageField}__${entity.stageCode}`;\n\t}\n\n\treturn entity.entityCode;\n}\n\nexport function hashIdentifier(identifier: PermissionEntityIdentifier): string\n{\n\tlet hash = `${identifier.entityCode}__${identifier.permissionCode}`;\n\n\tif (identifier.stageField)\n\t{\n\t\thash = `${hash}__${identifier.stageField}__${identifier.stageCode}`;\n\t}\n\n\treturn btoa(hash);\n}","import { Type } from 'main.core';\nimport {\n\tAssignAttributeParam,\n\tAssignTransitionValues,\n\tMAX_SORT_ORDER_ON_THE_DESK,\n\tPermissionEntityIdentifier,\n\tPermissions,\n} from '../store';\nimport { entityHash } from '../utils';\n\nexport default {\n\tpermissionEntities(state) {\n\t\treturn state.desk.permissionEntities;\n\t},\n\n\tpermissionEntitiesExpanded(state) {\n\t\treturn state.desk.permissionEntities.filter((entity) => {\n\t\t\treturn !(entity.stageField && !state.ui.expandedStageEntities[entity.entityCode]);\n\t\t});\n\t},\n\n\tgetMainPermissionEntityByCode: (state) => (entityCode) => {\n\t\treturn state.desk.permissionEntities.find((item) => {\n\t\t\treturn item.entityCode === entityCode && !item.stageField;\n\t\t});\n\t},\n\n\tgetEntitiesGroupedByPermission: (state, getters) => (entityCode) => {\n\t\tconst rootEntity = getters.getMainPermissionEntityByCode(entityCode);\n\n\t\tconst entities = state.desk.permissionEntities\n\t\t\t.filter((entity) => entity.entityCode === rootEntity.entityCode);\n\n\t\tlet permissions = [];\n\n\t\tfor (const entity of entities)\n\t\t{\n\t\t\tfor (const permCode of Object.keys(entity.permissions))\n\t\t\t{\n\t\t\t\tif (!Object.hasOwn(entity.permissions, permCode))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst values = entity.permissions[permCode];\n\n\t\t\t\tconst permissionConfig: Permissions = state.desk.availablePermissions.find((perm: Permissions) => {\n\t\t\t\t\treturn perm.code === permCode;\n\t\t\t\t});\n\n\t\t\t\tif (permissionConfig.sortOrder <= MAX_SORT_ORDER_ON_THE_DESK)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tpermissions.push({\n\t\t\t\t\tcode: permCode,\n\t\t\t\t\tname: permissionConfig.name,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisEntityStageSupport: entity.hasStages,\n\t\t\t\t\tisPermissionStageSupport: permissionConfig.canAssignPermissionToStages,\n\t\t\t\t\tstageField: entity.stageField,\n\t\t\t\t\tstageCode: entity.stageCode,\n\t\t\t\t\tstateName: entity.name,\n\t\t\t\t\tsortOrder: parseInt(permissionConfig.sortOrder, 10),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpermissions = permissions.sort((a, b) => {\n\t\t\tif (a.sortOrder === b.sortOrder)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn a.sortOrder < b.sortOrder ? -1 : 1;\n\t\t});\n\n\t\treturn permissions;\n\t},\n\n\tavailablePermissions(state) {\n\t\treturn state.desk.availablePermissions;\n\t},\n\n\tgetAssignedAttribute: (state) => (\n\t\t{ permissionCode, entityCode, stageField, stageCode }: PermissionEntityIdentifier,\n\t) => {\n\t\tif (stageField)\n\t\t{\n\t\t\tlet value = state.roleAssignedPermissions?.[entityCode]?.[permissionCode]?.[stageField]?.[stageCode];\n\n\t\t\t// Not assigned value of stage attribute means it is inherited val from root permission entity\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tvalue = '-';\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\treturn state.roleAssignedPermissions?.[entityCode]?.[permissionCode]?.['-'] || null;\n\t},\n\n\tisStageEntitiesVisible: (state) => (entity) => {\n\t\tconst hash = entityHash(entity);\n\n\t\treturn Boolean(state.ui.expandedStageEntities[hash]);\n\t},\n\n\tpermissionsOnMainView(state) {\n\t\treturn state.desk.availablePermissions.filter((perm) => {\n\t\t\treturn perm.sortOrder <= MAX_SORT_ORDER_ON_THE_DESK;\n\t\t});\n\t},\n\n\thasTariffPermission(state): boolean {\n\t\treturn state.restriction.hasPermission;\n\t},\n\n\tgetRestrictionScript(state): ?string {\n\t\treturn state.restriction.restrictionScript;\n\t},\n\n\tgetAvailablePermissionsOrders(state) {\n\t\treturn state.desk.availablePermissionsOrders;\n\t},\n\n\tgetSaveData(state) {\n\t\tconst toRemove = [];\n\t\tconst toChange = [];\n\n\t\tfor (const hash of Object.keys(state.touched.touchedAttributes))\n\t\t{\n\t\t\tconst touched: AssignAttributeParam = state.touched.touchedAttributes[hash];\n\t\t\tif (touched.identifier.stageField)\n\t\t\t{\n\t\t\t\tif (touched.value === '-')\n\t\t\t\t{\n\t\t\t\t\ttoRemove.push({ ...touched.identifier });\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttoChange.push({ ...touched.identifier, value: touched.value });\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (touched.value === '')\n\t\t\t{\n\t\t\t\ttoRemove.push({ ...touched.identifier });\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttoChange.push({ ...touched.identifier, value: touched.value });\n\t\t\t}\n\t\t}\n\n\t\tfor (const hash of Object.keys(state.touched.touchedTransitions))\n\t\t{\n\t\t\tconst touched: AssignTransitionValues = state.touched.touchedTransitions[hash];\n\n\t\t\tif (touched.identifier.stageField)\n\t\t\t{\n\t\t\t\tif (touched.values === '-')\n\t\t\t\t{\n\t\t\t\t\ttoRemove.push({ ...touched.identifier });\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttoChange.push({ ...touched.identifier, settings: touched.values });\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (touched.values.length === 0 || (touched.values.length === 1 && touched.values[0] === 'INHERIT'))\n\t\t\t{\n\t\t\t\ttoRemove.push({ ...touched.identifier });\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttoChange.push({ ...touched.identifier, settings: touched.values });\n\t\t\t}\n\t\t}\n\n\t\tif (state.role.id === 0) // is new role\n\t\t{\n\t\t\tappendDefaultAttributesPermissionsToChange(state, toChange);\n\t\t\tappendDefaultTransitionPermissionsToChange(state, toChange);\n\t\t}\n\n\t\treturn {\n\t\t\tid: state.role.id,\n\t\t\tname: state.role.name,\n\t\t\tpermissions: {\n\t\t\t\ttoRemove,\n\t\t\t\ttoChange,\n\t\t\t},\n\t\t};\n\t},\n\n\tgetRoleName(state) {\n\t\treturn state.role.name;\n\t},\n\n\tgetRoleId(state): number {\n\t\treturn state.role.id;\n\t},\n\n\tisSaveInProgress(state): boolean {\n\t\treturn state.ui.isSaveInProgress;\n\t},\n\n\tgetLastErrorMessage(state): string {\n\t\treturn state.ui.lastErrorMessage;\n\t},\n\n\tsetSaveInProgress(state): boolean {\n\t\treturn state.ui.isSaveInProgress;\n\t},\n\n\tgetTransitionSettings: (state) => (\n\t\t{ permissionCode, entityCode, stageField, stageCode }: PermissionEntityIdentifier,\n\t) => {\n\t\tif (stageField)\n\t\t{\n\t\t\tlet value = state.transitions?.[entityCode]?.[stageField]?.[stageCode];\n\n\t\t\t// Not assigned value of stage attribute means it is inherited val from root permission entity\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tvalue = ['INHERIT'];\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\treturn state.transitions?.[entityCode]?.['-'] || ['BLOCKED'];\n\t},\n};\n\nfunction appendDefaultAttributesPermissionsToChange(state, toChange): void\n{\n\tObject.keys(state.roleAssignedPermissions).forEach((entityCode) => {\n\t\tconst permissions = state.roleAssignedPermissions[entityCode] ?? {};\n\t\tObject.keys(permissions).forEach((permissionCode) => {\n\t\t\tif (permissionCode === 'TRANSITION')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst permission = permissions[permissionCode];\n\t\t\tconst value = permission?.['-'];\n\t\t\tif (!Type.isString(value))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hasSelectedPermission = toChange.find(\n\t\t\t\t(item) => item.entityCode === entityCode\n\t\t\t\t\t&& item.permissionCode === permissionCode\n\t\t\t\t\t&& Type.isUndefined(item.stageCode),\n\t\t\t);\n\n\t\t\tif (hasSelectedPermission)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttoChange.push({\n\t\t\t\tentityCode,\n\t\t\t\tpermissionCode,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction appendDefaultTransitionPermissionsToChange(state, toChange): void\n{\n\tconst transitionPermissionCode = 'TRANSITION';\n\tfor (const [entityCode, permission] of Object.entries(state.transitions))\n\t{\n\t\tif (!Object.hasOwn(permission, ['-']))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasSelectedPermission = toChange.find(\n\t\t\t(item) => item.entityCode === entityCode\n\t\t\t\t&& item.permissionCode === transitionPermissionCode\n\t\t\t\t&& Type.isUndefined(item.stageCode),\n\t\t);\n\n\t\tif (hasSelectedPermission)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\ttoChange.push({\n\t\t\tentityCode,\n\t\t\tpermissionCode: transitionPermissionCode,\n\t\t\tsettings: permission['-'],\n\t\t});\n\t}\n}\n","/* eslint no-param-reassign: off */\nimport { AppData } from '../app';\nimport { AssignAttributeParam, AssignTransitionValues, PermissionEntityIdentifier } from '../store';\nimport { entityHash, hashIdentifier } from '../utils';\nimport { Type } from 'main.core';\n\nexport default {\n\tsetInitData(state, data: AppData) {\n\t\tstate.roleAssignedPermissions = data.roleAssignedPermissions;\n\t\tstate.desk.permissionEntities = data.permissionEntities;\n\t\tstate.restriction.hasPermission = data.restriction.hasPermission;\n\t\tstate.restriction.restrictionScript = data.restriction.restrictionScript;\n\t\tstate.transitions = data.roleAssignedSettings;\n\n\t\tconst availablePermissionsOrders = {};\n\t\tconst availablePermissions = data.availablePermissions.map(item => {\n\t\t\tconst sortOrder = parseInt(item.sortOrder, 10);\n\t\t\tavailablePermissionsOrders[item.code] = sortOrder;\n\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tsortOrder,\n\t\t\t};\n\t\t});\n\n\t\tstate.desk.availablePermissionsOrders = availablePermissionsOrders;\n\t\tstate.desk.availablePermissions = availablePermissions;\n\n\t\tstate.role.id = parseInt(data.role.id, 10);\n\t\tstate.role.name = data.role.name;\n\n\t\tstate.touched.originalAttributes = structuredClone(data.roleAssignedPermissions);\n\t\tstate.touched.originalTransitions = structuredClone(data.roleAssignedSettings);\n\t},\n\n\tassignPermissionAttribute(state, payload: AssignAttributeParam) {\n\t\tsetAssignedAttributes(state.roleAssignedPermissions, payload.identifier, payload.value);\n\t\tthis.commit('setAttributeTouched', { identifier: payload.identifier, value: payload.value });\n\t},\n\n\tassignTransitions(state, payload: AssignTransitionValues) {\n\t\tsetAssignedTransitions(state.transitions, payload.identifier, payload.values);\n\t\tthis.commit('setTransitionsTouched', { identifier: payload.identifier, values: payload.values });\n\t},\n\n\tsetAttributeTouched(state, payload: AssignAttributeParam) {\n\t\tconst permissionCode = payload.identifier.permissionCode;\n\t\tconst entityCode = payload.identifier.entityCode;\n\t\tconst stageField = payload.identifier.stageField;\n\t\tconst stageCode = payload.identifier.stageCode;\n\n\t\tconst value = payload.value;\n\t\tlet original = '';\n\t\tif (stageField)\n\t\t{\n\t\t\toriginal = state.touched.originalAttributes?.[entityCode]?.[permissionCode]?.[stageField]?.[stageCode];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toriginal = state.touched.originalAttributes?.[entityCode]?.[permissionCode]?.['-'];\n\t\t}\n\n\t\tconst hash = hashIdentifier(payload.identifier);\n\n\t\tif (original === value)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tdelete state.touched.touchedAttributes[hash];\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstate.touched.touchedAttributes[hash] = {\n\t\t\t\tvalue,\n\t\t\t\tidentifier: payload.identifier,\n\t\t\t};\n\t\t}\n\t},\n\n\tsetTransitionsTouched(state, payload: AssignTransitionValues) {\n\t\tconst entityCode = payload.identifier.entityCode;\n\t\tconst stageField = payload.identifier.stageField;\n\t\tconst stageCode = payload.identifier.stageCode;\n\n\t\tconst values = payload.values;\n\t\tlet original = [];\n\t\tif (stageField && stageCode)\n\t\t{\n\t\t\toriginal = state.touched.originalTransitions?.[entityCode]?.[stageField]?.[stageCode];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toriginal = state.touched.originalTransitions?.[entityCode]?.['-'];\n\t\t}\n\n\t\tconst hash = hashIdentifier(payload.identifier);\n\n\t\tif (Type.isArray(original) && isArraysEqual(original, values))\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tdelete state.touched.touchedTransitions[hash];\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstate.touched.touchedTransitions[hash] = {\n\t\t\t\tvalues,\n\t\t\t\tidentifier: payload.identifier,\n\t\t\t};\n\t\t}\n\t},\n\n\tresetTouchedAttributes(state) {\n\t\tstate.touched.originalAttributes = JSON.parse(JSON.stringify((state.roleAssignedPermissions)));\n\t\tstate.touched.touchedAttributes = {};\n\t},\n\n\tresetTouchedTransitions(state) {\n\t\tstate.touched.originalTransitions = JSON.parse(JSON.stringify((state.transitions)));\n\t\tstate.touched.touchedTransitions = {};\n\t},\n\n\ttoggleStagesVisibility(state, entity) {\n\t\tconst hash = entityHash(entity);\n\t\tif (state.ui.expandedStageEntities[hash])\n\t\t{\n\t\t\tdelete state.ui.expandedStageEntities[hash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstate.ui.expandedStageEntities[hash] = true;\n\t\t}\n\t},\n\n\tsetRoleName(state, newName) {\n\t\tstate.role.name = newName;\n\t},\n\n\tsetSaveInProgress(state, value: boolean) {\n\t\tstate.ui.isSaveInProgress = value;\n\t},\n\n\tsetLastErrorMessage(state, message): string {\n\t\tstate.ui.lastErrorMessage = message;\n\t},\n};\n\nfunction setAssignedAttributes(obj, identifier: PermissionEntityIdentifier, value)\n{\n\tconst permissionCode = identifier.permissionCode;\n\tconst entityCode = identifier.entityCode;\n\tconst stageField = identifier.stageField;\n\tconst stageCode = identifier.stageCode;\n\n\tif (!obj[entityCode])\n\t{\n\t\tobj[entityCode] = {};\n\t}\n\n\tif (!obj[entityCode][permissionCode])\n\t{\n\t\tobj[entityCode][permissionCode] = {};\n\t}\n\n\tif (stageField)\n\t{\n\t\tif (!obj[entityCode][permissionCode][stageField])\n\t\t{\n\t\t\tobj[entityCode][permissionCode][stageField] = {};\n\t\t}\n\n\t\tobj[entityCode][permissionCode][stageField][stageCode] = value;\n\n\t\treturn;\n\t}\n\n\tif (value === '')\n\t{\n\t\tdelete obj[entityCode][permissionCode]['-'];\n\t}\n\telse\n\t{\n\t\tobj[entityCode][permissionCode]['-'] = value;\n\t}\n\n\tclearEmptyNodes(obj);\n}\n\nfunction clearEmptyNodes(node, nodeName, parent)\n{\n\tif (!Type.isObject(node))\n\t{\n\t\treturn;\n\t}\n\n\tfor (const [childName, childNode] of Object.entries(node))\n\t{\n\t\tif (isObjectEmpty(childNode))\n\t\t{\n\t\t\tdelete node[childName];\n\t\t\tcontinue;\n\t\t}\n\n\t\tclearEmptyNodes(childNode, childName, node);\n\t}\n\n\tif (parent && isObjectEmpty(node))\n\t{\n\t\tdelete parent[nodeName];\n\t}\n}\n\nfunction isObjectEmpty(obj): boolean\n{\n\tif (!obj)\n\t{\n\t\treturn true;\n\t}\n\n\treturn Object.keys(obj).length === 0;\n}\n\nfunction setAssignedTransitions(obj, identifier: PermissionEntityIdentifier, values)\n{\n\tconst entityCode = identifier.entityCode;\n\tconst stageField = identifier.stageField;\n\tconst stageCode = identifier.stageCode;\n\n\tif (!obj[entityCode])\n\t{\n\t\tobj[entityCode] = {};\n\t}\n\n\tif (stageField && stageCode)\n\t{\n\t\tif (!obj[entityCode][stageField])\n\t\t{\n\t\t\tobj[entityCode][stageField] = {};\n\t\t}\n\n\t\tobj[entityCode][stageField][stageCode] = values;\n\n\t\treturn;\n\t}\n\n\tif (values === '')\n\t{\n\t\tdelete obj[entityCode]['-'];\n\t}\n\telse\n\t{\n\t\tobj[entityCode]['-'] = values;\n\t}\n\n\tclearEmptyNodes(obj);\n}\n\nfunction isArraysEqual(first: Array, second: Array): boolean\n{\n\treturn first.sort().toString() === second.sort().toString();\n}\n","export default {\n\tasync saveRolePermission({ commit, getters }, action: string) {\n\t\tif (getters.setSaveInProgress)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tcommit('setSaveInProgress', true);\n\t\tcommit('setLastErrorMessage', '');\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await BX.ajax.runComponentAction(\n\t\t\t\t'bitrix:crm.config.perms.role.edit.v2',\n\t\t\t\t'save',\n\t\t\t\t{\n\t\t\t\t\tmode: 'class',\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tvalues: getters.getSaveData,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst redirectUrl = response?.data?.redirectUrl;\n\t\t\tconst roleUrl = response?.data?.roleUrl;\n\n\t\t\tif (action === 'save' && redirectUrl)\n\t\t\t{\n\t\t\t\twindow.location.href = redirectUrl;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'apply' && roleUrl && getters.getRoleId === 0)\n\t\t\t{\n\t\t\t\twindow.location.href = roleUrl;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommit('resetTouchedAttributes');\n\t\t\tcommit('resetTouchedTransitions');\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tconst errMessage = err?.data?.message;\n\t\t\tcommit('setLastErrorMessage', errMessage);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tcommit('setSaveInProgress', false);\n\t\t}\n\t},\n\n\tasync deleteRole({ commit, getters}){\n\t\tif (getters.setSaveInProgress)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst roleId = getters.getRoleId;\n\n\t\tif (!roleId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tcommit('setSaveInProgress', true);\n\t\tcommit('setLastErrorMessage', '');\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await BX.ajax.runComponentAction(\n\t\t\t\t'bitrix:crm.config.perms.role.edit.v2',\n\t\t\t\t'delete',\n\t\t\t\t{\n\t\t\t\t\tmode: 'class',\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tvalues: { roleId },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tlet redirectUrl = response?.data?.redirectUrl;\n\n\t\t\tif (!redirectUrl)\n\t\t\t{\n\t\t\t\tredirectUrl = '/';\n\t\t\t}\n\n\t\t\twindow.location.href = redirectUrl;\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tconst errMessage = err?.data?.message;\n\t\t\tcommit('setLastErrorMessage', errMessage);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tcommit('setSaveInProgress', false);\n\t\t}\n\t}\n};\n","import getters from './store/getters';\nimport mutations from './store/mutations';\nimport actions from './store/actions';\n\nexport const MAX_SORT_ORDER_ON_THE_DESK = 7;\n\nexport interface PermissionEntityIdentifier {\n\tpermissionCode: string;\n\tentityCode: string;\n\tstageField: ?string;\n\tstageCode: ?string;\n}\n\nexport interface AssignAttributeParam {\n\tidentifier: PermissionEntityIdentifier,\n\tvalue: string\n}\n\nexport interface Permissions {\n\tcode: string;\n\tname: string;\n\tsortOrder: number;\n\tcanAssignPermissionToStages: boolean;\n}\n\nexport interface EntitySelectorValue {\n\tid: string,\n\tentityId: string,\n\ttabs: string,\n\ttitle: string,\n}\n\nexport interface AssignTransitionValues {\n\tidentifier: PermissionEntityIdentifier,\n\tvalues: Transitions\n}\n\ninterface Transition {\n\tkey: string,\n}\n\ntype Transitions = Transition[];\n\nfunction initState()\n{\n\treturn {\n\t\tui: {\n\t\t\texpandedStageEntities: {},\n\t\t\tisSaveInProgress: false,\n\t\t\tlastErrorMessage: '',\n\t\t},\n\t\troleAssignedPermissions: {},\n\t\trestriction: {\n\t\t\thasPermission: null,\n\t\t\trestrictionScript: '',\n\t\t},\n\t\trole: {\n\t\t\tid: 0,\n\t\t\tname: '',\n\t\t},\n\t\tdesk: {\n\t\t\tavailablePermissions: [],\n\t\t\tpermissionEntities: [],\n\t\t\tavailablePermissionsOrders: {},\n\t\t},\n\t\ttouched: {\n\t\t\toriginalAttributes: {},\n\t\t\ttouchedAttributes: {},\n\t\t\toriginalTransitions: {},\n\t\t\ttouchedTransitions: {},\n\t\t},\n\t\ttransitions: {},\n\t};\n}\n\nexport default () => {\n\treturn {\n\t\tstate: initState(),\n\t\tgetters,\n\t\tmutations,\n\t\tactions,\n\t};\n};\n","import '../css/entitycontrol.css';\nimport 'ui.design-tokens';\nimport { Event, Loc, Type } from 'main.core';\nimport { BaseEvent } from 'main.core.events';\nimport { TagSelector } from 'ui.entity-selector';\nimport { EntitySelectorValue } from '../store';\n\nconst ANY_VALUE = 'ANY';\nconst BLOCKED_VALUE = 'BLOCKED';\nconst INHERIT_VALUE = 'INHERIT';\nexport const EntityControl = {\n\tname: 'EntityControl',\n\tentitySelector: null,\n\tprops: {\n\t\tvalues: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tvaluesMap: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tpermissionIdentifier: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['onTransitionValuesChanged'],\n\tdata(): Object\n\t{\n\t\treturn {\n\t\t\tlabel: {\n\t\t\t\tany: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ANY'),\n\t\t\t\tblocked: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_BLOCKED'),\n\t\t\t\tinherit: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_INHERIT'),\n\t\t\t\tstages: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_STAGES'),\n\t\t\t},\n\t\t\tisEditMode: false,\n\t\t\tvaluesData: this.values,\n\t\t};\n\t},\n\tcomputed: {\n\t\tisStageControl(): boolean\n\t\t{\n\t\t\treturn Boolean(this.permissionIdentifier.stageField);\n\t\t},\n\t\tisInherited(): void\n\t\t{\n\t\t\treturn this.isStageControl && this.currentValues.some((el): boolean => el.id === INHERIT_VALUE);\n\t\t},\n\t\tcurrentValues: {\n\t\t\tget(): Array | any\n\t\t\t{\n\t\t\t\tif (!Type.isArray(this.valuesData))\n\t\t\t\t{\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn this.availableValues.filter((el) => {\n\t\t\t\t\treturn this.valuesData.includes(el.id);\n\t\t\t\t});\n\t\t\t},\n\t\t\tset(values: Array): void\n\t\t\t{\n\t\t\t\tthis.valuesData = values.map((list) => list.id);\n\t\t\t\tthis.$emit(\n\t\t\t\t\t'onTransitionValuesChanged',\n\t\t\t\t\t{ identifier: this.permissionIdentifier, values: this.valuesData },\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\tavailableValues(): EntitySelectorValue[]\n\t\t{\n\t\t\tconst availableValues = [{\n\t\t\t\tid: BLOCKED_VALUE,\n\t\t\t\tentityId: 'stages',\n\t\t\t\ttabs: 'stages_tab',\n\t\t\t\ttitle: this.label.blocked,\n\t\t\t}];\n\t\t\tfor (const [key: string, value: string] of Object.entries(this.valuesMap))\n\t\t\t{\n\t\t\t\tif (\n\t\t\t\t\t(key === INHERIT_VALUE\n\t\t\t\t\t\t&& Type.isUndefined(this.permissionIdentifier.stageField)\n\t\t\t\t\t\t&& Type.isUndefined(this.permissionIdentifier.stageCode))\n\t\t\t\t\t|| key === this.permissionIdentifier.stageCode\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tavailableValues.push({\n\t\t\t\t\tid: key,\n\t\t\t\t\tentityId: 'stages',\n\t\t\t\t\ttabs: 'stages_tab',\n\t\t\t\t\ttitle: value,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn availableValues;\n\t\t},\n\t},\n\tmethods: {\n\t\ttoEditMode(): void\n\t\t{\n\t\t\tthis.isEditMode = true;\n\t\t},\n\t\tonHideDialogEvent(): void\n\t\t{\n\t\t\tif (this.entitySelector.getTags().length === 0)\n\t\t\t{\n\t\t\t\tconst tag = {\n\t\t\t\t\tid: ANY_VALUE,\n\t\t\t\t\tentityId: 'stages',\n\t\t\t\t\ttabs: 'stages_tab',\n\t\t\t\t\ttitle: this.label.any,\n\t\t\t\t};\n\n\t\t\t\tif (this.isStageControl)\n\t\t\t\t{\n\t\t\t\t\ttag.id = INHERIT_VALUE;\n\t\t\t\t\ttag.title = this.label.inherit;\n\t\t\t\t}\n\n\t\t\t\tthis.entitySelector.addTag(tag);\n\t\t\t}\n\t\t\tthis.currentValues = this.entitySelector.getTags();\n\t\t\tthis.isEditMode = this.entitySelector.getDialog().isOpen();\n\t\t},\n\t\treadOnlyLabels(): string\n\t\t{\n\t\t\treturn this.currentValues.map((list) => list.title).join(', ');\n\t\t},\n\t\tclickSomewhere(): void\n\t\t{\n\t\t\tif (this.isEditMode && !this.entitySelector.getDialog().isOpen())\n\t\t\t{\n\t\t\t\tthis.isEditMode = false;\n\t\t\t\tthis.onHideDialogEvent();\n\t\t\t}\n\t\t},\n\t\tgetDialogOptions(): Object\n\t\t{\n\t\t\treturn {\n\t\t\t\tmultiple: true,\n\t\t\t\titems: this.availableValues,\n\t\t\t\tselectedItems: this.currentValues,\n\t\t\t\tdropdownMode: false,\n\t\t\t\theight: 300,\n\t\t\t\tshowAvatars: false,\n\t\t\t\ttabs: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'stages_tab',\n\t\t\t\t\t\ttitle: this.label.stages,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trecentTabOptions: {\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t\tevents: {\n\t\t\t\t\tonHide: this.onHideDialogEvent,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tselectorOnBeforeTagAdd(event: BaseEvent): void\n\t\t{\n\t\t\tconst selector = event.getTarget();\n\t\t\tconst { tag } = event.getData();\n\t\t\tconst singleValues: Set<string> = new Set([ANY_VALUE, INHERIT_VALUE, BLOCKED_VALUE]);\n\t\t\tif (singleValues.has(tag.getId()))\n\t\t\t{\n\t\t\t\tselector.removeTags();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tselector.getTags().forEach((item) => {\n\t\t\t\t\tif (singleValues.has(item.getId()))\n\t\t\t\t\t{\n\t\t\t\t\t\tselector.removeTag(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\tmounted(): void\n\t{\n\t\tthis.entitySelector = new TagSelector({\n\t\t\tevents: {\n\t\t\t\tonBeforeTagAdd: this.selectorOnBeforeTagAdd,\n\t\t\t\tonAfterTagRemove: this.onHideDialogEvent,\n\t\t\t},\n\t\t\tdialogOptions: this.getDialogOptions(),\n\t\t});\n\t\tthis.entitySelector.renderTo(this.$refs.entitySelectorRef);\n\t},\n\tcreated(): void\n\t{\n\t\tEvent.bind(window, 'click', this.clickSomewhere);\n\t},\n\tdestroyed(): void\n\t{\n\t\tEvent.unbind(window, 'click', this.clickSomewhere);\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-crm-perms-edit-entity_control\">\n\t\t\t<div\n\t\t\t\tclass=\"bx-crm-perms-edit-entity_control-text\"\n\t\t\t\t:class=\"{'--inherited': isInherited}\"\n\t\t\t\tdata-role=\"crm-type-relation-parent-selected-values\"\n\t\t\t\t@click.stop=\"toEditMode\"\n\t\t\t\tv-if=\"!isEditMode\"\n\t\t\t>{{ readOnlyLabels() }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tref=\"entitySelectorRef\"\n\t\t\t\tdata-role=\"crm-type-relation-parent-entity-selector\"\n\t\t\t\tv-show=\"isEditMode\"\n\t\t\t></div>\n\t\t</div>\n\t`,\n};\n","import { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { ExpandControl } from '../components/expandcontrol';\nimport { PermissionControl } from '../components/permissioncontrol';\nimport { EntityControl } from '../components/entitycontrol';\nimport { PermissionEntityIdentifier } from '../store';\n\nexport const SliderPermissions = {\n\tname: 'SliderPermissions',\n\tprops: {\n\t\tentityCode: {\n\t\t\trequired: true,\n\t\t\ttype: String,\n\t\t},\n\t},\n\tcomponents: {\n\t\tExpandControl,\n\t\tPermissionControl,\n\t\tEntityControl,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tui: {\n\t\t\t\tstageVisibilityCodes: {},\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters(['getEntitiesGroupedByPermission', 'getAssignedAttribute', 'getTransitionSettings']),\n\t\tpermissions() {\n\t\t\treturn this.getEntitiesGroupedByPermission(this.entityCode);\n\t\t},\n\t\tdisplayList() {\n\t\t\treturn this.permissions.filter((perm) => {\n\t\t\t\tif (!perm.stageField)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn this.ui.stageVisibilityCodes[perm.code];\n\t\t\t});\n\t\t},\n\t\tisShowExpandControl: () => (perm) => {\n\n\t\t\tif (perm.stageField)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!perm.isEntityStageSupport)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!perm.isPermissionStageSupport)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\tgetName: () => (perm) => {\n\t\t\tif (!perm.stageField)\n\t\t\t{\n\t\t\t\treturn perm.name;\n\t\t\t}\n\n\t\t\treturn perm.stateName;\n\t\t},\n\t\tidentifier(perm) {\n\t\t\treturn this.getIdentifier(perm.code, perm.stageField, perm.stageCode);\n\t\t},\n\t},\n\tmounted() {},\n\tmethods: {\n\t\t...mapMutations(['assignPermissionAttribute', 'assignTransitions']),\n\t\tonToggleStageVisibility(code) {\n\t\t\tif (this.ui.stageVisibilityCodes[code])\n\t\t\t{\n\t\t\t\tdelete this.ui.stageVisibilityCodes[code];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.ui.stageVisibilityCodes[code] = true;\n\t\t\t}\n\t\t},\n\t\tisExpanded(code) {\n\t\t\treturn this.ui.stageVisibilityCodes[code] || false;\n\t\t},\n\t\tisRowStageRow(perm) {\n\t\t\treturn Boolean(perm.stageField);\n\t\t},\n\t\tgetAttributeValue(identifier: PermissionEntityIdentifier) {\n\t\t\treturn this.getAssignedAttribute(identifier) || '';\n\t\t},\n\t\tonAttributeValueChanged(payload) {\n\t\t\tthis.assignPermissionAttribute({ identifier: payload.identifier, value: payload.value });\n\t\t},\n\t\tgetIdentifier(permissionCode, stageField, stageCode): PermissionEntityIdentifier {\n\t\t\treturn {\n\t\t\t\tpermissionCode,\n\t\t\t\tentityCode: this.entityCode,\n\t\t\t\tstageField,\n\t\t\t\tstageCode,\n\t\t\t};\n\t\t},\n\t\tonTransitionValuesChanged(payload) {\n\t\t\tthis.assignTransitions({ identifier: payload.identifier, values: payload.values });\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-crm-perms-edit-entity-permissions\">\n\t\t\t<div\n\t\t\t\tv-for=\"perm of displayList\"\n\t\t\t\tclass=\"bx-crm-perms-edit-entity-permissions-item\"\n\t\t\t\t:data-permission-code=\"perm.code\"\n\t\t\t\t:class=\"{'stage-item': isRowStageRow(perm)}\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-crm-perms-edit-entity-permissions-item__column\">\n\t\t\t\t\t<ExpandControl \n\t\t\t\t\t\tv-if=\"isShowExpandControl(perm)\"\n\t\t\t\t\t\t:is-expanded=\"isExpanded(perm.code)\"\n\t\t\t\t\t\t@toggle=\"onToggleStageVisibility(perm.code)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<span :class=\"{'small-label': isRowStageRow(perm)}\">\n\t\t\t\t\t\t{{ getName(perm) }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-crm-perms-edit-entity-permissions-item__column\">\n\t\t\t\t\t<PermissionControl\n\t\t\t\t\t\t:value=\"getAttributeValue(getIdentifier(perm.code, perm.stageField, perm.stageCode))\"\n\t\t\t\t\t\t:values-map=\"perm.values\"\n\t\t\t\t\t\t:permission-identifier=\"getIdentifier(perm.code, perm.stageField, perm.stageCode)\"\n\t\t\t\t\t\t@value-changed=\"onAttributeValueChanged\"\n\t\t\t\t\t\tv-if=\"perm.code !== 'TRANSITION'\"\n\t\t\t\t\t/>\n\t\t\t\t\t<EntityControl\n\t\t\t\t\t\tv-if=\"perm.code === 'TRANSITION'\"\n\t\t\t\t\t\t:values=\"getTransitionSettings(getIdentifier(perm.code, perm.stageField, perm.stageCode))\"\n\t\t\t\t\t\t@onTransitionValuesChanged=\"onTransitionValuesChanged\"\n\t\t\t\t\t\t:values-map=\"perm.values\"\n\t\t\t\t\t\t:permission-identifier=\"getIdentifier(perm.code, perm.stageField, perm.stageCode)\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import 'ui.design-tokens';\nimport './../css/slider.css';\nimport { Loc } from 'main.core';\nimport { Button } from 'ui.buttons';\nimport { SidePanel } from 'ui.sidepanel';\nimport { Layout } from 'ui.sidepanel.layout';\nimport { BitrixVue } from 'ui.vue3';\nimport { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { SliderPermissions } from './slider-permissions';\n\nexport class SliderManager\n{\n\t#url;\n\n\t#containerId;\n\n\t#sliderApplication;\n\n\tconstructor(entityCode, storage)\n\t{\n\t\tconst rnd = Math.round(Math.random() * 10000);\n\n\t\tthis.#url = `bx-crm-perms-role-edit-slider__${Date.now()}`;\n\t\tthis.#containerId = `bx-crm-perms-role-edit-slider-container__${Date.now()}__${rnd}`;\n\t\tthis.#sliderApplication = this.#createApplication(entityCode);\n\t\tthis.#sliderApplication.use(storage);\n\t}\n\n\tasync open() {\n\t\tSidePanel.Instance.open(this.#url, await this.#getOptions());\n\t}\n\n\tclose() {}\n\n\tasync #getOptions() {\n\t\tconst buttons = [\n\t\t\tnew Button({\n\t\t\t\ttext: Loc.getMessage('UI_BUTTONS_CLOSE_BTN_TEXT'),\n\t\t\t\tsize: Button.Size.MEDIUM,\n\t\t\t\tcolor: Button.Color.LIGHT_BORDER,\n\t\t\t\tdependOnTheme: false,\n\t\t\t\tonclick: () => {\n\t\t\t\t\tthis.#closeApplication();\n\t\t\t\t\tSidePanel.Instance.close();\n\t\t\t\t},\n\t\t\t}),\n\t\t];\n\n\t\tconst layout = await Layout.createLayout({\n\t\t\ttitle: '',\n\t\t\tcontent: () => `<div id=\"${this.#containerId}\"></div>`,\n\t\t\tbuttons: () => buttons,\n\t\t\tdesign: { section: false },\n\t\t});\n\n\t\treturn {\n\t\t\tcontentClassName: '',\n\t\t\tallowChangeTitle: false,\n\t\t\twidth: 800,\n\t\t\tcacheable: false,\n\t\t\tallowChangeHistory: false,\n\t\t\tlabel: '',\n\t\t\tcontentCallback: (slider) => {\n\t\t\t\treturn layout.render();\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\tonOpenComplete: () => {\n\t\t\t\t\tconst rootNode = document.getElementById(this.#containerId);\n\t\t\t\t\tthis.#sliderApplication.mount(rootNode);\n\t\t\t\t},\n\t\t\t\tonClose: () => {\n\t\t\t\t\tthis.#closeApplication();\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\t#closeApplication() {\n\t\tif (this.#sliderApplication)\n\t\t{\n\t\t\tthis.#sliderApplication.unmount();\n\t\t\tthis.#sliderApplication = null;\n\t\t}\n\t}\n\n\t#createApplication(entityCode) {\n\t\treturn BitrixVue.createApp({\n\t\t\tname: 'CrmConfigPermsRoleEditSlider',\n\t\t\tcomponents: {\n\t\t\t\tSliderPermissions,\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tentityCode: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\ttype: String,\n\t\t\t\t},\n\t\t\t},\n\t\t\tcomputed: {\n\t\t\t\t...mapGetters(['permissionEntities', 'getMainPermissionEntityByCode']),\n\t\t\t\tentity() {\n\t\t\t\t\treturn this.getMainPermissionEntityByCode(this.entityCode);\n\t\t\t\t},\n\t\t\t\tentityName() {\n\t\t\t\t\treturn this?.entity?.name || '';\n\t\t\t\t},\n\t\t\t},\n\t\t\tmethods: {\n\t\t\t\t...mapMutations(['assignPermissionAttribute']),\n\t\t\t},\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"bx-crm-perms-edit-slider\">\n\t\t\t\t\t<h1>{{ entityName }}</h1>\n\t\t\t\t\t<SliderPermissions\n\t\t\t\t\t\t:entity-code=\"entityCode\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t}, { entityCode });\n\t}\n\n\tstatic create(entity, storage) {\n\t\treturn new SliderManager(entity, storage);\n\t}\n}\n","import { Loc } from 'main.core';\nimport { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { SliderManager } from '../slider/slider-manager';\nimport { MAX_SORT_ORDER_ON_THE_DESK, PermissionEntityIdentifier, Permissions } from '../store';\nimport { PermissionControl } from './permissioncontrol';\nimport { ExpandControl } from './expandcontrol';\n\nexport default {\n\tname: 'Row',\n\tprops: {\n\t\tentity: Object,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlabels: {\n\t\t\t\tmoreName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_MORE'),\n\t\t\t},\n\t\t\tmaxOrder: 0,\n\t\t};\n\t},\n\tcomponents: {\n\t\tPermissionControl,\n\t\tExpandControl,\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'availablePermissions',\n\t\t\t'isStageEntitiesVisible',\n\t\t\t'getAssignedAttribute',\n\t\t\t'permissionsOnMainView',\n\t\t\t'groupEntityPermission',\n\t\t\t'getAvailablePermissionsOrders',\n\t\t]),\n\t\tisExpandedStages() {\n\t\t\treturn this.isStageEntitiesVisible(this.entity);\n\t\t},\n\t\tisShowMore(): boolean {\n\t\t\treturn this.maxOrder > MAX_SORT_ORDER_ON_THE_DESK;\n\t\t},\n\t},\n\tmounted()\n\t{\n\t\tlet maxOrder = 0;\n\t\tfor (const permCode of Object.keys(this.entity.permissions))\n\t\t{\n\t\t\tmaxOrder = Math.max(maxOrder, this.getAvailablePermissionsOrders[permCode] || 0);\n\t\t}\n\n\t\tthis.maxOrder = maxOrder;\n\t},\n\tmethods: {\n\t\t...mapMutations(['toggleStagesVisibility', 'assignPermissionAttribute', 'setEditMode']),\n\t\texpandChanged() {\n\t\t\tthis.toggleStagesVisibility(this.entity);\n\t\t},\n\t\topenSlider() {\n\n\t\t\tSliderManager.create(this.entity.entityCode, this.$store).open();\n\t\t},\n\t\tattributeValue(permissionCode) {\n\t\t\tconst identifier = this.getIdentifier(permissionCode);\n\n\t\t\treturn this.getAssignedAttribute(identifier) || '';\n\t\t},\n\t\tonAttributeValueChanged(payload) {\n\t\t\tthis.assignPermissionAttribute({ identifier: payload.identifier, value: payload.value });\n\t\t},\n\t\tgetIdentifier(permissionCode): PermissionEntityIdentifier {\n\t\t\treturn {\n\t\t\t\tpermissionCode,\n\t\t\t\tentityCode: this.entity.entityCode,\n\t\t\t\tstageField: this.entity.stageField,\n\t\t\t\tstageCode: this.entity.stageCode,\n\t\t\t};\n\t\t},\n\t\tisShowControl(perm: Permissions): boolean {\n\t\t\tif (!this.entity.permissions[perm.code])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.entity.stageField && perm.canAssignPermissionToStages === false)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<tr \n\t\t\tclass=\"bx-crm-perms-desk-row bx-crm-perms-edit-desk__body\"\n\t\t>\n\t\t\t<td class=\"bx-crm-perms-desk-row-item\">\n\t\t\t\t<ExpandControl \n\t\t\t\t\tv-if=\"entity.hasStages\" \n\t\t\t\t\t:is-expanded=\"isExpandedStages\" \n\t\t\t\t\t@toggle=\"expandChanged\" \n\t\t\t\t/> \n\t\t\t\t<span :class=\"{'stage-row': !!entity.stageField}\">{{ entity.name }}</span>\n\t\t\t</td>\n\t\t\t<td\n\t\t\t\tv-for=\"perm of permissionsOnMainView\"\n\t\t\t\tclass=\"bx-crm-perms-desk-row-item\"\n\t\t\t\t:data-permission-code=\"perm.code\"\n\t\t\t\t:data-permission-entity=\"entity.entityCode\"\n\t\t\t\t:data-permission-attr-field=\"entity.stageField\"\n\t\t\t\t:data-permission-attr-value=\"entity.stageCode\"\n\t\t\t>\n\t\t\t\t<PermissionControl\n\t\t\t\t\tv-if=\"isShowControl(perm)\"\n\t\t\t\t\t:value=\"attributeValue(perm.code)\"\n\t\t\t\t\t:values-map=\"entity.permissions[perm.code]\"\n\t\t\t\t\t:permission-identifier=\"getIdentifier(perm.code)\"\n\t\t\t\t\t@value-changed=\"onAttributeValueChanged\"\n\t\t\t\t></PermissionControl>\n\t\t\t</td>\n\t\t\t<td \n\t\t\t\tv-if=\"!entity.stageField\"\n\t\t\t\tclass=\"bx-crm-perms-desk-row-item\"\n\t\t\t\tdata-permission-code=\"MORE\"\n\t\t\t\t:data-permission-entity=\"entity.entityCode\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tv-if=\"isShowMore\"\n\t\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-text bx-crm-perms-desk-row-more\"\n\t\t\t\t\t@click=\"openSlider\"\n\t\t\t\t>\n\t\t\t\t\t{{ labels.moreName }}\n\t\t\t\t</span>\n\t\t\t</td>\n\t\t</tr>\n\t`,\n};\n","import 'ui.design-tokens';\nimport '../css/desk.css';\nimport { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport Row from './row';\nimport { PermissionControl } from './permissioncontrol';\nimport { Loc } from 'main.core';\nimport { MAX_SORT_ORDER_ON_THE_DESK } from './../store';\n\nexport const Desk = {\n\tname: 'Desk',\n\tcomponents: {\n\t\tPermissionControl,\n\t\tRow,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlabels: {\n\t\t\t\tallowToChangeConfigName: Loc.getMessage('CRM_PERMS_EDIT_ALLOW_TO_CHANGE_CONFIG'),\n\t\t\t\tsaveName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_SAVE'),\n\t\t\t\tapplyName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_APPLY'),\n\t\t\t\troleName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ROLE'),\n\t\t\t\tnotAllowedByTariff: Loc.getMessage('CRM_PERMS_EDIT_RESTRICTION'),\n\t\t\t\troleDelete: Loc.getMessage('CRM_PERMS_EDIT_ROLE_DELETE'),\n\t\t\t\tadditionalName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ADDITIONAL'),\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'permissionEntitiesExpanded',\n\t\t\t'permissionsOnMainView',\n\t\t\t'getAssignedAttribute',\n\t\t]),\n\t\tconfigWrite: {\n\t\t\tget() {\n\t\t\t\treturn this.getAssignedAttribute({ permissionCode: 'WRITE', entityCode: 'CONFIG' }) === 'X';\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.assignPermissionAttribute({\n\t\t\t\t\tvalue: value ? 'X' : '',\n\t\t\t\t\tidentifier: { permissionCode: 'WRITE', entityCode: 'CONFIG' },\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\tcolumnsCount() {\n\t\t\treturn MAX_SORT_ORDER_ON_THE_DESK + 2;\n\t\t},\n\n\t},\n\tmethods: {\n\t\t...mapMutations(['assignPermissionAttribute']),\n\t\tgetStages(entity) {\n\t\t\treturn entity.fields.STAGE_ID || {};\n\t\t},\n\t},\n\tmounted() {},\n\ttemplate: `\n\t\t<table class=\"bx-crm-perms-edit-desk\">\n\t\t\t<tr class=\"bx-crm-perms-desk-row bx-crm-perms-edit-desk__head\">\n\t\t\t\t<th class=\"bx-crm-perms-desk-row-item\"></th>\n\t\t\t\t<th\n\t\t\t\t\tv-for=\"perm in permissionsOnMainView\"\n\t\t\t\t\t:key=\"perm.code\"\n\t\t\t\t\tclass=\"bx-crm-perms-desk-row-item\"\n\t\t\t\t>\n\t\t\t\t\t{{ perm.name }}\n\t\t\t\t</th>\n\t\t\t\t<th class=\"bx-crm-perms-desk-row-item\">\n\t\t\t\t\t{{ labels.additionalName }}\n\t\t\t\t</th>\n\t\t\t</tr>\n\n\t\t\t<Row v-for=\"permissionEntity of permissionEntitiesExpanded\" :entity=\"permissionEntity\" />\n\n\t\t\t<tr class=\"bx-crm-perms-desk-row bx-crm-perms-edit-desk__footer\">\n\t\t\t\t<td class=\"bx-crm-perms-desk-row-item\" :colspan=\"columnsCount\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input name=\"WRITE\" type=\"checkbox\" v-model=\"configWrite\">\n\t\t\t\t\t\t{{ labels.allowToChangeConfigName }}\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t`,\n};\n","import '../css/loader.css';\nimport { Loader as BXLoader } from 'ui.loader';\n\nexport const Loader = {\n\tname: 'Loader',\n\tmounted() {\n\t\tconst loader = new BXLoader({\n\t\t\ttarget: this.$refs.loaderRef,\n\t\t\ttype: 'BULLET',\n\t\t\tsize: 'XL',\n\t\t});\n\t\tloader.render();\n\t\tloader.show();\n\t},\n\ttemplate: `\n\t\t<div>\n\t\t\t<div class=\"bx-crm-perms-edit-loader\"></div>\n\t\t\t<div class=\"bx-crm-perms-edit-loader-progress\" ref=\"loaderRef\"></div>\n\t\t</div>\n\t`,\n};\n","import './../css/main.css';\nimport { Loc } from 'main.core';\nimport { mapActions, mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { Desk } from './desk';\nimport { Loader } from './loader';\n\nexport const Main = {\n\tname: 'Main',\n\tcomponents: {\n\t\tDesk,\n\t\tLoader,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlabels: {\n\t\t\t\tsaveName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_SAVE'),\n\t\t\t\tapplyName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_APPLY'),\n\t\t\t\troleName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ROLE'),\n\t\t\t\tnotAllowedByTariff: Loc.getMessage('CRM_PERMS_EDIT_RESTRICTION'),\n\t\t\t\troleDelete: Loc.getMessage('CRM_PERMS_EDIT_ROLE_DELETE'),\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'hasTariffPermission',\n\t\t\t'getRoleName',\n\t\t\t'getRestrictionScript',\n\t\t\t'getLastErrorMessage',\n\t\t\t'getRoleId',\n\t\t\t'isSaveInProgress',\n\t\t]),\n\t\troleName: {\n\t\t\tget() {\n\t\t\t\treturn this.getRoleName;\n\t\t\t},\n\t\t\tset(val) {\n\t\t\t\tthis.setRoleName(val);\n\t\t\t},\n\t\t},\n\t\tisShowDeleteBtn(): boolean {\n\t\t\treturn this.getRoleId > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\t...mapMutations(['setRoleName']),\n\t\t...mapActions(['saveRolePermission', 'deleteRole']),\n\t\tasync onPressSave() {\n\t\t\tawait this.performSave('save');\n\t\t},\n\t\tasync onPressApply() {\n\t\t\tawait this.performSave('apply');\n\t\t},\n\t\tasync onPressDeleteRole() {\n\t\t\tif (!this.hasTariffPermission)\n\t\t\t{\n\t\t\t\tthis.executeTariffRestrictionScript();\n\t\t\t}\n\n\t\t\tawait this.deleteRole();\n\t\t},\n\t\tasync performSave(action: string) {\n\t\t\tif (!this.hasTariffPermission)\n\t\t\t{\n\t\t\t\tthis.executeTariffRestrictionScript();\n\t\t\t}\n\n\t\t\tawait this.saveRolePermission(action);\n\t\t},\n\t\texecuteTariffRestrictionScript()\n\t\t{\n\t\t\tconst script = this.getRestrictionScript;\n\n\t\t\tif (script)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-eval\n\t\t\t\teval(script);\n\t\t\t}\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-crm-perms-main\">\n\t\t\t<Loader v-if=\"isSaveInProgress\"/>\n\t\t\t<p class=\"bx-crm-perms-desk-error\" v-if=\"getLastErrorMessage\">\n\t\t\t\t{{ getLastErrorMessage }}\n\t\t\t</p>\n\t\n\t\t\t<label>\n\t\t\t\t{{ labels.roleName }}:\n\t\t\t\t<input name=\"NAME\" v-model=\"roleName\" class=\"bx-crm-perms-desk-input-role_name\">\n\t\t\t</label>\n\t\n\t\t\t<Desk/>\n\n\t\t\t<div class=\"bx-crm-perms-desk-footer\">\n\t\t\t\t<div class=\"bx-crm-perms-desk-footer-colleft\">\n\t\t\t\t\t<button @click=\"onPressSave\" class=\"bx-crm-perms-desk-btn\" name=\"save\">{{ labels.saveName }}</button>\n\t\t\t\t\t<button @click=\"onPressApply\" class=\"bx-crm-perms-desk-btn\" name=\"apply\">{{ labels.applyName }}</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-crm-perms-desk-footer-colright\">\n\t\t\t\t\t<span \n\t\t\t\t\t\tv-if=\"isShowDeleteBtn\" \n\t\t\t\t\t\tclass=\"bx-crm-perms-desk-delete\"\n\t\t\t\t\t\t@click=\"onPressDeleteRole\"\n\t\t\t\t\t>{{ labels.roleDelete }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tv-if=\"!hasTariffPermission\"\n\t\t\t\tclass=\"ui-alert ui-alert-warning\"\n\t\t\t\tstyle=\"margin: 15px 0 0 0;\"\n\t\t\t>\n\t\t\t\t<span class=\"ui-alert-message\" v-html=\"labels.notAllowedByTariff\"></span>\n\t\t\t</div>\n\n\t\t</div>\n\t`,\n};\n","import { BitrixVue } from 'ui.vue3';\nimport { createStore } from 'ui.vue3.vuex';\nimport { Main } from './components/main';\nimport store from './store';\n\ninterface EditOptions {\n\tcontainerId: string;\n}\n\nexport interface AppData {\n\trole: {\n\t\tid: number;\n\t\tname: string;\n\t},\n\tavailablePermissions: Object;\n\tpermissionEntities: Object;\n\troleAssignedPermissions: Object;\n\trestriction: {\n\t\thasPermission: boolean;\n\t\trestrictionScript: ?string;\n\t};\n\troleAssignedSettings: Object;\n}\n\nexport class EditApp\n{\n\t#options: EditOptions;\n\n\t#application = null;\n\n\tconstructor(options: EditOptions)\n\t{\n\t\tthis.#options = options;\n\t}\n\n\tstart(data: AppData) {\n\t\tconst storage = createStore(store());\n\t\tthis.#application = BitrixVue.createApp({\n\t\t\tname: 'CrmConfigPermsRoleEdit',\n\t\t\tcomponents: { Main },\n\t\t\ttemplate: `\n\t\t\t\t<Main/>\n\t\t\t`,\n\t\t});\n\n\t\tstorage.commit('setInitData', data);\n\t\tthis.#application.use(storage);\n\n\t\tconst rootNode = document.getElementById(this.#options.containerId);\n\t\tthis.#application.mount(rootNode);\n\t}\n}\n"],"names":["ExpandControl","name","props","entity","Object","isExpanded","Boolean","emits","methods","toggleState","this","$emit","template","PermissionControl","value","type","String","required","valuesMap","permissionIdentifier","data","label","inherit","Loc","getMessage","isEditMode","computed","mapGetters","currentPermissionName","permissionCode","isReadOnlyMode","isStageControl","model","getParentName","isInherited","get","set","identifier","stageField","parentChose","getAssignedAttribute","entityCode","toEditMode","e","stopPropagation","Event","bind","window","windowClickListener","event","target","$refs","componentRef","composedPath","includes","unbind","entityHash","stageCode","hashIdentifier","hash","btoa","permissionEntities","state","desk","permissionEntitiesExpanded","filter","ui","expandedStageEntities","getMainPermissionEntityByCode","find","item","getEntitiesGroupedByPermission","getters","_step","rootEntity","entities","permissions","permCode","hasOwn","values","permissionConfig","availablePermissions","perm","code","sortOrder","MAX_SORT_ORDER_ON_THE_DESK","push","isEntityStageSupport","hasStages","isPermissionStageSupport","canAssignPermissionToStages","stateName","parseInt","keys","_iterator","sort","a","b","roleAssignedPermissions","_state$roleAssignedPe","_state$roleAssignedPe2","_state$roleAssignedPe3","_state$roleAssignedPe4","Type","isUndefined","_state$roleAssignedPe5","_state$roleAssignedPe6","_state$roleAssignedPe7","isStageEntitiesVisible","permissionsOnMainView","hasTariffPermission","restriction","hasPermission","getRestrictionScript","restrictionScript","getAvailablePermissionsOrders","availablePermissionsOrders","getSaveData","toRemove","toChange","touched","touchedAttributes","touchedTransitions","settings","length","role","id","appendDefaultAttributesPermissionsToChange","appendDefaultTransitionPermissionsToChange","getRoleName","getRoleId","isSaveInProgress","getLastErrorMessage","lastErrorMessage","setSaveInProgress","getTransitionSettings","transitions","_state$transitions","_state$transitions$en","_state$transitions$en2","_state$transitions2","_state$transitions2$e","forEach","permission","isString","v","entries","setInitData","roleAssignedSettings","map","originalAttributes","structuredClone","originalTransitions","assignPermissionAttribute","payload","setAssignedAttributes","commit","assignTransitions","setAssignedTransitions","setAttributeTouched","original","_state$touched$origin","_state$touched$origin2","_state$touched$origin3","_state$touched$origin4","_state$touched$origin5","_state$touched$origin6","_state$touched$origin7","setTransitionsTouched","_state$touched$origin8","_state$touched$origin9","_state$touched$origin10","_state$touched$origin11","_state$touched$origin12","isArray","isArraysEqual","resetTouchedAttributes","JSON","parse","stringify","resetTouchedTransitions","toggleStagesVisibility","setRoleName","newName","setLastErrorMessage","message","obj","clearEmptyNodes","node","nodeName","parent","isObject","childName","childNode","isObjectEmpty","first","second","toString","saveRolePermission","action","_context","BX","ajax","runComponentAction","mode","json","response","redirectUrl","_response$data","roleUrl","_response$data2","location","href","errMessage","_err$data","deleteRole","_context2","roleId","_response$data3","_err$data2","initState","mutations","actions","ANY_VALUE","BLOCKED_VALUE","INHERIT_VALUE","EntityControl","entitySelector","Array","any","blocked","stages","valuesData","currentValues","some","el","availableValues","_this","list","entityId","tabs","title","key","onHideDialogEvent","getTags","tag","addTag","getDialog","isOpen","readOnlyLabels","join","clickSomewhere","getDialogOptions","multiple","items","selectedItems","dropdownMode","height","showAvatars","recentTabOptions","visible","events","onHide","selectorOnBeforeTagAdd","selector","getTarget","getData","singleValues","Set","has","getId","removeTags","removeTag","mounted","TagSelector","onBeforeTagAdd","onAfterTagRemove","dialogOptions","renderTo","entitySelectorRef","created","destroyed","SliderPermissions","components","stageVisibilityCodes","displayList","isShowExpandControl","getName","getIdentifier","mapMutations","onToggleStageVisibility","isRowStageRow","getAttributeValue","onAttributeValueChanged","onTransitionValuesChanged","SliderManager","storage","babelHelpers","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","rnd","Math","round","random","Date","now","use","SidePanel","Instance","open","_getOptions3","buttons","Button","text","size","Size","MEDIUM","color","Color","LIGHT_BORDER","dependOnTheme","onclick","_classPrivateMethodGet","close","Layout","createLayout","content","design","section","layout","contentClassName","allowChangeTitle","width","cacheable","allowChangeHistory","contentCallback","slider","render","onOpenComplete","rootNode","document","getElementById","mount","onClose","unmount","BitrixVue","createApp","entityName","_this$entity","labels","moreName","maxOrder","isExpandedStages","isShowMore","max","expandChanged","openSlider","create","$store","attributeValue","isShowControl","Desk","Row","allowToChangeConfigName","saveName","applyName","roleName","notAllowedByTariff","roleDelete","additionalName","configWrite","columnsCount","getStages","fields","STAGE_ID","Loader","loader","BXLoader","loaderRef","show","Main","val","isShowDeleteBtn","mapActions","onPressSave","performSave","onPressApply","_this2","onPressDeleteRole","_this3","executeTariffRestrictionScript","_context3","_this4","_context4","script","eval","EditApp","options","createStore","store","containerId"],"mappings":"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"}