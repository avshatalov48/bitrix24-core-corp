this.BX=this.BX||{};this.BX.Crm=this.BX.Crm||{};this.BX.Crm.Config=this.BX.Crm.Config||{};(function(t,e,n,i,s,r){"use strict";var o={data:function t(){return{isEnabled:this.active,switcher:null}},mounted:function t(){new BX.UI.Switcher({node:this.$refs.switcher,checked:this.isEnabled,handlers:{toggled:this.onSwitcherToggle.bind(this)}});BX.UI.Hint.init(this.$refs.title)},methods:{onSwitcherToggle:function t(){this.isEnabled=!this.isEnabled;this.$emit("toggle",this.isEnabled)}},props:{title:String,switchable:{type:Boolean,default:false},active:{type:Boolean,default:false},hint:{type:String,default:""}},template:'\n\t\t<div>\n\t\t\t<div class="ui-slider-heading-4 settings-section-header">\n\t\t\t\t<div v-if="switchable">\n\t\t\t\t\t<span ref="switcher" class="ui-switcher"></span>\n\t\t\t\t</div>\n\t\t\t\t<div ref="title">\n\t\t\t\t\t{{ title }}\n\t\t\t\t\t<span\n\t\t\t\t\t\tv-if="hint !== \'\'"\n\t\t\t\t\t\tclass="ui-hint"\n\t\t\t\t\t\tdata-hint-html\n\t\t\t\t\t\tdata-hint-interactivity\n\t\t\t\t\t\t:data-hint="hint"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class="ui-hint-icon"></span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div v-if="isEnabled">\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n\t\t</div>\n\t'};var c={template:'\n\t\t<div>\n\t\t\t<div class="sms-container">\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n\t\t</div>\n\t'};function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){babelHelpers.defineProperty(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var S={data:function t(){return{isListShowed:false}},mounted:function t(){var e=this;document.addEventListener("click",(function(){e.isListShowed=false}))},methods:l(l(l({},r.mapGetters(["getServiceLink","getActiveSmsServices"])),r.mapMutations(["selectSMSService"])),{},{switchService:function t(e){this.isListShowed=false;this.selectSMSService(e)},switchVisibility:function t(){this.isListShowed=!this.isListShowed},openSmsServicesSlider:function t(){var e=this;var n={cacheable:false,allowChangeHistory:false,requestMethod:"get",width:700,events:{onClose:function t(){e.$emit("onConnectSliderClosed")}}};BX.SidePanel.Instance.open(this.getServiceLink(),n)}}),computed:l(l({},r.mapGetters(["getSelectedService"])),{},{getListClassname:function t(){if(!this.isListShowed){return"sms-provider-selector-hided-list"}else{return"sms-provider-selector-list"}}}),template:'\n\t\t<div style="display: inline-block; vertical-align: top">\n\t\t\t<span class="sms-provider-selector" @click.stop="switchVisibility">{{getSelectedService[\'NAME\']}}</span>\n\t\t\t<ul :class="getListClassname" @click.stop>\n\t\t\t\t<li v-for="provider in getActiveSmsServices()" @click="switchService(provider[\'ID\'])" v-show="provider[\'ID\'] !== getSelectedService[\'ID\']">{{ provider[\'NAME\'] }}</li>\n\t\t\t\t<li @click="openSmsServicesSlider">{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_PROVIDER_CONNECT_MORE\') }}</li>\n\t\t\t</ul>\n\t\t</div>\n\t'};function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function d(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){babelHelpers.defineProperty(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var p={data:function t(){return{popup:null}},components:{SettingsSection:o,Sms:c,SmsProviderSelect:S,Notification:Notification},computed:d(d({},r.mapGetters(["isSmsSendingActive","isAnyServiceEnabled","isNotificationsEnabled"])),{},{getSectionTitle:function t(){return this.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_TITLE")},getSectionHint:function t(){var e={"#LINK_START#":'<a onclick="top.BX.Helper.show(\'redirect=detail&code=17399056\')" style="cursor: pointer">',"#LINK_END#":"</a>"};return this.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_HINT_TEXT",e)},getNotificationConnectHint:function t(){var e={"#LINK_START#":'<span onclick="top.BX.Helper.show(\'redirect=detail&code=17399068\')" class="sms-provider-selector">',"#LINK_END#":"</span>"};return this.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_PROVIDER_UNC_CONNECTED",e)}}),methods:d(d(d({},r.mapMutations(["setSmsSendingActive","updateServicesList","updateNotificationsEnabled"])),r.mapGetters(["getPaymentSlipLinkScheme","getNotificationsLink","getServiceLink"])),{},{onServiceConnectSliderClosed:function t(){var e=this;i.ajax.runComponentAction("bitrix:crm.config.terminal.settings","updateServicesList").then((function(t){if(t.status==="success"){var n=t.data;if(n!==null&&n!==void 0&&n.isUCNEnabled){e.updateNotificationsEnabled(n.isUCNEnabled)}e.updateServicesList(n.activeSmsServices)}}))},onSectionToggled:function t(){this.setSmsSendingActive(!this.isSmsSendingActive)},getSmsMessage:function t(){var e='<span class="sms-link-path">'.concat(this.getPaymentSlipLinkScheme(),'</span><span class="sms-link-plug">xxxxx</span>')+" ";var n=this.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_MESSAGE_TEMPLATE");return i.Text.encode(n).replace(/#PAYMENT_SLIP_LINK#/g,e)},getSmsProviderMessage:function t(){var e="<span>Dummy SMS</span>";var n=this.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_SELECT");return i.Text.encode(n).replace(/#SMS_SERVICE#/g,e)},onSmsMouseenter:function t(e){var n=this;var i=e.target;var r=this.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_MESSAGE_HINT");if(this.popup){this.popup.destroy();this.popup=null}this.popup=new s.Popup(null,i,{events:{onPopupClose:function t(){n.popup.destroy();n.popup=null}},darkMode:true,content:r,offsetLeft:i.offsetWidth});this.popup.show()},onSmsMouseleave:function t(){this.popup.destroy()},onNotificationsConnectLinkClick:function t(){var e=this;var n=this.getNotificationsLink();if(n===null){return}if(n.type==="connect_link"){var i={cacheable:false,allowChangeHistory:false,requestMethod:"get",width:700,events:{onClose:function t(){e.onServiceConnectSliderClosed()}}};BX.SidePanel.Instance.open(n.value,i)}else if(n.type==="ui_helper"){top.BX.UI.InfoHelper.show(n.value)}},onProviderSmsNotificationClick:function t(){var e=this;var n={cacheable:false,allowChangeHistory:false,requestMethod:"get",width:700,events:{onClose:function t(){e.onServiceConnectSliderClosed()}}};BX.SidePanel.Instance.open(this.getServiceLink(),n)}}),template:'\n\t\t<SettingsSection \n\t\t\t:title="getSectionTitle"\n\t\t\t:switchable="true"\n\t\t\tv-on:toggle="onSectionToggled"\n\t\t\t:active="isSmsSendingActive"\n\t\t\t:hint="getSectionHint"\n\t\t>\n\t\t\t<div v-if="isAnyServiceEnabled">\n\t\t\t\t<div class="sms-message-info">\n\t\t\t\t\t<span class="sms-message-info-text">{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_INFO\') }}</span>\n\t\t\t\t\t<Sms>\n\t\t\t\t\t\t<span \n\t\t\t\t\t\t\tv-html="getSmsMessage()"\n\t\t\t\t\t\t\tv-on:mouseenter="onSmsMouseenter($event)"\n\t\t\t\t\t\t\tv-on:mouseleave="onSmsMouseleave"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t</Sms>\n\t\t\t\t\t<div class="sms-provider-selector-block">\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tv-html="getNotificationConnectHint"\n\t\t\t\t\t\t\tv-if="isNotificationsEnabled"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div v-else>\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_SELECT\') }}\n\t\t\t\t\t\t\t<SmsProviderSelect v-on:onConnectSliderClosed="onServiceConnectSliderClosed"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-else>\n\t\t\t\t<span class="sms-provider-empty-provider-list-text" v-if="(getNotificationsLink() !== null) && (getServiceLink() !== \'\')">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_ONBOARDING_TEXT\') }}\n\t\t\t\t</span>\n\t\t\t\t<span class="sms-provider-empty-provider-list-text" v-else-if="(getNotificationsLink() === null) && (getServiceLink() !== \'\')">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_ONBOARDING_ONLY_SMS_SERVICES_TEXT\') }}\n\t\t\t\t</span>\n\t\t\t\t<button class="ui-btn ui-btn-md ui-btn-primary" @click="onNotificationsConnectLinkClick" v-if="getNotificationsLink() !== null">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_UNC_CONNECT_BTN\') }}\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<button class="ui-btn ui-btn-md ui-btn-light-border" @click="onProviderSmsNotificationClick" v-if="(getNotificationsLink() !== null) && (getServiceLink() !== \'\')">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_PROVIDER_CONNECT_BTN\') }}\n\t\t\t\t</button>\n\t\t\t\t<button class="ui-btn ui-btn-md ui-btn-primary" @click="onProviderSmsNotificationClick" v-else-if="(getNotificationsLink() === null) && (getServiceLink() !== \'\')">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SECTION_SMS_SERVICE_PROVIDER_CONNECT_BTN\') }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</SettingsSection>\n\t'};function v(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function g(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?v(Object(n),!0).forEach((function(e){babelHelpers.defineProperty(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):v(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var f={components:{SmsSettingsSection:p},computed:g(g({},r.mapGetters({isSettingsChanged:"isChanged",isSaving:"isSaving"})),{},{buttonsPanelClass:function t(){return{"ui-button-panel-wrapper":true,"ui-pinner":true,"ui-pinner-bottom":true,"ui-pinner-full-width":true,"ui-button-panel-wrapper-hide":!this.isSettingsChanged}},saveButtonClasses:function t(){return{"ui-btn":true,"ui-btn-success":true,"ui-btn-wait":this.isSaving}}}),methods:{save:function t(){this.$emit("onSave")},cancel:function t(){this.$emit("onCancel")}},template:'\n\t\t<div class="settings-container">\n\t\t\t\x3c!-- Settings title --\x3e\n\t\t\t<div class="ui-slider-heading-4" style="margin-bottom: 40px">\n\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SUBTITLE_NOTIFICATION\') }}\n\t\t\t</div>\n\t\t\t\n\t\t\t\x3c!-- Settings content --\x3e\n\t\t\t<div class="settings-section-list">\n\t\t\t\t<SmsSettingsSection />\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t\x3c!-- Save panel --\x3e\n\t\t\t<div\n\t\t\t\t:class="buttonsPanelClass"\n\t\t\t>\n\t\t\t\t<div class="ui-button-panel ui-button-panel-align-center">\n\t\t\t\t\t<button\n\t\t\t\t\t\t@click="save"\n\t\t\t\t\t\t:class="saveButtonClasses"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_SAVE_BTN\') }}\n\t\t\t\t\t</button>\n\t\t\t\t\t<a\n\t\t\t\t\t\t@click="cancel"\n\t\t\t\t\t\tclass="ui-btn ui-btn-link"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'CRM_CFG_TERMINAL_SETTINGS_CANCEL_BTN\') }}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t'};function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function m(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){babelHelpers.defineProperty(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function b(t,e){C(t,e);e.add(t)}function E(t,e,n){C(t,e);e.set(t,n)}function C(t,e){if(e.has(t)){throw new TypeError("Cannot initialize the same private elements twice on an object")}}function _(t,e,n){if(!e.has(t)){throw new TypeError("attempted to get private field on non-instance")}return n}var N=new WeakMap;var T=new WeakSet;var O=function(){function t(e){babelHelpers.classCallCheck(this,t);b(this,T);E(this,N,{writable:true,value:void 0});this.rootNode=document.getElementById(e.rootNodeId);this.terminalSettings=e.terminalSettings;this.store=_(this,T,I).call(this,e.terminalSettings)}babelHelpers.createClass(t,[{key:"attachTemplate",value:function t(){babelHelpers.classPrivateFieldSet(this,N,e.BitrixVue.createApp({components:{TerminalSettings:f},computed:m({},r.mapGetters(["isChanged","isSaving","getChangedValues"])),methods:m(m({},r.mapMutations(["setSaving"])),{},{onSettingsSave:function t(){var e=this;if(!this.isChanged||this.isSaving){return}this.setSaving(true);i.ajax.runComponentAction("bitrix:crm.config.terminal.settings","saveSettings",{data:{changedValues:this.getChangedValues}}).then((function(){e.setSaving(false);BX.SidePanel.Instance.close()}),(function(){e.setSaving(false);BX.UI.Notification.Center.notify({content:e.$Bitrix.Loc.getMessage("CRM_CFG_TERMINAL_SETTINGS_ON_SAVE_ERROR"),width:350,autoHideDelay:4e3})}))},onSettingsCancel:function t(){BX.SidePanel.Instance.close()}}),template:'\n\t\t\t\t<TerminalSettings @onSave="onSettingsSave" @onCancel="onSettingsCancel"/>\n\t\t\t'}));babelHelpers.classPrivateFieldGet(this,N).use(this.store);babelHelpers.classPrivateFieldGet(this,N).mount(this.rootNode)}}]);return t}();function I(t){var e={state:function e(){return m(m({},t),{},{isSaving:false,changedValues:{}})},getters:{isChanged:function t(e){return Object.keys(e.changedValues).length!==0},isSmsSendingActive:function t(e){if(e.changedValues.isSmsSendingEnabled!==undefined){return e.changedValues.isSmsSendingEnabled}else{return e.isSmsSendingEnabled}},isAnyServiceEnabled:function t(e){return e.activeSmsServices.length>0||e.isNotificationsEnabled},isNotificationsEnabled:function t(e){return e.isNotificationsEnabled},getPaymentSlipLinkScheme:function t(e){return e.paymentSlipLinkScheme},getNotificationsLink:function t(e){if(i.Type.isObject(e.connectNotificationsLink)){return e.connectNotificationsLink}return null},isNotificationAvailableToConnect:function t(e){return this.getNotificationsLink(e)!==null},getServiceLink:function t(e){if(i.Type.isString(e.connectServiceLink)){return e.connectServiceLink}return""},getSelectedService:function t(e){if(i.Type.isString(e.changedValues.selectedServiceId)){return e.activeSmsServices.find((function(t){return t["ID"]===e.changedValues.selectedServiceId}))}return e.activeSmsServices.find((function(t){return t["SELECTED"]}))},getActiveSmsServices:function t(e){return e.activeSmsServices},getChangedValues:function t(e){return e.changedValues},isSaving:function t(e){return e.isSaving}},mutations:{setSmsSendingActive:function t(e,n){if(e.changedValues.isSmsSendingEnabled!==undefined&&n===e.isSmsSendingEnabled){delete e.changedValues.isSmsSendingEnabled}else{e.isChanged=true;e.changedValues.isSmsSendingEnabled=n}},selectSMSService:function t(e,n){if(e.activeSmsServices.find((function(t){return t["SELECTED"]}))["ID"]===n){delete e.changedValues.selectedServiceId}else{e.changedValues.selectedServiceId=n}},setSaving:function t(e,n){if(i.Type.isBoolean(n)){e.isSaving=n}},updateServicesList:function t(e,n){e.activeSmsServices=n},updateNotificationsEnabled:function t(e,n){e.isNotificationsEnabled=n}}};return r.createStore(e)}t.App=O})(this.BX.Crm.Config.Terminal=this.BX.Crm.Config.Terminal||{},BX.Vue3,BX,BX,BX.Main,BX.Vue3.Vuex);
//# sourceMappingURL=terminal.bundle.map.js