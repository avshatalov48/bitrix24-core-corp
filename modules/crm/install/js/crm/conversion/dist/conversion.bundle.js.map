{"version":3,"file":"conversion.bundle.js","sources":["../src/config-item.js","../src/scheme-item.js","../src/scheme.js","../src/config.js","../src/category-repository.js","../src/converter.js","../src/entity-selector.js","../src/manager.js","../src/scheme-selector.js","../src/index.js"],"sourcesContent":["import { Type } from 'main.core';\n\nexport type ConfigItemData = {\n\tentityTypeId: number,\n\tactive: boolean,\n\tenableSync: boolean,\n\tinitData: Object,\n\ttitle: string,\n};\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class ConfigItem\n{\n\t#active: boolean;\n\t#enableSync: boolean;\n\t#initData: Object = {};\n\t#entityTypeId: number;\n\t#title: string;\n\n\tconstructor(params: ConfigItemData)\n\t{\n\t\tthis.#entityTypeId = Number(params.entityTypeId);\n\t\tthis.#active = this.#internalizeBooleanValue(params.active);\n\t\tthis.#enableSync = this.#internalizeBooleanValue(params.enableSync);\n\t\tif (Type.isPlainObject(params.initData))\n\t\t{\n\t\t\tthis.#initData = params.initData;\n\t\t}\n\t\tthis.#title = String(params.title);\n\t}\n\n\t#internalizeBooleanValue(value: any): boolean\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\treturn value;\n\t\t}\n\n\t\tif (Type.isString(value))\n\t\t{\n\t\t\treturn (value === 'Y');\n\t\t}\n\n\t\treturn Boolean(value);\n\t}\n\n\texternalize(): Object\n\t{\n\t\treturn {\n\t\t\tentityTypeId: this.getEntityTypeId(),\n\t\t\ttitle: this.getTitle(),\n\t\t\tinitData: this.getInitData(),\n\t\t\tactive: this.isActive() ? 'Y' : 'N',\n\t\t\tenableSync: this.isEnableSync() ? 'Y' : 'N',\n\t\t};\n\t}\n\n\tisActive(): boolean\n\t{\n\t\treturn this.#active;\n\t}\n\n\tsetActive(active: boolean): ConfigItem\n\t{\n\t\tthis.#active = active;\n\n\t\treturn this;\n\t}\n\n\tisEnableSync(): boolean\n\t{\n\t\treturn this.#enableSync;\n\t}\n\n\tsetEnableSync(enableSync: boolean): ConfigItem\n\t{\n\t\tthis.#enableSync = enableSync;\n\n\t\treturn this;\n\t}\n\n\tgetInitData(): Object\n\t{\n\t\treturn this.#initData || {};\n\t}\n\n\tsetInitData(data: Object): ConfigItem\n\t{\n\t\tthis.#initData = data;\n\n\t\treturn this;\n\t}\n\n\tgetEntityTypeId(): number\n\t{\n\t\treturn this.#entityTypeId;\n\t}\n\n\tgetTitle(): string\n\t{\n\t\treturn this.#title;\n\t}\n\n\tsetTitle(title: string): ConfigItem\n\t{\n\t\tthis.#title = title;\n\n\t\treturn this;\n\t}\n}\n","import { Type } from 'main.core';\n\nexport type SchemeItemData = {\n\tid: string,\n\tname: string,\n\tentityTypeIds: number[],\n\tphrase: string,\n\tavailabilityLock?: string,\n};\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class SchemeItem\n{\n\t#id: string;\n\t#name: string;\n\t#entityTypeIds: number[];\n\t#phrase: string;\n\t#availabilityLock: string;\n\n\tconstructor(params: SchemeItemData)\n\t{\n\t\tthis.#id = String(params.id);\n\t\tthis.#name = String(params.name);\n\t\tthis.#phrase = String(params.phrase);\n\t\tthis.#availabilityLock = String(params.availabilityLock);\n\n\t\tthis.#entityTypeIds = [];\n\t\tif (Type.isArray(params.entityTypeIds))\n\t\t{\n\t\t\tparams.entityTypeIds.forEach((entityTypeId) => {\n\t\t\t\tthis.#entityTypeIds.push(Number(entityTypeId));\n\t\t\t});\n\t\t}\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.#name;\n\t}\n\n\tgetEntityTypeIds(): number[]\n\t{\n\t\treturn this.#entityTypeIds;\n\t}\n\n\tgetPhrase(): string\n\t{\n\t\treturn this.#phrase;\n\t}\n\n\tgetAvailabilityLock(): string\n\t{\n\t\treturn this.#availabilityLock;\n\t}\n}\n","import { Text, Type } from 'main.core';\nimport type { SchemeItemData } from './scheme-item';\nimport { SchemeItem } from './scheme-item';\n\nexport type SchemeData = {\n\tcurrentItemId: string,\n\titems: SchemeItemData[],\n}\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class Scheme\n{\n\t#currentItemId: string;\n\t#items: SchemeItem[] = [];\n\n\tconstructor(currentItemId: string | null, items: SchemeItem[])\n\t{\n\t\tthis.#currentItemId = Type.isNull(currentItemId) ? currentItemId : String(currentItemId);\n\n\t\tif (Type.isArray(items))\n\t\t{\n\t\t\titems.forEach((item) => {\n\t\t\t\tif (item instanceof SchemeItem)\n\t\t\t\t{\n\t\t\t\t\tthis.#items.push(item);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-typeof\n\t\t\t\t\t\t`SchemeItem is invalid in Scheme constructor. Expected instance of SchemeItem, got ${typeof item}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic create(params: SchemeData): Scheme\n\t{\n\t\tconst schemeItems = [];\n\t\tparams.items.forEach((item: SchemeItemData) => {\n\t\t\tschemeItems.push(new SchemeItem(item));\n\t\t});\n\n\t\treturn new Scheme(params.currentItemId, schemeItems);\n\t}\n\n\tgetCurrentItem(): ?SchemeItem\n\t{\n\t\tif (!this.#items || this.#items.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tconst item = this.getItemById(this.#currentItemId);\n\n\t\treturn item || this.#items[0];\n\t}\n\n\tsetCurrentItemId(currentItemId: string)\n\t{\n\t\tthis.#currentItemId = currentItemId;\n\t}\n\n\tgetItems(): SchemeItem[]\n\t{\n\t\treturn this.#items;\n\t}\n\n\tgetItemById(itemId: string): ?SchemeItem\n\t{\n\t\tfor (const item of this.#items)\n\t\t{\n\t\t\tif (item.getId() === itemId)\n\t\t\t{\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetItemForSingleEntityTypeId(entityTypeId: number): ?SchemeItem\n\t{\n\t\tfor (const item of this.#items)\n\t\t{\n\t\t\tconst entityTypeIds = item.getEntityTypeIds();\n\t\t\tif (entityTypeIds.length === 1 && [...entityTypeIds][0] === entityTypeId)\n\t\t\t{\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetItemForEntityTypeIds(entityTypeIds: number[]): ?SchemeItem\n\t{\n\t\tconst makeIntSet = (input: Array): Set<number> => {\n\t\t\t// Set - to remove possible duplicates in the array\n\t\t\treturn new Set(input.map((id) => Text.toInteger(id)));\n\t\t};\n\n\t\tconst targetEntityTypeIds = [...makeIntSet(entityTypeIds)];\n\n\t\tfor (const item of this.#items)\n\t\t{\n\t\t\tconst itemSet = makeIntSet(item.getEntityTypeIds());\n\n\t\t\tif (targetEntityTypeIds.length !== itemSet.size)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst notFoundTargetIds = targetEntityTypeIds.filter((entityTypeId) => !itemSet.has(entityTypeId));\n\n\t\t\tif (notFoundTargetIds.length <= 0)\n\t\t\t{\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetAllEntityTypeIds(): number[]\n\t{\n\t\tconst entityTypeIds = new Set();\n\t\tfor (const item of this.#items)\n\t\t{\n\t\t\tfor (const entityTypeId of item.getEntityTypeIds())\n\t\t\t{\n\t\t\t\tentityTypeIds.add(entityTypeId);\n\t\t\t}\n\t\t}\n\n\t\treturn [...entityTypeIds];\n\t}\n}\n","import { Type } from 'main.core';\nimport type { ConfigItemData } from './config-item';\nimport { ConfigItem } from './config-item';\nimport { Scheme } from './scheme';\nimport { SchemeItem } from './scheme-item';\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class Config\n{\n\t#entityTypeId: number;\n\t#items: ConfigItem[] = [];\n\t#scheme: Scheme;\n\n\tconstructor(\n\t\tentityTypeId: number,\n\t\titems: ConfigItem[],\n\t\tscheme: Scheme,\n\t)\n\t{\n\t\tthis.#entityTypeId = Number(entityTypeId);\n\n\t\tif (Type.isArray(items))\n\t\t{\n\t\t\titems.forEach((item) => {\n\t\t\t\tif (item instanceof ConfigItem)\n\t\t\t\t{\n\t\t\t\t\tthis.#items.push(item);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-typeof\n\t\t\t\t\t\t`ConfigItem is invalid in Config constructor. Expected instance of ConfigItem, got ${typeof item}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (scheme instanceof Scheme)\n\t\t{\n\t\t\tthis.#scheme = scheme;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-typeof\n\t\t\tconsole.error(`Scheme is invalid in Config constructor. Expected instance of Scheme, got ${typeof scheme}`);\n\t\t}\n\t}\n\n\tstatic create(entityTypeId: number, items: ConfigItemData[], scheme: Scheme): Config\n\t{\n\t\tconst configItems = [];\n\t\titems.forEach((item: ConfigItemData) => {\n\t\t\tconfigItems.push(new ConfigItem(item));\n\t\t});\n\n\t\treturn new Config(entityTypeId, configItems, scheme);\n\t}\n\n\tgetEntityTypeId(): number\n\t{\n\t\treturn this.#entityTypeId;\n\t}\n\n\tgetItems(): ConfigItem[]\n\t{\n\t\treturn this.#items;\n\t}\n\n\tgetActiveItems(): ConfigItem[]\n\t{\n\t\treturn this.#items.filter((item) => item.isActive());\n\t}\n\n\tgetScheme(): Scheme\n\t{\n\t\treturn this.#scheme;\n\t}\n\n\tupdateFromSchemeItem(schemeItem: SchemeItem = null): Config\n\t{\n\t\tlet selectedSchemeItem = null;\n\t\tif (schemeItem)\n\t\t{\n\t\t\tselectedSchemeItem = schemeItem;\n\t\t\tthis.getScheme().setCurrentItemId(schemeItem.getId());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tselectedSchemeItem = this.getScheme().getCurrentItem();\n\t\t}\n\n\t\tconst activeEntityTypeIds = selectedSchemeItem.getEntityTypeIds();\n\n\t\tthis.#items.forEach((item) => {\n\t\t\tconst isActive = activeEntityTypeIds.includes(item.getEntityTypeId());\n\t\t\titem.setEnableSync(isActive);\n\t\t\titem.setActive(isActive);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tgetItemByEntityTypeId(entityTypeId: number): ?ConfigItem\n\t{\n\t\tfor (const item of this.#items)\n\t\t{\n\t\t\tif (item.getEntityTypeId() === entityTypeId)\n\t\t\t{\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\texternalize(): Object\n\t{\n\t\tconst data = {};\n\n\t\tthis.getItems().forEach((item) => {\n\t\t\tdata[BX.CrmEntityType.resolveName(item.getEntityTypeId()).toLowerCase()] = item.externalize();\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tupdateItems(items: ConfigItemData[]): self\n\t{\n\t\tthis.#items = [];\n\t\titems.forEach((item) => {\n\t\t\tthis.#items.push(new ConfigItem(item));\n\t\t});\n\n\t\treturn this;\n\t}\n}\n","import { CategoryModel } from 'crm.category-model';\nimport { ajax as Ajax, Extension } from 'main.core';\nimport type { SettingsCollection } from 'main.core.collections';\n\nlet instance = null;\n\nexport class CategoryRepository\n{\n\t#extensionSettings: SettingsCollection = Extension.getSettings('crm.conversion');\n\n\t#storage: Map<number, CategoryModel[]> = new Map();\n\n\tstatic get Instance(): CategoryRepository\n\t{\n\t\tif (instance === null)\n\t\t{\n\t\t\tinstance = new CategoryRepository();\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tisCategoriesEnabled(entityTypeId: number): boolean\n\t{\n\t\treturn Boolean(this.#extensionSettings.get(`isCategoriesEnabled.${entityTypeId}`, false));\n\t}\n\n\tgetCategories(entityTypeId: number): Promise<CategoryModel[]>\n\t{\n\t\tif (this.#storage.has(entityTypeId))\n\t\t{\n\t\t\treturn Promise.resolve(this.#storage.get(entityTypeId));\n\t\t}\n\n\t\treturn Ajax.runAction('crm.conversion.getDstCategoryList', {\n\t\t\tdata: {\n\t\t\t\tentityTypeId,\n\t\t\t},\n\t\t}).then(({ data }) => {\n\t\t\tconst models = [];\n\n\t\t\tdata?.categories?.forEach((categoryData) => {\n\t\t\t\tmodels.push(new CategoryModel(categoryData));\n\t\t\t});\n\n\t\t\tthis.#storage.set(entityTypeId, models);\n\n\t\t\treturn models;\n\t\t});\n\t}\n}\n","import { type CategoryModel } from 'crm.category-model';\nimport { Builder, Dictionary, type EntityConvertEvent, type EventStatus } from 'crm.integration.analytics';\nimport { ajax as Ajax, Dom, Loc, Tag, Text, Type, Uri } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport { Popup } from 'main.popup';\nimport { sendData as sendAnalyticsData } from 'ui.analytics';\nimport { Button, ButtonColor } from 'ui.buttons';\nimport { MessageBox } from 'ui.dialogs.messagebox';\nimport 'ui.forms';\nimport { CategoryRepository } from './category-repository';\nimport { Config } from './config';\nimport type { ConfigItemData } from './config-item';\nimport { ConfigItem } from './config-item';\nimport { SchemeItem } from './scheme-item';\n\ntype ResolveResult = {\n\tisCanceled: boolean, // default false\n\tisFinished: boolean, // default true\n};\n\ntype CategorySelectResult = ResolveResult & {\n\tcategory?: CategoryModel | null,\n};\n\nexport type ConverterParams = {\n\tid?: string,\n\tserviceUrl: string,\n\toriginUrl: string,\n\tisRedirectToDetailPageEnabled?: boolean,\n\tmessages: Object<string, string>,\n\tanalytics?: {\n\t\tc_sub_section?: EntityConvertEvent['c_sub_section'],\n\t\tc_element?: EntityConvertEvent['c_element'],\n\t},\n};\n\n// eslint-disable-next-line unicorn/numeric-separators-style\nconst REQUIRED_FIELDS_INFOHELPER_CODE = 8233923;\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class Converter\n{\n\t#entityTypeId: number;\n\t#entityId: number;\n\t#config: Config;\n\t#params: ConverterParams;\n\t#isProgress: boolean;\n\t#isSynchronisationAllowed: boolean;\n\t#fieldsSynchronizer: BX.CrmEntityFieldSynchronizationEditor | null;\n\t#data: Object;\n\n\tconstructor(\n\t\tentityTypeId: number,\n\t\tconfig: Config,\n\t\tparams?: ConverterParams,\n\t)\n\t{\n\t\tthis.#entityTypeId = Number(entityTypeId);\n\t\tif (config instanceof Config)\n\t\t{\n\t\t\tthis.#config = config;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.error('Config is invalid in Converter constructor. Expected instance of Config', config, this);\n\t\t}\n\t\tthis.#params = params ?? {};\n\n\t\tthis.#params.id = Type.isStringFilled(this.#params.id) ? this.#params.id : Text.getRandom();\n\t\tthis.#params.analytics = this.#filterExternalAnalytics(this.#params.analytics);\n\n\t\tthis.#isProgress = false;\n\t\tthis.#isSynchronisationAllowed = false;\n\t\tthis.#entityId = 0;\n\t}\n\n\tgetEntityTypeId(): number\n\t{\n\t\treturn this.#entityTypeId;\n\t}\n\n\tgetConfig(): Config\n\t{\n\t\treturn this.#config;\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#params.id;\n\t}\n\n\tgetServiceUrl(): ?string\n\t{\n\t\tconst serviceUrl = this.#params.serviceUrl;\n\t\tif (!serviceUrl)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst additionalParams = {\n\t\t\taction: 'convert',\n\t\t};\n\n\t\tthis.getConfig().getItems().forEach((item: ConfigItem) => {\n\t\t\tadditionalParams[BX.CrmEntityType.resolveName(item.getEntityTypeId()).toLowerCase()] = item.isActive() ? 'Y' : 'N';\n\t\t});\n\n\t\treturn BX.util.add_url_param(serviceUrl, additionalParams);\n\t}\n\n\tgetOriginUrl(): ?string\n\t{\n\t\tif (this.#params && 'originUrl' in this.#params)\n\t\t{\n\t\t\treturn String(this.#params.originUrl);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisRedirectToDetailPageEnabled(): boolean\n\t{\n\t\tif (this.#params && 'isRedirectToDetailPageEnabled' in this.#params)\n\t\t{\n\t\t\treturn this.#params.isRedirectToDetailPageEnabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Overwrite current analytics[c_element] param.\n\t * Note that you are not allowed to change analytics[c_sub_section] - its by design.\n\t *\n\t * @param c_element\n\t * @returns {BX.Crm.Conversion.Converter}\n\t */\n\t// eslint-disable-next-line camelcase\n\tsetAnalyticsElement(c_element: EntityConvertEvent['c_element']): Converter\n\t{\n\t\t// eslint-disable-next-line camelcase\n\t\tconst filtered = this.#filterExternalAnalytics({ c_element });\n\t\tif ('c_element' in filtered)\n\t\t{\n\t\t\tthis.#params.analytics.c_element = filtered.c_element;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tconvertBySchemeItemId(schemeItemId: string, entityId: number, data?: Object): void\n\t{\n\t\tconst targetSchemeItem = this.#config.getScheme().getItemById(schemeItemId);\n\t\tif (!targetSchemeItem)\n\t\t{\n\t\t\tconsole.error('Scheme is not found', schemeItemId, this);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#config.updateFromSchemeItem(targetSchemeItem);\n\n\t\tthis.convert(entityId, data);\n\t}\n\n\tconvert(entityId: number, data?: Object): void\n\t{\n\t\tthis.#entityId = entityId;\n\t\tthis.#data = data;\n\t\tconst schemeItem = this.#config.getScheme().getCurrentItem();\n\t\tif (!schemeItem)\n\t\t{\n\t\t\tconsole.error('Scheme is not found', this);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (Type.isStringFilled(schemeItem.getAvailabilityLock()))\n\t\t{\n\t\t\t// eslint-disable-next-line no-eval\n\t\t\teval(schemeItem.getAvailabilityLock());\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#config.getActiveItems().forEach((item) => {\n\t\t\tthis.#sendAnalyticsData(item.getEntityTypeId(), Dictionary.STATUS_ATTEMPT);\n\t\t});\n\n\t\tthis.#collectAdditionalData(schemeItem).then((result: ResolveResult) => {\n\t\t\tif (result.isCanceled)\n\t\t\t{\n\t\t\t\t// pass it to next 'then' handler\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn this.#request();\n\t\t}).then((result: ResolveResult) => {\n\t\t\tif (!result.isFinished)\n\t\t\t{\n\t\t\t\t// dont need to register anything in statistics\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst status = result.isCanceled ? Dictionary.STATUS_CANCEL : Dictionary.STATUS_SUCCESS;\n\n\t\t\tthis.#config.getActiveItems().forEach((item) => {\n\t\t\t\tthis.#sendAnalyticsData(item.getEntityTypeId(), status);\n\t\t\t});\n\t\t}).catch((error) => {\n\t\t\tif (error)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('Convert error', error, this);\n\t\t\t}\n\n\t\t\tthis.#config.getActiveItems().forEach((item) => {\n\t\t\t\tthis.#sendAnalyticsData(item.getEntityTypeId(), Dictionary.STATUS_ERROR);\n\t\t\t});\n\t\t});\n\t}\n\n\t#request(): Promise<ResolveResult>\n\t{\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tconst serviceUrl = this.getServiceUrl();\n\t\t\tif (!serviceUrl)\n\t\t\t{\n\t\t\t\tconsole.error('Convert endpoint is not specifier');\n\n\t\t\t\treject();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.#isProgress)\n\t\t\t{\n\t\t\t\tconsole.error('Another request is in progress');\n\n\t\t\t\treject();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#isProgress = true;\n\t\t\tAjax({\n\t\t\t\turl: serviceUrl,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata:\n\t\t\t\t\t{\n\t\t\t\t\t\tMODE: 'CONVERT',\n\t\t\t\t\t\tENTITY_ID: this.#entityId,\n\t\t\t\t\t\tENABLE_SYNCHRONIZATION: this.#isSynchronisationAllowed ? 'Y' : 'N',\n\t\t\t\t\t\tENABLE_REDIRECT_TO_SHOW: this.isRedirectToDetailPageEnabled() ? 'Y' : 'N',\n\t\t\t\t\t\tCONFIG: this.getConfig().externalize(),\n\t\t\t\t\t\tCONTEXT: this.#data,\n\t\t\t\t\t\tORIGIN_URL: this.getOriginUrl(),\n\t\t\t\t\t},\n\t\t\t\tonsuccess: resolve,\n\t\t\t\tonfailure: reject,\n\t\t\t});\n\t\t});\n\n\t\treturn promise\n\t\t\t.then((response) => {\n\t\t\t\tthis.#isProgress = false;\n\n\t\t\t\treturn this.#onRequestSuccess(response);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#isProgress = false;\n\n\t\t\t\tif (Type.isStringFilled(error))\n\t\t\t\t{\n\t\t\t\t\t// response may contain info about action required from user\n\t\t\t\t\tMessageBox.alert(Text.encode(error));\n\t\t\t\t}\n\n\t\t\t\t// pass error to next 'catch'\n\t\t\t\tthrow error;\n\t\t\t})\n\t\t;\n\t}\n\n\t#sendAnalyticsData(dstEntityTypeId: number, status: EventStatus): void\n\t{\n\t\tconst builder = Builder.Entity.ConvertEvent.createDefault(this.#entityTypeId, dstEntityTypeId)\n\t\t\t.setSubSection(this.#params.analytics.c_sub_section)\n\t\t\t.setElement(this.#params.analytics.c_element)\n\t\t\t.setStatus(status)\n\t\t;\n\n\t\tsendAnalyticsData(builder.buildData());\n\t}\n\n\t#filterExternalAnalytics(analytics: any): ConverterParams['analytics']\n\t{\n\t\tif (!Type.isPlainObject(analytics))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst allowedKeys = new Set([\n\t\t\t'c_sub_section',\n\t\t\t'c_element',\n\t\t]);\n\n\t\tconst result = {};\n\t\tfor (const [key, value] of Object.entries(analytics))\n\t\t{\n\t\t\tif (allowedKeys.has(key) && Type.isStringFilled(value))\n\t\t\t{\n\t\t\t\tresult[key] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t#onRequestSuccess(response): Promise<ResolveResult, string>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (response.ERROR)\n\t\t\t{\n\t\t\t\treject(response.ERROR?.MESSAGE || response.ERROR || 'Error during conversion');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Type.isPlainObject(response.REQUIRED_ACTION))\n\t\t\t{\n\t\t\t\tresolve(this.#processRequiredAction(response.REQUIRED_ACTION));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = Type.isPlainObject(response.DATA) ? response.DATA : {};\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\treject();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst resolveResult: ResolveResult = { isCanceled: false, isFinished: true };\n\n\t\t\tconst redirectUrl = Type.isString(data.URL) ? data.URL : '';\n\t\t\tif (data.IS_FINISHED === 'Y')\n\t\t\t{\n\t\t\t\t// result entity was created on backend, conversion is finished\n\t\t\t\tthis.#data = {};\n\n\t\t\t\tconst wasRedirectedInExternalEventHandler = this.#emitConvertedEvent(redirectUrl);\n\t\t\t\tif (wasRedirectedInExternalEventHandler)\n\t\t\t\t{\n\t\t\t\t\tresolve(resolveResult);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// backend could not create result entity automatically, user interaction is required\n\t\t\t\tresolveResult.isFinished = false;\n\t\t\t}\n\n\t\t\tif (redirectUrl)\n\t\t\t{\n\t\t\t\tconst redirectUrlObject = new Uri(redirectUrl);\n\n\t\t\t\tconst currentRedirectUrlAnalytics = redirectUrlObject.getQueryParam('st') || {};\n\n\t\t\t\tredirectUrlObject.setQueryParam(\n\t\t\t\t\t'st',\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.#params.analytics,\n\t\t\t\t\t\t...currentRedirectUrlAnalytics,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tBX.Crm.Page.open(redirectUrlObject.toString());\n\t\t\t}\n\t\t\telse if (window.top !== window)\n\t\t\t{\n\t\t\t\t// window.location.reload();\n\t\t\t}\n\n\t\t\tresolve(resolveResult);\n\t\t});\n\t}\n\n\t#collectAdditionalData(schemeItem: SchemeItem): Promise<ResolveResult, string>\n\t{\n\t\tconst config = this.getConfig();\n\n\t\tconst promises = [];\n\n\t\tschemeItem.getEntityTypeIds().forEach((entityTypeId) => {\n\t\t\tpromises.push(() => {\n\t\t\t\treturn this.#getCategoryForEntityTypeId(entityTypeId);\n\t\t\t});\n\t\t});\n\n\t\tconst result: ResolveResult = {\n\t\t\tisCanceled: false,\n\t\t\tisFinished: true,\n\t\t};\n\t\tconst promiseIterator = ((receivedPromises: Array, index: number = 0) => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tif (result.isCanceled || !receivedPromises[index])\n\t\t\t\t{\n\t\t\t\t\tresolve(result);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treceivedPromises[index]().then((categoryResult: CategorySelectResult) => {\n\t\t\t\t\tif (categoryResult.isCanceled)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.isCanceled = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (categoryResult.category)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst entityTypeId = categoryResult.category.getEntityTypeId();\n\t\t\t\t\t\tconst configItem = config.getItemByEntityTypeId(entityTypeId);\n\t\t\t\t\t\tif (!configItem)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.error(`Scheme is not correct: configItem is not found for ${entityTypeId}`, this);\n\t\t\t\t\t\t\treject();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst initData = configItem.getInitData();\n\t\t\t\t\t\tinitData.categoryId = categoryResult.category.getId();\n\t\t\t\t\t\tconfigItem.setInitData(initData);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(promiseIterator(receivedPromises, index + 1));\n\t\t\t\t}).catch(reject);\n\t\t\t});\n\t\t});\n\n\t\treturn promiseIterator(promises);\n\t}\n\n\t#getCategoryForEntityTypeId(entityTypeId): Promise<CategorySelectResult>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst configItem = this.getConfig().getItemByEntityTypeId(entityTypeId);\n\t\t\tif (!configItem)\n\t\t\t{\n\t\t\t\tconsole.error(`Scheme is not correct: configItem is not found for ${entityTypeId}`, this);\n\t\t\t\treject();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.#isNeedToLoadCategories(entityTypeId))\n\t\t\t{\n\t\t\t\tCategoryRepository.Instance.getCategories(entityTypeId).then((categories: CategoryModel[]) => {\n\t\t\t\t\tif (categories.length > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(this.#showCategorySelector(categories, configItem.getTitle()));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tisCanceled: false,\n\t\t\t\t\t\t\tcategory: categories[0],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}).catch(reject);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresolve({ isCanceled: false, category: null });\n\t\t\t}\n\t\t});\n\t}\n\n\t#isNeedToLoadCategories(entityTypeId: number): boolean\n\t{\n\t\treturn CategoryRepository.Instance.isCategoriesEnabled(entityTypeId);\n\t}\n\n\t#showCategorySelector(categories: CategoryModel[], title: string): Promise<CategorySelectResult>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tconst categorySelectorContent: HTMLElement = Tag.render`\n\t\t\t\t<div class=\"crm-converter-category-selector ui-form ui-form-line\">\n\t\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t\t<div class=\"crm-converter-category-selector-label ui-form-label\">\n\t\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Loc.getMessage('CRM_COMMON_CATEGORY')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ui-form-content\">\n\t\t\t\t\t\t\t<div class=\"crm-converter-category-selector-select ui-ctl ui-ctl-after-icon ui-ctl-dropdown\">\n\t\t\t\t\t\t\t\t<div class=\"ui-ctl-after ui-ctl-icon-angle\"></div>\n\t\t\t\t\t\t\t\t<select class=\"ui-ctl-element\"></select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tconst select = categorySelectorContent.querySelector('select');\n\t\t\tcategories.forEach((category) => {\n\t\t\t\tDom.append(\n\t\t\t\t\tTag.render`<option value=\"${category.getId()}\">${Text.encode(category.getName())}</option>`,\n\t\t\t\t\tselect,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tconst popup = new Popup({\n\t\t\t\ttitleBar: Loc.getMessage('CRM_CONVERSION_CATEGORY_SELECTOR_TITLE', {\n\t\t\t\t\t'#ENTITY#': Text.encode(title),\n\t\t\t\t}),\n\t\t\t\tcontent: categorySelectorContent,\n\t\t\t\tcloseByEsc: true,\n\t\t\t\tcloseIcon: true,\n\t\t\t\tbuttons: [\n\t\t\t\t\tnew Button({\n\t\t\t\t\t\ttext: Loc.getMessage('CRM_COMMON_ACTION_SAVE'),\n\t\t\t\t\t\tcolor: ButtonColor.SUCCESS,\n\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\tconst value = [...select.selectedOptions][0].value;\n\n\t\t\t\t\t\t\tpopup.destroy();\n\n\t\t\t\t\t\t\tfor (const category of categories)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (category.getId() === Number(value))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresolve({ category });\n\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconsole.error('Selected category not found', value, categories);\n\t\t\t\t\t\t\tresolve({ isCanceled: true });\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tnew Button({\n\t\t\t\t\t\ttext: Loc.getMessage('CRM_COMMON_ACTION_CANCEL'),\n\t\t\t\t\t\tcolor: ButtonColor.LIGHT,\n\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\tpopup.destroy();\n\n\t\t\t\t\t\t\tresolve({ isCanceled: true });\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\tevents: {\n\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\tresolve({ isCanceled: true });\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tpopup.show();\n\t\t});\n\t}\n\n\t#processRequiredAction(action: Object): Promise<ResolveResult>\n\t{\n\t\tconst name = String(action.NAME);\n\t\tconst data = Type.isPlainObject(action.DATA) ? action.DATA : {};\n\n\t\tif (name === 'SYNCHRONIZE')\n\t\t{\n\t\t\tlet newConfig: ConfigItemData[] | null = null;\n\t\t\tif (Type.isArray(data.CONFIG))\n\t\t\t{\n\t\t\t\tnewConfig = data.CONFIG;\n\t\t\t}\n\t\t\telse if (Type.isPlainObject(data.CONFIG))\n\t\t\t{\n\t\t\t\tnewConfig = Object.values(data.CONFIG);\n\t\t\t}\n\n\t\t\tif (newConfig)\n\t\t\t{\n\t\t\t\tthis.#config.updateItems(newConfig);\n\t\t\t}\n\n\t\t\treturn this.#synchronizeFields(Type.isArray(data.FIELD_NAMES) ? data.FIELD_NAMES : []);\n\t\t}\n\n\t\tif (name === 'CORRECT' && Type.isPlainObject(data.CHECK_ERRORS))\n\t\t{\n\t\t\treturn this.#askToFillRequiredFields(data);\n\t\t}\n\n\t\treturn Promise.resolve({ isCanceled: false, isFinished: true });\n\t}\n\n\t#synchronizeFields(fieldNames: string[]): Promise<ResolveResult>\n\t{\n\t\tconst synchronizer = this.#getFieldsSynchronizer(fieldNames);\n\n\t\treturn new Promise((resolve) => {\n\t\t\tconst listener = (sender, args) => {\n\t\t\t\tconst isConversionCancelled = Type.isBoolean(args.isCanceled) && args.isCanceled === true;\n\t\t\t\tif (isConversionCancelled)\n\t\t\t\t{\n\t\t\t\t\tsynchronizer.removeClosingListener(listener);\n\n\t\t\t\t\tresolve({ isCanceled: true, isFinished: true });\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.#isSynchronisationAllowed = true;\n\t\t\t\tthis.#config.updateItems(Object.values(this.#fieldsSynchronizer.getConfig()));\n\n\t\t\t\tsynchronizer.removeClosingListener(listener);\n\t\t\t\tresolve(this.#request());\n\t\t\t};\n\n\t\t\tsynchronizer.addClosingListener(listener);\n\t\t\tsynchronizer.show();\n\t\t});\n\t}\n\n\t#getFieldsSynchronizer(fieldNames: string[]): BX.CrmEntityFieldSynchronizationEditor\n\t{\n\t\tif (!this.#fieldsSynchronizer)\n\t\t{\n\t\t\tthis.#fieldsSynchronizer = BX.CrmEntityFieldSynchronizationEditor.create(\n\t\t\t\t`crm_converter_fields_synchronizer_${this.getEntityTypeId()}`,\n\t\t\t\t{\n\t\t\t\t\tconfig: this.#config.externalize(),\n\t\t\t\t\ttitle: this.#getMessage('dialogTitle'),\n\t\t\t\t\tfieldNames,\n\t\t\t\t\tlegend: this.#getMessage('syncEditorLegend'),\n\t\t\t\t\tfieldListTitle: this.#getMessage('syncEditorFieldListTitle'),\n\t\t\t\t\tentityListTitle: this.#getMessage('syncEditorEntityListTitle'),\n\t\t\t\t\tcontinueButton: this.#getMessage('continueButton'),\n\t\t\t\t\tcancelButton: this.#getMessage('cancelButton'),\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tthis.#fieldsSynchronizer.setConfig(this.#config.externalize());\n\t\tthis.#fieldsSynchronizer.setFieldNames(fieldNames);\n\n\t\treturn this.#fieldsSynchronizer;\n\t}\n\n\t#askToFillRequiredFields(data: Object): Promise<ResolveResult>\n\t{\n\t\t// just in case that there is previous not yet closed editor\n\t\tBX.Crm.PartialEditorDialog.close('entity-converter-editor');\n\n\t\tconst entityEditor = BX.Crm.PartialEditorDialog.create(\n\t\t\t'entity-converter-editor',\n\t\t\t{\n\t\t\t\ttitle: Loc.getMessage('CRM_CONVERSION_REQUIRED_FIELDS_POPUP_TITLE'),\n\t\t\t\tentityTypeId: this.#entityTypeId,\n\t\t\t\tentityId: this.#entityId,\n\t\t\t\tfieldNames: Object.keys(data.CHECK_ERRORS),\n\t\t\t\thelpData: {\n\t\t\t\t\ttext: Loc.getMessage('CRM_CONVERSION_MORE_ABOUT_REQUIRED_FIELDS'),\n\t\t\t\t\tcode: REQUIRED_FIELDS_INFOHELPER_CODE,\n\t\t\t\t},\n\t\t\t\tcontext: data.CONTEXT,\n\t\t\t},\n\t\t);\n\n\t\treturn new Promise((resolve) => {\n\t\t\tconst handler = (sender: BX.Crm.PartialEditorDialog, eventParams: Object) => {\n\t\t\t\tif (this.#entityTypeId !== eventParams?.entityTypeId || this.#entityId !== eventParams?.entityId)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-bx\n\t\t\t\tBX.removeCustomEvent(window, 'Crm.PartialEditorDialog.Close', handler);\n\n\t\t\t\t// yes, 'canceled' with double 'l' in this case\n\t\t\t\tconst isCanceled = Type.isBoolean(eventParams.isCancelled) ? eventParams.isCancelled : true;\n\t\t\t\tif (isCanceled)\n\t\t\t\t{\n\t\t\t\t\tresolve({ isCanceled: true, isFinished: true });\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresolve(this.#request());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-bx\n\t\t\tBX.addCustomEvent(window, 'Crm.PartialEditorDialog.Close', handler);\n\n\t\t\tentityEditor.open();\n\t\t});\n\t}\n\n\t#getMessage(phraseId): string\n\t{\n\t\tif (!this.#params.messages)\n\t\t{\n\t\t\tthis.#params.messages = {};\n\t\t}\n\n\t\treturn this.#params.messages[phraseId] || phraseId;\n\t}\n\n\t/**\n\t * @deprecated Will be removed soon\n\t * @todo delete, replace with messages from config.php\n\t */\n\tgetMessagePublic(phraseId): string\n\t{\n\t\treturn this.#getMessage(phraseId);\n\t}\n\n\t#emitConvertedEvent(redirectUrl): boolean\n\t{\n\t\tconst entityTypeId = this.getEntityTypeId();\n\n\t\tconst eventArgs = {\n\t\t\tentityTypeId,\n\t\t\tentityTypeName: BX.CrmEntityType.resolveName(entityTypeId),\n\t\t\tentityId: this.#entityId,\n\t\t\tredirectUrl,\n\t\t\tisRedirected: false,\n\t\t};\n\n\t\tconst current = BX.Crm.Page.getTopSlider();\n\t\tif (current)\n\t\t{\n\t\t\teventArgs.sliderUrl = current.getUrl();\n\t\t}\n\n\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-bx\n\t\tBX.onCustomEvent(window, 'Crm.EntityConverter.Converted', [this, eventArgs]);\n\t\tBX.localStorage.set('onCrmEntityConvert', eventArgs, 10);\n\n\t\tthis.getConfig().getActiveItems().forEach((item) => {\n\t\t\tEventEmitter.emit('Crm.EntityConverter.SingleConverted', {\n\t\t\t\tentityTypeName: BX.CrmEntityType.resolveName(item.getEntityTypeId()),\n\t\t\t});\n\t\t});\n\n\t\treturn eventArgs.isRedirected;\n\t}\n}\n","import { Text, Type } from 'main.core';\nimport type { BaseEvent } from 'main.core.events';\nimport { ApplyButton, ButtonColor, CancelButton } from 'ui.buttons';\nimport { Dialog, type Item } from 'ui.entity-selector';\nimport { Converter } from './converter';\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class EntitySelector\n{\n\t#converter: Converter;\n\t#entityId: number;\n\t#dstEntityTypeIds: number[];\n\t#target: ?HTMLElement;\n\n\t#dialogProp: ?Dialog = null;\n\n\tconstructor(converter: Converter, entityId: number, dstEntityTypeIds: number[], target: ?HTMLElement = null)\n\t{\n\t\t// this dont work in slider for some reason\n\t\t// if (converter instanceof Converter)\n\t\t// {\n\t\t// \tthis.#converter = converter;\n\t\t// }\n\t\tthis.#converter = converter;\n\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tentityId = Text.toInteger(entityId);\n\t\tif (entityId > 0)\n\t\t{\n\t\t\tthis.#entityId = entityId;\n\t\t}\n\n\t\tthis.#dstEntityTypeIds = dstEntityTypeIds\n\t\t\t.map((x) => Text.toInteger(x))\n\t\t\t.filter((entityTypeId) => BX.CrmEntityType.isDefined(entityTypeId))\n\t\t;\n\t\tthis.#dstEntityTypeIds.sort();\n\n\t\tif (Type.isDomNode(target) || Type.isNil(target))\n\t\t{\n\t\t\tthis.#target = target;\n\t\t}\n\n\t\tif (!this.#converter || !this.#entityId || !Type.isArrayFilled(this.#dstEntityTypeIds))\n\t\t{\n\t\t\tconsole.error('Invalid constructor params:', { converter, entityId, dstEntityTypeIds });\n\n\t\t\tthrow new Error('Invalid constructor params');\n\t\t}\n\t}\n\n\tget #dialog(): Dialog\n\t{\n\t\tif (this.#dialogProp)\n\t\t{\n\t\t\treturn this.#dialogProp;\n\t\t}\n\n\t\tconst applyButton = new ApplyButton({\n\t\t\tcolor: ButtonColor.SUCCESS,\n\t\t\tonclick: () => {\n\t\t\t\tvoid this.hide();\n\n\t\t\t\tthis.#convert();\n\t\t\t},\n\t\t});\n\t\tconst cancelButton = new CancelButton({\n\t\t\tonclick: () => {\n\t\t\t\tvoid this.hide();\n\t\t\t},\n\t\t});\n\n\t\tthis.#dialogProp = new Dialog({\n\t\t\ttargetNode: this.#target,\n\t\t\tenableSearch: true,\n\t\t\tcontext: `crm.converter.entity-selector.${this.#dstEntityTypeIds.join('-')}`,\n\t\t\tentities: this.#dstEntityTypeIds.map((entityTypeId) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: BX.CrmEntityType.resolveName(entityTypeId),\n\t\t\t\t\tdynamicLoad: true,\n\t\t\t\t\tdynamicSearch: true,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tshowTab: true,\n\t\t\t\t\t\texcludeMyCompany: true,\n\t\t\t\t\t},\n\t\t\t\t\tsearchFields: [\n\t\t\t\t\t\t{ name: 'id' },\n\t\t\t\t\t],\n\t\t\t\t\tsearchCacheLimits: [\n\t\t\t\t\t\t'^\\\\d+$',\n\t\t\t\t\t],\n\t\t\t\t};\n\t\t\t}),\n\t\t\tfooter: [applyButton.render(), cancelButton.render()],\n\t\t\tfooterOptions: {\n\t\t\t\tcontainerStyles: {\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t'justify-content': 'center',\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tthis.#dialogProp.subscribe('Item:onSelect', this.#handleItemSelect.bind(this));\n\n\t\treturn this.#dialogProp;\n\t}\n\n\t#convert(): void\n\t{\n\t\tconst activeEntityTypeIds = new Set();\n\t\tconst data = {};\n\n\t\tthis.#dialog.getSelectedItems().forEach((item) => {\n\t\t\tactiveEntityTypeIds.add(BX.CrmEntityType.resolveId(item.getEntityId().toUpperCase()));\n\t\t\tdata[item.getEntityId()] = item.getId();\n\t\t});\n\n\t\tconst schemeItem = this.#converter.getConfig().getScheme().getItemForEntityTypeIds([...activeEntityTypeIds]);\n\t\tif (!schemeItem)\n\t\t{\n\t\t\tthrow new Error(`Could not find a scheme item for destinations ${[...activeEntityTypeIds].join(', ')}`);\n\t\t}\n\t\tthis.#converter.getConfig().updateFromSchemeItem(schemeItem);\n\n\t\tthis.#converter.convert(this.#entityId, data);\n\t}\n\n\t#handleItemSelect(event: BaseEvent): void\n\t{\n\t\tconst { item } = event.getData();\n\n\t\tEntitySelector.#ensureOnlyOneItemOfEachTypeIsSelected(this.#dialog, item);\n\t}\n\n\tstatic #ensureOnlyOneItemOfEachTypeIsSelected(dialog: Dialog, justSelectedItem: Item): void\n\t{\n\t\tdialog.getSelectedItems().forEach((item) => {\n\t\t\tif (\n\t\t\t\titem.getEntityId() === justSelectedItem.getEntityId()\n\t\t\t\t&& Text.toInteger(item.getId()) !== Text.toInteger(justSelectedItem.getId())\n\t\t\t)\n\t\t\t{\n\t\t\t\titem.deselect();\n\t\t\t}\n\t\t});\n\t}\n\n\tshow(): Promise\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.#dialog.subscribeOnce('onShow', resolve);\n\n\t\t\tthis.#dialog.show();\n\t\t});\n\t}\n\n\thide(): Promise\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.#dialog.subscribeOnce('onHide', resolve);\n\n\t\t\tthis.#dialog.hide();\n\t\t});\n\t}\n\n\tdestroy(): Promise\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.#dialog.unsubscribe('Item:onSelect', this.#handleItemSelect.bind(this));\n\t\t\tthis.#dialog.destroy();\n\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tgetConverter(): Converter\n\t{\n\t\treturn this.#converter;\n\t}\n}\n","import { Config } from './config';\nimport type { ConfigItemData } from './config-item';\nimport type { ConverterParams } from './converter';\nimport { Converter } from './converter';\nimport { EntitySelector } from './entity-selector';\nimport type { SchemeData } from './scheme';\nimport { Scheme } from './scheme';\n\nlet instance = null;\n\n/**\n * @memberOf BX.Crm.Conversion\n */\nexport class Manager\n{\n\t#converters: Object<string, Converter> = {};\n\n\tstatic get Instance(): Manager\n\t{\n\t\tif (instance === null)\n\t\t{\n\t\t\tinstance = new Manager();\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tinitializeConverter(\n\t\tentityTypeId: number,\n\t\tparams: {\n\t\t\tconfigItems: ConfigItemData[],\n\t\t\tscheme: SchemeData,\n\t\t\tparams: ConverterParams,\n\t\t},\n\t): Converter\n\t{\n\t\tconst config = Config.create(entityTypeId, params.configItems, Scheme.create(params.scheme));\n\n\t\tconst converter = new Converter(entityTypeId, config, params.params);\n\n\t\tthis.#converters[converter.getId()] = converter;\n\n\t\treturn converter;\n\t}\n\n\tgetConverter(converterId: string): ?Converter\n\t{\n\t\treturn this.#converters[converterId];\n\t}\n\n\tcreateEntitySelector(converterId: string, dstEntityTypeIds: number[], entityId: number): ?EntitySelector\n\t{\n\t\tconst converter = this.getConverter(converterId);\n\t\tif (!converter)\n\t\t{\n\t\t\tconsole.error('Converter with given id not found', converterId, this);\n\n\t\t\treturn null;\n\t\t}\n\n\t\t// check whether converter supports this type of scheme\n\t\tconst schemeItem = converter.getConfig().getScheme().getItemForEntityTypeIds(dstEntityTypeIds);\n\t\tif (!schemeItem)\n\t\t{\n\t\t\tconsole.error('Could not find scheme item', dstEntityTypeIds, converter);\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new EntitySelector(converter, entityId, dstEntityTypeIds);\n\t}\n}\n","import { Event, Text, Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\nimport { type MenuItemOptions, MenuManager } from 'main.popup';\nimport { Converter } from './converter';\nimport { EntitySelector } from './entity-selector';\nimport type { Scheme } from './scheme';\nimport { SchemeItem } from './scheme-item';\n\n/**\n * @memberOf BX.Crm.Conversion\n * @mixes EventEmitter\n */\nexport class SchemeSelector\n{\n\t#entityId: number;\n\t#container: HTMLElement;\n\t#menuButton: HTMLElement;\n\t#label: HTMLElement;\n\t#converter: Converter;\n\t#menuId: string;\n\t#isAutoConversionEnabled: boolean;\n\t#analytics: {c_element?: string} = {};\n\n\tconstructor(\n\t\tconverter: Converter,\n\t\tparams: {\n\t\t\tentityId: number,\n\t\t\tcontainerId: string,\n\t\t\tbuttonId: string,\n\t\t\tlabelId: string,\n\t\t\tanalytics?: {\n\t\t\t\tc_element: string,\n\t\t\t}\n\t\t},\n\t)\n\t{\n\t\tthis.#converter = converter;\n\t\tthis.#entityId = Number(params.entityId);\n\t\tthis.#container = document.getElementById(params.containerId);\n\t\tthis.#menuButton = document.getElementById(params.buttonId);\n\t\tthis.#label = document.getElementById(params.labelId);\n\t\tthis.#menuId = `crm_conversion_scheme_selector_${this.#entityId}_${Text.getRandom()}`;\n\t\tthis.#isAutoConversionEnabled = false;\n\t\tif (Type.isStringFilled(params.analytics.c_element))\n\t\t{\n\t\t\tthis.#analytics.c_element = params.analytics.c_element;\n\t\t}\n\n\t\tif (!this.#entityId || !this.#container || !this.#menuButton || !this.#label || !this.#converter)\n\t\t{\n\t\t\tconsole.error('Error SchemeSelector initializing', this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#initUI();\n\t\t\tthis.#bindEvents();\n\t\t}\n\n\t\tEventEmitter.makeObservable(this, 'BX.Crm.Conversion.SchemeSelector');\n\t}\n\n\tdestroy(): void\n\t{\n\t\tthis.#closeMenu();\n\n\t\tthis.#unbindEvents();\n\n\t\tthis.unsubscribeAll();\n\t}\n\n\t/**\n\t * Alias for 'destroy'\n\t */\n\trelease(): void\n\t{\n\t\tthis.destroy();\n\t}\n\n\tenableAutoConversion(): void\n\t{\n\t\tthis.#isAutoConversionEnabled = true;\n\t}\n\n\tdisableAutoConversion()\n\t{\n\t\tthis.#isAutoConversionEnabled = false;\n\t}\n\n\t#initUI()\n\t{\n\t\tconst currentSchemeItem: SchemeItem | null = this.#converter.getConfig().getScheme().getCurrentItem();\n\t\tif (currentSchemeItem)\n\t\t{\n\t\t\tthis.#label.innerText = currentSchemeItem.getPhrase();\n\t\t}\n\t}\n\n\t#bindEvents(): void\n\t{\n\t\tEvent.bind(this.#container, 'click', this.#handleContainerClick.bind(this));\n\t\tEvent.bind(this.#menuButton, 'click', this.#handleMenuButtonClick.bind(this));\n\t}\n\n\t#unbindEvents(): void\n\t{\n\t\tEvent.unbind(this.#container, 'click', this.#handleContainerClick.bind(this));\n\t\tEvent.unbind(this.#menuButton, 'click', this.#handleMenuButtonClick.bind(this));\n\t}\n\n\t#handleContainerClick()\n\t{\n\t\tconst event = new BaseEvent({\n\t\t\tdata: {\n\t\t\t\tisCanceled: false,\n\t\t\t},\n\t\t});\n\t\tthis.emit('onContainerClick', event);\n\t\tthis.#converter.getConfig().updateFromSchemeItem();\n\t\tif (this.#isAutoConversionEnabled && !event.getData().isCanceled)\n\t\t{\n\t\t\tthis.#converter.setAnalyticsElement(this.#analytics.c_element);\n\n\t\t\tthis.#converter.convert(this.#entityId);\n\t\t}\n\t}\n\n\t#handleMenuButtonClick()\n\t{\n\t\tthis.#showMenu();\n\t}\n\n\t#showMenu()\n\t{\n\t\t// eslint-disable-next-line @bitrix24/bitrix24-rules/no-bx\n\t\tconst anchorPos = BX.pos(this.#container);\n\n\t\tMenuManager.show({\n\t\t\tid: this.#menuId,\n\t\t\tbindElement: this.#menuButton,\n\t\t\titems: this.#getMenuItems(),\n\t\t\tcloseByEsc: true,\n\t\t\tcacheable: false,\n\t\t\toffsetLeft: -anchorPos.width,\n\t\t});\n\t}\n\n\t#closeMenu()\n\t{\n\t\tMenuManager.destroy(this.#menuId);\n\t}\n\n\t#getMenuItems(): MenuItemOptions[]\n\t{\n\t\tconst scheme = this.#converter.getConfig().getScheme();\n\n\t\tconst items = [];\n\t\tfor (const item of scheme.getItems())\n\t\t{\n\t\t\titems.push({\n\t\t\t\ttext: Text.encode(item.getPhrase()),\n\t\t\t\tonclick: () => {\n\t\t\t\t\tthis.#handleItemClick(item);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tconst entitySelector = this.#prepareEntitySelector(scheme);\n\t\tif (entitySelector)\n\t\t{\n\t\t\titems.push({\n\t\t\t\ttext: this.#converter.getMessagePublic('openEntitySelector'),\n\t\t\t\tonclick: () => {\n\t\t\t\t\tthis.#closeMenu();\n\n\t\t\t\t\tvoid entitySelector.show();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\t#prepareEntitySelector(scheme: Scheme): ?EntitySelector\n\t{\n\t\tif (this.#converter.getEntityTypeId() !== BX.CrmEntityType.enumeration.lead)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allEntityTypeIdsInScheme = scheme.getAllEntityTypeIds();\n\n\t\tconst dstEntityTypeIds = [];\n\t\tif (allEntityTypeIdsInScheme.includes(BX.CrmEntityType.enumeration.contact))\n\t\t{\n\t\t\tdstEntityTypeIds.push(BX.CrmEntityType.enumeration.contact);\n\t\t}\n\n\t\tif (allEntityTypeIdsInScheme.includes(BX.CrmEntityType.enumeration.company))\n\t\t{\n\t\t\tdstEntityTypeIds.push(BX.CrmEntityType.enumeration.company);\n\t\t}\n\n\t\tif (!Type.isArrayFilled(dstEntityTypeIds))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new EntitySelector(this.#converter, this.#entityId, dstEntityTypeIds);\n\t}\n\n\t#handleItemClick(item: SchemeItem)\n\t{\n\t\tthis.#closeMenu();\n\t\tthis.#label.innerText = item.getPhrase();\n\t\tthis.#converter.getConfig().updateFromSchemeItem(item);\n\n\t\tconst event = new BaseEvent({\n\t\t\tdata: {\n\t\t\t\tisCanceled: false,\n\t\t\t},\n\t\t});\n\t\tthis.emit('onSchemeSelected', event);\n\t\tif (this.#isAutoConversionEnabled && !event.getData().isCanceled)\n\t\t{\n\t\t\tthis.#converter.setAnalyticsElement(this.#analytics.c_element);\n\n\t\t\tthis.#converter.convert(this.#entityId);\n\t\t}\n\t}\n}\n","import { Config } from './config';\nimport { Converter } from './converter';\nimport { EntitySelector } from './entity-selector';\nimport { Manager } from './manager';\nimport { Scheme } from './scheme';\nimport { SchemeSelector } from './scheme-selector';\n\n/**\n * @memberOf BX.Crm\n */\nexport const Conversion = {\n\tScheme,\n\tConfig,\n\tConverter,\n\tManager,\n\tSchemeSelector,\n\tEntitySelector,\n};\n"],"names":["ConfigItem","constructor","params","Number","entityTypeId","active","enableSync","Type","isPlainObject","initData","String","title","externalize","getEntityTypeId","getTitle","getInitData","isActive","isEnableSync","setActive","setEnableSync","setInitData","data","setTitle","value","isBoolean","isString","Boolean","SchemeItem","id","name","phrase","availabilityLock","isArray","entityTypeIds","forEach","push","getId","getName","getEntityTypeIds","getPhrase","getAvailabilityLock","Scheme","currentItemId","items","isNull","item","console","error","create","schemeItems","getCurrentItem","length","getItemById","setCurrentItemId","getItems","itemId","getItemForSingleEntityTypeId","getItemForEntityTypeIds","makeIntSet","input","Set","map","Text","toInteger","targetEntityTypeIds","itemSet","size","notFoundTargetIds","filter","has","getAllEntityTypeIds","add","Config","scheme","configItems","getActiveItems","getScheme","updateFromSchemeItem","schemeItem","selectedSchemeItem","activeEntityTypeIds","includes","getItemByEntityTypeId","BX","CrmEntityType","resolveName","toLowerCase","updateItems","instance","CategoryRepository","Extension","getSettings","Map","Instance","isCategoriesEnabled","get","getCategories","Promise","resolve","Ajax","runAction","then","models","categories","categoryData","CategoryModel","set","REQUIRED_FIELDS_INFOHELPER_CODE","Converter","config","isStringFilled","getRandom","analytics","getConfig","getServiceUrl","serviceUrl","additionalParams","action","util","add_url_param","getOriginUrl","originUrl","isRedirectToDetailPageEnabled","setAnalyticsElement","c_element","filtered","convertBySchemeItemId","schemeItemId","entityId","targetSchemeItem","convert","eval","Dictionary","STATUS_ATTEMPT","result","isCanceled","isFinished","status","STATUS_CANCEL","STATUS_SUCCESS","catch","log","STATUS_ERROR","getMessagePublic","phraseId","promise","reject","url","method","dataType","MODE","ENTITY_ID","ENABLE_SYNCHRONIZATION","ENABLE_REDIRECT_TO_SHOW","CONFIG","CONTEXT","ORIGIN_URL","onsuccess","onfailure","response","MessageBox","alert","encode","dstEntityTypeId","builder","Builder","Entity","ConvertEvent","createDefault","setSubSection","c_sub_section","setElement","setStatus","sendAnalyticsData","buildData","allowedKeys","key","Object","entries","ERROR","MESSAGE","REQUIRED_ACTION","DATA","resolveResult","redirectUrl","URL","IS_FINISHED","wasRedirectedInExternalEventHandler","redirectUrlObject","Uri","currentRedirectUrlAnalytics","getQueryParam","setQueryParam","Crm","Page","open","toString","window","top","promises","promiseIterator","receivedPromises","index","categoryResult","category","configItem","categoryId","categorySelectorContent","Tag","render","Loc","getMessage","select","querySelector","Dom","append","popup","Popup","titleBar","content","closeByEsc","closeIcon","buttons","Button","text","color","ButtonColor","SUCCESS","onclick","selectedOptions","destroy","LIGHT","events","onClose","show","NAME","newConfig","values","FIELD_NAMES","CHECK_ERRORS","fieldNames","synchronizer","listener","sender","args","isConversionCancelled","removeClosingListener","addClosingListener","CrmEntityFieldSynchronizationEditor","legend","fieldListTitle","entityListTitle","continueButton","cancelButton","setConfig","setFieldNames","PartialEditorDialog","close","entityEditor","keys","helpData","code","context","handler","eventParams","removeCustomEvent","isCancelled","addCustomEvent","messages","eventArgs","entityTypeName","isRedirected","current","getTopSlider","sliderUrl","getUrl","onCustomEvent","localStorage","EventEmitter","emit","EntitySelector","converter","dstEntityTypeIds","target","x","isDefined","sort","isDomNode","isNil","isArrayFilled","Error","subscribeOnce","hide","unsubscribe","bind","getConverter","applyButton","ApplyButton","CancelButton","Dialog","targetNode","enableSearch","join","entities","dynamicLoad","dynamicSearch","options","showTab","excludeMyCompany","searchFields","searchCacheLimits","footer","footerOptions","containerStyles","display","subscribe","getSelectedItems","resolveId","getEntityId","toUpperCase","event","getData","dialog","justSelectedItem","deselect","Manager","initializeConverter","converterId","createEntitySelector","SchemeSelector","document","getElementById","containerId","buttonId","labelId","makeObservable","unsubscribeAll","release","enableAutoConversion","disableAutoConversion","currentSchemeItem","innerText","Event","unbind","BaseEvent","anchorPos","pos","MenuManager","bindElement","cacheable","offsetLeft","width","entitySelector","enumeration","lead","allEntityTypeIdsInScheme","contact","company","Conversion"],"mappings":"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"}