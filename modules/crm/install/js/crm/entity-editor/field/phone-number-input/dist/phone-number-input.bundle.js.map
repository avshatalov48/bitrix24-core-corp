{"version":3,"file":"phone-number-input.bundle.js","sources":["../src/phone-number-input.js"],"sourcesContent":["import {Dom, Loc, Reflection, Tag, Type} from 'main.core';\nimport {Dialog, Item} from 'crm.entity-selector';\n\nimport type {PhoneNumberInputOptions} from './phone-number-input-options';\n\nimport 'ui.design-tokens';\nimport './phone-number-input.css';\n\nconst NAMESPACE = Reflection.namespace('BX.Crm');\nconst FLAG_ICON_PATH = '/bitrix/js/crm/entity-selector/src/images/';\nconst FLAG_ICON_EXT = 'png';\nconst FLAG_SIZE = 24;\nconst PLUS_CHAR = '+';\nconst GLOBAL_COUNTRY_CODE = 'XX';\nconst LAST_RECENT_ITEMS_TITLE_COLOR = '#00789E';\n\nexport default class PhoneNumberInput extends BX.PhoneNumber.Input\n{\n\t#searchDialogContextCode: String;\n\t#isSelectionIndicatorEnabled: Boolean;\n\t#countryDialog: ?Dialog = null;\n\t#countryFlagTickNode: ?HTMLElement = null;\n\n\tconstructor(params: PhoneNumberInputOptions)\n\t{\n\t\t// set permanent options\n\t\tparams.flagSize = FLAG_SIZE;\n\n\t\t// show global icon when empty country code\n\t\tif (params.savedCountryCode === '')\n\t\t{\n\t\t\tparams.savedCountryCode = GLOBAL_COUNTRY_CODE;\n\t\t}\n\n\t\tsuper(params);\n\n\t\tthis.#searchDialogContextCode = Type.isStringFilled(params.searchDialogContextCode)\n\t\t\t? params.searchDialogContextCode\n\t\t\t: '';\n\n\t\tthis.#isSelectionIndicatorEnabled = Type.isBoolean(params.isSelectionIndicatorEnabled)\n\t\t\t? params.isSelectionIndicatorEnabled\n\t\t\t: false;\n\n\t\tif (this.#isSelectionIndicatorEnabled)\n\t\t{\n\t\t\tthis.#initSelectionIndicator();\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tif (this.#countryDialog)\n\t\t{\n\t\t\tthis.#countryDialog.destroy();\n\t\t}\n\t}\n\n\t// region overridden methods from BX.PhoneNumber.Input ------------------------------------------------------------\n\t/**\n\t * Override default behavior with PopupWindow. EntitySelectorEx.Dialog component used.\n\t *\n\t * @param event\n\t *\n\t * @override (parent method BX.PhoneNumber.Input.prototype._onFlagClick)\n\t */\n\t_onFlagClick(event)\n\t{\n\t\tif (!Type.isDomNode(this.flagNode))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#countryDialog)\n\t\t{\n\t\t\tthis.#countryDialog.show();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// new popup dialog\n\t\tthis.#countryDialog = new Dialog({\n\t\t\ttargetNode: this.flagNode,\n\t\t\tcontext: this.#searchDialogContextCode,\n\t\t\tmultiple: false,\n\t\t\tdropdownMode: true,\n\t\t\tenableSearch: true,\n\t\t\twidth: 350,\n\t\t\ttagSelectorOptions: {\n\t\t\t\tplaceholder: Loc.getMessage('CRM_PHONE_INPUT_FIELD_TAG_SELECTOR_SEARCH_PLACEHOLDER'),\n\t\t\t\ttextBoxWidth: '100%'\n\t\t\t},\n\t\t\tentities: [{\n\t\t\t\tid: 'country',\n\t\t\t\toptions: {\n\t\t\t\t\tisEmptyCountryEnabled: false\n\t\t\t\t}\n\t\t\t}],\n\t\t\tevents: this.#initCountryDialogEvents()\n\t\t});\n\n\t\tthis.#countryDialog.show();\n\t}\n\n\t/**\n\t * New icons to display country flag added.\n\t *\n\t * @override (parent method BX.PhoneNumber.Input.prototype.drawCountryFlag)\n\t */\n\tdrawCountryFlag(): void\n\t{\n\t\tif (!Type.isDomNode(this.flagNode))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet country = this.getCountry();\n\t\tif (!Type.isStringFilled(country)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.adjustFlag(country);\n\t};\n\n\t/**\n\t * Add 'global' flag functionality when countryCode is undefined.\n\t *\n\t * @override\n\t */\n\ttryRedrawCountryFlag(): void\n\t{\n\t\tconst useGlobalCode = !Type.isStringFilled(this.inputNode.value)\n\t\t\t|| Type.isNull(this.formatter.country)\n\t\t\t|| !this.formatter.isInternational\n\t\t;\n\n\t\tif (useGlobalCode)\n\t\t{\n\t\t\tthis.formatter.replaceCountry(GLOBAL_COUNTRY_CODE);\n\t\t\tthis.adjustFlag(GLOBAL_COUNTRY_CODE);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.drawCountryFlag();\n\t\t}\n\n\t\tthis.callbacks.countryChange({\n\t\t\tcountry: this.getCountry(),\n\t\t\tcountryCode: this.getCountryCode()\n\t\t});\n\t}\n\n\t/**\n\t * @param {String} newValue\n\t * @param {String} savedCountryCode\n\t *\n\t * @override\n\t */\n\tsetValue(newValue: String, savedCountryCode: String): void\n\t{\n\t\tthis.waitForInitialization().then(function()\n\t\t{\n\t\t\tthis.inputNode.value = this.formatter.format(newValue.toString());\n\n\t\t\tthis.callbacks.change({\n\t\t\t\tvalue: this.getValue(),\n\t\t\t\tformattedValue: this.getFormattedValue(),\n\t\t\t\tcountry: this.getCountry(),\n\t\t\t\tcountryCode: this.getCountryCode()\n\t\t\t});\n\n\t\t\tif (this._countryBefore !== this.getCountry())\n\t\t\t{\n\t\t\t\tthis.drawCountryFlag();\n\t\t\t\tthis.callbacks.countryChange({\n\t\t\t\t\tcountry: this.getCountry(),\n\t\t\t\t\tcountryCode: this.getCountryCode()\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// NEW: redraw country flag if saved country code exists and does not match with formatter code\n\t\t\tif (Type.isStringFilled(savedCountryCode) && this.formatter.country !== savedCountryCode)\n\t\t\t{\n\t\t\t\tthis.formatter.replaceCountry(savedCountryCode);\n\t\t\t\tthis.tryRedrawCountryFlag()\n\t\t\t}\n\t\t}.bind(this));\n\t}\n\n\t/**\n\t * Handler when user select the country from list\n\t * (userOptions saving not used).\n\t *\n\t * @param event\n\t *\n\t * @override\n\t */\n\tonCountrySelect(event): void\n\t{\n\t\tconst item = event.getData().item;\n\t\tif (item)\n\t\t{\n\t\t\tconst country = item.getId();\n\t\t\tif (country === this.getCountry())\n\t\t\t{\n\t\t\t\treturn; // nothing to do\n\t\t\t}\n\n\t\t\tthis.formatter.replaceCountry(country);\n\t\t\tthis.inputNode.value = this.formatter.getFormattedNumber();\n\t\t\tthis.drawCountryFlag();\n\t\t\tthis.callbacks.change({\n\t\t\t\tvalue: this.getValue(),\n\t\t\t\tformattedValue: this.getFormattedValue(),\n\t\t\t\tcountry: this.getCountry(),\n\t\t\t\tcountryCode: this.getCountryCode()\n\t\t\t});\n\t\t\tthis.callbacks.countryChange({\n\t\t\t\tcountry: this.getCountry(),\n\t\t\t\tcountryCode: this.getCountryCode()\n\t\t\t});\n\t\t}\n\t};\n\t// endregion -------------------------------------------------------------------------------------------------------\n\n\tadjustFlag(country: String): void\n\t{\n\t\tconst countryFlagIconUrl = FLAG_ICON_PATH + country.toLowerCase() + '.' + FLAG_ICON_EXT;\n\n\t\tDom.adjust(\n\t\t\tthis.flagNode,\n\t\t\t{\n\t\t\t\tprops: {\n\t\t\t\t\tclassName: this.flagNodeInitialClass + ' crm-entity-phone-number-input-flag-' + this.flagSize\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tDom.style(this.flagNode, {\n\t\t\t'border': '1px solid rgba(82, 92, 105, 0.2)',\n\t\t\t'background-image': 'url(\"' + countryFlagIconUrl + '\")',\n\t\t});\n\n\t\tif (country === GLOBAL_COUNTRY_CODE)\n\t\t{\n\t\t\tDom.style(this.flagNode, {\n\t\t\t\t'border': 0,\n\t\t\t\t'background-position': 'center',\n\t\t\t\t'background-size': 'contain',\n\t\t\t\t'background-repeat': 'no-repeat'\n\t\t\t});\n\t\t}\n\t}\n\n\t// region PRIVATE methods ------------------------------------------------------------------------------------------\n\t#initSelectionIndicator(): void\n\t{\n\t\tif (Type.isDomNode(this.flagNode))\n\t\t{\n\t\t\tthis.#countryFlagTickNode = Tag.render`<span class=\"crm-entity-widget-content-country-flag-tick\"></span>`;\n\n\t\t\tDom.append(this.#countryFlagTickNode, this.flagNode);\n\t\t}\n\t}\n\n\t#initCountryDialogEvents(): Object\n\t{\n\t\tlet me = this;\n\n\t\tlet events = {\n\t\t\t'Item:onSelect': (event) =>\n\t\t\t{\n\t\t\t\tme.onCountrySelect(event)\n\t\t\t}\n\t\t};\n\n\t\tevents.onLoad = (event) =>\n\t\t{\n\t\t\tconst dialogItems = event.getTarget().getItems();\n\n\t\t\tlet filtered = dialogItems.filter(row => row.contextSort);\n\t\t\tfiltered.forEach(item => item.setTextColor(LAST_RECENT_ITEMS_TITLE_COLOR));\n\n\t\t\tconst country = me.formatter.country;\n\t\t\tif (country)\n\t\t\t{\n\t\t\t\tlet selectedIdem: Item = dialogItems.find((item: Item) => item.getId() === country);\n\t\t\t\tif (selectedIdem)\n\t\t\t\t{\n\t\t\t\t\tselectedIdem.select();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tevents.onFirstShow = (event) => {\n\t\t\tconst popupContainer = event.getTarget().getPopup().getContentContainer();\n\t\t\tif (Type.isDomNode(popupContainer))\n\t\t\t{\n\t\t\t\tDom.addClass(popupContainer, 'crm-entity-country-selector-popup')\n\t\t\t}\n\t\t}\n\n\t\tif (this.#isSelectionIndicatorEnabled)\n\t\t{\n\t\t\tevents.onShow = (event) =>\n\t\t\t{\n\t\t\t\tif (me.#countryFlagTickNode)\n\t\t\t\t{\n\t\t\t\t\tDom.addClass(me.#countryFlagTickNode, '--flipped');\n\t\t\t\t}\n\n\t\t\t\tconst country = me.formatter.country;\n\t\t\t\tif (country)\n\t\t\t\t{\n\t\t\t\t\tlet dialog: Dialog = event.getTarget();\n\t\t\t\t\tlet selectedIdem: Item = dialog.getItems().find(item => item.getId() === country);\n\t\t\t\t\tif (selectedIdem)\n\t\t\t\t\t{\n\t\t\t\t\t\tselectedIdem.select();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tevents.onHide = () =>\n\t\t\t{\n\t\t\t\tif (me.#countryFlagTickNode)\n\t\t\t\t{\n\t\t\t\t\tDom.removeClass(me.#countryFlagTickNode, '--flipped');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn events;\n\t}\n\t// endregion -------------------------------------------------------------------------------------------------------\n\n\tstatic isCountryCodeOnly(input: String, countryCode: ?String): Boolean\n\t{\n\t\treturn input === PLUS_CHAR\n\t\t\t|| input === countryCode\n\t\t\t|| input === PLUS_CHAR + countryCode\n\t\t;\n\t}\n}\n\nNAMESPACE.PhoneNumberInput = PhoneNumberInput;\n"],"names":["NAMESPACE","Reflection","namespace","FLAG_ICON_PATH","FLAG_ICON_EXT","FLAG_SIZE","PLUS_CHAR","GLOBAL_COUNTRY_CODE","LAST_RECENT_ITEMS_TITLE_COLOR","PhoneNumberInput","params","flagSize","savedCountryCode","Type","isStringFilled","searchDialogContextCode","isBoolean","isSelectionIndicatorEnabled","destroy","event","isDomNode","flagNode","show","Dialog","targetNode","context","multiple","dropdownMode","enableSearch","width","tagSelectorOptions","placeholder","Loc","getMessage","textBoxWidth","entities","id","options","isEmptyCountryEnabled","events","country","getCountry","adjustFlag","useGlobalCode","inputNode","value","isNull","formatter","isInternational","replaceCountry","drawCountryFlag","callbacks","countryChange","countryCode","getCountryCode","newValue","waitForInitialization","then","format","toString","change","getValue","formattedValue","getFormattedValue","_countryBefore","tryRedrawCountryFlag","bind","item","getData","getId","getFormattedNumber","countryFlagIconUrl","toLowerCase","Dom","adjust","props","className","flagNodeInitialClass","style","input","BX","PhoneNumber","Input","Tag","render","append","me","onCountrySelect","onLoad","dialogItems","getTarget","getItems","filtered","filter","row","contextSort","forEach","setTextColor","selectedIdem","find","select","onFirstShow","popupContainer","getPopup","getContentContainer","addClass","onShow","dialog","onHide","removeClass"],"mappings":"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"}