{"version":3,"file":"field-configurator.bundle.js","sources":["../src/field-configurators/phone-number-input.js","../src/field-configurators/requisite-address.js","../src/entity-configuration-manager.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle, @bitrix24/bitrix24-rules/no-pseudo-private */\n\nimport { Dom, Loc, Tag, Type } from 'main.core';\nimport { TagSelector } from 'crm.entity-selector';\nimport { BaseEvent } from 'main.core.events';\n\nimport './styles/phone-number-input.css';\n\nconst DEFAULT_COUNTRY_CODE = 'XX';\n\n/**\n * @memberOf BX.Crm\n */\nexport class PhoneNumberInputFieldConfigurator extends BX.UI.EntityEditorFieldConfigurator\n{\n\t#countrySelector: ?TagSelector = null;\n\n\tdestroy(): void\n\t{\n\t\tif (this.#countrySelector)\n\t\t{\n\t\t\tthis.#countrySelector.destroy();\n\t\t}\n\t}\n\n\t// region overridden methods from BX.UI.EntityEditorFieldConfigurator ----------------------------------------------\n\t/**\n\t * @override\n\t */\n\tlayoutInternal(): void\n\t{\n\t\tDom.append(this.getInputContainer(), this._wrapper);\n\t\tif (this._typeId === 'list')\n\t\t{\n\t\t\tthis.layoutInnerConfigurator(this._field.getInnerConfig(), this._field.getItems());\n\t\t}\n\t\tDom.append(this.getOptionContainer(), this._wrapper);\n\n\t\tif (this._typeId === 'multifield' || this._typeId === 'client_light')\n\t\t{\n\t\t\tDom.append(this.getCountrySelectContent(), this._wrapper); // NEW: country selector added\n\t\t}\n\n\t\tDom.append(Tag.render`<hr class=\"ui-entity-editor-line\">`, this._wrapper);\n\t\tDom.append(this.getButtonContainer(), this._wrapper);\n\t}\n\n\tprepareSaveParams(...args): Object\n\t{\n\t\tconst params = super.prepareSaveParams(this, args);\n\n\t\t// add selected value\n\t\tif (this.#countrySelector)\n\t\t{\n\t\t\tconst items = this.#countrySelector.getDialog().getSelectedItems();\n\t\t\tif (items.length <= 1)\n\t\t\t{\n\t\t\t\tparams.defaultCountry = Type.isArrayFilled(items)\n\t\t\t\t\t? items[0].id\n\t\t\t\t\t: DEFAULT_COUNTRY_CODE\n\t\t\t\t;\n\n\t\t\t\tthis.#getSchemeElementOptions().defaultCountry = params.defaultCountry;\n\t\t\t}\n\t\t}\n\n\t\treturn params;\n\t}\n\t// endregion -------------------------------------------------------------------------------------------------------\n\n\tgetCountrySelectContent(): HTMLElement\n\t{\n\t\tconst wrapper = Tag.render`\n\t\t\t<div class=\"ui-entity-editor-content-block\">\n\t\t\t\t<div class=\"ui-entity-editor-block-title\">\n\t\t\t\t\t<span class=\"ui-entity-editor-block-title-text\">\n\t\t\t\t\t\t${Loc.getMessage('CRM_PHONE_NUMBER_INPUT_FIELD_CONFIGURATOR_TITLE')}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tDom.append(this.#getSelectContainer(), wrapper);\n\n\t\treturn wrapper;\n\t}\n\n\t#getSelectContainer(): HTMLElement\n\t{\n\t\tconst selectContainer = Tag.render`\n\t\t\t<div class=\"ui-entity-editor-content-block crm-entity-country-tag-selector\"></div>\n\t\t`;\n\n\t\tthis.#getCountrySelector().renderTo(selectContainer);\n\n\t\treturn selectContainer;\n\t}\n\n\t#getCountrySelector(): TagSelector\n\t{\n\t\tif (!this.#countrySelector)\n\t\t{\n\t\t\tthis.#countrySelector = new TagSelector({\n\t\t\t\ttextBoxWidth: '100%',\n\t\t\t\ttagMaxWidth: 270,\n\t\t\t\tplaceholder: Loc.getMessage('CRM_PHONE_NUMBER_INPUT_FIELD_CONFIGURATOR_PLACEHOLDER'),\n\t\t\t\tmultiple: false,\n\t\t\t\tdialogOptions: {\n\t\t\t\t\twidth: 425,\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tshowAvatars: true,\n\t\t\t\t\tdropdownMode: true,\n\t\t\t\t\tpreselectedItems: [\n\t\t\t\t\t\t['country', this.#getDefaultCountry()],\n\t\t\t\t\t],\n\t\t\t\t\tentities: [{\n\t\t\t\t\t\tid: 'country',\n\t\t\t\t\t}],\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonFirstShow: (event: BaseEvent): void => {\n\t\t\t\t\t\t\tconst popupContainer = event.getTarget().getPopup().getContentContainer();\n\t\t\t\t\t\t\tif (Type.isDomNode(popupContainer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tDom.addClass(popupContainer, 'crm-entity-country-tag-selector-popup');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#countrySelector;\n\t}\n\n\t#getDefaultCountry(): string\n\t{\n\t\tconst { defaultCountry } = this.#getSchemeElementOptions();\n\t\tif (Type.isStringFilled(defaultCountry))\n\t\t{\n\t\t\treturn defaultCountry;\n\t\t}\n\n\t\treturn DEFAULT_COUNTRY_CODE;\n\t}\n\n\t#getSchemeElementOptions(): ?Object\n\t{\n\t\treturn this?._field?.getSchemeElement()?._options;\n\t}\n\n\tstatic create(id, settings): PhoneNumberInputFieldConfigurator\n\t{\n\t\tconst self = new this();\n\t\tself.initialize(id, settings);\n\n\t\treturn self;\n\t}\n}\n","import { Dom, Loc, Tag, Text, Type } from 'main.core';\n\nimport './styles/requisite-address.css';\n\nconst DEFAULT_ADDRESS_TYPE_ID = '11'; // \\Bitrix\\Crm\\EntityAddressType::Delivery\n\ndeclare type AddressType = {\n\tID: string,\n\tDESCRIPTION: string,\n};\n\nexport default class RequisiteAddressFieldConfigurator extends BX.UI.EntityEditorFieldConfigurator\n{\n\t#addressTypeSelect: HTMLElement = null;\n\n\t#allAddressTypes: Map<string, AddressType> = null;\n\t#suitableAddressTypes: Map<string, AddressType> = null;\n\n\tstatic create(id, settings): RequisiteAddressFieldConfigurator\n\t{\n\t\tconst self = new this();\n\t\tself.initialize(id, settings);\n\n\t\treturn self;\n\t}\n\n\tlayoutInternal(): void\n\t{\n\t\tsuper.layoutInternal();\n\n\t\t// eslint-disable-next-line no-underscore-dangle\n\t\tconst wrapper = this._wrapper;\n\t\tconst hr = wrapper.querySelector('hr');\n\n\t\tDom.insertBefore(this.#getDefaultAddressTypeSetterContainer(), hr);\n\t}\n\n\tprepareSaveParams(...args): Object\n\t{\n\t\tconst params = super.prepareSaveParams(this, args);\n\n\t\tconst newDefaultAddressTypeId = this.#getAddressTypeSelectValue();\n\t\tif (!this.#isValidAddressType(newDefaultAddressTypeId))\n\t\t{\n\t\t\treturn params;\n\t\t}\n\n\t\tthis.#setDefaultAddressTypeToSchemeOptions(newDefaultAddressTypeId);\n\n\t\tparams.defaultAddressType = newDefaultAddressTypeId;\n\n\t\treturn params;\n\t}\n\n\t#setDefaultAddressTypeToSchemeOptions(defaultAddressTypeId: string): void\n\t{\n\t\tconst schemeOptions = this.#getSchemeOptions();\n\t\tif (schemeOptions)\n\t\t{\n\t\t\tschemeOptions.defaultAddressType = defaultAddressTypeId;\n\t\t}\n\t}\n\n\t#getDefaultAddressTypeSetterContainer(): HTMLElement\n\t{\n\t\tconst title = Loc.getMessage('CRM_REQUISITE_DEFAULT_ADDRESS_TYPE_TITLE');\n\n\t\tconst wrapper = Tag.render`\n\t\t\t<div class=\"ui-entity-editor-content-block\">\n\t\t\t\t<div class=\"ui-entity-editor-block-title\">\n\t\t\t\t\t<span class=\"ui-entity-editor-block-title-text\">\n\t\t\t\t\t\t${Text.encode(title)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst selectContainer = Tag.render`<div class=\"ui-entity-editor-content-block crm-default-requisite-address-type\"></div>`;\n\n\t\tDom.append(this.#getAddressTypeSelect(), selectContainer);\n\t\tDom.append(selectContainer, wrapper);\n\n\t\treturn wrapper;\n\t}\n\n\t#getAddressTypeSelect(): HTMLSelectElement\n\t{\n\t\tif (!this.#addressTypeSelect)\n\t\t{\n\t\t\tthis.#addressTypeSelect = Tag.render`<select class=\"main-ui-control main-enum-dialog-input\" name=\"display\"></select>`;\n\t\t\tthis.#getPreparedAddressTypesForOptions().forEach((addressType) => {\n\t\t\t\tconst option = Tag.render`\n\t\t\t\t\t<option value=\"${Text.encode(addressType.value)}\">\n\t\t\t\t\t\t${Text.encode(addressType.label)}\n\t\t\t\t\t</option>\n\t\t\t\t`;\n\n\t\t\t\tDom.append(option, this.#addressTypeSelect);\n\t\t\t});\n\n\t\t\tthis.#addressTypeSelect.value = this.#getDefaultAddressType();\n\t\t}\n\n\t\treturn this.#addressTypeSelect;\n\t}\n\n\t#getDefaultAddressType(): string\n\t{\n\t\tconst { defaultAddressType: optionAddressTypeId } = this.#getSchemeOptions() ?? {};\n\t\tif (this.#isValidAddressType(optionAddressTypeId))\n\t\t{\n\t\t\treturn optionAddressTypeId;\n\t\t}\n\n\t\tconst { defaultAddressType: schemeDefaultAddressTypeId } = this.#getAddressZoneConfig() ?? {};\n\t\tif (this.#isValidAddressType(schemeDefaultAddressTypeId))\n\t\t{\n\t\t\treturn schemeDefaultAddressTypeId;\n\t\t}\n\n\t\treturn DEFAULT_ADDRESS_TYPE_ID;\n\t}\n\n\t#getPreparedAddressTypesForOptions(): Array\n\t{\n\t\tconst options = [];\n\n\t\tconst suitableAddressTypes = this.#getSuitableAddressTypes();\n\t\tsuitableAddressTypes.forEach((addressType) => {\n\t\t\toptions.push({\n\t\t\t\tvalue: addressType.ID,\n\t\t\t\tlabel: addressType.DESCRIPTION,\n\t\t\t});\n\t\t});\n\n\t\treturn options;\n\t}\n\n\t#getAddressTypeSelectValue(): ?string\n\t{\n\t\treturn this.#getAddressTypeSelect().value;\n\t}\n\n\t#isValidAddressType(addressTypeId: string | null): boolean\n\t{\n\t\treturn Type.isStringFilled(addressTypeId)\n\t\t\t&& this.#getSuitableAddressTypes().has(addressTypeId)\n\t\t;\n\t}\n\n\t#getAllAddressTypes(): Map<string, AddressType>\n\t{\n\t\tif (!this.#allAddressTypes)\n\t\t{\n\t\t\tthis.#allAddressTypes = new Map();\n\n\t\t\tconst { types: allAddressTypes } = this.#getSchemeData() ?? {};\n\t\t\tif (allAddressTypes)\n\t\t\t{\n\t\t\t\tObject.values(allAddressTypes).forEach((addressType) => {\n\t\t\t\t\tthis.#allAddressTypes.set(addressType.ID, addressType);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.#allAddressTypes;\n\t}\n\n\t#getSuitableAddressTypes(): Map<string, AddressType>\n\t{\n\t\tif (!this.#suitableAddressTypes)\n\t\t{\n\t\t\tthis.#suitableAddressTypes = new Map();\n\n\t\t\tconst { currentZoneAddressTypes } = this.#getAddressZoneConfig() ?? {};\n\t\t\tif (currentZoneAddressTypes)\n\t\t\t{\n\t\t\t\tcurrentZoneAddressTypes.forEach((addressTypeId) => {\n\t\t\t\t\tconst addressType = this.#getAllAddressTypes().get(addressTypeId);\n\t\t\t\t\tif (addressType)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#suitableAddressTypes.set(addressType.ID, addressType);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.#suitableAddressTypes;\n\t}\n\n\t#getSchemeData(): Object | null\n\t{\n\t\treturn this.#getSchemeElement()?.getData();\n\t}\n\n\t#getSchemeOptions(): Object | null\n\t{\n\t\treturn this.#getSchemeElement()?.getOptions();\n\t}\n\n\t#getSchemeElement(): Object | null\n\t{\n\t\treturn this.getField()?.getSchemeElement();\n\t}\n\n\t#getAddressZoneConfig(): Object | null\n\t{\n\t\treturn this.#getSchemeData()?.addressZoneConfig;\n\t}\n}\n","/* eslint-disable no-underscore-dangle, @bitrix24/bitrix24-rules/no-pseudo-private */\n\nimport { Type } from 'main.core';\n\nimport { PhoneNumberInputFieldConfigurator } from './field-configurators/phone-number-input';\nimport RequisiteAddressFieldConfigurator from './field-configurators/requisite-address';\n\n/**\n * @memberOf BX.Crm\n */\nexport default class EntityConfigurationManager extends BX.UI.EntityConfigurationManager\n{\n\tstatic PHONE_NUMBER_FIELDS = ['PHONE', 'CLIENT', 'COMPANY', 'CONTACT', 'MYCOMPANY_ID'];\n\tstatic REQUISITE_ADDRESS_FIELDS = ['ADDRESS'];\n\n\t/**\n\t * @param {Object} params\n\t * @param {Object} parent\n\t *\n\t * @returns {BX.UI.EntityEditorFieldConfigurator}\n\t *\n\t * @override\n\t */\n\tgetSimpleFieldConfigurator(params: Object, parent: Object): BX.UI.EntityEditorFieldConfigurator\n\t{\n\t\tif (!Type.isPlainObject(params))\n\t\t{\n\t\t\tthrow new TypeError('EntityConfigurationManager: The \"params\" argument must be object.');\n\t\t}\n\n\t\tlet typeId = '';\n\t\tconst { field: child, mandatoryConfigurator } = params;\n\t\tif (child)\n\t\t{\n\t\t\ttypeId = child.getType();\n\n\t\t\tchild.setVisible(false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttypeId = BX.prop.get(params, 'typeId', BX.UI.EntityUserFieldType.string);\n\t\t}\n\n\t\tconst fieldConfiguratorOptions = {\n\t\t\teditor: this._editor,\n\t\t\tschemeElement: null,\n\t\t\tmodel: parent._model,\n\t\t\tmode: BX.UI.EntityEditorMode.edit,\n\t\t\tparent,\n\t\t\ttypeId,\n\t\t\tfield: child,\n\t\t\tmandatoryConfigurator,\n\t\t};\n\n\t\t// override for 'PHONE', 'CLIENT', 'COMPANY', 'CONTACT' fields:\n\t\t// add additional option to set up default country phone code\n\t\tif (EntityConfigurationManager.PHONE_NUMBER_FIELDS.includes(child.getId()))\n\t\t{\n\t\t\tthis._fieldConfigurator = PhoneNumberInputFieldConfigurator.create('', fieldConfiguratorOptions);\n\t\t}\n\t\telse if (\n\t\t\tEntityConfigurationManager.REQUISITE_ADDRESS_FIELDS.includes(child.getId())\n\t\t\t&& typeId === 'requisite_address'\n\t\t)\n\t\t{\n\t\t\tthis._fieldConfigurator = RequisiteAddressFieldConfigurator.create('', fieldConfiguratorOptions);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._fieldConfigurator = BX.UI.EntityEditorFieldConfigurator.create('', fieldConfiguratorOptions);\n\t\t}\n\n\t\treturn this._fieldConfigurator;\n\t}\n\n\t/**\n\t * @param {Object} params\n\t * @param {Object} parent\n\t *\n\t * @returns { BX.UI.EntityEditorUserFieldConfigurator}\n\t *\n\t * @override\n\t */\n\tgetUserFieldConfigurator(params: Object, parent: Object): BX.UI.EntityEditorUserFieldConfigurator\n\t{\n\t\tif (!Type.isPlainObject(params))\n\t\t{\n\t\t\tthrow 'EntityConfigurationManager: The \"params\" argument must be object.';\n\t\t}\n\n\t\tlet typeId = '';\n\t\tlet field = BX.prop.get(params, 'field', null);\n\t\tif (field)\n\t\t{\n\t\t\tif (!(field instanceof BX.UI.EntityEditorUserField))\n\t\t\t{\n\t\t\t\tthrow 'EntityConfigurationManager: The \"field\" param must be EntityEditorUserField.';\n\t\t\t}\n\n\t\t\ttypeId = field.getFieldType();\n\n\t\t\tfield.setVisible(false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttypeId = BX.prop.get(params, 'typeId', BX.UI.EntityUserFieldType.string);\n\t\t}\n\n\t\tif (typeId === 'resourcebooking')\n\t\t{\n\t\t\tlet options = {\n\t\t\t\teditor: this._editor,\n\t\t\t\tschemeElement: null,\n\t\t\t\tmodel: parent.getModel(),\n\t\t\t\tmode: BX.UI.EntityEditorMode.edit,\n\t\t\t\tparent: parent,\n\t\t\t\ttypeId: typeId,\n\t\t\t\tfield: field,\n\t\t\t\tshowAlways: true,\n\t\t\t\tenableMandatoryControl: BX.prop.getBoolean(params, 'enableMandatoryControl', true),\n\t\t\t\tmandatoryConfigurator: params.mandatoryConfigurator\n\t\t\t};\n\n\t\t\tif (BX.Calendar && BX.type.isFunction(BX.Calendar.ResourcebookingUserfield))\n\t\t\t{\n\t\t\t\treturn BX.Calendar.ResourcebookingUserfield.getCrmFieldConfigurator('', options);\n\t\t\t}\n\t\t\telse if (BX.Calendar && BX.Calendar.UserField && BX.Calendar.UserField.EntityEditorUserFieldConfigurator)\n\t\t\t{\n\t\t\t\treturn BX.Calendar.UserField.EntityEditorUserFieldConfigurator.create('', options);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn BX.Crm.EntityEditorUserFieldConfigurator.create(\n\t\t\t\t'',\n\t\t\t\t{\n\t\t\t\t\teditor: this._editor,\n\t\t\t\t\tschemeElement: null,\n\t\t\t\t\tmodel: parent.getModel(),\n\t\t\t\t\tmode: BX.UI.EntityEditorMode.edit,\n\t\t\t\t\tparent: parent,\n\t\t\t\t\ttypeId: typeId,\n\t\t\t\t\tfield: field,\n\t\t\t\t\tmandatoryConfigurator: params.mandatoryConfigurator,\n\t\t\t\t\tvisibilityConfigurator: params.visibilityConfigurator,\n\t\t\t\t\tshowAlways: true\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\n\tgetTypeInfos()\n\t{\n\t\tlet typeInfos = super.getTypeInfos();\n\t\tlet ufAddRestriction = this._editor.getRestriction('userFieldAdd');\n\t\tlet ufResourceBookingRestriction = this._editor.getRestriction('userFieldResourceBooking');\n\n\t\tif (ufAddRestriction && !ufAddRestriction['isPermitted'] && ufAddRestriction['restrictionCallback'])\n\t\t{\n\t\t\tfor (let i = 0, length = typeInfos.length; i < length; i++)\n\t\t\t{\n\t\t\t\ttypeInfos[i].callback = function()\n\t\t\t\t{\n\t\t\t\t\teval(ufAddRestriction['restrictionCallback']);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\telse if (\n\t\t\tufResourceBookingRestriction\n\t\t\t&& !ufResourceBookingRestriction['isPermitted']\n\t\t\t&& ufResourceBookingRestriction['restrictionCallback']\n\t\t)\n\t\t{\n\t\t\tfor (let j = 0; j < typeInfos.length; j++)\n\t\t\t{\n\t\t\t\tif (typeInfos[j].name === 'resourcebooking')\n\t\t\t\t{\n\t\t\t\t\ttypeInfos[j].callback = function()\n\t\t\t\t\t{\n\t\t\t\t\t\teval(ufResourceBookingRestriction['restrictionCallback']);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn typeInfos;\n\t};\n\n\tstatic create(id, settings): EntityConfigurationManager\n\t{\n\t\tconst self = new this;\n\n\t\tself.initialize(id, settings);\n\n\t\treturn self;\n\t}\n}\n"],"names":["DEFAULT_COUNTRY_CODE","PhoneNumberInputFieldConfigurator","destroy","Dom","append","getInputContainer","_wrapper","_typeId","layoutInnerConfigurator","_field","getInnerConfig","getItems","getOptionContainer","getCountrySelectContent","Tag","render","getButtonContainer","args","params","items","getDialog","getSelectedItems","length","defaultCountry","Type","isArrayFilled","id","wrapper","Loc","getMessage","settings","self","initialize","BX","UI","EntityEditorFieldConfigurator","selectContainer","renderTo","TagSelector","textBoxWidth","tagMaxWidth","placeholder","multiple","dialogOptions","width","showAvatars","dropdownMode","preselectedItems","entities","events","onFirstShow","event","popupContainer","getTarget","getPopup","getContentContainer","isDomNode","addClass","isStringFilled","getSchemeElement","_options","DEFAULT_ADDRESS_TYPE_ID","RequisiteAddressFieldConfigurator","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","hr","querySelector","insertBefore","newDefaultAddressTypeId","_classPrivateMethodGet","defaultAddressType","defaultAddressTypeId","schemeOptions","title","Text","encode","forEach","addressType","option","value","label","optionAddressTypeId","schemeDefaultAddressTypeId","options","suitableAddressTypes","push","ID","DESCRIPTION","addressTypeId","has","Map","allAddressTypes","types","Object","values","set","currentZoneAddressTypes","get","getData","getOptions","getField","addressZoneConfig","EntityConfigurationManager","parent","isPlainObject","TypeError","typeId","child","field","mandatoryConfigurator","getType","setVisible","prop","EntityUserFieldType","string","fieldConfiguratorOptions","editor","_editor","schemeElement","model","_model","mode","EntityEditorMode","edit","PHONE_NUMBER_FIELDS","includes","getId","_fieldConfigurator","create","REQUISITE_ADDRESS_FIELDS","EntityEditorUserField","getFieldType","getModel","showAlways","enableMandatoryControl","getBoolean","Calendar","type","isFunction","ResourcebookingUserfield","getCrmFieldConfigurator","UserField","EntityEditorUserFieldConfigurator","Crm","visibilityConfigurator","typeInfos","ufAddRestriction","getRestriction","ufResourceBookingRestriction","i","callback","eval","j","name"],"mappings":"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"}