{"version":3,"file":"sort.bundle.js","sources":["../src/type.js","../src/settings.js","../src/settings-controller.js","../src/sorter.js","../src/index.js"],"sourcesContent":["/**\n * @memberOf BX.Crm.Kanban.Sort\n */\nconst Type = {\n\tBY_ID: 'BY_ID',\n\tBY_LAST_ACTIVITY_TIME: 'BY_LAST_ACTIVITY_TIME',\n\n\tisDefined(type: string): boolean\n\t{\n\t\treturn (\n\t\t\ttype === this.BY_ID\n\t\t\t|| type === this.BY_LAST_ACTIVITY_TIME\n\t\t);\n\t},\n\n\tgetAll(): string[]\n\t{\n\t\treturn [\n\t\t\tthis.BY_ID,\n\t\t\tthis.BY_LAST_ACTIVITY_TIME,\n\t\t];\n\t},\n};\n\nObject.freeze(Type);\n\nexport { Type };\n","import { Type as SortType } from \"./type\";\nimport { Type } from \"main.core\";\n\n/**\n * @memberOf BX.CRM.Kanban.Sort.Settings\n */\nexport class Settings\n{\n\t#supportedTypes: string[];\n\t#currentType: string;\n\n\tconstructor(supportedTypes: string[], currentType: string)\n\t{\n\t\tsupportedTypes = Type.isArray(supportedTypes) ? supportedTypes : [];\n\t\tthis.#supportedTypes = supportedTypes.filter((type) => SortType.isDefined(type));\n\n\t\tif (this.#supportedTypes.length <= 0)\n\t\t{\n\t\t\tthrow new Error('No valid supported types provided');\n\t\t}\n\n\t\tif (!Type.isString(currentType) || !SortType.isDefined(currentType))\n\t\t{\n\t\t\tthrow new Error('currentType is not a valid sort type');\n\t\t}\n\t\tif (!this.#supportedTypes.includes(currentType))\n\t\t{\n\t\t\tthrow new Error('currentType is not supported')\n\t\t}\n\n\t\tthis.#currentType = currentType;\n\t}\n\n\tgetSupportedTypes(): string[]\n\t{\n\t\treturn this.#supportedTypes;\n\t}\n\n\tisTypeSupported(sortType: string): boolean\n\t{\n\t\treturn this.#supportedTypes.includes(sortType);\n\t}\n\n\tgetCurrentType(): string\n\t{\n\t\treturn this.#currentType;\n\t}\n\n\tstatic createFromJson(json: string): Settings\n\t{\n\t\tconst {supportedTypes, currentType} = JSON.parse(json);\n\n\t\treturn new Settings(supportedTypes, currentType);\n\t}\n}\n","import { Settings } from \"./settings\";\nimport { Reflection } from \"main.core\";\n\nlet instance = null;\n\n/**\n * @memberOf BX.CRM.Kanban.Sort\n */\nexport class SettingsController\n{\n\t#grid: BX.CRM.Kanban.Grid;\n\t#settings: Settings;\n\n\t#sortChangePromise: ?Promise = null;\n\n\tstatic get Instance(): SettingsController\n\t{\n\t\tif ((window.top !== window) && Reflection.getClass('top.BX.CRM.Kanban.Sort.SettingsController'))\n\t\t{\n\t\t\treturn window.top.BX.CRM.Kanban.Sort.SettingsController;\n\t\t}\n\n\t\tif (!instance)\n\t\t{\n\t\t\tthrow new Error('SettingsController must be inited before use');\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tstatic init(grid: BX.CRM.Kanban.Grid, settings: Settings): void\n\t{\n\t\tif (instance)\n\t\t{\n\t\t\tconsole.warn('Attempt to re-init SettingsController');\n\n\t\t\treturn;\n\t\t}\n\n\t\tinstance = new SettingsController(grid, settings);\n\t}\n\n\tconstructor(grid: BX.CRM.Kanban.Grid, settings: Settings)\n\t{\n\t\tif (instance)\n\t\t{\n\t\t\tthrow new Error('SettingsController is a singleton, another instance exists already. Use Instance to access it');\n\t\t}\n\n\t\tif (!(grid instanceof BX.CRM.Kanban.Grid))\n\t\t{\n\t\t\tconsole.error(grid);\n\n\t\t\tthrow new Error('grid should be an instance of BX.CRM.Kanban.Grid');\n\t\t}\n\n\t\tthis.#grid = grid;\n\n\t\tif (!(settings instanceof Settings))\n\t\t{\n\t\t\tconsole.error(settings);\n\n\t\t\tthrow new Error('settings should be an instance of Settings');\n\t\t}\n\n\t\tthis.#settings = settings;\n\t}\n\n\tsetCurrentSortType(sortType: string): Promise<void>\n\t{\n\t\tif (!this.#sortChangePromise)\n\t\t{\n\t\t\tthis.#sortChangePromise = this.#grid.setCurrentSortType(sortType).then(() => {\n\t\t\t\t//save new current sort type\n\t\t\t\tthis.#settings = new Settings(\n\t\t\t\t\tthis.#settings.getSupportedTypes(),\n\t\t\t\t\tsortType,\n\t\t\t\t);\n\n\t\t\t\tthis.#grid.reload();\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error(error);\n\n\t\t\t\tthrow error;\n\t\t\t}).finally(() => {\n\t\t\t\tthis.#sortChangePromise = null;\n\t\t\t});\n\t\t}\n\n\t\treturn this.#sortChangePromise;\n\t}\n\n\tgetCurrentSettings(): Settings\n\t{\n\t\treturn this.#settings;\n\t}\n}\n","import { Text, Type } from \"main.core\";\nimport { SortParams } from \"./sort-params\";\nimport { Type as SortType } from \"./type\";\nimport { SettingsController } from \"./settings-controller\";\n\n/**\n * @memberOf BX.CRM.Kanban.Sort\n */\nexport class Sorter\n{\n\t#sortType: string;\n\t#items: BX.CRM.Kanban.Item[];\n\n\tstatic createWithCurrentSortType(items: BX.CRM.Kanban.Item[]): Sorter\n\t{\n\t\treturn new Sorter(\n\t\t\tSettingsController.Instance.getCurrentSettings().getCurrentType(),\n\t\t\titems,\n\t\t);\n\t}\n\n\tconstructor(sortType: string, items: BX.CRM.Kanban.Item[])\n\t{\n\t\tif (!SortType.isDefined(sortType))\n\t\t{\n\t\t\tthrow new Error('Undefined sort type');\n\t\t}\n\t\tthis.#sortType = sortType;\n\n\t\tthis.#items = Type.isArray(items) ? items : [];\n\t}\n\n\tgetSortType()\n\t{\n\t\treturn this.#sortType;\n\t}\n\n\t/**\n\t * Returns items sorted in descending order. Beginning of array - is column top, end - column bottom.\n\t *\n\t * @returns {BX.CRM.Kanban.Item[]}\n\t */\n\tgetSortedItems(): BX.CRM.Kanban.Item[]\n\t{\n\t\tlet extractValue: (BX.CRM.Kanban.Item) => number;\n\t\tif (this.#sortType === SortType.BY_ID)\n\t\t{\n\t\t\textractValue = this.#extractId;\n\t\t}\n\t\telse if (this.#sortType === SortType.BY_LAST_ACTIVITY_TIME)\n\t\t{\n\t\t\textractValue = this.#extractTimestamp;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Unknown sort type');\n\t\t}\n\n\t\tconst sortedItems = Array.from(this.#items);\n\n\t\tsortedItems.sort((left, right) => {\n\t\t\treturn extractValue(right) - extractValue(left);\n\t\t});\n\n\t\treturn sortedItems;\n\t}\n\n\t#extractId(item: BX.CRM.Kanban.Item): number\n\t{\n\t\treturn Text.toInteger(item.getData()?.sort?.id);\n\t}\n\n\t#extractTimestamp(item: BX.CRM.Kanban.Item): number\n\t{\n\t\treturn Text.toInteger(item.getData()?.sort?.lastActivityTimestamp);\n\t}\n\n\tcalcBeforeItem(item: BX.CRM.Kanban.Item): ?BX.CRM.Kanban.Item\n\t{\n\t\tconst sortParams: ?SortParams = item.getData().sort;\n\n\t\treturn Type.isPlainObject(sortParams) ? this.calcBeforeItemByParams(sortParams) : null;\n\t}\n\n\tcalcBeforeItemByParams(sort: SortParams): ?BX.CRM.Kanban.Item\n\t{\n\t\tconst id = Text.toInteger(sort?.id);\n\t\tif (id <= 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.#sortType === SortType.BY_ID)\n\t\t{\n\t\t\treturn this.#calcById(id);\n\t\t}\n\t\telse if (this.#sortType === SortType.BY_LAST_ACTIVITY_TIME)\n\t\t{\n\t\t\tconst lastActivityTimestamp = Text.toInteger(sort?.lastActivityTimestamp);\n\t\t\tif (lastActivityTimestamp <= 0)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.#calcByLastActivityTime(id, lastActivityTimestamp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Unknown sort type');\n\t\t}\n\t}\n\n\t#calcById(id: number): ?BX.CRM.Kanban.Item\n\t{\n\t\tconst notSortedItems = this.#items;\n\t\tfor (let index = 0; index < notSortedItems.length; index++)\n\t\t{\n\t\t\tconst item = notSortedItems[index];\n\t\t\tif (this.#extractId(item) === id)\n\t\t\t{\n\t\t\t\treturn this.#findFirstDifferentItem(id, notSortedItems, index);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t#calcByLastActivityTime(id: number, lastActivityTimestamp: number): ?BX.CRM.Kanban.Item\n\t{\n\t\tconst sortedItems = this.getSortedItems();\n\t\tfor (let index = 0; index < sortedItems.length; index++)\n\t\t{\n\t\t\tconst item = sortedItems[index];\n\t\t\tif (this.#extractTimestamp(item) <= lastActivityTimestamp)\n\t\t\t{\n\t\t\t\treturn this.#findFirstDifferentItem(id, sortedItems, index);\n\t\t\t}\n\t\t}\n\n\t\tif (sortedItems.length > 0)\n\t\t{\n\t\t\t// item should be placed at bottom\n\t\t\treturn sortedItems[sortedItems.length - 1];\n\t\t}\n\n\t\t// no items, place item on top\n\t\treturn null;\n\t}\n\n\t#findFirstDifferentItem(itemId: number, items: BX.CRM.Kanban.Item[], startIndex: number): ?BX.CRM.Kanban.Item\n\t{\n\t\tfor (let index = startIndex; index < items.length; index++)\n\t\t{\n\t\t\tconst item = items[index];\n\n\t\t\tif (itemId !== this.#extractId(item))\n\t\t\t{\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import { Reflection } from \"main.core\";\n\nimport { Sorter } from \"./sorter\";\nimport { Settings } from \"./settings\";\nimport { SettingsController } from \"./settings-controller\";\nimport { Type } from \"./type\";\nimport type { SortParams } from \"./sort-params\";\n\nconst namespace = Reflection.namespace('BX.CRM.Kanban.Sort');\nnamespace.Sorter = Sorter;\nnamespace.Settings = Settings;\nnamespace.SettingsController = SettingsController;\nnamespace.Type = Type;\n\nexport {\n\tSorter,\n\tSettings,\n\tSettingsController,\n\tType,\n};\n\nexport type {\n\tSortParams,\n};\n"],"names":["Type","BY_ID","BY_LAST_ACTIVITY_TIME","isDefined","type","getAll","Object","freeze","Settings","constructor","supportedTypes","currentType","isArray","filter","SortType","length","Error","isString","includes","getSupportedTypes","isTypeSupported","sortType","getCurrentType","createFromJson","json","JSON","parse","instance","SettingsController","Instance","window","top","Reflection","getClass","BX","CRM","Kanban","Sort","init","grid","settings","console","warn","Grid","error","setCurrentSortType","then","reload","catch","finally","getCurrentSettings","Sorter","createWithCurrentSortType","items","getSortType","getSortedItems","extractValue","sortedItems","Array","from","sort","left","right","calcBeforeItem","item","sortParams","getData","isPlainObject","calcBeforeItemByParams","id","Text","toInteger","lastActivityTimestamp","notSortedItems","index","itemId","startIndex","namespace"],"mappings":"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"}