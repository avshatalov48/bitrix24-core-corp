{"version":3,"file":"model.bundle.js","sources":["../src/model.js"],"sourcesContent":["import { ajax as Ajax, Type } from \"main.core\";\n\ndeclare type ModelData = {\n    id: ?number,\n    entityTypeId: ?number,\n};\n\ndeclare type getParameters = {\n    analyticsLabel: ?string,\n    context: ?string,\n}\n\nexport type Actions = {\n\tget: ?string,\n\tadd: ?string,\n\tupdate: ?string,\n\tdelete: ?string,\n};\n\n/**\n * @abstract\n * @memberOf BX.Crm\n */\nexport class Model\n{\n    data;\n    getParameters;\n    deleted = false;\n    progress = false;\n\n    constructor(data: ModelData, params: ?{\n        getParameters: ?{\n            get: ?getParameters,\n            add: ?getParameters,\n            update: ?getParameters,\n            delete: ?getParameters,\n        }\n    })\n    {\n        this.data = {};\n        if(Type.isPlainObject(data))\n        {\n            this.data = data;\n        }\n        this.getParameters = {\n            add: {},\n            get: {},\n            update: {},\n            delete: {},\n        };\n        if(Type.isPlainObject(params))\n        {\n            this.getParameters = params.getParameters;\n        }\n    }\n\n    get actions(): Actions\n    {\n        return {\n            get: this.compileActionString('get'),\n            add: this.compileActionString('add'),\n            update: this.compileActionString('update'),\n            delete: this.compileActionString('delete'),\n        };\n    }\n\n\t/**\n\t * @protected\n\t * @param action\n\t */\n\tcompileActionString(action: string): string\n\t{\n\t\treturn ('crm.api.' + this.getModelName() + '.' + action);\n\t}\n\n    getId(): ?number\n    {\n        return this.data.id;\n    }\n\n    getEntityTypeId(): ?number\n    {\n        return this.data.entityTypeId;\n    }\n\n    isSaved(): boolean\n    {\n        return (this.getId() > 0);\n    }\n\n    isDeleted(): boolean\n\t{\n\t\treturn this.deleted;\n\t}\n\n    setData(data: ModelData): this\n    {\n        this.data = data;\n\n        return this;\n    }\n\n    getData(): ModelData\n    {\n        return this.data;\n    }\n\n    setGetParameters(action: string, parameters: getParameters)\n    {\n        this.getParameters[action] = parameters;\n    }\n\n    getGetParameters(action: string): getParameters\n    {\n        return {\n            ...{\n                analyticsLabel: 'crmModel' + this.getModelName() + action,\n            },\n            ...this.getParameters[action]\n        };\n    }\n\n    /**\n     * @abstract\n     */\n    getModelName(): string\n    {\n        throw new Error('Method \"getModelName\" should be overridden');\n    }\n\n    setDataFromResponse(response: {data: {}})\n    {\n        this.setData(response.data[this.getModelName()]);\n    }\n\n    load(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant load ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.get;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Load action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('get')\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n\n    save(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            let errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            let action;\n            let data;\n            let getParameters;\n            if(this.isSaved())\n            {\n                action = this.actions.update;\n                data = {\n                    id: this.getId(),\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('update');\n            }\n            else\n            {\n                action = this.actions.add;\n                data = {\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('add');\n            }\n\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Save action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data,\n                getParameters,\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                errors = [...errors, ...this.extractErrorMessages(response)];\n                reject(errors);\n            });\n        });\n    }\n\n\t/**\n\t * @protected\n\t * @param errors\n\t */\n\textractErrorMessages({errors}): string[]\n\t{\n\t\tconst errorMessages: string[] = [];\n\t\terrors.forEach( ({message}) => {\n\t\t\tif(Type.isPlainObject(message) && message.text)\n\t\t\t{\n\t\t\t\terrorMessages.push(message.text);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\terrorMessages.push(message);\n\t\t\t}\n\t\t});\n\n\t\treturn errorMessages;\n\t}\n\n    delete(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant delete ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.delete;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Delete action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('delete'),\n            }).then((response) => {\n                this.deleted = true;\n                this.progress = false;\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n}\n"],"names":["Model","data","params","Type","isPlainObject","getParameters","add","get","update","action","getModelName","id","entityTypeId","getId","deleted","parameters","analyticsLabel","Error","response","setData","Promise","resolve","reject","errors","progress","push","isSaved","actions","isString","length","Ajax","runAction","getGetParameters","then","setDataFromResponse","forEach","message","fields","getData","extractErrorMessages","errorMessages","text","compileActionString"],"mappings":"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"}