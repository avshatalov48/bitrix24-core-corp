{"version":3,"file":"model.bundle.js","sources":["../src/model.js"],"sourcesContent":["import { ajax as Ajax, Type } from \"main.core\";\n\ndeclare type ModelData = {\n    id: ?number,\n    entityTypeId: ?number,\n};\n\ndeclare type getParameters = {\n    analyticsLabel: ?string,\n    context: ?string,\n}\n\nexport type Actions = {\n\tget: ?string,\n\tadd: ?string,\n\tupdate: ?string,\n\tdelete: ?string,\n};\n\n/**\n * @abstract\n * @memberOf BX.Crm\n */\nexport class Model\n{\n    data;\n    getParameters;\n    deleted = false;\n    progress = false;\n\n    constructor(data: ModelData, params: ?{\n        getParameters: ?{\n            get: ?getParameters,\n            add: ?getParameters,\n            update: ?getParameters,\n            delete: ?getParameters,\n        }\n    })\n    {\n        this.data = {};\n        if(Type.isPlainObject(data))\n        {\n            this.data = data;\n        }\n        this.getParameters = {\n            add: {},\n            get: {},\n            update: {},\n            delete: {},\n        };\n        if(Type.isPlainObject(params))\n        {\n            this.getParameters = params.getParameters;\n        }\n    }\n\n    get actions(): Actions\n    {\n        return {\n            get: this.compileActionString('get'),\n            add: this.compileActionString('add'),\n            update: this.compileActionString('update'),\n            delete: this.compileActionString('delete'),\n        };\n    }\n\n\t/**\n\t * @protected\n\t * @param action\n\t */\n\tcompileActionString(action: string): string\n\t{\n\t\treturn ('crm.api.' + this.getModelName() + '.' + action);\n\t}\n\n    getId(): ?number\n    {\n        return this.data.id;\n    }\n\n    getEntityTypeId(): ?number\n    {\n        return this.data.entityTypeId;\n    }\n\n    isSaved(): boolean\n    {\n        return (this.getId() > 0);\n    }\n\n    isDeleted(): boolean\n\t{\n\t\treturn this.deleted;\n\t}\n\n    setData(data: ModelData): this\n    {\n        this.data = data;\n\n        return this;\n    }\n\n    getData(): ModelData\n    {\n        return this.data;\n    }\n\n    setGetParameters(action: string, parameters: getParameters)\n    {\n        this.getParameters[action] = parameters;\n    }\n\n    getGetParameters(action: string): getParameters\n    {\n        return {\n            ...{\n                analyticsLabel: 'crmModel' + this.getModelName() + action,\n            },\n            ...this.getParameters[action]\n        };\n    }\n\n    /**\n     * @abstract\n     */\n    getModelName(): string\n    {\n        throw new Error('Method \"getModelName\" should be overridden');\n    }\n\n    setDataFromResponse(response: {data: {}})\n    {\n        this.setData(response.data[this.getModelName()]);\n    }\n\n    load(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant load ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.get;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Load action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('get')\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n\n    save(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            let errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            let action;\n            let data;\n            let getParameters;\n            if(this.isSaved())\n            {\n                action = this.actions.update;\n                data = {\n                    id: this.getId(),\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('update');\n            }\n            else\n            {\n                action = this.actions.add;\n                data = {\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('add');\n            }\n\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Save action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data,\n                getParameters,\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                errors = [...errors, ...this.extractErrorMessages(response)];\n                reject(errors);\n            });\n        });\n    }\n\n\t/**\n\t * @protected\n\t * @param errors\n\t */\n\textractErrorMessages({errors}): string[]\n\t{\n\t\tconst errorMessages: string[] = [];\n\t\terrors.forEach( ({message}) => {\n\t\t\tif(Type.isPlainObject(message) && message.text)\n\t\t\t{\n\t\t\t\terrorMessages.push(message.text);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\terrorMessages.push(message);\n\t\t\t}\n\t\t});\n\n\t\treturn errorMessages;\n\t}\n\n    delete(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant delete ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.delete;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Delete action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('delete'),\n            }).then((response) => {\n                this.deleted = true;\n                this.progress = false;\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n}\n"],"names":["Model","data","params","Type","isPlainObject","getParameters","add","get","update","action","getModelName","id","entityTypeId","getId","deleted","parameters","analyticsLabel","Error","response","setData","Promise","resolve","reject","errors","progress","push","isSaved","actions","isString","length","Ajax","runAction","getGetParameters","then","setDataFromResponse","forEach","message","fields","getData","extractErrorMessages","errorMessages","text","compileActionString"],"mappings":"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"}