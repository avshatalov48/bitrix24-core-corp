{"version":3,"file":"model.bundle.js","sources":["../src/model.js"],"sourcesContent":["import { ajax as Ajax, Type } from \"main.core\";\n\ndeclare type ModelData = {\n    id: ?number,\n    entityTypeId: ?number,\n};\n\ndeclare type getParameters = {\n    analyticsLabel: ?string,\n    context: ?string,\n}\n\nexport type Actions = {\n\tget: ?string,\n\tadd: ?string,\n\tupdate: ?string,\n\tdelete: ?string,\n};\n\n/**\n * @abstract\n * @memberOf BX.Crm\n */\nexport class Model\n{\n    data;\n    getParameters;\n    deleted = false;\n    progress = false;\n\n    constructor(data: ModelData, params: ?{\n        getParameters: ?{\n            get: ?getParameters,\n            add: ?getParameters,\n            update: ?getParameters,\n            delete: ?getParameters,\n        }\n    })\n    {\n        this.data = {};\n        if(Type.isPlainObject(data))\n        {\n            this.data = data;\n        }\n        this.getParameters = {\n            add: {},\n            get: {},\n            update: {},\n            delete: {},\n        };\n        if(Type.isPlainObject(params))\n        {\n            this.getParameters = params.getParameters;\n        }\n    }\n\n    get actions(): Actions\n    {\n        return {\n            get: this.compileActionString('get'),\n            add: this.compileActionString('add'),\n            update: this.compileActionString('update'),\n            delete: this.compileActionString('delete'),\n        };\n    }\n\n\t/**\n\t * @protected\n\t * @param action\n\t */\n\tcompileActionString(action: string): string\n\t{\n\t\treturn ('crm.api.' + this.getModelName() + '.' + action);\n\t}\n\n    getId(): ?number\n    {\n        return this.data.id;\n    }\n\n    getEntityTypeId(): ?number\n    {\n        return this.data.entityTypeId;\n    }\n\n    isSaved(): boolean\n    {\n        return (this.getId() > 0);\n    }\n\n    isDeleted(): boolean\n\t{\n\t\treturn this.deleted;\n\t}\n\n    setData(data: ModelData): this\n    {\n        this.data = data;\n\n        return this;\n    }\n\n    getData(): ModelData\n    {\n        return this.data;\n    }\n\n    setGetParameters(action: string, parameters: getParameters)\n    {\n        this.getParameters[action] = parameters;\n    }\n\n    getGetParameters(action: string): getParameters\n    {\n        return {\n            ...{\n                analyticsLabel: 'crmModel' + this.getModelName() + action,\n            },\n            ...this.getParameters[action]\n        };\n    }\n\n    /**\n     * @abstract\n     */\n    getModelName(): string\n    {\n        throw new Error('Method \"getModelName\" should be overridden');\n    }\n\n    setDataFromResponse(response: {data: {}})\n    {\n        this.setData(response.data[this.getModelName()]);\n    }\n\n    load(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant load ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.get;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Load action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('get')\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n\n    save(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            let errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            let action;\n            let data;\n            let getParameters;\n            if(this.isSaved())\n            {\n                action = this.actions.update;\n                data = {\n                    id: this.getId(),\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('update');\n            }\n            else\n            {\n                action = this.actions.add;\n                data = {\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('add');\n            }\n\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Save action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data,\n                getParameters,\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                errors = [...errors, ...this.extractErrorMessages(response)];\n                reject(errors);\n            });\n        });\n    }\n\n\t/**\n\t * @protected\n\t * @param errors\n\t */\n\textractErrorMessages({errors}): string[]\n\t{\n\t\tconst errorMessages: string[] = [];\n\t\terrors.forEach( ({message}) => {\n\t\t\tif(Type.isPlainObject(message) && message.text)\n\t\t\t{\n\t\t\t\terrorMessages.push(message.text);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\terrorMessages.push(message);\n\t\t\t}\n\t\t});\n\n\t\treturn errorMessages;\n\t}\n\n    delete(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant delete ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.delete;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Delete action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('delete'),\n            }).then((response) => {\n                this.deleted = true;\n                this.progress = false;\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n}\n"],"names":["Model","data","params","Type","isPlainObject","getParameters","add","get","update","delete","action","getModelName","id","entityTypeId","getId","deleted","parameters","analyticsLabel","Error","response","setData","Promise","resolve","reject","errors","progress","push","isSaved","actions","isString","length","Ajax","runAction","getGetParameters","then","setDataFromResponse","catch","forEach","message","fields","getData","extractErrorMessages","errorMessages","text","compileActionString"],"mappings":"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"}