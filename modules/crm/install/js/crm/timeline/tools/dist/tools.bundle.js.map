{"version":3,"file":"tools.bundle.js","sources":["../src/datetime-converter.js"],"sourcesContent":["import { Loc } from \"main.core\";\nimport { DateTimeFormat } from \"main.date\";\nimport { TimestampConverter, Factory } from \"crm.datetime\";\n\ndeclare type DateTimeFormatOptions = {\n\twithDayOfWeek: Boolean,\n\tdelimiter: string\n};\n\nexport default class DatetimeConverter\n{\n\t#timeFormat: string;\n\t#shortDateFormat: string;\n\t#fullDateFormat: string;\n\t#datetime: ?Date = null;\n\n\t/**\n\t * @param timestamp Timestamp in server timezone\n\t */\n\tstatic createFromServerTimestamp(timestamp: Number): DatetimeConverter\n\t{\n\t\tconst date = Factory.createFromTimestampInServerTimezone(timestamp);\n\n\t\treturn new DatetimeConverter(date);\n\t}\n\n\tconstructor(datetime: Date)\n\t{\n\t\tthis.#timeFormat = Loc.getMessage('CRM_TIMELINE_TIME_FORMAT');\n\t\tthis.#shortDateFormat = Loc.getMessage('CRM_TIMELINE_SHORT_DATE_FORMAT');\n\t\tthis.#fullDateFormat = Loc.getMessage('CRM_TIMELINE_FULL_DATE_FORMAT');\n\n\t\tthis.#datetime = datetime;\n\t}\n\tgetValue(): Date\n\t{\n\t\treturn this.#datetime;\n\t}\n\n\ttoUserTime(): DatetimeConverter\n\t{\n\t\tconst serverTimestamp = Math.floor(this.#datetime.getTime() / 1000);\n\t\tthis.#datetime = new Date(TimestampConverter.serverToUser(serverTimestamp) * 1000);\n\n\t\treturn this;\n\t}\n\n\ttoDatetimeString(options: DateTimeFormatOptions): string\n\t{\n\t\toptions = options || {};\n\n\t\tconst now = new Date();\n\t\tconst withDayOfWeek = !!options.withDayOfWeek;\n\t\tconst delimiter = options.delimiter || ' ';\n\n\t\treturn DateTimeFormat.format(\n\t\t\t[\n\t\t\t\t[ 'today', 'today' + delimiter + this.#timeFormat ],\n\t\t\t\t[ 'tommorow', 'tommorow' + delimiter + this.#timeFormat ],\n\t\t\t\t[ 'yesterday', 'yesterday' + delimiter + this.#timeFormat ],\n\t\t\t\t[\n\t\t\t\t\t'',\n\t\t\t\t\t(withDayOfWeek ? 'D'+ delimiter : '')\n\t\t\t\t\t+ (this.#datetime.getFullYear() === now.getFullYear() ? this.#shortDateFormat :  this.#fullDateFormat)\n\t\t\t\t\t+ delimiter\n\t\t\t\t\t+ this.#timeFormat\n\t\t\t\t]\n\t\t\t],\n\t\t\tthis.#datetime,\n\t\t\tnow\n\t\t).replaceAll('\\\\', '');\n\t}\n\n\ttoTimeString(now: Date, utc: boolean): string\n\t{\n\t\treturn DateTimeFormat.format(this.#timeFormat, this.#datetime, now, utc).replaceAll('\\\\', '');\n\t}\n\n\ttoDateString(): string\n\t{\n\t\treturn (\n\t\t\tDateTimeFormat.format(\n\t\t\t\t[\n\t\t\t\t\t['today', 'today'],\n\t\t\t\t\t['tommorow', 'tommorow'],\n\t\t\t\t\t['yesterday', 'yesterday'],\n\t\t\t\t\t['', (this.#datetime.getFullYear() === (Factory.getUserNow()).getFullYear() ?  this.#shortDateFormat :  this.#fullDateFormat)]\n\t\t\t\t],\n\t\t\t\tthis.#datetime\n\t\t\t).replaceAll('\\\\', '')\n\t\t);\n\t}\n\n\ttoFormatString(format: string, now: Date, utc: boolean): string\n\t{\n\t\treturn DateTimeFormat.format(format, this.#datetime, now, utc).replaceAll('\\\\', '');\n\t}\n\n\tstatic getSiteDateFormat(): string\n\t{\n\t\treturn DateTimeFormat.convertBitrixFormat(Loc.getMessage('FORMAT_DATE'));\n\t}\n\n\tstatic getSiteDateTimeFormat(): string\n\t{\n\t\treturn DateTimeFormat.convertBitrixFormat(Loc.getMessage('FORMAT_DATETIME'));\n\t}\n}\n"],"names":["DatetimeConverter","timestamp","date","Factory","createFromTimestampInServerTimezone","datetime","Loc","getMessage","serverTimestamp","Math","floor","getTime","Date","TimestampConverter","serverToUser","options","now","withDayOfWeek","delimiter","DateTimeFormat","format","getFullYear","replaceAll","utc","getUserNow","convertBitrixFormat"],"mappings":"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"}