{"version":3,"file":"tools.bundle.js","sources":["../src/datetime-converter.js"],"sourcesContent":["import {Loc} from \"main.core\";\nimport {DateTimeFormat} from \"main.date\";\n\ndeclare type DateTimeFormatOptions = {\n\twithDayOfWeek: Boolean,\n\tdelimiter: string\n};\n\nexport default class DatetimeConverter\n{\n\t#timeFormat: string;\n\t#shortDateFormat: string;\n\t#fullDateFormat: string;\n\t#datetime: ?Date = null;\n\n\t/**\n\t * @param timestamp Timestamp in server timezone\n\t */\n\tstatic createFromServerTimestamp(timestamp: Number): DatetimeConverter\n\t{\n\t\tlet serverTimezoneOffset = parseInt(Loc.getMessage('CRM_TIMELINE_SERVER_TZ_OFFSET'));\n\t\tif(isNaN(serverTimezoneOffset))\n\t\t{\n\t\t\tserverTimezoneOffset = 0;\n\t\t}\n\t\tconst clientTimezoneOffset = - (new Date()).getTimezoneOffset() * 60;\n\n\t\tconst timestampInClientTz = timestamp + serverTimezoneOffset - clientTimezoneOffset;\n\n\t\tconst date = new Date(timestampInClientTz * 1000);\n\n\t\treturn new DatetimeConverter(date);\n\t}\n\n\tconstructor(datetime: Date)\n\t{\n\t\tthis.#timeFormat = Loc.getMessage('CRM_TIMELINE_TIME_FORMAT');\n\t\tthis.#shortDateFormat = Loc.getMessage('CRM_TIMELINE_SHORT_DATE_FORMAT');\n\t\tthis.#fullDateFormat = Loc.getMessage('CRM_TIMELINE_FULL_DATE_FORMAT');\n\n\t\tthis.#datetime = datetime;\n\t}\n\tgetValue(): Date\n\t{\n\t\treturn this.#datetime;\n\t}\n\n\ttoUserTime(): DatetimeConverter\n\t{\n\t\tthis.#datetime = new Date(this.#datetime.getTime() + 1000 * DatetimeConverter.getUserTimezoneOffset());\n\n\t\treturn this;\n\t}\n\n\ttoDatetimeString(options: DateTimeFormatOptions): string\n\t{\n\t\toptions = options || {};\n\n\t\tconst now = new Date();\n\t\tconst withDayOfWeek = !!options.withDayOfWeek;\n\t\tconst delimiter = options.delimiter || ' ';\n\n\t\treturn DateTimeFormat.format(\n\t\t\t[\n\t\t\t\t[ 'today', 'today' + delimiter + this.#timeFormat ],\n\t\t\t\t[ 'tommorow', 'tommorow' + delimiter + this.#timeFormat ],\n\t\t\t\t[ 'yesterday', 'yesterday' + delimiter + this.#timeFormat ],\n\t\t\t\t[\n\t\t\t\t\t'',\n\t\t\t\t\t(withDayOfWeek ? 'D'+ delimiter : '')\n\t\t\t\t\t+ (this.#datetime.getFullYear() === now.getFullYear() ? this.#shortDateFormat :  this.#fullDateFormat)\n\t\t\t\t\t+ delimiter\n\t\t\t\t\t+ this.#timeFormat\n\t\t\t\t]\n\t\t\t],\n\t\t\tthis.#datetime,\n\t\t\tnow\n\t\t);\n\t}\n\n\ttoTimeString(now: Date, utc: boolean): string\n\t{\n\t\treturn DateTimeFormat.format(this.#timeFormat, this.#datetime, now, utc);\n\t}\n\n\ttoDateString(): string\n\t{\n\t\treturn (\n\t\t\tDateTimeFormat.format(\n\t\t\t\t[\n\t\t\t\t\t['today', 'today'],\n\t\t\t\t\t['tommorow', 'tommorow'],\n\t\t\t\t\t['yesterday', 'yesterday'],\n\t\t\t\t\t['', (this.#datetime.getFullYear() === (new Date()).getFullYear() ?  this.#shortDateFormat :  this.#fullDateFormat)]\n\t\t\t\t],\n\t\t\t\tthis.#datetime\n\t\t\t)\n\t\t);\n\t}\n\n\tstatic getUserTimezoneOffset(): Number\n\t{\n\t\tif(!this.userTimezoneOffset)\n\t\t{\n\t\t\tthis.userTimezoneOffset = parseInt(Loc.getMessage('USER_TZ_OFFSET'));\n\t\t\tif(isNaN(this.userTimezoneOffset))\n\t\t\t{\n\t\t\t\tthis.userTimezoneOffset = 0;\n\t\t\t}\n\t\t}\n\t\treturn this.userTimezoneOffset;\n\t}\n\n\tstatic getSiteDateFormat(): string\n\t{\n\t\treturn DateTimeFormat.convertBitrixFormat(Loc.getMessage('FORMAT_DATE'));\n\t}\n\n\tstatic getSiteDateTimeFormat(): string\n\t{\n\t\treturn DateTimeFormat.convertBitrixFormat(Loc.getMessage('FORMAT_DATETIME'));\n\t}\n\n\tstatic userTimezoneOffset;\n}\n"],"names":["DatetimeConverter","timestamp","serverTimezoneOffset","parseInt","Loc","getMessage","isNaN","clientTimezoneOffset","Date","getTimezoneOffset","timestampInClientTz","date","datetime","getTime","getUserTimezoneOffset","options","now","withDayOfWeek","delimiter","DateTimeFormat","format","getFullYear","utc","userTimezoneOffset","convertBitrixFormat"],"mappings":"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"}