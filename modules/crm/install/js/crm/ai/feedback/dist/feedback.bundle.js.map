{"version":3,"file":"feedback.bundle.js","sources":["../src/index.js"],"sourcesContent":["import { ajax as Ajax, Loc, Type } from 'main.core';\nimport { sendData } from 'ui.analytics';\nimport { MessageBox } from 'ui.dialogs.messagebox';\nimport './css/feedback-popup.css';\n\n/**\n * @memberof BX.Crm.AI.Feedback\n */\nexport function showSendFeedbackPopupIfFeedbackWasNeverSent(\n\tmergeUuid: number,\n\townerType: string,\n\tcrmMode: string,\n\tcallId: string,\n): Promise\n{\n\treturn wasFeedbackSent(mergeUuid).then((wasSent) => {\n\t\tif (!wasSent)\n\t\t{\n\t\t\treturn showSendFeedbackPopup(mergeUuid, ownerType, crmMode, callId);\n\t\t}\n\n\t\t// eslint-disable-next-line promise/no-return-wrap\n\t\treturn Promise.resolve();\n\t});\n}\n\n/**\n * @memberof BX.Crm.AI.Feedback\n */\nexport function wasFeedbackSent(mergeUuid: number): Promise\n{\n\t// Ajax.runAction returns BX.Promise. I think it's not okay to return it from an exported function\n\treturn new Promise((resolve, reject) => {\n\t\tAjax.runAction('crm.timeline.ai.wasFeedbackSent', {\n\t\t\tdata: {\n\t\t\t\tmergeUuid,\n\t\t\t},\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tif (Type.isBoolean(data))\n\t\t\t\t{\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t})\n\t\t\t// eslint-disable-next-line prefer-promise-reject-errors\n\t\t\t.catch((...args) => reject(...args))\n\t\t;\n\t});\n}\n\nexport function sendFeedback(mergeUuid: number, ownerType: string, crmMode: string, callId: string): void\n{\n\tAjax.runAction('crm.timeline.ai.sendFeedback', {\n\t\tdata: {\n\t\t\tmergeUuid,\n\t\t},\n\t})\n\t\t.then(() => {\n\t\t\tif (\n\t\t\t\tType.isStringFilled(ownerType)\n\t\t\t\t&& Type.isStringFilled(crmMode)\n\t\t\t\t&& Type.isStringFilled(callId)\n\t\t\t)\n\t\t\t{\n\t\t\t\tsendData({\n\t\t\t\t\tevent: 'call_parsing',\n\t\t\t\t\ttool: 'AI',\n\t\t\t\t\tcategory: 'crm_operations',\n\t\t\t\t\ttype: 'manual',\n\t\t\t\t\tc_section: 'crm',\n\t\t\t\t\tc_element: 'feedback_send',\n\t\t\t\t\tc_sub_section: ownerType,\n\t\t\t\t\tp1: crmMode,\n\t\t\t\t\tp2: callId,\n\t\t\t\t\tstatus: 'success',\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(({ errors }) => console.error('Error sending feedback', errors));\n}\n\n/**\n * @memberof BX.Crm.AI.Feedback\n */\nexport function showSendFeedbackPopup(mergeUuid: number, ownerType: string, crmMode: string, callId: string): Promise\n{\n\treturn new Promise((resolve) => {\n\t\tconst messageBox = createFeedbackMessageBox({\n\t\t\tonOk: () => {\n\t\t\t\tsendFeedback(mergeUuid, ownerType, crmMode, callId);\n\t\t\t\tmessageBox.close();\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\tonCancel: () => {\n\t\t\t\tmessageBox.close();\n\n\t\t\t\tsendData({\n\t\t\t\t\tevent: 'call_parsing',\n\t\t\t\t\ttool: 'AI',\n\t\t\t\t\tcategory: 'crm_operations',\n\t\t\t\t\ttype: 'manual',\n\t\t\t\t\tc_section: 'crm',\n\t\t\t\t\tc_element: 'feedback_refused',\n\t\t\t\t\tc_sub_section: ownerType,\n\t\t\t\t\tp1: crmMode,\n\t\t\t\t\tp2: callId,\n\t\t\t\t\tstatus: 'success',\n\t\t\t\t});\n\n\t\t\t\tresolve();\n\t\t\t},\n\t\t});\n\n\t\tmessageBox.show();\n\t});\n}\n\ninterface FeedbackMessageBoxOpts {\n\tonOk: () => void,\n\tonCancel: () => void,\n\tpopupOptions?: {\n\t\ttargetContainer: any,\n\t\tid: string,\n\t}\n}\n\nexport function createFeedbackMessageBox(options: FeedbackMessageBoxOpts): MessageBox\n{\n\tconst message = `\n\t\t<div class=\"bx-crm-ai-feedback-popup-content\">\n\t\t\t<div class=\"bx-crm-ai-feedback-popup-content__icon\"></div>\n\t\t\t<div class=\"bx-crm-ai-feedback-popup-content__text\">\n\t\t\t\t${Loc.getMessage('CRM_AI_FEEDBACK_POPUP_TEXT')}\n\t\t\t</div>\n\t\t</div>\n\t`;\n\n\treturn MessageBox.create({\n\t\ttitle: Loc.getMessage('CRM_AI_FEEDBACK_POPUP_TITLE'),\n\t\tmessage,\n\t\tokCaption: Loc.getMessage('CRM_AI_FEEDBACK_POPUP_BUTTON_SHARE'),\n\t\tcancelCaption: Loc.getMessage('CRM_AI_FEEDBACK_POPUP_BUTTON_ANOTHER_TIME'),\n\t\tbuttons: BX.UI.Dialogs.MessageBoxButtons.OK_CANCEL,\n\t\t...options,\n\t});\n}\n"],"names":["wasFeedbackSent","mergeUuid","Promise","resolve","reject","Ajax","runAction","data","then","Type","isBoolean","catch","args","sendFeedback","ownerType","crmMode","callId","isStringFilled","sendData","event","tool","category","type","c_section","c_element","c_sub_section","p1","p2","status","errors","console","error","showSendFeedbackPopup","messageBox","createFeedbackMessageBox","onOk","close","onCancel","show","options","message","Loc","getMessage","MessageBox","create","title","okCaption","cancelCaption","buttons","BX","UI","Dialogs","MessageBoxButtons","OK_CANCEL","wasSent"],"mappings":"iHA6BO,SAASA,EAAgBC,GAG/B,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC5BC,OAAKC,UAAU,kCAAmC,CACjDC,KAAM,CACLN,UAAAA,KAGAO,KAAK,EAAGD,KAAAA,MACJE,OAAKC,UAAUH,GAElBJ,EAAQI,GAIRJ,GAAQ,KAITQ,MAAM,IAAIC,IAASR,KAAUQ,MAK1B,SAASC,EAAaZ,EAAmBa,EAAmBC,EAAiBC,GAEnFX,OAAKC,UAAU,+BAAgC,CAC9CC,KAAM,CACLN,UAAAA,KAGAO,KAAK,KAEJC,OAAKQ,eAAeH,IACjBL,OAAKQ,eAAeF,IACpBN,OAAKQ,eAAeD,IAGvBE,WAAS,CACRC,MAAO,eACPC,KAAM,KACNC,SAAU,iBACVC,KAAM,SACNC,UAAW,MACXC,UAAW,gBACXC,cAAeX,EACfY,GAAIX,EACJY,GAAIX,EACJY,OAAQ,cAIVjB,MAAM,EAAGkB,OAAAA,KAAaC,QAAQC,MAAM,yBAA0BF,IAM1D,SAASG,EAAsB/B,EAAmBa,EAAmBC,EAAiBC,GAE5F,OAAO,IAAId,QAASC,IACnB,MAAM8B,EAAaC,EAAyB,CAC3CC,KAAM,KACLtB,EAAaZ,EAAWa,EAAWC,EAASC,GAC5CiB,EAAWG,QACXjC,KAEDkC,SAAU,KACTJ,EAAWG,QAEXlB,WAAS,CACRC,MAAO,eACPC,KAAM,KACNC,SAAU,iBACVC,KAAM,SACNC,UAAW,MACXC,UAAW,mBACXC,cAAeX,EACfY,GAAIX,EACJY,GAAIX,EACJY,OAAQ,YAGTzB,OAIF8B,EAAWK,SAaN,SAASJ,EAAyBK,GAExC,MAAMC,EAAW,+LAIZC,MAAIC,WAAW,8DAKpB,OAAOC,aAAWC,OAAO,CACxBC,MAAOJ,MAAIC,WAAW,+BACtBF,QAAAA,EACAM,UAAWL,MAAIC,WAAW,sCAC1BK,cAAeN,MAAIC,WAAW,6CAC9BM,QAASC,GAAGC,GAAGC,QAAQC,kBAAkBC,aACtCd,kDA3IE,SACNtC,EACAa,EACAC,EACAC,GAGA,OAAOhB,EAAgBC,GAAWO,KAAM8C,GAClCA,EAMEpD,QAAQC,UAJP6B,EAAsB/B,EAAWa,EAAWC,EAASC"}