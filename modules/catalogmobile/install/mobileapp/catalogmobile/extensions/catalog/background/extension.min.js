(()=>{include("InAppNotifier");class e{constructor(){this.on(a.PushFromCatalog,this.executeCommand.bind(this))}executeCommand(e,a,t,o){switch(e){case n.OpenBarcodeScanner:this.suggestOpenBarcodeScanner(a);break;default:break}}suggestOpenBarcodeScanner(e){const a=60*1e3;InAppNotifier.setHandler((e=>this.openBarcodeScanner(e)));InAppNotifier.showNotification({title:BX.message("CATALOG_BACKGROUND_BARCODE_SCAN_TITLE"),backgroundColor:"#E6000000",message:BX.message("CATALOG_BACKGROUND_BARCODE_SCAN_TEXT"),time:a,data:e})}openBarcodeScanner(e){ComponentHelper.openLayout({name:"catalog:catalog.barcode.scanner",canOpenInDefault:true,object:"layout",componentParams:{ID:e.id},widgetParams:BarcodeScannerWidget.getWidgetParams()})}on(e,a){BX.addCustomEvent(e,a);return this}emit(e,a){BX.postComponentEvent(e,a)}}const a={PushFromCatalog:"onPullEvent-catalog"};const n={OpenBarcodeScanner:"OpenBarcodeScanner"};this.CatalogBackgroundWorker=new e;const t=Application.getLastNotification();if(t&&t.hasOwnProperty("params")){let e=JSON.parse(t.params);if(e&&e.hasOwnProperty("TYPE")&&e.TYPE==="CATALOG_BARCODE_SCANNER"){this.CatalogBackgroundWorker.openBarcodeScanner({id:e.ID||""})}}})();
//# sourceMappingURL=extension.map.js