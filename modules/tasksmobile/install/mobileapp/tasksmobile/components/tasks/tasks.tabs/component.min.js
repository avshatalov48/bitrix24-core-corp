(()=>{const e=BX.componentParameters.get("SITE_ID","s1");class t{constructor(e,t){this.tabs=e;this.userId=t;this.queue=new Set;this.canExecute=true}getEventHandlers(){return{user_efficiency_counter:{method:this.onUserEfficiencyCounter,context:this},user_counter:{method:this.onUserCounter,context:this}}}subscribe(){BX.PULL.subscribe({moduleId:"tasks",callback:e=>this.processPullEvent(e)})}processPullEvent(e){if(this.canExecute){void this.executePullEvent(e)}else{this.queue.add(e)}}executePullEvent(e){return new Promise(((t,s)=>{const n=Object.prototype.hasOwnProperty;const a=this.getEventHandlers();const{command:i,params:r}=e;if(n.call(a,i)){const{method:e,context:n}=a[i];if(e){e.apply(n,[r]).then((()=>t()),(()=>s())).catch((()=>s()))}}}))}freeQueue(){const e=["user_efficiency_counter","user_counter"];this.queue=new Set([...this.queue].filter((t=>e.includes(t.command))));const t=(e,t)=>{if(typeof e[t.command]==="undefined"||t.extra.server_time_ago<e[t.command].extra.server_time_ago){e[t.command]=t}return e};this.queue=new Set(Object.values([...this.queue].reduce(t,{})));const s=[...this.queue].map((e=>this.executePullEvent(e)));return Promise.allSettled(s)}clear(){this.queue.clear()}getCanExecute(){return this.canExecute}setCanExecute(e){this.canExecute=e}onUserCounter(e){return new Promise((t=>{if(Number(e.userId)!==Number(this.userId)){t();return}this.tabs.updateTasksCounter(e[0].view_all.total);this.tabs.updateProjectsCounter(e.projects_major);t()}))}onUserEfficiencyCounter(e){return new Promise((t=>{this.tabs.updateEfficiencyCounter(e.value);t()}))}}class s{static get tabNames(){return{tasks:"tasks.list",projects:"tasks.project.list",scrum:"tasks.scrum.list",efficiency:"tasks.efficiency"}}constructor(e){this.tabs=e;this.userId=parseInt(BX.componentParameters.get("USER_ID",0),10);this.pull=new t(this,this.userId);this.guid=this.createGuid();this.setDownMenuTasksCounter();BX.onViewLoaded((()=>{this.bindEvents();this.updateCounters()}))}createGuid(){const e=function(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)};return`${e()}${e()}-${e()}-${e()}-${e()}-${e()}${e()}${e()}`}bindEvents(){this.tabs.on("onTabSelected",((e,t)=>this.onTabSelected(e,t)));BX.addCustomEvent("onAppActiveBefore",(()=>this.onAppActiveBefore()));BX.addCustomEvent("onAppActive",(()=>this.onAppActive()));BX.addCustomEvent("onAppPaused",(()=>this.onAppPaused()));BX.addCustomEvent("tasks.list:setVisualCounter",(e=>{if(e.guid===this.guid||!e.guid){this.updateTasksCounter(e.value)}}));BX.addCustomEvent("tasks.project.list:setVisualCounter",(e=>this.updateProjectsCounter(e.value)));this.pull.subscribe()}onAppPaused(){BX.postComponentEvent("tasks.tabs:onAppPaused",[],this.tabs.getCurrentItem().id);this.pauseTime=new Date;this.pull.setCanExecute(false);this.pull.clear()}onAppActiveBefore(){BX.postComponentEvent("tasks.tabs:onAppActiveBefore",[],this.tabs.getCurrentItem().id)}onAppActive(){BX.postComponentEvent("tasks.tabs:onAppActive",[],this.tabs.getCurrentItem().id);this.activationTime=new Date;if(this.pauseTime){const e=this.activationTime.getTime()-this.pauseTime.getTime();const t=Math.abs(Math.round(e/6e4));if(t>29){this.updateCounters();this.pull.setCanExecute(true);this.pull.clear()}else{this.pull.setCanExecute(true);void this.pull.freeQueue()}}}onTabSelected(e,t){const n=e.id;if(t){BX.postComponentEvent("tasks.tabs:onTabSelected",[{tabId:n}],s.tabNames.tasks);BX.postComponentEvent("tasks.tabs:onTabSelected",[{tabId:n}],s.tabNames.projects)}else if(n===s.tabNames.scrum){qrauth.open({redirectUrl:`/company/personal/user/${this.userId}/tasks/scrum/`,showHint:true,title:BX.message("MOBILE_TASKS_TABS_TAB_SCRUM")})}else if(n===s.tabNames.efficiency){BX.postComponentEvent("taskbackground::efficiency::open",[{userId:this.userId}])}}setDownMenuTasksCounter(){const e=Application.sharedStorage("tasksTaskList");const t=e.get("filterCounters_0");if(typeof t==="string"){Application.setBadges({tasks:JSON.parse(t).counterValue||0})}}updateCounters(){const t=Application.sharedStorage().get("userCounters");if(t){try{const s=JSON.parse(t)[e];if(s){this.updateTasksCounter(s.tasks_total);this.updateEfficiencyCounter(s.tasks_effective)}}catch(e){}}const s=Application.sharedStorage("tasksProjectList");const n=s.get("filterCounters");if(n){try{const e=JSON.parse(n);if(e){this.updateProjectsCounter(e.counterValue)}}catch(e){}}new RequestExecutor("tasks.task.counters.getProjectsTotalCounter").call().then((e=>{const t=e.result;this.updateProjectsCounter(t);s.set("filterCounters",JSON.stringify({counterValue:t}))}),(e=>console.error(e)))}updateTasksCounter(e){this.tabs.updateItem(s.tabNames.tasks,{title:BX.message("MOBILE_TASKS_TABS_TAB_TASKS"),counter:Number(e),label:e>0?String(e):""})}updateProjectsCounter(e){this.tabs.updateItem(s.tabNames.projects,{title:BX.message("MOBILE_TASKS_TABS_TAB_PROJECTS"),counter:Number(e),label:e>0?String(e):""})}updateEfficiencyCounter(e){this.tabs.updateItem(s.tabNames.efficiency,{title:BX.message("MOBILE_TASKS_TABS_TAB_EFFICIENCY"),label:e||e===0?`${String(e)}%`:"",selectable:false})}}return new s(tabs)})();
//# sourceMappingURL=component.map.js