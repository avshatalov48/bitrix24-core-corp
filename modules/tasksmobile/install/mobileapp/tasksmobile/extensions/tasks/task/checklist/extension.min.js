(()=>{class e{constructor(){this.queue=new Map}getQueue(){return this.queue}addChecklistQueue(e){if(!this.queue.has(e)){this.queue.set(e,new Set)}}removeChecklistQueue(e){if(this.queue.has(e)){this.queue.delete(e)}}getChecklistQueue(e){this.addChecklistQueue(e);return this.queue.get(e)}getArrayChecklistQueue(e){return Array.from(this.getChecklistQueue(e))}addFile(e,t){this.getChecklistQueue(e).add(t)}removeFile(e){this.queue.forEach((t=>t.delete(e)))}}class t extends BaseList{static id(){return"checklistFiles"}static method(){return"mobile.disk.getattachmentsdata"}static getTypeByFileName(e){let s=e.split(".").pop();if(s){s=s.toLowerCase()}return t.getTypeByFileExtension(s)}static getTypeByFileExtension(e=""){const t={jpg:"image",jpeg:"image",png:"image",gif:"image",tiff:"image",bmp:"image",avi:"video",mov:"video",mpeg:"video",mp4:"video"};return t[e.toLowerCase()]||"document"}static getIconByFileName(e){let s=e.split(".").pop();if(s){s=s.toLowerCase()}return t.getIconByFileExtension(s)}static getIconByFileExtension(e=""){const t={pdf:"pdf.png",jpg:"img.png",png:"img.png",doc:"doc.png",docx:"doc.png",ppt:"ppt.png",pptx:"ppt.png",rar:"rar.png",xls:"xls.png",csv:"xls.png",xlsx:"xls.png",zip:"zip.png",txt:"txt.png",avi:"movie.png",mov:"movie.png",mpeg:"movie.png",mp4:"movie.png"};let s=e;if(s){s=s.toLowerCase()}return t[s]?`${t[s]}?2`:"blank.png?21"}static getFileSize(e){let t=e/1024;if(t<1024){t=`${Math.ceil(t)} ${BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_ITEM_SIZE_KB")}`}else{t=`${(t/1024).toFixed(1)} ${BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_ITEM_SIZE_MB")}`}return t}prepareItem(e){const s=e.SIZE||t.getFileSize(e.size);const i=e.EXTENSION?t.getTypeByFileExtension(e.EXTENSION):t.getTypeByFileName(e.NAME||e.name);const a={id:String(e.ID||e.id),title:e.NAME||e.name,subtitle:`${s} ${new Date(e.UPDATE_TIME||e.updateTime).toLocaleString()}`,sectionCode:"checklistFiles",styles:{image:{image:{borderRadius:0}}},params:{previewUrl:e.URL||e.links.download,type:i},type:"info"};if(this.canUpdate){a.actions=[{title:BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_REMOVE"),color:"#fb5d54",identifier:"remove"}]}if(i==="image"){a.imageUrl=e.URL||e.links.download;a.styles.image.image.borderRadius=10}else{const s="/bitrix/mobileapp/mobile/extensions/bitrix/disk/";const i=e.EXTENSION?t.getIconByFileExtension(e.EXTENSION):t.getIconByFileName(e.NAME||e.name);a.imageUrl=`${s}/images/${i}`}return a}static prepareLoadingItem(e){const s={id:e.id,title:e.name,subtitle:BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_ITEM_LOADING"),sectionCode:"checklistFiles",unselectable:true,styles:{image:{image:{borderRadius:0}}},params:{previewUrl:e.previewUrl,type:t.getTypeByFileName(e.name)},type:"info"};if(s.params.type==="image"){s.imageUrl=e.previewUrl;s.styles.image.image.borderRadius=10}else{const i="/bitrix/mobileapp/mobile/extensions/bitrix/disk/";const a=t.getIconByFileName(e.name);s.imageUrl=`${i}/images/${a}`}return s}static prepareDiskItem(e){const s=t.getTypeByFileName(e.NAME);const i={id:e.ID,title:e.NAME,subtitle:e.TAGS,sectionCode:"checklistFiles",styles:{image:{image:{borderRadius:0}}},params:{previewUrl:e.URL.URL,type:s},actions:[{title:BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_REMOVE"),color:"#fb5d54",identifier:"remove"}],type:"info"};if(s==="image"){i.imageUrl=e.URL.URL;i.styles.image.image.borderRadius=10}else{const s="/bitrix/mobileapp/mobile/extensions/bitrix/disk/";const a=t.getIconByFileName(e.NAME);i.imageUrl=`${s}/images/${a}`}return i}static openFile(e,t="",s,i=""){if(s==="video"){viewer.openVideo(e)}else if(s==="image"){viewer.openImageCollection([{url:e,previewUrl:t,name:i}])}else{viewer.openDocument(e,i)}}params(){return{attachmentsIds:this.attachmentsIds}}prepareItems(e){const s=[];this.files.forEach((t=>{if(t.id.indexOf("taskChecklist-")!==0&&!e.find((e=>e.ID===t.id))&&!this.filesStorage.getArrayFiles().find((e=>e.id===t.id))&&!this.filesToShow.has(t.id)){s.push(t)}}));this.files=new Map;e.forEach((e=>{const t=this.prepareItem(e);this.files.set(t.id,t);s.push(t)}));if(this.isEditMode()){this.filesToShow.forEach((e=>{if(e.dataAttributes){if(e.checkListItemId===this.checkListItemId){const i=t.prepareDiskItem(e.dataAttributes);this.files.set(i.id,i);s.push(i)}}else if(e.extra.params.ajaxData.checkListItemId===this.checkListItemId){const t=this.prepareItem(e);this.files.set(t.id,t);s.push(t)}}))}this.filesStorage.getArrayFiles().forEach((e=>{if(e.params.ajaxData.checkListItemId===this.checkListItemId){const i=t.prepareLoadingItem(e);this.files.set(i.id,i);s.push(i)}}));return s}get list(){return this._list}constructor(e,t,s,i){super(e);this.userId=t;this.checklistData=s;this.checklistController=i;this.canUpdate=s.canUpdate;this.attachmentsIds=s.attachmentsIds;this.checkListItemId=s.ajaxData.checkListItemId;this.filesToRemoveQueue=i.filesToRemoveQueue;this.filesToAddQueue=i.filesToAddQueue;this.filesToShow=i.filesToShow;this.filesStorage=i.filesStorage;this.mode=i.mode;this.files=new Map;this.setListeners();this.setTopButtons()}setTopButtons(){this.list.setLeftButtons([{name:BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_BACK"),callback:()=>{this.list.close()}}]);if(this.canUpdate){this.list.setRightButtons([{name:BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_ADD"),callback:()=>{const{nodeId:e}=this.checklistData;this.checklistController.addFile(this.checklistData,{nodeId:e})}}])}}setListeners(){const e={onViewRemoved:this.onViewRemoved,onItemSelected:this.onItemSelected,onItemAction:this.onItemAction};this.list.setListener(((t,s)=>{if(e[t]){e[t].apply(this,[s])}}))}isEditMode(){return this.mode==="edit"}addDiskFile(e){const s=t.prepareDiskItem(e);this.list.addItems([s]);this.files.set(s.id,s)}addLoadingFile(e,s){s.id=e;const i=t.prepareLoadingItem(s);this.list.addItems([i]);this.files.set(i.id,i)}addRealFile(e,t){const s=Object.assign(this.prepareItem(t),{unselectable:false});this.list.findItem({id:e},(t=>{if(t){this.list.updateItem({id:e},s)}else{this.list.addItems([s])}}));this.files.delete(e);this.files.set(s.id,s)}onViewRemoved(){this.checklistController.filesList=null}onItemSelected(e){if(e.unselectable){return}const{previewUrl:s,type:i}=e.params;t.openFile(s,s,i,e.title)}onItemAction(e){const t=e.item.id;if(e.action.identifier==="remove"){this.onItemActionDelete(t)}}onItemActionDelete(e){if(!this.canUpdate){return}const{ajaxData:t}=this.checklistData;const{checkListItemId:s}=t;this.list.removeItem({id:e});this.filesToRemoveQueue.addFile(s,e);this.filesToShow.delete(e);this.files.delete(e);BX.postWebEvent("tasks.view.native::checklist.fakeRemoveFiles",{nodeId:this.checklistData.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(s),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(s)});if(this.isEditMode()){this.removeFileInEditMode(t,e)}else{this.removeFileInViewMode(t,e)}if(this.files.size===0){this.list.close()}}removeFileInViewMode(e,t){const{entityId:s,entityTypeId:i,checkListItemId:a}=e;BX.ajax.runAction("tasks.task.checklist.removeAttachments",{data:{checkListItemId:a,[i]:s,attachmentsIds:[t]}}).then((e=>{if(e.status==="success"){const{attachments:s}=e.data.checkListItem;this.attachmentsIds=this.attachmentsIds.filter((e=>e!==t));this.filesToRemoveQueue.removeFile(t);BX.postWebEvent("tasks.view.native::checklist.removeFiles",{attachments:s,nodeId:this.checklistData.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(a),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(a)})}else{this.filesToRemoveQueue.removeFile(t);this.reload();BX.postWebEvent("tasks.view.native::checklist.fakeRemoveFiles",{nodeId:this.checklistData.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(a),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(a)})}}))}removeFileInEditMode(e,t){const{checkListItemId:s}=e;this.filesToRemoveQueue.removeFile(t);BX.postWebEvent("tasks.view.native::checklist.removeAttachment",{nodeId:s,attachmentId:t});BX.postWebEvent("tasks.view.native::checklist.fakeRemoveFiles",{nodeId:this.checklistData.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(s),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(s)})}}class s{static getGuid(){function e(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)}return`${e()}${e()}-${e()}-${e()}-${e()}-${e()}${e()}${e()}`}constructor(t,s,i,a){this.taskId=t;this.userId=s;this.taskGuid=i;this.mode=a;this.popupMenu=dialogs.createPopupMenu();this.popupMenu.setPosition("center");this.filesList=null;this.filesToAddQueue=new e;this.filesToRemoveQueue=new e;this.filesToShow=new Map;this.filesStorage=new TaskChecklistUploadFilesStorage;this.filesStorage.getArrayFiles().forEach((e=>{if(this.checkEvent(e.params.taskId)){const{checkListItemId:t}=e.params.ajaxData;this.filesToAddQueue.addFile(t,e.id)}}));this.setListeners()}setListeners(){BX.addCustomEvent("onChecklistInit",this.onChecklistInit.bind(this));BX.addCustomEvent("onChecklistAjaxError",this.onChecklistAjaxError.bind(this));BX.addCustomEvent("onChecklistAttachmentsClick",this.onChecklistAttachmentsClick.bind(this));BX.addCustomEvent("onChecklistSettingsClick",this.onChecklistSettingsClick.bind(this));BX.addCustomEvent("onChecklistInputMemberSelectorCall",this.onChecklistInputMemberSelectorCall.bind(this));BX.addCustomEvent("onFileUploadStatusChanged",this.onFileUploadStatusChange.bind(this))}checkEvent(e=null,t=null){let s=true;let i=true;if(e!==null){s=Number(this.taskId)===Number(e)}if(t!==null){i=this.taskGuid===t}return s&&i}sendOnChecklistInitQueueData(){this.filesToAddQueue.getQueue().forEach(((e,t)=>{BX.postWebEvent("tasks.view.native::checklist.fakeAttachFiles",{checkListItemId:t,nodeId:null,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(t),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(t)})}))}onChecklistInit(e){const{taskId:t,taskGuid:s}=e;if(this.checkEvent(t,s)){this.sendOnChecklistInitQueueData()}}onChecklistAjaxError(e){if(this.checkEvent(e.taskId,e.taskGuid)){InAppNotifier.showNotification({message:BX.message("TASKS_TASK_DETAIL_CHECKLIST_NOTIFICATION_AJAX_ERROR"),backgroundColor:"#333333",time:5})}}onChecklistAttachmentsClick(e){const{taskId:s,taskGuid:i,ajaxData:a}=e;const{checkListItemId:o}=a;if(!this.checkEvent(s,i)){return}this.filesToAddQueue.addChecklistQueue(o);PageManager.openWidget("list",{backdrop:{bounceEnable:true,swipeAllowed:true,showOnTop:false},title:BX.message("TASKS_TASK_DETAIL_CHECKLIST_FILES_LIST_TITLE"),onReady:s=>{this.filesList=new t(s,this.userId,e,this);this.filesList.init(false)},onError:e=>console.log(e)})}onChecklistSettingsClick(e){const{taskId:t,taskGuid:s,ajaxData:i,popupMenuItems:a,popupMenuSections:o}=e;const{checkListItemId:l}=i;if(!this.checkEvent(t,s)){return}this.filesToAddQueue.addChecklistQueue(l);this.popupMenu.setData(a,o,((t,s)=>{if(t==="onItemSelected"){this.onPopupMenuItemSelected(e,s.id)}}));this.popupMenu.show()}onChecklistInputMemberSelectorCall(e){this.addMember("",e,"")}onPopupMenuItemSelected(e,t){const s={nodeId:e.nodeId};switch(t){default:BX.postWebEvent(`tasks.view.native::checklist.${t}`,s);break;case"addAuditor":case"addAccomplice":this.addMember(t,s,t.replace("add","").toLowerCase());break;case"toAnotherChecklist":this.moveToAnotherChecklist(e,s);break;case"addFile":this.addFile(e,s);break}}addMember(e,t,s){UserList.openPicker({allowMultipleSelection:false,listOptions:{users:{hideUnnamed:true,useRecentSelected:true}}}).then((i=>{if(i.length>0){const a=i[0];t.member={id:a.id,nameFormatted:a.title,type:s};if(s){BX.postWebEvent(`tasks.view.native::checklist.${e}`,t);BX.postWebEvent("tasks.view.native::onItemAction",{taskId:this.taskId,taskGuid:this.taskGuid,name:s,values:{user:a}})}else{dialogs.showActionSheet({title:BX.message("TASKS_TASK_DETAIL_CHECKLIST_ROLE_POPUP_TEXT").replace("#USER_NAME#",a.title),callback:e=>{t.member.type=e.id.toLowerCase();t.focusInput=true;BX.postWebEvent(`tasks.view.native::checklist.add${e.id}`,t);BX.postWebEvent("tasks.view.native::onItemAction",{taskId:this.taskId,taskGuid:this.taskGuid,name:e.id.toLowerCase(),values:{user:a}})},items:[{id:"Auditor",title:BX.message("TASKS_TASK_DETAIL_CHECKLIST_ROLE_POPUP_AUDITOR"),code:"answer"},{id:"Accomplice",title:BX.message("TASKS_TASK_DETAIL_CHECKLIST_ROLE_POPUP_ACCOMPLICE"),code:"answer"}]})}}}))}moveToAnotherChecklist(e,t){const{popupChecklists:s}=e;if(s.length>1){const e=dialogs.createPopupMenu();e.setPosition("center");e.setData(s,[{id:"0"}],((e,s)=>{if(e==="onItemSelected"){t.checklistId=s.id;BX.postWebEvent("tasks.view.native::checklist.toAnotherChecklist",t)}}));e.show()}else{t.checklistId=s[0].id;BX.postWebEvent("tasks.view.native::checklist.toAnotherChecklist",t)}}addFile(e,t){dialogs.showImagePicker({settings:{resize:{targetWidth:-1,targetHeight:-1,sourceType:1,encodingType:0,mediaType:2,allowsEdit:true,saveToPhotoAlbum:true,cameraDirection:0},maxAttachedFilesCount:3,previewMaxWidth:640,previewMaxHeight:640,attachButton:{items:[{id:"disk",name:BX.message("TASKS_TASK_DETAIL_IMAGE_PICKER_BITRIX24_DISK"),dataSource:{multiple:true,url:`/mobile/?mobile_action=disk_folder_list&type=user&path=%2F&entityId=${this.userId}`}},{id:"mediateka",name:BX.message("TASKS_TASK_DETAIL_IMAGE_PICKER_GALLERY")}]}}},(s=>{this.onImagePickerFileChoose(e,t,s)}))}onImagePickerFileChoose(e,t,i){const{disk:a,ajaxData:o}=e;const l=[];const d=[];const n=[];let c="mediateka";i.forEach((e=>{if(e.dataAttributes){c="disk";l.push(e);d.push(e.dataAttributes.ID)}else{const t=`taskChecklist-${s.getGuid()}`;e.ajaxData=o;e.taskId=this.taskId;n.push({taskId:t,id:t,params:e,name:e.name,type:e.type,url:e.url,previewUrl:e.previewUrl,folderId:a.folderId,onDestroyEventName:TaskChecklistUploaderEvents.FILE_SUCCESS_UPLOAD})}}));if(c==="disk"){o.attachmentsIds=d;this.attachDiskFiles(o,l,t)}else{this.filesStorage.addFiles(n);BX.postComponentEvent("onFileUploadTaskReceived",[{files:n}],"background")}}attachDiskFiles(e,t,s){this.sendFakeAttachFilesEvent(e,t,s);if(this.mode==="edit"){this.attachDiskFilesInEditMode(e,t,s)}else{this.runAjaxAttachingFilesFromDisk(e,t,s)}}attachDiskFilesInEditMode(e,t,s){const{checkListItemId:i}=e;t.forEach((e=>{const t=e.dataAttributes.ID;e.checkListItemId=i;this.filesToShow.set(t,e);this.filesToAddQueue.removeFile(t);if(this.filesList&&this.filesList.checkListItemId===i){this.filesList.addDiskFile(e.dataAttributes)}const a={nodeId:s.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(i),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(i),attachment:{[t]:t}};BX.postWebEvent("tasks.view.native::checklist.addAttachment",a);BX.postWebEvent("tasks.view.native::checklist.fakeAttachFiles",a)}))}sendFakeAttachFilesEvent(e,t,s){const{checkListItemId:i}=e;t.forEach((e=>this.filesToAddQueue.addFile(i,e.dataAttributes.ID)));BX.postWebEvent("tasks.view.native::checklist.fakeAttachFiles",{nodeId:s.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(i),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(i)})}runAjaxAttachingFilesFromDisk(e,t,s){const{entityTypeId:i,entityId:a,checkListItemId:o,attachmentsIds:l}=e;BX.ajax.runAction("tasks.task.checklist.addAttachmentsFromDisk",{data:{checkListItemId:o,[i]:a,filesIds:l}}).then((e=>{if(e.status==="success"){const{attachments:i}=e.data.checkListItem;t.forEach((e=>{const t=e.dataAttributes.ID;if(Object.values(i).includes(`n${t}`)){this.filesToAddQueue.removeFile(t);if(this.filesList&&this.filesList.checkListItemId===o){e.dataAttributes.ID=Object.keys(i).find((e=>i[e]===`n${t}`));this.filesList.addDiskFile(e.dataAttributes)}}}));BX.postWebEvent("tasks.view.native::checklist.attachFiles",{attachments:i,nodeId:s.nodeId,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(o),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(o)})}}))}onFileUploadStatusChange(e,t,s){if(s.indexOf("taskChecklist-")!==0){return false}switch(e){default:console.log("onFileUploadStatusChange::default event warning!");break;case BX.FileUploadEvents.FILE_CREATED:case BX.FileUploadEvents.FILE_UPLOAD_PROGRESS:case BX.FileUploadEvents.ALL_TASK_COMPLETED:case BX.FileUploadEvents.TASK_TOKEN_DEFINED:case BX.FileUploadEvents.TASK_CREATED:break;case BX.FileUploadEvents.FILE_UPLOAD_START:this.onFileUploadStart(t,s);break;case TaskChecklistUploaderEvents.FILE_SUCCESS_UPLOAD:this.onFileUploadSuccess(t,s);break;case BX.FileUploadEvents.TASK_STARTED_FAILED:case BX.FileUploadEvents.FILE_CREATED_FAILED:case BX.FileUploadEvents.FILE_UPLOAD_FAILED:case BX.FileUploadEvents.TASK_CANCELLED:case BX.FileUploadEvents.TASK_NOT_FOUND:case BX.FileUploadEvents.FILE_READ_ERROR:case TaskChecklistUploaderEvents.FILE_FAIL_UPLOAD:this.onFileUploadError(t,s);break}return true}onFileUploadStart(e,t){const s=e.file.params;const{checkListItemId:i,mode:a}=s.ajaxData;if(!this.checkEvent(s.taskId)||a!==this.mode){return}this.filesToAddQueue.addFile(i,t);if(this.filesList&&this.filesList.checkListItemId===i){this.filesList.addLoadingFile(t,s)}const o={checkListItemId:i,nodeId:i,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(i),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(i)};delete o[this.mode==="edit"?"checkListItemId":"nodeId"];BX.postWebEvent("tasks.view.native::checklist.fakeAttachFiles",o)}handleSuccessUploadInViewMode(e,t){const{file:s}=e;const{checkListItem:i}=e.result;const{attachments:a}=i;const o=i.id;if(this.filesList&&this.filesList.checkListItemId===o){const e=Object.keys(a).find((e=>a[e]===`n${s.id}`));if(e){s.id=e;this.filesList.addRealFile(t,s)}}this.filesToAddQueue.removeFile(t);this.filesStorage.removeFiles([t]);BX.postWebEvent("tasks.view.native::checklist.attachFiles",{checkListItemId:o,nodeId:null,attachments:i.attachments,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(o),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(o)})}handleSuccessUploadInEditMode(e,t){const{file:s}=e;const{checkListItemId:i}=e.result;if(this.filesList&&this.filesList.checkListItemId===i){this.filesList.addRealFile(t,s)}s.id=String(s.id);this.filesToShow.set(s.id,s);this.filesToAddQueue.removeFile(t);this.filesStorage.removeFiles([t]);const a={nodeId:i,filesToRemove:this.filesToRemoveQueue.getArrayChecklistQueue(i),filesToAdd:this.filesToAddQueue.getArrayChecklistQueue(i),attachment:{[s.id]:s.id}};BX.postWebEvent("tasks.view.native::checklist.addAttachment",a);BX.postWebEvent("tasks.view.native::checklist.fakeAttachFiles",a)}onFileUploadSuccess(e,t){const s=e.file.extra.params;const{mode:i}=s.ajaxData;if(!this.checkEvent(s.taskId)||i!==this.mode){return}if(i==="edit"){this.handleSuccessUploadInEditMode(e,t)}else{this.handleSuccessUploadInViewMode(e,t)}}onFileUploadError(e,t){this.filesToAddQueue.removeFile(t);this.filesStorage.removeFiles([t])}}jnexport([s,"ChecklistController"])})();
//# sourceMappingURL=extension.map.js