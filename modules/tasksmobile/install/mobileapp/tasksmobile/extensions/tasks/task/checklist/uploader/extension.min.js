(()=>{const t={};t.init=function(){this.filesStorage=new TaskChecklistUploadFilesStorage;this.filesStorage.clear();BX.addCustomEvent("onFileUploadStatusChanged",this.listener.bind(this))};t.listener=function(t,e,s){if(t===BX.FileUploadEvents.FILE_CREATED){if(s.indexOf("taskChecklist-")!==0){return false}const{params:t}=e.file;const i=e.result.data.file;i.extra.params=t;this.attachFile(s,t.ajaxData,i)}return true};t.attachFile=function(t,e,s){console.info("TaskChecklistUploader.attachFile:",[t,s]);const{entityTypeId:i,entityId:a,checkListItemId:n,mode:o}=e;const c={data:{checkListItemId:n,[i]:a,filesIds:[s.id]}};if(o==="edit"){this.onAjaxSuccess({data:{checkListItemId:n}},s,t)}else{BX.ajax.runAction("tasks.task.checklist.addAttachmentsFromDisk",c).then((e=>this.onAjaxResponse(e,s,t))).catch((e=>this.onAjaxError(e,s,t)))}};t.onAjaxResponse=function(t,e,s){if(t.status==="success"){this.onAjaxSuccess(t,e,s)}else{this.onAjaxError(t,e,s)}};t.onAjaxSuccess=function(t,e,s){const i=TaskChecklistUploaderEvents.FILE_SUCCESS_UPLOAD;const a={file:e,result:t.data};this.filesStorage.removeFiles([s]);FileUploadAgent.postFileEvent(i,a,s)};t.onAjaxError=function(t,e,s){const i=TaskChecklistUploaderEvents.FILE_FAIL_UPLOAD;const a={file:e,errors:t.errors};this.filesStorage.removeFiles([s]);FileUploadAgent.postFileEvent(i,a,s)};t.init()})();
//# sourceMappingURL=extension.map.js