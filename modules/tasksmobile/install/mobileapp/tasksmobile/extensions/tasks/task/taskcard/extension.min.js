include("InAppNotifier");(()=>{const t="/bitrix/mobileapp/tasksmobile/extensions/tasks/task/taskcard/";const e=Application.getApiVersion();const s=Application.getPlatform();class a{constructor(t="tasks.task."){this.restNamespace=t}call(t,e){const s=this.restNamespace+t;this.currentAnswer=null;this.abortCurrentRequest();return new Promise(((t,a)=>{console.log({method:s,params:e});BX.rest.callMethod(s,e||{},(e=>{this.currentAnswer=e;if(e.error()){console.log(e.error());a(e)}else{t(e.answer)}}),this.onRequestCreate.bind(this))}))}onRequestCreate(t){this.currentAjaxObject=t}abortCurrentRequest(){if(this.currentAjaxObject!=null){this.currentAjaxObject.abort()}}}class i{constructor(){this.storageName="tasks.task.view.options";this.defaultOptions={swipeShowHelper:{value:0,limit:1}}}get(){return Application.storage.getObject(this.storageName,this.defaultOptions)}set(t){Application.storage.setObject(this.storageName,t)}update(t,e){Application.storage.updateObject(this.storageName,{[t]:e})}}class n{constructor(t){this.taskCard=t}closeForm(){this.taskCard.back()}setTaskInfo(t){this.taskCard.setTaskInfo(t)}}class o{static get selectFields(){return["ID","TITLE","STATUS","CREATED_BY","ACTIVITY_DATE","RESPONSIBLE_ID","ACCOMPLICES","AUDITORS","DEADLINE","FAVORITE","NOT_VIEWED","CHECKLIST","GROUP_ID","ALLOW_CHANGE_DEADLINE","IS_MUTED","IS_PINNED","COUNTERS"]}static get queryParams(){return{GET_TASK_LIMIT_EXCEEDED:true,WITH_RESULT_INFO:"Y"}}static getRemoveSheetItems(){return[{id:"yes",title:BX.message("TASKS_TASK_DETAIL_CONFIRM_REMOVE_YES"),code:"answer"},{id:"no",title:BX.message("TASKS_TASK_DETAIL_CONFIRM_REMOVE_NO"),code:"answer"}]}static getFormattedName(t={}){let e=`${t.NAME?t.NAME:""} ${t.LAST_NAME?t.LAST_NAME:""}`;if(e.trim()===""){e=t.EMAIL}return e}static getGuid(){function t(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)}return`${t()}${t()}-${t()}-${t()}-${t()}-${t()}${t()}${t()}`}static getItemDataFromUser(t){return{id:t.id,name:t.title,icon:t.defaultImage?"":t.imageUrl,link:""}}static getItemDataFromGroup(t){return{id:t.id,name:t.title,image:t.defaultImage?"":t.imageUrl}}constructor(t,e){this.init(t,e);this.setListeners()}init(t,e){console.log("TaskCard init");this.userId=e||parseInt(BX.componentParameters.get("USER_ID",0),10);this.taskId=BX.componentParameters.get("TASK_ID",0);this.guid=BX.componentParameters.get("GUID","");this.taskObjectData=BX.componentParameters.get("TASK_OBJECT",{});this.currentUser=result.settings.userInfo;this.deadlines=result.deadlines;this.task=new Task(this.currentUser);this.task.importProperties(this.taskObjectData);this.rest=new a;this.options=new i;this.taskCardHandler=null;this.taskPopupMenu=null}setListeners(){BX.addCustomEvent("task.view.onPageLoaded",(t=>this.onPageLoaded(t)));BX.addCustomEvent("onMobileGridFormDataChange",(t=>this.onMobileGridFormDataChange(t)));BX.addCustomEvent("onTaskDetailOptionsButtonClick",(t=>this.onTaskDetailOptionsButtonClick(t)));BX.addCustomEvent("task.view.onCommentsRead",(t=>this.onCommentsRead(t)));BX.addCustomEvent("task.view.onCommentAction",(t=>this.onCommentAction(t)));BX.addCustomEvent("onItemAction",(t=>this.onItemAction(t.action)));BX.addCustomEvent("onItemChecked",(t=>this.onItemChecked(t.item.checked)));const t={task_update:this.onPullUpdate,task_remove:this.onPullDelete,comment_add:this.onPullComment,task_result_create:this.onPullTaskResultCreate,task_result_delete:this.onPullTaskResultDelete};BX.addCustomEvent("onPullEvent-tasks",((e,s)=>{if(t[e]){t[e].apply(this,[s])}}))}onPageLoaded(){this.rest.call("limit.isExceeded").then((t=>{console.log("limit.isExceeded",t.result);this.taskLimitExceeded=t.result||false;this.redrawTaskPopupMenu()}))}onMobileGridFormDataChange(t){console.log("onMobileGridFormDataChange",t);const{nodeName:e,nodeValue:s,dateValue:i,responsibleIcon:n,formId:r}=t;if(r!==`MOBILE_TASK_VIEW_${this.guid.replace(/-/g,"")}`){return}switch(e){case"data[DEADLINE]":if(i||!i&&s===""){this.updateTask({deadline:i?Date.parse(i):null,activityDate:Date.now()})}break;case"data[SE_RESPONSIBLE][0][ID]":if(typeof n!=="undefined"&&s){let t="images/avatar.png";if(n!==""){t=n.replace(/^url\(["']?/,"").replace(/["']?\)$/,"")}this.updateTask({responsible:{id:s,icon:t},activityDate:Date.now()});new a("user.").call("search",{IMAGE_RESIZE:"small",FILTER:{ID:s}}).then((t=>{const e=t.result[0];this.updateTask({responsible:{id:e.ID,name:o.getFormattedName(e),icon:encodeURI(e.PERSONAL_PHOTO),link:""}})}))}break;default:break}}onTaskDetailOptionsButtonClick(t){if(this.task.id!==t.taskId||this.guid!==t.guid){return}this.taskPopupMenu.show()}onCommentsRead(t){if(this.task.id===t.taskId){this.task.pseudoRead();this.updateTaskCardInfo()}}onCommentAction(t){console.log("onCommentAction",t);const{taskId:e,userId:s,action:a,deadline:i}=t;if(e!==this.task.id||s!==this.userId){return}switch(a){case"deadlineChange":this.onChangeDeadlineAction();break;case"taskApprove":this.onApproveAction();break;case"taskDisapprove":this.onDisapproveAction();break;case"taskComplete":this.complete();break;default:break}}onPullTaskResultCreate(t){this.updateTaskResultData(t)}onPullTaskResultDelete(t){this.updateTaskResultData(t)}updateTaskResultData(t){if(t.taskId.toString()===this.task.id){this.task.updateData({taskRequireResult:t.taskRequireResult,taskHasOpenResult:t.taskHasOpenResult,taskHasResult:t.taskHasResult})}}onPullComment(t){console.log("tasks.view.native::onPullComment",t);const[e,s]=t.entityXmlId.split("_");if(e!=="TASK"||s!==this.task.id||Number(t.ownerId)===Number(this.currentUser.id)){console.log("tasks.view.native::onPullComment -> return");return}this.rest.call("get",{taskId:s,select:o.selectFields,params:o.queryParams}).then((t=>{const{task:e}=t.result;this.task.setData(e);this.taskLimitExceeded=e.taskLimitExceeded;this.updateTask()}),(t=>console.log("tasks.view.native::onPullUpdate.get.error",t)))}onPullUpdate(t){console.log("tasks.view.native::onPullUpdate",t);const e=t.TASK_ID.toString();if(e!==this.task.id||t.params.updateCommentExists!==false){console.log("tasks.view.native::onPullUpdate -> return");return}this.rest.call("get",{taskId:e,select:o.selectFields,params:o.queryParams}).then((t=>{const{task:e}=t.result;this.task.setData(e);this.taskLimitExceeded=e.taskLimitExceeded;this.updateTask()}),(t=>console.log("tasks.view.native::onPullUpdate.get.error",t)))}onPullDelete(t){console.log("tasks.view.native::onPullDelete",t);const e=t.TASK_ID.toString();if(e!==this.task.id){return}InAppNotifier.showNotification({title:BX.message("TASKS_TASK_DETAIL_TASK_WAS_REMOVED_IN_ANOTHER_PLACE"),backgroundColor:"#333333"});if(this.taskCardHandler){this.taskCardHandler.closeForm()}}updateTask(t={}){BX.onViewLoaded((()=>{const e=Object.prototype.hasOwnProperty;Object.keys(t).forEach((s=>{if(e.call(this.task,s)||e.call(Object.getPrototypeOf(this.task),s)){this.task[s]=t[s]}}));this.updateTaskCardInfo()}))}updateTaskCardInfo(){if(this.taskCardHandler){this.taskCardHandler.setTaskInfo(this.getTaskInfo())}}getTaskInfo(){let t=this.task.getTaskInfo();t=this.handleItemActions(t);delete t.project;return t}handleItemActions(t){const e=["pin","unpin","read"];let{actions:a}=t;a=a.filter((t=>!e.includes(t.identifier)));if(s==="ios"){const e=a.filter((t=>t.position==="left"));if(a.length>4+e.length){const s=e.concat([Task.actions.more]);const i=[];a.filter((t=>!e.includes(t))).forEach((t=>{if(s.length<4+e.length){s.push(t)}else{i.push({id:t.identifier,title:t.title,iconUrl:Task.popupImageUrls[t.identifier],textColor:t.textColor,sectionCode:"default"})}}));i.push(Task.actions.cancel);a=s;t.params.popupActions=i}}else{a=a.map((t=>{t.iconUrl=Task.popupImageUrls[t.identifier];return t}));t.menuMode="dialog"}t.actions=a;return t}handleSwipeActionsShow(t){t.showSwipeActions=false;const{swipeShowHelper:e}=this.options.get();if(e.value<e.limit){t.showSwipeActions=true;e.value+=1;const s=t=>Object.keys(t)[0];this.options.update(s({swipeShowHelper:e}),e)}return t}onItemChecked(t){if(t){this.onCompleteAction()}else{this.onRenewAction()}}onItemAction(t){switch(t.identifier){case"ping":this.onPingAction();break;case"changeDeadline":this.onChangeDeadlineAction();break;case"approve":this.onApproveAction();break;case"disapprove":this.onDisapproveAction();break;case"start":this.onStartAction();break;case"pause":this.onPauseAction();break;case"renew":this.onRenewAction();break;case"changeResponsible":this.onChangeResponsibleAction();break;case"delegate":this.onDelegateAction();break;case"changeGroup":this.onChangeGroupAction();break;case"mute":this.onMuteAction();break;case"unmute":this.onUnmuteAction();break;case"unfollow":this.onUnfollowAction();break;case"remove":this.onRemoveAction();break;case"more":this.onMoreAction();return;default:break}}onPingAction(){this.updateTask({activityDate:Date.now()});this.task.ping();Notify.showIndicatorSuccess({text:BX.message("TASKS_TASK_DETAIL_TASK_PING_NOTIFICATION"),hideAfter:1500})}onChangeDeadlineAction(){const t={title:BX.message("TASKS_TASK_DETAIL_DEADLINE_DATE_PICKER"),type:"datetime",value:this.task.deadline};if(e>=34){t.items=[];Object.keys(Task.deadlines).forEach((e=>{t.items.push({name:Task.deadlines[e].name,value:this.deadlines[e]*1e3})}))}dialogs.showDatePicker(t,((t,e)=>{if(!e){return}this.updateTask({deadline:e,activityDate:Date.now()});this.sendOnItemActionWebEvent("deadline",{deadline:e})}))}onChangeResponsibleAction(){new RecipientSelector("TASKS_MEMBER_SELECTOR_EDIT_responsible",["user"]).setSingleChoose(true).setTitle(BX.message("TASKS_TASK_DETAIL_TITLE_RESPONSIBLE")).setSelected({user:[{id:this.task.responsible.id,title:this.task.responsible.name,imageUrl:this.task.responsible.icon}]}).open().then((t=>{if(t.user&&t.user.length>0){const e=t.user[0];if(Number(this.task.responsible.id)===Number(e.id)){return}this.updateTask({responsible:o.getItemDataFromUser(e),activityDate:Date.now()});this.sendOnItemActionWebEvent("responsible",{user:this.task.responsible})}}))}onDelegateAction(){new RecipientSelector("TASKS_MEMBER_SELECTOR_EDIT_responsible",["user"]).setSingleChoose(true).setTitle(BX.message("TASKS_TASK_DETAIL_TITLE_RESPONSIBLE")).setSelected({user:[{id:this.task.responsible.id,title:this.task.responsible.name,imageUrl:this.task.responsible.icon}]}).open().then((t=>{if(t.user&&t.user.length>0){const e=t.user[0];if(Number(this.task.responsible.id)===Number(e.id)){return}this.updateTask({responsible:o.getItemDataFromUser(e),activityDate:Date.now()});this.task.delegate().then((()=>BX.postWebEvent("tasks.view.native::onTaskUpdate",{taskId:this.task.id,responsible:true},true)))}}))}onChangeGroupAction(){const t=[];if(this.task.group.id>0){t.push({id:this.task.group.id,title:this.task.group.name,imageUrl:this.task.group.image})}new RecipientSelector("TASKS_PROJECT",["project"]).setSingleChoose(true).setTitle(BX.message("TASKS_LIST_POPUP_PROJECT")).setSelected({project:t}).open().then((t=>{if(t.project&&t.project.length){const e=t.project[0];if(Number(this.task.groupId)===Number(e.id)){return}this.task.groupId=Number(e.id);this.task.group=o.getItemDataFromGroup(e);this.updateTask({});this.sendOnItemActionWebEvent("group",{group:this.task.group})}}))}onMuteAction(){this.updateTask({isMuted:true});this.task.mute()}onUnmuteAction(){this.updateTask({isMuted:false});this.task.unmute()}onMoreAction(){const t=this.getTaskInfo();const e=dialogs.createPopupMenu();e.setData(t.params.popupActions,[{id:"default"}],((t,e)=>{if(t==="onItemSelected"){this.onActionsPopupItemSelected(e)}}));e.setPosition("center");e.show()}onActionsPopupItemSelected(t){switch(t.id){case"ping":this.onPingAction();break;case"changeDeadline":this.onChangeDeadlineAction();break;case"approve":this.onApproveAction();break;case"disapprove":this.onDisapproveAction();break;case"start":this.onStartAction();break;case"pause":this.onPauseAction();break;case"renew":this.onRenewAction();break;case"changeResponsible":this.onChangeResponsibleAction();break;case"delegate":this.onDelegateAction();break;case"changeGroup":this.onChangeGroupAction();break;case"mute":this.onMuteAction();break;case"unmute":this.onUnmuteAction();break;case"unfollow":this.onUnfollowAction();break;case"remove":this.onRemoveAction();break;case"cancel":return;default:break}this.updateTask({})}openNewTaskPage(){const t=0;const e=BX.message("TASKS_TASK_DETAIL_TASK_NEW_TASK_TITLE");const s=o.getGuid();let a=result.settings.taskPaths.add.replace(/#taskId#/gi,0).replace(/#userId#/gi,this.currentUser.id).replace(/#salt#/gi,(new Date).getTime());a=`${a}&GUID=${s}`;this.openTaskPage(a,s,e,t)}openNewSubTaskPage(){const t=0;const e=BX.message("TASKS_TASK_DETAIL_TASK_NEW_SUBTASK_TITLE");const s=o.getGuid();let a=result.settings.taskPaths.addSub.replace(/#taskId#/gi,0).replace(/#parentTaskId#/gi,this.task.id).replace(/#userId#/gi,this.currentUser.id).replace(/#salt#/gi,(new Date).getTime());a=`${a}&GUID=${s}`;this.openTaskPage(a,s,e,t)}openEditTaskPage(){const t=this.taskId;const e=BX.message("TASKS_TASK_DETAIL_TASK_EDIT_TITLE");const s=o.getGuid();let a=result.settings.taskPaths.update.replace(/#taskId#/gi,this.task.id).replace(/#userId#/gi,this.currentUser.id).replace(/#salt#/gi,(new Date).getTime());a=`${a}&GUID=${s}`;this.openTaskPage(a,s,e,t)}openTaskPage(t,e,s,a){if(Application.getApiVersion()>=33){PageManager.openComponent("JSStackComponent",{componentCode:"tasks.edit",scriptPath:availableComponents["tasks:tasks.view"].publicUrl,rootWidget:{name:"web",settings:{objectName:"taskcard",modal:true,cache:false,page:{url:t,titleParams:{text:s}}}},params:{MODE:"edit",COMPONENT_CODE:"tasks.view",USER_ID:this.userId||0,TASK_ID:a,GUID:e}})}else{PageManager.openPage({url:t,cache:false,modal:true})}}onAddToFavoriteAction(){const t=this.task.id;this.task.updateActions({canAddToFavorite:false,canRemoveFromFavorite:true});BX.postWebEvent("tasks.view.native::onTaskUpdate",{taskId:t,favorite:true},true);this.redrawTaskPopupMenu();this.task.addToFavorite().then((()=>{}),(()=>{BX.postWebEvent("tasks.view.native::onTaskUpdate",{taskId:t,favorite:false},true);this.redrawTaskPopupMenu()}))}onRemoveFromFavoriteAction(){const t=this.task.id;this.task.updateActions({canAddToFavorite:true,canRemoveFromFavorite:false});BX.postWebEvent("tasks.view.native::onTaskUpdate",{taskId:t,favorite:false},true);this.redrawTaskPopupMenu();this.task.removeFromFavorite().then((()=>{}),(()=>{BX.postWebEvent("tasks.view.native::onTaskUpdate",{taskId:t,favorite:true},true);this.redrawTaskPopupMenu()}))}onApproveAction(){this.task.updateActions({canApprove:false,canDisapprove:false,canRenew:true,canComplete:false});this.updateTask({status:Task.statusList.completed,activityDate:Date.now()});this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent();this.task.approve().then((()=>{this.updateTask();this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent()}))}onDisapproveAction(){this.task.updateActions({canApprove:false,canDisapprove:false,canRenew:false,canComplete:false,canStart:true});this.updateTask({status:Task.statusList.pending,activityDate:Date.now()});this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent();this.task.disapprove().then((()=>{this.updateTask();this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent()}))}onStartAction(){this.task.updateActions({canStart:false,canPause:true,canRenew:false});this.updateTask({status:Task.statusList.inprogress});this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent();this.task.start().then((()=>{this.updateTask();this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent()}))}onPauseAction(){this.task.updateActions({canStart:true,canPause:false,canRenew:false});this.updateTask({status:Task.statusList.pending});this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent();this.task.pause().then((()=>{this.updateTask();this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent()}))}onRenewAction(){this.task.updateActions({canStart:true,canPause:false,canRenew:false});this.updateTask({status:Task.statusList.pending,activityDate:Date.now()});this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent();this.task.renew().then((()=>{this.updateTask();this.redrawTaskPopupMenu()}));this.sendOnItemActionStatusWebEvent()}onCompleteAction(){if(!this.task.isResultRequired||this.task.isOpenResultExists){this.updateTask({status:Task.statusList.completed,activityDate:Date.now()});this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent();this.task.complete().then((()=>{this.updateTask();this.redrawTaskPopupMenu();this.sendOnItemActionStatusWebEvent()}))}else{this.task.complete().then((()=>{}),(()=>this.updateTask()))}}onRemoveAction(){dialogs.showActionSheet({title:BX.message("TASKS_TASK_DETAIL_CONFIRM_REMOVE"),callback:t=>{if(t.id==="yes"){InAppNotifier.showNotification({title:BX.message("TASKS_TASK_DETAIL_TASK_WAS_REMOVED"),backgroundColor:"#333333"});void this.task.remove();if(this.taskCardHandler){this.taskCardHandler.closeForm()}}},items:o.getRemoveSheetItems()})}onUnfollowAction(){delete this.task.auditors[this.currentUser.id.toString()];if(!this.task.isMember(this.currentUser.id)){void this.task.stopWatch();if(this.taskCardHandler){this.taskCardHandler.closeForm()}}else{this.updateTask({activityDate:Date.now()})}}sendOnItemActionStatusWebEvent(){this.sendOnItemActionWebEvent("status",{status:this.task.status})}sendOnItemActionWebEvent(t,e){BX.postWebEvent("tasks.view.native::onItemAction",{name:t,values:e,taskId:this.task.id,taskGuid:this.guid})}redrawTaskPopupMenu(){this.taskPopupMenu.setData(this.popupMenuItems,[{id:"0"}],((t,e)=>{if(t==="onItemSelected"){const t=this.popupMenuItemsMap;if(Object.keys(t).includes(e.id)){t[e.id].action.apply(this)}}}))}get popupMenuItems(){const t=[];const e="0";const s=this.popupMenuItemsMap;Object.keys(s).forEach((a=>{if(this.can(a)||["addTask","addSubTask"].includes(a)){t.push({sectionCode:e,id:a,title:s[a].title,iconUrl:s[a].iconUrl,disable:s[a].disable||false})}}));return t}can(t){const e=Object.prototype.hasOwnProperty;return e.call(this.task.actions,t)&&Boolean(this.task.actions[t])}get popupMenuItemsMap(){const e=`${t}/images/mobile-taskcard-popup-`;return{addTask:{title:BX.message("TASKS_TASK_DETAIL_TASK_ADD"),iconUrl:`${e}add.png`,action:this.openNewTaskPage},addSubTask:{title:BX.message("TASKS_TASK_DETAIL_TASK_ADD_SUBTASK"),iconUrl:`${e}add.png`,action:this.openNewSubTaskPage},"favorite.add":{title:BX.message("TASKS_TASK_DETAIL_BTN_ADD_FAVORITE_TASK"),iconUrl:`${e}add-favorite.png`,action:this.onAddToFavoriteAction},"favorite.delete":{title:BX.message("TASKS_TASK_DETAIL_BTN_DELETE_FAVORITE_TASK"),iconUrl:`${e}delete-favorite.png`,action:this.onRemoveFromFavoriteAction},start:{title:BX.message("TASKS_TASK_DETAIL_BTN_START_TASK"),iconUrl:`${e}start.png`,action:this.onStartAction},complete:{title:BX.message("TASKS_TASK_DETAIL_BTN_CLOSE_TASK"),iconUrl:`${e}finish.png`,action:this.onCompleteAction},renew:{title:BX.message("TASKS_TASK_DETAIL_BTN_RENEW_TASK"),iconUrl:`${e}renew.png`,action:this.onRenewAction},pause:{title:BX.message("TASKS_TASK_DETAIL_BTN_PAUSE_TASK"),iconUrl:`${e}pause.png`,action:this.onPauseAction},disapprove:{title:BX.message("TASKS_TASK_DETAIL_BTN_REDO_TASK"),iconUrl:`${e}renew.png`,action:this.onDisapproveAction},approve:{title:BX.message("TASKS_TASK_DETAIL_BTN_APPROVE_TASK"),iconUrl:`${e}finish.png`,action:this.onApproveAction},delegate:{title:BX.message("TASKS_TASK_DETAIL_BTN_DELEGATE_TASK"),iconUrl:`${e}delegate.png`,action:this.onDelegateAction,disable:this.taskLimitExceeded},edit:{title:BX.message("TASKS_TASK_DETAIL_BTN_EDIT"),iconUrl:`${e}edit.png`,action:this.openEditTaskPage},remove:{title:BX.message("TASKS_TASK_DETAIL_BTN_REMOVE"),iconUrl:`${e}delete.png`,action:this.onRemoveAction}}}}class r extends o{init(t,e){super.init(t,e);this.mode="view";if(this.task.id===this.taskId){this.task.pseudoRead();this.onInitSuccess();return}this.rest.call("get",{taskId:this.taskId,select:o.selectFields,params:o.queryParams}).then((t=>{const{task:e}=t.result;this.task.setData(e);this.task.pseudoRead();this.taskLimitExceeded=e.taskLimitExceeded;this.onInitSuccess()}))}onInitSuccess(){BX.onViewLoaded((()=>{this.taskCardHandler=new n(taskcard);this.checklistController=new ChecklistController(this.taskId,this.userId,this.guid,this.mode);const t=this.getTaskInfo();delete t.project;this.taskCardHandler.setTaskInfo(this.handleSwipeActionsShow(t));this.taskCardHandler.setTaskInfo(this.handleSwipeActionsShow(t));this.taskPopupMenu=dialogs.createPopupMenu();this.taskPopupMenu.setPosition("center");this.redrawTaskPopupMenu();taskcard.setRightButtons([{type:"more",callback:()=>{this.taskPopupMenu.show()}}])}))}}class c extends o{init(t,e){super.init(t,e);this.mode="edit";BX.onViewLoaded((()=>{this.checklistController=new ChecklistController(this.taskId,this.userId,this.guid,this.mode);this.taskPopupMenu=dialogs.createPopupMenu();this.taskPopupMenu.setPosition("center");this.redrawTaskPopupMenu();t.setLeftButtons([{name:BX.message("TASKS_TASK_DETAIL_TASK_EDIT_CANCEL"),callback:()=>{t.close()}}])}))}}jnexport([r,"TaskCardView"],[c,"TaskCardEdit"])})();
//# sourceMappingURL=extension.map.js