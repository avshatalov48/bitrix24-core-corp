jn.define("tasks/layout/task/fields/isImportant",((t,e,s)=>{const{Loc:a}=t("loc");const{BooleanField:o,BooleanMode:n}=t("layout/ui/fields/boolean");class r extends LayoutComponent{constructor(t){super(t);this.state={readOnly:t.readOnly,isImportant:t.isImportant}}componentWillReceiveProps(t){this.state={readOnly:t.readOnly,isImportant:t.isImportant}}updateState(t){this.setState({readOnly:t.readOnly,isImportant:t.isImportant})}render(){return o({readOnly:this.state.readOnly,showEditIcon:!this.state.readOnly,showTitle:false,value:this.state.isImportant,config:{deepMergeStyles:this.props.deepMergeStyles,mode:n.ICON_FADING,description:a.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_IS_IMPORTANT"),iconUri:`${this.props.pathToImages}/tasksmobile-layout-task-important.png`},testId:"isImportant",onChange:t=>{this.setState({isImportant:t});this.props.onChange(t)}})}}s.exports={IsImportant:r}}));
//# sourceMappingURL=extension.map.js