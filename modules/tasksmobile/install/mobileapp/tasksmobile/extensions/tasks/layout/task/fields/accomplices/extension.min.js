jn.define("tasks/layout/task/fields/accomplices",((e,t,s)=>{const{Loc:i}=e("loc");const{Type:c}=e("type");const{UserField:o}=e("layout/ui/fields/user");class a extends LayoutComponent{constructor(e){super(e);this.state={readOnly:e.readOnly,accomplices:e.accomplices};e.checkList.on("accompliceAdd",(e=>{if(!Object.keys(this.state.accomplices).includes(e.id.toString())){const t={...this.state.accomplices,[e.id]:{id:e.id,name:e.nameFormatted,icon:e.avatar}};this.setState({accomplices:t});this.props.onChange(t)}}))}componentWillReceiveProps(e){this.state={readOnly:e.readOnly,accomplices:e.accomplices}}updateState(e){this.setState({readOnly:e.readOnly,accomplices:e.accomplices})}render(){return o({readOnly:this.state.readOnly,showEditIcon:true,title:i.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_ACCOMPLICES"),hasHiddenEmptyView:true,multiple:true,value:Object.keys(this.state.accomplices),config:{showSubtitle:false,deepMergeStyles:this.props.deepMergeStyles,provider:{context:"TASKS_MEMBER_SELECTOR_EDIT_accomplice"},entityList:Object.values(this.state.accomplices).map((e=>({id:e.id,title:e.name,imageUrl:!c.isString(e.icon)||!c.isStringFilled(e.icon)||e.icon.indexOf("default_avatar.png")>=0?null:e.icon,customData:{position:e.workPosition}}))),reloadEntityListFromProps:true,parentWidget:this.props.parentWidget},testId:"accomplices",onChange:(e,t)=>{const s=t.reduce(((e,t)=>{e[t.id]={id:t.id,name:t.title,icon:t.imageUrl,workPosition:t.customData.position};return e}),{});const i=Object.keys(s);const c=Object.keys(this.state.accomplices);const o=i.filter((e=>!c.includes(e))).concat(c.filter((e=>!i.includes(e))));if(o.length){this.setState({accomplices:s});this.props.onChange(s)}}})}}s.exports={Accomplices:a}}));
//# sourceMappingURL=extension.map.js