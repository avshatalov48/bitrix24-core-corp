jn.define("tasks/layout/task/fields/auditors",((t,e,s)=>{const{Loc:i}=t("loc");const{Type:o}=t("type");const{UserField:a}=t("layout/ui/fields/user");class r extends LayoutComponent{constructor(t){super(t);this.state={readOnly:t.readOnly,auditors:t.auditors};t.checkList.on("auditorAdd",(t=>{if(!Object.keys(this.state.auditors).includes(t.id.toString())){const e={...this.state.auditors,[t.id]:{id:t.id,name:t.nameFormatted,icon:t.avatar}};this.setState({auditors:e});this.props.onChange(e)}}))}componentWillReceiveProps(t){this.state={readOnly:t.readOnly,auditors:t.auditors}}updateState(t){this.setState({readOnly:t.readOnly,auditors:t.auditors})}render(){return a({readOnly:this.state.readOnly,showEditIcon:true,title:i.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_AUDITORS"),hasHiddenEmptyView:true,multiple:true,value:Object.keys(this.state.auditors),config:{showSubtitle:false,deepMergeStyles:this.props.deepMergeStyles,provider:{context:"TASKS_MEMBER_SELECTOR_EDIT_auditor"},entityList:Object.values(this.state.auditors).map((t=>({id:t.id,title:t.name,imageUrl:!o.isString(t.icon)||!o.isStringFilled(t.icon)||t.icon.indexOf("default_avatar.png")>=0?null:t.icon,customData:{position:t.workPosition}}))),reloadEntityListFromProps:true,parentWidget:this.props.parentWidget},testId:"auditors",onChange:(t,e)=>{const s=e.reduce(((t,e)=>{t[e.id]={id:e.id,name:e.title,icon:e.imageUrl,workPosition:e.customData.position};return t}),{});const i=Object.keys(s);const o=Object.keys(this.state.auditors);const a=i.filter((t=>!o.includes(t))).concat(o.filter((t=>!i.includes(t))));if(a.length){this.setState({auditors:s});this.props.onChange(s)}}})}}s.exports={Auditors:r}}));
//# sourceMappingURL=extension.map.js