jn.define("tasks/layout/task/fields/creator",((t,e,r)=>{const{Loc:s}=t("loc");const{Type:a}=t("type");const{UserField:i}=t("layout/ui/fields/user");class o extends LayoutComponent{constructor(t){super(t);this.state={readOnly:t.readOnly,creator:t.creator}}componentWillReceiveProps(t){this.state={readOnly:t.readOnly,creator:t.creator}}updateState(t){this.setState({readOnly:t.readOnly,creator:t.creator})}render(){return i({readOnly:this.state.readOnly,showEditIcon:!this.state.readOnly,title:s.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_CREATOR"),multiple:false,value:this.state.creator.id,titlePosition:"left",config:{showSubtitle:false,deepMergeStyles:this.props.deepMergeStyles,provider:{context:"TASKS_MEMBER_SELECTOR_EDIT_originator"},entityList:[{id:this.state.creator.id,title:this.state.creator.name,imageUrl:!a.isString(this.state.creator.icon)||!a.isStringFilled(this.state.creator.icon)||this.state.creator.icon.indexOf("default_avatar.png")>=0?null:this.state.creator.icon,customData:{position:this.state.creator.workPosition}}],canUnselectLast:false,reloadEntityListFromProps:true,parentWidget:this.props.parentWidget},testId:"creator",onChange:(t,e)=>{if(Number(t)!==Number(this.state.creator.id)){const r={id:t,name:e[0].title,icon:e[0].imageUrl,workPosition:e[0].customData.position};this.setState({creator:r});this.props.onChange(r)}}})}}r.exports={Creator:o}}));
//# sourceMappingURL=extension.map.js