jn.define("tasks/layout/task/fields/timeTracking",((e,t,i)=>{const{TimeTrackingIs:r}=e("tasks/layout/task/fields/timeTrackingIs");const{TimeTrackingTime:a}=e("tasks/layout/task/fields/timeTrackingTime");class s extends LayoutComponent{constructor(e){super(e);this.state={readOnly:e.readOnly,isTimeTracking:e.isTimeTracking,timeEstimate:e.timeEstimate}}componentWillReceiveProps(e){this.state={readOnly:e.readOnly,isTimeTracking:e.isTimeTracking,timeEstimate:e.timeEstimate}}updateState(e){this.setState({readOnly:e.readOnly,isTimeTracking:e.isTimeTracking,timeEstimate:e.timeEstimate})}getDeepMergeStyles(){return{...this.props.deepMergeStyles,wrapper:{...this.props.deepMergeStyles.wrapper,paddingHorizontal:11},readOnlyWrapper:{...this.props.deepMergeStyles.readOnlyWrapper,paddingHorizontal:11}}}render(){return View({style:{borderWidth:1,borderColor:"#e6e6e6",borderRadius:7,marginHorizontal:-11,marginTop:6},testId:"timeTrackingField"},new r({readOnly:this.state.readOnly,isTimeTracking:this.state.isTimeTracking,deepMergeStyles:this.getDeepMergeStyles(),onChange:e=>{this.timeTrackingBlockRef.animate({duration:200,height:!e?0:55});this.timeTrackingBlockRef.animate({duration:600,opacity:!e?0:1});this.props.onChange({allowTimeTracking:e?"Y":"N"})}}),View({style:{height:this.state.isTimeTracking?55:0,opacity:this.state.isTimeTracking?1:0},ref:e=>this.timeTrackingBlockRef=e},this.renderWithTopBorder(new a({readOnly:this.state.readOnly,timeEstimate:this.state.timeEstimate,deepMergeStyles:{...this.getDeepMergeStyles(),wrapper:{paddingHorizontal:11},readOnlyWrapper:{paddingHorizontal:11}},onChange:e=>this.props.onChange({timeEstimate:e})}))))}renderWithTopBorder(e){return View({},View({style:{height:.5,backgroundColor:"#e6e6e6"}}),e)}}i.exports={TimeTracking:s}}));
//# sourceMappingURL=extension.map.js