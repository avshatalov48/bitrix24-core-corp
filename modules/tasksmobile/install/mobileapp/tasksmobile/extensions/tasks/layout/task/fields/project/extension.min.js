jn.define("tasks/layout/task/fields/project",((t,e,r)=>{const{Loc:o}=t("loc");const{ProjectField:a}=t("layout/ui/fields/project");class s extends LayoutComponent{constructor(t){super(t);this.state={readOnly:t.readOnly,groupId:t.groupId,groupData:t.groupData}}componentWillReceiveProps(t){this.state={readOnly:t.readOnly,groupId:t.groupId,groupData:t.groupData}}updateState(t){this.setState({readOnly:t.readOnly,groupId:t.groupId,groupData:t.groupData})}render(){const t={readOnly:this.state.readOnly,showEditIcon:true,title:o.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_PROJECT"),value:this.state.groupId,multiple:false,config:{deepMergeStyles:this.props.deepMergeStyles,selectorType:EntitySelectorFactory.Type.PROJECT,entityList:this.state.groupId>0?[this.convertGroupDataFromTaskToField(this.state.groupData)]:[],provider:{context:"TASKS_PROJECTLINK"},reloadEntityListFromProps:true,parentWidget:this.props.parentWidget},testId:"project",onChange:(t,e)=>{t=t||0;if(Number(t)!==Number(this.state.groupId)){e=t>0?this.convertGroupDataFromFieldToTask(e[0]):null;this.setState({groupId:t,groupData:e});this.props.onChange(t,e)}}};if(this.props.isCreateMode){t.titlePosition="left"}else{t.hasHiddenEmptyView=true}return a(t)}convertGroupDataFromTaskToField(t){return{id:t.id,title:t.name,imageUrl:t.image}}convertGroupDataFromFieldToTask(t){return{id:t.id,name:t.title,image:t.imageUrl}}}r.exports={Project:s}}));
//# sourceMappingURL=extension.map.js