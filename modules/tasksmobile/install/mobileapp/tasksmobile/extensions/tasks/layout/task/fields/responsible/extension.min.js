jn.define("tasks/layout/task/fields/responsible",((e,s,t)=>{const{Loc:i}=e("loc");const{Type:n}=e("type");const{UserField:o}=e("layout/ui/fields/user");class l extends LayoutComponent{constructor(e){super(e);this.state={readOnly:e.readOnly,responsible:e.responsible}}componentWillReceiveProps(e){this.state={readOnly:e.readOnly,responsible:e.responsible}}updateState(e){this.setState({readOnly:e.readOnly,responsible:e.responsible})}render(){return o({readOnly:this.state.readOnly,showEditIcon:!this.state.readOnly,title:i.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_RESPONSIBLE"),multiple:false,value:this.state.responsible.id,titlePosition:"left",config:{showSubtitle:false,deepMergeStyles:this.props.deepMergeStyles,provider:{context:"TASKS_MEMBER_SELECTOR_EDIT_responsible"},entityList:[{id:this.state.responsible.id,title:this.state.responsible.name,imageUrl:!n.isString(this.state.responsible.icon)||!n.isStringFilled(this.state.responsible.icon)||this.state.responsible.icon.indexOf("default_avatar.png")>=0?null:this.state.responsible.icon,customData:{position:this.state.responsible.workPosition}}],canUnselectLast:false,reloadEntityListFromProps:true,parentWidget:this.props.parentWidget},testId:"responsible",onChange:(e,s)=>{if(Number(e)!==Number(this.state.responsible.id)){const t={id:e,name:s[0].title,icon:s[0].imageUrl,workPosition:s[0].customData.position};this.setState({responsible:t});this.props.onChange(t)}}})}}t.exports={Responsible:l}}));
//# sourceMappingURL=extension.map.js