jn.define("tasks/layout/task/create",((e,t,s)=>{const{CheckList:i}=e("tasks/layout/checklist");const{Responsible:a}=e("tasks/layout/task/fields/responsible");const{Accomplices:n}=e("tasks/layout/task/fields/accomplices");const{Auditors:r}=e("tasks/layout/task/fields/auditors");const{Title:l}=e("tasks/layout/task/fields/title");const{Deadline:o}=e("tasks/layout/task/fields/deadline");const{Description:d}=e("tasks/layout/task/fields/description");const{Project:h}=e("tasks/layout/task/fields/project");const{IsImportant:c}=e("tasks/layout/task/fields/isImportant");const{Tags:u}=e("tasks/layout/task/fields/tags");const{Files:g}=e("tasks/layout/task/fields/files");const{CanChangeDeadline:k}=e("tasks/layout/task/fields/canChangeDeadline");const{IsMatchWorkTime:p}=e("tasks/layout/task/fields/isMatchWorkTime");const{IsTaskControl:f}=e("tasks/layout/task/fields/isTaskControl");const{IsResultRequired:y}=e("tasks/layout/task/fields/isResultRequired");const{TimeTracking:m}=e("tasks/layout/task/fields/timeTracking");const{DatePlan:T}=e("tasks/layout/task/fields/datePlan");const{Crm:S}=e("tasks/layout/task/fields/crm");const{CheckListTree:D}=e("tasks/checklist");const{FieldsPinnerObject:R}=e("tasks/fieldsPinner");const{CalendarSettings:C}=e("tasks/task/calendar");const{DatesResolver:I}=e("tasks/task/datesResolver");const{FocusManager:F}=e("layout/ui/fields/focus-manager");const{get:O}=e("utils/object");const{Loc:w}=e("loc");const{Type:b}=e("type");const M=54;const P=52;class L extends LayoutComponent{static get section(){return{pinned:"pinned",common:"common"}}static get field(){return{title:"title",responsible:"responsible",deadline:"deadline",description:"description",files:"files",checklist:"checklist",project:"project",accomplices:"accomplices",auditors:"auditors",isImportant:"isImportant",tags:"tags",datePlan:"datePlan",timeTracking:"timeTracking",crm:"crm",canChangeDeadline:"canChangeDeadline",isMatchWorkTime:"isMatchWorkTime",isTaskControl:"isTaskControl",isResultRequired:"isResultRequired"}}constructor(e){super(e);this.state={showLoading:true,readOnly:false,isAllFields:false,focus:true};this.guid=e.guid;this.userId=Number(e.currentUser.id);this.diskFolderId=Number(e.diskFolderId);this.pathToImages="/bitrix/mobileapp/tasksmobile/extensions/tasks/layout/task/images";this.layoutWidget=null;this.deadlines=Object.entries(Task.deadlines).map((([t,s])=>({name:s.name,value:e.deadlines[t]*1e3})));this.pinnedFields=Object.values(L.field).filter((e=>R.isFieldPinned(e)));this.task=new Task(e.currentUser);this.task.updateData({creator:e.currentUser,responsible:e.responsible,groupId:e.groupId,group:e.groupData});this.datesResolver=new I({id:this.task.id,guid:this.guid,deadline:this.task.deadline,startDatePlan:this.task.startDatePlan,endDatePlan:this.task.endDatePlan,isMatchWorkTime:this.task.isMatchWorkTime});this.checkList=D.buildTree();this.scrollY=0}componentDidMount(){Promise.allSettled([this.getDiskFolderId(),C.loadSettings()]).then((()=>{this.bindEvents();this.setState({showLoading:false});setTimeout((()=>this.setState({focus:null})))}))}getDiskFolderId(){return new Promise((e=>{if(this.diskFolderId){return e()}new RequestExecutor("mobile.disk.getUploadedFilesFolder").call().then((t=>{this.diskFolderId=Number(t.result);e()}))}))}bindEvents(){this.bindDatesResolverEvents()}bindDatesResolverEvents(){this.datesResolver.on("datesResolver:deadlineChanged",(e=>{this.task.deadline=e*1e3;this.deadlineRef.updateState({readOnly:this.state.readOnly,deadline:this.task.deadline,taskState:this.task.getState(),deadlines:this.deadlines})}));this.datesResolver.on("datesResolver:datesChanged",((e,t)=>{this.task.startDatePlan=e*1e3;this.task.endDatePlan=t*1e3;this.datePlanStartRef.updateState({readOnly:this.state.readOnly,startDatePlan:this.task.startDatePlan});this.datePlanEndRef.updateState({readOnly:this.state.readOnly,endDatePlan:this.task.endDatePlan});this.datePlanDurationRef.updateState({readOnly:this.state.readOnly,duration:this.datesResolver.durationByType,durationType:this.datesResolver.durationType})}))}getDeepMergeStylesForField(e=false){const t={wrapper:e=>({height:e?undefined:M,minHeight:e?M:undefined,justifyContent:"center",paddingTop:10,paddingBottom:10}),readOnlyWrapper:e=>({height:e?undefined:M,minHeight:e?M:undefined,justifyContent:"center",paddingTop:10,paddingBottom:10})};return Object.entries(t).reduce(((t,[s,i])=>{t[s]=b.isFunction(i)?i(e):i;return t}),{})}render(){if(this.state.showLoading){return this.renderLoadingScreen()}return this.renderTaskCreateScreen()}renderLoadingScreen(){return View({},new LoadingScreenComponent)}renderTaskCreateScreen(){return View({resizableByKeyboard:true,style:{flex:1,backgroundColor:"#eef2f4",paddingBottom:P},safeArea:{bottom:true}},ScrollView({ref:e=>this.scrollViewRef=e,style:{flex:1,borderRadius:12},bounces:true,showsVerticalScrollIndicator:true,onScroll:e=>{this.scrollY=e.contentOffset.y}},View({},...this.renderSections())),this.renderBottomPanel())}renderBottomPanel(){return new UI.BottomToolbar({renderContent:()=>View({style:{flex:1,flexDirection:"row-reverse",height:P},testId:"taskCreateToolbar"},View({style:{justifyContent:"center",paddingHorizontal:28,borderLeftWidth:1,borderLeftColor:"#eef2f4"},testId:"taskCreateToolbar_createButton",onClick:()=>this.save()},Text({style:{fontSize:18,fontWeight:"500",color:"#0b66c3"},text:w.getMessage("TASKSMOBILE_LAYOUT_TASK_CREATE_TOOLBAR_CREATE")})),View({style:{justifyContent:"center",paddingHorizontal:2}},View({style:{flexDirection:"row"}},Image({style:{width:28,height:28,marginRight:14},uri:this.getImageUrl(`${this.pathToImages}/tasksmobile-layout-task-toolbar-keyboard-hide.png`),testId:"taskCreateToolbar_hideKeyboardButton",onClick:()=>{F.blurFocusedFieldIfHas(true);if(this.checkListRef&&this.checkListRef.isFocused()){this.checkListRef.removeFocus()}}}),Image({style:{width:28,height:28,marginRight:14},uri:this.getImageUrl(`${this.pathToImages}/tasksmobile-layout-task-toolbar-attach-file.png`),testId:"taskCreateToolbar_attachFileButton",onClick:()=>this.filesInnerRef.focus()}))),View({style:{flex:1,justifyContent:"center",alignItems:"center"},testId:"taskCreateToolbar_allFieldsButton",onClick:()=>{if(!this.state.isAllFields){this.setState({isAllFields:true},(()=>this.layoutWidget.fixBottomSheetAtTop()))}}},Text({style:{fontSize:16,fontWeight:"500",color:this.state.isAllFields?"#eef2f4":"#bdc1c6"},text:w.getMessage("TASKSMOBILE_LAYOUT_TASK_CREATE_TOOLBAR_ALL_FIELDS")})))})}getImageUrl(e){if(e.indexOf(currentDomain)!==0){e=encodeURI(e);e=e.replace(`${currentDomain}`,"");e=e.indexOf("http")!==0?`${currentDomain}${e}`:e}return e}renderSections(){const e={[L.section.pinned]:{},[L.section.common]:{}};Object.entries(this.getFieldsContent()).filter((([t,s])=>{const i=this.pinnedFields.includes(t)?L.section.pinned:L.section.common;e[i][t]=s}));const t=[L.field.title,L.field.files,L.field.checklist,L.field.datePlan,L.field.timeTracking];const s=[L.field.checklist,L.field.datePlan,L.field.timeTracking];return Object.entries(e).map((([e,i])=>{if(!this.state.isAllFields&&e!==L.section.pinned){return}let a="";return View({style:{backgroundColor:"#ffffff",borderRadius:12,paddingHorizontal:16,paddingTop:e===L.section.pinned?0:5,paddingBottom:5,marginTop:e===L.section.pinned?0:20},testId:`taskCreateSection_${e}`},...Object.entries(i).map((([e,i])=>{if(t.includes(e)||s.includes(a)||a===""){a=e;return i}a=e;return this.renderWithTopBorder(i)})))}))}renderWithTopBorder(e){return View({},View({style:{height:.5,backgroundColor:"#e6e6e6"}}),e)}getFieldsContent(){return{[L.field.title]:new l({readOnly:this.state.readOnly,title:this.task.title,focus:this.state.focus,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({title:e})}),[L.field.responsible]:new a({readOnly:this.state.readOnly,responsible:this.task.responsible,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(),onChange:e=>this.task.updateData({responsible:e})}),[L.field.deadline]:new o({readOnly:this.state.readOnly,deadline:this.task.deadline,taskState:this.task.getState(),deadlines:this.deadlines,deepMergeStyles:this.getDeepMergeStylesForField(),pathToImages:this.pathToImages,datesResolver:this.datesResolver,ref:e=>this.deadlineRef=e}),[L.field.project]:new h({readOnly:this.state.readOnly,groupId:this.task.groupId,groupData:this.task.group,isCreateMode:true,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(),onChange:(e,t)=>this.task.updateData({groupId:e,group:t})}),[L.field.description]:new d({readOnly:this.state.readOnly,description:this.task.description,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({description:e})}),[L.field.files]:new g({readOnly:this.state.readOnly,userId:this.userId,taskId:0,files:[...this.task.files||[],...this.task.uploadedFiles||[]],isAlwaysShowed:false,showAddButton:false,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(true),onInnerRef:e=>this.filesInnerRef=e,onChange:e=>{const t=[];const s=[];e.forEach((e=>{if(e.token){t.push(e)}else if(e.id&&!e.isUploading&&!e.hasError){s.push(e)}}));this.task.updateData({uploadedFiles:t,files:s});this.filesInnerRef.removeFocus()}}),[L.field.checklist]:View({style:{marginHorizontal:-11}},new i({checkList:this.checkList,taskId:0,taskGuid:this.task.guid,userId:this.userId,diskConfig:{folderId:this.diskFolderId},parentWidget:this.layoutWidget,onFocus:e=>{if(this.scrollViewRef&&e){const{y:t}=this.scrollViewRef.getPosition(e);if(t>this.scrollY+device.screen.height*.4){const e=t-150;this.scrollViewRef.scrollTo({...{y:e},animated:true})}}},onChange:()=>{},ref:e=>this.checkListRef=e})),[L.field.accomplices]:new n({readOnly:this.state.readOnly,accomplices:this.task.accomplices,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(true),checkList:this.checkList,onChange:e=>this.task.updateData({accomplicesData:e})}),[L.field.auditors]:new r({readOnly:this.state.readOnly,auditors:this.task.auditors,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(true),checkList:this.checkList,onChange:e=>this.task.updateData({auditorsData:e})}),[L.field.isImportant]:new c({readOnly:this.state.readOnly,isImportant:this.task.priority===Task.priority.important,deepMergeStyles:this.getDeepMergeStylesForField(),pathToImages:this.pathToImages,onChange:e=>this.task.updateData({priority:e?Task.priority.important:Task.priority.none})}),[L.field.tags]:new u({readOnly:this.state.readOnly,tags:this.task.tags,taskId:0,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({tags:e})}),[L.field.datePlan]:new T({readOnly:this.state.readOnly,isDatePlan:this.isDatePlan,startDatePlan:this.task.startDatePlan,endDatePlan:this.task.endDatePlan,deepMergeStyles:this.getDeepMergeStylesForField(),datesResolver:this.datesResolver,ref:e=>this.datePlanRef=e,onDatePlanIsRef:e=>this.datePlanIsRef=e,onDatePlanStartRef:e=>this.datePlanStartRef=e,onDatePlanEndRef:e=>this.datePlanEndRef=e,onDatePlanDurationRef:e=>this.datePlanDurationRef=e,onChange:e=>this.isDatePlan=e}),[L.field.timeTracking]:new m({readOnly:this.state.readOnly,isTimeTracking:this.task.allowTimeTracking,timeEstimate:this.task.timeEstimate,deepMergeStyles:this.getDeepMergeStylesForField(),onChange:e=>this.task.updateData(e)}),[L.field.crm]:new S({readOnly:this.state.readOnly,crm:this.task.crm,parentWidget:this.layoutWidget,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({crm:e})}),[L.field.canChangeDeadline]:new k({readOnly:this.state.readOnly,canChangeDeadline:this.task.allowChangeDeadline,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({allowChangeDeadline:e?"Y":"N"})}),[L.field.isMatchWorkTime]:new p({readOnly:this.state.readOnly,isMatchWorkTime:this.task.isMatchWorkTime,deepMergeStyles:this.getDeepMergeStylesForField(true),datesResolver:this.datesResolver,onChange:e=>this.task.updateData({matchWorkTime:e?"Y":"N"})}),[L.field.isTaskControl]:new f({readOnly:this.state.readOnly,isTaskControl:this.task.allowTaskControl,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({taskControl:e?"Y":"N"})}),[L.field.isResultRequired]:new y({readOnly:this.state.readOnly,isResultRequired:this.task.isResultRequired,deepMergeStyles:this.getDeepMergeStylesForField(true),onChange:e=>this.task.updateData({taskRequireResult:e?"Y":"N"})})}}save(){if(!this.checkCanSave()){return}this.isSaving=true;Notify.showIndicatorLoading();this.task.save().then((()=>{if(this.checkList.isActive()){this.checkList.save(this.task.id)}this.layoutWidget.close()}),(()=>{Notify.hideCurrentIndicator();this.isSaving=false}))}checkCanSave(){if(this.isSaving){return false}if(this.task.title===""){Notify.showIndicatorError({hideAfter:2e3,text:w.getMessage("TASKSMOBILE_LAYOUT_TASK_CREATE_SAVE_ERROR_NO_TITLE")});return false}if(this.filesInnerRef.hasUploadingFiles()){Notify.showIndicatorError({hideAfter:2e3,text:w.getMessage("TASKSMOBILE_LAYOUT_TASK_CREATE_SAVE_ERROR_LOADING_FILES")});return false}return true}}class A{static open(e){function t(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)}const s=new L({guid:`${t()}${t()}-${t()}-${t()}-${t()}-${t()}${t()}${t()}`,currentUser:e.currentUser,responsible:e.responsible||e.currentUser,groupId:e.groupId||0,groupData:e.groupData||{},diskFolderId:e.diskFolderId||0,deadlines:e.deadlines});const i=e.layoutWidget||PageManager;i.openWidget("layout",{backdrop:{bounceEnable:true,swipeAllowed:false,showOnTop:false,hideNavigationBar:true,horizontalSwipeAllowed:false,shouldResizeContent:true,mediumPositionHeight:R.pinnedFields.length*M-M+15+P,adoptHeightByKeyboard:true}}).then((e=>{e.showComponent(s);s.layoutWidget=e}))}}s.exports={TaskCreate:L,TaskCreateManager:A}}));
//# sourceMappingURL=extension.map.js