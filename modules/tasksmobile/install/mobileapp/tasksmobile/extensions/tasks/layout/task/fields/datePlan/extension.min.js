jn.define("tasks/layout/task/fields/datePlan",((e,t,a)=>{const{DatePlanIs:s}=e("tasks/layout/task/fields/datePlanIs");const{DatePlanStart:r}=e("tasks/layout/task/fields/datePlanStart");const{DatePlanEnd:n}=e("tasks/layout/task/fields/datePlanEnd");const{DatePlanDuration:l}=e("tasks/layout/task/fields/datePlanDuration");class i extends LayoutComponent{constructor(e){super(e);this.state={readOnly:e.readOnly,isDatePlan:e.isDatePlan}}componentWillReceiveProps(e){this.state={readOnly:e.readOnly,isDatePlan:e.isDatePlan}}updateState(e){this.setState({readOnly:e.readOnly,isDatePlan:e.isDatePlan})}getDeepMergeStyles(){return{...this.props.deepMergeStyles,wrapper:{...this.props.deepMergeStyles.wrapper,paddingHorizontal:11},readOnlyWrapper:{...this.props.deepMergeStyles.readOnlyWrapper,paddingHorizontal:11}}}animateBlock(e){this.datePlanBlockRef.animate({duration:200,height:e?165:0});this.datePlanBlockRef.animate({duration:600,opacity:e?1:0})}render(){return View({style:{borderWidth:1,borderColor:"#e6e6e6",borderRadius:7,marginHorizontal:-11},testId:"datePlanField"},new s({readOnly:this.state.readOnly,isDatePlan:this.state.isDatePlan,deepMergeStyles:this.getDeepMergeStyles(),ref:e=>this.props.onDatePlanIsRef(e),onChange:e=>{this.animateBlock(e);this.props.onChange(e)}}),View({style:{height:this.state.isDatePlan?165:0,opacity:this.state.isDatePlan?1:0},ref:e=>this.datePlanBlockRef=e},this.renderWithTopBorder(new r({readOnly:this.state.readOnly,startDatePlan:this.props.startDatePlan,datesResolver:this.props.datesResolver,deepMergeStyles:this.getDeepMergeStyles(),ref:e=>this.props.onDatePlanStartRef(e)})),this.renderWithTopBorder(new n({readOnly:this.state.readOnly,endDatePlan:this.props.endDatePlan,datesResolver:this.props.datesResolver,deepMergeStyles:this.getDeepMergeStyles(),ref:e=>this.props.onDatePlanEndRef(e)})),this.renderWithTopBorder(new l({readOnly:this.state.readOnly,datesResolver:this.props.datesResolver,deepMergeStyles:{...this.getDeepMergeStyles(),wrapper:{paddingHorizontal:11},readOnlyWrapper:{paddingHorizontal:11}},ref:e=>this.props.onDatePlanDurationRef(e)}))))}renderWithTopBorder(e){return View({},View({style:{height:.5,backgroundColor:"#e6e6e6"}}),e)}}a.exports={DatePlan:i}}));
//# sourceMappingURL=extension.map.js