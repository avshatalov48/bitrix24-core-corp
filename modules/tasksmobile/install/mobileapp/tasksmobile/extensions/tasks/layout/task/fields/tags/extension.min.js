jn.define("tasks/layout/task/fields/tags",((t,e,s)=>{const{Loc:a}=t("loc");const{TagField:i}=t("layout/ui/fields/tag");class r extends LayoutComponent{constructor(t){super(t);this.state={readOnly:t.readOnly,tags:t.tags||[]}}componentWillReceiveProps(t){this.state={readOnly:t.readOnly,tags:t.tags||[]}}updateState(t){this.setState({readOnly:t.readOnly,tags:t.tags||[]})}render(){return i({readOnly:this.state.readOnly,showEditIcon:true,title:a.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_TAGS"),hasHiddenEmptyView:true,value:this.state.tags,multiple:true,config:{deepMergeStyles:this.props.deepMergeStyles,selectorType:EntitySelectorFactory.Type.TASK_TAG,enableCreation:true,closeAfterCreation:false,entityList:this.state.tags.map((t=>({id:t,title:t}))),provider:{context:"TASKS_TAG",options:{taskId:this.props.taskId}},castType:"string",parentWidget:this.props.parentWidget,reloadEntityListFromProps:true},testId:"tags",onChange:t=>{const e=t.filter((t=>!this.state.tags.includes(t))).concat(this.state.tags.filter((e=>!t.includes(e))));if(e.length){this.setState({tags:t});this.props.onChange(t)}}})}}s.exports={Tags:r}}));
//# sourceMappingURL=extension.map.js