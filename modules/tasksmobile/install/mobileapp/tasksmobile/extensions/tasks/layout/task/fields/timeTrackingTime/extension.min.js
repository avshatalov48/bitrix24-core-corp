jn.define("tasks/layout/task/fields/timeTrackingTime",((e,t,s)=>{const{Loc:i}=e("loc");const{Type:n}=e("type");const{CombinedField:r}=e("layout/ui/fields/combined");const{NumberField:o,NumberPrecision:a}=e("layout/ui/fields/number");class d extends LayoutComponent{constructor(e){super(e);const t=Math.floor(e.timeEstimate/3600);const s=Math.floor((e.timeEstimate-t*3600)/60);this.state={hours:t,minutes:s}}componentWillReceiveProps(e){const t=Math.floor(e.timeEstimate/3600);const s=Math.floor((e.timeEstimate-t*3600)/60);this.state={hours:t,minutes:s}}render(){return r({value:{hours:this.state.hours||undefined,minutes:this.state.minutes||undefined},config:{deepMergeStyles:{primaryFieldWrapper:this.props.deepMergeStyles.wrapper,secondaryFieldWrapper:this.props.deepMergeStyles.wrapper,secondaryFieldContainer:{flex:1,width:undefined}},primaryField:{id:"hours",renderField:o,readOnly:this.props.readOnly,title:i.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_TIME_TRACKING_TIME_HOURS"),placeholder:"0",config:{type:a.INTEGER,selectionOnFocus:false}},secondaryField:{id:"minutes",renderField:o,readOnly:this.props.readOnly,title:i.getMessage("TASKSMOBILE_LAYOUT_TASK_FIELDS_TIME_TRACKING_TIME_MINUTES"),placeholder:"0",config:{type:a.INTEGER,selectionOnFocus:false}}},testId:"timeTrackingTime",onChange:({hours:e,minutes:t})=>{e=!n.isUndefined(e)?Number(e):0;t=!n.isUndefined(t)?Number(t):0;const s={};if(e!==this.state.hours){s.hours=e}if(t!==this.state.minutes){s.minutes=t}this.setState(s);this.props.onChange(this.state.hours*3600+this.state.minutes*60)}})}}s.exports={TimeTrackingTime:d}}));
//# sourceMappingURL=extension.map.js