/**
 * @module tasks/statemanager/redux/slices/flows/src/tool
 */
jn.define('tasks/statemanager/redux/slices/flows/src/tool', (require, exports, module) => {
	const prepareFlow = ({
		id,
		ownerId,
		creatorId,
		groupId,
		templateId,
		efficiency,
		active,
		demo,
		enableFlowUrl,
		plannedCompletionTime,
		plannedCompletionTimeText,
		averagePendingTime,
		averageAtWorkTime,
		averageCompletedTime,
		name,
		distributionType,
		taskCreators,
		taskAssignees,
		pending,
		atWork,
		completed,
		myTasksTotal,
		myTasksCounter,
		activity,
		description,
		responsibleQueue,
		manualDistributorId,
		responsibleCanChangeDeadline,
		matchWorkTime,
		notifyAtHalfTime,
		notifyOnQueueOverflow,
		notifyOnTasksInProgressOverflow,
		notifyWhenEfficiencyDecreases,
	}) => ({
		id: Number(id),
		ownerId,
		creatorId,
		groupId,
		templateId,
		efficiency,
		efficiencySuccess: Number(efficiency) >= 70,
		active,
		demo,
		enableFlowUrl,
		plannedCompletionTime,
		plannedCompletionTimeText,
		averagePendingTime,
		averageAtWorkTime,
		averageCompletedTime,
		name,
		distributionType,
		taskCreators,
		taskAssignees,
		pending,
		atWork,
		completed,
		myTasksTotal,
		myTasksCounter,
		activity,
		description,
		responsibleQueue,
		manualDistributorId,
		responsibleCanChangeDeadline,
		matchWorkTime,
		notifyAtHalfTime,
		notifyOnQueueOverflow,
		notifyOnTasksInProgressOverflow,
		notifyWhenEfficiencyDecreases,
	});

	module.exports = {
		prepareFlow,
	};
});
