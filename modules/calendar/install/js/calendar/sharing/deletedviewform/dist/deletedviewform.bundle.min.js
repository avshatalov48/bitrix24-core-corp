this.BX=this.BX||{};this.BX.Calendar=this.BX.Calendar||{};(function(e,t,a){"use strict";let n=e=>e,r;class i{constructor(e){this.entryId=e}initInSlider(e,a){this.createContent(e).then((e=>{if(t.Type.isFunction(a)){a(e)}}))}createContent(e){return new Promise((i=>{BX.ajax.runAction("calendar.api.sharingajax.getDeletedSharedEvent",{data:{entryId:parseInt(this.entryId)}}).then((s=>{const d=s.data.entry;const l=s.data.link;const c=s.data.userTimezone;const o=new a.Event({isHiddenOnStart:false,owner:{name:d.HOST_NAME,lastName:"",id:l.externalUserId},event:{timestampFromUTC:d.timestampFromUTC,timestampToUTC:d.timestampToUTC,canceledTimestamp:l.canceledTimestamp,externalUserName:d.HOST_NAME},timezone:c,state:"declined",isView:true,inDeletedSlider:true});const m=t.Tag.render(r||(r=n`
					<div class="calendar-shared-event-deleted-view-slider-root">
						<div class="calendar-pub__block calendar-pub__state">
							${0}
						</div>
					</div>
				`),o.render());e.sliderContent=m;i(m)}))}))}}e.DeletedViewForm=i})(this.BX.Calendar.Sharing=this.BX.Calendar.Sharing||{},BX,BX.Calendar.Sharing);
//# sourceMappingURL=deletedviewform.bundle.map.js