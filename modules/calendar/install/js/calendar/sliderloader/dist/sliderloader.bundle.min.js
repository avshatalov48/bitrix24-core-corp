this.BX=this.BX||{};(function(e,t,i){"use strict";class n{constructor(e,i={}){this.extensionName=t.Type.isString(e)&&(e==="NEW"||e.substr(0,4)==="EDIT")||!parseInt(e)?"EventEditForm":"EventViewForm";this.sliderId=i.sliderId||"calendar:slider-"+Math.random();e=t.Type.isString(e)&&e.substr(0,4)==="EDIT"?parseInt(e.substr(4)):parseInt(e);this.extensionParams={entryId:e,entry:i.entry||null,type:i.type||null,ownerId:parseInt(i.ownerId)||null,userId:parseInt(i.userId)||null};if(t.Type.isArray(i.participantsEntityList)){this.extensionParams.participantsEntityList=i.participantsEntityList}if(t.Type.isArray(i.participantsSelectorEntityList)){this.extensionParams.participantsSelectorEntityList=i.participantsSelectorEntityList}if(i.formDataValue){this.extensionParams.formDataValue=i.formDataValue}if(i.calendarContext){this.extensionParams.calendarContext=i.calendarContext}if(i.isLocationCalendar){this.extensionParams.isLocationCalendar=i.isLocationCalendar}if(i.roomsManager){this.extensionParams.roomsManager=i.roomsManager}if(i.locationAccess){this.extensionParams.locationAccess=i.locationAccess}if(i.locationCapacity){this.extensionParams.locationCapacity=i.locationCapacity}if(i.dayOfWeekMonthFormat){this.extensionParams.dayOfWeekMonthFormat=i.dayOfWeekMonthFormat}if(t.Type.isDate(i.entryDateFrom)){this.extensionParams.entryDateFrom=i.entryDateFrom}if(i.timezoneOffset){this.extensionParams.timezoneOffset=i.timezoneOffset}if(t.Type.isString(i.entryName)){this.extensionParams.entryName=i.entryName}if(t.Type.isString(i.entryDescription)){this.extensionParams.entryDescription=i.entryDescription}if(t.Type.isString(i.link)){const e=new t.Uri(i.link);const n=e.getQueryParam("IS_SHARING");this.isSharing=n==="1"}if(t.Type.isBoolean(i.isSharing)&&i.isSharing===true){this.isSharing=true}}show(){if(this.isSharing){BX.SidePanel.Instance.open(this.sliderId,{contentCallback:e=>new Promise((t=>{new i.DeletedViewForm(this.extensionParams.entryId).initInSlider(e,t)})),width:600})}else{BX.SidePanel.Instance.open(this.sliderId,{contentCallback:this.loadExtension.bind(this),label:{text:t.Loc.getMessage("CALENDAR_EVENT"),bgColor:"#55D0E0"},type:"calendar:slider"})}}loadExtension(e){return new Promise((i=>{const n="calendar."+this.extensionName.toLowerCase();t.Runtime.loadExtension(n).then((t=>{if(t&&t[this.extensionName]){const n=new t[this.extensionName](this.extensionParams);if(typeof n.initInSlider){n.initInSlider(e,i)}}else{console.error(`Extension "calendar.${n}" not found`)}}))}))}}e.SliderLoader=n})(this.BX.Calendar=this.BX.Calendar||{},BX,BX.Calendar.Sharing);
//# sourceMappingURL=sliderloader.bundle.map.js