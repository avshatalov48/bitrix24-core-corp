jn.define("crm/state-storage/model/category-counters",((t,e,a)=>{const{merge:s,mergeImmutable:g,isEqual:n}=t("utils/object");const{CategoryAjax:i}=t("crm/ajax");const o={success:"success",failure:"failure",pending:"pending"};const d={namespaced:true,state(){return c()},getters:{getStages:t=>t.stages,getStage:t=>e=>t.stages.find((t=>t.id===e))||null,getLoading:t=>t.loading},actions:{init:(t,e)=>{t.commit("setLoading",{loading:o.pending});i.fetch("getCounters",e).then((e=>t.commit("init",{stages:e.data.stages,loading:o.success})),(()=>t.commit("setLoading",{loading:o.failure})))},updateStage:(t,{stageId:e,data:a})=>{const s=t.getters.getStage(e);const i=g(s,a);if(s&&!n(s,i)){t.commit("updateStage",{stageId:e,data:a})}},clear:t=>t.commit("clear")},mutations:{init:(t,e)=>t.stages=e.stages,updateStage:(t,{stageId:e,data:a})=>{const g=t.stages.find((t=>t.id===e));if(g){s(g,a)}},setLoading:(t,{loading:e})=>t.loading=e,clear:t=>t=c()}};const c=()=>({stages:[],loading:null});a.exports={categoryCountersModel:d}}));
//# sourceMappingURL=category-counters.map.js