jn.define("crm/timeline/controllers/openline",((e,t,n)=>{const{TimelineBaseController:o}=e("crm/controllers/base");const{CommunicationEvents:i}=e("communication/events");const{get:s}=e("utils/object");const{Loc:r}=e("loc");const c={OPEN_CHAT:"Openline:OpenChat"};class a extends o{static getSupportedActions(){return Object.values(c)}getTitle(){return s(this.item.model,["props","layout","body","blocks","chatTitle","properties","contentBlock","properties","text"],"")}prepareOpenLineActionParams({dialogId:e}){return{type:"im",props:{event:"openline",params:{userCode:e,titleParams:{name:this.getTitle(),description:r.getMessage("CRM_TIMELINE_OPEN_LINE_NAME")}}}}}onItemAction({action:e,actionParams:t={}}){switch(e){case c.OPEN_CHAT:const e=this.prepareOpenLineActionParams(t);this.pinInTopToolbar(e);setTimeout((()=>{this.openChat(e)}),400);default:return}}openChat(e){if(!e){return null}i.execute(e)}}n.exports={TimelineOpenlineController:a}}));
//# sourceMappingURL=openline.map.js