jn.define("crm/timeline/services/activity-viewer",((t,e,i)=>{const{Alert:n}=t("alert");const{Loc:s}=t("loc");const{get:a}=t("utils/object");const c={UNDEFINED:0,MEETING:1,CALL:2,TASK:3,EMAIL:4,ACTIVITY:5,PROVIDER:6};class o{constructor({activityId:t,entity:e}){this.activityId=t;this.entity=e}open(){this.loadActivity().then((t=>this.handleActivity(t))).catch((t=>this.handleError(t)))}loadActivity(){return new Promise(((t,e)=>{const i={activityId:this.activityId,entityId:this.entity.id,entityTypeId:this.entity.typeId,categoryId:this.entity.categoryId};BX.ajax.runAction("crmmobile.Timeline.loadActivity",{json:i}).then((e=>t(e.data))).catch((t=>e(t)))}))}handleActivity(t){const{typeId:e}=t;switch(e){case c.TASK:this.openTask(t);break;default:this.openDesktop(t);break}}openTask(t){const e=t.associatedEntityId;const i=a(t,"activity.SUBJECT","");if(typeof Task==="undefined"||e<=0){this.openDesktop(t);return}const n=new Task({id:env.userId});n.updateData({id:e,title:i});n.canSendMyselfOnOpen=false;n.open()}openDesktop(t){qrauth.open({title:s.getMessage("CRM_TIMELINE_DESKTOP_VERSION"),redirectUrl:this.entity.detailPageUrl})}handleError(t){console.warn("Timeline: activity viewer: cannot load activity",t);n.alert(s.getMessage("M_CRM_TIMELINE_COMMON_ERROR_TITLE"),s.getMessage("M_CRM_TIMELINE_COMMON_ERROR_DESCRIPTION"),(()=>{}),s.getMessage("M_CRM_TIMELINE_COMMON_ERROR_OK_BUTTON"))}}i.exports={ActivityViewer:o}}));
//# sourceMappingURL=extension.map.js