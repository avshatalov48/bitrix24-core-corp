jn.define("crm/timeline/item/model",((e,t,s)=>{const{SupportedTypes:r}=e("crm/timeline/item/factory");const{Type:o}=e("crm/type");const{Moment:i}=e("utils/date");const{get:n}=e("utils/object");const{isValidDateObject:p}=e("utils/type");const l={DANGER:"danger",SUCCESS:"success"};class a{constructor(e={}){this.props=e;this.isPinned=BX.prop.getBoolean(e,"isPinned",false);this.isScheduled=BX.prop.getBoolean(e,"isScheduled",false);this.isEditable=BX.prop.getBoolean(e,"isEditable",false);this.needShowMarketBanner=BX.prop.getBoolean(e,"showMarketBanner",false)}get deadline(){if(this.props.hasOwnProperty("timestamp")){return this.props.timestamp?i.createFromTimestamp(this.props.timestamp):null}if(this.props.hasOwnProperty("CREATED_SERVER")){const e=this.props.CREATED_SERVER.replace(" ","T");const t=new Date(e);return p(t)?new i(t):null}return null}get id(){if(this.isCompatible){if(this.isScheduled){const e=BX.prop.getInteger(this.props,"ASSOCIATED_ENTITY_TYPE_ID",0);const t=BX.prop.getInteger(this.props,"ASSOCIATED_ENTITY_ID",0);return`${o.resolveNameById(e)}_${t}`}else{return BX.prop.getInteger(this.props,"ID",0)}}return this.props.id}get type(){return this.props.type}get sort(){return this.props.sort||[]}get layout(){return this.props.layout||{}}get isCompatible(){return!Object.keys(r).includes(this.type)}get hasLowPriority(){return BX.prop.getBoolean(this.layout,"isLogMessage",false)}get needsAttention(){const e=n(this.layout,"icon.counterType",null);return e===l.DANGER}get isIncomingChannel(){const e=n(this.layout,"icon.counterType",null);return e===l.SUCCESS}get isReadonly(){return!this.isEditable}}s.exports={TimelineItemModel:a}}));
//# sourceMappingURL=model.map.js