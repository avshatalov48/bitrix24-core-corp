jn.define("crm/timeline/controllers/call",((e,t,n)=>{const{TimelineBaseController:l}=e("crm/controllers/base");const{TimelineScheduler:o}=e("crm/timeline/scheduler");const{Type:r}=e("crm/type");const{Type:i}=e("type");const a={MAKE_CALL:"Call:MakeCall",SCHEDULE_CALL:"Call:Schedule",OPEN_TOOLBAR:"Call::OpenToolBar"};class s extends l{static getSupportedActions(){return Object.values(a)}onItemAction({action:e,actionParams:t={}}){switch(e){case a.MAKE_CALL:return this.makeCall(t);case a.SCHEDULE_CALL:return this.scheduleCall(t);case a.OPEN_TOOLBAR:return this.openToolBar(t);default:return}}makeCall(e){if(!i.isStringFilled(e.phone)){return}const t={ENTITY_TYPE_NAME:r.resolveNameById(e.entityTypeId),ENTITY_ID:e.entityId,AUTO_FOLD:true};if(e.ownerTypeId!==e.entityTypeId||e.ownerId!==e.entityId){t.BINDINGS={OWNER_TYPE_NAME:r.resolveNameById(e.ownerTypeId),OWNER_ID:e.ownerId}}if(e.activityId>0){t.SRC_ACTIVITY_ID=e.activityId}BX.postComponentEvent("onPhoneTo",[{number:e.phone,params:t}],"calls")}scheduleCall(e){const t=new o({entity:this.entity});t.openActivityEditor(e)}openToolBar(e){this.pinInTopToolbar({...e})}}n.exports={TimelineCallController:s}}));
//# sourceMappingURL=call.map.js