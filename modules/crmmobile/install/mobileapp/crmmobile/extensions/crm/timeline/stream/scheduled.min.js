jn.define("crm/timeline/stream/scheduled",((e,t,i)=>{const{Loc:n}=e("loc");const{TimelineStreamBase:s}=e("crm/timeline/stream/base");const{TimelineItemModel:r}=e("crm/timeline/item");const{TimelineItemBackground:m}=e("crm/timeline/item/ui/styles");class l extends s{getId(){return"scheduled"}getItemSortDirection(){return"asc"}makeItemModel(e){const t=super.makeItemModel(e);t.isScheduled=true;return t}getAttentionableItems(){return this.items.filter((e=>e.needsAttention||e.isIncomingChannel))}getNeedsAttentionItems(){return this.items.filter((e=>e.needsAttention))}getIncomingChannelItems(){return this.items.filter((e=>e.isIncomingChannel))}exportToListView(){if(!this.items.length&&!this.isEditable){return[]}const e=[];e.push({type:"Divider",key:"Divider_scheduled",props:{color:"#9DCF00",text:n.getMessage("CRM_TIMELINE_SCHEDULED_TITLE2")}});if(!this.items.length){e.push({type:"CreateReminder",key:"CreateReminder",props:{}})}return[...e,...this.exportCollapsibleGroup(this.items)]}}i.exports={TimelineStreamScheduled:l}}));
//# sourceMappingURL=scheduled.map.js