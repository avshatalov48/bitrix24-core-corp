jn.define("crm/entity-detail/component/ajax-error-handler",((e,s,t)=>{const{Alert:n}=e("alert");const{NotifyManager:o}=e("notify-manager");const{getEntityMessage:a}=e("crm/loc");const{RequiredFields:r}=e("crm/required-fields");const _=(e,s,t)=>{const{error:_,errors:c=[]}=s;if(!_&&!c.length){return Promise.resolve(s)}console.warn("Detail card: handle ajax errors",s);const i=e=>e.some((({code:e})=>e==="ACCESS_DENIED"));const E=e=>e.some((({code:e})=>e==="NOT_FOUND"));const l=e=>e.some((({customData:e,message:s})=>e&&e.public&&s));const m=(s=null,t=null)=>{const o=()=>{e.emitEntityUpdate();e.close()};n.alert(s,t,o,BX.message("M_CRM_ENTITY_ALERT_CONFIRM"))};const T=()=>{const{entityTypeId:s}=e.getComponentParams();const t=a("M_CRM_ENTITY_ACCESS_DENIED_TITLE",s);const n=BX.message("M_CRM_ENTITY_ACCESS_DENIED_TEXT");m(t,n)};const R=()=>{const{entityTypeId:s}=e.getComponentParams();m(null,a("M_CRM_ENTITY_NOT_FOUND_TITLE",s))};const N=(e,s)=>{const t=e.find((({customData:e,message:s})=>e&&e.public&&s));n.alert(BX.message("M_CRM_ENTITY_ERROR_ON_SAVE"),t.message,(()=>s([])),BX.message("M_CRM_ENTITY_ALERT_CONFIRM"))};const d=e=>{n.alert(BX.message("M_CRM_ENTITY_ERROR_ON_SAVE_INTERNAL"),BX.message("M_CRM_ENTITY_ERROR_ON_SAVE_INTERNAL_TEXT"),(()=>e([])),BX.message("M_CRM_ENTITY_ALERT_CONFIRM"))};return new Promise(((s,n)=>{if(i(c)){T();e.customEventEmitter.emit("DetailCard::onAccessDenied",[e.getComponentParams()]);n([])}else if(E(c)){R();n([])}else if(r.hasRequiredFields(c)){o.hideLoadingIndicatorWithoutFallback();r.show({action:"save",errors:c,params:e.getComponentParams(),onSave:({value:a})=>{o.showLoadingIndicator();e.runSave(t,a,false).then(s).catch(n)},onCancel:()=>setTimeout((()=>n([])),50)})}else if(l(c)){N(c,n)}else{d(n)}}))};t.exports={ajaxErrorHandler:_}}));
//# sourceMappingURL=ajax-error-handler.map.js