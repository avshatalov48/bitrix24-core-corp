jn.define("crm/entity-detail/toolbar/activity",((t,e,i)=>{const{ActivityFactory:o}=t("crm/entity-detail/toolbar/activity/factory");const{ActivityToolbarModel:a}=t("crm/entity-detail/toolbar/activity/model");const{NotifyManager:s}=t("notify-manager");const{EventEmitter:n}=t("event-emitter");class d extends LayoutComponent{constructor(t){super(t);const{detailCard:e}=t;this.state={loaded:false};this.topPaddingRef=e.topPaddingRef;this.storage=Application.sharedStorage();this.detailCardUid=e.uid;this.customEventEmitter=n.createWithUid(this.detailCardUid)}componentDidMount(){this.customEventEmitter.on("Crm.Timeline::onTimelineRefresh",(()=>{this.hide()}))}show(t,e){return new Promise((i=>{this.setState({loaded:true,model:new a(t),actionParams:e},(()=>{this.topPaddingRef.show();this.activityRef.show();i()}))}))}hide(){if(this.topPaddingRef&&this.activityRef){this.topPaddingRef.hide();this.activityRef.hide()}}loadScheduled(){const{loaded:t}=this.state;const{entityTypeId:e,entityId:i}=this.props;if(t){return Promise.resolve()}return new Promise(((t,o)=>{BX.ajax.runAction("crmmobile.Timeline.loadScheduled",{json:{entityTypeId:e,entityId:i}}).then((({data:e})=>{if(!e){o();return}this.setState({loaded:true,model:new a(e)},t)})).catch((({errors:t})=>{s.showErrors(t);o()}))}))}render(){const{loaded:t,model:e,actionParams:i}=this.state;const{style:a,animation:s}=this.props;return View({style:{flex:1},clickable:false},t&&o.make(e.getType(),{actionParams:i,model:e,style:a,animation:s,onHide:this.hide.bind(this),ref:t=>this.activityRef=t}))}}i.exports={ActivityToolbar:d}}));
//# sourceMappingURL=extension.map.js