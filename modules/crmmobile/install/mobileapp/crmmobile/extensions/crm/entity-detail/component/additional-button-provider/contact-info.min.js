jn.define("crm/entity-detail/component/communication-button/contact-info",((t,e,n)=>{const{TypeId:o,TypeName:c,Type:s}=t("crm/type");const{SelectorProcessing:r}=t("crm/selector/utils/processing");const{EmailType:i}=t("layout/ui/fields/email");const{ImType:a}=t("layout/ui/fields/im");const{PhoneType:p}=t("layout/ui/fields/phone");const{get:l}=t("utils/object");const u=[c.Contact,c.Company];const y=[p,a,i];const m="OPENLINE";const T=({entityModel:t,entityTypeId:e,entityId:n})=>{const c=s.resolveNameById(e);const r=e===o.Deal;const i=e===o.Company?"TITLE":"FULL_NAME";return r?I(t):{[c]:[{id:n,type:c,title:t[i],...E(t,c)}]}};const I=t=>u.reduce(((e,n)=>{const o=l(t,["CLIENT_INFO",`${n}_DATA`],[]);return{...e,[n]:o.map(r.prepareContact)}}),{});const E=t=>{const{ID:e,ENTITY_TYPE_ID:n}=t;const o=`${n}_${e}`;return y.reduce(((e,n)=>{const c=l(t,["MULTIFIELD_DATA",n.toUpperCase(),o],[]);const s=c.map((t=>{if(n===a&&t.VALUE_TYPE!==m){return""}return{value:t.VALUE,complexName:t.COMPLEX_NAME}})).filter(Boolean);return!s.length?e:{...e,[n]:s}}),{})};n.exports={preparationContactInfo:T}}));
//# sourceMappingURL=contact-info.map.js