jn.define("crm/entity-detail/opener",((t,e,i)=>{const{Alert:s}=t("alert");const{NotifyManager:n}=t("notify-manager");const{EntitySvg:a}=t("crm/assets/entity");const{Type:r,TypeId:l}=t("crm/type");const{Type:o}=t("type");const{mergeImmutable:c}=t("utils/object");const T=60*60*24;let u;let d=null;let E=null;const y=[l.Contact,l.Company,l.Deal];class g{static supportsEntityType(t){return y.includes(t)}static open(t,e={},i=null,s=false){e=c(this.getModalWidgetParams(),e);const{entityTypeId:n}=t;this.checkAvailability(n).then((()=>{e.titleParams=this.prepareTitleParams(t,e.titleParams);ComponentHelper.openLayout({name:"crm:crm.entity.details",componentParams:{payload:t},widgetParams:e,canOpenInDefault:s},i)})).catch((t=>{console.error(t);this.showAlert()}))}static getModalWidgetParams(){return{modal:true,leftButtons:[{type:"cross",isCloseButton:true}]}}static init(){if(this.cacheExpired()){setTimeout((()=>this.loadEntities()),100)}}static getStorage(){if(!u){u=Application.storageById(`crm/entity-detail/opener/${env.languageId}`)}return u}static updateStorage(t){this.setEntities(t);this.setTtlValue(this.getCurrentTimeInSeconds())}static getEntities(){if(d===null){d=this.getStorage().getObject("entities",[])}return d}static setEntities(t){d=t;return this.getStorage().setObject("entities",t)}static getTtlValue(){if(E===null){E=this.getStorage().getNumber("ttl",0)}return E}static setTtlValue(t){E=t;return this.getStorage().setNumber("ttl",t)}static cacheExpired(t=T){const e=this.getTtlValue();const i=this.getCurrentTimeInSeconds();return i>e+t}static getCurrentTimeInSeconds(){return Math.floor(Date.now()/1e3)}static prepareTitleParams({entityId:t,entityTypeId:e},i={}){const s=this.findEntityType(e);if(!s){return i}const n={useLargeTitleMode:false,detailTextColor:"#a8adb4"};if(t){if(!o.isStringFilled(i.text)){i.text=`${s.title} #${t}`}n.detailText=s.title}else{n.text=this.getCreationEntityTitle(s.entityTypeName)}const r=s["entityTypeName"].toLowerCase()+"Inverted";if(a[r]){n.svg={content:a[r]()}}return c(n,i)}static getCreationEntityTitle(t){let e;if(t){t=t.toUpperCase();e=BX.message(`MCRM_ENTITY_DETAIL_OPENER_CREATE_TEXT_${t}`)}if(!e){e=BX.message("MCRM_ENTITY_DETAIL_OPENER_CREATE_TEXT")}return e}static checkAvailability(t){if(!t||!r.existsById(t)){return Promise.reject()}let e=false;let i=Promise.resolve();if(this.cacheExpired()){e=true;i=i.then((()=>this.loadEntities(true)))}return i.then((()=>new Promise(((i,s)=>{let n=this.findEntityType(t);if(n){i()}else if(this.cacheExpired(5)){e=true;this.loadEntities(true).then((()=>{n=this.findEntityType(t);if(n){i()}else{s()}}))}else{s()}})))).finally((()=>{if(e){n.hideLoadingIndicatorWithoutFallback()}}))}static findEntityType(t){return this.getEntities().find((e=>e.entityTypeId===t))}static loadEntities(t=false){if(t){n.showLoadingIndicator()}return new Promise(((t,e)=>{BX.ajax.runAction("crmmobile.EntityDetails.getAvailableEntityTypes",{json:{}}).then((({data:e})=>{this.updateStorage(e);t()})).catch(e)}))}static showAlert(){s.alert(BX.message("MCRM_ENTITY_DETAIL_OPENER_ALERT_TITLE"),BX.message("MCRM_ENTITY_DETAIL_OPENER_ALERT_TEXT"))}}g.init();i.exports={EntityDetailOpener:g}}));
//# sourceMappingURL=extension.map.js