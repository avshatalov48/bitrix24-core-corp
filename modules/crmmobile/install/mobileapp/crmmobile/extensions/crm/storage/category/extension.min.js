jn.define("crm/storage/category",((t,e,r)=>{const{merge:a,mergeImmutable:o}=t("utils/object");const{Type:s}=t("crm/type");const{CategoryAjax:i}=t("crm/ajax");const{BaseStorage:g}=t("crm/storage/base");const n="categories";const h="get";const c="getList";class y extends g{getAjax(){return i}getEventNamespace(){return"Crm.CategoryStorage"}getStorageKey(){return"category"}getPathToCategoryList(t){return this.getPathTo(c,t)}getPathToCategoryInCategoryList(t){return this.getPathTo(c,t,n)}getPathToCategory(t,e){return this.getPathTo(h,t,e)}getCategoryList(t){if(!s.existsById(t)){throw new Error(`Wrong entity type id {${t}}.`)}const e=this.getPathToCategoryList(t);if(this.cacheExpired(e)){setTimeout((()=>this.fetch(e,c,{entityTypeId:t})),50)}return this.getDataValue(e)}getCategory(t,e){if(!s.existsById(t)){throw new Error(`Wrong entity type id {${t}}.`)}e=parseInt(e);if(!Number.isInteger(e)){throw new Error(`Wrong category id {${e}}.`)}const r=this.getPathToCategory(t,e);if(this.cacheExpired(r)){this.fetch(r,h,{entityTypeId:t,categoryId:e})}return this.getDataValue(r)}setCategory(t,e){const r=this.getPathToCategory(t,e.id);this.updateDataInStorage(r,e)}createCategory(t,e){return new Promise(((r,a)=>{this.getAjax().create(t,e).then((e=>{if(e.errors&&e.errors.length){a(e);return}const o=e.data;if(Number.isInteger(o)){const e=this.getPathToCategoryList(t);this.clearTtlValue(e);r(o)}}))}))}updateCategory(t,e,r){return new Promise(((s,i)=>{this.getAjax().update(t,e,r).then((g=>{if(g.errors&&g.errors.length){i(g);return}const n=this.getPathToCategoryList(t);this.clearTtlValue(n);const h=this.getPathToCategoryInCategoryList(t);const c=this.getDataValue(h,[]);const y=c.find((t=>t.id===e));a(y,r);this.updateDataInStorage(h,c,true);const u=this.getPathToCategory(t,e);this.clearTtlValue(u);const l=this.getDataValue(u,{});this.updateDataInStorage(u,o(l,r));s()}))}))}deleteCategory(t,e){return new Promise(((r,a)=>{this.getAjax().delete(t,e).then((o=>{if(o.errors&&o.errors.length){a(o);return}const s=this.getPathToCategory(t,e);this.clearTtlValue(s);const i=this.getPathToCategoryList(t);this.clearTtlValue(i);r()}))}))}findCategoryInCategoryList(t,e){const r=this.getPathToCategoryList(t);const a=this.getDataValue(r);if(a){const t=a[n];if(Array.isArray(t)){const r=t.find((t=>t.id===e));if(r){return r}}}return null}findMostRecentCategory(t,e){const r=this.getPathToCategory(t,e);const a=this.getDataValue(r);const o=this.findCategoryInCategoryList(t,e);if(a&&o){const e=this.getTtlValue(r);const s=this.getPathToCategoryList(t);const i=this.getTtlValue(s);return e>i?a:o}else if(a){return a}else{return o}}}r.exports={CategoryStorage:new y}}));
//# sourceMappingURL=extension.map.js