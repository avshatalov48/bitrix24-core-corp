jn.define("crm/selector/entity/contact",((t,e,r)=>{const{get:s}=t("utils/object");const{SelectorProcessing:a}=t("crm/selector/utils/processing");class n extends BaseSelectorEntity{static getEntityId(){return"contact"}static getContext(){return"CRM_ENTITIES"}static getStartTypingText(){return BX.message("SELECTOR_COMPONENT_START_TYPING_TO_SEARCH_CONTACT")}static getSearchPlaceholderWithCreation(){return BX.message("SELECTOR_COMPONENT_SEARCH_PLACEHOLDER_CONTACT")}static getSearchPlaceholderWithoutCreation(){return BX.message("SELECTOR_COMPONENT_SEARCH_PLACEHOLDER_CONTACT")}static isCreationEnabled(){return true}static getCreateText(){return BX.message("SELECTOR_COMPONENT_CREATE_CONTACT")}static getCreatingText(){return BX.message("SELECTOR_COMPONENT_CREATING_CONTACT")}static getCreateEntityHandler(t){return()=>new Promise((t=>{t({title:BX.message("SELECTOR_COMPONENT_CREATE_TEXT"),entityId:this.getEntityId()})}))}static getTitle(){return BX.message("SELECTOR_COMPONENT_TITLE_CONTACT")}static prepareItemForDrawing(t){const e=s(t,["customData","entityInfo"],null);if(!e){return t}const r=a.prepareContact(e);const{subtitle:n}=t;r.subtitle=n;return{subtitle:n,params:r}}static useRawResult(){return true}}r.exports={CrmContactSelector:n}}));
//# sourceMappingURL=extension.map.js