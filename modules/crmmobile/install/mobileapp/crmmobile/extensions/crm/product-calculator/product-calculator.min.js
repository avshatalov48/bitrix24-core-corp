jn.define("crm/product-calculator/product-calculator",((t,e,s)=>{const{TaxForPriceStrategy:r}=t("crm/product-calculator/tax-for-price-strategy");const{ProductRow:i}=t("crm/product-calculator/product-row");class c{constructor(t,e){this.fields={};this.settings={};this.strategy=null;this.setFields(t);this.setSettings(e);this.setCalculationStrategy(new r(this))}setField(t,e){this.fields[t]=e;return this}setCalculationStrategy(t){this.strategy=t;return this}setFields(t){for(const e in t){if(t.hasOwnProperty(e)){this.setField(e,t[e])}}return this}getFields(){return{...this.fields}}setSettings(t={}){this.settings={...t};return this}getSettings(){return{...this.settings}}getSetting(t,e){return this.settings.hasOwnProperty(t)?this.settings[t]:e}getPricePrecision(){return this.getSetting("pricePrecision",c.DEFAULT_PRECISION)}getCommonPrecision(){return this.getSetting("commonPrecision",c.DEFAULT_PRECISION)}getQuantityPrecision(){return this.getSetting("quantityPrecision",c.DEFAULT_PRECISION)}getProductRow(){return new i(this.getFields(),this)}recalculateAll(){const t=this.getProductRow();this.strategy.updatePrice(t);return t.getFields()}calculateBasePrice(t){return this.strategy.calculateBasePrice(t)}calculatePrice(t){return this.strategy.calculatePrice(t)}calculateQuantity(t){return this.strategy.calculateQuantity(t)}calculateDiscount(t){return this.strategy.calculateDiscount(t)}calculateDiscountType(t){return this.strategy.calculateDiscountType(t)}calculateRowDiscount(t){return this.strategy.calculateRowDiscount(t)}calculateTax(t){return this.strategy.calculateTax(t)}calculateTaxIncluded(t){return this.strategy.calculateTaxIncluded(t)}calculateRowSum(t){return this.strategy.calculateRowSum(t)}pipe(t){const e=t(this);this.setFields(e);return this}}c.DEFAULT_PRECISION=2;s.exports={ProductCalculator:c}}));
//# sourceMappingURL=product-calculator.map.js