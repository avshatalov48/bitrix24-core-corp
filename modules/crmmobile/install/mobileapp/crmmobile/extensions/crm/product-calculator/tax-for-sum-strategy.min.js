jn.define("crm/product-calculator/tax-for-sum-strategy",((t,e,c)=>{const{DiscountType:r}=t("crm/product-calculator/discount-type");const{ProductRow:i}=t("crm/product-calculator/product-row");const{TaxForPriceStrategy:a}=t("crm/product-calculator/tax-for-price-strategy");class o extends a{calculatePriceWithoutTax(t,e){return t}updateResultPrices(t){let e;if(t.isDiscountPercentage()){e=this.calculatePriceWithoutDiscount(t.getPriceNetto(),t.getDiscountRate(),r.PERCENTAGE)}else if(t.isDiscountMonetary()){e=this.calculatePriceWithoutDiscount(t.getPriceNetto(),t.getDiscountSum(),r.MONETARY)}else{e=t.getPriceExclusive()}t.setField("PRICE_EXCLUSIVE",e);if(t.isTaxIncluded()){t.setField("PRICE",e)}else{t.setField("PRICE",this.calculatePriceWithTax(e,t.getTaxRate()))}}}c.exports={TaxForSumStrategy:o}}));
//# sourceMappingURL=tax-for-sum-strategy.map.js