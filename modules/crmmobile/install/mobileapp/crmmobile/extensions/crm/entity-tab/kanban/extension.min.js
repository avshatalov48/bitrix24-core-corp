jn.define("crm/entity-tab/kanban",((t,e,n)=>{const{Loc:o}=t("loc");const{EntityTab:r}=t("crm/entity-tab");const{TypeSort:i}=t("crm/entity-tab/sort");const{ToolbarFactory:s}=t("crm/kanban/toolbar");const{CategorySelectActions:a}=t("crm/category-list/actions");const{CategoryListView:g}=t("crm/category-list-view");const{CategorySvg:l}=t("crm/assets/category");const{CategoryStorage:c}=t("crm/storage/category");const{CategoryCountersStoreManager:u}=t("crm/state-storage");const{Filter:h}=t("crm/entity-tab/filter");const{getSmartActivityMenuItem:y}=t("crm/entity-detail/component");const{get:d,isEqual:C}=t("utils/object");const m="CRM_KANBANUPDATED";const p="ITEMADDED";const I="ITEMUPDATED";const f=3;const S=5e3;const T=`${currentDomain}/bitrix/mobileapp/crmmobile/extensions/crm/entity-tab/kanban/icons/`;class b extends r{constructor(t){super(t);const e=this.getCurrentCategoryId();this.category=this.getCategoryFromCategoryStorage(e);this.isEmptyAvailableCategories=false;this.needReloadTab=!this.category;this.categoryChangeAttempts=0;this.categoryChangeTimeoutId=null;this.state.categoryId=e;this.state.isLoading=!this.category;this.onSelectedCategory=this.onSelectedCategoryHandler.bind(this);this.onNotViewable=this.onNotViewableHandler.bind(this);this.setCounterFilter=this.setCounterFilter.bind(this);this.initCategoryCounters=this.initCategoryCounters.bind(this);this.onBeforeReload=this.onBeforeReloadHandler.bind(this);this.toolbarFactory=new s}reload(t={}){const e=this.getViewComponent();if(!e){console.error("view component not found");return}if(e.setFilter){e.setFilter(this.filter)}const n=BX.prop.getBoolean(t,"skipFillSlides",false);const o=BX.prop.getArray(t,"menuButtons",null);const r=BX.prop.getBoolean(t,"skipUseCache",false);const i=BX.prop.getBoolean(t,"skipInitCounters",false);const s=BX.prop.getBoolean(t,"force",false);const a=BX.prop.getBoolean(t,"updateToolbarColumnId",true);e.reload(e.getCurrentSlideName(),s,{skipFillSlides:n,menuButtons:o,skipUseCache:r,skipInitCounters:i,updateToolbarColumnId:a})}initCategoryCounters(t={}){u.init(this.props.entityTypeId,this.getCurrentCategoryId(),t)}componentWillReceiveProps(t){super.componentWillReceiveProps(t);if(this.entityTypeName!==t.entityTypeName){this.entityTypeName=t.entityTypeName;this.state.categoryId=this.getCurrentCategoryId()}}componentDidMount(){super.componentDidMount();c.setEventId("crm.kanban").subscribeOnChange((()=>this.applyCategoryStorageChanges())).markReady();BX.addCustomEvent("Crm.CategoryList::onSelectedCategory",this.onSelectedCategory);if(!this.props.permissions.read){const t=this.getCurrentCategoryId();const e=this.getCategoryFromCategoryStorage(t);this.changeCategory(e,true)}}onSelectedCategoryHandler(t){if(this.state.categoryId!==t.id){this.changeCategory(t)}}componentWillUnmount(){super.componentWillUnmount();BX.removeCustomEvent("Crm.CategoryList::onSelectedCategory",this.onSelectedCategory);c.unsubscribe("crm.kanban")}applyCategoryStorageChanges(){const t=this.getCategoryFromCategoryStorage(this.state.categoryId);if(this.category===null){this.changeCategory(t)}else if(!C(this.category,t)){this.category=t}}getCategoryFromCategoryStorage(t=null){if(t===null){t=this.getCurrentCategoryId()}return c.getCategory(this.props.entityTypeId,t)}changeCategory(t,e=false){if(this.categoryChangeTimeoutId){clearTimeout(this.categoryChangeTimeoutId)}const n=t?t.id:null;const o=this.category?new Promise((t=>{this.setIsLoading().then(t)})):Promise.resolve();o.then((()=>this.trySetCurrentCategory(t))).then((t=>this.tryUpdateToNewCategory(t,n,e)))}trySetCurrentCategory(t){return new Promise((e=>{const n=this.getCurrentEntityType();const o=t?t.id:-1;if(n.needSaveCurrentCategoryId){const{entityTypeId:t}=this.props;BX.ajax.runAction("crmmobile.Category.set",{data:{entityTypeId:t,categoryId:o}}).then((n=>{if(o!==n.data.categoryId&&o>=0){const e=c.getPathToCategoryList(t);c.clearTtlValue(e)}e(n.data)})).catch((({errors:t})=>{console.error(t)}))}else{e({categoryId:o})}}))}tryUpdateToNewCategory(t,e,n){const{categoryId:o}=t;if(o===null){this.setState({isEmptyAvailableCategories:true,isLoading:false});return}const r={isLoading:false,searchButtonBackgroundColor:null};if(o===this.state.categoryId&&this.category){if(o!==e){this.showChangeToAvailableCategoryNotice(this.category.name)}this.setState(r,(()=>this.reload()));return}const i=this.getCategoryFromCategoryStorage(o);if(!i){this.state.categoryId=o;this.clearCurrentCategory();console.error(`Category ${o} not found in storage`);if(this.categoryChangeAttempts++<f){console.info(`Category change will be repeated after 5 seconds. Attempt: ${this.categoryChangeAttempts}`);this.categoryChangeTimeoutId=setTimeout((()=>{this.tryUpdateToNewCategory(t,e,n)}),S*this.categoryChangeAttempts)}return}this.categoryChangeAttempts=0;n=n||i&&i.id!==e;if(n){this.showChangeToAvailableCategoryNotice(i.name)}this.filter=new h;r.searchButtonBackgroundColor=null;r.categoryId=o;this.setState(r,(()=>this.initAfterCategoryChange(i,t)))}showChangeToAvailableCategoryNotice(t){const e=BX.message("M_CRM_ENTITY_TAB_FORBIDDEN_READ_SECTION_DESC2");Notify.showUniqueMessage(e.replace("#SECTION_NAME#",t),BX.message("M_CRM_ENTITY_TAB_FORBIDDEN_READ_SECTION2"),{time:5})}clearCurrentCategory(){this.category=null}initAfterCategoryChange(t,e){this.filter=new h;this.category=t;this.isEmpty=true;this.floatingButtonMenu=null;this.getCurrentStatefulList().initMenu();this.updateEntityTypeData(e,(()=>{this.needReloadTab=false;this.reload()}));if(this.needReloadTab){this.needReloadTab=false;this.reload()}}updateEntityTypeData(t,e=null){if(this.props.updateEntityTypeData){this.props.updateEntityTypeData(this.props.entityTypeId,t,e)}}render(){const{isLoading:t,isEmptyAvailableCategories:e}=this.state;let n;if(e){n=this.renderKanban({forbidden:true})}else if(t){n=new LoadingScreenComponent}else{n=this.renderKanban()}return View(this.getViewConfig(),n)}renderKanban(t={}){return new UI.Kanban({entityTypeName:this.entityTypeName,entityTypeId:this.props.entityTypeId,actions:this.props.actions,actionParams:this.prepareActionParams(),filterParams:this.getFilterParams(),layout:this.props.layout,layoutMenuActions:this.getMenuActions(),itemDetailOpenHandler:this.handleItemDetailOpen.bind(this),itemCounterLongClickHandler:this.getCounterLongClickHandler(),isShowFloatingButton:this.isShowFloatingButton(),floatingButtonClickHandler:this.handleFloatingButtonClick.bind(this),floatingButtonLongClickHandler:this.handleFloatingButtonLongClick.bind(this),onDetailCardUpdateHandler:this.onDetailCardUpdate,onDetailCardCreateHandler:this.onDetailCardCreate,onNotViewableHandler:this.onNotViewable,onPanListHandler:this.props.onPanList||null,initCountersHandler:this.initCategoryCounters,itemActions:this.getItemActions(),itemParams:this.props.itemParams,pull:this.getPullConfig(),layoutOptions:this.getLayoutOptions(),itemLayoutOptions:this.getItemLayoutOptions(),menuButtons:this.getMenuButtons(),cacheName:this.getKanbanCacheName(),getEmptyListComponent:this.getEmptyListComponent.bind(this),onBeforeReload:this.onBeforeReload,toolbarFactory:this.toolbarFactory,config:t,needInitMenu:this.props.needInitMenu,ref:t=>this.viewComponent=t,getMenuButtons:this.getMenuButtons.bind(this)})}onNotViewableHandler(){const t=this.getCategoryFromCategoryStorage();this.changeCategory(t)}getKanbanCacheName(){const t=this.getCategoryId()||-1;return`${this.props.cacheName}.${t}`}prepareActionParams(){const t=super.prepareActionParams();t.loadItems.extra=t.loadItems.extra||{};const e=this.getCategoryId();if(Number.isInteger(e)){t.loadItems.extra.filterParams=t.loadItems.extra.filterParams||{};t.loadItems.extra.filterParams.CATEGORY_ID=e}const n=this.getCurrentEntityType();const{presetId:o}=n.data;this.filter.prepareActionParams(t,o);return t}getFilterParams(){const t={};const e=this.getCategoryId();if(Number.isInteger(e)){t.CATEGORY_ID=e}return t}getMenuButtons(){const t=super.getMenuButtons();t.push({svg:{content:l.funnel()},type:"options",badgeCode:"kanban_categories_selector",callback:()=>this.showCategorySelector()});return t}showCategorySelector(){const t=this.getCategoryId();const e=this.getCurrentEntityType();if(t===null||!e){console.error("CategoryId or entityType is empty");return}this.openCategoryList(t,e)}openCategoryList(t,e){void g.open({entityTypeId:e.id,currentCategoryId:t,selectAction:a.SelectCurrentCategory,needSaveCurrentCategoryId:e.needSaveCurrentCategoryId})}getAdditionalParamsForItem(){const t=this.getViewComponent();return t?t.getAdditionalParamsForItem():{}}getPullCommand(t){const{entityTypeName:e}=this.props;const n=this.getCategoryId();return`${t}_${e}_${n}`}getCategoryId(){if(Number.isInteger(this.state.categoryId)){return this.state.categoryId}return this.getCurrentCategoryId()}getCurrentCategoryId(){const t=this.getCurrentEntityType();if(!this.hasCurrentCategoryIdInEntityType(t)){return null}return Number(t.data.currentCategoryId)}hasCurrentCategoryIdInEntityType(t){return t&&t.data&&Number.isInteger(t.data.currentCategoryId)}deleteItem(t){const e={eventId:this.pullManager.registerRandomEventId()};this.getViewComponent().deleteItem(t,e)}updateItemColumn(t,e){this.getViewComponent().updateItemColumn(t,e)}getCurrentStatefulList(){return this.getViewComponent().getCurrentStatefulList()}isNeedProcessPull(t,e){const{command:n,params:o}=t;if(this.pullManager.hasEvent(o.eventId)){return false}if(n!==this.getPullCommand(m)){return false}const r=this.getViewComponent();const i=(t,n)=>t.eventName!==p&&r.getCurrentSlideName()===e.slideName&&this.hasItemInCurrentColumn(t.item.id);const s=d(o,"item.data.columnId","");const a=this.isCurrentSlideName(o.item.data.columnId,e.slideName)||i(o,e.slideName);const g=r.getCurrentSlideName()===r.getSlideName();if(!a&&!g){return false}if(this.hasItemInCurrentColumn(o.item.id)){return true}if(o.eventName===I&&(r.getSlideName(s)===e.slideName||g)){return true}return o.eventName===p}isCurrentSlideName(t,e){const n=this.getViewComponent().getCurrentSlideName();return e===this.getViewComponent().getSlideName(t)&&e===n}getEmptyColumnScreenConfig(t){const e=this.getViewComponent();const n=e.getCurrentSlideName();const o=e.getColumnStatusIdFromSlideName(n);const r=e.getColumnByName(o);return t.getEmptyColumnScreenConfig({column:r})}isWrongPullContext(t={}){return this.getViewComponent().getCurrentSlideName()!==t.slideName}scrollToTop(){const t=this.getViewComponent().getCurrentStatefulList().getSimpleList();this.scrollSimpleListToTop(t)}getMenuActions(){let t=[this.getSortMenuAction()];const e=this.getSmartActivityAction();if(e){t.push(e)}const n=super.getMenuActions();if(n[0]){n[0].showTopSeparator=true;t=t.concat(n)}return t}getSortMenuAction(){const t=this.getCurrentTypeSort();return{id:"kanban-sort-toggle",title:o.getMessage("M_CRM_ENTITY_TAB_SORT_TOGGLE_TEXT"),checked:t===i.LastActivityTime,sectionCode:"sort",onItemSelected:()=>this.setSortType(),iconUrl:T+"focus.png"}}getCurrentTypeSort(){const{sortType:t}=this.getCurrentEntityType().data;return t||i.LastActivityTime}setSortType(){const t=this.getCurrentTypeSort()===i.LastActivityTime?i.Id:i.LastActivityTime;BX.ajax.runAction(this.props.actions.setSortType,{data:{entityTypeId:this.props.entityTypeId,categoryId:this.getCategoryId(),type:t}}).then((e=>{if(e.errors.length){console.error(e);return}this.updateEntityTypeData({sortType:t},(()=>{this.reload({skipFillSlides:true,skipUseCache:true,updateToolbarColumnId:false,skipInitCounters:true,force:true})}))})).catch((t=>{console.error(t)}))}getSmartActivityAction(){const t=this.getSmartActivitySettings();if(!t){return null}return y(!t.skipped,(t=>this.setSmartActivityStatus(t)))}getSmartActivitySettings(){const{smartActivitySettings:t}=this.getCurrentEntityType().data;return t}setSmartActivityStatus(t){const e=this.getSmartActivitySettings();if(!e){return}e.skipped=!t;this.getCurrentStatefulList().initMenu({layoutMenuActions:this.getMenuActions()})}getPullItemConfig(t){const e=super.getPullItemConfig(t);if(e.showReloadListNotification){const n=this.getViewComponent();const o=n.getCurrentSlideName();if(o!==n.getSlideName()&&o!==n.getSlideName(t.data.columnId)){e.showReloadListNotification=false}}return e}getEmptyListComponent(){if(this.filter.isActive()){return super.getEmptyListComponent()}const t=this.getViewComponent();if(this.getCurrentEntityType().isStagesEnabled&&t.getSlideName()===t.getCurrentSlideName()){this.isEmpty=!Boolean(this.getCurrentStatefulList().getItems().size)}return super.getEmptyListComponent()}onBeforeReloadHandler(){const t=this.getCurrentTypeSort();if(t===i.Id){return{reload:false,animate:true}}return{reload:false,animate:!this.getCurrentStatefulList().getSimpleList().shouldShowReloadListNotification()}}}n.exports={KanbanTab:b}}));
//# sourceMappingURL=extension.map.js