jn.define("crm/product-grid/services/product-model-loader",((t,r,e)=>{const{Loc:o}=t("loc");const{mergeImmutable:d}=t("utils/object");const{ProductRow:c}=t("crm/product-grid/model");class i{constructor({entityId:t,entityTypeName:r,categoryId:e,ajaxErrorHandler:o}){this.entityId=t;this.entityTypeName=r;this.categoryId=e;this.ajaxErrorHandler=o}load(t,r,e={}){const i="crmmobile.ProductGrid.loadProductModel";const a={json:{productId:t,currencyId:r,entityId:this.entityId,entityTypeName:this.entityTypeName,categoryId:this.categoryId}};e=BX.type.isPlainObject(e)?e:{};Notify.showIndicatorLoading();return new Promise(((t,r)=>{BX.ajax.runAction(i,a).then((r=>{Notify.hideCurrentIndicator();const o=d(r.data,e);const i=c.createRecalculated(o);t({productRow:i})})).catch((t=>{Notify.hideCurrentIndicator();if(this.ajaxErrorHandler){return this.ajaxErrorHandler(t)}console.error(t);void ErrorNotifier.showError(o.getMessage("PRODUCT_GRID_SERVICE_PRODUCT_MODEL_LOADER_ERROR"));r(t)}))}))}}e.exports={ProductModelLoader:i}}));
//# sourceMappingURL=extension.map.js