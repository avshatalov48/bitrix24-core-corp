jn.define("crm/product-grid/components/tax-details",((t,e,o)=>{const{Loc:s}=t("loc");const{ProductRow:a}=t("crm/product-grid/model");const{ProductCalculator:r}=t("crm/product-calculator");const{BooleanField:c}=t("layout/ui/fields/boolean");const{MoneyField:l}=t("layout/ui/fields/money");const{SelectField:n}=t("layout/ui/fields/select");const{clone:i}=t("utils/object");class u extends LayoutComponent{constructor(t){super(t);this.state={productRow:new a(i(this.props.productData))};this.layout=t.layout;this.initLayout()}initLayout(){const t=this.isReadonly()?s.getMessage("PRODUCT_GRID_TAX_DETAILS_CLOSE"):s.getMessage("PRODUCT_GRID_TAX_DETAILS_DONE");this.layout.setTitle({text:s.getMessage("PRODUCT_GRID_TAX_DETAILS_TITLE")});this.layout.setRightButtons([{name:t,type:"text",color:"#0B66C3",callback:()=>this.close()}]);this.layout.enableNavigationBarBorder(false)}isReadonly(){const t=Boolean(this.props.editable);return!t}close(){if(this.isReadonly()){this.layout.close()}else{this.onChange();this.layout.close()}}onChange(){if(this.props.onChange){this.props.onChange(this.state.productRow.getRawValues())}}render(){return d(FieldsWrapper({fields:this.prepareFormFields()}))}prepareFormFields(){const t=[];t.push(n({title:s.getMessage("PRODUCT_GRID_TAX_DETAILS_TAX_RATE"),value:this.state.productRow.getTaxRate(),readOnly:this.isReadonly(),required:true,config:{items:this.props.vatRates},onChange:t=>{this.recalculate((e=>e.calculateTax(t)))}}));t.push(c({title:s.getMessage("PRODUCT_GRID_TAX_DETAILS_TAX_INCLUDED"),value:this.state.productRow.isTaxIncluded(),readOnly:this.isReadonly(),onChange:t=>{const e=t?"Y":"N";this.recalculate((t=>t.calculateTaxIncluded(e)))}}));t.push(l({title:s.getMessage("PRODUCT_GRID_TAX_DETAILS_BASE_SUM"),value:{amount:this.state.productRow.getBasePrice()*this.state.productRow.getQuantity(),currency:this.state.productRow.getCurrency()},readOnly:true,config:{currencyReadOnly:true,selectionOnFocus:true}}));t.push(l({title:s.getMessage("PRODUCT_GRID_TAX_DETAILS_TAX_SUM"),value:{amount:this.state.productRow.getTaxSum(),currency:this.state.productRow.getCurrency()},readOnly:true,config:{currencyReadOnly:true,selectionOnFocus:true}}));t.push(l({title:s.getMessage("PRODUCT_GRID_TAX_DETAILS_FINAL_SUM"),value:{amount:this.state.productRow.getSum(),currency:this.state.productRow.getCurrency()},readOnly:true,config:{currencyReadOnly:true,selectionOnFocus:true}}));return t}recalculate(t){const e=this.state.productRow;const o=new r(e.getRawValues());const s=t(o);e.setFields(s);this.setState({productRow:e})}}function d(...t){return View({style:{backgroundColor:"#EEF2F4"},resizableByKeyboard:true},ScrollView({style:{flexDirection:"column",flexGrow:1}},View({},View({style:{padding:16,paddingTop:0,backgroundColor:"#ffffff",borderRadius:12,marginBottom:12}},...t))))}o.exports={TaxDetails:u}}));
//# sourceMappingURL=extension.map.js