{"version":3,"file":"field-selector.bundle.js","sources":["../src/field-selector.js"],"sourcesContent":["import { Dom, Tag, Text, Type } from 'main.core';\nimport { type BaseEvent } from 'main.core.events';\nimport { type Item, type ItemId, TagSelector, type TagSelectorOptions } from 'ui.entity-selector';\nimport { FieldSelectorConfig } from './field-selector-config';\nimport { TabMessages } from './tab-messages';\n\nexport class FieldSelector\n{\n\tstate: boolean = true;\n\tcontainerId: string = '';\n\tfieldName: string = '';\n\tmultiple: boolean = false;\n\tselectedItems: number[] = [];\n\tiblockId: number = 0;\n\tuserType: string = '';\n\tentityId: string = '';\n\tsearchMessages: TabMessages = {};\n\n\tconstructor(selectorConfig: FieldSelectorConfig)\n\t{\n\t\tconst config: FieldSelectorConfig = Type.isPlainObject(selectorConfig) ? selectorConfig : {};\n\n\t\tthis.resetState();\n\n\t\tthis.setContainerId(config.containerId);\n\t\tthis.setFieldName(config.fieldName);\n\t\tthis.setMultiple(config.multiple);\n\t\tthis.setSelectedItems(config.selectedItems);\n\t\tthis.setIblockId(config.iblockId);\n\t\tthis.setUserType(config.userType);\n\t\tthis.setEntityId(config.entityId);\n\t\tthis.setSearchMessages(config.searchMessages);\n\t}\n\n\tresetState(): void\n\t{\n\t\tthis.state = true;\n\t}\n\n\tisStateSuccess(): boolean\n\t{\n\t\treturn this.state;\n\t}\n\n\tshowError(error): void\n\t{\n\t\tthis.state = false;\n\t\tif (Type.isStringFilled(error))\n\t\t{\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tshowWarning(warning): void\n\t{\n\t\tthis.state = false;\n\t\tif (Type.isStringFilled(warning))\n\t\t{\n\t\t\tconsole.warn(warning);\n\t\t}\n\t}\n\n\tsetContainerId(containerId): void\n\t{\n\t\tthis.containerId = Type.isStringFilled(containerId) ? containerId : '';\n\t\tif (this.containerId === '')\n\t\t{\n\t\t\tthis.showError('BX.Iblock.FieldSelector: containerId is empty. Selector is can\\'t be used');\n\t\t}\n\t}\n\n\tgetContainerId(): string\n\t{\n\t\treturn this.containerId;\n\t}\n\n\tsetFieldName(fieldName): void\n\t{\n\t\tthis.fieldName = Type.isStringFilled(fieldName) ? fieldName : '';\n\t\tif (this.fieldName === '')\n\t\t{\n\t\t\tthis.showError('BX.Iblock.FieldSelector: fieldName is empty. Selector is can\\'t be used');\n\t\t}\n\t}\n\n\tgetFieldName(): string\n\t{\n\t\treturn this.fieldName;\n\t}\n\n\tsetMultiple(multiple): void\n\t{\n\t\tthis.multiple = Type.isBoolean(multiple) ? multiple : false;\n\t}\n\n\tgetMultiple(): boolean\n\t{\n\t\treturn this.multiple;\n\t}\n\n\tgetTagSelectorContainerId(): string\n\t{\n\t\treturn this.getContainerId() + '_selector';\n\t}\n\n\tgetTagResultContainerId(): string\n\t{\n\t\treturn this.getContainerId() + '_results';\n\t}\n\n\tgetTagSelectorControlId(): string\n\t{\n\t\treturn this.getContainerId() + 'Control';\n\t}\n\n\tsetSelectedItems(selectedItems): void\n\t{\n\t\tthis.selectedItems = [];\n\t\tif (Type.isArray(selectedItems))\n\t\t{\n\t\t\tselectedItems.forEach((value): void => {\n\t\t\t\tif (Type.isInteger(value))\n\t\t\t\t{\n\t\t\t\t\tthis.selectedItems.push(value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (Type.isInteger(selectedItems))\n\t\t{\n\t\t\tthis.selectedItems.push(selectedItems);\n\t\t}\n\t}\n\n\tgetSelectedItems(): number[]\n\t{\n\t\treturn this.selectedItems;\n\t}\n\n\tgetTagSelectorItems(): ItemId[]\n\t{\n\t\tconst entityId: string = this.getEntityId();\n\t\tconst result = [];\n\t\tthis.getSelectedItems().forEach((value: number): void => {\n\t\t\tconst item: ItemId = [\n\t\t\t\tentityId,\n\t\t\t\tvalue,\n\t\t\t];\n\t\t\tresult.push(item);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tsetIblockId(iblockId): void\n\t{\n\t\tthis.iblockId = 0;\n\t\tif (Type.isInteger(iblockId) && iblockId > 0)\n\t\t{\n\t\t\tthis.iblockId = iblockId;\n\t\t}\n\t}\n\n\tgetIblockId(): number\n\t{\n\t\treturn this.iblockId;\n\t}\n\n\tsetUserType(userType): void\n\t{\n\t\tthis.userType = '';\n\t\tif (Type.isStringFilled(userType))\n\t\t{\n\t\t\tthis.userType = userType;\n\t\t}\n\t}\n\n\tgetUserType(): string\n\t{\n\t\treturn this.userType;\n\t}\n\n\tsetEntityId(entityId): void\n\t{\n\t\tthis.entityId = Type.isStringFilled(entityId) ? entityId : '';\n\t\tif (this.entityId === '')\n\t\t{\n\t\t\tthis.showError('BX.Iblock.FieldSelector: entityI id is empty. Selector is can\\'t be used');\n\t\t}\n\t}\n\n\tgetEntityId(): string\n\t{\n\t\treturn this.entityId;\n\t}\n\n\tsetSearchMessages(messages): void\n\t{\n\t\tif (Type.isPlainObject(messages))\n\t\t{\n\t\t\tthis.searchMessages.title = Type.isStringFilled(messages.title) ? messages.title : '';\n\t\t\tthis.searchMessages.subtitle = Type.isStringFilled(messages.subtitle) ? messages.subtitle : '';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.searchMessages.title = '';\n\t\t\tthis.searchMessages.subtitle = '';\n\t\t}\n\t}\n\n\tgetSearchTabTitle(): string\n\t{\n\t\treturn this.searchMessages.title;\n\t}\n\n\tgetSearchSubtitle(): string\n\t{\n\t\treturn this.searchMessages.subtitle;\n\t}\n\n\trender(): void\n\t{\n\t\tif (!this.isStateSuccess())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst containerId: string = this.getContainerId();\n\t\tconst container = document.getElementById(containerId);\n\t\tif (!Type.isElementNode(container))\n\t\t{\n\t\t\tthis.showError(\n\t\t\t\t'BX.Iblock.FieldSelector: dom-container ' + containerId + ' is absent. Selector is can\\'t be used'\n\t\t\t);\n\t\t}\n\n\t\tconst tagSelectorContainer = Tag.render`\n\t\t\t<div id=\"${this.getTagSelectorContainerId()}\"></div>\n\t\t`;\n\t\tDom.append(tagSelectorContainer, container);\n\n\t\tconst tagResult = Tag.render`\n\t\t\t<div id=\"${this.getTagResultContainerId()}\"></div>\n\t\t`;\n\t\tDom.append(tagResult, container);\n\n\t\tthis.renderSelectedItems(this.getSelectedItems());\n\n\t\tconst tagSelectorConfig: TagSelectorOptions = {\n\t\t\tid: this.getTagSelectorControlId(),\n\t\t\tmultiple: this.getMultiple(),\n\t\t\tdialogOptions: {\n\t\t\t\tid: this.getTagSelectorControlId(),\n\t\t\t\tmultiple: this.getMultiple(),\n\t\t\t\tpreselectedItems: this.getTagSelectorItems(),\n\t\t\t\tentities: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: this.getEntityId(),\n\t\t\t\t\t\tdynamicLoad: true,\n\t\t\t\t\t\tdynamicSearch: true,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tiblockId: this.getIblockId(),\n\t\t\t\t\t\t\tpropertyType: this.getUserType(),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tsearchOptions: {\n\t\t\t\t\tallowCreateItem: false,\n\t\t\t\t},\n\t\t\t\tsearchTabOptions: {\n\t\t\t\t\tstub: true,\n\t\t\t\t\tstubOptions: {\n\t\t\t\t\t\ttitle: Text.encode(this.getSearchTabTitle()),\n\t\t\t\t\t\tsubtitle: Text.encode(this.getSearchSubtitle()),\n\t\t\t\t\t\tarrow: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tevents: {\n\t\t\t\t\t'Item:onSelect': this.updateSelectedItems.bind(this),\n\t\t\t\t\t'Item:onDeselect': this.updateSelectedItems.bind(this),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst tagSelector = new TagSelector(tagSelectorConfig);\n\t\ttagSelector.renderTo(tagSelectorContainer);\n\t}\n\n\trenderSelectedItems(items: []): void\n\t{\n\t\tconst tagResult = document.getElementById(this.getTagResultContainerId());\n\t\tif (!Type.isDomNode(tagResult))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst fieldName = this.getFieldName();\n\t\ttagResult.innerHTML = '';\n\t\tif (items.length > 0)\n\t\t{\n\t\t\titems.forEach((value: number): void => {\n\t\t\t\tconst hiddenValue = Tag.render`\n\t\t\t\t\t<input type=\"hidden\" name=\"${fieldName}\" value=\"${value.toString()}\">\n\t\t\t\t`;\n\t\t\t\tDom.append(hiddenValue, tagResult);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst emptyValue = Tag.render`\n\t\t\t\t<input type=\"hidden\" name=\"${fieldName}\" value=\"\">\n\t\t\t`;\n\t\t\tDom.append(emptyValue, tagResult);\n\t\t}\n\t}\n\n\tupdateSelectedItems(event: BaseEvent): void\n\t{\n\t\tconst dialog = event.getTarget();\n\t\tif (!dialog.isMultiple())\n\t\t{\n\t\t\tdialog.hide();\n\t\t}\n\n\t\tconst selectedItems = dialog.getSelectedItems();\n\t\tif (Type.isArray(selectedItems))\n\t\t{\n\t\t\tconst parsedValues = [];\n\t\t\tselectedItems.forEach((item: Item) => {\n\t\t\t\tparsedValues.push(item.getId());\n\t\t\t});\n\t\t\tthis.renderSelectedItems(parsedValues);\n\t\t}\n\t}\n}\n"],"names":["FieldSelector","selectorConfig","babelHelpers","config","Type","isPlainObject","this","resetState","setContainerId","containerId","setFieldName","fieldName","setMultiple","multiple","setSelectedItems","selectedItems","setIblockId","iblockId","setUserType","userType","setEntityId","entityId","setSearchMessages","searchMessages","key","value","state","error","isStringFilled","console","warning","warn","showError","isBoolean","getContainerId","isArray","forEach","isInteger","_this","push","getEntityId","result","getSelectedItems","item","messages","title","subtitle","isStateSuccess","container","document","getElementById","isElementNode","tagSelectorContainer","Tag","render","getTagSelectorContainerId","Dom","append","tagResult","getTagResultContainerId","renderSelectedItems","tagSelectorConfig","id","getTagSelectorControlId","getMultiple","dialogOptions","preselectedItems","getTagSelectorItems","entities","dynamicLoad","dynamicSearch","options","getIblockId","propertyType","getUserType","searchOptions","allowCreateItem","searchTabOptions","stub","stubOptions","Text","encode","getSearchTabTitle","getSearchSubtitle","arrow","events","Item:onSelect","updateSelectedItems","bind","Item:onDeselect","TagSelector","renderTo","items","isDomNode","getFieldName","innerHTML","length","hiddenValue","toString","emptyValue","event","dialog","getTarget","isMultiple","hide","parsedValues","getId"],"mappings":"6DAMaA,aAYZ,WAAYC,GACZC,oCAAAA,0CAXiB,GAAIA,+CACC,IAAEA,6CACJ,IAAEA,6CACF,GAAKA,iDACC,IAAEA,4CACT,GAACA,4CACD,IAAEA,4CACF,IAAEA,kDACS,IAI7B,IAAMC,EAA8BC,OAAKC,cAAcJ,GAAkBA,EAAiB,GAE1FK,KAAKC,aAELD,KAAKE,eAAeL,EAAOM,aAC3BH,KAAKI,aAAaP,EAAOQ,WACzBL,KAAKM,YAAYT,EAAOU,UACxBP,KAAKQ,iBAAiBX,EAAOY,eAC7BT,KAAKU,YAAYb,EAAOc,UACxBX,KAAKY,YAAYf,EAAOgB,UACxBb,KAAKc,YAAYjB,EAAOkB,UACxBf,KAAKgB,kBAAkBnB,EAAOoB,gBA6S9B,OA5SArB,6BAAAsB,iBAAAC,iBAIAnB,KAAKoB,OAAQ,KACbF,qBAAAC,iBAIA,OAAOnB,KAAKoB,SACZF,gBAAAC,eAESE,GAETrB,KAAKoB,OAAQ,EACTtB,OAAKwB,eAAeD,IAEvBE,QAAQF,MAAMA,MAEfH,kBAAAC,eAEWK,GAEXxB,KAAKoB,OAAQ,EACTtB,OAAKwB,eAAeE,IAEvBD,QAAQE,KAAKD,MAEdN,qBAAAC,eAEchB,GAEdH,KAAKG,YAAcL,OAAKwB,eAAenB,GAAeA,EAAc,GAC3C,KAArBH,KAAKG,aAERH,KAAK0B,UAAU,+EAEhBR,qBAAAC,iBAIA,OAAOnB,KAAKG,eACZe,mBAAAC,eAEYd,GAEZL,KAAKK,UAAYP,OAAKwB,eAAejB,GAAaA,EAAY,GACvC,KAAnBL,KAAKK,WAERL,KAAK0B,UAAU,6EAEhBR,mBAAAC,iBAIA,OAAOnB,KAAKK,aACZa,kBAAAC,eAEWZ,GAEXP,KAAKO,WAAWT,OAAK6B,UAAUpB,IAAYA,KAC3CW,kBAAAC,iBAIA,OAAOnB,KAAKO,YACZW,gCAAAC,iBAIA,OAAOnB,KAAK4B,iBAAmB,eAC/BV,8BAAAC,iBAIA,OAAOnB,KAAK4B,iBAAmB,cAC/BV,8BAAAC,iBAIA,OAAOnB,KAAK4B,iBAAmB,aAC/BV,uBAAAC,eAEgBV,GACjB,WACCT,KAAKS,cAAgB,GACjBX,OAAK+B,QAAQpB,GAEhBA,EAAcqB,SAAQ,SAACX,GAClBrB,OAAKiC,UAAUZ,IAElBa,EAAKvB,cAAcwB,KAAKd,MAIlBrB,OAAKiC,UAAUtB,IAEvBT,KAAKS,cAAcwB,KAAKxB,MAEzBS,uBAAAC,iBAIA,OAAOnB,KAAKS,iBACZS,0BAAAC,iBAIA,IAAMJ,EAAmBf,KAAKkC,cACxBC,EAAS,GASf,OARAnC,KAAKoC,mBAAmBN,SAAQ,SAACX,GAChC,IAAMkB,EAAe,CACpBtB,EACAI,GAEDgB,EAAOF,KAAKI,MAGNF,KACPjB,kBAAAC,eAEWR,GAEXX,KAAKW,SAAW,EACZb,OAAKiC,UAAUpB,IAAaA,EAAW,IAE1CX,KAAKW,SAAWA,MAEjBO,kBAAAC,iBAIA,OAAOnB,KAAKW,YACZO,kBAAAC,eAEWN,GAEXb,KAAKa,SAAW,GACZf,OAAKwB,eAAeT,KAEvBb,KAAKa,SAAWA,MAEjBK,kBAAAC,iBAIA,OAAOnB,KAAKa,YACZK,kBAAAC,eAEWJ,GAEXf,KAAKe,SAAWjB,OAAKwB,eAAeP,GAAYA,EAAW,GACrC,KAAlBf,KAAKe,UAERf,KAAK0B,UAAU,8EAEhBR,kBAAAC,iBAIA,OAAOnB,KAAKe,YACZG,wBAAAC,eAEiBmB,GAEbxC,OAAKC,cAAcuC,IAEtBtC,KAAKiB,eAAesB,MAAQzC,OAAKwB,eAAegB,EAASC,OAASD,EAASC,MAAQ,GACnFvC,KAAKiB,eAAeuB,SAAW1C,OAAKwB,eAAegB,EAASE,UAAYF,EAASE,SAAW,KAI5FxC,KAAKiB,eAAesB,MAAQ,GAC5BvC,KAAKiB,eAAeuB,SAAW,OAEhCtB,wBAAAC,iBAIA,OAAOnB,KAAKiB,eAAesB,SAC3BrB,wBAAAC,iBAIA,OAAOnB,KAAKiB,eAAeuB,YAC3BtB,aAAAC,iBAIA,GAAKnB,KAAKyC,iBAAV,CAKA,IAAMtC,EAAsBH,KAAK4B,iBAC3Bc,EAAYC,SAASC,eAAezC,GACrCL,OAAK+C,cAAcH,IAEvB1C,KAAK0B,UACJ,0CAA4CvB,EAAc,yCAI5D,IAAM2C,EAAuBC,MAAIC,yFACrBhD,KAAKiD,6BAEjBC,MAAIC,OAAOL,EAAsBJ,GAEjC,IAAMU,EAAYL,MAAIC,yFACVhD,KAAKqD,2BAEjBH,MAAIC,OAAOC,EAAWV,GAEtB1C,KAAKsD,oBAAoBtD,KAAKoC,oBAE9B,IAAMmB,EAAwC,CAC7CC,GAAIxD,KAAKyD,0BACTlD,SAAUP,KAAK0D,cACfC,cAAe,CACdH,GAAIxD,KAAKyD,0BACTlD,SAAUP,KAAK0D,cACfE,iBAAkB5D,KAAK6D,sBACvBC,SAAU,CACT,CACCN,GAAIxD,KAAKkC,cACT6B,aAAa,EACbC,eAAe,EACfC,QAAS,CACRtD,SAAUX,KAAKkE,cACfC,aAAcnE,KAAKoE,iBAItBC,cAAe,CACdC,iBAAiB,GAElBC,iBAAkB,CACjBC,MAAM,EACNC,YAAa,CACZlC,MAAOmC,OAAKC,OAAO3E,KAAK4E,qBACxBpC,SAAUkC,OAAKC,OAAO3E,KAAK6E,qBAC3BC,OAAO,IAGTC,OAAQ,CACPC,gBAAiBhF,KAAKiF,oBAAoBC,KAAKlF,MAC/CmF,kBAAmBnF,KAAKiF,oBAAoBC,KAAKlF,SAKhC,IAAIoF,cAAY7B,GACxB8B,SAASvC,OACrB5B,0BAAAC,eAEmBmE,GAEnB,IAAMlC,EAAYT,SAASC,eAAe5C,KAAKqD,2BAC/C,GAAKvD,OAAKyF,UAAUnC,GAApB,CAKA,IAAM/C,EAAYL,KAAKwF,eAEvB,GADApC,EAAUqC,UAAY,GAClBH,EAAMI,OAAS,EAElBJ,EAAMxD,SAAQ,SAACX,GACd,IAAMwE,EAAc5C,MAAIC,yHACM3C,EAAqBc,EAAMyE,YAEzD1C,MAAIC,OAAOwC,EAAavC,UAI1B,CACC,IAAMyC,EAAa9C,MAAIC,kHACO3C,GAE9B6C,MAAIC,OAAO0C,EAAYzC,QAExBlC,0BAAAC,eAEmB2E,GAEnB,IAAMC,EAASD,EAAME,YAChBD,EAAOE,cAEXF,EAAOG,OAGR,IAAMzF,EAAgBsF,EAAO3D,mBAC7B,GAAItC,OAAK+B,QAAQpB,GACjB,CACC,IAAM0F,EAAe,GACrB1F,EAAcqB,SAAQ,SAACO,GACtB8D,EAAalE,KAAKI,EAAK+D,YAExBpG,KAAKsD,oBAAoB6C"}