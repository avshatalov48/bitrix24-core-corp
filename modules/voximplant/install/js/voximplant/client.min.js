(function(){var e=null;var n="";var t="";var r="";var o="bx-voximplant-at";var i="bx-voximplant-login";var a="bx-voximplant-server";var c=30*24*60*60;BX.namespace("BX.Voximplant");var u=function(){var e=BX.message("voximplantSdkUrl");return new Promise((function(n,t){var r=setTimeout((function(){var e={name:"NetworkingTimeout",code:"NETWORK_ERROR",message:"Could not load VoxImplant SDK"};t(e)}),5e3);BX.loadScript(e,(function(){clearTimeout(r);if("VoxImplant"in window){n()}else{var e={name:"NetworkingError",code:"NETWORK_ERROR",message:"VoxImplant SDK not found"};t(e)}}))}))};var l=function(n){return new Promise((function(t,r){if(e.alreadyInitialized){return t()}e.init(n).then(t).catch(r)}))};var s=function(){return new Promise((function(n,t){if(e.connected()){return n()}e.connect().then(n).catch((e=>{t(new d)}))}))};var f=function(){return new Promise((function(r,o){var c;g().then((function(e){c=e;return v(c)})).then((function(u){if(u){return r()}h(c).then(p).then((function(r){return e.loginWithOneTimeKey(n+"@"+t,r)})).then((function(e){if(e.tokens){m(e.tokens)}r(e)})).catch((function(e){BX.localStorage.remove(i);BX.localStorage.remove(a);o(e)}))})).catch(o)}))};var v=function(n){return new Promise((function(t,r){var i=BX.localStorage.get(o);if(!i){return t(false)}e.loginWithToken(n.login+"@"+n.server,i).then((function(e){m(e.tokens);t(true)}),(function(e){BX.localStorage.remove(o);t(false)}))}))};var m=function(e){BX.localStorage.set(o,e.accessToken,e.accessExpire)};var g=function(){return new Promise((function(e,o){n=n||BX.localStorage.get(i);t=t||BX.localStorage.get(a);if(BX.type.isNotEmptyString(n)&&BX.type.isNotEmptyString(t)){return e({login:n,server:t})}r.callMethod("voximplant.authorization.get").then((function(r){var u=r.data();if(BX.type.isNotEmptyString(u.LOGIN)&&BX.type.isNotEmptyString(u.SERVER)){n=u.LOGIN;t=u.SERVER;BX.localStorage.set(a,t,c);BX.localStorage.set(i,n,c);e({login:n,server:t})}else{var l={name:"AuthResult",code:"LOGIN_EMPTY",message:"Could not get voximplant login for user"};o(l)}})).catch((function(e){o(e)}))}))};var h=function(n){return new Promise((function(t,r){var o=function(n){e.removeEventListener(VoxImplant.Events.AuthResult,o);if(n.code==302&&n.key){t(n.key)}else{r(n)}};e.addEventListener(VoxImplant.Events.AuthResult,o);e.requestOneTimeLoginKey(n.login+"@"+n.server).catch((function(e){r(e)}))}))};var p=function(e){return new Promise((function(n,t){r.callMethod("voximplant.authorization.signOneTimeKey",{KEY:e}).then((function(e){var t=e.data();if(t.HASH){n(t.HASH)}})).catch((function(e){t(e)}))}))};BX.Voximplant.getClient=function(n){n=BX.type.isPlainObject(n)?n:{};var t=new BX.Promise;r=n.restClient||BX.rest;if(e&&e.getClientState()==="LOGGED_IN"){t.resolve(e);return t}u().then((function(){e=VoxImplant.getInstance();var t=BX.message("voximplantMediaServer");var r={micRequired:false,progressTone:false};if(t!==""){r.serverIp=t}if(n.debug===true){r.showDebugInfo=true;r.showWarnings=true;r.prettyPrint=true}if(BX.type.isPlainObject(n.apiParameters)){r=BX.util.objectMerge(r,n.apiParameters)}return r})).then((function(e){return l(e)})).then(s).then(f).then((function(n){t.resolve(e)})).catch((function(e){console.error(e);if("name"in e&&e.name==="AuthResult"){r.callMethod("voximplant.authorization.onError")}t.reject(e)}));return t};class d extends Error{code="NETWORK_ERROR";name="VoxConnectionError"}})();
//# sourceMappingURL=client.map.js