(function(){var e=null;var t="";var n="";BX.namespace("BX.Voximplant");var r=function(){return new Promise(function(t,n){if(e.connected()){return t()}e.connect().then(t).catch(n)})};var i=function(){return new Promise(function(r,i){o().then(a).then(u).then(function(r){return e.loginWithOneTimeKey(t+"@"+n,r)}).then(r).catch(i)})};var o=function(){return new Promise(function(e,r){if(BX.type.isNotEmptyString(t)){return e({login:t,server:n})}else if(BX.message("voximplantLogin")){t=BX.message("voximplantLogin");n=BX.message("voximplantServer");return e({login:t,server:n})}else{BX.rest.callMethod("voximplant.authorization.get").then(function(i){var o=i.data();if(BX.type.isNotEmptyString(o.LOGIN)&&BX.type.isNotEmptyString(o.SERVER)){t=o.LOGIN;n=o.SERVER;e({login:t,server:n})}else{var a=new Error("Could not get voximplant login for user");a.name="AuthResult";r(a)}}).catch(function(e){r(e)})}})};var a=function(t){return new Promise(function(n,r){var i=function(t){e.removeEventListener(VoxImplant.Events.AuthResult,i);if(t.code==302&&t.key){n(t.key)}else{r(t)}};e.addEventListener(VoxImplant.Events.AuthResult,i);e.requestOneTimeLoginKey(t.login+"@"+t.server)})};var u=function(e){return new Promise(function(t,n){BX.rest.callMethod("voximplant.authorization.signOneTimeKey",{KEY:e}).then(function(e){var n=e.data();if(n.HASH){t(n.HASH)}}).catch(function(e){n(e)})})};BX.Voximplant.getClient=function(t){t=BX.type.isPlainObject(t)?t:{};var n=new BX.Promise;if(!e){e=VoxImplant.getInstance()}if(e.getClientState()==="LOGGED_ID"){n.resolve(e);return n}var o={micRequired:false,progressTone:false,experiments:{preventRendering:true}};if(t.debug===true){o.showDebugInfo=true;o.showWarnings=true;o.prettyPrint=true}if(BX.type.isPlainObject(t.apiParameters)){o=BX.util.objectMerge(o,t.apiParameters)}e.init(o).then(r).then(i).then(function(t){n.resolve(e)}).catch(function(e){console.error(e);if(e.name==="AuthResult"){BX.rest.callMethod("voximplant.authorization.onError")}n.reject(e)});return n}})();
//# sourceMappingURL=client.map.js