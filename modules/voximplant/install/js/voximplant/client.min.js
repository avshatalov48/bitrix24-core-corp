(function(){var e=null;var t="";var n="";var r="";var o="bx-voximplant-at";var i="bx-voximplant-login";var a="bx-voximplant-server";var c=30*24*60*60;BX.namespace("BX.Voximplant");var u=function(){var e=BX.message("voximplantSdkUrl");return new Promise(function(t,n){var r=setTimeout(function(){var e={name:"NetworkingTimeout",code:"NETWORK_ERROR",message:"Could not load VoxImplant SDK"};n(e)},5e3);BX.loadScript(e,function(){clearTimeout(r);if("VoxImplant"in window){t()}else{var e={name:"NetworkingError",code:"NETWORK_ERROR",message:"VoxImplant SDK not found"};n(e)}})})};var l=function(t){return new Promise(function(n,r){if(e.alreadyInitialized){return n()}e.init(t).then(n).catch(r)})};var s=function(){return new Promise(function(t,n){if(e.connected()){return t()}e.connect().then(t).catch(n)})};var f=function(){return new Promise(function(r,o){var c;g().then(function(e){c=e;return v(c)}).then(function(u){if(u){return r()}h(c).then(p).then(function(r){return e.loginWithOneTimeKey(t+"@"+n,r)}).then(function(e){if(e.tokens){m(e.tokens)}r(e)}).catch(function(e){BX.localStorage.remove(i);BX.localStorage.remove(a);o(e)})}).catch(o)})};var v=function(t){return new Promise(function(n,r){var i=BX.localStorage.get(o);if(!i){return n(false)}e.loginWithToken(t.login+"@"+t.server,i).then(function(e){m(e.tokens);n(true)},function(e){BX.localStorage.remove(o);n(false)})})};var m=function(e){BX.localStorage.set(o,e.accessToken,e.accessExpire)};var g=function(){return new Promise(function(e,o){t=t||BX.localStorage.get(i);n=n||BX.localStorage.get(a);if(BX.type.isNotEmptyString(t)&&BX.type.isNotEmptyString(n)){return e({login:t,server:n})}r.callMethod("voximplant.authorization.get").then(function(r){var u=r.data();if(BX.type.isNotEmptyString(u.LOGIN)&&BX.type.isNotEmptyString(u.SERVER)){t=u.LOGIN;n=u.SERVER;BX.localStorage.set(a,n,c);BX.localStorage.set(i,t,c);e({login:t,server:n})}else{var l={name:"AuthResult",code:"LOGIN_EMPTY",message:"Could not get voximplant login for user"};o(l)}}).catch(function(e){o(e)})})};var h=function(t){return new Promise(function(n,r){var o=function(t){e.removeEventListener(VoxImplant.Events.AuthResult,o);if(t.code==302&&t.key){n(t.key)}else{r(t)}};e.addEventListener(VoxImplant.Events.AuthResult,o);e.requestOneTimeLoginKey(t.login+"@"+t.server)})};var p=function(e){return new Promise(function(t,n){r.callMethod("voximplant.authorization.signOneTimeKey",{KEY:e}).then(function(e){var n=e.data();if(n.HASH){t(n.HASH)}}).catch(function(e){n(e)})})};BX.Voximplant.getClient=function(t){t=BX.type.isPlainObject(t)?t:{};var n=new BX.Promise;r=t.restClient||BX.rest;if(e&&e.getClientState()==="LOGGED_IN"){n.resolve(e);return n}u().then(function(){e=VoxImplant.getInstance();var n=BX.message("voximplantMediaServer");var r={micRequired:false,progressTone:false};if(n!==""){r.serverIp=n}if(t.debug===true){r.showDebugInfo=true;r.showWarnings=true;r.prettyPrint=true}if(BX.type.isPlainObject(t.apiParameters)){r=BX.util.objectMerge(r,t.apiParameters)}return r}).then(function(e){return l(e)}).then(s).then(f).then(function(t){n.resolve(e)}).catch(function(e){console.error(e);if("name"in e&&e.name==="AuthResult"){r.callMethod("voximplant.authorization.onError")}n.reject(e)});return n}})();
//# sourceMappingURL=client.map.js