"use strict";if(typeof clearInterval=="undefined"){clearInterval=e=>clearTimeout(e)}if(typeof ChatUserList!="undefined"&&typeof ChatUserList.cleaner!="undefined"){ChatUserList.cleaner()}var ChatUserList={};ChatUserList.init=function(){this.type=BX.componentParameters.get("LIST_TYPE","LIST");this.userId=parseInt(BX.componentParameters.get("USER_ID",0));this.dialogId=BX.componentParameters.get("DIALOG_ID","LIST");this.dialogOwnerId=parseInt(BX.componentParameters.get("DIALOG_OWNER_ID",0));this.users=BX.componentParameters.get("USERS",false);this.items=BX.componentParameters.get("ITEMS",[]);this.isBackdrop=BX.componentParameters.get("IS_BACKDROP",false);this.sections=BX.componentParameters.get("SECTIONS",[]);if(!this.dialogId){this.close();return false}let e=["base","event","rest"];e.forEach((t=>{if(typeof this[t]!="undefined"){e.forEach((e=>{if(e=="base"){this[t]["base"]=this}else if(t!=e){this[t][e]=this[e]}}))}}));ChatUserListInterface.setRefreshingEnabled(false);this.event.init();return true};ChatUserList.openUserProfile=function(e,t={}){console.log("ChatUserList.openUserProfile",e,t);const{ProfileView:s}=jn.require("user/profile");s.open({userId:e,imageUrl:ChatUtils.getAvatar(t.avatar),title:t.name,workPosition:t.work_position,name:t.name,isBackdrop:this.isBackdrop,url:currentDomain+"/mobile/users/?user_id="+e+"&FROM_DIALOG=Y"});return true};ChatUserList.alert=function(e){ChatUserListInterface.showAlert(e);return true};ChatUserList.close=function(){ChatUserListInterface.close();return true};ChatUserList.cleaner=function(){BX.listeners={};console.warn("ChatUserList.cleaner: OK")};ChatUserList.event={};ChatUserList.event.init=function(){this.debug=false;this.handlersList={onItemAction:this.onItemAction,onItemSelected:this.onItemSelected};ChatUserListInterface.setListener(this.router.bind(this));if(this.base.items.length<=0){if(this.base.users.length<=0){this.base.items.push({title:BX.message("IM_USER_LIST_EMPTY"),type:"button",unselectable:true,params:{action:"empty"}})}else{ChatUserList.rest.userListGet(this.base.users)}}if(this.base.items.length>0){BX.onViewLoaded((()=>ChatUserListInterface.setItems(this.base.items,this.base.sections)))}};ChatUserList.event.router=function(e,t){if(this.handlersList[e]){this.handlersList[e].apply(this,[t])}else if(this.debug){console.info("ChatUserList.event.router: skipped event - "+e+" "+JSON.stringify(t))}};ChatUserList.event.onItemAction=function(e){console.info("ChatUserList.event.onItemAction",e);if(this.base.type=="USERS"){if(e.action.identifier=="kick"){this.rest.userDelete(e.item.params.id)}else if(e.action.identifier=="owner"){this.rest.setOwner(e.item.params.id)}}else{console.warn(`Action skipped: ${e.action.identifier} - id: ${e.item.params.id}`)}return true};ChatUserList.event.onItemSelected=function(e){console.info("ChatUserList.event.onItemSelected",e);if(e.params.external_auth_id==="imconnector"||e.params.external_auth_id==="call"){return false}this.base.openUserProfile(e.params.id,{avatar:e.imageUrl,name:e.title,work_position:e.subtitle});return true};ChatUserList.rest={};ChatUserList.rest.userDelete=function(e){BX.rest.callMethod("im.chat.user.delete",{DIALOG_ID:this.base.dialogId,USER_ID:e}).then((t=>{if(t.data()){this.base.items=this.base.items.filter((t=>t.id!=e));console.info(`ChatUserList.rest.userDelete: user ${e} deleted`)}else{console.error("ChatUserList.rest.userDelete: we have some problems on server\n",t.answer);this.base.alert(BX.message("IM_USER_API_ERROR"))}})).catch((e=>{let t=e.error();if(t.ex.error=="NO_INTERNET_CONNECTION"){console.error("ChatUserList.rest.userDelete - error: connection error",t.ex);this.base.alert(BX.message("IM_USER_CONNECTION_ERROR"))}else{console.error("ChatUserList.rest.userDelete - error: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_API_ERROR"))}}))};ChatUserList.rest.setOwner=function(e){BX.rest.callMethod("im.chat.setOwner",{DIALOG_ID:this.base.dialogId,USER_ID:e}).then((t=>{if(t.data()){this.base.items=this.base.items.map((t=>{t.actions=[];if(t.id==e){t.styles.title.image={name:"name_status_owner"}}else if(t.styles&&t.styles.title&&t.styles.title.image&&t.styles.title.image.name=="name_status_owner"){t.styles.title.image={}}return t}));ChatUserListInterface.setItems(this.base.items,this.base.sections);console.info(`ChatUserList.rest.setOwner: new owner is ${e}`)}else{console.error("ChatUserList.rest.setOwner: we have some problems on server\n",t.answer);this.base.alert(BX.message("IM_USER_API_ERROR"))}})).catch((e=>{let t=e.error();if(t.ex.error=="NO_INTERNET_CONNECTION"){console.error("ChatUserList.rest.setOwner - error: connection error",t.ex);this.base.alert(BX.message("IM_USER_CONNECTION_ERROR"))}else{console.error("ChatUserList.rest.setOwner - error: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_API_ERROR"))}}))};ChatUserList.rest.userListGet=function(e){let t="im.user.list.get";let s={ID:e,RESULT_TYPE:"array"};if(!e){t="im.dialog.users.get";s={DIALOG_ID:this.base.dialogId}}BX.rest.callMethod(t,s).then((e=>{if(e.data()){const t=[];e.data().forEach((e=>{let s=ChatDataConverter.getSearchElementFormat(e);s.actions=[];if(this.base.type==="USERS"){if(this.base.dialogOwnerId===this.base.userId){if(false&&this.base.isLines){if(this.base.userId!==s.id&&linesUsers.indexOf(s.id)<0){s.actions.push({title:BX.message("IM_USER_LIST_KICK"),identifier:"kick",iconName:"action_delete",destruct:true,color:"#df532d"})}}else if(this.base.userId!==s.id){if(e.extranet&&(e.external_auth_id==="imconnector"||e.external_auth_id==="call")){s.unselectable=true;s.type="info"}if(this.base.userId===this.base.dialogOwnerId){if(!e.extranet){s.actions.push({title:BX.message("IM_USER_LIST_OWNER"),identifier:"owner",color:"#aac337"})}s.actions.push({title:BX.message("IM_USER_LIST_KICK"),identifier:"kick",destruct:true,color:"#df532d"})}}}if(s.id===this.base.dialogOwnerId){s.styles.title.image={name:"name_status_owner"}}}t.push(s);return true}));this.base.items=t;ChatUserListInterface.setItems(t)}else{console.error("ChatUserList.rest.userListGet: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_API_ERROR"))}})).catch((e=>{let t=e.error();if(t.ex.error==="NO_INTERNET_CONNECTION"){console.error("ChatUserList.rest.userListGet - error: connection error",t.ex);this.base.alert(BX.message("IM_USER_CONNECTION_ERROR"))}else{console.error("ChatUserList.rest.userListGet - error: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_API_ERROR"))}}))};ChatUserList.init();
//# sourceMappingURL=component.map.js