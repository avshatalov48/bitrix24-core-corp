"use strict";if(typeof clearInterval=="undefined"){clearInterval=e=>clearTimeout(e)}if(typeof ChatUserSelector!="undefined"&&typeof ChatUserSelector.cleaner!="undefined"){ChatUserSelector.cleaner()}var ChatUserSelector={};ChatUserSelector.init=function(){this.userId=parseInt(BX.componentParameters.get("USER_ID",0));this.dialogId=BX.componentParameters.get("DIALOG_ID",0);let e=Application.storage.getObject("settings.chat",{historyShow:true});this.historyShow=e.historyShow;if(!this.dialogId){this.close();return false}this.searchMinTokenLength=BX.componentParameters.get("SEARCH_MIN_SIZE",3);let t=["base","event","rest","search"];t.forEach((e=>{if(typeof this[e]!="undefined"){t.forEach((t=>{if(t=="base"){this[e]["base"]=this}else if(e!=t){this[e][t]=this[t]}}))}}));ChatDataConverter.init({userId:this.userId,generalChatId:this.generalChatId});this.event.init();this.search.init();return true};ChatUserSelector.openDialog=function(e,t){console.log("ChatUserSelector.openDialog",e,t);BX.postComponentEvent("onOpenDialog",[{dialogId:e,dialogTitleParams:t},true],"im.recent");BX.postComponentEvent("ImMobile.Messenger.Dialog:open",[{dialogId:e,dialogTitleParams:t}],"im.messenger");this.close();return true};ChatUserSelector.alert=function(e){ChatUserSelectorInterface.showAlert(e);return true};ChatUserSelector.close=function(){ChatUserSelectorInterface.close();return true};ChatUserSelector.cleaner=function(){BX.listeners={};console.warn("ChatUserSelector.cleaner: OK")};ChatUserSelector.event={};ChatUserSelector.event.init=function(){this.debug=false;this.handlersList={onUserTypeText:this.onUserTypeText,onRecipientsReceived:this.onRecipientsReceived,onRecipientButtonSelected:this.onRecipientButtonSelected,onScopeSelected:this.onScopeSelected};ChatUserSelectorInterface.setListener(this.router.bind(this))};ChatUserSelector.event.router=function(e,t){if(this.handlersList[e]){if(e!="onUserTypeText"){console.log("ChatUserSelector.event.router: catch event - "+e,t)}this.handlersList[e].apply(this,[t])}else if(this.debug){console.info("ChatUserSelector.event.router: skipped event - "+e+" "+JSON.stringify(t))}};ChatUserSelector.event.onScopeSelected=function(e){console.log("ChatUserSelector.event.onScopeSelected",e);this.search.listType=e.id;ChatSearchScopes.setType(e.id);this.onUserTypeText({text:ChatSearchScopes.result.text})};ChatUserSelector.event.onUserTypeText=function(e){console.log("ChatUserSelector.event.onSearchText",e);let t=e.text.trim();if(!t){ChatSearchScopes.clear();this.search.drawStartList()}else{ChatSearchScopes.find(t)}};ChatUserSelector.event.onRecipientButtonSelected=function(e){console.log("ChatUserSelector.event.onRecipientButtonSelected",e);ChatSearchScopes.selectElement(e)};ChatUserSelector.event.onRecipientsReceived=function(e){console.log("ChatUserSelector.event.onRecipientsReceived",e);let t=[];let r=this.base.dialogId.toString().substr(0,4)=="chat";if(!r){t.push(ChatUserSelector.dialogId)}if(e){e.forEach((e=>{t.push(e.id)}))}if(r){this.rest.chatExtend({CHAT_ID:this.base.dialogId.toString().substr(4),USERS:t,HIDE_HISTORY:this.base.historyShow?"N":"Y"})}else{this.rest.chatAdd({USERS:t})}return true};ChatUserSelector.rest={};ChatUserSelector.rest.chatAdd=function(e){BX.rest.callMethod("im.chat.add",e).then((e=>{let t=parseInt(e.data());if(t>0){console.info("ChatUserSelector.rest.chatAdd: chat id:\n",e.data());this.base.openDialog("chat"+e.data(),false)}else{console.error("ChatUserSelector.rest.chatAdd: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_SELECTOR_API_ERROR"))}})).catch((e=>{let t=e.error();if(t.ex.error=="NO_INTERNET_CONNECTION"){console.error("ChatUserSelector.rest.chatAdd - error: connection error",t.ex);this.base.alert(BX.message("IM_USER_SELECTOR_CONNECTION_ERROR"))}else{console.error("ChatUserSelector.rest.chatAdd - error: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_SELECTOR_API_ERROR"))}}))};ChatUserSelector.rest.chatExtend=function(e){BX.rest.callMethod("im.chat.user.add",e).then((e=>{if(e.data()){console.info("ChatUserSelector.rest.chatExtend: success");this.base.close()}else{console.error("ChatUserSelector.rest.chatExtend: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_SELECTOR_API_ERROR"))}})).catch((e=>{let t=e.error();if(t.ex.error==="NO_INTERNET_CONNECTION"){console.error("ChatUserSelector.rest.chatExtend - error: connection error",t.ex);this.base.alert(BX.message("IM_USER_SELECTOR_CONNECTION_ERROR"))}else if(t.ex.error==="NOTHING_TO_ADD"||t.ex.error==="EMPTY_CHAT_ID"||t.ex.error==="EMPTY_USER_ID"||t.ex.error==="EMPTY_USER_ID_BY_PRIVACY"||t.ex.error==="AUTHORIZE_ERROR"){console.error("ChatUserSelector.rest.chatExtend - correct error",t.ex);this.base.alert(t.ex.error_description)}else{console.error("ChatUserSelector.rest.chatExtend - error: we have some problems on server\n",e.answer);this.base.alert(BX.message("IM_USER_SELECTOR_API_ERROR"))}}))};ChatUserSelector.search={};ChatUserSelector.search.init=function(){this.listType=ChatSearchScopes.TYPE_USER;this.listUsers=BX.componentParameters.get("LIST_USERS",[]);this.listDepartment=BX.componentParameters.get("LIST_DEPARTMENTS",[]);this.skipList=BX.componentParameters.get("SKIP_LIST",[]);ChatSearchScopes.init({listType:this.listType,dataConverterInited:true,minTokenLength:this.base.searchMinTokenLength,onDrawSearchResult:this.drawSearchResult.bind(this)});ChatSearchScopes.setList(this.listUsers,ChatSearchScopes.TYPE_USER);ChatSearchScopes.setList(this.listDepartment,ChatSearchScopes.TYPE_DEPARTMENT);ChatSearchScopes.setSkipList(this.skipList,ChatSearchScopes.TYPE_USER);ChatSearchScopes.setSkipByProperty([["network",true],["connector",true]],ChatSearchScopes.TYPE_USER);ChatSearchScopes.setMinTokenLength(1,ChatSearchScopes.TYPE_DEPARTMENT)};ChatUserSelector.search.drawSearchResult=function(e,t){console.log("ChatUserSelector.search.drawSearchResult",e);ChatUserSelectorInterface.setSearchResult(e,t)};ChatUserSelector.search.drawStartList=function(){console.log("ChatUserSelector.search.drawStartList");let e=[];let t={};if(this.listType==ChatSearchScopes.TYPE_USER){if(this.listUsers.length>0){this.listUsers.map((r=>{if(!r||t[r.id]){return false}let s=ChatDataConverter.getListElementByUser(r);e.push(s);t[s.id]=true;return true}))}e=e.filter((e=>this.skipList.indexOf(e.id)==-1))}else if(this.listType==ChatSearchScopes.TYPE_DEPARTMENT){if(this.listDepartment.length>0){this.listDepartment.map((r=>{if(!r||t[r.id]){return false}let s=ChatDataConverter.getListElementByDepartment(r);e.push(s);t[s.id]=true;return true}))}else{e.push({title:BX.message("IM_DEPARTMENT_START"),sectionCode:this.listType,type:"button",unselectable:true,params:{action:"empty"}})}}ChatUserSelectorInterface.setSearchResult(e,[])};ChatUserSelector.init();
//# sourceMappingURL=component.map.js