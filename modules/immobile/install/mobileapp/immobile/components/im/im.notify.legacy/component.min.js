"use strict";(()=>{class e{constructor(){console.log("Notify legacy is loaded.");let e=BX.componentParameters.get("MESSAGES",{});for(let t in e){if(e.hasOwnProperty(t)){BX.message[t]=e[t]}}BX.addCustomEvent("onChangeTitleProgress",(e=>this.updateTitle(e)));this.updateTitle();this.setTopMenu()}updateTitle(e=false){widget.setTitle({text:BX.message("COMPONENT_TITLE"),useProgress:e,largeMode:true})}setTopMenu(){let e=dialogs.createPopupMenu();e.setData([{id:"readAll",title:BX.message("IM_READ_ALL"),sectionCode:"general",iconName:"read"}],[{id:"general"}],((e,t)=>{if(e==="onItemSelected"&&t.id==="readAll"){this.readAll()}}));widget.setRightButtons([{type:"more",callback:()=>{e.show()}}])}readAll(){BX.rest.callMethod("im.notify.read.all").then((e=>{console.log("im.notify.read.all result:",e);BX.postWebEvent("onBeforeNotificationsReload",{})})).catch((e=>{console.log("im.notify.read.all error:",e)}));BX.postComponentEvent("chatdialog::notification::readAll",[],"im.recent")}}window.Notify=new e})();
//# sourceMappingURL=component.map.js