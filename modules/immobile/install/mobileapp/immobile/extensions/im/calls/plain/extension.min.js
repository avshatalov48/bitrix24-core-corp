"use strict";(function(){const e=function(){};const t={OfferToReceiveAudio:"true",OfferToReceiveVideo:"true"};const i=1e4;const n=5e3;const s=25e3;const o=5500;const a=Object.freeze({invite:"im.call.invite",cancel:"im.call.cancel",answer:"im.call.answer",decline:"im.call.decline",hangup:"im.call.hangup",ping:"im.call.ping",negotiationNeeded:"im.call.negotiationNeeded",connectionOffer:"im.call.connectionOffer",connectionAnswer:"im.call.connectionAnswer",iceCandidate:"im.call.iceCandidate"});const r={answer:"Call::answer",ping:"Call::ping",negotiationNeeded:"Call::negotiationNeeded",connectionOffer:"Call::connectionOffer",connectionAnswer:"Call::connectionAnswer",iceCandidate:"Call::iceCandidate",voiceStarted:"Call::voiceStarted",voiceStopped:"Call::voiceStopped",microphoneState:"Call::microphoneState",cameraState:"Call::cameraState",videoPaused:"Call::videoPaused",hangup:"Call::hangup",userInviteTimeout:"Call::userInviteTimeout",repeatAnswer:"Call::repeatAnswer"};class l{constructor(e){this.id=e.id;this.instanceId=e.instanceId;this.parentId=e.parentId;this.direction=e.direction;this.associatedEntity=e.associatedEntity||{};this.userId=parseInt(env.userId,10);this.initiatorId=e.initiatorId||"";this.users=BX.type.isArray(e.users)?e.users.filter((e=>e!=this.userId)):[];this.ready=false;this._joinStatus=BX.Call.JoinStatus.None;Object.defineProperty(this,"joinStatus",{get:this.getJoinStatus.bind(this),set:this.setJoinStatus.bind(this)});this._active=false;Object.defineProperty(this,"active",{get:this.getActive.bind(this),set:this.setActive.bind(this)});this.localStream=null;this.videoEnabled=!!e.videoEnabled;this.muted=e.muted===true;this.peers=[];this.signaling=new d({call:this});this.logToken=e.logToken||"";if(callEngine.getLogService()&&this.logToken){this.logger=new CallLogger(callEngine.getLogService(),this.logToken)}this.eventEmitter=new JNEventEmitter;e.events=e.events||{};if(e.events){for(let t in e.events){if(e.events.hasOwnProperty(t)){this.eventEmitter.on(t,e.events[t])}}}this.pingUsersInterval=setInterval(this.pingUsers.bind(this),n);this.pingBackendInterval=setInterval(this.pingBackend.bind(this),s);this.lastPingReceivedTimeout=null;this.created=new Date;this.initPeers()}initPeers(){this.users.forEach((e=>{e=parseInt(e,10);this.peers.push(this.createPeer(e))}))}inviteUsers(e={}){let t=e.users||this.peers.map((e=>e.userId));if(t.length===0){throw new Error("No users to invite")}this.ready=true;this.getLocalMedia().then((()=>this.getSignaling().inviteUsers({userIds:t,video:this.videoEnabled?"Y":"N"}))).then((e=>{for(let e=0;e<t.length;e++){let i=t[e];let n=this.getPeer(i);if(!n){n=this.createPeer(i);this.peers.push(n)}n.onInvited();this.joinStatus=BX.Call.JoinStatus.Local}}))}createPeer(e){e=parseInt(e,10);return new c({call:this,userId:e,ready:e==this.initiatorId,onStreamReceived:t=>{this.log("onStreamReceived; track kind: ",t.kind,"id: ",t.id);this.eventEmitter.emit(BX.Call.Event.onStreamReceived,[e,t])},onStreamRemoved:t=>{this.log("onStreamRemoved: ",t);this.eventEmitter.emit(BX.Call.Event.onStreamRemoved,[e])},onStateChanged:this._onPeerStateChanged.bind(this),onInviteTimeout:this._onPeerInviteTimeout.bind(this)})}getPeer(e){return this.peers.find((t=>t.userId==e))}getUsers(){let e={};this.peers.forEach((t=>e[t.userId]=t.calculatedState));return e}getJoinStatus(){return this._joinStatus}setJoinStatus(e){if(e==this._joinStatus){return}this._joinStatus=e;switch(this._joinStatus){case BX.Call.JoinStatus.Local:this.eventEmitter.emit(BX.Call.Event.onJoin,[{callId:this.id,local:true}]);break;case BX.Call.JoinStatus.Remote:this.eventEmitter.emit(BX.Call.Event.onJoin,[{callId:this.id,local:false}]);break;case BX.Call.JoinStatus.None:this.eventEmitter.emit(BX.Call.Event.onLeave,[{callId:this.id}]);break}}getActive(){return this._active}setActive(e){if(e===this._active){return}this._active=e;this.eventEmitter.emit(this.active?BX.Call.Event.onActive:BX.Call.Event.onInactive,[this.id])}isVideoEnabled(){return this.videoEnabled}setVideoEnabled(e){e=e===true;if(this.videoEnabled==e){return}this.videoEnabled=e;if(this.ready){if(this.videoEnabled){if(this.localStream.getVideoTracks().length>0){MediaDevices.startCapture();this.peers.forEach((e=>e.replaceMedia()));this.eventEmitter.emit(BX.Call.Event.onLocalMediaReceived,[this.localStream])}else{this.getLocalMedia().then((()=>{this.peers.forEach((e=>e.replaceMedia()))}))}}else{MediaDevices.stopCapture();this.peers.forEach((e=>e.replaceMedia()));this.eventEmitter.emit(BX.Call.Event.onLocalMediaStopped)}}this.signaling.sendCameraState(this.users,this.videoEnabled)}setVideoPaused(e){if(this.videoPaused==e){return}this.videoPaused=e;this.log("call setVideoPaused "+this.videoPaused.toString());if(this.localStream&&this.localStream.getVideoTracks().length>0){this.localStream.getVideoTracks().forEach((e=>e.enabled=!this.videoPaused));this.signaling.sendVideoPaused(this.users,this.videoPaused)}}switchCamera(){if(!this.videoEnabled||!this.localStream){return}MediaDevices.switchVideoSource()}isFrontCameraUsed(){return MediaDevices.cameraDirection==="front"}setMuted(e){e=!!e;if(this.muted==e){return}this.muted=e;if(this.localStream){var t=this.localStream.getAudioTracks();if(t[0]){t[0].enabled=!this.muted}}this.signaling.sendMicrophoneState(this.users,!this.muted)}isMuted(){return this.muted}log(){let e=CallUtil.getLogMessage.apply(CallUtil,arguments);if(console&&callEngine.debugFlag){let e=["Call log ["+CallUtil.getTimeForLog()+"]: "];console.log.apply(this,e.concat(Array.prototype.slice.call(arguments)))}if(this.logger){this.logger.log(e)}}on(e,t){this.eventEmitter.on(e,t);return this}off(e,t){if(this.eventEmitter){this.eventEmitter.off(e,t)}return this}getSignaling(){return this.signaling}getLocalMedia(){return new Promise((e=>{MediaDevices.getUserMedia({audio:true,video:this.videoEnabled}).then((t=>{if(this.videoEnabled){this.eventEmitter.emit(BX.Call.Event.onLocalMediaReceived,[t])}if(!this.videoEnabled&&this.localStream){this.eventEmitter.emit(BX.Call.Event.onLocalMediaStopped)}this.localStream=t;e()}))}))}isReady(){return this.ready}sendLocalStream(e){let t=this.getPeer(e);if(!t){return}if(!t.isReady()){return}t.sendMedia()}answer(e){if(!BX.type.isPlainObject(e)){e={}}if(this.direction!==BX.Call.Direction.Incoming){throw new Error("Only incoming call could be answered")}this.ready=true;this.videoEnabled=e.useVideo===true;this.enableMicAutoParameters=e.enableMicAutoParameters!==false;return new Promise(((e,t)=>{if(this.joinStatus!=BX.Call.JoinStatus.None){return t(new CallJoinedElseWhereError)}this.getLocalMedia().then((()=>{this.joinStatus=BX.Call.JoinStatus.Local;return this.sendAnswer()}),(e=>{this.eventEmitter.emit(BX.Call.Event.onCallFailure,[e])})).then((()=>e()))}))}sendAnswer(){this.signaling.sendAnswer()}addInvitedUsers(e){for(var t=0;t<e.length;t++){var i=parseInt(e[t]);if(i==this.userId){continue}let n=this.getPeer(i);if(n){if(n.calculatedState===BX.Call.UserState.Failed||n.calculatedState===BX.Call.UserState.Idle){n.onInvited()}}else{n=this.createPeer(i);this.peers.push(n);n.onInvited()}if(!this.users.includes(i)){this.users.push(i)}this.eventEmitter.emit(BX.Call.Event.onUserInvited,[{userId:i}])}}isAnyoneParticipating(){return this.peers.some((e=>e.isParticipating()))}decline(e,t){this.ready=false;let i={callId:this.id,callInstanceId:this.instanceId};if(typeof e!="undefined"){i.code=e}if(typeof t!="undefined"){i.reason=t}callEngine.getRestClient().callMethod(a.decline,i).then((()=>this.destroy()))}hangup(){if(!this.ready){let e=new Error("Hangup in wrong state");this.log(e);return}let e=new Error;e.name="Call stack:";this.log("Hangup received \n"+e.stack);this.ready=false;return new Promise(((e,t)=>{this.peers.forEach((e=>e.disconnect()));this.joinStatus=BX.Call.JoinStatus.None;this.signaling.sendHangup({userId:this.users})}))}pingUsers(){if(this.ready){this.signaling.sendPingToUsers({userId:this.users})}}pingBackend(){if(this.ready){this.signaling.sendPingToBackend()}}repeatAnswerEvents(){this.signaling.sendRepeatAnswer({userId:this.userId})}runCallback(e,t){}_onPullEvent(e,t,i){let n={"Call::answer":this._onPullEventAnswer.bind(this),"Call::hangup":this._onPullEventHangup.bind(this),"Call::ping":this._onPullEventPing.bind(this),"Call::negotiationNeeded":this._onPullEventNegotiationNeeded.bind(this),"Call::connectionOffer":this._onPullEventConnectionOffer.bind(this),"Call::connectionAnswer":this._onPullEventConnectionAnswer.bind(this),"Call::iceCandidate":this._onPullEventIceCandidate.bind(this),"Call::voiceStarted":this._onPullEventVoiceStarted.bind(this),"Call::voiceStopped":this._onPullEventVoiceStopped.bind(this),"Call::microphoneState":this._onPullEventMicrophoneState.bind(this),"Call::videoPaused":this._onPullEventVideoPaused.bind(this),"Call::usersJoined":this._onPullEventUsersJoined.bind(this),"Call::usersInvited":this._onPullEventUsersInvited.bind(this),"Call::userInviteTimeout":this._onPullEventUserInviteTimeout.bind(this),"Call::associatedEntityReplaced":this._onPullEventAssociatedEntityReplaced.bind(this),"Call::finish":this._onPullEventFinish.bind(this),[r.repeatAnswer]:this._onPullEventRepeatAnswer.bind(this)};if(n[e]){this.log("Signaling: "+e+"; Parameters: "+JSON.stringify(t));n[e].call(this,t)}}_onPullEventAnswer(e){let t=e.senderId;this.log("_onPullEventAnswer",t,this.userId);if(t==this.userId){return this._onPullEventAnswerSelf(e)}if(!this.ready){return}let i=this.getPeer(t);if(!i){return}i.setSignalingConnected(true);i.setReady(true);i.isLegacyMobile=e.isLegacyMobile===true;if(this.ready){i.sendMedia()}}_onPullEventAnswerSelf(e){if(e.callInstanceId===this.instanceId){return}this.log("Call was answered elsewhere");this.joinStatus=BX.Call.JoinStatus.Remote}_onPullEventHangup(e){let t=e.senderId;if(this.userId==t){if(this.instanceId!=e.callInstanceId){this.joinStatus=BX.Call.JoinStatus.None}return}let i=this.getPeer(t);if(!i){return}i.disconnect(e.code);i.setReady(false);if(e.code==603){i.setDeclined(true)}if(!this.isAnyoneParticipating()){this.hangup()}}_onPullEventPing(e){if(e.callInstanceId==this.instanceId){return}clearTimeout(this.lastPingReceivedTimeout);this.lastPingReceivedTimeout=setTimeout(this._onNoPingsReceived.bind(this),n*2.1);let t=e.senderId;if(this.userId==t&&!this.ready){this.joinStatus=BX.Call.JoinStatus.Remote;return}let i=this.getPeer(t);if(!i){return}i.setSignalingConnected(true);this.active=true}_onPullEventNegotiationNeeded(e){if(!this.ready){return}let t=this.getPeer(e.senderId);if(!t){return}t.setReady(true);if(e.restart){t.reconnect()}else{t.onNegotiationNeeded()}}_onPullEventConnectionOffer(e){if(!this.ready){return}let t=this.getPeer(e.senderId);if(!t){return}t.setReady(true);t.setUserAgent(e.userAgent);t.setConnectionOffer(e.connectionId,e.sdp,e.tracks)}_onPullEventConnectionAnswer(e){let t=this.getPeer(e.senderId);if(!this.ready){return}if(!t){return}let i=e.connectionId;t.setUserAgent(e.userAgent);t.setConnectionAnswer(i,e.sdp,e.tracks)}_onPullEventIceCandidate(e){if(!this.ready){return}let t=this.getPeer(e.senderId);let i;if(!t){return}try{i=e.candidates;for(var n=0;n<i.length;n++){t.addIceCandidate(e.connectionId,i[n])}}catch(e){this.log("Error parsing serialized candidate: ",e)}}_onPullEventVoiceStarted(e){}_onPullEventVoiceStopped(e){}_onPullEventMicrophoneState(e){this.eventEmitter.emit(BX.Call.Event.onUserMicrophoneState,[e.senderId,e.microphoneState])}_onPullEventVideoPaused(e){this.eventEmitter.emit(BX.Call.Event.onUserVideoPaused,[e.senderId,e.videoPaused])}_onPullEventUsersJoined(e){}_onPullEventUsersInvited(e){if(!this.ready){return}let t=e.users;this.addInvitedUsers(t)}_onPullEventUserInviteTimeout(e){this.log("__onPullEventUserInviteTimeout",e);var t=e.failedUserId;if(this.getPeer(t)){this.getPeer(t).onInviteTimeout(false)}}_onPullEventAssociatedEntityReplaced(e){}_onPullEventFinish(e){this.destroy()}_onPullEventRepeatAnswer(){if(this.ready){this.signaling.sendAnswer({userId:this.userId},true)}}_onPeerStateChanged(e){this.eventEmitter.emit(BX.Call.Event.onUserStateChanged,[e.userId,e.state,e.previousState,e.isLegacyMobile]);if(e.state==BX.Call.UserState.Failed||e.state==BX.Call.UserState.Unavailable){if(!this.isAnyoneParticipating()){this.hangup().then(this.destroy.bind(this)).catch((e=>{this.destroy()}))}}else if(e.state==BX.Call.UserState.Connected){this.signaling.sendMicrophoneState(e.userId,!this.muted);this.signaling.sendCameraState(e.userId,this.videoEnabled)}}_onPeerInviteTimeout(){}_onNoPingsReceived(){if(!this.ready){this.active=false;if(this._joinStatus==BX.Call.JoinStatus.Remote){this._joinStatus=BX.Call.JoinStatus.None}}}destroy(){this.ready=null;this._active=false;this._joinStatus=BX.Call.JoinStatus.None;this.peers.forEach((e=>e.destroy()));if(this.localStream){MediaDevices.stopStreaming();this.localStream=null}if(this.logger){this.logger.destroy();this.logger=null}clearTimeout(this.pingUsersInterval);clearTimeout(this.pingBackendInterval);clearTimeout(this.reinviteTimeout);clearTimeout(this.lastPingReceivedTimeout);this.eventEmitter.emit(BX.Call.Event.onDestroy,[{call:this}]);this.eventEmitter=null;if(this.signaling){this.signaling.call=null;this.signaling=null}}}class c{constructor(t={}){this.userId=t.userId;this.ready=!!t.ready;this.calling=false;this.inviteTimeout=false;this.declined=false;this.busy=false;this.call=t.call;this.userAgent="";this.isLegacyMobile=!!t.isLegacyMobile;this.peerConnection=null;this.pendingIceCandidates={};this.localIceCandidates=[];this.trackList={};this._incomingVideoTrack=null;this._incomingScreenTrack=null;Object.defineProperty(this,"incomingVideoTrack",{get:()=>this._incomingVideoTrack,set:e=>{if(this._incomingVideoTrack!=e){this._incomingVideoTrack=e;if(this._incomingScreenTrack){}else{if(this._incomingVideoTrack){this.callbacks.onStreamReceived(this._incomingVideoTrack)}else{this.callbacks.onStreamRemoved()}}}}});Object.defineProperty(this,"incomingScreenTrack",{get:()=>this._incomingScreenTrack,set:e=>{if(this._incomingScreenTrack!=e){this._incomingScreenTrack=e;if(this._incomingScreenTrack){this.callbacks.onStreamReceived(e)}else{if(this._incomingVideoTrack){this.callbacks.onStreamReceived(this._incomingVideoTrack)}else{this.callbacks.onStreamRemoved()}}}}});this.callbacks={onStateChanged:BX.type.isFunction(t.onStateChanged)?t.onStateChanged:e,onInviteTimeout:BX.type.isFunction(t.onInviteTimeout)?t.onInviteTimeout:e,onStreamReceived:BX.type.isFunction(t.onStreamReceived)?t.onStreamReceived:e,onStreamRemoved:BX.type.isFunction(t.onStreamRemoved)?t.onStreamRemoved:e,onRTCStatsReceived:BX.type.isFunction(t.onRTCStatsReceived)?t.onRTCStatsReceived:e};this._onPeerConnectionIceCandidateHandler=this._onPeerConnectionIceCandidate.bind(this);this._onPeerConnectionIceConnectionStateChangeHandler=this._onPeerConnectionIceConnectionStateChange.bind(this);this._onPeerConnectionIceGatheringStateChangeHandler=this._onPeerConnectionIceGatheringStateChange.bind(this);this._onPeerConnectionNegotiationNeededHandler=this._onPeerConnectionNegotiationNeeded.bind(this);this._onPeerConnectionTrackHandler=this._onPeerConnectionTrack.bind(this);this._onPeerConnectionRemoveTrackHandler=this._onPeerConnectionRemoveTrack.bind(this);this._onPeerConnectionAddStreamHandler=this._onPeerConnectionAddStream.bind(this);this._onPeerConnectionRemoveStreamHandler=this._onPeerConnectionRemoveStream.bind(this);this._onPeerConnectionSignalingStateChangeHandler=CallUtil.debounce(this._onPeerConnectionSignalingStateChange.bind(this),100);this.answerTimeout=null;this.callingTimeout=null;this.connectionTimeout=null;this.signalingConnectionTimeout=null;this.candidatesTimeout=null;this.connectionAttempt=0}setReady(e){if(this.ready==e){return}this.ready=e;if(this.ready){this.declined=false;this.busy=false}if(this.calling){clearTimeout(this.callingTimeout);this.calling=false}this.updateCalculatedState()}setDeclined(e){this.declined=e;if(this.calling){clearTimeout(this.callingTimeout);this.calling=false}this.updateCalculatedState()}onInvited(){this.ready=false;this.inviteTimeout=false;this.declined=false;this.calling=true;if(this.callingTimeout){clearTimeout(this.callingTimeout)}this.callingTimeout=setTimeout((()=>this.onInviteTimeout(true)),3e4);this.updateCalculatedState()}onInviteTimeout(e){clearTimeout(this.callingTimeout);this.calling=false;this.inviteTimeout=true;if(e){this.callbacks.onInviteTimeout({userId:this.userId})}this.updateCalculatedState()}setSignalingConnected(e){}setUserAgent(e){this.userAgent=e;this.isLegacyMobile=e==="Bitrix Legacy Mobile"}isReady(){return this.ready}isInitiator(){return this.call&&this.call.userId<this.userId}updateCalculatedState(){var e=this.calculateState();if(this.calculatedState!=e){this.callbacks.onStateChanged({userId:this.userId,state:e,previousState:this.calculatedState,isLegacyMobile:this.isLegacyMobile});this.calculatedState=e}}calculateState(){if(this.peerConnection){if(this.peerConnection.iceConnectionState==="connected"||this.peerConnection.iceConnectionState==="completed"){return BX.Call.UserState.Connected}return BX.Call.UserState.Connecting}else{if(this.failureReason){return BX.Call.UserState.Failed}}if(this.calling){return BX.Call.UserState.Calling}if(this.inviteTimeout){return BX.Call.UserState.Unavailable}if(this.declined){return BX.Call.UserState.Declined}if(this.busy){return BX.Call.UserState.Busy}if(this.ready){return BX.Call.UserState.Ready}return BX.Call.UserState.Idle}isParticipating(){if(this.calling){return true}if(this.declined||this.busy){return false}if(this.peerConnection){var e=this.peerConnection.iceConnectionState;if(e=="checking"||e=="connected"||e=="completed"){return true}}return false}isRenegotiationSupported(){return true}getSignaling(){return this.call?this.call.signaling:null}log(){this.call&&this.call.log.apply(this.call,arguments)}sendIceCandidates(){if(this.candidatesTimeout){clearTimeout(this.candidatesTimeout);this.candidatesTimeout=null}if(!this.call){return}this.log("User "+this.userId+": sending ICE candidates due to the timeout");if(this.localIceCandidates.length>0){this.getSignaling().sendIceCandidate({userId:this.userId,connectionId:this.peerConnection._id,candidates:this.localIceCandidates});this.localIceCandidates=[]}else{this.log("User "+this.userId+": ICE candidates pool is empty")}}sendMedia(){if(this.peerConnection){this.log("Error: Peer connection already exists");return}if(!this.call.localStream){this.log(new Error("Local media stream is not found"))}if(this.isInitiator()){let e=callEngine.getUuidv4();this._createPeerConnection(e);this.call.localStream.getTracks().forEach((e=>this.peerConnection.addTrack(e,this.call.localStream)));this.createAndSendOffer()}else{this.sendNegotiationNeeded()}}updateOutgoingTracks(){let e=this.call.videoEnabled&&this.call.localStream.getVideoTracks()[0];let t=this.call.localStream.getAudioTracks()[0];let i=this.peerConnection.getSenders().find((e=>e.track&&e.track.kind=="video"));if(i&&e){}if(!i&&e){this.peerConnection.addTrack(e,this.call.localStream)}if(i&&!e){this.peerConnection.removeTrack(i)}let n=this.peerConnection.getSenders().find((e=>e.track&&e.track.kind=="audio"));if(n&&t){}if(!n&&t){this.peerConnection.addTrack(t,this.call.localStream)}if(n&&!t){this.peerConnection.removeTrack(n)}}replaceMedia(){if(!this.isReady()){return}if(this.isRenegotiationSupported()){this.updateOutgoingTracks();this.createAndSendOffer()}else{this.reconnect()}}setConnectionOffer(e,t,i){this.log("User "+this.userId+": received connection offer for connection "+e);clearTimeout(this.negotiationNeededReplyTimeout);this.negotiationNeededReplyTimeout=null;if(!this.call.isReady()){return}this.setReady(true);if(i){this.trackList=CallUtil.array_flip(i)}if(this.peerConnection){if(this.peerConnection._id!==e){this._destroyPeerConnection();this._createPeerConnection(e)}}else{this._createPeerConnection(e)}this.applyOfferAndSendAnswer(t)}createAndSendOffer(e){let i=Object.assign({},t,e);this.peerConnection.createOffer(i).then((e=>{this.log("User "+this.userId+": Created connection offer.");this.log("Applying local description");this.pendingLocalDescription=e;this.sendOffer()}))}sendOffer(){let e=this.peerConnection._id;clearTimeout(this.connectionOfferReplyTimeout);this.connectionOfferReplyTimeout=setTimeout((()=>this._onConnectionOfferReplyTimeout(e)),i);this.getSignaling().sendConnectionOffer({userId:this.userId,connectionId:e,sdp:this.pendingLocalDescription.sdp,userAgent:"Bitrix Mobile"})}onNegotiationNeeded(){if(this.peerConnection){if(this.peerConnection.signalingState=="have-local-offer"){this.sendOffer()}else{this.createAndSendOffer({iceRestart:true})}}else{this.sendMedia()}}sendNegotiationNeeded(e){e=e===true;clearTimeout(this.negotiationNeededReplyTimeout);this.negotiationNeededReplyTimeout=setTimeout((()=>this._onNegotiationNeededReplyTimeout()),i);let t={userId:this.userId};if(e){t.restart=true}this.getSignaling().sendNegotiationNeeded(t)}applyOfferAndSendAnswer(e){let t={type:"offer",sdp:e};this.log("User: "+this.userId+"; Applying remote offer");this.log("User: "+this.userId+"; Peer ice connection state ",this.peerConnection.iceConnectionState);this.peerConnection.setRemoteDescription(t).then((()=>{if(this.peerConnection.iceConnectionState==="new"){this.call.localStream.getTracks().forEach((e=>this.peerConnection.addTrack(e,this.call.localStream)))}return this.peerConnection.createAnswer()})).then((e=>{this.log("Created connection answer.");this.log("Applying local description.");return this.peerConnection.setLocalDescription(e)})).then((()=>{this.applyPendingIceCandidates();this.getSignaling().sendConnectionAnswer({userId:this.userId,connectionId:this.peerConnection._id,sdp:this.peerConnection.localDescription().sdp,userAgent:"Bitrix Mobile"})})).catch((e=>{this.failureReason=e.toString();this.updateCalculatedState();this.log("Could not apply remote offer",e);console.error("Could not apply remote offer",e)}))}setConnectionAnswer(e,t,i){if(!this.peerConnection){return}clearTimeout(this.connectionOfferReplyTimeout);if(this.peerConnection._id!=e){this.log("Could not apply answer, for unknown connection "+e);return}if(i){this.trackList=CallUtil.array_flip(i)}let n={type:"answer",sdp:t};if(this.peerConnection.signalingState!=="have-local-offer"&&!this.pendingLocalDescription){this.log("Could not apply answer, wrong peer connection signaling state "+this.peerConnection.signalingState);return}this.log("User: "+this.userId+"; Applying remote answer");this.maybeSetPendingLocalOffer().then((()=>this.peerConnection.setRemoteDescription(n))).then((()=>this.applyPendingIceCandidates())).catch((e=>{this.failureReason=e.toString();this.updateCalculatedState();this.log(e)}))}maybeSetPendingLocalOffer(){return new Promise(((e,t)=>{if(this.pendingLocalDescription){this.peerConnection.setLocalDescription(this.pendingLocalDescription).then((()=>{this.pendingLocalDescription=null;e()})).catch((e=>t(e)))}else{e()}}))}addIceCandidate(e,t){if(!this.peerConnection){return}if(this.peerConnection._id!=e){this.log("Error: Candidate for unknown connection "+e);return}if(this.peerConnection.remoteDescription()&&this.peerConnection.remoteDescription().type){this.peerConnection.addIceCandidate(t).then((()=>{this.log("User: "+this.userId+"; Added remote ICE candidate: "+(t?t.candidate:t))})).catch((e=>{this.log(e)}))}else{if(!this.pendingIceCandidates[e]){this.pendingIceCandidates[e]=[]}this.pendingIceCandidates[e].push(t)}}applyPendingIceCandidates(){if(!this.peerConnection||!this.peerConnection.remoteDescription().type){return}var e=this.peerConnection._id;if(BX.type.isArray(this.pendingIceCandidates[e])){this.pendingIceCandidates[e].forEach((e=>{this.peerConnection.addIceCandidate(e).then((()=>{this.log("User: "+this.userId+"; Added remote ICE candidate: "+(e?e.candidate:e))}))}));this.pendingIceCandidates[e]=[]}}updateCandidatesTimeout(){if(this.candidatesTimeout){clearTimeout(this.candidatesTimeout)}this.candidatesTimeout=setTimeout(this.sendIceCandidates.bind(this),500)}reconnect(){clearTimeout(this.reconnectAfterDisconnectTimeout);this.connectionAttempt++;if(!this.call){return}if(this.connectionAttempt>3){this.log("Error: Too many reconnection attempts, giving up");this.failureReason="Could not connect to user in time";this._destroyPeerConnection();this.updateCalculatedState();return}console.trace("Trying to restore ICE connection. Attempt "+this.connectionAttempt);this.log("Trying to restore ICE connection. Attempt "+this.connectionAttempt);if(this.isInitiator()){this._destroyPeerConnection();this.sendMedia()}else{this.sendNegotiationNeeded(true)}}_createPeerConnection(e){const t=BX.componentParameters.get("turnServer","");const i=BX.componentParameters.get("turnServerLogin","");const n=BX.componentParameters.get("turnServerPassword","");let s={iceServers:[{urls:["stun:"+t],username:i,credential:n},{urls:["turn:"+t],username:i,credential:n}]};this.log("creating peer connection "+e);this.localIceCandidates=[];this.peerConnection=new RTCPeerConnection(s);this.peerConnection._id=e;this.peerConnection.on(JNRTCPeerConnection.Events.IceCandidate,this._onPeerConnectionIceCandidateHandler);this.peerConnection.on(JNRTCPeerConnection.Events.IceConnectionStateChange,this._onPeerConnectionIceConnectionStateChangeHandler);this.peerConnection.on(JNRTCPeerConnection.Events.IceGatheringStateChange,this._onPeerConnectionIceGatheringStateChangeHandler);this.peerConnection.on(JNRTCPeerConnection.Events.NegotiationNeeded,this._onPeerConnectionNegotiationNeededHandler);this.peerConnection.on(JNRTCPeerConnection.Events.Track,this._onPeerConnectionTrackHandler);this.peerConnection.on(JNRTCPeerConnection.Events.RemoveTrack,this._onPeerConnectionRemoveTrackHandler);this.peerConnection.on(JNRTCPeerConnection.Events.AddStream,this._onPeerConnectionAddStreamHandler);this.peerConnection.on(JNRTCPeerConnection.Events.RemoveStream,this._onPeerConnectionRemoveStreamHandler);this.peerConnection.on(JNRTCPeerConnection.Events.SignalingStateChange,this._onPeerConnectionSignalingStateChangeHandler)}_destroyPeerConnection(){if(!this.peerConnection){return}var e=this.peerConnection._id;this.log("User "+this.userId+": Destroying peer connection "+e);this.peerConnection.off(JNRTCPeerConnection.Events.IceCandidate,this._onPeerConnectionIceCandidateHandler);this.peerConnection.off(JNRTCPeerConnection.Events.IceConnectionStateChange,this._onPeerConnectionIceConnectionStateChangeHandler);this.peerConnection.off(JNRTCPeerConnection.Events.IceGatheringStateChange,this._onPeerConnectionIceGatheringStateChangeHandler);this.peerConnection.off(JNRTCPeerConnection.Events.NegotiationNeeded,this._onPeerConnectionNegotiationNeededHandler);this.peerConnection.off(JNRTCPeerConnection.Events.Track,this._onPeerConnectionTrackHandler);this.peerConnection.off(JNRTCPeerConnection.Events.RemoveStream,this._onPeerConnectionRemoveStreamHandler);this.peerConnection.off(JNRTCPeerConnection.Events.SignalingStateChange,this._onPeerConnectionSignalingStateChangeHandler);this.localIceCandidates=[];if(this.pendingIceCandidates[e]){delete this.pendingIceCandidates[e]}this.peerConnection.close();this.peerConnection=null}_hasIncomingVideo(){if(!this.peerConnection){return false}return this.peerConnection.getTransceivers().some((e=>(e.currentDirection=="sendrecv"||e.currentDirection=="recvonly")&&(e.receiver&&e.receiver.track&&e.receiver.track.kind==="video")))}_onPeerConnectionIceCandidate(e){this.log("User "+this.userId+": ICE candidate discovered. Candidate: "+JSON.stringify(e));if(e){this.getSignaling().getPublishingState().then((t=>{if(t){this.getSignaling().sendIceCandidate({userId:this.userId,connectionId:this.peerConnection._id,candidates:[e]})}else{this.localIceCandidates.push(e);this.updateCandidatesTimeout()}})).catch((e=>console.error(e)))}}_onPeerConnectionIceConnectionStateChange(){this.log("User "+this.userId+": ICE connection state changed. New state: "+this.peerConnection.iceConnectionState);if(this.peerConnection.iceConnectionState==="connected"||this.peerConnection.iceConnectionState==="completed"){this.connectionAttempt=0;this.failureReason="";clearTimeout(this.reconnectAfterDisconnectTimeout)}else if(this.peerConnection.iceConnectionState==="failed"){this.log("ICE connection failed. Trying to restore connection immediately");this.reconnect()}else if(this.peerConnection.iceConnectionState==="disconnected"){this.log("ICE connection lost. Waiting 5 seconds before trying to restore it");clearTimeout(this.reconnectAfterDisconnectTimeout);this.reconnectAfterDisconnectTimeout=setTimeout((()=>this.reconnect()),5e3)}this.updateCalculatedState()}_onPeerConnectionIceGatheringStateChange(){}_onPeerConnectionNegotiationNeeded(){this.log("_onPeerConnectionNegotiationNeeded")}_getTrackMid(e){if(!this.peerConnection){return null}let t=this.peerConnection.getTransceivers().find((t=>t.receiver&&t.receiver.track&&t.receiver.track.id==e));if(!t){return null}return t.mid}_onPeerConnectionTrack(e){let{track:t}=e;this.log("_onPeerConnectionTrack; kind: ",t.kind,"id: ",t.id)}_onPeerConnectionRemoveTrack(e){let{track:t}=e;this.call.log("_onPeerConnectionRemoveTrack; kind: ",t.kind,"id: ",t.id)}_onPeerConnectionAddStream(e){this.call.log("_onPeerConnectionAddStream",e)}_onPeerConnectionRemoveStream(e){this.call.log("_onPeerConnectionRemoveStream",e)}_onPeerConnectionSignalingStateChange(){let e=null;let t=null;if(this.peerConnection.signalingState=="stable"){this.peerConnection.getTransceivers().forEach((i=>{if((i.currentDirection=="sendrecv"||i.currentDirection=="recvonly")&&(i.receiver&&i.receiver.track)){let n=i.receiver.track;console.log(`track received. mid: ${i.mid} kind: ${n.kind}`);if(n.kind==="audio"){}if(n.kind==="video"){if(this.trackList[i.mid]==="screen"){e=n}else{t=n}}}}))}this.incomingScreenTrack=e;this.incomingVideoTrack=t}stopSignalingTimeout(){clearTimeout(this.signalingConnectionTimeout)}refreshSignalingTimeout(){clearTimeout(this.signalingConnectionTimeout);this.signalingConnectionTimeout=setTimeout(this._onLostSignalingConnection.bind(this),signalingConnectionRefreshPeriod)}_onLostSignalingConnection(){this.setSignalingConnected(false)}_onConnectionOfferReplyTimeout(e){this.log("did not receive connection answer for connection "+e);this.reconnect()}_onNegotiationNeededReplyTimeout(){this.log("did not receive connection offer in time");this.reconnect()}disconnect(){clearTimeout(this.reconnectAfterDisconnectTimeout);this._destroyPeerConnection()}destroy(){this._destroyPeerConnection();clearTimeout(this.answerTimeout);this.answerTimeout=null;clearTimeout(this.connectionTimeout);this.connectionTimeout=null;clearTimeout(this.signalingConnectionTimeout);this.signalingConnectionTimeout=null;clearTimeout(this.reconnectAfterDisconnectTimeout);this.reconnectAfterDisconnectTimeout=null;this.callbacks.onStateChanged=e;this.callbacks.onStreamReceived=e;this.callbacks.onStreamRemoved=e;this.call=null}}class d{constructor(e){this.call=e.call}isIceTricklingAllowed(){return this.isPublishingSupported()}getPublishingState(){return BX.PULL.getPublishingState()}inviteUsers(e){return this.__runRestAction(a.invite,e)}sendAnswer(e,t){if(t){this.__sendPullEventOrCallRest(r.answer,a.answer,e,30)}else{return this.__runRestAction(a.answer,e)}}sendConnectionOffer(e){this.__sendPullEventOrCallRest(r.connectionOffer,a.connectionOffer,e,0)}sendConnectionAnswer(e){this.__sendPullEventOrCallRest(r.connectionAnswer,a.connectionAnswer,e,0)}sendIceCandidate(e){this.__sendPullEventOrCallRest(r.iceCandidate,a.iceCandidate,e,0)}sendNegotiationNeeded(e){this.__sendPullEventOrCallRest(r.negotiationNeeded,a.negotiationNeeded,e,0)}sendVoiceStarted(e){this.__sendPullEventOrCallRest(r.voiceStarted,"",e,0)}sendVoiceStopped(e){this.__sendPullEventOrCallRest(r.voiceStopped,"",e,0)}sendMicrophoneState(e,t){this.__sendPullEventOrCallRest(r.microphoneState,"",{userId:e,microphoneState:t},0)}sendCameraState(e,t){this.__sendPullEventOrCallRest(r.cameraState,"",{userId:e,cameraState:t},0)}sendVideoPaused(e,t){this.__sendPullEventOrCallRest(r.videoPaused,"",{userId:e,videoPaused:t},0)}sendPingToUsers(e){this.__sendPullEventOrCallRest(r.ping,"",e,0)}sendRepeatAnswer(e){this.__sendPullEvent(r.repeatAnswer,e)}sendPingToBackend(){BX.PULL.getPublishingState().then((e=>{let t=!e;this.__runRestAction(a.ping,{retransmit:t})}))}sendUserInviteTimeout(e){this.__sendPullEventOrCallRest(r.userInviteTimeout,"",e,0)}sendHangup(e){this.getPublishingState().then((t=>{if(t){this.__sendPullEvent(r.hangup,e);let t=Object.assign({},e);t.retransmit=false;return this.__runRestAction(a.hangup,t)}else{e.retransmit=true;return this.__runRestAction(a.hangup,e)}}))}__sendPullEventOrCallRest(e,t,i,n){this.getPublishingState().then((s=>{if(s){this.__sendPullEvent(e,i,n)}else if(t!=""){this.__runRestAction(t,i)}})).catch((e=>{console.error(e);this.call.log("__sendPullEventOrCallRest error: ",e)}))}__sendPullEvent(e,t,i){i=i||5;if(!t.userId){throw new Error("userId is not found in data")}if(!BX.type.isArray(t.userId)){t.userId=[t.userId]}t.callInstanceId=this.call.instanceId;t.senderId=this.call.userId;t.callId=this.call.id;t.requestId=callEngine.getUuidv4();this.call.log("Sending p2p signaling event "+e+"; "+JSON.stringify(t));BX.PULL.sendMessage(t.userId,"im",e,t,i)}__runRestAction(e,t){if(!BX.type.isPlainObject(t)){t={}}t.callId=this.call.id;t.callInstanceId=this.call.instanceId;t.requestId=callEngine.getUuidv4();this.call.log("Sending ajax-based signaling event "+e+"; "+JSON.stringify(t));return callEngine.getRestClient().callMethod(e,t).catch((function(e){console.error(e)}))}}window.PlainCall=l;window.PlainCallPeer=c})();
//# sourceMappingURL=extension.map.js