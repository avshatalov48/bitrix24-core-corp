jn.define("im/messenger/controller/dialog-selector",((e,t,s)=>{const{Type:i}=jn.require("type");const{Loc:r}=jn.require("loc");const{Controller:o}=jn.require("im/messenger/controller/base");const{ChatSelector:n}=jn.require("im/chat/selector/chat");const{Logger:c}=jn.require("im/messenger/lib/logger");const{EventType:a}=jn.require("im/messenger/const");const{SearchConverter:l}=jn.require("im/messenger/lib/converter");const{MessengerParams:d}=jn.require("im/messenger/lib/params");class h extends o{constructor(e={}){super(e);if(e.view){this.view=e.view}else{throw new Error("DialogSelector: options.view is required")}this.view.on(a.recent.scopeSelected,this.view.onScopeSelected.bind(this.view));this.view.on(a.recent.userTypeText,this.view.onUserTypeText.bind(this.view));this.view.on(a.recent.searchItemSelected,this.view.onSearchItemSelected.bind(this.view));this.view.on(a.recent.searchSectionButtonClick,this.view.searchSectionButtonClick.bind(this.view))}open(){const e={context:"IM_CHAT_SEARCH",ui:this.view,providerOptions:{minSearchSize:d.get("MIN_SEARCH_SIZE",3)},isNetworkSearchAvailable:d.get("IS_NETWORK_SEARCH_AVAILABLE",false)};const t=this.getUserCarouselItem();if(i.isArrayFilled(t.childItems)){e.providerOptions.customItems=[t]}this.selector=new n(e);this.selector.setSingleChoose(true).open();this.selector.onResult=e=>{this.selector.resolve(e);c.info("Chat selected",e);const t={dialogId:e.id,dialogTitleParams:{name:e.name,description:e.description,avatar:e.avatar,color:e.color}};if(e.customData["imChat"]){t.dialogTitleParams.chatType=e.customData["imChat"].TYPE;if(t.dialogTitleParams.chatType==="lines"){t.dialogTitleParams.description=r.getMessage("MOBILE_EXT_CHAT_SELECTOR_LINES_SUBTITLE")}else if(e.customData["imChat"].TYPE==="open"){t.dialogTitleParams.description=r.getMessage("MOBILE_EXT_CHAT_SELECTOR_CHANNEL_SUBTITLE")}else{t.dialogTitleParams.description=r.getMessage("MOBILE_EXT_CHAT_SELECTOR_GROUP_SUBTITLE")}}this.emitMessengerEvent(a.messenger.openDialog,t)}}getUserCarouselItem(){const e=ChatUtils.objectClone(MessengerStore.getters["recentModel/getUserList"]);const t={};const s={};const r=[];if(i.isArrayFilled(e)){e.forEach((e=>{if(e.user.id===d.getUserId()||e.user.bot||e.invited){s[e.user.id]=true;return}t[e.user.id]=true;r.push(l.toUserCarouselItem(e.user))}))}const o=ChatUtils.objectClone(MessengerStore.getters["usersModel/getUserList"]);if(i.isArrayFilled(o)){o.forEach((e=>{if(t[e.id]||e.id===d.getUserId()||e.bot||s[e.id]){return}r.push(l.toUserCarouselItem(e))}))}return{type:"carousel",sectionCode:"custom",childItems:r,hideBottomLine:true}}}s.exports={DialogSelector:h}}));
//# sourceMappingURL=extension.map.js