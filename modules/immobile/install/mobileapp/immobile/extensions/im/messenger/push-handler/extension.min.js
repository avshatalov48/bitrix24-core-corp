jn.define("im/messenger/push-handler",((e,s,t)=>{const{Type:a}=jn.require("type");const{Logger:n}=jn.require("im/messenger/lib/logger");const{MessengerEvent:r}=jn.require("im/messenger/lib/event");const{MessengerParams:i}=jn.require("im/messenger/lib/params");const{EventType:o}=jn.require("im/messenger/const");class g{constructor(){this.manager=Application.getNotificationHistory("im_message");this.manager.setOnChangeListener(this.handleChange.bind(this));this.storedPullEvents=[]}getStoredPullEvents(){const e=[].concat(this.storedPullEvents);this.storedPullEvents=[];return e}handleChange(){BX.onViewLoaded((()=>{this.updateList()}))}updateList(){const e=this.manager.get();if(!e||!e["IM_MESS"]||e["IM_MESS"].length<=0){n.info("PushHandler.updateList: list is empty");return true}n.info("PushHandler.updateList: parse push messages",e["IM_MESS"]);const s=MessengerStore.getters["applicationModel/isDialogOpen"];e["IM_MESS"].forEach((e=>{if(!e.data){return false}if(!(e.data.cmd==="message"||e.data.cmd==="messageChat")){return false}let t="";if(!a.isUndefined(e.senderMessage)){t=e.senderMessage}else if(!a.isUndefined(e.aps)&&e.aps.alert.body){t=e.aps.alert.body}if(!t){return false}const n={module_id:"im",command:e.data.cmd,params:ChatDataConverter.preparePushFormat(e.data)};n.params.userInChat[n.params.chatId]=[i.getUserId()];n.params.message.text=t.toString().replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");if(e.senderCut){n.params.message.text=n.params.message.text.substring(e.senderCut)}if(!n.params.message.textOriginal){n.params.message.textOriginal=n.params.message.text}const r=ChatUtils.objectClone(n.params);if(r.message.params.FILE_ID&&r.message.params.FILE_ID.length>0){r.message.text="";r.message.textOriginal=""}if(s){BX.postWebEvent("chatrecent::push::get",r)}else{this.storedPullEvents=this.storedPullEvents.filter((e=>e.message.id!==r.message.id));this.storedPullEvents.push(r)}const o=MessengerStore.getters["recentModel/getById"](n.params.dialogId);if(!o||o.message.id<n.params.message.id){BX.PULL.emit({type:"server",moduleId:n.module_id,data:{command:n.command,params:n.params,extra:e.extra}})}}));this.manager.clear();return true}executeAction(){if(Application.isBackground()){return false}const e=Application.getLastNotification();if(a.isPlainObject(e)&&Object.keys(e).length===0){return false}n.info("PushHandler.executeAction: execute push-notification",e);const s=ChatDataConverter.getPushFormat(e);if(s.ACTION&&s.ACTION.substring(0,8)==="IM_MESS_"){const e=parseInt(s.ACTION.substring(8));if(e>0){new r(o.messenger.openDialog,{dialogId:e}).send()}return}if(s.ACTION&&s.ACTION.substring(0,8)==="IM_CHAT_"){if(i.isOpenlinesOperator()&&s.CHAT_TYPE==="L"){if(!PageManager.getNavigator().isActiveTab()){PageManager.getNavigator().makeTabActive()}BX.postComponentEvent("onTabChange",["openlines"],"im.navigation");return false}const e=parseInt(s.ACTION.substring(8));if(e>0){new r(o.messenger.openDialog,{dialogId:"chat"+e}).send()}return}if(s.ACTION&&s.ACTION==="IM_NOTIFY"){new r(o.messenger.openNotifications).send()}return true}clearHistory(){this.manager.clear()}}t.exports={PushHandler:new g}}));
//# sourceMappingURL=extension.map.js