jn.define("im/messenger/lib/integration/immobile/calls",((e,s,t)=>{const{Logger:o}=jn.require("im/messenger/lib/logger");const{DialogHelper:l}=jn.require("im/messenger/lib/helper");class n{createAudioCall(e){o.info("Calls.createAudioCall",e);if(l.isDialogId(e)){const s={dialogId:e,video:false,chatData:MessengerStore.getters["dialoguesModel/getById"](e)};BX.postComponentEvent("onCallInvite",[s],"calls");return}const s=MessengerStore.getters["usersModel/getUserById"](e);const t={userId:e,video:false,userData:{[s.id]:s}};BX.postComponentEvent("onCallInvite",[t],"calls")}createVideoCall(e){o.info("Calls.createVideoCall",e);if(l.isDialogId(e)){const s={dialogId:e,video:true,chatData:MessengerStore.getters["dialoguesModel/getById"](e)};BX.postComponentEvent("onCallInvite",[s],"calls");return}const s=MessengerStore.getters["usersModel/getUserById"](e);const t={userId:e,video:true,userData:{[e]:s}};BX.postComponentEvent("onCallInvite",[t],"calls")}}t.exports={Calls:new n}}));
//# sourceMappingURL=extension.map.js