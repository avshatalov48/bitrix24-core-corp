(()=>{var t={listView:{backgroundColor:"#ffffff",flex:1}};this.NewNotificationsComponent=class e extends LayoutComponent{constructor(t){super(t);this.userId=parseInt(BX.componentParameters.get("USER_ID",0));this.largeTitle=BX.componentParameters.get("LARGE_TITLE",true);this.storage=Application.sharedStorage(`notify_${this.userId}`);this.perPage=50;this.initialDataReceived=false;this.users={};this.notificationsToRead=new Set;this.tempNotificationsToRead=new Set;this.lastId=0;this.lastType=Const.NotificationTypes.confirm;this.isLoadingNewPage=false;this.notificationsToDelete=[];this.firstUnreadNotificationOnInit=null;this.state={total:0,unreadCounter:0,collection:[],isRefreshing:false};this.readNotificationsQueue=new Set}initPullHandler(){BX.PULL.subscribe(new ImMobileNotificationsPullHandler({application:this}));BX.addCustomEvent("notification::push::get",(t=>{BX.PULL.emit({type:BX.PullClient.SubscriptionType.Server,moduleId:"im",data:{command:"notifyAdd",params:t}})}));let t=BX.componentParameters.get("STORED_EVENTS",[]);if(t.length>0){t=t.sort(Utils.sortByType);t=t.slice(0,50);setTimeout((()=>{t=t.filter((t=>{BX.onCustomEvent("notification::push::get",[t]);return false}))}),50)}}componentDidMount(){this.initPullHandler();const t=this.storage.get("collection");const e=!!t;layoutWidget.setTitle({text:BX.message("IM_NOTIFY_TITLE"),useProgress:true,largeMode:this.largeTitle});if(e){this.getInitialData()}else{this.drawPlaceholders().then((()=>{this.getInitialData()}))}BX.addCustomEvent("onAppActiveBefore",(()=>{BX.onViewLoaded((()=>{this.getInitialData()}))}));BX.addCustomEvent("onViewShown",(()=>{if(this.initialDataReceived){layoutWidget.setTitle({text:BX.message("IM_NOTIFY_TITLE"),useProgress:true,largeMode:this.largeTitle});this.getInitialStateFromServer().then((t=>{console.log("onViewShown: setState",t);this.setState(t);layoutWidget.setTitle({text:BX.message("IM_NOTIFY_TITLE"),useProgress:false,largeMode:this.largeTitle})})).catch((t=>{console.log(t);layoutWidget.setTitle({text:BX.message("IM_NOTIFY_TITLE"),useProgress:false,largeMode:this.largeTitle})}))}}));this.readVisibleNotificationsDelayed=ChatUtils.debounce(this.readVisibleNotifications,50,this)}drawPlaceholders(){const t=this.generatePlaceholders(this.perPage);this.setState({collection:t});return new Promise(((t,e)=>t()))}generatePlaceholders(t){const e=[];for(let i=0;i<t;i++){e.push({key:`placeholder${i}`,type:"placeholder",commonType:Const.NotificationTypes.placeholder})}return e}readAll(){const{collection:t,unreadCounter:e}=this.state;if(e===0){return}let i=false;let o=e;const s=t.map((t=>{if(t.notifyRead==="N"&&t.commonType!==Const.NotificationTypes.confirm){t.notifyRead="Y";i=true;o=o>0?o-1:o}return t}));if(!i){return}BX.postComponentEvent("chatdialog::counter::change",[{dialogId:"notify",counter:o},true],"im.recent");this.setState({collection:s,unreadCounter:o});BX.postComponentEvent("chatbackground::task::action",["readNotification","readNotification|0",{id:0,action:"Y"}],"background")}itemClickHandler(t,e){const{collection:i}=this.state;if(e==="delete"){this.notificationsToDelete.push(t);const e=this.state.unreadCounter;const o=i.findIndex((e=>e.messageId===t));if(i[o]&&i[o].notifyRead==="N"){BX.postComponentEvent("chatdialog::counter::change",[{dialogId:"notify",counter:--this.state.unreadCounter},true],"im.recent")}const s=i.filter((e=>e.messageId!==t));this.setState({collection:s});this.storage.set("collection",JSON.stringify(s));ChatTimer.stop("notification","delete",true);ChatTimer.start("notification","delete",1e3,(()=>{const t=this.notificationsToDelete;this.notificationsToDelete=[];BX.rest.callMethod("im.notify.delete",{id:t}).then((t=>{console.log("im.notify.delete",t)})).catch((t=>{console.log(t);BX.postComponentEvent("chatdialog::counter::change",[{dialogId:"notify",counter:e},true],"im.recent");this.setState({collection:i});this.storage.set("collection",JSON.stringify(i))}))}))}}onItemHeightChange(t,e){if(!this.listView||t<e)return;this.listView.scrollBy({x:0,y:e-t,animated:true,duration:200})}render(){const{collection:t}=this.state;const e=t.length===0&&this.initialDataReceived;return View({},e?this.renderStub():this.renderList())}renderStub(){return View({},Image({style:{width:224,height:224,alignSelf:"center"},uri:`${currentDomain}/bitrix/templates/mobile_app/images/notification-block/notif-empty-v2.png`}),Text({style:{color:"#99afbc",fontSize:19,textAlign:"center"},text:BX.message("IM_NOTIFY_EMPTY_LIST")}))}renderList(){const{collection:e,isRefreshing:i}=this.state;return ListView({ref:t=>this.listView=t,style:t.listView,data:[{items:e}],isRefreshing:i,renderItem:(t,e,i)=>new NotificationItem({notification:t,itemClickHandler:this.itemClickHandler.bind(this),onHeightWillChange:(t,e)=>this.onItemHeightChange(t,e),onRemove:t=>{this.listView.deleteRow(e,i,"middle",(()=>{this.itemClickHandler(t.messageId,"delete")}))}}),onRefresh:()=>{this.setState({isRefreshing:true});this.getInitialStateFromServer().then((t=>{console.log("onRefresh: setState",t);this.setState(Object.assign(t,{isRefreshing:false}))})).catch((t=>{console.error(t);Utils.showError(BX.message["MOBILE_EXT_CONFIRM_ITEM_BUTTONS_ERROR_TITLE"],BX.message["MOBILE_EXT_CONFIRM_ITEM_BUTTONS_ERROR_TEXT"],"#affb0000")}))},onLoadMore:this.initialDataReceived&&this.getRemainingPages()>0&&(()=>{if(!this.isLoadingNewPage){console.log("Starting new request");this.isLoadingNewPage=true;this.loadNextPage()}}),onViewableItemsChanged:t=>{const e=t[0].items;const{collection:i}=this.state;e.forEach((t=>{const e=i[t];if(e!==undefined&&e.commonType!==Const.NotificationTypes.placeholder&&e.commonType!==Const.NotificationTypes.confirm&&e.notifyRead!=="Y"){this.readNotificationsQueue.add(e.messageId)}}));this.readVisibleNotificationsDelayed()},viewabilityConfig:{itemVisiblePercentThreshold:95,waitForInteraction:false}})}loadNextPage(){console.log(`Loading more notifications!`);const t={LIMIT:this.perPage,LAST_ID:this.lastId,LAST_TYPE:this.lastType,BB_CODE:"Y"};BX.rest.callMethod("im.notify.get",t).then((t=>{console.log("im.notify.get: new page results",t);return this.processNextPage(t.data())})).then((()=>{this.isLoadingNewPage=false})).catch((t=>console.log(t)))}getInitialData(){this.getInitialStateFromCache().then((t=>{if(!this.initialDataReceived){console.log("setState from CACHE",t);this.setState(t)}}));this.getInitialStateFromServer().then((t=>{console.log("setState from SERVER",t);this.setState(t);this.initialDataReceived=true;this.tempNotificationsToRead.clear();this.firstUnreadNotificationOnInit=this.getFirstUnreadNotificationOnInit();layoutWidget.setTitle({text:BX.message("IM_NOTIFY_TITLE"),useProgress:false,largeMode:this.largeTitle})})).catch((t=>{console.error(t);layoutWidget.setTitle({text:BX.message("IM_NOTIFY_TITLE"),useProgress:false,largeMode:this.largeTitle})}))}getInitialStateFromCache(){return new Promise(((t,e)=>{const i=this.storage.get("collection");const o=i?JSON.parse(i):[];t({collection:o})}))}getInitialStateFromServer(){return new Promise(((t,e)=>{const i={LIMIT:this.perPage,BB_CODE:"Y"};BX.rest.callMethod("im.notify.get",i).then((e=>{console.log("im.notify.get",e);const i=this.processInitialState(e.data());this.storage.set("collection",JSON.stringify(i.collection));t(i)})).catch((t=>{console.log(t);e(t)}))}))}processInitialState(t){if(!t||t.length===0){return{collection:[],total:0,unreadCounter:0}}this.lastId=this.getLastItemId(t.notifications);this.lastType=this.getLastItemType(t.notifications);t.users.forEach((t=>{this.users[t.id]=t}));const e=[];const{collection:i}=this.state;t.notifications.forEach((t=>{const o=this.prepareNotification(t);const s=i.findIndex((t=>t.messageId===o.messageId));if(s>=0&&i[s].notifyRead!==o.notifyRead&&this.tempNotificationsToRead.has(o.messageId)){o.notifyRead=i[s].notifyRead}e.push(o)}));return{collection:e,total:+t.total_count,unreadCounter:+t.total_unread_count}}processNextPage(t){const{collection:e}=this.state;if(!t||t.notifications.length===0){this.setState({total:e.length});return}t.users.forEach((t=>{this.users[t.id]=t}));this.lastId=this.getLastItemId(t.notifications);this.lastType=this.getLastItemType(t.notifications);const i=t.notifications.map((t=>this.prepareNotification(t)));this.setState({collection:[...e,...i]});console.log(`Loading notifications is done!`);return new Promise(((t,e)=>t()))}prepareNotification(t){const e=Utils.getListItemType(t);return{key:"item"+t.id,type:e,commonType:this.getItemType(t),author:t.author_id===0?"":this.users[t.author_id].name,avatarUrl:t.author_id===0?"":this.users[t.author_id].avatar,avatarColor:t.author_id===0?"":this.users[t.author_id].color,text:Utils.htmlspecialcharsback(t.text),time:new Date(t.date).getTime(),messageId:t.id,params:t.params,buttons:t.notify_buttons,chatId:t.chat_id,notifyRead:t.notify_read,notifyTag:t.notify_tag}}getLastItemId(t){return t[t.length-1].id}getLastItemType(t){return this.getItemType(t[t.length-1])}getItemType(t){if(t.notify_type===1){return Const.NotificationTypes.confirm}else{return Const.NotificationTypes.simple}}getRemainingPages(){return Math.ceil((this.state.total-this.state.collection.length)/this.perPage)}readVisibleNotifications(){if(this.readNotificationsQueue.size===0){return}this.readNotificationsQueue.forEach((t=>{this.readNotification(parseInt(t,10))}));this.readNotificationsQueue.clear()}readNotification(t){const{collection:e,unreadCounter:i}=this.state;const o=e.findIndex((e=>e.messageId===t));if(!e[o]||e[o].notifyRead==="Y"){return}this.notificationsToRead.add(t);if(!this.initialDataReceived){this.tempNotificationsToRead.add(t)}e[o].notifyRead="Y";const s=i-1;this.setState({collection:e,unreadCounter:s});this.storage.set("collection",JSON.stringify(e));BX.postComponentEvent("chatdialog::counter::change",[{dialogId:"notify",counter:s},true],"im.recent");ChatTimer.stop("notification","read",true);ChatTimer.start("notification","read",1e3,(()=>{const t=[...this.notificationsToRead];this.notificationsToRead.clear();let e=false;if(this.firstUnreadNotificationOnInit!==null){e=Math.max(...t)<=this.firstUnreadNotificationOnInit}if(e){const e=Math.min(...t);BX.postComponentEvent("chatbackground::task::action",["readNotification","readNotification|"+e,{action:"Y",id:e}],"background")}else{BX.postComponentEvent("chatbackground::task::action",["readNotificationList","readNotificationList|"+t.join(),{action:"Y",ids:t}],"background")}}))}getFirstUnreadNotificationOnInit(){const{collection:t,unreadCounter:e}=this.state;if(e<=0){return null}let i=null;const o=t.length-1;for(let e=0;e<=o;e++){if(t[e].notifyRead==="N"&&t[e].commonType===Const.NotificationTypes.simple){i=t[e].messageId;break}}return i}}})();
//# sourceMappingURL=extension.map.js