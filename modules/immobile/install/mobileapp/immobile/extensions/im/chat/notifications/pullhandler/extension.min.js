(()=>{this.ImMobileNotificationsPullHandler=class t{constructor(t={}){if(typeof t.application==="object"&&t.application){this.application=t.application}}getModuleId(){return"im"}getSubscriptionType(){return BX.PullClient.SubscriptionType.Server}handleNotifyAdd(t,e){console.log("handleNotifyAdd",t,e);if(e!==undefined&&e.server_time_ago>30||t.onlyFlash===true){return false}const i=Utils.getListItemType(t);const o={key:"item"+t.id,type:i,commonType:t.type===1?Const.NotificationTypes.confirm:Const.NotificationTypes.simple,author:t.userName?Utils.htmlspecialcharsback(t.userName):"",avatarUrl:Utils.getAvatarUrl(t),avatarColor:t.userColor,text:Utils.htmlspecialcharsback(t.text),time:new Date(t.date).getTime(),messageId:t.id,params:t.params,notifyRead:"N",notifyTag:t.originalTag||t.original_tag};if(t.buttons){o.buttons=JSON.stringify(t.buttons)}const{collection:n}=this.application.state;for(let t=0;n.length>t;t++){if(n[t].messageId===o.messageId){return}}if(o.commonType===Const.NotificationTypes.confirm){n.unshift(o)}else if(o.commonType===Const.NotificationTypes.simple){let t=null;for(let e=0;n.length>e;e++){if(n[e].commonType!==Const.NotificationTypes.confirm){t=e;break}}if(t===null){n.push(o)}else{n.splice(t,0,o)}}this.application.setState({collection:n,unreadCounter:t.counter});this.application.storage.set("collection",JSON.stringify(n));this.updateCounter(t.counter)}handleNotifyConfirm(t,e){console.log("handleConfirmNotify params",t);if(e.server_time_ago>30){return false}let i=false;const{collection:o}=this.application.state;const n=o.filter((e=>{if(e.messageId===t.id){i=true}return e.messageId!==t.id}));if(i){this.application.setState({collection:n,unreadCounter:t.counter});this.application.storage.set("collection",JSON.stringify(o))}this.updateCounter(t.counter)}handleNotifyRead(t,e){console.log("handleReadNotifyList",t);if(e.server_time_ago>30){return false}const{collection:i}=this.application.state;let o=false;t.list.forEach((t=>{const e=i.findIndex((e=>e.messageId===t));if(e>=0&&i[e].notifyRead!=="Y"){o=true;i[e].notifyRead="Y"}}));if(!o){return false}this.application.setState({collection:i,unreadCounter:t.counter});this.application.storage.set("collection",JSON.stringify(i));this.updateCounter(t.counter)}handleNotifyUnread(t,e){console.log("handleUnreadNotifyList",t,e);if(e.server_time_ago>30){return false}const{collection:i}=this.application.state;let o=false;t.list.forEach((t=>{const e=i.findIndex((e=>e.messageId===t));if(e>=0&&i[e].notifyRead!=="N"){o=true;i[e].notifyRead="N"}}));if(!o){return false}this.application.setState({collection:i,unreadCounter:t.counter});this.application.storage.set("collection",JSON.stringify(i));this.updateCounter(t.counter)}handleNotifyDelete(t,e){console.log("handleDeleteNotifies",t,e);if(e.server_time_ago>30){return false}const i=Object.keys(t.id).map((t=>+t));const{collection:o}=this.application.state;let n=false;const a=o.filter((t=>{if(i.includes(t.messageId)){n=true;return false}return true}));if(n){this.application.setState({collection:a,unreadCounter:t.counter});this.application.storage.set("collection",JSON.stringify(a));this.updateCounter(t.counter)}}updateCounter(t){BX.postComponentEvent("chatdialog::counter::change",[{dialogId:"notify",counter:t},true],"im.recent")}}})();
//# sourceMappingURL=extension.map.js