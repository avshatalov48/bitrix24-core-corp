"use strict";(function(){class t{constructor(){this.tasks=[];this.delayedWorkerIds=[];this.userId=BX.componentParameters.get("USER_ID",0);this.storage=Application.sharedStorage(`chatBackgroundQueue_${this.userId}`);this.start();BX.addCustomEvent("chatbackground::task::add",((t,e,s=null,a=null)=>this.addTask(t,e,s,a)));BX.addCustomEvent("chatbackground::task::restart",(()=>this.start()))}addTask(t,e,s=false,a=null){console.info("ChatBackground.addTask",t,e,s,a);this.enqueue({taskId:t,query:e,extra:s,delay:a});const r=this.getTaskQueueType(s);this.worker(r)}moveToTheEnd(t){t.delay=5*60*1e3;console.info("ChatBackground.moveToTheEnd",t);this.enqueue(t);const e=this.getTaskQueueType(t.extra);this.worker(e)}stopQueue(t){console.log("ChatBackground.stopQueue",t);if(this.tasks[t].length>0){this.tasks[t][0].sending=false}}postSuccessEvent(t,e={},s=false){console.log("ChatBackground.postEvent",t,e,s);BX.postComponentEvent("chatbackground::task::status::success",[t,e,s]);BX.postWebEvent("chatbackground::task::status::success",{taskId:t,result:e,extra:s})}postFailureEvent(t,e,s="",a=200,r=false){console.log("ChatBackground.postFailureEvent",t,e,s,a,r);BX.postComponentEvent("chatbackground::task::status::failure",[t,e,s,a,r]);BX.postWebEvent("chatbackground::task::status::failure",{taskId:t,code:e,text:s,status:a,extra:r})}executeRest(t,e=false){let s;BX.rest.callBatch(t,(a=>{clearTimeout(s);if(!a){t.forEach((t=>{let s;for(let e in t){if(t.hasOwnProperty(e)){s=e}}this.postFailureEvent(s,"EMPTY_RESPONSE","Server returned an empty response.",204,e)}));return false}for(let t in a){if(!a.hasOwnProperty(t)){continue}const s=this.getTaskQueueType(e);if(a[t].error()){const r=this.getTaskByUid(t);if(a[t].error().status&&a[t].error().status===-2){if(r){this.stopQueue(s)}}else if(a[t].error().status===200){this.deleteTask(t);this.worker(s)}else{if(r){this.moveToTheEnd(r)}this.worker(s)}this.postFailureEvent(t,a[t].error().ex.error,a[t].error().ex.error_description,a[t].error().status,e)}else{this.deleteTask(t);this.postSuccessEvent(t,a[t].data(),e);this.worker(s)}}}),false,(t=>{s=setTimeout((()=>{t.abort()}),6e4)}))}worker(t){if(this.delayedWorkerIds.hasOwnProperty(t)){clearTimeout(this.delayedWorkerIds[t])}const e=this.peek(t);if(!e||this.isTaskAlreadySending(e)){return}const s=[];if(this.checkExecutionDate(e)){e.sending=true;s.push(e)}const a=e.date-new Date;if(a>0){console.log(`ChatBackground.worker: ${this.tasks[t].length} tasks delayed for ${a}ms`);this.delayedWorkerIds[t]=setTimeout(this.worker.bind(this,t),a);return}if(s.length>0){console.info(`ChatBackground.worker: ${s.length} tasks start execute`,s);let t=true;let e={};let a=[];s.forEach((s=>{if(s.extra){if(a.length>0){a.push({queries:e,extra:false});e={}}e[s.taskId]=s.query;a.push({queries:e,extra:s.extra});t=true;e={};return true}t=false;e[s.taskId]=s.query}));if(!t){a.push({queries:e,extra:false})}a.forEach((t=>{this.executeRest(t.queries,t.extra)}))}}destroy(){for(const t in this.tasks){clearInterval(this.delayedWorkerIds[t])}}getTasksFromStorage(){const t=this.storage.get("tasks");return t?JSON.parse(t):{}}removeTaskFromStorage(t){let e=this.getTasksFromStorage();if(e.length===0){return}for(const s in e){e[s]=e[s].filter((e=>e.taskId!==t))}this.storage.set("tasks",JSON.stringify(e))}getTaskByUid(t){let e;for(const s in this.tasks){e=this.tasks[s].find((e=>e.taskId===t));if(e){return e}}}saveTaskToStorage(t,e){let s=this.getTasksFromStorage();if(!s[t]){s[t]=[]}s[t]=s[t].filter((t=>t.taskId!==e.taskId));s[t].push(e);this.storage.set("tasks",JSON.stringify(s))}start(){this.tasks=this.getTasksFromStorage();for(const t in this.tasks){this.tasks[t]=this.tasks[t].filter((t=>{if(t.dateCreateTS){const e=new Date(Date.now()-60*60*24*30*1e3).getTime();return t.dateCreateTS>e}return true}));this.tasks[t]=this.tasks[t].map((t=>{t.date=null;return t}));if(this.tasks[t].length>0){this.worker(t)}}}deleteTask(t){for(const e in this.tasks){this.tasks[e]=this.tasks[e].filter((e=>e.taskId!==t))}this.removeTaskFromStorage(t)}getTaskQueueType(t){let e="default";if(!t){return e}if(t.params&&t.params.dialogId){e=t.params.dialogId}else if(t.dialogId){e=t.dialogId}return e.toString()}enqueue(t){console.info("ChatBackground.enqueue",t);if(!t.dateCreateTS){t.dateCreateTS=Date.now()}const{taskId:e,query:s,extra:a,delay:r,dateCreateTS:o}=t;const i=r?new Date(+new Date+r):null;const n=this.getTaskQueueType(a);if(!this.tasks[n]){this.tasks[n]=[]}this.tasks[n]=this.tasks[n].filter((t=>t.taskId!==e));this.tasks[n].push({taskId:e,query:s,extra:a,date:i,dateCreateTS:o,sending:false});this.saveTaskToStorage(n,{taskId:e,query:s,extra:a,date:i,dateCreateTS:o,sending:false})}peek(t){if(this.tasks[t].length===0){return null}return this.tasks[t][0]}isTaskAlreadySending(t){return t.hasOwnProperty("sending")&&t.sending===true}checkExecutionDate(t){if(t.date&&typeof t.date==="string"){t.date=new Date(t.date)}if(!t.date||t.date&&t.date<=new Date){return true}return false}}this.ChatBackgroundTasks=new t})();
//# sourceMappingURL=extension.map.js