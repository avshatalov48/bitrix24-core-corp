{"version":3,"file":"imageuploader.bundle.js","sources":["../src/internal/renamex.js","../src/imageuploader.js"],"sourcesContent":["export default function renameX(filename, x)\n{\n\tconst name = filename.replace(/@[1-9]x/, '');\n\tlet extension = BX.util.getExtension(name);\n\tif (extension.length > 4)\n\t{\n\t\textension = extension.split('_').pop();\n\t}\n\n\treturn name ? name.replace(/\\.[^.]+$/, `@${x}x.${extension}`) : name;\n}","import {Type} from 'main.core';\nimport {ImageCompressor} from 'landing.imagecompressor';\nimport {Backend} from 'landing.backend';\nimport type ImageUploaderOptions from './types/imageuploader.options';\nimport renameX from './internal/renamex';\n\n/**\n * @memberOf BX.Landing\n */\nexport class ImageUploader\n{\n\tconstructor(options: ImageUploaderOptions)\n\t{\n\t\tthis.options = {\n\t\t\tuploadParams: {},\n\t\t\tadditionalParams: {},\n\t\t\tdimensions: {},\n\t\t\tsizes: ['1x'],\n\t\t\t...options,\n\t\t};\n\t}\n\n\tsetSizes(sizes: Array<string>): ImageUploader\n\t{\n\t\tthis.options.sizes = sizes;\n\t\treturn this;\n\t}\n\n\tgetDimensions(): Array<number>\n\t{\n\t\tconst dimensions = Object.entries(this.options.dimensions);\n\n\t\treturn (\n\t\t\tthis.options.sizes\n\t\t\t\t.map(size => Number.parseInt(size))\n\t\t\t\t.filter(size => Type.isNumber(size))\n\t\t\t\t.map((size) => {\n\t\t\t\t\treturn dimensions.reduce((acc, [key, value]) => {\n\t\t\t\t\t\tacc[key] = value * size;\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {});\n\t\t\t\t})\n\t\t);\n\t}\n\n\tupload(file, additionalParams = {})\n\t{\n\t\treturn Promise\n\t\t\t.all(\n\t\t\t\tthis.getDimensions()\n\t\t\t\t\t.map((dimensions) => {\n\n\t\t\t\t\t\tconst isSvg = (\n\t\t\t\t\t\t\tthis.options.allowSvg\n\t\t\t\t\t\t\t&& Type.isStringFilled(file.type)\n\t\t\t\t\t\t\t&& file.type.includes('svg')\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (isSvg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn file;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ImageCompressor.compress(file, dimensions);\n\t\t\t\t\t}),\n\t\t\t)\n\t\t\t.then((files) => {\n\t\t\t\tconst uploadParams = {\n\t\t\t\t\t...this.options.uploadParams,\n\t\t\t\t\t...this.options.additionalParams,\n\t\t\t\t\t...additionalParams,\n\t\t\t\t};\n\t\t\t\tconst uploads = files.map((currentFile, index) => {\n\t\t\t\t\tconst {name} = currentFile;\n\t\t\t\t\tObject.defineProperty(currentFile, 'name', {\n\t\t\t\t\t\tget: () => renameX(name, index + 1),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn Backend.getInstance()\n\t\t\t\t\t\t.upload(currentFile, uploadParams);\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(uploads);\n\t\t\t});\n\t}\n}"],"names":["renameX","filename","x","name","replace","extension","BX","util","getExtension","length","split","pop","ImageUploader","options","uploadParams","additionalParams","dimensions","sizes","Object","entries","map","size","Number","parseInt","filter","Type","isNumber","reduce","acc","key","value","file","Promise","all","getDimensions","isSvg","allowSvg","isStringFilled","type","includes","ImageCompressor","compress","then","files","uploads","currentFile","index","defineProperty","get","configurable","Backend","getInstance","upload"],"mappings":"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"}