{"version":3,"file":"imageuploader.bundle.js","sources":["../src/internal/renamex.js","../src/imageuploader.js"],"sourcesContent":["export default function renameX(filename, x)\n{\n\tconst name = filename.replace(/@[1-9]x/, '');\n\treturn name ? name.replace(/\\.[^.]+$/, `@${x}x.${BX.util.getExtension(name)}`) : name;\n}","import {Type} from 'main.core';\nimport {ImageCompressor} from 'landing.imagecompressor';\nimport {Backend} from 'landing.backend';\nimport type ImageUploaderOptions from './types/imageuploader.options';\nimport renameX from './internal/renamex';\n\n/**\n * @memberOf BX.Landing\n */\nexport class ImageUploader\n{\n\tconstructor(options: ImageUploaderOptions)\n\t{\n\t\tthis.options = {\n\t\t\tuploadParams: {},\n\t\t\tadditionalParams: {},\n\t\t\tdimensions: {},\n\t\t\tsizes: ['1x'],\n\t\t\t...options,\n\t\t};\n\t}\n\n\tsetSizes(sizes: Array<string>): ImageUploader\n\t{\n\t\tthis.options.sizes = sizes;\n\t\treturn this;\n\t}\n\n\tgetDimensions(): Array<number>\n\t{\n\t\tconst dimensions = Object.entries(this.options.dimensions);\n\n\t\treturn (\n\t\t\tthis.options.sizes\n\t\t\t\t.map(size => Number.parseInt(size))\n\t\t\t\t.filter(size => Type.isNumber(size))\n\t\t\t\t.map((size) => {\n\t\t\t\t\treturn dimensions.reduce((acc, [key, value]) => {\n\t\t\t\t\t\tacc[key] = value * size;\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {});\n\t\t\t\t})\n\t\t);\n\t}\n\n\tupload(file, additionalParams = {})\n\t{\n\t\treturn Promise\n\t\t\t.all(\n\t\t\t\tthis.getDimensions()\n\t\t\t\t\t.map((dimensions) => {\n\n\t\t\t\t\t\tconst isSvg = (\n\t\t\t\t\t\t\tthis.options.allowSvg\n\t\t\t\t\t\t\t&& Type.isStringFilled(file.type)\n\t\t\t\t\t\t\t&& file.type.includes('svg')\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (isSvg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn file;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ImageCompressor.compress(file, dimensions);\n\t\t\t\t\t}),\n\t\t\t)\n\t\t\t.then((files) => {\n\t\t\t\tconst uploadParams = {\n\t\t\t\t\t...this.options.uploadParams,\n\t\t\t\t\t...this.options.additionalParams,\n\t\t\t\t\t...additionalParams,\n\t\t\t\t};\n\t\t\t\tconst uploads = files.map((currentFile, index) => {\n\t\t\t\t\tconst {name} = currentFile;\n\t\t\t\t\tObject.defineProperty(currentFile, 'name', {\n\t\t\t\t\t\tget: () => renameX(name, index + 1),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn Backend.getInstance()\n\t\t\t\t\t\t.upload(currentFile, uploadParams);\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(uploads);\n\t\t\t});\n\t}\n}"],"names":["renameX","filename","x","name","replace","BX","util","getExtension","ImageUploader","options","uploadParams","additionalParams","dimensions","sizes","Object","entries","map","size","Number","parseInt","filter","Type","isNumber","reduce","acc","key","value","file","Promise","all","getDimensions","isSvg","allowSvg","isStringFilled","type","includes","ImageCompressor","compress","then","files","uploads","currentFile","index","defineProperty","get","configurable","Backend","getInstance","upload"],"mappings":"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"}