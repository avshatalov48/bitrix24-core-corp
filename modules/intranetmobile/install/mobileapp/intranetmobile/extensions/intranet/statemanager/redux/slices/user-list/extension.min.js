jn.define("intranet/statemanager/redux/slices/user-list",((e,r,s)=>{const{sliceName:t,userListAdapter:a}=e("intranet/statemanager/redux/slices/user-list/meta");const{ReducerRegistry:n}=e("statemanager/redux/reducer-registry");const{createSlice:d}=e("statemanager/redux/toolkit");const{confirmUserRequest:i,deleteInvitation:u,fireEmployee:c}=e("intranet/statemanager/redux/slices/user-list/thunk");const{deleteInvitationPending:o,fireEmployeePending:l,confirmUserRequestPending:p}=e("intranet/statemanager/redux/slices/user-list/extra-reducer");const{IntranetUserModel:m}=e("intranet/statemanager/redux/slices/user-list/model/user");const g=d({name:t,initialState:a.getInitialState(),reducers:{usersUpserted:{reducer:a.upsertMany,prepare:e=>({payload:e.map((e=>m.prepareReduxUserFromServerUser(e)))})},usersAdded:{reducer:a.addMany,prepare:e=>({payload:e.map((e=>m.prepareReduxUserFromServerUser(e)))})}},extraReducers:e=>{e.addCase(u.pending,o).addCase(c.pending,l).addCase(i.pending,p)}});const{reducer:x,actions:U}=g;const{usersUpserted:y,usersAdded:R}=U;n.register(t,x);s.exports={usersUpserted:y,usersAdded:R}}));
//# sourceMappingURL=extension.map.js