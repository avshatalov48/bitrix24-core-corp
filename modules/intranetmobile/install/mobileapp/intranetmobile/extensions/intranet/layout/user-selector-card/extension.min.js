jn.define("intranet/layout/user-selector-card",((e,t,s)=>{const{Loc:r}=e("loc");const{InputDesign:o,InputSize:n,InputMode:i,Input:a}=e("ui-system/form/inputs/input");const{SocialNetworkUserSelector:d}=e("selector/widget/entity/socialnetwork/user");const{usersSelector:l,usersUpserted:c}=e("statemanager/redux/slices/users");const{usersUpserted:u}=e("intranet/statemanager/redux/slices/employees");const{batchActions:p}=e("statemanager/redux/batched-actions");const h=e("statemanager/redux/store");const{dispatch:U}=h;class g extends LayoutComponent{constructor(e){super(e);this.parentWidget=e.parentWidget??PageManager;this.defaultUser=null;this.state={selectedUser:this.getDefaultUser()}}componentDidMount(){super.componentDidMount();this.fetchDefaultUser(env.userId)}getDefaultUser(){const e=env.userId;const t=l.selectById(h.getState(),e);if(t){this.defaultUser={id:t.id,title:t.fullName};return this.defaultUser}return null}fetchDefaultUser(e){BX.ajax.runAction("intranetmobile.employees.getUsersByIds",{data:{ids:[e]}}).then((e=>{if(e.status!=="success"){throw new Error(e.errors[0])}const{items:t,users:s}=e.data;this.saveUserToRedux(t,s);this.defaultUser={id:t[0].id,title:t[0].fullName};if(!this.state.selectedUser){this.setState({selectedUser:this.defaultUser})}})).catch((e=>{console.error(e)}))}saveUserToRedux(e,t){const s=[c(e),u(t)];U(p(s))}render(){return a({value:this.state.selectedUser?.title??"",label:this.props.title??r.getMessage("M_INTRANET_DEPARTMENT_SELECTOR_CARD_DEFAULT_TITLE"),size:n.L,design:o.PRIMARY,mode:i.NAKED,align:"left",dropdown:true,onDropdown:this.openUserSelector,onFocus:this.openUserSelector})}openUserSelector=()=>{d.make({provider:{options:this.props.userProviderOptions??{}},initSelectedIds:this.state.selectedUser?.id?[this.state.selectedUser.id]:null,widgetParams:{backdrop:{mediumPositionPercent:70,horizontalSwipeAllowed:false}},allowMultipleSelection:false,closeOnSelect:true,events:{onClose:this.onChange,onViewHidden:this.onViewHidden}}).show({},this.parentWidget)};onViewHidden=()=>{this.props.onViewHidden()};onChange=e=>{this.setState({selectedUser:e.pop()??this.getDefaultUser()},(()=>{this.props.onChange?.(this.state.selectedUser.id)}))}}g.propTypes={title:PropTypes.string,parentWidget:PropTypes.object,userProviderOptions:PropTypes.object,onViewHidden:PropTypes.func,onChange:PropTypes.func};s.exports={UserSelectorCard:g}}));
//# sourceMappingURL=extension.map.js