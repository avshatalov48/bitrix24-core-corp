(()=>{const t=t=>jn.require(t);const{Loc:e}=t("loc");class i{constructor(){this.values=Application.storage.getObject("settings.intranet",{isBetaActive:false});this.providerId="users";this.providerTitle=e.getMessage("INTRANETMOBILE_SETTINGS_TITLE");this.providerSubtitle="";this.isBetaAvailablePromise=this.checkIsBetaAvailable();this.isBetaActivePromise=this.checkAjaxActive("isBetaActive","isBetaActive")}async initOptions(){const t=await this.createBetaForm();this.options=[t].filter(Boolean)}hasOptions(){return this.options.length>0}getProviderId(){return this.providerId}getProviderTitle(){return this.providerTitle}getProviderSubtitle(){return this.providerSubtitle}checkIsBetaAvailable(){return new Promise((t=>{BX.ajax.runAction("intranetmobile.settings.isBetaAvailable").then((e=>t(e.data))).catch((()=>t(false)))}))}async createBetaForm(){const t=await this.isBetaAvailablePromise;Application.storage.setBoolean("settings.intranet.isBetaAvailable",t);let e=null;if(t){const t=await this.isBetaActivePromise;const i=this.createSwitchItem("beta","INTRANETMOBILE_SETTINGS_USERS_BETA_ACTIVE_TITLE",t,"INTRANETMOBILE_SETTINGS_USERS_BETA_ACTIVE");e=this.createSection("intranetBeta",[i],"")}return e}checkAjaxActive(t,e){return new Promise((i=>{BX.ajax.runAction(`intranetmobile.settings.${e}`).then((e=>{this.values[t]=e.data;Application.storage.setObject("settings.intranet",this.values);i(e.data)})).catch((()=>i(false)))}))}onSettingsProviderButtonTap(){void this.drawForm()}async drawForm(){const t=await this.getForm();if(this.provider){this.provider.openForm(t.compile(),t.getId())}}createSwitchItem(t,i,s,a){const r=FormItem.create(t,FormItemType.SWITCH,e.getMessage(i));r.setValue(s);if(typeof r.setTestId==="function"){r.setTestId(a)}return r}async getForm(){const t=Form.create(this.providerId,this.providerTitle);if(this.hasOptions()){t.addSections(this.options)}return t}createSection(t,i,s){const a=FormSection.create(t,e.getMessage(s));a.addItems(i);return a}setAjaxItemValue(t,e){const i=e.value?`activate${t}`:`deactivate${t}`;BX.ajax.runAction(`intranetmobile.settings.${i}`).then((()=>{this.values[e.id]=e.value;Application.clearCache();Application.storage.setObject("settings.intranet",this.values);Application.relogin()})).catch(console.error)}setFormItemValue(t){switch(t.id){case"beta":{this.setAjaxItemValue("beta",t);break}default:{this.values[t.id]=t.value;Application.storage.setObject("settings.intranet",this.values)}}return false}onSettingsProviderValueChanged(t){this.setFormItemValue({sectionId:t.sectionCode,id:t.id,value:t.value});return true}setSettingsProvider(t){this.provider=t;return true}}const s=new i;BX.addCustomEvent("onRegisterProvider",(async t=>{class e extends SettingsProvider{onButtonTap(t){s.setSettingsProvider(this);s.onSettingsProviderButtonTap(t)}onValueChanged(t){s.setSettingsProvider(this);s.onSettingsProviderValueChanged(t)}}const i=Application.storage.getBoolean("settings.intranet.isBetaAvailable",false);if(i){t(new e(s.getProviderId(),s.getProviderTitle(),s.getProviderSubtitle()))}await s.initOptions()}))})();
//# sourceMappingURL=extension.map.js