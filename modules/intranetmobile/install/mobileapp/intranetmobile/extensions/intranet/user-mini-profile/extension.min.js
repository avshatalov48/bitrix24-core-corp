jn.define("intranet/user-mini-profile",((e,t,o)=>{const{RunActionExecutor:n}=e("rest/run-action-executor");class a{static init(){const e=Application.storage.get(`intranet.miniProfile.needToShow_${env.userId}`,null);if(e===null||e===undefined){const e=new n("intranetmobile.userprofile.isNeedToShowMiniProfile",{});e.call(false).then((e=>{Application.storage.set(`intranet.miniProfile.needToShow_${env.userId}`,false);if(e.data){a.showMiniProfile()}else{BX.postComponentEvent("userMiniProfileClosed",null)}})).catch((e=>{console.error(e)}))}else{BX.postComponentEvent("userMiniProfileClosed",null)}}static showMiniProfile=async()=>{try{const e=await this.getProfileData();const t=await this.getPortalLogoData();PageManager.openComponent("JSStackComponent",{name:"JSStackComponent",scriptPath:availableComponents["intranet:user-mini-profile"].publicUrl,componentCode:"intranet:user-mini-profile",canOpenInDefault:true,rootWidget:{name:"layout",settings:{objectName:"layout",modal:true,backdrop:{showOnTop:true,swipeAllowed:false,hideNavigationBar:true}}},params:{portalLogoParams:t.answer.result,profileDataParams:e.answer.result}})}catch(e){console.error(e)}};static getProfileData=async()=>BX.rest.callMethod("user.current");static getPortalLogoData=async()=>BX.rest.callMethod("intranet.portal.getLogo")}o.exports={UserMiniProfile:a}}));
//# sourceMappingURL=extension.map.js