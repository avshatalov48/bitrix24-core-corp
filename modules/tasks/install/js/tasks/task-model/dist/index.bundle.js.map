{"version":3,"file":"index.bundle.js","sources":["../src/error-collection.js","../src/field-collection.js","../src/task-collection.js","../src/task-model.js"],"sourcesContent":["import {TaskModel} from \"tasks.task-model\";\n\nexport class ErrorCollection\n{\n\terrors: Map = new Map();\n\n\tconstructor(model: TaskModel = {})\n\t{\n\t\tthis.model = model;\n\t}\n\n\tgetErrors()\n\t{\n\t\treturn Object.fromEntries(this.errors);\n\t}\n\n\tsetError(code: string, text: string): ErrorCollection\n\t{\n\t\tthis.errors.set(code, {\n\t\t\tcode,\n\t\t\ttext\n\t\t});\n\t\tthis.model.onErrorCollectionChange();\n\n\t\treturn this;\n\t}\n\n\tremoveError(code: string): ErrorCollection\n\t{\n\t\tif (this.errors.has(code))\n\t\t{\n\t\t\tthis.errors.delete(code);\n\t\t}\n\t\tthis.model.onErrorCollectionChange();\n\n\t\treturn this;\n\t}\n\n\tclearErrors(): ErrorCollection\n\t{\n\t\tthis.errors.clear();\n\t\tthis.model.onErrorCollectionChange();\n\n\t\treturn this;\n\t}\n\n\thasErrors()\n\t{\n\t\treturn this.errors.size > 0;\n\t}\n}\n","import {Type} from 'main.core';\nimport {TaskModel} from \"tasks.task-model\";\n\nexport class FieldCollection\n{\n\tchangedFields: Map = new Map();\n\tfields: Map = new Map();\n\n\tconstructor(model: TaskModel = {})\n\t{\n\t\tthis.model = model;\n\t}\n\n\tgetFields(): {}\n\t{\n\t\treturn Object.fromEntries(this.fields);\n\t}\n\n\tgetField(fieldName: string): any\n\t{\n\t\treturn this.fields.get(fieldName);\n\t}\n\n\tsetField(fieldName: string, value: any): FieldCollection\n\t{\n\t\tconst oldValue = this.fields.get(fieldName);\n\t\tthis.fields.set(fieldName, value);\n\t\tif (!this.changedFields.has(fieldName) && oldValue !== value)\n\t\t{\n\t\t\tthis.changedFields.set(fieldName, oldValue);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tisChanged(): boolean\n\t{\n\t\treturn (this.changedFields.size > 0);\n\t}\n\n\tclearChanged(savingFieldNames: [] = null): FieldCollection\n\t{\n\t\tif (Type.isNil(savingFieldNames))\n\t\t{\n\t\t\tthis.changedFields.clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsavingFieldNames.forEach((name) => {\n\t\t\t\tthis.removeFromChanged(name)\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tremoveFromChanged(fieldName): FieldCollection\n\t{\n\t\tthis.changedFields.delete(fieldName);\n\n\t\treturn this;\n\t}\n\n\tgetChangedFields(): {}\n\t{\n\t\tconst changedFieldValues = {};\n\n\t\tthis.fields.forEach((value, key) => {\n\t\t\tif (this.changedFields.has(key))\n\t\t\t{\n\t\t\t\tchangedFieldValues[key] = value;\n\t\t\t}\n\t\t})\n\n\t\treturn {...changedFieldValues};\n\t}\n\n\tgetChangedValues(): {}\n\t{\n\t\tconst changedFieldValues = {};\n\n\t\tthis.changedFields.forEach((value, key) => {\n\t\t\tchangedFieldValues[key] = value;\n\t\t})\n\n\t\treturn {...changedFieldValues};\n\t}\n\n\tinitFields(fields): FieldCollection\n\t{\n\t\tthis.fields.clear();\n\t\tthis.clearChanged();\n\t\tif (Type.isObject(fields))\n\t\t{\n\t\t\tObject.keys(fields).forEach((key) => {\n\t\t\t\tthis.fields.set(key, fields[key])\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import {ajax, Text, Type} from \"main.core\";\nimport {TaskModel} from \"tasks.task-model\";\nimport {EventEmitter} from \"main.core.events\";\n\nexport class TaskCollection\n{\n\t#map: Map = new Map();\n\n\tinit(map: {})\n\t{\n\t\tthis.clear();\n\n\t\tmap.forEach((item, index) =>\n\t\t{\n\t\t\tif (item['id'] > 0)\n\t\t\t{\n\t\t\t\tlet model = new TaskModel({\n\t\t\t\t\tfields : {\n\t\t\t\t\t\tid : Text.toNumber(item.id),\n\t\t\t\t\t\ttitle: item.title.toString(),\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tthis.#map.set(\n\t\t\t\t\tText.toNumber(index),\n\t\t\t\t\tmodel\n\t\t\t\t)\n\t\t\t}\n\t\t});\n\t}\n\n\trefreshByFilter(fields: {}): Promise\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tconst cmd = 'tasks.task.list';\n\n\t\t\tlet {filter, params} = TaskCollection.internalize(fields);\n\n\t\t\tif(Object.keys(filter).length <= 0)\n\t\t\t{\n\t\t\t\treturn Promise.reject({\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\terrors: [\n\t\t\t\t\t\t'filter is not set'\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tajax.runAction(\n\t\t\t\tcmd,\n\t\t\t\t{\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfilter,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstart: -1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t)\n\t\t\t.then((result) =>\n\t\t\t{\n\t\t\t\tlet tasks = result.data.tasks ?? null;\n\n\t\t\t\tif (Type.isArrayFilled(tasks))\n\t\t\t\t{\n\t\t\t\t\tthis.init(tasks);\n\t\t\t\t\tthis.#onChangeData();\n\t\t\t\t}\n\n\t\t\t\tresolve()\n\t\t\t})\n\t\t\t.catch(reject)\n\t\t});\n\t}\n\n\t#onChangeData()\n\t{\n\t\tEventEmitter.emit(this,'BX.Tasks.TaskModel.Collection:onChangeData');\n\t}\n\n\tstatic internalize(fields: {})\n\t{\n\t\tconst result = {\n\t\t\tfilter: {},\n\t\t\tparams: {},\n\t\t};\n\n\t\ttry\n\t\t{\n\t\t\tfor (let name in fields)\n\t\t\t{\n\t\t\t\tif (!fields.hasOwnProperty(name))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (name)\n\t\t\t\t{\n\t\t\t\t\tcase 'id':\n\t\t\t\t\t\tresult.filter.ID = fields[name];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'returnAccess':\n\t\t\t\t\t\tresult.params.RETURN_ACCESS = fields[name];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'siftThroughFilter':\n\t\t\t\t\t\tresult.params.SIFT_THROUGH_FILTER = TaskCollection.internalizeSiftThroughFilter(fields[name]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (e) {}\n\n\t\treturn result;\n\t}\n\n\tstatic internalizeSiftThroughFilter(fields: {}): {}\n\t{\n\t\tconst result = {};\n\n\t\ttry\n\t\t{\n\t\t\tfor (let name in fields)\n\t\t\t{\n\t\t\t\tif (!fields.hasOwnProperty(name))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (name)\n\t\t\t\t{\n\t\t\t\t\tcase 'userId':\n\t\t\t\t\t\tresult.userId = fields[name];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'groupId':\n\t\t\t\t\t\tresult.groupId = fields[name];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (e) {}\n\n\t\treturn result;\n\t}\n\n\tgetById(id): ?TaskModel\n\t{\n\t\tfor (let model of this.#map.values())\n\t\t{\n\t\t\tif (model.getId() === Text.toNumber(id))\n\t\t\t{\n\t\t\t\treturn model\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFieldsById(id): any\n\t{\n\t\treturn this.getById(id)?.getFields() || 0;\n\t}\n\n\tgetByIndex(index): ?TaskModel\n\t{\n\t\treturn this.#map.get(Text.toNumber(index))\n\t}\n\n\tgetFieldsByIndex(index): any\n\t{\n\t\treturn this.getByIndex(index)?.getFields() || 0;\n\t}\n\n\tcount()\n\t{\n\t\treturn this.#map.size;\n\t}\n\n\tclear(): TaskCollection\n\t{\n\t\tthis.#map.clear();\n\n\t\treturn this;\n\t}\n}","import {Text, Type} from \"main.core\";\nimport {TaskOption} from \"./task-option\";\nimport {EventEmitter} from \"main.core.events\";\nimport {ErrorCollection} from \"./error-collection\";\nimport {FieldCollection} from \"./field-collection\";\n\nclass TaskModel\n{\n\t#fieldCollection = null;\n\t#errorCollection = null;\n\n\tconstructor(options: TaskOption = {})\n\t{\n\t\tthis.options = options || {};\n\n\t\tthis.#errorCollection = new ErrorCollection(this);\n\t\tthis.#fieldCollection = new FieldCollection(this);\n\n\t\tif (Type.isObject(options.fields))\n\t\t{\n\t\t\tthis.initFields(options.fields, false);\n\t\t}\n\t}\n\n\tgetErrorCollection(): ErrorCollection\n\t{\n\t\treturn this.#errorCollection;\n\t}\n\n\tgetFields(): {}\n\t{\n\t\treturn this.#fieldCollection.getFields();\n\t}\n\n\tgetField(fieldName: string): any\n\t{\n\t\treturn this.#fieldCollection.getField(fieldName);\n\t}\n\n\tsetField(fieldName: string, value: any): TaskModel\n\t{\n\t\tthis.#fieldCollection.setField(fieldName, value);\n\n\t\treturn this;\n\t}\n\n\tsetFields(fields): ProductModel\n\t{\n\t\tObject.keys(fields).forEach((key) => {\n\t\t\tthis.setField(key, fields[key]);\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tinitFields(fields: {}): TaskModel\n\t{\n\t\tthis.#fieldCollection.initFields(fields);\n\n\t\treturn this;\n\t}\n\n\tremoveField(fieldName): TaskModel\n\t{\n\t\tthis.#fieldCollection.removeField(fieldName);\n\n\t\treturn this;\n\t}\n\n\tisChanged(): boolean\n\t{\n\t\treturn this.#fieldCollection.isChanged();\n\t}\n\n\tgetId()\n\t{\n\t\treturn this.getField('id');\n\t}\n}\n\nexport\n{\n\tTaskModel\n}"],"names":["ErrorCollection","constructor","model","errors","Map","getErrors","Object","fromEntries","setError","code","text","set","onErrorCollectionChange","removeError","has","delete","clearErrors","clear","hasErrors","size","FieldCollection","changedFields","fields","getFields","getField","fieldName","get","setField","value","oldValue","isChanged","clearChanged","savingFieldNames","Type","isNil","forEach","name","removeFromChanged","getChangedFields","changedFieldValues","key","getChangedValues","initFields","isObject","keys","TaskCollection","init","map","item","index","TaskModel","id","Text","toNumber","title","toString","refreshByFilter","Promise","resolve","reject","cmd","filter","params","internalize","length","status","ajax","runAction","data","start","then","result","tasks","isArrayFilled","catch","hasOwnProperty","ID","RETURN_ACCESS","SIFT_THROUGH_FILTER","internalizeSiftThroughFilter","e","userId","groupId","getById","values","getId","getFieldsById","getByIndex","getFieldsByIndex","count","EventEmitter","emit","options","getErrorCollection","setFields","removeField"],"mappings":"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"}