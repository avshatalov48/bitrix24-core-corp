this.BX=this.BX||{};(function(t,e,s){"use strict";class i{static get possibleActions(){return{deadlineChange:"deadlineChange",taskApprove:"taskApprove",taskDisapprove:"taskDisapprove",taskComplete:"taskComplete"}}static get accessActions(){return{deadlineChange:"CHANGE_DEADLINE",taskApprove:"APPROVE",taskDisapprove:"DISAPPROVE",taskComplete:"COMPLETE"}}static get ajaxActions(){return{deadlineChange:"tasks.task.update",taskApprove:"tasks.task.approve",taskDisapprove:"tasks.task.disapprove",taskComplete:"tasks.task.complete"}}static get actionNotificationMessages(){const t="TASKS_COMMENT_ACTION_CONTROLLER_NOTIFICATION";return{deadlineChange:e.Loc.getMessage(`${t}_DEADLINE_CHANGE`),taskApprove:e.Loc.getMessage(`${t}_TASK_APPROVE`),taskDisapprove:e.Loc.getMessage(`${t}_TASK_DISAPPROVE`),taskComplete:e.Loc.getMessage(`${t}_TASK_COMPLETE`)}}static init(t={}){return new Promise((e=>{const s=[];if(!i.workHours){if(t.workHours){i.workHours=t.workHours}else{s.push(i.loadWorkHours())}}if(!i.workSettings){if(t.workSettings){i.workSettings=t.workSettings}else{s.push(i.loadWorkSettings())}}if(!s.length){e()}Promise.all(s).then((()=>e()))}))}static loadWorkHours(){return new Promise((t=>{s.rest.callMethod("calendar.settings.get").then((e=>{const{result:s}=e.answer;const[n,a]=String(s.work_time_start).split(".");const[o,r]=String(s.work_time_end).split(".");i.workHours={start:{hours:n,minutes:a},end:{hours:o,minutes:r}};t()}))}))}static loadWorkSettings(){return new Promise((t=>{e.ajax.runAction("tasks.userOption.getCalendarTimeVisibilityOption").then((e=>{i.workSettings={deadlineTimeVisibility:e.data.visibility||"N"};t()}))}))}static isActionValid(t){return Object.keys(i.possibleActions).includes(t)}static processLink(t){const[e,s,n,a,o]=t.matches;if(!i.isActionValid(a)){return}if(a===i.possibleActions.deadlineChange){i.init().then((()=>{i.showDeadlinePicker(t.anchor,n,o)}));return}i.checkCanRun(a,n).then((t=>{if(t){i.runAjaxAction(a,n)}}),(t=>console.error(t)))}static showDeadlinePicker(t,s,n){const a=new Date;const o=new Date(Date.UTC(a.getFullYear(),a.getMonth(),a.getDate(),i.workHours.end.hours,i.workHours.end.minutes));const r=n?new Date((Number(n)-(new Date).getTimezoneOffset()*60)*1e3):o;const c=e.Reflection.getClass("BX.calendar");c({node:t,value:r,field:"",form:"",bTime:true,currentTime:Math.round(new Date/1e3)-(new Date).getTimezoneOffset()*60,bHideTimebar:true,bCompatibility:true,bCategoryTimeVisibilityOption:"tasks.bx.calendar.deadline",bTimeVisibility:i.workSettings?i.workSettings.deadlineTimeVisibility==="Y":false,callback_after:t=>i.onDeadlinePicked(t,s)})}static onDeadlinePicked(t,e){const s=i.possibleActions.deadlineChange;i.checkCanRun(s,e).then((n=>{if(n){i.runAjaxAction(s,e,{fields:{DEADLINE:t.toISOString()}})}}),(t=>console.error(t)))}static checkCanRun(t,s){return new Promise(((n,a)=>{if(i.isAjaxRunning){n(false)}i.isAjaxRunning=true;e.ajax.runAction("tasks.task.getAccess",{data:{taskId:s}}).then((e=>{i.isAjaxRunning=false;const{allowedActions:s}=e.data;const a=Object.keys(s)[0];const o=i.accessActions[t];n(s&&s[a]&&s[a][o])}),(t=>a(t)))}))}static runAjaxAction(t,s,n={}){if(i.isAjaxRunning){return}i.isAjaxRunning=true;if(t!=="taskComplete"){i.showNotification(t)}const a={taskId:s};n={...n,...a};if(!n.params){n.params={}}n.params.PLATFORM="web";e.ajax.runAction(i.ajaxActions[t],{data:n}).then((()=>{if(t==="taskComplete"){i.showNotification(t)}i.isAjaxRunning=false}),(t=>{if(t&&t.errors){const s={MESSAGE:t.errors[0].message,DATA:{ui:"notification"}};const i=e.Reflection.getClass("BX.Tasks");i.alert([s])}i.isAjaxRunning=false}))}static showNotification(t){e.Runtime.loadExtension("ui.notification").then((()=>{const s=e.Reflection.getClass("BX.UI.Notification.Center");s.notify({content:i.actionNotificationMessages[t]})}))}}i.workHours=null;i.workSettings=null;i.isAjaxRunning=false;t.CommentActionController=i})(this.BX.Tasks=this.BX.Tasks||{},BX,BX);
//# sourceMappingURL=comment-action-controller.bundle.map.js