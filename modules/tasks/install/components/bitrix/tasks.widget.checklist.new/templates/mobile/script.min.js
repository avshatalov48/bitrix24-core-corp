"use strict";BX.Mobile.Tasks.CheckList=function(){var t=function(t){this.renderTo=t.renderTo;this.optionManager=new BX.Mobile.Tasks.CheckList.OptionManager(t);this.treeStructure=this.buildTreeStructure(t.items);this.loader=new BX.Loader({target:this.renderTo});this.setOptionManager(this.treeStructure);this.saveStableTreeStructure();this.setListeners();this.bindControls();this.render();this.treeStructure.handleTaskOptions();BXMobileApp.Events.postToComponent("onChecklistInit",{taskId:this.optionManager.entityId,taskGuid:this.optionManager.taskGuid},this.optionManager.isEditMode()?"tasks.edit":"tasks.view")};t.prototype.setListeners=function(){var t={addAuditor:this.treeStructure.onMemberSelectedEvent,addAccomplice:this.treeStructure.onMemberSelectedEvent,addAttachment:this.treeStructure.onAddAttachmentEvent,removeAttachment:this.treeStructure.onRemoveAttachmentEvent,attachFiles:this.treeStructure.onAttachFilesEvent,removeFiles:this.treeStructure.onRemoveFilesEvent,fakeAttachFiles:this.treeStructure.onFakeAttachFilesEvent,fakeRemoveFiles:this.treeStructure.onFakeRemoveFilesEvent,rename:this.treeStructure.onRenameEvent,remove:this.treeStructure.onRemoveEvent,tabIn:this.treeStructure.onTabInEvent,tabOut:this.treeStructure.onTabOutEvent,important:this.treeStructure.onImportantEvent,toAnotherChecklist:this.treeStructure.onToAnotherCheckListEvent};Object.keys(t).forEach(function(e){BXMobileApp.addCustomEvent("tasks.view.native::checklist."+e,function(r){t[e].apply(this.treeStructure,[r])}.bind(this))}.bind(this));BX.addCustomEvent("onKeyboardWillHide",function(){this.treeStructure.disableAllUpdateModes();this.treeStructure.handleTaskOptions()}.bind(this))};t.prototype.bindControls=function(){BX.bind(BX("addCheckList"),"click",this.onAddCheckListClick.bind(this));BX.bind(document,"mousedown",this.onDocumentMouseDown.bind(this));BX.bind(document,"mouseup",this.onDocumentMouseUp.bind(this))};t.prototype.buildTreeStructure=function(t){var e=new BX.Tasks.MobileCheckListItem;e.setNodeId(0);if(t.length!==0){var r=this;var s=t.DESCENDANTS;Object.keys(s).forEach(function(t){e.add(r.makeTree(s[t]))})}return e};t.prototype.makeTree=function(t){var e=t.FIELDS;var r=t.DESCENDANTS;e.action=t.ACTION;var s=new BX.Tasks.MobileCheckListItem(e);s.fields.setTotalCount(0);if(typeof r!=="undefined"){var i=this;Object.keys(r).forEach(function(t){s.add(i.makeTree(r[t]));s.fields.setTotalCount(s.fields.getTotalCount()+1)})}return s};t.prototype.setOptionManager=function(t){var e=this;t.optionManager=this.optionManager;t.getDescendants().forEach(function(t){e.setOptionManager(t)})};t.prototype.getTreeStructure=function(){return this.treeStructure};t.prototype.render=function(){var t=this.treeStructure.getLayout();if(this.optionManager.converted){BX.append(t,this.renderTo)}else{var e="<div>PART_1</div><br><div>PART_2</div><div>PART_3</div>\x3c!--<br><div>PART_4</div>--\x3e";var r=["PART_1","PART_2","PART_3"];r.forEach(function(t){e=e.replace(t,BX.message("TASKS_CHECKLIST_MOBILE_COMPONENT_JS_CHECKLIST_NOT_CONVERTED_MESSAGE_"+t))});var s=new BX.UI.Alert({text:e,color:BX.UI.Alert.Color.PRIMARY,icon:BX.UI.Alert.Icon.DANGER});BX.append(s.getContainer(),this.renderTo)}};t.prototype.activateLoading=function(){this.loader.show();BX.addClass(this.renderTo.parentElement,"tasks-checklist-zone-disabled");BX.bind(window,"keydown",BX.proxy(this.disableTabbing,this))};t.prototype.deactivateLoading=function(){BX.removeClass(this.renderTo.parentElement,"tasks-checklist-zone-disabled");BX.unbind(window,"keydown",BX.proxy(this.disableTabbing,this));this.loader.hide()};t.prototype.disableTabbing=function(t){if(t.keyCode===9){t.preventDefault()}};t.prototype.getDestructedTreeStructure=function(t){var e=this;var r={};var s={accomplice:"A",auditor:"U"};Object.keys(t.fields).forEach(function(e){if(e==="members"){r[e]={};t.fields[e].forEach(function(t,i){r[e][i]={TYPE:s[t.type],NAME:BX.util.htmlspecialcharsback(t.nameFormatted)}});return}else if(e==="attachments"){r[e]={};Object.keys(t.fields[e]).forEach(function(s){r[e][s]=t.fields[e][s]});return}r[e]=t.fields[e]});var i={FIELDS:r,ACTION:{MODIFY:t.checkCanUpdate(),REMOVE:t.checkCanRemove(),TOGGLE:t.checkCanToggle()},DESCENDANTS:[]};t.getDescendants().forEach(function(t){i.DESCENDANTS.push(e.getDestructedTreeStructure(t))});return i};t.prototype.saveStableTreeStructure=function(){this.optionManager.setStableTreeStructure(this.getDestructedTreeStructure(this.treeStructure))};t.prototype.loadStableTreeStructure=function(){return this.buildTreeStructure(this.optionManager.getStableTreeStructure())};t.prototype.rerender=function(){BX.remove(this.treeStructure.panel);this.treeStructure=this.loadStableTreeStructure();this.dragndrop.treeStructure=this.treeStructure;this.setOptionManager(this.treeStructure);while(this.renderTo.lastChild){this.renderTo.removeChild(this.renderTo.lastChild)}this.render();this.treeStructure.handleTaskOptions()};t.prototype.onAddCheckListClick=function(){if(this.treeStructure.checkActiveUpdateExist()){return}this.addCheckList().then(function(t){if(!this.optionManager.isEditMode()){t.sendAddAjaxAction()}t.addCheckListItem()}.bind(this));BX.Event.EventEmitter.emit("BX.Tasks.CheckListItem:CheckListChanged")};t.prototype.addCheckList=function(){if(!this.optionManager.getCanAdd()){return}var t=new BX.Promise;var e=BX.message("TASKS_CHECKLIST_MOBILE_COMPONENT_JS_NEW_CHECKLIST_TITLE").replace("#ITEM_NUMBER#",this.treeStructure.getDescendantsCount()+1);var r=new BX.Tasks.MobileCheckListItem({TITLE:e,DISPLAY_TITLE:e});this.treeStructure.addCheckListItem(r).then(function(e){t.resolve(e)});return t};t.prototype.onDocumentMouseDown=function(t){if(t.button!==0){return}this.focusElement=t.target.closest(".ui-ctl-textbox")};t.prototype.onDocumentMouseUp=function(t){if(t.button!==0){return}var e=false;var r=[t.target.closest(".mobile-task-checklist-item-title"),t.target.closest(".mobile-task-checklist-head-title")];r.forEach(function(t){if(t!==null){e=true}});if(e||this.focusElement){return}this.treeStructure.disableAllUpdateModes();this.treeStructure.handleTaskOptions()};return t}();BX.Mobile.Tasks.CheckList.OptionManager=function(){var t=function(t){this.userId=t.userId;this.entityId=t.entityId;this.entityType=t.entityType;this.userPath=t.userPath;this.prefix=t.prefix;this.taskGuid=t.taskGuid;this.mode=t.mode;this.commonAction=t.commonAction;this.converted=t.converted;this.ajaxActions=t.ajaxActions;this.diskOptions={folderId:t.diskFolderId,urls:t.diskUrls};this.showCompleted=t.options.SHOW_COMPLETED;this.defaultMemberSelectorType=t.options.DEFAULT_MEMBER_SELECTOR_TYPE;this.showOnlyMine=false;this.stableTreeStructure=null;this.slider=BX.SidePanel.Instance.getTopSlider();this.query=new BX.Tasks.Util.Query({url:"/bitrix/components/bitrix/tasks.widget.checklist.new/ajax.php"})};t.prototype.getUserPath=function(){return this.userPath};t.prototype.getUserId=function(){return this.userId};t.prototype.getPrefix=function(){return this.prefix};t.prototype.getCanAdd=function(){return this.commonAction.canAdd};t.prototype.getCanDrag=function(){return this.commonAction.canDrag};t.prototype.isEditMode=function(){return this.mode==="edit"};t.prototype.getCanAddAccomplice=function(){return this.commonAction.canAddAccomplice};t.prototype.getShowCompleted=function(){return this.showCompleted};t.prototype.setShowCompleted=function(t){this.showCompleted=t;this.updateTaskOption("show_completed",t)};t.prototype.getShowOnlyMine=function(){return this.showOnlyMine};t.prototype.setShowOnlyMine=function(t){this.showOnlyMine=t};t.prototype.getDefaultMemberSelectorType=function(){return this.defaultMemberSelectorType};t.prototype.setDefaultMemberSelectorType=function(t){this.defaultMemberSelectorType=t;this.updateTaskOption("default_member_selector_type",t)};t.prototype.getStableTreeStructure=function(){return this.stableTreeStructure};t.prototype.setStableTreeStructure=function(t){this.stableTreeStructure=t};t.prototype.updateTaskOption=function(t,e){var r={option:t,value:e,userId:this.userId,entityType:this.entityType};this.query.run("TasksWidgetCheckListNewComponent.updateTaskOption",r);this.query.execute()};return t}();BX.Mobile.Tasks.CheckList.ProgressRound=function(t){BX.UI.ProgressRound.apply(this,arguments)};BX.Mobile.Tasks.CheckList.ProgressRound.prototype={__proto__:BX.UI.ProgressRound.prototype,constructor:BX.Mobile.Tasks.CheckList.ProgressRound,getStatusCounter:function(){this.statusCounter=Math.round(this.getValue())+"/"+Math.round(this.getMaxValue());if(Math.round(this.getValue())>Math.round(this.getMaxValue())){this.statusCounter=Math.round(this.getMaxValue())+"/"+Math.round(this.getMaxValue())}return this.statusCounter},getStatus:function(){if(this.status===null){if(this.getStatusType()===BX.UI.ProgressRound.Status.COUNTER){this.status=BX.create("div",{props:{className:"ui-progressround-status mobile-tasks-progressround-status"},text:this.getStatusCounter()})}else if(this.getStatusType()===BX.UI.ProgressRound.Status.INCIRCLE){this.status=BX.create("div",{props:{className:"ui-progressround-status-percent-incircle"},text:this.getStatusPercent()})}else if(this.getStatusType()===BX.UI.ProgressRound.Status.PERCENT){this.status=BX.create("div",{props:{className:"ui-progressround-status-percent"},text:this.getStatusPercent()})}else{this.status=BX.create("span",{})}}return this.status},getContainer:function(){if(this.container===null){this.container=BX.create("div",{props:{className:"ui-progressround"},children:[this.getTextAfter(),this.getTextBefore(),BX.create("div",{props:{className:"ui-progressround-track mobile-tasks-ui-progressround-track"},children:[this.getStatus(),this.getBar(),this.animateProgressBar()]})]})}return this.container}};
//# sourceMappingURL=script.map.js