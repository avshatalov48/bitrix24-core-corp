"use strict";BX.Tasks.CheckList=function(){var t=function(t){this.renderTo=t.renderTo;this.optionManager=new BX.Tasks.CheckList.OptionManager(t);this.treeStructure=this.buildTreeStructure(t.items);this.dragndrop=new BX.Tasks.CheckList.DragManager({dndZone:this.renderTo,treeStructure:this.treeStructure,canDrag:this.optionManager.getCanDrag()});this.loader=new BX.Loader({target:this.renderTo});this.setOptionManager(this.treeStructure);this.saveStableTreeStructure();this.bindControls();this.render();this.treeStructure.handleTaskOptions()};t.prototype.bindControls=function(){var t=this.renderTo.closest("form");if(t){BX.bind(t,"submit",BX.proxy(function(){this.treeStructure.appendRequestLayout()},this))}BX.bind(BX("addCheckList"),"click",this.onAddCheckListClick.bind(this));BX.bind(document,"mousedown",this.onDocumentMouseDown.bind(this));BX.bind(document,"mouseup",this.onDocumentMouseUp.bind(this))};t.prototype.buildTreeStructure=function(t){var e=new BX.Tasks.CheckListItem;e.setNodeId(0);if(t.length!==0){var r=this;var s=t.DESCENDANTS;Object.keys(s).forEach(function(t){e.add(r.makeTree(s[t]))})}return e};t.prototype.makeTree=function(t){var e=t.FIELDS;var r=t.DESCENDANTS;e.action=t.ACTION;var s=new BX.Tasks.CheckListItem(e);s.fields.setTotalCount(0);if(typeof r!=="undefined"){var i=this;Object.keys(r).forEach(function(t){s.add(i.makeTree(r[t]));s.fields.setTotalCount(s.fields.getTotalCount()+1)})}return s};t.prototype.setOptionManager=function(t){var e=this;t.optionManager=this.optionManager;t.getDescendants().forEach(function(t){e.setOptionManager(t)})};t.prototype.getTreeStructure=function(){return this.treeStructure};t.prototype.render=function(){var t=this.treeStructure.getLayout();if(this.optionManager.converted){BX.append(t,this.renderTo)}else{var e="<div>PART_1</div><br><div>PART_2</div><div>PART_3</div><br><div>PART_4</div>";var r=["PART_1","PART_2","PART_3","PART_4"];r.forEach(function(t){e=e.replace(t,BX.message("TASKS_CHECKLIST_COMPONENT_JS_CHECKLIST_NOT_CONVERTED_MESSAGE_"+t))});var s=new BX.UI.Alert({text:e,color:BX.UI.Alert.Color.PRIMARY,icon:BX.UI.Alert.Icon.DANGER});BX.append(s.getContainer(),this.renderTo)}};t.prototype.activateLoading=function(){this.loader.show();BX.addClass(this.renderTo.parentElement,"tasks-checklist-zone-disabled");BX.bind(window,"keydown",BX.proxy(this.disableTabbing,this))};t.prototype.deactivateLoading=function(){BX.removeClass(this.renderTo.parentElement,"tasks-checklist-zone-disabled");BX.unbind(window,"keydown",BX.proxy(this.disableTabbing,this));this.loader.hide()};t.prototype.disableTabbing=function(t){if(t.keyCode===9){t.preventDefault()}};t.prototype.getDestructedTreeStructure=function(t){var e=this;var r={};var s={accomplice:"A",auditor:"U"};Object.keys(t.fields).forEach(function(e){if(e==="members"){r[e]={};t.fields[e].forEach(function(t,i){r[e][i]={TYPE:s[t.type],NAME:BX.util.htmlspecialcharsback(t.nameFormatted)}});return}else if(e==="attachments"){r[e]={};Object.keys(t.fields[e]).forEach(function(s){r[e][s]=t.fields[e][s]});return}r[e]=t.fields[e]});var i={FIELDS:r,ACTION:{MODIFY:t.checkCanUpdate(),REMOVE:t.checkCanRemove(),TOGGLE:t.checkCanToggle()},DESCENDANTS:[]};t.getDescendants().forEach(function(t){i.DESCENDANTS.push(e.getDestructedTreeStructure(t))});return i};t.prototype.saveStableTreeStructure=function(){this.optionManager.setStableTreeStructure(this.getDestructedTreeStructure(this.treeStructure))};t.prototype.loadStableTreeStructure=function(){return this.buildTreeStructure(this.optionManager.getStableTreeStructure())};t.prototype.rerender=function(){BX.remove(this.treeStructure.panel);this.treeStructure=this.loadStableTreeStructure();this.dragndrop.treeStructure=this.treeStructure;this.setOptionManager(this.treeStructure);while(this.renderTo.lastChild){this.renderTo.removeChild(this.renderTo.lastChild)}this.render();this.treeStructure.handleTaskOptions()};t.prototype.onAddCheckListClick=function(){if(this.treeStructure.checkActiveUpdateExist()){return}this.addCheckList().then(function(t){t.addCheckListItem()});BX.Event.EventEmitter.emit("BX.Tasks.CheckListItem:CheckListChanged")};t.prototype.addCheckList=function(){if(!this.optionManager.getCanAdd()){return}var t=new BX.Promise;var e=BX.message("TASKS_CHECKLIST_COMPONENT_JS_NEW_CHECKLIST_TITLE_2").replace("#ITEM_NUMBER#",this.treeStructure.getDescendantsCount()+1);var r=new BX.Tasks.CheckListItem({TITLE:e,DISPLAY_TITLE:e});this.treeStructure.addCheckListItem(r).then(function(e){t.resolve(e)});return t};t.prototype.onDocumentMouseDown=function(t){if(t.button!==0){return}this.focusElement=t.target.closest(".ui-ctl-textbox")};t.prototype.onDocumentMouseUp=function(t){if(t.button!==0){return}var e=false;var r=[t.target.closest(".tasks-checklist-item-content-block"),t.target.closest(".tasks-checklist-item-editor-panel-container"),t.target.closest(".tasks-checklist-item-attachment-file"),t.target.closest(".tasks-checklist-header-name"),t.target.closest("#files_chooser"),t.target.closest("#DiskFileDialog"),t.target.closest("#menu-popup-to-another-checklist"),t.target.closest("#BXSocNetLogDestinationContainer")];r.forEach(function(t){if(t!==null){e=true}});if(e||this.focusElement){return}this.treeStructure.disableAllUpdateModes();this.treeStructure.handleTaskOptions()};return t}();BX.Tasks.CheckList.OptionManager=function(){var t=function(t){this.userId=t.userId;this.entityId=t.entityId;this.entityType=t.entityType;this.userPath=t.userPath;this.prefix=t.prefix;this.commonAction=t.commonAction;this.converted=t.converted;this.ajaxActions=t.ajaxActions;this.attachments=t.attachments;this.diskUrls=t.diskUrls;this.showCompleted=t.options.SHOW_COMPLETED;this.defaultMemberSelectorType=t.options.DEFAULT_MEMBER_SELECTOR_TYPE;this.showOnlyMine=false;this.stableTreeStructure=null;this.slider=BX.SidePanel.Instance.getTopSlider();this.query=new BX.Tasks.Util.Query({url:"/bitrix/components/bitrix/tasks.widget.checklist.new/ajax.php"})};t.prototype.getUserPath=function(){return this.userPath};t.prototype.getUserId=function(){return this.userId};t.prototype.getPrefix=function(){return this.prefix};t.prototype.getCanAdd=function(){return this.commonAction.canAdd};t.prototype.getCanDrag=function(){return this.commonAction.canDrag};t.prototype.getCanAddAccomplice=function(){return this.commonAction.canAddAccomplice};t.prototype.getShowCompleted=function(){return this.showCompleted};t.prototype.setShowCompleted=function(t){this.showCompleted=t;this.updateTaskOption("show_completed",t)};t.prototype.getShowOnlyMine=function(){return this.showOnlyMine};t.prototype.setShowOnlyMine=function(t){this.showOnlyMine=t};t.prototype.getDefaultMemberSelectorType=function(){return this.defaultMemberSelectorType};t.prototype.setDefaultMemberSelectorType=function(t){this.defaultMemberSelectorType=t;this.updateTaskOption("default_member_selector_type",t)};t.prototype.getStableTreeStructure=function(){return this.stableTreeStructure};t.prototype.setStableTreeStructure=function(t){this.stableTreeStructure=t};t.prototype.updateTaskOption=function(t,e){var r={option:t,value:e,userId:this.userId,entityType:this.entityType};this.query.run("TasksWidgetCheckListNewComponent.updateTaskOption",r);this.query.execute()};return t}();BX.Tasks.CheckList.DragManager=function(){var t=function(t){this.dragObject={};this.dropObject={};this.itemDropPlace=BX.create("div",{props:{className:"tasks-checklist-item tasks-checklist-item-drop-place droppable"},children:[BX.create("div",{props:{className:"tasks-checklist-item-inner"}})]});this.checkListDropPlace=BX.create("div",{props:{className:"tasks-checklist-wrapper-drop-place droppable"}});this.canDrag=t.canDrag;this.dndZone=t.dndZone;this.treeStructure=t.treeStructure;BX.bind(document,"mousedown",this.onMouseDown.bind(this))};t.prototype.onMouseDown=function(t){if(t.button!==0||!this.canDrag){return}var e=t.target.closest(".tasks-checklist-item-dragndrop")||t.target.closest(".tasks-checklist-wrapper-dragndrop");if(!e){return}var r=this.getNodeByDragButton(e);if(r.getCheckList().fields.getIsSelected()){return}this.dragObject={};this.dropObject={};this.dragObject.node=r;this.dragObject.downX=t.pageX;this.dragObject.downY=t.pageY;this.disableSelection(this.dndZone);BX.bind(document,"mousemove",BX.proxy(this.onMouseMove,this));BX.bind(document,"mouseup",BX.proxy(this.onMouseUp,this));return false};t.prototype.getNodeByDragButton=function(t){return this.treeStructure.findChild(t.parentElement.parentElement.id)};t.prototype.getDropObjectType=function(t){if(BX.hasClass(t,"tasks-checklist-item-drop-place")||BX.hasClass(t,"tasks-checklist-wrapper-drop-place")){return"dropPlace"}if(BX.hasClass(t,"tasks-checklist-item-inner")){return"node"}if(BX.hasClass(t,"tasks-checklist-items-list-actions")){return"addButton"}if(BX.hasClass(t,"tasks-checklist-header-wrapper")){return"checklist"}};t.prototype.getDropObjectNode=function(){var t=null;var e=this.dropObject.targetDrop;switch(this.dropObject.type){case"node":t=this.treeStructure.findChild(e.parentElement.id);if(this.dropObject.position==="bottom"&&t.getDescendantsCount()>0){this.dropObject.position="top";t=t.getFirstDescendant()}break;case"addButton":t=this.treeStructure.findChild(e.parentElement.parentElement.id);this.dropObject.position="bottom";break;case"checklist":t=this.treeStructure.findChild(e.parentElement.id);if(!this.dragObject.node.isCheckList()){this.dropObject.position="top"}break}return t};t.prototype.spawnDropPlace=function(){switch(this.dropObject.type){case"node":if(this.dropObject.position==="top"){BX.insertBefore(this.itemDropPlace,this.dropObject.node.getContainer())}else{BX.insertAfter(this.itemDropPlace,this.dropObject.node.getContainer())}break;case"addButton":if(this.dropObject.node.getDescendantsCount()>0){BX.insertAfter(this.itemDropPlace,this.dropObject.node.getLastDescendant().getContainer())}else{BX.append(this.itemDropPlace,this.dropObject.node.getSubItemsContainer())}break;case"checklist":if(this.dragObject.node.isCheckList()){if(this.dropObject.position==="top"){BX.insertBefore(this.checkListDropPlace,this.dropObject.node.getContainer())}else{BX.insertAfter(this.checkListDropPlace,this.dropObject.node.getContainer())}}else if(this.dropObject.node.getDescendantsCount()>0){BX.insertBefore(this.itemDropPlace,this.dropObject.node.getFirstDescendant().getContainer())}else{BX.append(this.itemDropPlace,this.dropObject.node.getSubItemsContainer())}break}};t.prototype.onMouseMove=function(t){if(!this.dragObject.node){return}if(!this.dragObject.avatar){var e=t.pageX-this.dragObject.downX;var r=t.pageY-this.dragObject.downY;if(Math.abs(e)<5&&Math.abs(r)<5){return}this.dragObject.avatar=this.createAvatar();if(!this.dragObject.avatar){this.dragObject={};return}this.startDrag()}this.moveAvatar(t);var s=this.findDroppable(t);if(!s){return false}var i=this.getDropObjectType(s);if(i==="node"||i==="checklist"&&this.dragObject.node.isCheckList()){var o=this.getCoords(s);this.dropObject.position=t.pageY<o.top+o.height/2?"top":"bottom";this.dropObject.targetDrop=s;this.dropObject.type=i;this.dropObject.node=this.getDropObjectNode();this.spawnDropPlace()}else if(i!=="dropPlace"&&s!==this.dropObject.targetDrop){this.dropObject.position=i==="checklist"?"top":"bottom";this.dropObject.targetDrop=s;this.dropObject.type=i;this.dropObject.node=this.getDropObjectNode();this.spawnDropPlace()}return false};t.prototype.createAvatar=function(){var t=this.dragObject.node.getContainer();var e=t.cloneNode(true);if(this.dragObject.node.isCheckList()){BX.addClass(e,"tasks-checklist-wrapper-draggable");if(!BX.hasClass(e,"tasks-checklist-collapse")){BX.addClass(e,"tasks-checklist-collapse")}e.querySelector(".tasks-checklist-items-wrapper").style.height=0}else{BX.addClass(e,"tasks-checklist-item-draggable");if(this.dragObject.node.getDescendantsCount()>0){BX.append(BX.create("div",{props:{className:"tasks-checklist-group-draggable"}}),e)}}BX.removeClass(e.querySelector(".droppable"),"droppable");e.style.left=this.dragObject.downX+"px";e.style.width=t.offsetWidth/2+"px";return e};t.prototype.moveAvatar=function(t){var e=this.dragObject.node.isCheckList()?10:20;var r=25;this.dragObject.avatar.style.left=t.pageX-e+"px";this.dragObject.avatar.style.top=t.pageY-r+"px"};t.prototype.startDrag=function(){var t=this.dragObject.avatar;BX.hide(this.dragObject.node.getContainer());BX.append(t,document.body);t.style.zIndex=9999;t.style.position="absolute";if(this.dragObject.node.isCheckList()){this.treeStructure.getDescendants().forEach(function(t){if(!t.fields.getIsCollapse()){t.toggleCollapse();t.fields.setIsCollapse(false)}})}};t.prototype.onMouseUp=function(t){if(this.dragObject.avatar){this.finishDrag(t)}this.dragObject={};this.enableSelection();BX.unbind(document,"mousemove",BX.proxy(this.onMouseMove,this));BX.unbind(document,"mouseup",BX.proxy(this.onMouseUp,this))};t.prototype.finishDrag=function(t){var e=this.findDroppable(t);BX.remove(this.itemDropPlace);BX.remove(this.checkListDropPlace);if(!e||this.dragObject.node.isCheckList()&&this.dropObject.type!=="checklist"){this.cancelDrag()}else{this.endDrag()}if(this.dragObject.node.isCheckList()){this.treeStructure.getDescendants().forEach(function(t){if(!t.fields.getIsCollapse()){t.toggleCollapse()}})}};t.prototype.cancelDrag=function(){this.dragObject.node.getContainer().style.display="";BX.remove(this.dragObject.avatar)};t.prototype.endDrag=function(){var t=this.dragObject.node;var e=this.dropObject.node;BX.remove(this.dragObject.avatar);if(this.dropObject.type==="node"||this.dropObject.type==="checklist"&&t.isCheckList()){t.move(e,this.dropObject.position)}else{t.makeChildOf(e,this.dropObject.position)}t.getContainer().style.display=""};t.prototype.findDroppable=function(t){BX.hide(this.dragObject.avatar);var e=document.elementFromPoint(t.clientX,t.clientY);BX.show(this.dragObject.avatar);if(e==null){return null}return e.closest(".droppable")};t.prototype.getCoords=function(t){var e=t.getBoundingClientRect();return{top:e.top+pageYOffset,left:e.left+pageXOffset,width:e.width,height:e.height}};t.prototype.enableSelection=function(){BX.removeClass(document.body,"tasks-checklist-zone-noselect")};t.prototype.disableSelection=function(){BX.addClass(document.body,"tasks-checklist-zone-noselect")};return t}();(function(){if(typeof BX.Tasks.Component.TasksWidgetCheckListNew!="undefined"){return}BX.Tasks.Component.TasksWidgetCheckListNew=BX.Tasks.Component.extend({sys:{code:"checklist"},methods:{construct:function(){this.callConstruct(BX.Tasks.Component)},bindEvents:function(){}}})}).call(this);
//# sourceMappingURL=logic.map.js