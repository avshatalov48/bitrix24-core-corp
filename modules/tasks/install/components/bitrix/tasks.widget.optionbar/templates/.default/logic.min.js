"use strict";BX.namespace("Tasks.Component");(function(){if(typeof BX.Tasks.Component.TasksWidgetOptionBar!="undefined"){return}BX.Tasks.Component.TasksWidgetOptionBar=BX.Tasks.Component.extend({sys:{code:"wg-optbar"},methods:{bindEvents:function(){this.bindDelegateControl("flag","click",this.passCtx(this.onToggleFlag))},onToggleFlag:function(e){var t=BX.data(e,"target");if(typeof t!="undefined"&&BX.type.isNotEmptyString(t)){var i=this.control(t);var s=BX.data(e,"flag-name");var n=BX.data(e,"yes-value")||"Y";var a=BX.data(e,"no-value")||"N";if(BX.type.isElementNode(i)){i.value=e.checked?n:a}const o=this.isLimitExceeded(s);if(o){this.performExceededActions(s,i,e);this.showLimitDialog(this.getFeatureId(s),null,{module:"tasks",source:"taskEdit"})}this.fireEvent("toggle",[s,i.value==n])}},isLimitExceeded(e){switch(e){case"TASK_CONTROL":return this.option("taskControlLimitExceeded");case"MATCH_WORK_TIME":return this.option("taskSkipWeekendsLimitExceeded");default:return false}},performExceededActions(e,t,i){switch(e){case"TASK_CONTROL":case"MATCH_WORK_TIME":if(t.value==="Y"){t.value="N";i.checked=false}}},getFeatureId(e){switch(e){case"TASK_CONTROL":return"tasks_control";case"MATCH_WORK_TIME":return"tasks_skip_weekends";default:return""}},showLimitDialog(e,t,i){return new Promise(((s,n)=>{BX.Runtime.loadExtension("tasks.limit").then((n=>{const{Limit:a}=n;a.showInstance({featureId:e,bindElement:t,limitAnalyticsLabels:i});s()}))}))},toggleFlag:function(e,t){},switchOption:function(e,t){e=e.toLowerCase().replace(/_/g,"-");var i=this.control("flag-"+e);if(i){if(t){BX.Tasks.Util.enable(i)}else{BX.Tasks.Util.disable(i);if(this.isOptionChecked(i)){i.checked=false;this.onToggleFlag(i)}}BX.data(this.control("flag-label-"+e),"hint-enabled",!t)}},switchFlag:function(e,t){return this.switchOption(e,t)},isOptionChecked:function(e){return e.checked}}})}).call(this);
//# sourceMappingURL=logic.map.js