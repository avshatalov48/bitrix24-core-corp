
CREATE TABLE b_tasks (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TITLE varchar(255) DEFAULT NULL,
  DESCRIPTION text,
  DESCRIPTION_IN_BBCODE char(1) NOT NULL DEFAULT 'N',
  PRIORITY int NOT NULL DEFAULT 1,
  STATUS int NOT NULL DEFAULT 0,
  RESPONSIBLE_ID int DEFAULT NULL,
  DATE_START timestamp DEFAULT NULL,
  DURATION_PLAN int DEFAULT NULL,
  DURATION_FACT int DEFAULT NULL,
  DURATION_TYPE varchar(5) NOT NULL DEFAULT 'days',
  TIME_ESTIMATE int NOT NULL DEFAULT 0,
  REPLICATE char(1) NOT NULL DEFAULT 'N',
  DEADLINE timestamp DEFAULT NULL,
  START_DATE_PLAN timestamp DEFAULT NULL,
  END_DATE_PLAN timestamp DEFAULT NULL,
  CREATED_BY int DEFAULT NULL,
  CREATED_DATE timestamp DEFAULT NULL,
  CHANGED_BY int DEFAULT NULL,
  CHANGED_DATE timestamp DEFAULT NULL,
  STATUS_CHANGED_BY int DEFAULT NULL,
  STATUS_CHANGED_DATE timestamp DEFAULT NULL,
  CLOSED_BY int DEFAULT NULL,
  CLOSED_DATE timestamp DEFAULT NULL,
  ACTIVITY_DATE timestamp DEFAULT NULL,
  GUID varchar(50) DEFAULT NULL,
  XML_ID varchar(50) DEFAULT NULL,
  EXCHANGE_ID varchar(196) DEFAULT NULL,
  EXCHANGE_MODIFIED varchar(196) DEFAULT NULL,
  OUTLOOK_VERSION int DEFAULT NULL,
  MARK char(1) DEFAULT NULL,
  ALLOW_CHANGE_DEADLINE char(1) NOT NULL DEFAULT 'N',
  ALLOW_TIME_TRACKING char(1) NOT NULL DEFAULT 'N',
  MATCH_WORK_TIME char(1) NOT NULL DEFAULT 'N',
  TASK_CONTROL char(1) NOT NULL DEFAULT 'N',
  ADD_IN_REPORT char(1) NOT NULL DEFAULT 'N',
  GROUP_ID int DEFAULT '0',
  PARENT_ID int DEFAULT NULL,
  FORUM_TOPIC_ID int8 DEFAULT NULL,
  MULTITASK char(1) NOT NULL DEFAULT 'N',
  IS_REGULAR char(1) NOT NULL DEFAULT 'N',
  SITE_ID char(2) NOT NULL,
  DECLINE_REASON text,
  FORKED_BY_TEMPLATE_ID int DEFAULT NULL,
  ZOMBIE char(1) NOT NULL DEFAULT 'N',
  DEADLINE_COUNTED int NOT NULL DEFAULT 0,
  STAGE_ID int NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_forum_topic_id ON b_tasks (forum_topic_id);
CREATE INDEX ix_b_tasks_parent_id ON b_tasks (parent_id);
CREATE INDEX ix_b_tasks_created_by ON b_tasks (created_by);
CREATE INDEX ix_b_tasks_responsible_id ON b_tasks (responsible_id);
CREATE INDEX ix_b_tasks_changed_by ON b_tasks (changed_by);
CREATE UNIQUE INDEX ux_b_tasks_guid ON b_tasks (guid);
CREATE INDEX ix_b_tasks_activity_date_created_date ON b_tasks (activity_date, created_date);
CREATE INDEX ix_b_tasks_created_date_activity_date ON b_tasks (created_date, activity_date);
CREATE INDEX ix_b_tasks_deadline_deadline_counted ON b_tasks (deadline, deadline_counted);
CREATE INDEX ix_b_tasks_group_id ON b_tasks (group_id);
CREATE INDEX ix_b_tasks_deadline_status_zombie_group_id ON b_tasks (deadline, status, zombie, group_id);
CREATE INDEX ix_b_tasks_status_is_regular ON b_tasks (status, is_regular);

CREATE TABLE b_tasks_files_temporary (
  USER_ID int NOT NULL,
  FILE_ID int NOT NULL,
  UNIX_TS int NOT NULL,
  PRIMARY KEY (FILE_ID)
);
CREATE INDEX ix_b_tasks_files_temporary_unix_ts ON b_tasks_files_temporary (unix_ts);
CREATE INDEX ix_b_tasks_files_temporary_user_id ON b_tasks_files_temporary (user_id);

CREATE TABLE b_tasks_dependence (
  TASK_ID int NOT NULL DEFAULT '0',
  DEPENDS_ON_ID int NOT NULL DEFAULT '0',
  PRIMARY KEY (TASK_ID, DEPENDS_ON_ID)
);
CREATE INDEX ix_b_tasks_dependence_depends_on_id ON b_tasks_dependence (depends_on_id);

CREATE TABLE b_tasks_proj_dep (
  TASK_ID int NOT NULL DEFAULT '0',
  DEPENDS_ON_ID int NOT NULL DEFAULT '0',
  TYPE smallint NOT NULL DEFAULT '2',
  DIRECT smallint DEFAULT '0',
  MPCITY int DEFAULT '1',
  CREATOR_ID int,
  PRIMARY KEY (TASK_ID, DEPENDS_ON_ID)
);
CREATE INDEX ix_b_tasks_proj_dep_depends_on_id ON b_tasks_proj_dep (depends_on_id);
CREATE INDEX ix_b_tasks_proj_dep_direct ON b_tasks_proj_dep (direct);

CREATE TABLE b_tasks_file (
  TASK_ID int NOT NULL DEFAULT '0',
  FILE_ID int NOT NULL DEFAULT '0',
  PRIMARY KEY (TASK_ID, FILE_ID)
);
CREATE INDEX ix_b_tasks_file_file_id ON b_tasks_file (file_id);

CREATE TABLE b_tasks_member (
  TASK_ID int NOT NULL DEFAULT '0',
  USER_ID int NOT NULL DEFAULT '0',
  TYPE char(1) NOT NULL DEFAULT '',
  PRIMARY KEY (TASK_ID, USER_ID, TYPE)
);
CREATE INDEX ix_b_tasks_member_user_id_type ON b_tasks_member (user_id, type);

CREATE TABLE b_tasks_tag (
  TASK_ID int NOT NULL,
  USER_ID int NOT NULL,
  NAME varchar(255) NOT NULL,
  PRIMARY KEY (TASK_ID, USER_ID, NAME)
);
CREATE INDEX ix_b_tasks_tag_name ON b_tasks_tag (name);
CREATE INDEX ix_b_tasks_tag_user_id_name ON b_tasks_tag (user_id, name);

CREATE TABLE b_tasks_template (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int DEFAULT NULL,
  TITLE varchar(255) DEFAULT NULL,
  DESCRIPTION text,
  DESCRIPTION_IN_BBCODE char(1) NOT NULL DEFAULT 'N',
  PRIORITY char(1) NOT NULL DEFAULT '1',
  STATUS char(1) NOT NULL DEFAULT '1',
  RESPONSIBLE_ID int DEFAULT NULL,
  DEADLINE_AFTER int DEFAULT NULL,
  START_DATE_PLAN_AFTER int DEFAULT NULL,
  END_DATE_PLAN_AFTER int DEFAULT NULL,
  TIME_ESTIMATE int NOT NULL DEFAULT 0,
  REPLICATE char(1) NOT NULL DEFAULT 'N',
  REPLICATE_PARAMS text,
  CREATED_BY int DEFAULT NULL,
  XML_ID varchar(50) DEFAULT NULL,
  ALLOW_CHANGE_DEADLINE char(1) NOT NULL DEFAULT 'N',
  ALLOW_TIME_TRACKING char(1) NOT NULL DEFAULT 'N',
  TASK_CONTROL char(1) NOT NULL DEFAULT 'N',
  MATCH_WORK_TIME char(1) NOT NULL DEFAULT 'N',
  ADD_IN_REPORT char(1) NOT NULL DEFAULT 'N',
  GROUP_ID int DEFAULT NULL,
  PARENT_ID int DEFAULT NULL,
  MULTITASK char(1) NOT NULL DEFAULT 'N',
  SITE_ID char(2) NOT NULL,
  ACCOMPLICES text,
  AUDITORS text,
  RESPONSIBLES text,
  FILES text,
  TAGS text,
  DEPENDS_ON text,
  TPARAM_TYPE int,
  TPARAM_REPLICATION_COUNT int DEFAULT '0',
  STAGE_ID int NOT NULL DEFAULT '0',
  ZOMBIE char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_template_task_id ON b_tasks_template (task_id);
CREATE INDEX ix_b_tasks_template_parent_id ON b_tasks_template (parent_id);
CREATE INDEX ix_b_tasks_template_created_by ON b_tasks_template (created_by);
CREATE INDEX ix_b_tasks_template_responsible_id ON b_tasks_template (responsible_id);

CREATE TABLE b_tasks_template_dep (
  TEMPLATE_ID int NOT NULL,
  PARENT_TEMPLATE_ID int NOT NULL,
  DIRECT smallint DEFAULT '0',
  PRIMARY KEY (TEMPLATE_ID, PARENT_TEMPLATE_ID)
);
CREATE INDEX ix_b_tasks_template_dep_direct ON b_tasks_template_dep (direct);

CREATE TABLE b_tasks_viewed (
  TASK_ID int NOT NULL,
  USER_ID int NOT NULL,
  VIEWED_DATE timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  IS_REAL_VIEW char(1) NOT NULL DEFAULT 'Y',
  PRIMARY KEY (TASK_ID, USER_ID)
);
CREATE INDEX ix_b_tasks_viewed_user_id ON b_tasks_viewed (user_id);
CREATE UNIQUE INDEX ux_b_tasks_viewed_task_id_user_id_is_real_view ON b_tasks_viewed (task_id, user_id, is_real_view);

CREATE TABLE b_tasks_log (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  CREATED_DATE timestamp NOT NULL,
  USER_ID int NOT NULL,
  TASK_ID int NOT NULL,
  FIELD varchar(50) NOT NULL,
  FROM_VALUE text,
  TO_VALUE text,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_log_task_id_created_date ON b_tasks_log (task_id, created_date);
CREATE INDEX ix_b_tasks_log_user_id_field ON b_tasks_log (user_id, field);

CREATE TABLE b_tasks_elapsed_time (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  CREATED_DATE timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DATE_START timestamp DEFAULT NULL,
  DATE_STOP timestamp DEFAULT NULL,
  USER_ID int NOT NULL,
  TASK_ID int NOT NULL,
  MINUTES int NOT NULL,
  SECONDS int NOT NULL DEFAULT '0',
  SOURCE int NOT NULL DEFAULT '1',
  COMMENT_TEXT text,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_elapsed_time_task_id ON b_tasks_elapsed_time (task_id);
CREATE INDEX ix_b_tasks_elapsed_time_user_id ON b_tasks_elapsed_time (user_id);

CREATE TABLE b_tasks_reminder (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int NOT NULL,
  TASK_ID int NOT NULL,
  REMIND_DATE timestamp NOT NULL,
  TYPE char(1) NOT NULL,
  TRANSPORT char(1) NOT NULL,
  RECEPIENT_TYPE char(1) DEFAULT 'S',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_reminder_user_id_task_id ON b_tasks_reminder (user_id, task_id);
CREATE INDEX ix_b_tasks_reminder_remind_date ON b_tasks_reminder (remind_date);

CREATE TABLE b_tasks_filters (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int NOT NULL,
  NAME varchar(255) DEFAULT NULL,
  PARENT int NOT NULL,
  SERIALIZED_FILTER text,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_filters_user_id ON b_tasks_filters (user_id);

CREATE TABLE b_tasks_checklist_items (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  CREATED_BY int NOT NULL,
  TOGGLED_BY int DEFAULT NULL,
  TOGGLED_DATE timestamp DEFAULT NULL,
  TITLE text DEFAULT NULL,
  IS_COMPLETE char(1) NOT NULL DEFAULT 'N',
  IS_IMPORTANT char(1) NOT NULL DEFAULT 'N',
  SORT_INDEX int NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_checklist_items_task_id ON b_tasks_checklist_items (task_id);

CREATE TABLE b_tasks_checklist_items_tree (
 PARENT_ID int NOT NULL,
 CHILD_ID int NOT NULL,
 LEVEL smallint NOT NULL DEFAULT 0,
 PRIMARY KEY (PARENT_ID, CHILD_ID)
);
CREATE INDEX ix_b_tasks_checklist_items_tree_child_id_level ON b_tasks_checklist_items_tree (child_id, level);

CREATE TABLE b_tasks_checklist_items_member (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ITEM_ID int NOT NULL,
  USER_ID int NOT NULL,
  TYPE char(1) NOT NULL
);
CREATE UNIQUE INDEX ux_b_tasks_checklist_items_member_item_id_user_id_type ON b_tasks_checklist_items_member (item_id, user_id, type);
CREATE INDEX ix_b_tasks_checklist_items_member_user_id_type ON b_tasks_checklist_items_member (user_id, type);

CREATE TABLE b_tasks_template_chl_item (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TEMPLATE_ID int NOT NULL,
  SORT int DEFAULT '0',
  TITLE text NOT NULL,
  CHECKED smallint DEFAULT '0',
  IS_IMPORTANT char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (ID)
);

CREATE TABLE b_tasks_template_chl_item_tree (
  PARENT_ID int NOT NULL,
  CHILD_ID int NOT NULL,
  LEVEL smallint NOT NULL DEFAULT 0,
  PRIMARY KEY (PARENT_ID, CHILD_ID)
);
CREATE INDEX ix_b_tasks_template_chl_item_tree_child_id_level ON b_tasks_template_chl_item_tree (child_id, level);

CREATE TABLE b_tasks_template_chl_item_member (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ITEM_ID int NOT NULL,
  USER_ID int NOT NULL,
  TYPE char(1) NOT NULL
);
CREATE UNIQUE INDEX ux_b_tasks_template_chl_item_member_item_id_user_id_type ON b_tasks_template_chl_item_member (item_id, user_id, type);
CREATE INDEX ix_b_tasks_template_chl_item_member_user_id_type ON b_tasks_template_chl_item_member (user_id, type);

CREATE TABLE b_tasks_timer (
  TASK_ID int NOT NULL,
  USER_ID int NOT NULL,
  TIMER_STARTED_AT int NOT NULL DEFAULT '0',
  TIMER_ACCUMULATOR int NOT NULL DEFAULT '0',
  PRIMARY KEY (USER_ID)
);
CREATE INDEX ix_b_tasks_timer_task_id ON b_tasks_timer (task_id);

CREATE TABLE b_tasks_columns (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int NOT NULL,
  CONTEXT_ID int NOT NULL,
  NAME varchar(255) DEFAULT NULL,
  SERIALIZED_COLUMNS text,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_columns_user_id ON b_tasks_columns (user_id);

CREATE TABLE b_tasks_favorite (
  TASK_ID int NOT NULL,
  USER_ID int NOT NULL,
  PRIMARY KEY (TASK_ID, USER_ID)
);

CREATE TABLE b_tasks_msg_throttle (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  AUTHOR_ID int,
  INFORM_AUTHOR char(1) DEFAULT '0',
  STATE_ORIG text,
  STATE_LAST text,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_msg_throttle_task_id ON b_tasks_msg_throttle (task_id);

CREATE TABLE b_tasks_sorting (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  SORT decimal NOT NULL,
  USER_ID int NOT NULL DEFAULT 0,
  GROUP_ID int NOT NULL DEFAULT 0,
  PREV_TASK_ID int NOT NULL DEFAULT 0,
  NEXT_TASK_ID int NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_sorting_task_id_user_id ON b_tasks_sorting (task_id, user_id);
CREATE INDEX ix_b_tasks_sorting_task_id_group_id ON b_tasks_sorting (task_id, group_id);
CREATE INDEX ix_b_tasks_sorting_sort ON b_tasks_sorting (sort);

CREATE TABLE b_tasks_syslog (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TYPE smallint,
  CREATED_DATE timestamp,
  MESSAGE varchar(255),
  ENTITY_ID int,
  ENTITY_TYPE smallint,
  PARAM_A int,
  ERROR text,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_syslog_entity_type_entity_id ON b_tasks_syslog (entity_type, entity_id);
CREATE INDEX ix_b_tasks_syslog_created_date ON b_tasks_syslog (created_date);

CREATE TABLE b_tasks_task_template_access (
 ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 GROUP_CODE varchar(50) NOT NULL,
 ENTITY_ID int NOT NULL,
 TASK_ID int NOT NULL
);
CREATE INDEX ix_b_tasks_task_template_access_group_code_entity_id_task_id ON b_tasks_task_template_access (group_code, entity_id, task_id);

CREATE TABLE b_tasks_task_parameter (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  CODE smallint NOT NULL,
  VALUE varchar(10) DEFAULT null
);
CREATE UNIQUE INDEX ux_b_tasks_task_parameter_task_id_code_value ON b_tasks_task_parameter (task_id, code, value);

CREATE TABLE b_tasks_task_dep (
  TASK_ID int NOT NULL,
  PARENT_TASK_ID int NOT NULL,
  DIRECT smallint DEFAULT '0'
);
CREATE UNIQUE INDEX ux_b_tasks_task_dep_task_id_parent_task_id_direct ON b_tasks_task_dep (task_id, parent_task_id, direct);
CREATE UNIQUE INDEX ux_b_tasks_task_dep_parent_task_id_task_id_direct ON b_tasks_task_dep (parent_task_id, task_id, direct);

CREATE TABLE b_tasks_stages (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TITLE varchar(255) DEFAULT NULL,
  SORT int DEFAULT NULL,
  COLOR char(6) DEFAULT NULL,
  SYSTEM_TYPE varchar(20) DEFAULT NULL,
  ENTITY_ID int DEFAULT 0,
  ENTITY_TYPE char(1) DEFAULT 'G',
  ADDITIONAL_FILTER text DEFAULT null,
  TO_UPDATE text DEFAULT null,
  TO_UPDATE_ACCESS varchar(255) DEFAULT null,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_stages_entity_id_entity_type ON b_tasks_stages (entity_id, entity_type);

CREATE TABLE b_tasks_task_stage (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  STAGE_ID int NOT NULL,
  PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX ux_b_tasks_task_stage_stage_id_task_id ON b_tasks_task_stage (stage_id, task_id);
CREATE INDEX ix_b_tasks_task_stage_task_id ON b_tasks_task_stage (task_id);

CREATE TABLE b_tasks_projects (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ORDER_NEW_TASK varchar(10) NOT NULL DEFAULT 'desc',
  PRIMARY KEY (ID)
);

CREATE TABLE b_tasks_scorer (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int NOT NULL DEFAULT '0',
  TASK_ID int NOT NULL DEFAULT '0',
  GROUP_ID int NOT NULL DEFAULT '0',
  TYPE varchar(64) NOT NULL DEFAULT '0',
  VALUE int8 NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_scorer_group_id ON b_tasks_scorer (group_id);
CREATE INDEX ix_b_tasks_scorer_user_id_type_task_id ON b_tasks_scorer (user_id, type, task_id);
CREATE INDEX ix_b_tasks_scorer_user_id_task_id_type ON b_tasks_scorer (user_id, task_id, type);
CREATE INDEX ix_b_tasks_scorer_task_id_type ON b_tasks_scorer (task_id, type);

CREATE TABLE b_tasks_scorer_queue (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int8 NOT NULL,
  TYPE varchar(32) NOT NULL DEFAULT '',
  TASK_ID int8 NOT NULL,
  DATETIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_scorer_queue_user_id_type ON b_tasks_scorer_queue (user_id, type);

CREATE TABLE b_tasks_effective (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  DATETIME timestamp NOT NULL,
  DATETIME_REPAIR timestamp,
  USER_ID int NOT NULL,
  GROUP_ID int NOT NULL DEFAULT '0',
  EFFECTIVE smallint NOT NULL DEFAULT '0',
  TASK_ID int NOT NULL,
  TASK_TITLE varchar(255),
  TASK_DEADLINE timestamp,
  USER_TYPE char(1) NOT NULL,
  IS_VIOLATION char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_effective_user_id ON b_tasks_effective (user_id);
CREATE INDEX ix_b_tasks_effective_user_id_datetime ON b_tasks_effective (user_id, datetime);
CREATE INDEX ix_b_tasks_effective_task_id_is_violation_datetime ON b_tasks_effective (task_id, is_violation, datetime);
CREATE INDEX ix_b_tasks_effective_user_id_is_violation_datetime ON b_tasks_effective (user_id, is_violation, datetime);
CREATE INDEX ix_b_tasks_effective_group_id_is_violation_datetime ON b_tasks_effective (group_id, is_violation, datetime);

CREATE TABLE b_tasks_search_index (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  MESSAGE_ID int8 NOT NULL DEFAULT 0,
  SEARCH_INDEX text
);
CREATE UNIQUE INDEX ux_b_tasks_search_index_task_id_message_id ON b_tasks_search_index (task_id, message_id);
CREATE INDEX tx_b_tasks_search_index_search_index ON b_tasks_search_index USING GIN (to_tsvector('english', search_index));

CREATE TABLE b_tasks_sprint (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  GROUP_ID int NOT NULL,
  CREATED_BY_ID int NOT NULL,
  MODIFIED_BY_ID int NOT NULL,
  START_TIME timestamp DEFAULT CURRENT_TIMESTAMP,
  FINISH_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
);

CREATE TABLE b_tasks_role (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  NAME varchar(250) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE b_tasks_role_relation (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ROLE_ID int8 NOT NULL,
  RELATION varchar(8) NOT NULL DEFAULT '',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_role_relation_role_id ON b_tasks_role_relation (role_id);
CREATE INDEX ix_b_tasks_role_relation_relation ON b_tasks_role_relation (relation);

CREATE TABLE b_tasks_permission (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ROLE_ID int8 NOT NULL,
  PERMISSION_ID varchar(32) NOT NULL DEFAULT '0',
  VALUE int NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_permission_role_id ON b_tasks_permission (role_id);
CREATE INDEX ix_b_tasks_permission_permission_id ON b_tasks_permission (permission_id);

CREATE TABLE b_tasks_template_permission (
ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
TEMPLATE_ID int8 DEFAULT NULL,
ACCESS_CODE varchar(8) DEFAULT NULL,
PERMISSION_ID varchar(32) DEFAULT NULL,
VALUE int DEFAULT '0',
PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_template_permission_template_id ON b_tasks_template_permission (template_id);
CREATE INDEX ix_b_tasks_template_permission_access_code ON b_tasks_template_permission (access_code);
CREATE INDEX ix_b_tasks_template_permission_permission_id ON b_tasks_template_permission (permission_id);

CREATE TABLE b_tasks_user_option (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  USER_ID int NOT NULL,
  OPTION_CODE int NOT NULL
);
CREATE UNIQUE INDEX ux_b_tasks_user_option_task_id_user_id_option_code ON b_tasks_user_option (task_id, user_id, option_code);
CREATE INDEX ix_b_tasks_user_option_user_id_option_code ON b_tasks_user_option (user_id, option_code);

CREATE TABLE b_tasks_scrum_entity (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  GROUP_ID int NOT NULL,
  ENTITY_TYPE varchar(20) NOT NULL,
  NAME varchar(255) DEFAULT NULL,
  SORT smallint DEFAULT NULL,
  CREATED_BY int NOT NULL,
  MODIFIED_BY int NOT NULL,
  DATE_START timestamp DEFAULT NULL,
  DATE_END timestamp DEFAULT NULL,
  DATE_START_TZ varchar(50) DEFAULT NULL,
  DATE_END_TZ varchar(50) DEFAULT NULL,
  STATUS varchar(32) DEFAULT NULL,
  INFO text
);
CREATE INDEX ix_b_tasks_scrum_entity_group_id ON b_tasks_scrum_entity (group_id);
CREATE INDEX ix_b_tasks_scrum_entity_entity_type ON b_tasks_scrum_entity (entity_type);

CREATE TABLE b_tasks_scrum_item (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ENTITY_ID int NOT NULL,
  TYPE_ID int,
  EPIC_ID int,
  ACTIVE char(1) DEFAULT 'Y',
  NAME varchar(255) DEFAULT NULL,
  DESCRIPTION text DEFAULT NULL,
  SORT smallint DEFAULT NULL,
  CREATED_BY int NOT NULL,
  MODIFIED_BY int NOT NULL,
  STORY_POINTS varchar(255) DEFAULT NULL,
  SOURCE_ID int DEFAULT NULL,
  INFO text
);
CREATE INDEX ix_b_tasks_scrum_item_entity_id ON b_tasks_scrum_item (entity_id);
CREATE INDEX ix_b_tasks_scrum_item_type_id ON b_tasks_scrum_item (type_id);
CREATE INDEX ix_b_tasks_scrum_item_epic_id ON b_tasks_scrum_item (epic_id);
CREATE INDEX ix_b_tasks_scrum_item_source_id ON b_tasks_scrum_item (source_id);

CREATE TABLE b_tasks_scrum_type (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ENTITY_ID int NOT NULL,
  NAME varchar(255) NOT NULL,
  SORT smallint DEFAULT NULL,
  DOD_REQUIRED char(1) DEFAULT NULL
);
CREATE INDEX ix_b_tasks_scrum_type_entity_id ON b_tasks_scrum_type (entity_id);

CREATE TABLE b_tasks_scrum_type_checklist_items (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ENTITY_ID int NOT NULL,
  CREATED_BY int NOT NULL,
  TOGGLED_BY int DEFAULT NULL,
  TOGGLED_DATE timestamp DEFAULT NULL,
  TITLE varchar(255) DEFAULT NULL,
  IS_COMPLETE char(1) NOT NULL DEFAULT 'N',
  IS_IMPORTANT char(1) NOT NULL DEFAULT 'N',
  SORT_INDEX int NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_scrum_type_checklist_items_entity_id ON b_tasks_scrum_type_checklist_items (entity_id);

CREATE TABLE b_tasks_scrum_type_checklist_tree (
  PARENT_ID int NOT NULL,
  CHILD_ID int NOT NULL,
  LEVEL smallint NOT NULL DEFAULT 0,
  PRIMARY KEY (PARENT_ID, CHILD_ID)
);

CREATE TABLE b_tasks_scrum_item_checklist_items (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ITEM_ID int NOT NULL,
  CREATED_BY int NOT NULL,
  TOGGLED_BY int DEFAULT NULL,
  TOGGLED_DATE timestamp DEFAULT NULL,
  TITLE varchar(255) DEFAULT NULL,
  IS_COMPLETE char(1) NOT NULL DEFAULT 'N',
  IS_IMPORTANT char(1) NOT NULL DEFAULT 'N',
  SORT_INDEX int NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_scrum_item_checklist_items_item_id ON b_tasks_scrum_item_checklist_items (item_id);

CREATE TABLE b_tasks_scrum_item_checklist_tree (
  PARENT_ID int NOT NULL,
  CHILD_ID int NOT NULL,
  LEVEL smallint NOT NULL DEFAULT 0,
  PRIMARY KEY (PARENT_ID, CHILD_ID)
);

CREATE TABLE b_tasks_scorer_event (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  HID varchar(64) NOT NULL,
  TYPE varchar(64) NOT NULL,
  DATA text NOT NULL,
  TASK_DATA text DEFAULT NULL,
  CREATED timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PROCESSED timestamp NOT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_scorer_event_hid ON b_tasks_scorer_event (hid);
CREATE INDEX ix_b_tasks_scorer_event_processed ON b_tasks_scorer_event (processed);

CREATE TABLE b_tasks_project_last_activity (
  PROJECT_ID int NOT NULL,
  ACTIVITY_DATE timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (PROJECT_ID)
);

CREATE TABLE b_tasks_project_user_option (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PROJECT_ID int NOT NULL,
  USER_ID int NOT NULL,
  OPTION_CODE int NOT NULL
);
CREATE UNIQUE INDEX ux_b_tasks_project_user_option_project_id_user_id_option_code ON b_tasks_project_user_option (project_id, user_id, option_code);
CREATE INDEX ix_b_tasks_project_user_option_user_id_option_code ON b_tasks_project_user_option (user_id, option_code);

CREATE TABLE b_tasks_result (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int8 NOT NULL,
  COMMENT_ID int8 NOT NULL,
  TEXT text NOT NULL,
  CREATED_BY int8 NOT NULL,
  CREATED_AT timestamp NOT NULL,
  UPDATED_AT timestamp NOT NULL,
  STATUS int NOT NULL DEFAULT 0
);
CREATE INDEX ix_b_tasks_result_task_id ON b_tasks_result (task_id);
CREATE INDEX ix_b_tasks_result_comment_id ON b_tasks_result (comment_id);

CREATE TABLE b_tasks_scrum_epic (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  GROUP_ID int NOT NULL,
  NAME varchar(255) DEFAULT NULL,
  DESCRIPTION text DEFAULT NULL,
  CREATED_BY int NOT NULL,
  MODIFIED_BY int DEFAULT NULL,
  COLOR varchar(18) DEFAULT NULL
);
CREATE INDEX ix_b_tasks_scrum_epic_group_id ON b_tasks_scrum_epic (group_id);

CREATE TABLE b_tasks_scrum_chat (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  CHAT_ID int NOT NULL,
  GROUP_ID int NOT NULL
);
CREATE INDEX ix_b_tasks_scrum_chat_group_id ON b_tasks_scrum_chat (group_id);

CREATE TABLE b_tasks_scrum_type_participants (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TYPE_ID int NOT NULL,
  CODE varchar(24) NOT NULL
);
CREATE INDEX ix_b_tasks_scrum_type_participants_type_id ON b_tasks_scrum_type_participants (type_id);

CREATE TABLE b_tasks_marketing (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int8 NOT NULL DEFAULT 0,
  EVENT varchar(255) NOT NULL,
  DATE_CREATED int8 NOT NULL,
  DATE_SHEDULED int8 NOT NULL DEFAULT 0,
  DATE_EXECUTED int8 NOT NULL DEFAULT 0,
  PARAMS text DEFAULT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_marketing_event_user_id ON b_tasks_marketing (event, user_id);
CREATE INDEX ix_b_tasks_marketing_date_executed_date_sheduled ON b_tasks_marketing (date_executed, date_sheduled);

CREATE TABLE b_tasks_template_member (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TEMPLATE_ID int NOT NULL DEFAULT '0',
  USER_ID int NOT NULL DEFAULT '0',
  TYPE char(1) NOT NULL DEFAULT '',
  PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX ux_b_tasks_template_member_template_id_user_id_type ON b_tasks_template_member (template_id, user_id, type);
CREATE INDEX ix_b_tasks_template_member_user_id_type ON b_tasks_template_member (user_id, type);

CREATE TABLE b_tasks_template_tag (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TEMPLATE_ID int NOT NULL,
  USER_ID int NOT NULL,
  NAME varchar(255) NOT NULL,
  PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX ux_b_tasks_template_tag_template_id_user_id_name ON b_tasks_template_tag (template_id, user_id, name);
CREATE INDEX ix_b_tasks_template_tag_name ON b_tasks_template_tag (name);
CREATE INDEX ix_b_tasks_template_tag_user_id ON b_tasks_template_tag (user_id);

CREATE TABLE b_tasks_template_dependence (
ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
TEMPLATE_ID int NOT NULL,
DEPENDS_ON_ID int NOT NULL,
PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX ux_b_tasks_template_dependence_template_id_depends_on_id ON b_tasks_template_dependence (template_id, depends_on_id);
CREATE INDEX ix_b_tasks_template_dependence_depends_on_id ON b_tasks_template_dependence (depends_on_id);

CREATE TABLE b_tasks_label (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  USER_ID int DEFAULT 0,
  NAME varchar(255) NOT NULL,
  GROUP_ID int DEFAULT 0,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_label_name ON b_tasks_label (name);
CREATE UNIQUE INDEX ux_b_tasks_label_user_id_group_id_name ON b_tasks_label (user_id, group_id, name);

CREATE TABLE b_tasks_task_tag (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TAG_ID int NOT NULL,
  TASK_ID int NOT NULL,
  PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX ux_b_tasks_task_tag_tag_id_task_id ON b_tasks_task_tag (tag_id, task_id);

CREATE TABLE b_tasks_viewed_group (
  GROUP_ID int NOT NULL,
  USER_ID int NOT NULL,
  TYPE_ID int NOT NULL,
  MEMBER_TYPE char(1) NOT NULL DEFAULT '',
  VIEWED_DATE timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (GROUP_ID, USER_ID, MEMBER_TYPE, TYPE_ID)
);

CREATE TABLE b_tasks_scenario (
  TASK_ID int8 NOT NULL,
  SCENARIO varchar(8) NOT NULL DEFAULT 'default'
);

CREATE TABLE b_tasks_template_scenario (
  TEMPLATE_ID int8 NOT NULL,
  SCENARIO varchar(8) NOT NULL DEFAULT 'default',
  PRIMARY KEY (TEMPLATE_ID)
);
CREATE INDEX ix_b_tasks_template_scenario_scenario ON b_tasks_template_scenario (scenario);

CREATE TABLE b_tasks_regular_parameters (
  ID int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  REGULAR_PARAMETERS text NOT NULL,
  START_TIME timestamp DEFAULT NULL,
  START_DAY date DEFAULT NULL,
  NOTIFICATION_SENT char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX ux_b_tasks_regular_parameters_task_id ON b_tasks_regular_parameters (task_id);
CREATE INDEX ix_b_tasks_regular_parameters_start_day_notification_sent ON b_tasks_regular_parameters (start_day, notification_sent);

CREATE TABLE b_tasks_custom_sort (
  ID int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  TASK_ID int NOT NULL,
  SORT decimal NOT NULL,
  USER_ID int NOT NULL DEFAULT 0,
  GROUP_ID int NOT NULL DEFAULT 0,
  PREV_TASK_ID int NOT NULL DEFAULT 0,
  NEXT_TASK_ID int NOT NULL DEFAULT 0,
  PRIMARY KEY (ID)
);
CREATE INDEX ix_b_tasks_custom_sort_user_id_sort_task_id ON b_tasks_custom_sort (user_id, sort, task_id);
CREATE INDEX ix_b_tasks_custom_sort_group_id_sort_task_id ON b_tasks_custom_sort (group_id, sort, task_id);
CREATE INDEX ix_b_tasks_custom_sort_task_id_group_id ON b_tasks_custom_sort (task_id, group_id);
CREATE UNIQUE INDEX ux_b_tasks_custom_sort_task_id_user_id_group_id ON b_tasks_custom_sort (task_id, user_id, group_id);
