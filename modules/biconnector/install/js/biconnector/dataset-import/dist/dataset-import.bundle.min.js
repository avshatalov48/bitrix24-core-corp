this.BX=this.BX||{};this.BX.BIConnector=this.BX.BIConnector||{};(function(t,e,i,s,n,a,o,r,l,d,c,p,u,h,g,m,f,v,T,_,E,S){"use strict";const P={props:{saveLocked:{type:Boolean,required:false,default:false},isEditMode:{type:Boolean,required:false,default:false}},computed:{saveButtonClass(){return{"ui-btn-base-light":this.saveLocked,"app-root__button--blocked":this.saveLocked,"ui-btn-success":!this.saveLocked}},saveButtonText(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_SAVE"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CREATE")}},mounted(){E.Dom.addClass(document.querySelector("body"),"app-body");const t=this.$refs.buttonsPanel;if(t){this.$root.$el.parentNode.appendChild(t);new BX.UI.Pinner(t,{fixBottom:true,fullWidth:true})}},methods:{onCreateButtonClick(){this.$Bitrix.eventEmitter.emit("biconnector:dataset-import:createButtonClick",{})},onCancelButtonClick(){this.$Bitrix.eventEmitter.emit("biconnector:dataset-import:cancelButtonClick",{})}},template:`\n\t\t<div class="app">\n\t\t\t<div class="app__block app__block--narrow">\n\t\t\t\t<slot name="left-panel"></slot>\n\t\t\t</div>\n\t\t\t<div class="app__block">\n\t\t\t\t<slot name="right-panel"></slot>\n\t\t\t</div>\n\t\n\t\t\t<div class="ui-button-panel-wrapper" ref="buttonsPanel">\n\t\t\t\t<div class="ui-button-panel">\n\t\t\t\t\t<div class="app-root__button-wrapper" :class="saveLocked ? 'app-root__button-wrapper--blocked' : ''">\n\t\t\t\t\t\t<button class="ui-btn ui-btn-md app-root__button" :class="saveButtonClass" @click="onCreateButtonClick" ref="saveButton">\n\t\t\t\t\t\t\t{{ saveButtonText }}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button class="ui-btn ui-btn-md ui-btn-link app-root__button" @click="onCancelButtonClick">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_CANCEL') }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const b={template:`\n\t\t<div class="import-config">\n\t\t\t<slot></slot>\n\t\t</div>\n\t`};const I={emits:["close"],props:{id:{type:String,required:true},options:{type:Object,required:false,default:{}},wrapperClass:{type:String,required:false,default:""}},data(){return{popupInstance:null}},computed:{popupOptions(){return{id:this.id,content:this.$refs.content,autoHide:true,events:{onPopupClose:this.closePopup,onPopupDestroy:this.closePopup},fixed:true,...this.options}}},methods:{closePopup(){var t;(t=u.PopupManager.getPopupById(this.id))==null?void 0:t.destroy();this.popupInstance=null;this.$emit("close")}},mounted(){if(!this.popupInstance){this.popupInstance=new u.Popup(this.popupOptions)}this.popupInstance.show()},beforeUnmount(){this.closePopup()},template:`\n\t\t<div ref="content" :class="wrapperClass">\n\t\t\t<slot></slot>\n\t\t</div>\n\t`};const A={emits:["close"],props:{title:{type:String,required:true}},computed:{popupOptions(){return{width:440,closeIcon:true,noAllPaddings:true,overlay:true}}},methods:{onClose(){this.$emit("close")}},components:{Popup:I},template:`\n\t\t<Popup id="generic" @close="this.onClose" :options="popupOptions" wrapper-class="generic-popup">\n\t\t\t<h3 class="generic-popup__header">{{ title }}</h3>\n\t\t\t<div class="generic-popup__content">\n\t\t\t\t<slot name="content"></slot>\n\t\t\t</div>\n\t\t\t<div class="generic-popup__buttons-wrapper">\n\t\t\t\t<slot name="buttons"></slot>\n\t\t\t</div>\n\t\t</Popup>\n\t`};const C={emits:["close"],props:{title:{type:String,required:true},description:{type:String,required:false,default:""},options:{type:Object,required:false,default:{}}},computed:{popupOptions(){return{width:500,minHeight:299,closeIcon:true,noAllPaddings:true,overlay:true,...this.options}}},methods:{onClose(){this.$emit("close")}},components:{Popup:I},template:`\n\t\t<Popup id="saveProgress" @close="this.onClose" :options="popupOptions" wrapper-class="dataset-import-popup--full-height">\n\t\t\t<div class="dataset-save-progress-popup">\n\t\t\t\t<div class="dataset-save-progress-popup__content">\n\t\t\t\t\t<slot name="icon"></slot>\n\t\t\t\t\t<div class="dataset-save-progress-popup__texts">\n\t\t\t\t\t\t<h3 class="dataset-save-progress-popup__header">{{ title }}</h3>\n\t\t\t\t\t\t<p class="dataset-save-progress-popup__description" v-if="description">{{ description }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="dataset-save-progress-popup__buttons"><slot name="buttons"></slot></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Popup>\n\t`};const M={props:{title:{type:String,required:true},description:{type:String,required:true}},emits:["click"],computed:{},methods:{onClick(){this.$emit("click")}},components:{SaveProgressPopup:C},template:`\n\t\t<SaveProgressPopup\n\t\t\t:title="title"\n\t\t\t:description="description"\n\t\t>\n\t\t\t<template v-slot:icon>\n\t\t\t\t<div class="dataset-save-progress-popup__failure-logo"></div>\n\t\t\t</template>\n\t\t\t<template v-slot:buttons>\n\t\t\t\t<button @click="onClick" class="ui-btn ui-btn-md ui-btn-primary">{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_FAILURE_POPUP_BUTTON') }}</button>\n\t\t\t</template>\n\t\t</SaveProgressPopup>\n\t`};const D={props:{description:{type:String,required:false,default:""}},mounted(){const t=new c.Loader({target:this.$refs.loader,size:65,color:"var(--ui-color-primary)",strokeWidth:4,mode:"inline"});t.show()},computed:{popupOptions(){return{autoHide:false,closeIcon:false}}},components:{SaveProgressPopup:C},template:`\n\t\t<SaveProgressPopup\n\t\t\t:title="$Bitrix.Loc.getMessage('DATASET_IMPORT_PROGRESS_POPUP_HEADER')"\n\t\t\t:description="description"\n\t\t\t:options="popupOptions"\n\t\t>\n\t\t\t<template v-slot:icon>\n\t\t\t\t<div ref="loader" class="dataset-save-progress-loader"></div>\n\t\t\t</template>\n\t\t</SaveProgressPopup>\n\t`};const y={emits:["click","oneMoreClick"],props:{title:{type:String,required:true},description:{type:String,required:false,default:""},datasetId:{type:Number,required:true},showMoreButton:{type:Boolean,required:false,default:false}},computed:{},methods:{onButtonClick(){E.Dom.addClass(this.$refs.openDatasetButton,"ui-btn-wait");E.ajax.runAction("biconnector.externalsource.dataset.getEditUrl",{data:{id:this.datasetId}}).then((t=>{const e=t.data;if(e){window.open(e,"_blank").focus();E.Dom.removeClass(this.$refs.openDatasetButton,"ui-btn-wait");this.$emit("click")}})).catch((t=>{E.Dom.removeClass(this.$refs.openDatasetButton,"ui-btn-wait");this.$emit("click")}))},onOneMoreButtonClick(){E.Dom.addClass(this.$refs.oneMoreButton,"ui-btn-wait");this.$emit("oneMoreClick")}},components:{SaveProgressPopup:C},template:`\n\t\t<SaveProgressPopup\n\t\t\t:title="title"\n\t\t\t:description="description"\n\t\t>\n\t\t\t<template v-slot:icon>\n\t\t\t\t<div class="dataset-save-progress-popup__success-logo"></div>\n\t\t\t</template>\n\t\t\t<template v-slot:buttons>\n\t\t\t\t<a class="ui-btn ui-btn-md ui-btn-primary" @click="onButtonClick" ref="openDatasetButton">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_SUCCESS_POPUP_BUTTON') }}\n\t\t\t\t</a>\n\t\t\t\t<a class="ui-btn ui-btn-md ui-btn-light-border" @click="onOneMoreButtonClick" ref="oneMoreButton" v-if="showMoreButton">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_SUCCESS_POPUP_ONE_MORE_BUTTON') }}\n\t\t\t\t</a>\n\t\t\t</template>\n\t\t</SaveProgressPopup>\n\t`};const L={props:{hintClass:{type:String,required:false,default:"ui-alert-primary"}},template:`\n\t\t<div class="ui-alert dataset-import-step__hint" :class="hintClass">\n\t\t\t<span class="ui-alert-message">\n\t\t\t\t<slot></slot>\n\t\t\t</span>\n\t\t</div>\n\t`};const w={data(){return{section:null}},props:{title:{type:String,required:true},hint:{type:String,required:false,default:""},isOpenInitially:{type:Boolean,required:false,default:true},canCollapse:{type:Boolean,required:false,default:true},disabled:{type:Boolean,required:false,default:false},customClasses:{type:Array,default:[]},hintClass:{type:String,required:false}},computed:{additionalClasses(){const t=this.customClasses.reduce(((t,e)=>{t[e]=true;return t}),{});return{"dataset-import-step__disabled":this.disabled,...t}}},methods:{toggleCollapse(t){this.section.toggle(t)}},mounted(){const t=this.$refs.contentContainer;const e=new s.Section({title:this.title,isOpen:this.isOpenInitially,canCollapse:this.canCollapse});e.append(this.$refs.content);e.renderTo(t);this.section=e},watch:{title(t){if(!this.section){return}this.section.getContent().querySelector(".ui-section__title").innerHTML=E.Text.encode(t)}},components:{StepHint:L},template:`\n\t\t<div class="dataset-import-step" :class="additionalClasses" ref="contentContainer">\n\t\t</div>\n\t\t<div ref="content" class="dataset-import-step__content">\n\t\t\t<StepHint v-if="hint" :hint-class="hintClass">\n\t\t\t\t<span v-html="hint"></span>\n\t\t\t</StepHint>\n\t\t\t<slot></slot>\n\t\t</div>\n\t`};const $={emits:["validation"],props:{title:{type:String,required:false},hint:{type:String,required:false},isOpenInitially:{type:Boolean,required:false,default:true},disabled:{type:Boolean,required:false,default:false}},computed:{displayedTitle(){var t;return(t=this.title)!=null?t:this.defaultTitle},displayedHint(){var t;return(t=this.hint)!=null?t:this.defaultHint},defaultTitle(){return""},defaultHint(){return""}},methods:{open(){if(this.$refs.stepBlock){this.$refs.stepBlock.toggleCollapse(true)}},close(){if(this.$refs.stepBlock){this.$refs.stepBlock.toggleCollapse(false)}},validate(){return true},showValidationErrors(){}},components:{Step:w}};let O=t=>t,R;class B{static create(t,e){const i=E.Tag.render(R||(R=O`<span class='ui-hint-content'></span>`));i.innerHTML=t;const s={bindElement:e,darkMode:true,content:i,autoHide:false,bindOptions:{position:"top"},angle:{position:"bottom"},cacheable:false};u.Popup.setOptions({angleMinBottom:43});return new u.Popup(s)}}const F={props:{defaultValue:{required:false,default:""},name:{type:String,required:true},title:{type:String,required:true},placeholder:{type:String,required:false,default:""},isValid:{type:Boolean,required:false,default:true},errorMessage:{type:String,required:false,default:""},isDisabled:{type:Boolean,required:false,default:false},hintText:{type:String,required:false}},emits:["valueChange"],data(){return{value:this.defaultValue,areValidationErrorsShown:false}},methods:{showValidationErrors(){this.areValidationErrorsShown=true},onInputChange(t){this.$emit("valueChange",{newValue:t,fieldName:this.name})}},watch:{defaultValue(t){this.value=t}}};const x={extends:F,data(){return{errorPopup:null,errorPopupTimeout:null}},methods:{onInput(t){this.areValidationErrorsShown=false;this.onInputChange(t.target.value)},onBlur(){this.areValidationErrorsShown=true;if(!this.isValid){this.showErrorHint();this.errorPopupTimeout=setTimeout((()=>{this.hideErrorHint();this.errorPopupTimeout=null}),3e3)}},showErrorHint(){if(this.errorPopupTimeout){clearTimeout(this.errorPopupTimeout);this.errorPopupTimeout=null}else{this.errorPopup=this.createErrorPopup();this.errorPopup.show()}},hideErrorHint(){if(this.errorPopup){this.errorPopup.close()}},createErrorPopup(){return B.create(this.errorMessage,this.$refs.errorIconWrapper)}},mounted(){if(this.hintText){E.Dom.append(BX.UI.Hint.createNode(this.hintText),this.$refs.title)}},template:`\n\t\t<div class="ui-form-row">\n\t\t\t<div class="ui-form-label">\n\t\t\t\t<div class="ui-ctl-label-text" ref="title">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-textbox ui-ctl-w100 dataset-import-control">\n\t\t\t\t<input\n\t\t\t\t\tclass="ui-ctl-element dataset-import-field"\n\t\t\t\t\ttype="text"\n\t\t\t\t\t:class="{ 'data-import-field--invalid': !isValid && areValidationErrorsShown }"\n\t\t\t\t\t:disabled="isDisabled"\n\t\t\t\t\t:placeholder="placeholder"\n\t\t\t\t\tv-model="value"\n\t\t\t\t\t@input="onInput"\n\t\t\t\t\t@blur="onBlur"\n\t\t\t\t>\n\t\t\t\t<div class="ui-ctl-after" ref="errorIconWrapper">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass="ui-icon-set --warning format-table__error-icon"\n\t\t\t\t\t\t@mouseenter="showErrorHint"\n\t\t\t\t\t\t@mouseleave="hideErrorHint"\n\t\t\t\t\t\tv-if="!isValid && areValidationErrorsShown"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const N={extends:F,template:`\n\t\t<div class="ui-form-row">\n\t\t\t<div class="ui-form-label">\n\t\t\t\t<div class="ui-ctl-label-text">{{ title }}</div>\n\t\t\t</div>\n\t\t\t<div class="ui-ctl ui-ctl-textarea dataset-import-textarea ui-ctl-w100 ui-ctl-no-resize">\n\t\t\t\t<textarea \n\t\t\t\t\tclass="ui-ctl-element dataset-import-textarea-element" \n\t\t\t\t\t:placeholder="placeholder" \n\t\t\t\t\t@input="onInputChange($event.target.value)"\n\t\t\t\t\tv-model="value"\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t</div>\n\t`};const k={props:{defaultName:{type:String,required:false,default:""},defaultDescription:{type:String,required:false,default:""},unvalidatedFields:{type:Object,required:false,default:{}},disabledFields:{type:Object,required:false,default:{}},datasetSourceCode:{type:String,required:true}},emits:["valueChange","validationNeeded"],methods:{onValueChange(t){this.$emit("valueChange",t)},showValidationErrors(){this.$refs.nameField.showValidationErrors()}},components:{StringField:x,TextField:N},template:`\n\t\t<div class="ui-form dataset-properties">\n\t\t\t<StringField\n\t\t\t\tref="nameField"\n\t\t\t\tname="name"\n\t\t\t\t:defaultValue="defaultName"\n\t\t\t\t@value-change="onValueChange"\n\t\t\t\t:title="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_DATASET_PROPERTIES_CODE')"\n\t\t\t\t:placeholder="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_DATASET_PROPERTIES_CODE_PLACEHOLDER', { '#CODE#': this.datasetSourceCode })"\n\t\t\t\t:is-valid="unvalidatedFields.name?.result ?? true"\n\t\t\t\t:is-disabled="disabledFields.name ?? false"\n\t\t\t\t:error-message="unvalidatedFields.name?.message ?? ''"\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tname="description"\n\t\t\t\t:defaultValue="defaultDescription"\n\t\t\t\t@value-change="onValueChange"\n\t\t\t\t:title="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_DATASET_PROPERTIES_DESCRIPTION')"\n\t\t\t/>\n\t\t</div>\n\t`};const V={extends:$,props:{datasetSourceCode:{type:String,required:true},reservedNames:{type:Array,required:false,default:[]}},emits:["propertiesChanged"],computed:{datasetProperties(){return this.$store.state.config.datasetProperties},defaultTitle(){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PROPERTIES_HEADER")},defaultHint(){if(this.isEditMode){return""}return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PROPERTIES_HINT")},disabledFields(){return{name:this.$store.getters.isEditMode}},unvalidatedFields(){const t={};const e=this.validateName();if(!e.result){t.name=e}return t},isEditMode(){return this.$store.getters.isEditMode}},components:{Step:w,DatasetProperties:k},methods:{onDatasetPropertiesFieldsChange(t){const e=this.datasetProperties;e[t.fieldName]=t.newValue;this.$store.commit("setDatasetProperties",e);this.validate();this.$emit("propertiesChanged")},validate(){let t=true;if(!this.isEditMode){t=Object.keys(this.unvalidatedFields).length===0}this.$emit("validation",t);return t},validateName(){const t=this.$store.state.config.datasetProperties.name;if(!t){return{result:true}}const e=this.reservedNames.includes(t);if(e){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_DATASET_EXISTS")}}if(t.length>30){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_DATASET_TOO_LONG")}}if(!/^[a-z][\d_a-z]*$/.test(t)){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_DATASET_INVALID_CHARS")}}return{result:true}},showValidationErrors(){this.$refs.datasetProperties.showValidationErrors()}},template:`\n\t\t<Step\n\t\t\t:title="displayedTitle"\n\t\t\t:hint="displayedHint"\n\t\t\t:is-open-initially="isOpenInitially"\n\t\t\t:disabled="disabled"\n\t\t\tref="stepBlock"\n\t\t>\n\t\t\t<slot name="additional-properties"></slot>\n\t\t\t<DatasetProperties\n\t\t\t\t@value-change="onDatasetPropertiesFieldsChange"\n\t\t\t\t:default-name="datasetProperties.name"\n\t\t\t\t:default-description="datasetProperties.description"\n\t\t\t\tref="datasetProperties"\n\t\t\t\t:disabled-fields="disabledFields"\n\t\t\t\t:unvalidated-fields="unvalidatedFields"\n\t\t\t\t:dataset-source-code="datasetSourceCode"\n\t\t\t/>\n\t\t</Step>\n\t`};const H={props:{enabled:{type:Boolean,required:false,default:true},indeterminate:{type:Boolean,required:false,default:false}},emits:["checkboxClick"],computed:{isNeedShowOriginalNameHint(){var t,e;return(t=(e=this.$store.state.config.fileProperties)==null?void 0:e.firstLineHeader)!=null?t:true}},methods:{onCheckboxClick(t){t.preventDefault();this.$emit("checkboxClick")}},template:`\n\t\t<tr>\n\t\t\t<th class="format-table__header format-table__checkbox-header">\n\t\t\t\t<input class="format-table__checkbox" type="checkbox" @change="onCheckboxClick" :checked="enabled" :indeterminate.prop="indeterminate">\n\t\t\t</th>\n\t\t\t<th class="format-table__header format-table__type-header format-table__type-subfield-header">{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_FIELD_SETTINGS_TYPE_HEADER') }}</th>\n\t\t\t<th class="format-table__header format-table__header format-table__title-header">{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_FIELD_SETTINGS_CODE_HEADER') }}</th>\n\t\t\t<th class="format-table__header format-table__header format-table__title-header" v-if="isNeedShowOriginalNameHint"></th>\n\t\t</tr>\n\t`};const U={string:"string",money:"money",int:"int",double:"double",date:"date",datetime:"datetime"};const q={[U.string]:{title:E.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_TYPE_TEXT"),icon:"--formatting"},[U.money]:{title:E.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_TYPE_MONEY"),icon:"--money"},[U.int]:{title:E.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_TYPE_NUMBER"),icon:"--numbers-123"},[U.double]:{title:E.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_TYPE_DECIMAL"),icon:"--numbers-05"},[U.date]:{title:E.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_TYPE_DATE"),icon:"--calendar-1"},[U.datetime]:{title:E.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_TYPE_DATETIME"),icon:"--planning-2"}};var X=babelHelpers.classPrivateFieldLooseKey("selectedType");var G=babelHelpers.classPrivateFieldLooseKey("bindElement");var j=babelHelpers.classPrivateFieldLooseKey("onSelect");var W=babelHelpers.classPrivateFieldLooseKey("onClose");class Y{constructor(t){Object.defineProperty(this,X,{writable:true,value:void 0});Object.defineProperty(this,G,{writable:true,value:void 0});Object.defineProperty(this,j,{writable:true,value:void 0});Object.defineProperty(this,W,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,X)[X]=t.selectedType;babelHelpers.classPrivateFieldLooseBase(this,G)[G]=t.bindElement;babelHelpers.classPrivateFieldLooseBase(this,j)[j]=t.onSelect;babelHelpers.classPrivateFieldLooseBase(this,W)[W]=t.onClose}getMenu(){const t=[];Object.entries(q).forEach((([e,i])=>{t.push({html:`\n\t\t\t\t\t<div class="ui-icon-set ${i.icon}"></div>\n\t\t\t\t\t<span class="format-table__dropdown-item-text">${i.title}</span>\n\t\t\t\t\t${e===babelHelpers.classPrivateFieldLooseBase(this,X)[X]?'<div class="format-table__dropdown-item-selected ui-icon-set --check"></div>':""}\n\t\t\t\t`,onclick:(t,i)=>{babelHelpers.classPrivateFieldLooseBase(this,j)[j](e);i.getMenuWindow().close()},className:`format-table__dropdown-item${e===babelHelpers.classPrivateFieldLooseBase(this,X)[X]?" format-table__dropdown-item--active":""}`})}));return new u.Menu({className:"format-table__dropdown-popup",bindElement:babelHelpers.classPrivateFieldLooseBase(this,G)[G],items:t,events:{onClose:babelHelpers.classPrivateFieldLooseBase(this,W)[W]}})}}const z={props:{selectedType:{type:String,required:false,default:"text"},isEditMode:{type:Boolean,required:false,default:false}},emits:["valueChange"],data(){return{typeMenu:null,isFocused:false}},computed:{iconClass(){return q[this.selectedType].icon},typeTitle(){return q[this.selectedType].title}},methods:{onClick(t){if(this.isEditMode){return}this.isFocused=true;if(!this.typeMenu){return}this.typeMenu.getPopupWindow().setWidth(this.$refs.formatButton.offsetWidth);this.typeMenu.show()},createMenu(){if(!this.isEditMode){this.typeMenu=new Y({selectedType:this.selectedType,bindElement:this.$refs.formatButton,onSelect:t=>{this.$emit("valueChange",t)},onClose:()=>{this.isFocused=false}}).getMenu()}},destroyMenu(){var t;(t=this.typeMenu)==null?void 0:t.destroy()}},mounted(){this.createMenu()},beforeUnmount(){this.destroyMenu()},watch:{selectedType(t){this.destroyMenu();this.createMenu()}},template:`\n\t\t<div\n\t\t\tclass="ui-ctl ui-ctl-before-icon ui-ctl-after-icon ui-ctl-w100 format-table__type-control ui-ctl-dropdown"\n\t\t\tref="formatButton"\n\t\t\t@click="onClick"\n\t\t\t:class="{\n\t\t\t\t'format-table__type-control--disabled': isEditMode,\n\t\t\t\t'ui-ctl-hover': isFocused,\n\t\t\t}"\n\t\t>\n\t\t\t<div class="ui-ctl-after ui-ctl-icon-angle" v-if="!isEditMode"></div>\n\t\t\t<div class="ui-ctl-before">\n\t\t\t\t<div class="format-table__type-button" :class="{ 'format-table__type-button--disabled': isEditMode }">\n\t\t\t\t\t<div class="ui-icon-set" :class="iconClass"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="ui-ctl-element format-table__text-input">\n\t\t\t\t<span>{{ typeTitle }}</span>\n\t\t\t</div>\n\t\t</div>\n\t`};const K={directives:{hint:T.hint},props:{enabled:{type:Boolean,required:false,default:true},index:{type:Number,required:true},fieldSettings:{type:Object,required:false,default:null},invalidFields:{type:Object,required:false,default:{}},isEditMode:{type:Boolean,required:false,default:false}},data(){return{displayedValidationErrors:{name:true},errorPopup:{name:null},errorPopupTimeout:null}},computed:{isNameValid(){return!("name"in this.invalidFields)},displayedErrorForName(){return this.invalidFields.name.message},set(){return v.Set},originalsHintText(){const t=this.fieldSettings.originalType;const e=this.fieldSettings.originalName;let i="";if(t){i=this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_ORIG_TYPE",{"#CLASS#":'<span class="format-table__orig_info_title">',"#/CLASS#":"</span>","#TYPENAME#":q[t].title})}const s=this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_SETTINGS_ORIG_NAME",{"#CLASS#":'<span class="format-table__orig_info_title">',"#/CLASS#":"</span>","#FIELDNAME#":e});if(!t){return s}return`${i}<br>${s}`},isNeedShowOriginalNameHint(){var t,e,i;return((t=(e=this.$store.state.config.fileProperties)==null?void 0:e.firstLineHeader)!=null?t:true)&&((i=this.$store.state.config.connectionProperties)==null?void 0:i.connectionType)},hintOptions(){return{html:this.originalsHintText,popupOptions:{angle:{position:"left"},offsetLeft:30,offsetTop:-46,autoHide:false}}}},emits:["checkboxClick","fieldChange"],methods:{onCheckboxClick(t){t.preventDefault();this.$emit("checkboxClick",{index:this.index})},onTypeSelected(t){this.$emit("fieldChange",{fieldName:"type",value:t,index:this.index})},onFieldInput(t){this.displayedValidationErrors[t.target.name]=false;this.$emit("fieldChange",{fieldName:t.target.name,value:t.target.value,index:this.index})},onFieldBlur(t){this.displayedValidationErrors[t.target.name]=true;if("name"in this.invalidFields){this.showErrorHint();this.errorPopupTimeout=setTimeout((()=>{this.hideErrorHint();this.errorPopupTimeout=null}),3e3)}},showValidationErrors(){Object.keys(this.displayedValidationErrors).forEach((t=>{this.displayedValidationErrors[t]=true}))},showErrorHint(){if(this.errorPopupTimeout){clearTimeout(this.errorPopupTimeout);this.errorPopupTimeout=null}else{this.errorPopup.name=this.createErrorPopup();this.errorPopup.name.show()}},hideErrorHint(){if(this.errorPopup.name){this.errorPopup.name.close()}},createErrorPopup(){return B.create(this.displayedErrorForName,this.$refs.errorIconWrapper)}},watch:{isNeedShowOriginalNameHint(){if(this.$refs.originalsHint){this.$refs.originalsHint.remove()}}},components:{DataTypeButton:z,BIcon:v.BIcon},template:`\n\t\t<tr class="format-table__row">\n\t\t\t<td class="format-table__checkbox-cell">\n\t\t\t\t<input class="format-table__checkbox" ref="visibilityCheckbox" type="checkbox" @change="onCheckboxClick" :checked="enabled">\n\t\t\t</td>\n\t\t\t<td class="format-table__cell">\n\t\t\t\t<DataTypeButton :selected-type="fieldSettings.type" @value-change="onTypeSelected" :is-edit-mode="isEditMode" />\n\t\t\t</td>\n\t\t\t<td class="format-table__cell">\n\t\t\t\t<div\n\t\t\t\t\tclass="ui-ctl ui-ctl-textbox ui-ctl-w100 format-table__name-control"\n\t\t\t\t\t:class="{\n\t\t\t\t\t\t'format-table__text-input--invalid': displayedValidationErrors.name && !isNameValid,\n\t\t\t\t\t\t'format-table__text-input--disabled': isEditMode,\n\t\t\t\t\t\t'ui-ctl-after-icon': !isEditMode && !isNameValid,\n\t\t\t\t\t}"\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass="ui-ctl-element format-table__text-input format-table__name-input"\n\t\t\t\t\t\t:disabled="isEditMode"\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t:placeholder="$Bitrix.Loc.getMessage('DATASET_IMPORT_FIELD_SETTINGS_PLACEHOLDER')"\n\t\t\t\t\t\tname="name"\n\t\t\t\t\t\t@input="onFieldInput"\n\t\t\t\t\t\t@blur="onFieldBlur"\n\t\t\t\t\t\t:value="fieldSettings.name"\n\t\t\t\t\t>\n\t\t\t\t\t<div class="ui-ctl-after" ref="errorIconWrapper">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass="ui-icon-set --warning format-table__error-icon"\n\t\t\t\t\t\t\t@mouseenter="showErrorHint"\n\t\t\t\t\t\t\t@mouseleave="hideErrorHint"\n\t\t\t\t\t\t\tv-if="displayedValidationErrors.name && !isNameValid"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t\t<td class="format-table__cell" v-if="isNeedShowOriginalNameHint">\n\t\t\t\t<div class="format-table__orig-type-hint-wrapper" v-hint="hintOptions" ref="originalsHint">\n\t\t\t\t\t<div class="format-table__orig-type-hint">\n\t\t\t\t\t\t<BIcon\n\t\t\t\t\t\t\t:name="set.INFO_1"\n\t\t\t\t\t\t\t:size="20"\n\t\t\t\t\t\t\tcolor="#B5BABE"\n\t\t\t\t\t\t></BIcon>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t`};const Z={props:{fieldsSettings:{type:Array,required:false},unvalidatedRows:{type:Object,required:false},isEditMode:{type:Boolean,required:false,default:false}},emits:["rowToggle","headerToggle","rowFieldChanged"],computed:{areAllRowsVisible(){return this.$store.getters.areAllRowsVisible},areNoRowsVisible(){return this.$store.getters.areNoRowsVisible},areSomeRowsVisible(){return this.$store.getters.areSomeRowsVisible}},methods:{onRowCheckboxClicked(t){this.$emit("rowToggle",t)},onHeaderCheckboxClicked(){this.$emit("headerToggle")},onRowFieldChanged(t){this.$emit("rowFieldChanged",t)},showValidationErrors(){const t=Object.keys(this.unvalidatedRows);t.forEach((t=>{if(this.$refs.row[t]){this.$refs.row[t].showValidationErrors()}}))}},components:{TableHeader:H,TableRow:K},template:`\n\t\t<table class="format-table">\n\t\t\t<thead>\n\t\t\t\t<TableHeader :enabled="areAllRowsVisible" :indeterminate="areSomeRowsVisible" @checkbox-click="onHeaderCheckboxClicked" />\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<template v-for="(field, index) in fieldsSettings" :key="index">\n\t\t\t\t\t<TableRow\n\t\t\t\t\t\tref="row"\n\t\t\t\t\t\t:index="index"\n\t\t\t\t\t\t:enabled="field.visible"\n\t\t\t\t\t\t:field-settings="field"\n\t\t\t\t\t\t@checkbox-click="onRowCheckboxClicked"\n\t\t\t\t\t\t@field-change="onRowFieldChanged"\n\t\t\t\t\t\t:invalid-fields="unvalidatedRows[index] ?? []"\n\t\t\t\t\t\t:is-edit-mode="isEditMode"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t</tbody>\n\t\t</table>\n\t`};const Q={emits:["parsingOptionsChanged","settingsChanged"],extends:$,computed:{fieldsSettings(){return this.$store.state.config.fieldsSettings},defaultTitle(){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELDS_SETTINGS_HEADER")},defaultHint(){if(this.isEditMode){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELDS_SETTINGS_HINT_EDIT").replace("[link]",'<a onclick="top.BX.Helper.show(`redirect=detail&code=23378698`)">').replace("[/link]","</a>")}return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELDS_SETTINGS_HINT").replace("[link]",'<a onclick="top.BX.Helper.show(`redirect=detail&code=23378698`)">').replace("[/link]","</a>")},unvalidatedRows(){const t={};this.$store.state.config.fieldsSettings.forEach(((e,i)=>{const s={};if(!this.isEditMode){const t=this.validateName(e.name);if(!t.result){s.name=t}}if(Object.keys(s).length>0){t[i]=s}}));return t},isEditMode(){return this.$store.getters.isEditMode}},methods:{validateName(t){const e=t.length>0;if(!e){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_EMPTY_ERROR")}}const i=t.length>32;if(i){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_FIELD_TOO_LONG")}}const s=/^[A-Z](?=.*[A-Z_])[A-Z0-9_]*$/.test(t);if(!s){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_FIELD_INVALID_CHARS")}}const n=this.$store.getters.previewHeaders.reduce(((e,i)=>t===i?e+1:e),0)>1;if(n){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELD_VALIDATION_FIELD_ALREADY_USED")}}return{result:true}},onRowToggled(t){this.$store.commit("toggleRowVisibility",t.index);this.$emit("settingsChanged")},onHeaderToggled(t){if(this.$store.getters.areAllRowsVisible){this.$store.commit("setAllRowsInvisible")}else{this.$store.commit("setAllRowsVisible")}this.$emit("settingsChanged")},onRowFieldChanged(t){this.fieldsSettings[t.index][t.fieldName]=t.value;this.$store.commit("setFieldRowSettings",{index:t.index,settings:this.fieldsSettings[t.index]});if(t.fieldName==="type"){this.$emit("parsingOptionsChanged")}this.$emit("settingsChanged");this.validate()},validate(){const t=Object.keys(this.unvalidatedRows).length===0;this.$emit("validation",t);return t},showValidationErrors(){this.$refs.formatTable.showValidationErrors()}},components:{Step:w,FormatTable:Z},template:`\n\t\t<Step\n\t\t\t:title="displayedTitle"\n\t\t\t:hint="displayedHint"\n\t\t\t:is-open-initially="isOpenInitially"\n\t\t\t:disabled="disabled"\n\t\t\tref="stepBlock"\n\t\t>\n\t\t\t<div class="ui-form-row fields-settings">\n\t\t\t\t<FormatTable\n\t\t\t\t\t:fields-settings="fieldsSettings"\n\t\t\t\t\t@row-toggle="onRowToggled"\n\t\t\t\t\t@header-toggle="onHeaderToggled"\n\t\t\t\t\t@row-field-changed="onRowFieldChanged"\n\t\t\t\t\t:unvalidated-rows="unvalidatedRows"\n\t\t\t\t\tref="formatTable"\n\t\t\t\t\t:is-edit-mode="isEditMode"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Step>\n\t`};let J=t=>t,tt,et,it,st,nt,at,ot;const rt={CUSTOM:"custom",VALUE:"value"};var lt=babelHelpers.classPrivateFieldLooseKey("extractValues");var dt=babelHelpers.classPrivateFieldLooseKey("getContent");var ct=babelHelpers.classPrivateFieldLooseKey("getDropdownControl");class pt{static openSlider(t,e,i){BX.SidePanel.Instance.open("biconnector:import-field-formats",{width:584,contentCallback:()=>o.Layout.createContent({extensions:["ui.forms","ui.layout-form","ui.alerts","biconnector.dataset-import"],title:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_TITLE"),content(){return babelHelpers.classPrivateFieldLooseBase(pt,dt)[dt](t,e)},buttons({cancelButton:t,SaveButton:e}){return[new e({onclick:()=>{const t=BX.SidePanel.Instance.getTopSlider().getContainer().querySelector("#formatSelectorForm");i(babelHelpers.classPrivateFieldLooseBase(pt,lt)[lt](t));BX.SidePanel.Instance.close()}}),t]}})})}}function ut(t){const e=new FormData(t);const i=Object.fromEntries(e);const s=["date","datetime"];s.forEach((t=>{if(i[t]==="custom"){i[t]=i[`${t}CustomValue`]}delete i[`${t}CustomValue`]}));return i}function ht(t,e){const i=E.Tag.render(tt||(tt=J`
			<form class="ui-form" id="formatSelectorForm">
			</form>
		`));E.Dom.append(babelHelpers.classPrivateFieldLooseBase(pt,ct)[ct]({title:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_DATE"),subtitle:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_DATE_HINT"),options:e[U.date],fieldType:U.date,selected:t[U.date]}),i);E.Dom.append(babelHelpers.classPrivateFieldLooseBase(pt,ct)[ct]({title:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_DATETIME"),subtitle:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_DATETIME_HINT"),options:e[U.datetime],fieldType:U.datetime,selected:t[U.datetime]}),i);E.Dom.append(babelHelpers.classPrivateFieldLooseBase(pt,ct)[ct]({title:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_MONEY"),subtitle:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_MONEY_HINT"),options:e[U.money],fieldType:U.money,selected:t[U.money]}),i);E.Dom.append(babelHelpers.classPrivateFieldLooseBase(pt,ct)[ct]({title:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_DOUBLE"),subtitle:E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_DOUBLE_HINT"),options:e[U.double],fieldType:U.double,selected:t[U.double]}),i);return E.Tag.render(et||(et=J`
			<div class="format-selector">
				<div class="ui-alert ui-alert-primary format-selector__hint">
					<span class="ui-alert-message">
						${0}
					</span>
				</div>
				${0}
			</div>
		`),E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_HINT",{"[link]":'<a onclick="top.BX.Helper.show(`redirect=detail&code=23378698`)">',"[/link]":"</a>"}),i)}function gt(t){const e=E.Tag.render(it||(it=J`
			<select class="ui-ctl-element" name="${0}">
			</select>
		`),t.fieldType);let i=true;let s=null;let n=null;t.options.forEach((a=>{let o="";const r=a.value===t.selected;if(r){i=false}if(a.type===rt.VALUE){o=E.Tag.render(st||(st=J`
					<option ${0} value="${0}">${0}</option>
				`),a.value===t.selected?"selected":"",a.value,a.title)}else if(a.type===rt.CUSTOM){var l;s=E.Tag.render(nt||(nt=J`
					<option value="custom">${0}</option>
				`),E.Loc.getMessage("DATASET_IMPORT_FIELD_FORMAT_SELECTOR_CUSTOM_FORMAT"));o=s;n=E.Tag.render(at||(at=J`
					<div class="ui-ctl ui-ctl-textbox ui-ctl-w100 format-selector__custom-value-input format-selector__custom-value-input--hidden">
						<input class="ui-ctl-element" name="${0}CustomValue" type="text" placeholder="..." value="${0}">
					</div>
				`),t.fieldType,(l=a.value)!=null?l:"");E.Event.bind(e,"change",(t=>{const e=t.target.value;if(e==="custom"){E.Dom.removeClass(n,"format-selector__custom-value-input--hidden")}else{E.Dom.addClass(n,"format-selector__custom-value-input--hidden")}}))}E.Dom.append(o,e)}));if(i){if(s){s.setAttribute("selected",true)}if(n){n.querySelector("input").value=t.selected;E.Dom.removeClass(n,"format-selector__custom-value-input--hidden")}}return E.Tag.render(ot||(ot=J`
			<div class="ui-form-row">
				<div class="ui-form-label">
					<div class="ui-ctl-label-text">
						${0}
					</div>
					<div class="format-selector__type-subtitle">
						${0}
					</div>
				</div>
				<div class="ui-ctl ui-ctl-after-icon ui-ctl-dropdown ui-ctl-w100">
					<div class="ui-ctl-after ui-ctl-icon-angle"></div>
					${0}
				</div>
				${0}
			</div>
		`),t.title,t.subtitle,e,n)}Object.defineProperty(pt,ct,{value:gt});Object.defineProperty(pt,dt,{value:ht});Object.defineProperty(pt,lt,{value:ut});const mt={template:`\n\t\t<div class="ui-form-row">\n\t\t\t<div class="ui-ctl ui-ctl-before-icon ui-ctl-after-icon ui-ctl-w100 fields-settings__slider-button">\n\t\t\t\t<div class="ui-ctl-before">\n\t\t\t\t\t<div class="ui-icon-set --form-settings fields-settings__slider-icon"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-angle fields-settings__slider-chevron">\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-ctl-element">\n\t\t\t\t\t{{ this.$Bitrix.Loc.getMessage('DATASET_IMPORT_FIELD_SETTINGS_FORMAT_BUTTON') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ft={extends:F,mounted(){new l.Switcher({node:this.$refs.switcher,size:l.SwitcherSize.small,checked:this.defaultValue,handlers:{toggled:()=>{this.value=!this.value;this.onInputChange(this.value)}}})},template:`\n\t\t<div class="ui-form-row">\n\t\t\t<div class="switcher-field">\n\t\t\t\t<div ref="switcher"></div>\n\t\t\t\t<div class="switcher-field__label">\n\t\t\t\t\t<span>{{ title }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const vt={extends:F,template:`\n\t\t<div class="ui-form-row">\n\t\t\t<div class="ui-form-label">\n\t\t\t\t<div class="ui-ctl-label-text">{{ title }}</div>\n\t\t\t</div>\n\t\t\t<div class="ui-ctl ui-ctl-w100">\n\t\t\t\t<slot name="field-content"></slot>\n\t\t\t</div>\n\t\t</div>\n\t`};const Tt={extends:F,props:{options:{type:Array,required:true}},template:`\n\t\t<div class="ui-form-row">\n\t\t\t<div class="ui-form-label">\n\t\t\t\t<div class="ui-ctl-label-text">{{ title }}</div>\n\t\t\t</div>\n\t\t\t<div class="ui-ctl ui-ctl-after-icon ui-ctl-dropdown ui-ctl-w100">\n\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-angle"></div>\n\t\t\t\t<select class="ui-ctl-element" v-model="value" @change="onInputChange($event.target.value)">\n\t\t\t\t\t<option v-for="option in options" :value="option.value" :selected="option.value === defaultValue">{{ option.title }}</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t`};const _t={components:{FileUploadWidget:d.StackWidgetComponent,CustomField:vt,DropdownField:Tt,SwitcherField:ft,SliderButton:mt},props:{defaultEncoding:{type:String,required:false,default:""},defaultSeparator:{type:String,required:false,default:""},defaultFirstLineHeader:{type:Boolean,required:false,default:true},encodings:{type:Array,required:true},separators:{type:Array,required:true},isEditMode:{type:Boolean,required:false,default:false},unvalidatedFields:{type:Object,required:false,default:{}},dataFormatTemplates:{type:Object}},data(){return{inputElement:null,areValidationErrorsShown:false}},emits:["valueChange","uploadError","parsingOptionsChanged"],computed:{uploaderOptions(){return{controller:"biconnector.integration.ui.fileUploaderController.datasetUploaderController",controllerOptions:{},multiple:false,acceptOnlyImages:false,maxFileSize:1024*1024*60,autoUpload:true,acceptedFileTypes:[".csv"],events:{onUploadComplete:()=>{this.onUploadComplete()},"File:onRemove":()=>{this.onFileRemoved()},onError:()=>{this.onUploadError()},"File:onError":()=>{this.onUploadError()}}}},widgetOptions(){return{size:"large"}}},methods:{onValueChange(t){this.$emit("valueChange",t)},onUploadComplete(){const t=this.$refs.uploader.uploader.getFiles()[0];if(t&&t.isComplete()){this.areValidationErrorsShown=false;this.$emit("valueChange",{newValue:t.getServerFileId(),fieldName:"fileToken"});this.$emit("valueChange",{newValue:t.getName(),fieldName:"fileName"})}},onFileRemoved(){this.$emit("valueChange",{newValue:null,fieldName:"fileToken"})},onUploadError(){this.$emit("uploadError")},showValidationErrors(){this.areValidationErrorsShown=true},openDataFormatSlider(){pt.openSlider(this.$store.state.config.dataFormats,this.dataFormatTemplates,(t=>{this.$store.commit("setDataFormats",t);this.$emit("parsingOptionsChanged")}))}},template:`\n\t\t<div class="ui-form">\n\t\t\t<CustomField :title="$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_FIELD')" name="file">\n\t\t\t\t<template #field-content>\n\t\t\t\t\t<div class="dataset-file-upload">\n\t\t\t\t\t\t<FileUploadWidget\n\t\t\t\t\t\t\t:uploaderOptions="uploaderOptions"\n\t\t\t\t\t\t\t:widgetOptions="widgetOptions"\n\t\t\t\t\t\t\tref="uploader"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p class="dataset-import-field__error-text" v-if="areValidationErrorsShown && !unvalidatedFields.file?.result">\n\t\t\t\t\t\t\t{{ unvalidatedFields.file?.message }}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</CustomField>\n\t\t\t<div class="ui-form-row-inline">\n\t\t\t\t<DropdownField\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_ENCODING')"\n\t\t\t\t\tname="encoding"\n\t\t\t\t\t:options="encodings"\n\t\t\t\t\t:default-value="defaultEncoding"\n\t\t\t\t\t@value-change="onValueChange"\n\t\t\t\t/>\n\t\t\t\t<DropdownField\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_SEPARATOR')"\n\t\t\t\t\tname="separator"\n\t\t\t\t\t:options="separators"\n\t\t\t\t\t:default-value="defaultSeparator"\n\t\t\t\t\t@value-change="onValueChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SliderButton @click="openDataFormatSlider" />\n\t\t\t<SwitcherField\n\t\t\t\t:title="$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_FIRST_ROW_HEADER')"\n\t\t\t\tname="firstLineHeader"\n\t\t\t\t:default-value="defaultFirstLineHeader"\n\t\t\t\t@value-change="onValueChange"\n\t\t\t/>\n\t\t</div>\n\t`};const Et={extends:$,props:{encodings:{type:Array,required:true},separators:{type:Array,required:true},dataFormatTemplates:{type:Object}},data(){return{fileProperties:this.$store.state.config.fileProperties,isErrorDisplayed:false}},emits:["filePropertiesChange","parsingOptionsChanged"],computed:{defaultTitle(){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_HEADER")},defaultHint(){if(this.isErrorDisplayed){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_HINT_ERROR")}if(this.isEditMode){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_HINT_EDIT").replace("[link]",'<a onclick="top.BX.Helper.show(`redirect=detail&code=23378680`)">').replace("[/link]","</a>")}return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_HINT").replace("[link]",'<a onclick="top.BX.Helper.show(`redirect=detail&code=23378680`)">').replace("[/link]","</a>")},hintClass(){return this.isErrorDisplayed?"ui-alert-danger":"ui-alert-primary"},isEditMode(){return this.$store.getters.isEditMode},unvalidatedFields(){const t={};const e=this.validateFile();if(!e.result){t.file=e}return t}},methods:{onFilePropertiesChange(t){if(t.fieldName==="fileToken"){this.isErrorDisplayed=false}this.fileProperties[t.fieldName]=t.newValue;this.$store.commit("setFileProperties",this.fileProperties);if(t.fieldName!=="fileName"){this.$emit("filePropertiesChange")}this.validate()},onUploadError(){this.isErrorDisplayed=true},onParsingOptionsChanged(){this.$emit("parsingOptionsChanged")},validate(){let t=true;if(!this.isEditMode){t=Object.keys(this.unvalidatedFields).length===0}this.$emit("validation",t);return t},validateFile(){if(!this.isEditMode&&!this.$store.state.config.fileProperties.fileToken){return{result:false,message:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_NOT_SELECTED")}}return{result:true}},showValidationErrors(){this.$refs.fileUploader.showValidationErrors()}},components:{Step:w,FileUploader:_t},template:`\n\t\t<Step\n\t\t\t:title="displayedTitle"\n\t\t\t:hint="displayedHint"\n\t\t\t:is-open-initially="isOpenInitially"\n\t\t\t:disabled="disabled"\n\t\t\t:hint-class="hintClass"\n\t\t\tref="stepBlock"\n\t\t>\n\t\t\t<FileUploader\n\t\t\t\t@value-change="onFilePropertiesChange"\n\t\t\t\t@upload-error="onUploadError"\n\t\t\t\t@parsing-options-changed="onParsingOptionsChanged"\n\t\t\t\tref="fileUploader"\n\t\t\t\t:encodings="encodings"\n\t\t\t\t:separators="separators"\n\t\t\t\t:default-encoding="fileProperties.encoding"\n\t\t\t\t:default-first-line-header="fileProperties.firstLineHeader"\n\t\t\t\t:default-separator="fileProperties.separator"\n\t\t\t\t:is-edit-mode="isEditMode"\n\t\t\t\t:unvalidated-fields="unvalidatedFields"\n\t\t\t\t:data-format-templates="dataFormatTemplates"\n\t\t\t/>\n\t\t</Step>\n\t`};const St={props:{title:{type:String,required:false},customClasses:{type:Array,required:false}},components:{Step:w},template:`\n\t\t<Step\n\t\t\t:title="title"\n\t\t\t:can-collapse="false"\n\t\t\t:custom-classes="customClasses"\n\t\t>\n\t\t\t<slot></slot>\n\t\t</Step>\n\t`};const Pt={props:{headers:{type:Array,required:false,default:[]},columnVisibility:{type:Array,required:false,default:[]}},computed:{visibleHeaders(){return this.headers.filter(((t,e)=>this.columnVisibility[e]))}},template:`\n\t\t<thead>\n\t\t\t<tr class="dataset-preview-table__header-row">\n\t\t\t\t<th class="dataset-preview-table__header" v-for="header in visibleHeaders" :title="header">{{ header }}</th>\n\t\t\t</tr>\n\t\t</thead>\n\t`};const bt={props:{row:{type:Array,required:true},columnVisibility:{type:Array,required:false,default:[]}},computed:{visibleValues(){return this.row.filter(((t,e)=>this.columnVisibility[e]))}},template:`\n\t\t<tr>\n\t\t\t<td class="dataset-preview-table__cell" v-for="value in visibleValues" :title="value">{{ value }}</td>\n\t\t</tr>\n\t`};const It={props:{headers:{type:Array,required:false,default:[]},rows:{type:Array,required:false,default:[]},columnVisibility:{type:Array,required:false,default:[]}},data(){return{displayedColumnVisibility:this.columnVisibility,debouncedRefresh:E.debounce(this.refreshColumns,1e3)}},mounted(){const t=new p.Ears({container:document.querySelector(".dataset-preview-table"),smallSize:true,noScrollbar:false});t.init()},methods:{refreshColumns(t){this.displayedColumnVisibility=t;E.Dom.removeClass(this.$refs.table,"dataset-preview-table--fade")}},watch:{columnVisibility(t,e){E.Dom.addClass(this.$refs.table,"dataset-preview-table--fade");this.debouncedRefresh(t)}},components:{TableHeader:Pt,TableRow:bt},template:`\n\t\t<div class="dataset-preview-table" ref="table">\n\t\t\t<table class="dataset-preview-table__table">\n\t\t\t\t<TableHeader v-if="headers.length > 0" :headers="headers" :column-visibility="displayedColumnVisibility" />\n\t\t\t\t<tbody>\n\t\t\t\t\t<TableRow v-for="row in rows" :row="row" :column-visibility="displayedColumnVisibility" />\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t`};const At={components:{AppSection:St,PreviewTable:It},props:{emptyStateText:{type:String,required:false,default:null},error:{type:String,required:false,default:""},isLoading:{type:Boolean,required:false,default:false}},computed:{isEditMode(){return this.$store.getters.isEditMode},headers(){return this.$store.getters.previewHeaders},rows(){return this.$store.state.previewData.rows},isEverythingHidden(){return this.headers.length>0&&this.$store.getters.areNoRowsVisible},hasData(){return this.$store.getters.hasData},hasHeaders(){return this.headers.length>0},displayedEmptyStateText(){var t;return(t=this.emptyStateText)!=null?t:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_EMPTY_STATE")},displayedEverythingHiddenText(){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_EVERYTHING_HIDDEN")},columnVisibility(){return this.$store.getters.columnVisibilityMap},isErrorInEditMode(){return this.hasData&&this.error&&this.isEditMode},isEditModeInitialDataDisplayed(){return this.isEditMode&&!this.$store.state.config.fileProperties.fileToken},displayedTitle(){return this.isEditModeInitialDataDisplayed?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_INITIAL_DATA_PREVIEW_TITLE"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_TITLE")},hasDataDisplayedHint(){return this.isEditModeInitialDataDisplayed?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_INITIAL_DATA_PREVIEW_HINT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_HINT")}},watch:{isLoading(t){if(this.loader){this.loader.destroy()}if(t){this.loader=new c.Loader({target:this.$refs.loadingAnchor,size:77,color:"var(--ui-color-primary)",strokeWidth:4});this.loader.show()}}},template:`\n\t\t<AppSection\n\t\t\t:title="displayedTitle"\n\t\t\t:custom-classes="['dataset-import-step--full-height', 'dataset-import-step--sticky', 'import-preview']"\n\t\t>\n\t\t\t<div class="import-preview__loading" ref="loadingAnchor"></div>\n\t\t\t<template v-if="!isLoading">\n\t\t\t\t<template v-if="error">\n\t\t\t\t\t<div class="import-preview__no-data" v-if="isEverythingHidden">\n\t\t\t\t\t\t<div class="import-preview__no-data-logo"></div>\n\t\t\t\t\t\t<p class="import-preview__no-data-text">{{ displayedEverythingHiddenText }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t<div class="import-preview__has-data import-preview__has-data--edit-mode-error" v-if="isEditMode">\n\t\t\t\t\t\t\t<span class="import-preview__hint">{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_PREVIEW_HINT') }}</span>\n\t\t\t\t\t\t\t<PreviewTable\n\t\t\t\t\t\t\t\t:headers="headers"\n\t\t\t\t\t\t\t\t:column-visibility="columnVisibility"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div class="import-preview__edit-mode-error">\n\t\t\t\t\t\t\t\t<div class="import-preview__error-logo"></div>\n\t\t\t\t\t\t\t\t<p class="import-preview__no-data-text">{{ error }}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="import-preview__has-data" v-else>\n\t\t\t\t\t\t\t<span class="import-preview__hint">{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_PREVIEW_HINT') }}</span>\n\t\t\t\t\t\t\t<PreviewTable\n\t\t\t\t\t\t\t\t:headers="headers"\n\t\t\t\t\t\t\t\t:column-visibility="columnVisibility"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div class="import-preview__edit-mode-error">\n\t\t\t\t\t\t\t\t<div class="import-preview__error-logo"></div>\n\t\t\t\t\t\t\t\t<p class="import-preview__no-data-text">{{ error }}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<div class="import-preview__no-data" v-if="isEverythingHidden">\n\t\t\t\t\t\t<div class="import-preview__no-data-logo"></div>\n\t\t\t\t\t\t<p class="import-preview__no-data-text">{{ displayedEverythingHiddenText }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="import-preview__has-data" v-else-if="hasData">\n\t\t\t\t\t\t<span class="import-preview__hint">{{ hasDataDisplayedHint }}</span>\n\t\t\t\t\t\t<PreviewTable\n\t\t\t\t\t\t\t:headers="headers"\n\t\t\t\t\t\t\t:rows="rows"\n\t\t\t\t\t\t\t:column-visibility="columnVisibility"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="import-preview__has-data" v-else-if="hasHeaders">\n\t\t\t\t\t\t<PreviewTable\n\t\t\t\t\t\t\t:headers="headers"\n\t\t\t\t\t\t\t:column-visibility="columnVisibility"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class="import-preview__edit-mode-error">\n\t\t\t\t\t\t\t<div class="import-preview__no-data-logo"></div>\n\t\t\t\t\t\t\t<p class="import-preview__no-data-text">{{ displayedEmptyStateText }}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="import-preview__no-data" v-else>\n\t\t\t\t\t\t<div class="import-preview__no-data-logo"></div>\n\t\t\t\t\t\t<p class="import-preview__no-data-text">{{ displayedEmptyStateText }}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</template>\n\t\t</AppSection>\n\t`};let Ct=t=>t,Mt;const Dt={props:{appParams:{type:Object,required:false,default:{}}},data(){return{steps:{},shownPopups:{},isChanged:false,isSaveComplete:false,lastChangedStep:null}},computed:{sourceCode(){return""},loadParams(){return{}},saveParams(){return{}},isEditMode(){return false},datasetId(){return this.$store.state.config.datasetProperties.id},isSaveEnabled(){return!this.$store.getters.areNoRowsVisible&&this.isValidatedForSave&&!this.previewError},isValidatedForSave(){return true},unsavedChangesPopupTitle(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TITLE_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TITLE")},unsavedChangesPopupText(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TEXT_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TEXT")}},mounted(){this.$Bitrix.eventEmitter.subscribe("biconnector:dataset-import:createButtonClick",this.onSaveButtonClick);this.$Bitrix.eventEmitter.subscribe("biconnector:dataset-import:cancelButtonClick",this.onCancelButtonClick);const t=S.SidePanel.Instance.getTopSlider();if(t){top.BX.addCustomEvent(t,"SidePanel.Slider:onClose",this.onSliderClose);addEventListener("beforeunload",(e=>{top.BX.removeCustomEvent(t,"SidePanel.Slider:onClose",this.onSliderClose)}))}},beforeUnmount(){this.$Bitrix.eventEmitter.unsubscribe("biconnector:dataset-import:createButtonClick",this.onSaveButtonClick);this.$Bitrix.eventEmitter.unsubscribe("biconnector:dataset-import:cancelButtonClick",this.onCancelButtonClick)},methods:{markAsChanged(){this.isChanged=true},onSliderClose(t){if(!this.isChanged){if(!this.isSaveComplete){this.sendAnalytics({event:this.isEditMode?"edit_end":"creation_end",status:"error"})}return}t.denyAction();if(u.PopupManager.getPopupById("unsaved")){return}const e=new g.Button({color:g.ButtonColor.PRIMARY,text:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONTINUE_IMPORT"),events:{click(){a.destroy()}}});const i=new g.Button({color:g.ButtonColor.LINK,text:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONFIRM_CANCEL_IMPORT"),events:{click:()=>{this.isChanged=false;this.closeApp()}}});const s=this.unsavedChangesPopupTitle;const n=this.unsavedChangesPopupText;const a=new u.Popup({id:"unsaved",content:E.Tag.render(Mt||(Mt=Ct`
					<div class="generic-popup">
						<h3 class="generic-popup__header">${0}</h3>
						<div class="generic-popup__content">
							${0}
						</div>
						<div class="generic-popup__buttons-wrapper">
							${0}
							${0}
						</div>
					</div>
				`),s,n,e.render(),i.render()),width:440,noAllPaddings:true,autoHide:false,fixed:true,overlay:true});a.show()},closeApp(){S.SidePanel.Instance.getTopSlider().close()},toggleStepState(t,e=null){if(!this.steps[t]){return}if(E.Type.isNull(e)){this.steps[t].disabled=!Boolean(this.steps[t].disabled)}else{this.steps[t].disabled=e}},togglePopup(t,e=null){if(E.Type.isNull(e)){this.shownPopups[t]=!Boolean(this.shownPopups[t])}else{this.shownPopups[t]=e}},loadDataset(){E.ajax.runAction("biconnector.externalsource.dataset.view",{data:{type:this.sourceCode,fields:this.loadParams}}).then((t=>{this.onLoadSuccess(t)})).catch((t=>{this.onLoadError(t)}))},onStepValidation(t,e){if(!this.steps[t]){return}this.steps[t].valid=e},onSaveButtonClick(){if(!this.onSaveStart()){return}if(this.isEditMode){this.updateDataset()}else{this.saveDataset()}},onCancelButtonClick(){this.closeApp()},saveDataset(){E.ajax.runAction("biconnector.externalsource.dataset.add",{data:{type:this.sourceCode,fields:this.saveParams}}).then((t=>{this.onSaveEnd(t)})).catch((t=>{this.onSaveError()}))},updateDataset(){E.ajax.runAction("biconnector.externalsource.dataset.update",{data:{id:this.datasetId,type:this.sourceCode,fields:this.saveParams}}).then((t=>{this.onSaveEnd(t)})).catch((t=>{this.onSaveError()}))},onSaveStart(){return true},onSaveEnd(){},onSaveError(){},onLoadStart(){},onLoadSuccess(t){},onLoadError(t){},reload(){window.location.reload()},sendAnalytics(t){if(this.sourceCode){h.sendData({...this.getBaseAnalyticsParams(),...t})}},getBaseAnalyticsParams(){return{tool:"BI_Builder",c_section:"BI_Builder",category:this.sourceCode.toUpperCase()}}}};const yt={extends:Dt,data(){return{steps:{file:{disabled:false,valid:this.$store.getters.isEditMode},properties:{disabled:!this.$store.getters.isEditMode,valid:true},fields:{disabled:!this.$store.getters.isEditMode,valid:true}},shownPopups:{savingProgress:false,savingSuccess:false,savingFailure:false,editModeFileReplacement:false},isValidationComplete:true,popupParams:{savingSuccess:{}},lastReloadSource:null,initialPreviewData:{},initialFieldsSettings:[],previewError:"",isEditModeSaveConfirmed:false,isDataLoadingAnimationDisplayed:false,hasMinimalLoadingAnimationTimePassed:true}},computed:{sourceCode(){return"csv"},isEditMode(){return this.$store.getters.isEditMode},loadParams(){return{fileProperties:this.$store.state.config.fileProperties,datasetProperties:this.$store.state.config.datasetProperties,fieldsSettings:this.$store.state.config.fieldsSettings,dataFormats:this.$store.state.config.dataFormats}},saveParams(){return{fileProperties:this.$store.state.config.fileProperties,datasetProperties:this.$store.state.config.datasetProperties,fieldsSettings:this.$store.state.config.fieldsSettings,dataFormats:this.$store.state.config.dataFormats}},datasetId(){return this.$store.state.config.datasetProperties.id},isValidatedForSave(){return this.steps.fields.valid&&this.steps.properties.valid&&this.steps.file.valid},importFailurePopupTitle(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FAILURE_POPUP_HEADER_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FAILURE_POPUP_HEADER")},importSuccessPopupTitle(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_SUCCESS_POPUP_HEADER_EDIT").replace("#DATASET_TITLE#",this.popupParams.savingSuccess.title):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_SUCCESS_POPUP_HEADER").replace("#DATASET_TITLE#",this.popupParams.savingSuccess.title)},importSuccessPopupDescription(){return this.$store.state.config.fileProperties.fileName?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_SUCCESS_POPUP_DESCRIPTION").replace("#FILE_NAME#",this.popupParams.savingSuccess.fileName):""},importProgressPopupDescription(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PROGRESS_POPUP_DESCRIPTION_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PROGRESS_POPUP_DESCRIPTION")}},methods:{markAsChanged(){this.isChanged=true},onDatasetPropertiesChanged(){this.markAsChanged();if(this.lastChangedStep!=="properties"){this.sendAnalytics({event:this.isEditMode?"edit_start":"creation_start",c_element:"step_2",...this.isEditMode&&{p1:`datasetName_${this.$store.state.config.datasetProperties.name.replaceAll("_","")}`}})}this.lastChangedStep="properties"},onFieldsSettingsChanged(){this.markAsChanged();if(this.lastChangedStep!=="fields"){this.sendAnalytics({event:this.isEditMode?"edit_start":"creation_start",c_element:"step_3",...this.isEditMode&&{p1:`datasetName_${this.$store.state.config.datasetProperties.name.replaceAll("_","")}`}})}this.lastChangedStep="fields"},onDatasetReloadNeeded(t){this.markAsChanged();this.previewError="";this.lastReloadSource=t;if(this.$store.state.config.fileProperties.fileToken){if(t==="file"){this.lastChangedStep="file";this.sendAnalytics({event:this.isEditMode?"edit_start":"creation_start",c_element:"step_1",...this.isEditMode&&{p1:`datasetName_${this.$store.state.config.datasetProperties.name.replaceAll("_","")}`}});this.startPreviewLoadingAnimation()}this.loadDataset()}else if(this.isEditMode){this.$store.commit("setPreviewData",this.initialPreviewData);this.$store.commit("setFieldsSettings",this.initialFieldsSettings)}else{this.$store.commit("setPreviewData",[]);this.$refs.propertiesStep.close();this.$refs.fieldsStep.close();this.toggleStepState("properties",true);this.toggleStepState("fields",true)}},processLoadResponse(t){const e=t.data;if(!e||e.data.length===0){return}if(this.lastReloadSource==="file"&&!this.isEditMode){const t=[];e.headers.forEach(((e,i)=>{t.push(this.prepareHeader(e,i))}));this.$store.commit("setFieldsSettings",t)}this.$store.commit("setPreviewData",e.data)},prepareHeader(t,e){return{visible:true,type:t.type,name:t.name&&t.name.length>0?t.name:`field_${e}`,originalType:null,originalName:t.externalCode,externalCode:t.externalCode}},onLoadSuccess(t){this.stopPreviewLoadingAnimation();this.processLoadResponse(t);this.$refs.propertiesStep.open();this.$refs.fieldsStep.open();this.toggleStepState("properties",false);this.toggleStepState("fields",false);this.$refs.fieldsStep.validate()},onLoadError(t){var e,i;this.stopPreviewLoadingAnimation();this.previewError=(e=(i=t.errors[0])==null?void 0:i.message)!=null?e:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_ERROR_FILE")},onSaveStart(){if(!this.isValidatedForSave){this.$refs.fileStep.showValidationErrors();this.$refs.fieldsStep.showValidationErrors();this.$refs.propertiesStep.showValidationErrors();return false}if(this.isEditMode&&!this.isEditModeSaveConfirmed&&this.$store.state.config.fileProperties.fileToken){this.togglePopup("editModeFileReplacement",true);return false}this.togglePopup("savingProgress",true);return true},onSaveEnd(t){var e;const i=(e=t.data.name)!=null?e:this.$store.state.config.datasetProperties.name;this.popupParams.savingSuccess={title:i,datasetId:t.data.id,fileName:this.$store.state.config.fileProperties.fileName};this.togglePopup("savingProgress",false);this.togglePopup("savingSuccess",true);this.isChanged=false;this.isSaveComplete=true;BX.SidePanel.Instance.postMessage(window,"BIConnector.dataset-import:onDatasetCreated",{});this.sendAnalytics({event:this.isEditMode?"edit_end":"creation_end",status:"success",p1:`datasetName_${i.replaceAll("_","")}`})},onSaveError(){this.togglePopup("savingProgress",false);this.togglePopup("savingFailure",true);BX.SidePanel.Instance.postMessage(window,"BIConnector.dataset-import:onDatasetCreated",{});this.sendAnalytics({event:this.isEditMode?"edit_end":"creation_end",status:"error"})},onSuccessPopupClose(){this.togglePopup("savingSuccess",false);this.closeApp()},closeFailurePopup(){this.togglePopup("savingFailure",false)},onReplacementButtonClick(){this.isEditModeSaveConfirmed=true;this.togglePopup("editModeFileReplacement",false);this.onSaveButtonClick()},startPreviewLoadingAnimation(){this.isDataLoadingAnimationDisplayed=true;this.hasMinimalLoadingAnimationTimePassed=false;setTimeout((()=>{this.hasMinimalLoadingAnimationTimePassed=true}),1500)},stopPreviewLoadingAnimation(){this.isDataLoadingAnimationDisplayed=false}},mounted(){if(this.isEditMode){this.initialPreviewData=this.$store.state.previewData.rows;this.initialFieldsSettings=this.$store.state.config.fieldsSettings}},components:{AppLayout:P,ImportConfig:b,ImportPreview:At,FileStep:Et,DatasetPropertiesStep:V,FieldsSettingsStep:Q,ImportProgressPopup:D,ImportSuccessPopup:y,ImportFailurePopup:M,GenericPopup:A},template:`\n\t\t<AppLayout :save-locked="!isSaveEnabled" ref="appLayout" :is-edit-mode="isEditMode">\n\t\t\t<template v-slot:left-panel>\n\t\t\t\t<ImportConfig>\n\t\t\t\t\t<FileStep\n\t\t\t\t\t\t:separators="appParams.separators"\n\t\t\t\t\t\t:encodings="appParams.encodings"\n\t\t\t\t\t\t:disabled="steps.file.disabled"\n\t\t\t\t\t\t:data-format-templates="appParams.dataFormatTemplates"\n\t\t\t\t\t\tref="fileStep"\n\t\t\t\t\t\t@validation="onStepValidation('file', $event)"\n\t\t\t\t\t\t@file-properties-change="onDatasetReloadNeeded('file')"\n\t\t\t\t\t\t@parsing-options-changed="onDatasetReloadNeeded('fields')"\n\t\t\t\t\t/>\n\t\t\t\t\t<DatasetPropertiesStep\n\t\t\t\t\t\t:is-open-initially="isEditMode"\n\t\t\t\t\t\t:disabled="steps.properties.disabled"\n\t\t\t\t\t\t:reserved-names="appParams.reservedNames"\n\t\t\t\t\t\tref="propertiesStep"\n\t\t\t\t\t\t@validation="onStepValidation('properties', $event)"\n\t\t\t\t\t\t@properties-changed="onDatasetPropertiesChanged"\n\t\t\t\t\t\t:dataset-source-code="sourceCode"\n\t\t\t\t\t/>\n\t\t\t\t\t<FieldsSettingsStep\n\t\t\t\t\t\t:is-open-initially="isEditMode"\n\t\t\t\t\t\t:disabled="steps.fields.disabled"\n\t\t\t\t\t\tref="fieldsStep"\n\t\t\t\t\t\t@validation="onStepValidation('fields', $event)"\n\t\t\t\t\t\t@parsing-options-changed="onDatasetReloadNeeded('fields')"\n\t\t\t\t\t\t@settings-changed="onFieldsSettingsChanged"\n\t\t\t\t\t/>\n\t\t\t\t</ImportConfig>\n\t\t\t</template>\n\t\t\t<template v-slot:right-panel>\n\t\t\t\t<ImportPreview \n\t\t\t\t\t:error="previewError"\n\t\t\t\t\t:is-loading="isDataLoadingAnimationDisplayed || !hasMinimalLoadingAnimationTimePassed"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</AppLayout>\n\n\t\t<ImportProgressPopup\n\t\t\tv-if="shownPopups.savingProgress"\n\t\t\t:description="importProgressPopupDescription"\n\t\t/>\n\n\t\t<ImportSuccessPopup\n\t\t\tv-if="shownPopups.savingSuccess"\n\t\t\t@close="onSuccessPopupClose"\n\t\t\t@click="closeApp"\n\t\t\t@one-more-click="reload"\n\t\t\t:title="importSuccessPopupTitle"\n\t\t\t:description="importSuccessPopupDescription"\n\t\t\t:dataset-id="popupParams.savingSuccess.datasetId"\n\t\t\t:show-more-button="!isEditMode"\n\t\t/>\n\n\t\t<ImportFailurePopup\n\t\t\tv-if="shownPopups.savingFailure"\n\t\t\t@close="closeFailurePopup"\n\t\t\t@click="closeFailurePopup"\n\t\t\t:title="importFailurePopupTitle"\n\t\t\t:description="$Bitrix.Loc.getMessage('DATASET_IMPORT_FAILURE_POPUP_DESCRIPTION').replace('[link]', '<a>').replace('[/link]', '</a>')"\n\t\t/>\n\n\t\t<GenericPopup\n\t\t\tv-if="shownPopups.editModeFileReplacement"\n\t\t\t:title="$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_REPLACEMENT_TITLE')"\n\t\t\t@close="togglePopup('editModeFileReplacement', false)"\n\t\t>\n\t\t\t<template v-slot:content>\n\t\t\t\t{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_REPLACEMENT_TEXT') }}\n\t\t\t</template>\n\t\t\t<template v-slot:buttons>\n\t\t\t\t<button @click="onReplacementButtonClick" class="ui-btn ui-btn-md ui-btn-primary">{{\n\t\t\t\t\t$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_REPLACEMENT_LOAD') }}\n\t\t\t\t</button>\n\t\t\t\t<button @click="togglePopup('editModeFileReplacement', false)"\n\t\t\t\t\t\tclass="ui-btn ui-btn-md ui-btn-light-border">{{\n\t\t\t\t\t$Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_REPLACEMENT_CANCEL') }}\n\t\t\t\t</button>\n\t\t\t</template>\n\t\t</GenericPopup>\n\t`};let Lt=t=>t,wt;const $t={extends:F,props:{options:{type:Object,required:true},items:{type:Array,required:true},connectionId:{type:Number,required:false}},mounted(){const t=this.$refs["entity-selector"];const e=new f.TagSelector({id:this.options.selectorId,multiple:false,addButtonCaption:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_SELECT"),addButtonCaptionMore:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_CHANGE"),dialogOptions:{id:this.options.selectorId,items:this.prepareItems(this.items),enableSearch:true,dropdownMode:true,showAvatars:true,compactView:false,multiple:false,width:460,height:420,tabs:[{id:"connections",stubOptions:{title:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_NO_CONNECTIONS_TITLE"),subtitle:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_NO_CONNECTIONS_SUBTITLE"),arrow:true,icon:"/bitrix/images/biconnector/database-connections/connections-empty-state.png",iconOpacity:100}}],entities:[{id:"biconnector-external-connection"}]},events:{onTagAdd:t=>{this.$emit("valueChange",t)},onTagRemove:t=>{this.$emit("valueClear",t)}}});E.Dom.addClass(e.getDialog().getContainer(),"biconnector-dataset-entity-selector");e.renderTo(t);const i=E.Tag.render(wt||(wt=Lt`
			<span class="ui-selector-footer-link ui-selector-footer-link-add">
				${0}
			</span>
		`),this.$Bitrix.Loc.getMessage("DATASET_IMPORT_NO_CONNECTIONS_FOOTER"));E.Event.bind(i,"click",(()=>{const t="/bitrix/components/bitrix/biconnector.externalconnection/slider.php";BX.SidePanel.Instance.open(t,{width:564,allowChangeHistory:false,cacheable:false})}));e.getDialog().getTab(this.name).setFooter(i);this.selector=e;m.EventEmitter.subscribe("SidePanel.Slider:onMessage",(t=>{const[e]=t.getData();if(e.getEventId()==="BIConnector:ExternalConnection:onConnectionCreated"){this.addSelectedItem(e)}}))},methods:{prepareItems(t){const e=[];t.forEach((t=>{const i={id:t.ID,title:t.TITLE,entityId:this.options.selectorId,tabs:this.name,link:`/bitrix/components/bitrix/biconnector.externalconnection/slider.php?sourceId=${t.ID}`,linkTitle:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_ABOUT"),customData:{connectionType:t.TYPE}};if(t.TYPE){i.avatar=`/bitrix/images/biconnector/database-connections/${t.TYPE}.svg`}if(this.connectionId){i.selected=t.ID===this.connectionId.toString()}e.push(i)}));return e},addSelectedItem(t){const e=t.getData().connection;const i=this.selector.getDialog().addItem({id:e.id,title:e.name,entityId:this.options.selectorId,tabs:this.name,link:`/bitrix/components/bitrix/biconnector.externalconnection/slider.php?sourceId=${e.id}`,linkTitle:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_ABOUT"),avatar:`/bitrix/images/biconnector/database-connections/${e.type}.svg`,customData:{connectionType:e.type}});if(i){i.select()}this.selector.getDialog().hide()}},template:`\n\t\t<div>\n\t\t\t<div class="ui-ctl-title">\n\t\t\t\t<div class="ui-ctl-label-text">{{ this.title }}</div>\n\t\t\t</div>\n\t\t\t<div ref="entity-selector"></div>\n\t\t\t<div \n\t\t\t\tv-if="!isValid"\n\t\t\t\tclass="connection-error"\n\t\t\t>\n\t\t\t\t{{ this.errorMessage }}\n\t\t\t</div>\n\t\t</div>\n\t`};const Ot={extends:F,directives:{hint:T.hint},props:{options:{type:Object,required:true},connectionId:{type:Number,required:true}},mounted(){const t=this.$refs["entity-selector"];const e=new f.TagSelector({id:this.options.selectorId,multiple:false,addButtonCaption:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_SELECT"),addButtonCaptionMore:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_CHANGE"),dialogOptions:{id:this.options.selectorId,enableSearch:true,dropdownMode:true,showAvatars:false,compactView:true,multiple:false,dynamicLoad:true,width:460,height:420,tabs:[{id:"tables",stub:true,stubOptions:{title:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_TABLES_STUB_TITLE"),subtitle:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_TABLES_STUB_SUBTITLE")}}],entities:[{id:"biconnector-external-table",dynamicLoad:false,dynamicSearch:true}]},events:{onTagAdd:t=>{this.$emit("valueChange",t)},onTagRemove:t=>{this.$emit("valueClear",t)}}});E.Dom.addClass(e.getDialog().getContainer(),"biconnector-dataset-entity-selector");e.setLocked(!this.isDisabled);e.renderTo(t);this.selector=e},computed:{set(){return v.Set},hintOptions(){return{html:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_TABLES_HINT"),popupOptions:{bindOptions:{position:"top"},offsetTop:-10,angle:{position:"top",offset:34}}}}},watch:{connectionId(t){const e=this.selector;e.removeTags();e.getDialog().removeItems();if(!t){e.setLocked(true);return}e.getDialog().getEntity("biconnector-external-table").options.connectionId=t;e.setLocked(this.isDisabled)}},methods:{},components:{BIcon:v.BIcon},template:`\n\t\t<div>\n\t\t\t<div class="ui-ctl-title">\n\t\t\t\t<div class="ui-ctl-label-text table-title">\n\t\t\t\t\t<span>{{ this.title }}</span>\n\t\t\t\t\t<div class="table-hint" v-hint="hintOptions">\n\t\t\t\t\t\t<BIcon\n\t\t\t\t\t\t\t:name="set.HELP"\n\t\t\t\t\t\t\t:size="20"\n\t\t\t\t\t\t\tcolor="#D5D7DB"\n\t\t\t\t\t\t></BIcon>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div ref="entity-selector"></div>\n\t\t</div>\n\t`};const Rt={extends:$,props:{connections:{type:Array,required:true}},data(){return{connectionId:this.$store.state.config.connection,tableId:this.$store.state.config.table,connectionSelectorId:"biconnector-external-connection",tableSelectorId:"biconnector-external-table",unvalidatedFields:{}}},components:{ConnectionSelectorField:$t,CustomField:vt,TableSelectorField:Ot,StringField:x},computed:{defaultTitle(){return this.$Bitrix.Loc.getMessage("DATASET_IMPORT_CONNECTIONS_HEADER")},connectionSelectorOptions(){return{selectorId:this.connectionSelectorId}},tableSelectorOptions(){return{selectorId:this.tableSelectorId}},selectedConnectionType(){var t;return(t=this.$store.getters.connectionProperties)==null?void 0:t.connectionType},selectedConnectionId(){var t,e;return(t=(e=this.$store.getters.connectionProperties)==null?void 0:e.connectionId)!=null?t:0},selectedConnectionName(){var t;return(t=this.$store.getters.connectionProperties)==null?void 0:t.connectionName},selectedTableName(){var t;return(t=this.$store.getters.connectionProperties)==null?void 0:t.tableName},isEditMode(){return this.$store.getters.isEditMode}},methods:{onConnectionSelected(t){const e=t.data.tag;const i=t.target.getDialog().getItems();i.forEach((t=>{if(t.getId()===e.getId()){e.customData=t.getCustomData()}}));const s=parseInt(t.data.tag.getId(),10);this.$store.commit("setConnectionProperties",{connectionType:t.data.tag.getCustomData().get("connectionType"),connectionId:s,tableName:null});E.ajax.runAction("biconnector.externalsource.source.checkConnection",{data:{sourceId:s}}).then((()=>{this.unvalidatedFields={}})).catch((t=>{this.unvalidatedFields={connection:{result:false,message:t.errors[0].message}}}));this.$emit("validation",false)},onConnectionDeselected(){this.$store.commit("setConnectionProperties",{connectionType:null,connectionId:null,tableName:null});this.$emit("validation",false);this.unvalidatedFields={}},onTableSelected(t){this.$store.commit("setConnectionProperties",{connectionType:this.selectedConnectionType,connectionId:this.selectedConnectionId,tableName:t.data.tag.getTitle()});const e=t.data.tag;const i=t.target.getDialog().getItems();i.forEach((t=>{if(t.getId()===e.getId()){e.customData=t.getCustomData()}}));this.$store.commit("setDatasetProperties",{id:t.data.tag.getId(),name:t.data.tag.getCustomData().get("datasetName"),code:t.data.tag.getCustomData().get("description"),description:t.data.tag.getTitle(),externalCode:t.data.tag.getCustomData().get("description"),externalName:t.data.tag.getTitle()});this.$emit("tableSelected",t);this.$emit("validation",true)},onTableDeselected(t){this.$store.commit("setConnectionProperties",{connectionType:this.selectedConnectionType,connectionId:this.selectedConnectionId,tableName:null});this.$store.commit("setDatasetProperties",{id:null,name:null,code:null,description:null,externalCode:null,externalName:null});this.$emit("tableDeselected",t);this.$emit("validation",false)},openConnectionSlider(){const t=`/bitrix/components/bitrix/biconnector.externalconnection/slider.php?sourceId=${this.selectedConnectionId}`;BX.SidePanel.Instance.open(t,{width:564,allowChangeHistory:false,cacheable:false})}},emits:["tableSelected","tableDeselected"],template:`\n\t\t<Step\n\t\t\t:title="displayedTitle"\n\t\t\t:hint="displayedHint"\n\t\t\t:is-open-initially="isOpenInitially"\n\t\t\t:disabled="disabled"\n\t\t\tref="stepBlock"\n\t\t>\n\t\t\t<ConnectionSelectorField\n\t\t\t\tv-if="!this.isEditMode"\n\t\t\t\t:options="this.connectionSelectorOptions"\n\t\t\t\tname="connections"\n\t\t\t\t:title="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_CONNECTIONS_FIELD_TITLE')"\n\t\t\t\t:items="this.connections"\n\t\t\t\t:is-disabled="disabled"\n\t\t\t\t:connection-id="this.selectedConnectionId"\n\t\t\t\t@value-change="onConnectionSelected"\n\t\t\t\t@value-clear="onConnectionDeselected"\n\t\t\t\tref="connectionField"\n\t\t\t\t:is-valid="unvalidatedFields.connection?.result ?? true"\n\t\t\t\t:error-message="unvalidatedFields.connection?.message ?? ''"\n\t\t\t/>\n\t\t\t<TableSelectorField\n\t\t\t\tv-if="!this.isEditMode"\n\t\t\t\t:options="this.tableSelectorOptions"\n\t\t\t\tname="tables"\n\t\t\t\t:title="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_TABLES_FIELD_TITLE')"\n\t\t\t\t:connection-id="this.selectedConnectionId"\n\t\t\t\t:is-disabled="disabled"\n\t\t\t\t@value-change="onTableSelected"\n\t\t\t\t@value-clear="onTableDeselected"\n\t\t\t\tref="tableField"\n\t\t\t/>\n\n\t\t\t<div\n\t\t\t\tv-if="this.isEditMode"\n\t\t\t>\n\t\t\t\t<CustomField\n\t\t\t\t\tname="connections"\n\t\t\t\t\t:title="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_CONNECTIONS_FIELD_TITLE')"\n\t\t\t\t>\n\t\t\t\t\t<template #field-content>\n\t\t\t\t\t\t<div class="connection-preview">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass="connection-icon"\n\t\t\t\t\t\t\t\t:style="'background-image: url(\\'' + '/bitrix/images/biconnector/database-connections/' + selectedConnectionType + '.svg\\');'"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t<div class="connection-name" @click="openConnectionSlider">\n\t\t\t\t\t\t\t\t{{ this.selectedConnectionName }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</CustomField>\n\n\t\t\t\t<StringField\n\t\t\t\t\tname="tables"\n\t\t\t\t\t:title="this.$Bitrix.Loc.getMessage('DATASET_IMPORT_TABLES_FIELD_TITLE')"\n\t\t\t\t\t:is-disabled="true"\n\t\t\t\t\t:defaultValue="this.selectedTableName"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Step>\n\t`};const Bt={extends:Dt,data(){return{steps:{connection:{disabled:false,valid:this.$store.getters.isEditMode},properties:{disabled:!this.$store.getters.isEditMode,valid:true},fields:{disabled:!this.$store.getters.isEditMode,valid:true}},shownPopups:{savingProgress:false,savingSuccess:false,savingFailure:false,loadFailure:false},isValidationComplete:true,popupParams:{savingSuccess:{},loadFailure:{messages:[]}},isLoading:false,previewError:"",previewDataLoaded:false}},computed:{sourceCode(){var t,e;return(t=(e=this.$store.state.config.connectionProperties)==null?void 0:e.connectionType)!=null?t:""},isEditMode(){return this.$store.getters.isEditMode},loadParams(){return{datasetProperties:this.$store.state.config.datasetProperties,fieldsSettings:this.$store.state.config.fieldsSettings,dataFormats:this.$store.state.config.dataFormats,tableName:this.$store.state.config.connectionProperties.tableName,connectionType:this.$store.state.config.connectionProperties.connectionType}},saveParams(){return{datasetProperties:this.$store.state.config.datasetProperties,fieldsSettings:this.$store.state.config.fieldsSettings,dataFormats:this.$store.state.config.dataFormats,connectionSettings:this.$store.state.config.connectionProperties}},isValidatedForSave(){return this.steps.fields.valid&&this.steps.properties.valid&&this.steps.connection.valid},importSuccessPopupTitle(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_SUCCESS_POPUP_HEADER_EDIT").replace("#DATASET_TITLE#",this.popupParams.savingSuccess.title):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_SUCCESS_POPUP_HEADER").replace("#DATASET_TITLE#",this.popupParams.savingSuccess.title)},loadFailurePopupTitle(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_ERROR_EDIT_TITLE"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FILE_ERROR_TITLE")},fieldsSettingsStepHint(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELDS_SETTINGS_HINT_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_FIELDS_SETTINGS_HINT_EXTERNAL").replace("[link]",'<a onclick="top.BX.Helper.show(`redirect=detail&code=23508958`)">').replace("[/link]","</a>")},unsavedChangesPopupTitle(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TITLE_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TITLE_EXTERNAL")},unsavedChangesPopupText(){return this.isEditMode?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TEXT_EDIT"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_UNSAVED_CHANGES_TEXT_EXTERNAL")},emptyStateText(){return this.previewDataLoaded?this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_ERROR_EMPTY_TABLE"):this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_EMPTY_STATE_EXTERNAL")}},mounted(){var t;if(!this.$store.getters.hasData&&(t=this.$store.state.config.connectionProperties)!=null&&t.connectionId){this.loadDataset()}m.EventEmitter.subscribe("SidePanel.Slider:onMessage",this.onSliderEvent)},beforeUnmount(){m.EventEmitter.subscribe("SidePanel.Slider:onMessage",this.onSliderEvent)},methods:{onSliderEvent(t){const[e]=t.getData();if(e.getEventId()==="BIConnector:ExternalConnection:onConnectionCreated"){this.onConnectionCreated()}else if(e.getEventId()==="BIConnector:ExternalConnection:onConnectionCreationError"){this.onConnectionCreationError()}},onConnectionCreated(){this.sendAnalytics({event:"connection",status:"success"})},onConnectionCreationError(){this.sendAnalytics({event:"connection",status:"error"})},onTableSelected(){this.sendConnectionSelectorAnalytics();this.markAsChanged();this.loadDataset();this.$refs.propertiesStep.showValidationErrors()},onTableDeselected(){this.sendConnectionSelectorAnalytics();this.$refs.propertiesStep.close();this.$refs.fieldsStep.close();this.toggleStepState("properties",true);this.toggleStepState("fields",true);this.$store.commit("setPreviewData",[]);this.$store.commit("setFieldsSettings",[]);this.$refs.propertiesStep.validate();this.previewError=""},sendConnectionSelectorAnalytics(){if(this.lastChangedStep!=="connection"&&!this.isEditMode){this.sendAnalytics({event:"creation_start",c_element:"step_1"})}this.lastChangedStep="connection"},onDatasetPropertiesChanged(){this.markAsChanged();if(this.lastChangedStep!=="properties"&&!this.isEditMode){this.sendAnalytics({event:"creation_start",c_element:"step_2"})}this.lastChangedStep="properties"},onParsingOptionsChanged(){this.markAsChanged();this.loadDataset()},onFieldsChanged(){this.markAsChanged();if(this.lastChangedStep!=="fields"&&!this.isEditMode){this.sendAnalytics({event:"creation_start",c_element:"step_3"})}this.lastChangedStep="fields"},loadDataset(){this.isLoading=true;E.ajax.runAction("biconnector.externalsource.dataset.view",{data:{type:this.sourceCode,fields:this.loadParams,sourceId:this.$store.state.config.connectionProperties.connectionId}}).then((t=>{this.isLoading=false;this.onLoadSuccess(t)})).catch((t=>{var e,i;this.processLoadResponse(t);this.isLoading=false;this.previewError=(e=(i=t.errors[0])==null?void 0:i.message)!=null?e:this.$Bitrix.Loc.getMessage("DATASET_IMPORT_PREVIEW_ERROR_EXTERNAL")}))},onLoadSuccess(t){this.processLoadResponse(t);this.$refs.propertiesStep.open();this.$refs.fieldsStep.open();this.toggleStepState("properties",false);this.toggleStepState("fields",false);this.$refs.propertiesStep.validate();this.$refs.fieldsStep.validate()},processLoadResponse(t){const e=t.data;if(!e){return}this.previewDataLoaded=true;const i=[];e.headers.forEach(((t,e)=>{i.push(this.prepareHeader(t,e))}));this.$store.commit("setFieldsSettings",i);this.$store.commit("setPreviewData",e.data)},prepareHeader(t,e){return{id:t.id,visible:t.visible,type:t.type,name:t.name&&t.name.length>0?t.name:`FIELD_${e}`,originalType:t.type,originalName:t.externalCode,externalCode:t.externalCode}},onSaveStart(){if(!this.isValidatedForSave){this.$refs.fieldsStep.showValidationErrors();this.$refs.propertiesStep.showValidationErrors();return false}this.togglePopup("savingProgress",true);return true},onSaveEnd(t){var e;const i=(e=t.data.name)!=null?e:this.$store.state.config.datasetProperties.name;this.popupParams.savingSuccess={title:i,datasetId:t.data.id,link:t.data.url};this.togglePopup("savingProgress",false);this.togglePopup("savingSuccess",true);this.isChanged=false;this.sendAnalytics({event:this.isEditMode?"dataset_editing":"creation_end",status:"success",p1:`datasetName_${i.replaceAll("_","")}`});BX.SidePanel.Instance.postMessage(window,"BIConnector.dataset-import:onDatasetCreated",{})},onSaveError(){this.togglePopup("savingProgress",false);this.togglePopup("savingFailure",true);this.sendAnalytics({event:this.isEditMode?"dataset_editing":"creation_end",status:"error"});BX.SidePanel.Instance.postMessage(window,"BIConnector.dataset-import:onDatasetCreated",{})},onSuccessPopupClose(){this.togglePopup("savingSuccess",false);this.closeApp()},closeFailurePopup(){this.togglePopup("savingFailure",false)}},components:{AppLayout:P,ImportConfig:b,ImportPreview:At,ConnectionStep:Rt,DatasetPropertiesStep:V,FieldsSettingsStep:Q,ImportProgressPopup:D,ImportSuccessPopup:y,ImportFailurePopup:M,GenericPopup:A},template:`\n\t\t<AppLayout\n\t\t\tref="appLayout"\n\t\t\t:save-locked="!isSaveEnabled"\n\t\t\t:is-edit-mode="isEditMode"\n\t\t>\n\t\t\t<template v-slot:left-panel>\n\t\t\t\t<ImportConfig>\n\t\t\t\t\t<ConnectionStep\n\t\t\t\t\t\t:disabled="steps.connection.disabled"\n\t\t\t\t\t\t:connections="appParams.connections"\n\t\t\t\t\t\tref="connectionsStep"\n\t\t\t\t\t\t@table-selected="onTableSelected"\n\t\t\t\t\t\t@table-deselected="onTableDeselected"\n\t\t\t\t\t\t@validation="onStepValidation('connection', $event)"\n\t\t\t\t\t/>\n\t\t\t\t\t<DatasetPropertiesStep\n\t\t\t\t\t\t:is-open-initially="isEditMode"\n\t\t\t\t\t\t:disabled="steps.properties.disabled"\n\t\t\t\t\t\t:reserved-names="appParams.reservedNames"\n\t\t\t\t\t\tref="propertiesStep"\n\t\t\t\t\t\t@validation="onStepValidation('properties', $event)"\n\t\t\t\t\t\t@properties-changed="onDatasetPropertiesChanged"\n\t\t\t\t\t\tdataset-source-code="external"\n\t\t\t\t\t/>\n\t\t\t\t\t<FieldsSettingsStep\n\t\t\t\t\t\t:is-open-initially="isEditMode"\n\t\t\t\t\t\t:disabled="steps.fields.disabled"\n\t\t\t\t\t\tref="fieldsStep"\n\t\t\t\t\t\t@validation="onStepValidation('fields', $event)"\n\t\t\t\t\t\t@parsing-options-changed="onParsingOptionsChanged"\n\t\t\t\t\t\t@settings-changed="onFieldsChanged"\n\t\t\t\t\t\t:hint="fieldsSettingsStepHint"\n\t\t\t\t\t/>\n\t\t\t\t</ImportConfig>\n\t\t\t</template>\n\t\t\t<template v-slot:right-panel>\n\t\t\t\t<ImportPreview \n\t\t\t\t\t:empty-state-text="emptyStateText"\n\t\t\t\t\t:is-loading="isLoading"\n\t\t\t\t\t:error="previewError"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</AppLayout>\n\n\t\t<ImportProgressPopup\n\t\t\tv-if="shownPopups.savingProgress"\n\t\t\t:description="$Bitrix.Loc.getMessage('DATASET_IMPORT_PROGRESS_POPUP_DESCRIPTION')"\n\t\t/>\n\n\t\t<ImportSuccessPopup\n\t\t\tv-if="shownPopups.savingSuccess"\n\t\t\t@close="onSuccessPopupClose"\n\t\t\t@click="closeApp"\n\t\t\t:title="importSuccessPopupTitle"\n\t\t\t:description="''"\n\t\t\t:dataset-id="popupParams.savingSuccess.datasetId"\n\t\t\t:dataset-link="popupParams.savingSuccess.link"\n\t\t\t:show-more-button="!isEditMode"\n\t\t\t@one-more-click="reload"\n\t\t/>\n\n\t\t<ImportFailurePopup\n\t\t\tv-if="shownPopups.savingFailure"\n\t\t\t@close="closeFailurePopup"\n\t\t\t@click="closeFailurePopup"\n\t\t\t:title="$Bitrix.Loc.getMessage('DATASET_IMPORT_FAILURE_POPUP_HEADER')"\n\t\t\t:description="$Bitrix.Loc.getMessage('DATASET_IMPORT_EXTERNAL_FAILURE_POPUP_DESCRIPTION').replace('[link]', '<a>').replace('[/link]', '</a>')"\n\t\t/>\n\n\t\t<GenericPopup\n\t\t\tv-if="shownPopups.loadFailure"\n\t\t\t:title="loadFailurePopupTitle"\n\t\t\t@close="togglePopup('loadFailure')"\n\t\t>\n\t\t\t<template v-slot:content>\n\t\t\t\t<p v-for="message in popupParams.loadFailure.messages">\n\t\t\t\t\t{{ message }}\n\t\t\t\t</p>\n\t\t\t</template>\n\t\t\t<template v-slot:buttons>\n\t\t\t\t<button @click="togglePopup('loadFailure')" class="ui-btn ui-btn-md ui-btn-primary">{{ $Bitrix.Loc.getMessage('DATASET_IMPORT_FILE_ERROR_POPUP_CLOSE') }}</button>\n\t\t\t</template>\n\t\t</GenericPopup>\n\t`};class Ft{static buildStore(t){return _.createStore({state(){return t},mutations:{setFileProperties(t,e){t.config.fileProperties=e},setConnectionProperties(t,e){t.config.connectionProperties=e},setDatasetProperties(t,e){t.config.datasetProperties=e},toggleRowVisibility(t,e){t.config.fieldsSettings[e].visible=!t.config.fieldsSettings[e].visible},setAllRowsVisible(t){t.config.fieldsSettings=t.config.fieldsSettings.map((t=>{t.visible=true;return t}))},setAllRowsInvisible(t){t.config.fieldsSettings=t.config.fieldsSettings.map((t=>{t.visible=false;return t}))},setFieldRowSettings(t,e){t.config.fieldsSettings[e.index]=e.settings},setDataFormats(t,e){t.config.dataFormats=e},setPreviewData(t,e){t.previewData.rows=e},setFieldsSettings(t,e){t.config.fieldsSettings=e}},getters:{isEditMode(t){return t.config.datasetProperties.id>0},areAllRowsVisible(t){return t.config.fieldsSettings.filter((t=>!t.visible)).length===0},areNoRowsVisible(t){return t.config.fieldsSettings.filter((t=>t.visible)).length===0},areSomeRowsVisible(t,e){return!e.areAllRowsVisible&&!e.areNoRowsVisible},columnVisibilityMap(t){const e=[];t.config.fieldsSettings.forEach((t=>{e.push(Boolean(t.visible))}));return e},previewHeaders(t){return t.config.fieldsSettings.map((t=>t.name))},hasData(t){var e,i;return((e=t.previewData)==null?void 0:(i=e.rows)==null?void 0:i.length)>0},connectionProperties(t){var e;return(e=t.config)==null?void 0:e.connectionProperties},datasetProperties(t){var e;return(e=t.config)==null?void 0:e.datasetProperties}}})}}const xt={csv:yt,"1c":Bt};class Nt{static getApp(t,i={},s={}){const n={previewData:{},config:{fileProperties:{},dataFormats:{},datasetProperties:{},fieldsSettings:[]}};const a=BX.util.objectMerge(n,i);let o=null;const r=xt[t];if(r){o=e.BitrixVue.createApp({name:"DatasetImport",data(){return{appParams:s}},components:{appComponent:r},computed:{componentName(){return r}},template:`\n\t\t\t\t\t<component :is="componentName" :app-params="appParams" />\n\t\t\t\t`})}if(o){const t=Ft.buildStore(a);o.use(t)}return o}}class kt{static open(t,e=0){const i="/bitrix/components/bitrix/biconnector.dataset.import/slider.php";const s=new E.Uri(i);s.setQueryParam("sourceId",t);if(e){s.setQueryParam("datasetId",e)}const n={width:1240,allowChangeHistory:false,cacheable:false};if(screen.width<=1440){n.customLeftBoundary=0}S.SidePanel.Instance.open(s.toString(),n)}}t.AppFactory=Nt;t.Slider=kt})(this.BX.BIConnector.DatasetImport=this.BX.BIConnector.DatasetImport||{},BX.Vue3,BX,BX.UI,BX.UI,BX,BX.UI.SidePanel,BX,BX.UI,BX.UI.Uploader,BX,BX.UI,BX.Main,BX.UI.Analytics,BX.UI,BX.Event,BX.UI.EntitySelector,BX.UI.IconSet,BX.Vue3.Directives,BX.Vue3.Vuex,BX,BX);
//# sourceMappingURL=dataset-import.bundle.map.js