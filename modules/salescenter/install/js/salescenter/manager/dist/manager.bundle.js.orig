this.BX = this.BX || {};
(function (exports,clipboard,rest_client,loadext,popup,sidepanel,pull_client) {
	'use strict';

	var Manager =
	/*#__PURE__*/
	function () {
	  function Manager() {
	    babelHelpers.classCallCheck(this, Manager);
	  }

	  babelHelpers.createClass(Manager, null, [{
	    key: "init",
	    value: function init() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
	        connectedSiteId: 0,
	        isSitePublished: false,
	        isSiteExists: false
	      };
	      options.connectedSiteId = parseInt(options.connectedSiteId);

	      if (options.connectedSiteId > 0) {
	        Manager.connectedSiteId = options.connectedSiteId;
	      }

	      if (typeof options.siteTemplateCode === 'string') {
	        Manager.siteTemplateCode = options.siteTemplateCode;
	      }

	      if (typeof options.isSitePublished === "boolean") {
	        Manager.isSitePublished = options.isSitePublished;
	      }

	      if (typeof options.isSiteExists === "boolean") {
	        Manager.isSiteExists = options.isSiteExists;
	      }

	      if (!Manager.isPullInited) {
	        Manager.initPull();
	      }
	    }
	  }, {
	    key: "connect",
	    value: function connect() {
	      return new Promise(function (resolve, reject) {
	        if (!Manager.isSitePublished) {
	          if (Manager.connectedSiteId > 0 && Manager.isSiteExists) {
	            Manager.publicConnectedSite().then(function (result) {
	              resolve(result);
	            }).catch(function (reason) {
	              reject(reason);
	            });
	          } else {
	            var url = '/shop/stores/site/edit/0/?IFRAME=Y&IFRAME_TYPE=SIDE_SLIDER&no_redirect=Y';

	            if (Manager.siteTemplateCode) {
	              url = BX.util.add_url_param(url, {
	                tpl: Manager.siteTemplateCode
	              });
	            }

	            Manager.onSetConnectedSiteHandler = function () {
	              if (Manager.isSiteExists) {
	                Manager.publicConnectedSite().then(function (result) {
	                  resolve(result);
	                }).catch(function (reason) {
	                  reject(reason);
	                });
	              } else {
	                resolve();
	              }
	            };

	            Manager.openSlider(url);
	          }
	        } else {
	          resolve();
	        }
	      });
	    }
	  }, {
	    key: "publicConnectedSite",
	    value: function publicConnectedSite() {
	      return new Promise(function (resolve, reject) {
	        if (Manager.connectedSiteId > 0 && !Manager.isSitePublished) {
	          rest_client.rest.callMethod('landing.site.publication', {
	            id: Manager.connectedSiteId
	          }).then(function (result) {
	            Manager.isSitePublished = true;
	            Manager.firePublicConnectedSiteEvent();
	            resolve(result);
	          }).catch(function (reason) {
	            reject(reason);
	          });
	        } else {
	          resolve();
	        }
	      });
	    }
	  }, {
	    key: "firePublicConnectedSiteEvent",
	    value: function firePublicConnectedSiteEvent() {
	      top.BX.onCustomEvent('Salescenter.Manager:onPublicConnectedSite', {
	        isSitePublished: true
	      });
	    }
	  }, {
	    key: "addPublicConnectedSiteEventHandler",
	    value: function addPublicConnectedSiteEventHandler(callback) {
	      if (typeof callback === 'function') {
	        top.BX.addCustomEvent('Salescenter.Manager:onPublicConnectedSite', callback);
	      }
	    }
	  }, {
	    key: "copyUrl",
	    value: function copyUrl(url) {
	      BX.clipboard.copy(url);
	    }
	  }, {
	    key: "addCustomPage",
	    value: function addCustomPage() {
	      return new Promise(function (resolve) {
	        Manager.getAddUrlPopup().then(function (popup$$1) {
	          popup$$1.show();
	        });
	        Manager.addUrlResolve = resolve;
	      });
	    }
	  }, {
	    key: "resolveAddPopup",
	    value: function resolveAddPopup() {
	      if (Manager.addUrlResolve && typeof Manager.addUrlResolve === 'function') {
	        Manager.addUrlResolve();
	        Manager.addUrlResolve = null;
	      }
	    }
	  }, {
	    key: "initPopupTemplate",
	    value: function initPopupTemplate() {
	      return new Promise(function (resolve) {
	        BX.loadExt('salescenter.url_popup').then(function () {
	          Manager.templateEngine = BX.Vue.create({
	            el: document.createElement('div'),
	            template: '<bx-salescenter-url-popup/>',
	            mounted: function mounted() {
	              Manager.popupNode = this.$el;
	              this.$app = Manager;
	              resolve();
	            }
	          });
	        });
	      });
	    }
	  }, {
	    key: "getAddUrlPopup",
	    value: function getAddUrlPopup() {
	      return new Promise(function (resolve) {
	        if (!Manager.addUrlPopup) {
	          Manager.initPopupTemplate().then(function () {
	            Manager.addUrlPopup = new BX.PopupWindow('salescenter-app-add-url', null, {
	              zIndex: 200,
	              autoHide: true,
	              closeByEsc: true,
	              closeIcon: true,
	              content: Manager.popupNode,
	              titleBar: BX.message('SALESCENTER_ACTION_ADD_CUSTOM_TITLE'),
	              contentColor: 'white',
	              maxWidth: 300,
	              events: {
	                onPopupClose: function onPopupClose() {
	                  Manager.resolveAddPopup();
	                },
	                onPopupDestroy: function onPopupDestroy() {
	                  Manager.addUrlPopup = null;
	                }
	              }
	            });
	            resolve(Manager.addUrlPopup);
	          });
	        } else {
	          resolve(Manager.addUrlPopup);
	        }
	      });
	    }
	  }, {
	    key: "addPage",
	    value: function addPage(fields) {
	      return rest_client.rest.callMethod('salescenter.page.add', {
	        fields: fields
	      });
	    }
	  }, {
	    key: "checkUrl",
	    value: function checkUrl(url) {
	      return rest_client.rest.callMethod('salescenter.page.geturldata', {
	        url: url
	      });
	    }
	  }, {
	    key: "addSitePage",
	    value: function addSitePage() {
	      return new Promise(function (resolve) {
	        if (Manager.connectedSiteId > 0) {
	          BX.loadExt('landing.master').then(function () {
	            BX.Landing.UI.Panel.URLList.getInstance().show('landing', {
	              siteId: Manager.connectedSiteId
	            }).then(function (result) {
	              Manager.addPage({
	                hidden: false,
	                landingId: result.id
	              }).then(function (result) {
	                resolve(result);
	              });
	            });
	          });
	        } else {
	          Manager.openSlider('/bitrix/components/bitrix/salescenter.connect/slider.php').then(function () {
	            resolve();
	          });
	        }
	      });
	    }
	  }, {
	    key: "addStorePage",
	    value: function addStorePage() {
	      return Manager.addSitePage();
	    }
	  }, {
	    key: "hidePage",
	    value: function hidePage(pageId) {
	      var method = 'salescenter.page.hide';
	      var data = {
	        id: pageId,
	        fields: {
	          hidden: true
	        }
	      };
	      return rest_client.rest.callMethod(method, data);
	    }
	  }, {
	    key: "deleteUrl",
	    value: function deleteUrl(pageId) {
	      var method = 'salescenter.page.delete';
	      var data = {
	        id: pageId
	      };
	      return rest_client.rest.callMethod(method, data);
	    }
	  }, {
	    key: "editLandingPage",
	    value: function editLandingPage(pageId) {
	      window.open('/shop/stores/site/' + Manager.connectedSiteId + '/view/' + pageId + '/', '_blank');
	    }
	  }, {
	    key: "openSlider",
	    value: function openSlider(url) {
	      return new Promise(function (resolve) {
	        if (typeof url === "string" && url.length > 1) {
	          BX.SidePanel.Instance.open(url, {
	            events: {
	              onClose: function onClose() {
	                resolve();
	              }
	            }
	          });
	        } else {
	          resolve();
	        }
	      });
	    }
	  }, {
	    key: "showOrdersList",
	    value: function showOrdersList() {
	      return Manager.openSlider('/saleshub/orders/');
	    }
	  }, {
	    key: "showOrderAdd",
	    value: function showOrderAdd() {
	      return Manager.openSlider('/shop/orders/details/0/');
	    }
	  }, {
	    key: "initPull",
	    value: function initPull() {
	      Manager.isPullInited = true;
	      pull_client.PULL.subscribe({
	        moduleId: 'salescenter',
	        command: 'SETCONNECTEDSITE',
	        callback: function callback(params) {
	          Manager.init(params);
	          Manager.onSetConnectedSite();
	        }
	      });
	    }
	  }, {
	    key: "onSetConnectedSite",
	    value: function onSetConnectedSite() {
	      if (typeof Manager.onSetConnectedSiteHandler === 'function') {
	        Manager.onSetConnectedSiteHandler();
	        Manager.onSetConnectedSiteHandler = null;
	      }
	    }
	  }]);
	  return Manager;
	}();
	Manager.connectedSiteId = null;
	Manager.addUrlPopup = null;
	Manager.addUrlResolve = null;
	Manager.popupNode = null;
	Manager.siteTemplateCode = null;
	Manager.isSitePublished = null;
	Manager.isSiteExists = null;
	Manager.isPullInited = false;
	Manager.onSetConnectedSiteHandler = null;

	exports.Manager = Manager;

}((this.BX.Salescenter = this.BX.Salescenter || {}),BX,BX,BX,BX,BX,BX));
//# sourceMappingURL=manager.bundle.js.map
