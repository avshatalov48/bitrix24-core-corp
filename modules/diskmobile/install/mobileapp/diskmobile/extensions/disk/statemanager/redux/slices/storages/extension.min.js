jn.define("disk/statemanager/redux/slices/storages",((e,t,r)=>{const{ReducerRegistry:s}=e("statemanager/redux/reducer-registry");const{createEntityAdapter:a,createSlice:d}=e("statemanager/redux/toolkit");const o="disk:storages";const c=a();const{selectById:n,selectAll:i}=c.getSelectors((e=>e[o]));const g=({id:e,name:t,rootObjectId:r,type:s,entityId:a})=>({id:Number(e),name:t,rootObjectId:r,type:s,entityId:a});const l=d({name:o,initialState:c.getInitialState(),reducers:{storagesUpserted:{reducer:c.upsertMany,prepare:e=>({payload:e.map((e=>g(e)))})},storagesAdded:{reducer:c.addMany,prepare:e=>({payload:e.map((e=>g(e)))})}}});const{storagesUpserted:p,storagesAdded:y}=l.actions;s.register(o,l.reducer);r.exports={storagesUpserted:p,storagesAdded:y,selectById:n,selectAll:i}}));
//# sourceMappingURL=extension.map.js