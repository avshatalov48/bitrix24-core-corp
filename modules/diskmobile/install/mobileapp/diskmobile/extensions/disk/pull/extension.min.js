jn.define("disk/pull",((e,r,o)=>{const{Pull:t}=e("layout/ui/stateful-list/pull");const n={OBJECT_ADDED:"objectAdded",OBJECT_RENAMED:"objectRenamed",CONTENT_UPDATED:"contentUpdated",OBJECT_MARK_DELETED:"objectMarkDeleted",NEW_RECENTS_FILE:"newRecentsFile",RECENT_FILE_MOVED:"recentFileMoved"};const s={[n.OBJECT_ADDED]:t.command.ADDED,[n.OBJECT_RENAMED]:t.command.UPDATED,[n.CONTENT_UPDATED]:t.command.UPDATED,[n.OBJECT_MARK_DELETED]:t.command.DELETED,[n.NEW_RECENTS_FILE]:t.command.ADDED,[n.RECENT_FILE_MOVED]:t.command.ADDED};const c={FOLDER:2,FILE:3};const m=e=>Boolean(s[e]);const d=e=>{if(e.command===n.NEW_RECENTS_FILE||e.command===n.RECENT_FILE_MOVED){return e.params?.file?.id}if(e.command===n.OBJECT_ADDED){return e.params?.addedObject?.id}return e.params?.object?.id};const a=()=>e=>m(e?.command)?Promise.resolve(e):Promise.reject(`Unknown pull command ${e?.command}`);const i=(e=[])=>r=>e.includes(r?.command)?Promise.resolve(r):Promise.reject(`Ignore pull command ${r?.command}`);const E=()=>e=>{const r=d(e);return r?Promise.resolve({...e,objectId:r}):Promise.reject("Unknown object id")};const l=()=>e=>{const r=s[e?.command];return r?Promise.resolve({...e,actionType:r}):Promise.reject("Unknown action type")};const D=()=>e=>{if(e?.command===n.OBJECT_RENAMED){const r=e?.params?.object?.type;if(r===c.FOLDER){return Promise.reject("Only file renaming allowed")}}return Promise.resolve(e)};const u=e=>r=>{if(r?.command===n.OBJECT_ADDED){const o=r?.params?.object?.id;return e&&o&&e===o?Promise.resolve(r):Promise.reject("Adding object from another folder - skip")}return Promise.resolve(r)};const T=e=>r=>{const o=s[r?.command];if(o===t.command.UPDATED){const o=r?.params?.object?.id;return e&&o&&e===o?Promise.resolve(r):Promise.reject("Updating object from another folder - skip")}return Promise.resolve(r)};const P=e=>r=>{const o=s[r?.command];if(o===t.command.UPDATED&&e&&Array.isArray(e)){const o=d(r);return e.includes(o)?Promise.resolve(r):Promise.reject("Updating object not presented in current list - skip")}return Promise.resolve(r)};const O=e=>r=>{if((r?.command===n.NEW_RECENTS_FILE||r?.command===n.RECENT_FILE_MOVED)&&e){const o=r?.params?.file?.storageId;return o&&o===e?Promise.resolve(r):Promise.reject("Add recent file from another storage - skip")}return Promise.resolve(r)};const _={Command:n,StatefulListActionType:s,isCommandExists:m,resolveObjectId:d};o.exports={DiskPull:_,createCommandExistsMiddleware:a,createCommandAllowedMiddleware:i,createResolveObjectIdMiddleware:E,createResolveActionTypeMiddleware:l,createRenameOnlyFilesMiddleware:D,createAddObjectsOnlyFromCurrentFolderMiddleware:u,createUpdateObjectsOnlyFromCurrentFolderMiddleware:T,createUpdateObjectsOnlyFromCurrentStatefulListMiddleware:P,createAddRecentFileOnlyFromCurrentStorageMiddleware:O}}));
//# sourceMappingURL=extension.map.js