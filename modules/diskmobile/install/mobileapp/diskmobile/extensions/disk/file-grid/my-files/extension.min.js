jn.define("disk/file-grid/my-files",((e,t,s)=>{const{Loc:o}=e("loc");const{BaseFileGrid:i}=e("disk/file-grid/base");const{RunActionExecutor:n}=e("rest/run-action-executor");const{makeLibraryImagePath:l}=e("asset-manager");const{Tourist:a}=e("tourist");const{DiskAnalyticsEvent:r}=e("disk/analytics");const{selectById:d}=e("disk/statemanager/redux/slices/storages");const{selectById:c}=e("disk/statemanager/redux/slices/files/selector");const _=e("statemanager/redux/store");const{Link4:g,LinkMode:E,LinkDesign:S}=e("ui-system/blocks/link");const{Button:u,ButtonDesign:L,ButtonSize:I}=e("ui-system/form/buttons");const{SearchType:h,SearchEntity:C}=e("disk/enum");class F extends i{getId(){return"MyFilesGrid"}componentDidMount(){super.componentDidMount();BX.addCustomEvent("disk.tabs:openUploaderDialogCommand",this.onFloatingButtonClick);BX.addCustomEvent("disk.tabs:openCreateFolderDialogCommand",this.onFloatingButtonLongClick)}componentWillUnmount(){super.componentWillUnmount();BX.removeCustomEvent("disk.tabs:openUploaderDialogCommand",this.onFloatingButtonClick);BX.removeCustomEvent("disk.tabs:openCreateFolderDialogCommand",this.onFloatingButtonClick)}onTabReady(){if(this.isFirstVisitOfCollabRootFolder()){this.displayFloatingButtonAhaMoment({delay:300,description:o.getMessage("M_DISK_UPLOAD_BUTTON_FOR_COLLABER_AHA_MOMENT"),onHide:()=>a.remember(`open_collab_folder_${this.getFolderId()}`).then((()=>{this.stateFulListRef?.updateFloatingButton({accentByDefault:this.stateFulListRef?.isEmptyList(),hide:!this.isShowFloatingButton()})}))})}}isShowFloatingButton(){return this.canUserUploadToFolder()}isFloatingButtonAccent(){return this.isFirstVisitOfCollabRootFolder()?true:undefined}isFirstVisitOfCollabRootFolder(){const e=`open_collab_folder_${this.getFolderId()}`;return this.currentUserIsCollaber()&&this.isRootCollabFolder()&&a.firstTime(e)}isRootCollabFolder(){return this.isCollabFolder()&&this.breadcrumbs.length===1}fetchStorage(){new n("diskmobile.Storage.getPersonalStorage",{}).setCacheId(`disk.personalStorage${env.userId}`).setCacheHandler((e=>this.onStorageLoaded(e,true))).setHandler((e=>this.onStorageLoaded(e,false))).call(true)}getSearchContext(){return{type:this.isRootFolder()||this.forcedGlobalSearch?h.GLOBAL:h.DIRECTORY,entities:[C.USER,C.GROUP]}}getEmptyListComponentProps=()=>{let e=o.getMessage("M_DISK_MY_FILES_EMPTY_TITLE");let t=o.getMessage("M_DISK_MY_FILES_EMPTY_DESCRIPTION");let s=l("my-files.svg","empty-states","disk");let i=[];if(this.isSearching()){const n=this.getSearchContext()?.type===h.GLOBAL;e=n?o.getMessage("M_DISK_EMPTY_SEARCH_RESULT_GLOBAL_TITLE"):o.getMessage("M_DISK_EMPTY_SEARCH_RESULT_TITLE_MSGVER_2");t=n?o.getMessage("M_DISK_EMPTY_SEARCH_RESULT_GLOBAL_DESCRIPTION"):o.getMessage("M_DISK_EMPTY_SEARCH_RESULT_DESCRIPTION_MSGVER_2");s=l("search.svg","empty-states");i=n?[]:[u({testId:this.getTestId("empty-screen-search-everywhere"),design:L.OUTLINE_ACCENT_2,size:I.M,text:o.getMessage("M_DISK_EMPTY_SEARCH_RESULT_SEARCH_EVERYWHERE"),onClick:()=>this.forceGlobalSearch()})]}else if(this.isRootCollabFolder()){e=o.getMessage("M_DISK_COLLAB_FILES_EMPTY_TITLE");t=o.getMessage("M_DISK_COLLAB_FILES_EMPTY_DESCRIPTION");i=[g({testId:this.getTestId("empty-screen-read-more"),text:o.getMessage("M_DISK_COMMON_READ_MORE"),mode:E.SOLID,design:S.LIGHT_GREY,onClick:()=>helpdesk.openHelpArticle("22707648","helpdesk")})]}else if(!this.isRootFolder()){e=o.getMessage("M_DISK_EMPTY_FOLDER_TITLE");t=undefined}return{title:e,description:t,imageUri:s,buttons:i}};sendCreateFolderAnalytics(){const e=this.isCollabFolder()?r.Subsection.COLLAB_FILES:r.Subsection.MY_FILES;(new r).setEvent(r.Event.ADD_FOLDER).setSection(r.Section.FILES).setSubSection(e).send()}sendUploadFileAnalytics(e=[]){let t=r.Subsection.MY_FILES;let s=null;if(this.isCollabFolder()){t=r.Subsection.COLLAB_FILES;const e=c(_.getState(),this.getFolderId());if(e){s=d(_.getState(),e.realStorageId)?.entityId??null}}e.forEach((e=>{r.createFromFile(e).setEvent(r.Event.UPLOAD_FILE).setSection(r.Section.FILES).setSubSection(t).setCollabId(s).send()}))}}s.exports={MyFilesGrid:F}}));
//# sourceMappingURL=extension.map.js