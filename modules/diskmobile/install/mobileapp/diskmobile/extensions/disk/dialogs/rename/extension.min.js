jn.define("disk/dialogs/rename",((e,t,s)=>{const{Loc:n}=e("loc");const{Indent:i}=e("tokens");const{StringInput:a,InputDesign:o,InputMode:d}=e("ui-system/form/inputs/string");const{getNameWithoutExtension:r,getExtension:l}=e("utils/file");const{selectById:c}=e("disk/statemanager/redux/slices/files/selector");const{rename:m}=e("disk/statemanager/redux/slices/files/thunk");const h=e("statemanager/redux/store");const{dispatch:u}=h;const{BaseDialog:g}=e("disk/dialogs/base");class N extends g{constructor(e){super(e);this.nameFieldRef=null;this.objectId=e.objectId??"";this.object=c(h.getState(),Number(this.objectId))??{};this.startName=(this.object.isFolder?this.object.name:r(this.object.name))??"";this.state={name:this.startName}}getTestId(e){return`rename-dialog-${e}`}isButtonDisabled(){return!this.#e()}getButtonText(){return n.getMessage("M_DISK_RENAME_SAVE_BUTTON")}componentDidMount(){super.componentDidMount();this.#t();this.#s()}#t=()=>{void this.nameFieldRef?.focus()};#s=()=>{this.nameFieldRef?.selectAll()};#n=e=>{this.nameFieldRef=e};#i=e=>{this.setState({name:e})};#e=()=>this.state.name.length>0;save=()=>{const{isFolder:e}=this.object;if(!this.#e){return}let t=this.state.name;if(!e){t+=`.${l(this.object.name)}`}if(this.state.name!==this.startName){u(m({objectId:this.objectId,newName:t}))}this.close()};static async open(e,t){super.open(e,t)}renderContent(){return View({style:{flexDirection:"row",flexWrap:"wrap",justifyContent:"center",paddingHorizontal:i.M.toNumber()}},this.renderNameInput())}renderNameInput(){return a({value:this.state.name,onChange:this.#i,placeholder:this.object.isFolder?n.getMessage("M_DISK_RENAME_FOLDER_PLACEHOLDER"):n.getMessage("M_DISK_RENAME_FILE_PLACEHOLDER"),design:o.GREY,mode:d.STROKE,testId:this.getTestId("name-field"),forwardRef:this.#n})}}s.exports={RenameDialog:N}}));
//# sourceMappingURL=extension.map.js