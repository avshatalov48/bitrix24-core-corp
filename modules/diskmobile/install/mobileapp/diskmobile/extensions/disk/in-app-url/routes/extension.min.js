jn.define("disk/in-app-url/routes",((e,t,s)=>{const{showToast:o}=e("toast");const{URL:r}=e("utils/url");const{Loc:n}=e("loc");const{openFolder:i}=e("disk/opener/folder");const{fetchObjectWithRights:a}=e("disk/rights");const{filesUpsertedFromServer:d}=e("disk/statemanager/redux/slices/files");const{selectById:c}=e("disk/statemanager/redux/slices/files/selector");const l=e("statemanager/redux/store");const{dispatch:u}=l;const{openNativeViewer:p,getNativeViewerMediaType:g,getExtension:m,getMimeType:h}=e("utils/file");const f={COMMON:"common",USER:"user",GROUP:"group"};function k(e){p({fileType:g(h(m(e.name),e.name)),url:e.links.download,name:e.name})}async function _(e){const t=await a(e);if(!t){o({message:n.getMessage("M_DISK_IN_APP_URL_FILE_NOT_FOUND")})}if(t.isFolder){void i(t.id);return}k(t)}async function y(e,t,s){try{const o=await BX.ajax.runAction("diskmobile.Common.getFolderByPath",{data:{path:e,entityType:t,entityId:s}});if(o.errors.length>0){console.error(o.errors);return null}const r=o.data.diskObject;u(d([r]));return c(l.getState(),r.id)}catch(e){o({message:n.getMessage("M_DISK_IN_APP_URL_FOLDER_NOT_FOUND")});console.error(e)}return null}function I(e){return decodeURI(r(e).pathname).split("/path")[1]}s.exports=e=>{e.register("/bitrix/tools/disk/focus.php",((e,{queryParams:t,url:s})=>{const o=t?.objectId||t?.folderId;if(o){void _(o)}})).name("disk:entity");e.register(`/company/personal/user/${env.userId}/disk/path/`,((e,{url:t})=>{const s=I(t);void y(s,f.USER,env.userId).then((e=>{void _(e.id)}))})).name("disk:personal");e.register("/workgroups/group/:groupId/disk/path/",(({groupId:e},{url:t})=>{const s=I(t);void y(s,f.GROUP,e).then((e=>{void _(e.id)}))})).name("disk:group");e.register("/docs/path/",((e,{url:t})=>{const s=I(t);void y(s,f.COMMON,"shared_files_s1").then((e=>{void _(e.id)}))})).name("disk:common")}}));
//# sourceMappingURL=extension.map.js