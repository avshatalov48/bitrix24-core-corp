(()=>{const e=e=>jn.require(e);const{getFeatureRestriction:t,tariffPlanRestrictionsReady:s}=e("tariff-plan-restriction");const i={RecentFilesGrid:"RecentFilesGrid",MyFilesGrid:"MyFilesGrid",SharedFilesGrid:"SharedFilesGrid"};const n={[i.RecentFilesGrid]:false,[i.MyFilesGrid]:false,[i.SharedFilesGrid]:false};const d={[i.RecentFilesGrid]:"disk.tabs.recent",[i.MyFilesGrid]:"disk.tabs.my",[i.SharedFilesGrid]:"disk.tabs.shared"};const o=(e,t)=>{if(n[e]){tabs.setActiveItem(d[e]);BX.postComponentEvent(t,[],d[e])}else{const s=i=>{if(i===e){BX.postComponentEvent(t,[],d[e]);BX.removeCustomEvent("disk.tabs:onTabReady",s)}};BX.addCustomEvent("disk.tabs:onTabReady",s);tabs.setActiveItem(d[e])}};this.tabs.on("onTabSelected",((e,n)=>{if(e.id===d[i.SharedFilesGrid]){s().then((()=>{const e=t("disk_common_storage");if(e.isRestricted()){e.showRestriction({})}})).catch((e=>console.error(e)))}}));BX.addCustomEvent("disk.tabs:onTabReady",(e=>{n[e]=i[e]?true:undefined}));BX.addCustomEvent("disk.tabs.recent:onFloatingButtonClick",(()=>{o(i.MyFilesGrid,"disk.tabs:openUploaderDialogCommand")}));BX.addCustomEvent("disk.tabs.recent:onFloatingButtonLongClick",(()=>{o(i.MyFilesGrid,"disk.tabs:openCreateFolderDialogCommand")}))})();
//# sourceMappingURL=component.map.js