"use strict";(function(){const{EntityReady:e}=jn.require("entity-ready");const t="/bitrix/js/im/images/blank.gif";const n={createCall:"im.call.create",createChildCall:"im.call.createChildCall",getPublicChannels:"pull.channel.public.list",getCall:"im.call.get"};const l=10;const a=45;BX.Call={};BX.Call.State={Incoming:"Incoming"};BX.Call.UserState={Idle:"Idle",Busy:"Busy",Calling:"Calling",Unavailable:"Unavailable",Declined:"Declined",Ready:"Ready",Connecting:"Connecting",Connected:"Connected",Failed:"Failed"};BX.Call.JoinStatus={None:"none",Local:"local",Remote:"remote"};BX.Call.Type={Instant:1,Permanent:2};BX.Call.Provider={Plain:"Plain",Voximplant:"Voximplant",Bitrix:"Bitrix",BitrixDev:"BitrixDev"};BX.Call.StreamTag={Main:"main",Screen:"screen"};BX.Call.Direction={Incoming:"Incoming",Outgoing:"Outgoing"};BX.Call.Quality={VeryHigh:"very_high",High:"high",Medium:"medium",Low:"low",VeryLow:"very_low"};BX.Call.UserMnemonic={all:"all",none:"none"};BX.Call.Event={onUserInvited:"onUserInvited",onUserStateChanged:"onUserStateChanged",onUserMicrophoneState:"onUserMicrophoneState",onUserCameraState:"onUserCameraState",onUserScreenState:"onUserScreenState",onUserVoiceStarted:"onUserVoiceStarted",onUserVoiceStopped:"onUserVoiceStopped",onUserFloorRequest:"onUserFloorRequest",onUserEmotion:"onUserEmotion",onLocalMediaReceived:"onLocalMediaReceived",onLocalMediaStopped:"onLocalMediaStopped",onDeviceListUpdated:"onDeviceListUpdated",onRTCStatsReceived:"onRTCStatsReceived",onCallFailure:"onCallFailure",onStreamReceived:"onStreamReceived",onStreamRemoved:"onStreamRemoved",onJoin:"onJoin",onLeave:"onLeave",onActive:"onActive",onInactive:"onInactive",onDestroy:"onDestroy",onHangup:"onHangup",onPullEventUserInviteTimeout:"onPullEventUserInviteTimeout",onReconnected:"onReconnected"};class s{constructor(){this.calls={};this.unknownCalls={};this.callsToProcessAfterMessengerReady=new Set;this.debugFlag=false;this.isMessengerReady=false;this.pullStatus="";this._onPullEventHandler=this._onPullEvent.bind(this);this._onPullClientEventHandler=this._onPullClientEvent.bind(this);BX.addCustomEvent("onPullEvent-im",this._onPullEventHandler);BX.addCustomEvent("onPullClientEvent-im",this._onPullClientEventHandler);BX.addCustomEvent("onAppActive",this.onAppActive.bind(this));BX.addCustomEvent("onPullStatus",(e=>{this.pullStatus=e.status;console.log(`[${CallUtil.getTimeForLog()}]: pull status: ${this.pullStatus}`)}));this._onCallJoinHandler=this._onCallJoin.bind(this);this._onCallLeaveHandler=this._onCallLeave.bind(this);this._onCallDestroyHandler=this._onCallDestroy.bind(this);this._onCallInactiveHandler=this._onCallInactive.bind(this);this._onCallActiveHandler=this._onCallActive.bind(this);this._onNativeIncomingCallHandler=this._onNativeIncomingCall.bind(this);if("callservice"in window){callservice.on("incoming",this._onNativeIncomingCallHandler);if(callservice.currentCall()){setTimeout((()=>this._onNativeIncomingCall(callservice.currentCall())),0)}}this.timeOfLastPushNotificationWithAutoAnswer;this.startWithPush();setTimeout((()=>BX.postComponentEvent("onPullGetStatus",[],"communication")),100);e.wait("chat").then((()=>this._onMessengerReady())).catch((e=>console.error(e)))}onAppActive(){for(const e in this.calls){if(this.calls.hasOwnProperty(e)&&this.calls[e]instanceof PlainCall&&!this.calls[e].ready&&!this.isNativeCall(e)&&Date.now()-this.calls[e].created>3e4){console.warn(`Destroying stale call ${e}`);this.calls[e].destroy()}}this.startWithPush()}_onMessengerReady(){this.isMessengerReady=true;for(const e of this.callsToProcessAfterMessengerReady.values()){this._onCallActive(e)}this.callsToProcessAfterMessengerReady.clear()}startWithPush(){const e=Application.getLastNotification();if(!e.id||!e.id.startsWith("IM_CALL_")){return}let t;try{t=JSON.parse(e.params)}catch{navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#","E005"))}if(!t.ACTION||!t.ACTION.startsWith("IMINV_")||!t.PARAMS||!t.PARAMS.call){return}console.log("Starting with PUSH:",e);const n=t.PARAMS.call;const l=t.PARAMS.video;const s=n.ID;const i=t.PARAMS.ts;const o=Date.now()/1e3-i;const r=n.PROVIDER;console.log("timeAgo:",o);this._onUnknownCallPing(s,o,a).then((e=>{if(e&&this.calls[s]){BX.postComponentEvent("CallEvents::incomingCall",[{callId:s,video:l,autoAnswer:true,provider:r}],"calls")}})).catch((e=>console.error(e)))}shouldCallBeAutoAnswered(e){if(Application.getPlatform()!=="android"){return false}const t=Application.getLastNotification();if(!t.id||!t.id.startsWith("IM_CALL_")){return false}if(!t.extra||!t.extra.server_time_unix||t.extra.server_time_unix==this.timeOfLastPushNotificationWithAutoAnswer){return false}try{const n=JSON.parse(t.params);if(!n.ACTION||!n.ACTION.startsWith("IMINV_")||!n.PARAMS||!n.PARAMS.call){return false}const l=n.PARAMS.call;const a=l.ID;const s=e==a;if(s){this.timeOfLastPushNotificationWithAutoAnswer=t.extra.server_time_unix}return s}catch{return false}}_onNativeIncomingCall(e){console.log("_onNativeIncomingCall",e);if(e.params.type!=="internal"){return}const t=e.params.video;const n=e.params.call.ID;const l=e.params.ts;const a=Date.now()/1e3-l;const s=e.params.call.PROVIDER;if(a>15){console.error("Call originated too long time ago")}this._instantiateCall(e.params.call,e.params.connectionData,e.params.users,e.params.logToken,e.params.userData);BX.postComponentEvent("CallEvents::incomingCall",[{callId:n,video:t,isNative:true,provider:s}],"calls")}createCall(e){return new Promise(((t,l)=>{const a=e.type||BX.Call.Type.Instant;const s=e.provider===BX.Call.Provider.BitrixDev?BX.Call.Provider.Bitrix:e.provider||"Plain";if(e.joinExisting){for(const n in this.calls){if(this.calls.hasOwnProperty(n)){const l=this.calls[n];if(l.provider==e.provider&&l.associatedEntity.type==e.entityType&&l.associatedEntity.id==e.entityId){this.log(n,"Found existing call, attaching to it");return t({call:l,isNew:false})}}}}const i={type:a,provider:s,entityType:e.entityType,entityId:e.entityId,joinExisting:!!e.joinExisting,userIds:BX.type.isArray(e.userIds)?e.userIds:[]};console.log(`CallEngine.createCall.rest.callMethod - '${n.createCall}', callParameters:`,i);this.getRestClient().callMethod(n.createCall,i).then((a=>{console.log(`CallEngine.createCall.rest.callMethod - '${n.createCall}', verbose response:`,a);if(a.error()){const e=a.error().getError();return l({code:e.error,message:e.error_description})}const s=a.data();if(s.userData){}if(s.publicChannels){BX.PULL.setPublicIds(Object.values(s.publicChannels))}const i=s.call;if(this.calls[i.ID]){if(this.calls[i.ID]instanceof d){this.calls[i.ID].destroy()}else{console.warn(`Call ${i.ID} already exists`);return t({call:this.calls[i.ID],isNew:false})}}CallUtil.setUserData(s.userData);const o=this._getCallFactory(i.PROVIDER);const r=o.createCall({id:parseInt(i.ID,10),roomId:i.UUID,instanceId:this.getUuidv4(),direction:BX.Call.Direction.Outgoing,users:s.users,userData:CallUtil.getCurrentUserName(),videoEnabled:e.videoEnabled===true,enableMicAutoParameters:e.enableMicAutoParameters!==false,associatedEntity:i.ASSOCIATED_ENTITY,events:{[BX.Call.Event.onDestroy]:this._onCallDestroyHandler,[BX.Call.Event.onJoin]:this._onCallJoinHandler,[BX.Call.Event.onLeave]:this._onCallLeaveHandler,[BX.Call.Event.onInactive]:this._onCallInactiveHandler,[BX.Call.Event.onActive]:this._onCallActiveHandler},debug:e.debug===true,logToken:s.logToken,connectionData:s.connectionData});this.calls[i.ID]=r;if(s.isNew){this.log(r.id,"Creating new call")}else{this.log(r.id,"Server returned existing call, attaching to it")}this._onCallActive(r.id);t({call:r,isNew:s.isNew})})).catch((e=>{console.warn(`CallEngine.createCall.rest.callMethod.catch - '${n.createCall}', verbose error:`,e);const t=e.answer||e;l({code:t.error||0,message:t.error_description||t})}))}))}getCallWithId(e){return new Promise(((t,l)=>{if(this.calls[e]){return t({call:this.calls[e],isNew:false})}this.getRestClient().callMethod(n.getCall,{callId:e}).then((n=>{const a=n.data();if(a.call.END_DATE){BX.postComponentEvent("CallEvents::inactive",[e],"im.recent");BX.postComponentEvent("CallEvents::inactive",[e],"im.messenger");return l({code:"ALREADY_FINISHED"})}t({call:this._instantiateCall(a.call,a.connectionData,a.users,a.logToken,a.userData),isNew:false})})).catch((e=>{if(typeof e.error==="function"){e=e.error().getError()}l({code:e.error,message:e.error_description})}))}))}getUuidv4(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=Math.random()*16|0;const n=e=="x"?t:t&3|8;return n.toString(16)}))}debug(e){if(typeof e!=="boolean"){e=!this.debugFlag}this.debugFlag=e;console.warn(`Debug ${this.debugFlag?"enabled":"disabled"}`)}log(e,...t){if(this.calls[e]){this.calls[e].log(...t)}else{console.log.apply(console,arguments)}}getRestClient(){return BX.rest}getLogService(){return BX.componentParameters.get("callLogService","")}isCallServerAllowed(){return BX.componentParameters.get("sfuServerEnabled")}isBitrixCallServerEnabled(){return BX.componentParameters.get("bitrixCallsEnabled")}isCallBetaIosEnabled(){return BX.componentParameters.get("callBetaIosEnabled",false)}isNativeCall(e){if(!("callservice"in window)){return false}const t=callservice.currentCall();return t&&t.params.call.ID==e}_isCallSupported(e){return e instanceof PlainCall||e instanceof VoximplantCall||e instanceof BitrixCallDev&&callEngine.isBitrixCallServerEnabled()}_onPullEvent(e,t,n){const a={"Call::incoming":this._onPullIncomingCall.bind(this)};if(e.startsWith("Call::")&&t.publicIds){BX.PULL.setPublicIds(Object.values(t.publicIds));console.warn("CallEngine._onPullEvent",e,t,n)}if(a[e]){a[e].call(this,t,n)}else if(e.startsWith("Call::")&&(t.call||t.callId)){const a=t.call?t.call.ID:t.callId;if(this.calls[a]){this.calls[a]._onPullEvent(e,t,n)}else if(e==="Call::ping"){this._onUnknownCallPing(t.callId,n.server_time_ago,l).then((l=>{if(l&&this.calls[a]){this.calls[a]._onPullEvent(e,t,n)}}))}}}_onPullClientEvent(e,t,n){if(e.startsWith("Call::")&&t.callId){console.warn("CallEngine._onPullClientEvent",e,t,n);const a=t.callId;if(this.calls[a]){this.calls[a]._onPullEvent(e,t,n)}else if(e==="Call::ping"){this._onUnknownCallPing(t.callId,n.server_time_ago,l).then((l=>{if(l&&this.calls[a]){this.calls[a]._onPullEvent(e,t,n)}}))}}}_onPullIncomingCall(e,t){if(t.server_time_ago>30){console.error("Call was started too long time ago");return}const n=e.call;const l=parseInt(n.ID,10);let a;if(e.userData){}if(this.calls[l]){a=this.calls[l]}else{CallUtil.setUserData(e.userData);const t=this._getCallFactory(n.PROVIDER);a=t.createCall({id:l,roomId:n.UUID,instanceId:this.getUuidv4(),parentId:n.PARENT_ID||null,callFromMobile:e.isLegacyMobile===true,direction:BX.Call.Direction.Incoming,users:e.users,userData:CallUtil.getCurrentUserName(),initiatorId:e.senderId,associatedEntity:n.ASSOCIATED_ENTITY,type:n.TYPE,startDate:n.START_DATE,logToken:e.logToken,events:{[BX.Call.Event.onDestroy]:this._onCallDestroyHandler,[BX.Call.Event.onJoin]:this._onCallJoinHandler,[BX.Call.Event.onLeave]:this._onCallLeaveHandler,[BX.Call.Event.onInactive]:this._onCallInactiveHandler,[BX.Call.Event.onActive]:this._onCallActiveHandler},connectionData:e.connectionData});this.calls[l]=a;this._onCallActive(l)}if(a&&!(a instanceof d)){a.addInvitedUsers(e.invitedUsers);BX.postComponentEvent("CallEvents::incomingCall",[{callId:l,video:e.video===true,isLegacyMobile:e.isLegacyMobile===true,userData:e.userData||null,autoAnswer:this.shouldCallBeAutoAnswered(l),provider:n.PROVIDER}],"calls");a.log(`Incoming call ${a.id}`)}}_onUnknownCallPing(e,t,n){return new Promise(((l,a)=>{e=parseInt(e,10);if(t>n){this.log(e,"Error: Ping was sent too long time ago");return l(false)}if(this.unknownCalls[e]){return l(false)}this.unknownCalls[e]=true;this.getCallWithId(e).then((t=>{this.unknownCalls[e]=false;l(true)})).catch((t=>{this.unknownCalls[e]=false;this.log(e,"Error: Could not instantiate call",t);l(false)}))}))}_instantiateCall(e,t,n,l,a){if(this.calls[e.ID]){console.error(`Call ${e.ID} already exists`);return this.calls[e.ID]}CallUtil.setUserData(a);const s=this._getCallFactory(e.PROVIDER);const i=s.createCall({id:parseInt(e.ID,10),roomId:e.UUID,instanceId:this.getUuidv4(),initiatorId:parseInt(e.INITIATOR_ID,10),parentId:e.PARENT_ID,direction:e.INITIATOR_ID==env.userId?BX.Call.Direction.Outgoing:BX.Call.Direction.Incoming,users:n,userData:CallUtil.getCurrentUserName(),associatedEntity:e.ASSOCIATED_ENTITY,type:e.TYPE,startDate:e.START_DATE,logToken:l,events:{[BX.Call.Event.onDestroy]:this._onCallDestroyHandler,[BX.Call.Event.onJoin]:this._onCallJoinHandler,[BX.Call.Event.onLeave]:this._onCallLeaveHandler,[BX.Call.Event.onInactive]:this._onCallInactiveHandler,[BX.Call.Event.onActive]:this._onCallActiveHandler},connectionData:t});this.calls[e.ID]=i;this._onCallActive(i.id);return i}_getCallFields(e){return{id:e.id,provider:e.provider,associatedEntity:e.associatedEntity}}_getCallFactory(e){if(e==BX.Call.Provider.Plain){return i}if(e==BX.Call.Provider.Voximplant){return o}if(e===BX.Call.Provider.Bitrix){return c}if(e===BX.Call.Provider.BitrixDev){return c}throw new Error(`Unknown call provider type ${e}`)}_onCallJoin(e){console.warn("CallEngine.CallEvents::join",e);this._onCallActive(e.callId)}_onCallLeave(e){console.warn("CallEngine.CallEvents::leave",e.callId);this._onCallActive(e.callId)}_onCallInactive(e){console.warn("CallEngine.CallEvents::inactive",e);if(!this.isMessengerReady){this.callsToProcessAfterMessengerReady.delete(e);return}BX.postComponentEvent("CallEvents::inactive",[e],"im.recent");BX.postComponentEvent("CallEvents::inactive",[e],"im.messenger")}_onCallActive(e){console.warn("CallEngine.CallEvents::active",e,this.calls[e]);const t=this.calls[e];if(t&&!(t instanceof d)&&callEngine._isCallSupported(t)){if(!this.isMessengerReady){this.callsToProcessAfterMessengerReady.add(e);return}BX.postComponentEvent("CallEvents::active",[this._getCallFields(t),t.joinStatus],"im.recent");BX.postComponentEvent("CallEvents::active",[this._getCallFields(t),t.joinStatus],"im.messenger")}}_onCallDestroy(e){const t=e.call.id;const n=this.calls[e.call];if(n){n.off(BX.Call.Event.onJoin,this._onCallJoinHandler).off(BX.Call.Event.onLeave,this._onCallLeaveHandler).off(BX.Call.Event.onDestroy,this._onCallDestroyHandler).off(BX.Call.Event.onInactive,this._onCallInactiveHandler).off(BX.Call.Event.onActive,this._onCallActiveHandler)}this.calls[t]=new d({callId:t,onDelete:()=>{if(this.calls[t]){delete this.calls[t]}}});if(!this.isMessengerReady){this.callsToProcessAfterMessengerReady.delete(t);return}console.warn("CallEvents::inactive",[e.call.id]);BX.postComponentEvent("CallEvents::inactive",[e.call.id],"im.recent");BX.postComponentEvent("CallEvents::inactive",[e.call.id],"im.messenger")}destroy(){BX.removeCustomEvent("onPullEvent-im",this._onPullEventHandler);BX.removeCustomEvent("onPullClientEvent-im",this._onPullClientEventHandler)}}let i={createCall(e){return new PlainCall(e)}};let o={createCall(e){return new VoximplantCall(e)}};let r={createCall(e){return new BitrixCall(e)}};let c={createCall(e){return new BitrixCallDev(e)}};class d{constructor(e){this.callId=e.callId;this.lifetime=e.lifetime||120;this.callbacks={onDelete:BX.type.isFunction(e.onDelete)?e.onDelete:function(){}};this.deleteTimeout=setTimeout((()=>{this.callbacks.onDelete({callId:this.callId})}),this.lifetime*1e3)}_onPullEvent(e,t,n){}isAnyoneParticipating(){return false}addEventListener(){return false}removeEventListener(){return false}destroy(){clearTimeout(this.deleteTimeout);this.callbacks.onDelete=function(){}}}class u{constructor(){this.userData={};this.usersInProcess={}}updateUserData(e,t){const n=[];for(const e of t){if(this.userData.hasOwnProperty(e)){continue}n.push(e)}const l=new Promise(((l,a)=>{if(n.length===0){return l()}BX.rest.callMethod("im.call.getUsers",{callId:e,userIds:n}).then((e=>{const n=BX.type.isPlainObject(e.answer.result)?e.answer.result:{};t.forEach((e=>{if(n[e]){this.userData[e]=n[e]}delete this.usersInProcess[e]}));l()})).catch((e=>{a(e.answer)}))}));for(const e of n){this.usersInProcess[e]=l}return l}getUsers(e,t){return new Promise(((n,l)=>{this.updateUserData(e,t).then((()=>{const e={};t.forEach((t=>e[t]=this.userData[t]||{}));return n(e)})).catch((e=>l(e)))}))}setUserData(e){for(const t in e){this.userData[t]=e[t]}}getCurrentUserName(){return this.userData[env.userId]?.name||env?.userId||""}getDateForLog(){const e=new Date;return`${e.getFullYear()}-${this.lpad(e.getMonth()+1,2,"0")}-${this.lpad(e.getDate(),2,"0")} ${this.lpad(e.getHours(),2,"0")}:${this.lpad(e.getMinutes(),2,"0")}:${this.lpad(e.getSeconds(),2,"0")}.${e.getMilliseconds()}`}getTimeForLog(){const e=new Date;return`${this.lpad(e.getHours(),2,"0")}:${this.lpad(e.getMinutes(),2,"0")}:${this.lpad(e.getSeconds(),2,"0")}.${e.getMilliseconds()}`}log(){console.log(this.getLogMessage.apply(this,arguments))}warn(){console.warn(this.getLogMessage.apply(this,arguments))}error(){console.error(this.getLogMessage.apply(this,arguments))}formatSeconds(e){e=Math.floor(e);const t=e%60;const n=(e-t)/60;return`${this.lpad(n,2,"0")}:${this.lpad(t,2,"0")}`}getTimeText(e){if(!e){return""}const t=new Date;let n=new Date(e);if(n.getTime()<t.getDate()){n=t}let l=t-n;if(l<=0){l=0}let a=Math.floor(l/1e3);let s=Math.floor(a/60/60);if(s>0){a-=s*60*60}const i=Math.floor(a/60);if(i>0){a-=i*60}return(s>0?s+":":"")+(s>0?i.toString().padStart(2,"0")+":":i+":")+a.toString().padStart(2,"0")}getTimeInSeconds(e){if(!e){return""}const t=new Date;let n=new Date(e);if(n.getTime()<t.getDate()){n=t}let l=t-n;if(l<=0){l=0}return Math.floor(l/1e3)}lpad(e,t,n){e=e.toString();n=n||" ";if(e.length>t){return e}let l="";for(let a=0;a<t-e.length;a++){l+=n}return l+e}isAvatarBlank(e){return typeof e!=="string"||e==""||e.endsWith(t)}makeAbsolute(e){let t;if(typeof e!=="string"){return e}if(e.startsWith("http")){t=e}else{t=e.startsWith("/")?currentDomain+e:`${currentDomain}/${e}`}return t}getCustomMessage(e,t){let n;if(!BX.type.isPlainObject(t)){t={}}if(t.gender&&BX.message.hasOwnProperty(`${e}_${t.gender}`)){n=BX.message(`${e}_${t.gender}`)}else{n=BX.message(e)}t=this.convertKeysToUpper(t);return n.replace(/#.+?#/gm,(e=>{const n=e.slice(1,1+e.length-2);return t.hasOwnProperty(n)?t[n]:e}))}isCallServerAllowed(){return BX.message("call_server_enabled")==="Y"}getUserLimit(){if(this.isCallServerAllowed()){return parseInt(BX.message("call_server_max_users"))}return parseInt(BX.message("turn_server_max_users"))}getLogMessage(){let e=this.getDateForLog();for(const t of arguments){if(t instanceof Error){e=`${t.message}\n${t.stack}`}else{try{e=`${e} | ${typeof t==="object"?this.printObject(t):t}`}catch{e+=" | (circular structure)"}}}return e}printObject(e){let t="[";for(const n in e){if(e.hasOwnProperty(n)){const l=e[n];switch(typeof l){case"object":t+=n+(l===null?": null; ":": (object); ");break;case"string":case"number":case"boolean":t+=`${n}: ${l.toString()}; `;break;default:t+=`${n}: (${typeof l}); `}}}return`${t}]`}getUuidv4(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=Math.random()*16|0;const n=e=="x"?t:t&3|8;return n.toString(16)}))}debounce(e,t,n){let l=0;return function(){clearTimeout(l);l=setTimeout((()=>e.apply(n,arguments)),t)}}array_flip(e){const t={};for(const n in e){t[e[n]]=n}return t}isDeviceSupported(){return Application.getApiVersion()>=36}forceBackgroundConnectPull(e=10){return new Promise(((t,n)=>{if(callEngine&&callEngine.pullStatus==="online"){t();return}const l=function(){console.error("Timeout while waiting for p&p to connect");BX.removeCustomEvent("onPullStatus",s);n("connect timeout")};const a=setTimeout(l,e*1e3);var s=({status:e,additional:l})=>{if(!l){l={}}if(e==="online"){BX.removeCustomEvent("onPullStatus",s);clearTimeout(a);t()}if(e==="offline"&&l.isError){BX.removeCustomEvent("onPullStatus",s);clearTimeout(a);n("connect error")}};BX.addCustomEvent("onPullStatus",s);BX.postComponentEvent("onPullForceBackgroundConnect",[],"communication")}))}showDeviceAccessConfirm(e,t=(()=>{}),n=(()=>{})){return new Promise((l=>{navigator.notification.confirm(e?BX.message("MOBILE_CALL_MICROPHONE_CAMERA_REQUIRED"):BX.message("MOBILE_CALL_MICROPHONE_REQUIRED"),(e=>e==1?t():n()),e?BX.message("MOBILE_CALL_NO_MICROPHONE_CAMERA_ACCESS"):BX.message("MOBILE_CALL_NO_MICROPHONE_ACCESS"),[BX.message("MOBILE_CALL_MICROPHONE_SETTINGS"),BX.message("MOBILE_CALL_MICROPHONE_CANCEL")])}))}getSdkAudioManager(){if(BX.componentParameters.get("bitrixCallsEnabled")){return JNBXAudioManager}return JNVIAudioManager}}class C extends Error{constructor(e){super("Media access denied");this.name="DeviceAccessError";this.justDenied=e}}class h extends Error{constructor(){super("Call joined elsewhere");this.name="CallJoinedElseWhereError"}}window.DeviceAccessError=C;window.CallJoinedElseWhereError=h;window.CallEngine=s;window.CCallUtil=u;window.CallStub=d})();
//# sourceMappingURL=extension.map.js