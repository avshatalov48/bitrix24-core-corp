"use strict";(function(){const e=jn.require;const{AnalyticsEvent:t}=e("analytics");const{Analytics:l}=e("call/const");const{Notification:i}=e("im/messenger/lib/ui/notification");const{Theme:a}=e("im/lib/theme");const{Icon:n}=e("assets/icons");const{Loc:s}=e("loc");const o=`${currentDomain}/bitrix/mobileapp/callmobile/extensions/call/calls/controller/`;class r{constructor(){this.callView=null;this.callViewPromise=null;this.startCallPromise=null;this.localVideoPromise=null;this.localVideoStream=null;this.callProvider=null;this._currentCall=null;Object.defineProperty(this,"currentCall",{get:()=>this._currentCall,set:e=>{if(this._currentCall!=e){BX.postComponentEvent("CallEvents::hasActiveCall",[!!e],"communication");this._currentCall=e}}});this.childCall=null;this.callStartTime=null;this.callTimerInterval=null;this.callWithLegacyMobile=false;this.nativeCall=null;this.chatCounter=0;this.callInviteTime=null;this.callDeclineTimeout=35e3;this.callVideoEnabled=false;this.ignoreJoinAnalyticsEvent=false;this.ignoreLeaveAnalyticsEvent=false;this.onCallUserInvitedHandler=this.onCallUserInvited.bind(this);this.onCallUserStateChangedHandler=this.onCallUserStateChanged.bind(this);this.onCallUserMicrophoneStateHandler=this.onCallUserMicrophoneState.bind(this);this.onCallUserScreenStateHandler=this.onCallUserScreenState.bind(this);this.onCallUserVideoPausedHandler=this.onCallUserVideoPaused.bind(this);this.onCallUserVoiceStartedHandler=this.onCallUserVoiceStarted.bind(this);this.onCallUserVoiceStoppedHandler=this.onCallUserVoiceStopped.bind(this);this.onCallUserFloorRequestHandler=this.onCallUserFloorRequest.bind(this);this.onCallUserEmotionHandler=this.onCallUserEmotion.bind(this);this.onCallLocalMediaReceivedHandler=this.onCallLocalMediaReceived.bind(this);this.onCallLocalMediaStoppedHandler=this.onCallLocalMediaStopped.bind(this);this.onCallRTCStatsReceivedHandler=this.onCallRTCStatsReceived.bind(this);this.onCallCallFailureHandler=this.onCallCallFailure.bind(this);this.onCallStreamReceivedHandler=this.onCallStreamReceived.bind(this);this.onCallStreamRemovedHandler=this.onCallStreamRemoved.bind(this);this.onCallJoinHandler=this.onCallJoin.bind(this);this.onCallLeaveHandler=this.onCallLeave.bind(this);this.onCallDestroyHandler=this.onCallDestroy.bind(this);this.onCallHangupHandler=this.onCallHangup.bind(this);this.onChildCallFirstStreamHandler=this.onChildCallFirstStream.bind(this);this.onCallTimeoutHandler=this.onCallTimeout.bind(this);this.onCallReconnectedHandler=this.onCallReconnected.bind(this);this.onMicButtonClickHandler=this.onMicButtonClick.bind(this);this.onFloorRequestButtonClickHandler=this.onFloorRequestButtonClick.bind(this);this.onCameraButtonClickHandler=this.onCameraButtonClick.bind(this);this.onReplaceCameraClickHandler=this.onReplaceCameraClick.bind(this);this.onChatButtonClickHandler=this.onChatButtonClick.bind(this);this.onPrivateChatButtonClickHandler=this.onPrivateChatButtonClick.bind(this);this.onAnswerButtonClickHandler=this.onAnswerButtonClick.bind(this);this.onHangupButtonClickHandler=this.onHangupButtonClick.bind(this);this.onDeclineButtonClickHandler=this.onDeclineButtonClick.bind(this);this.onSetCentralUserHandler=this.onSetCentralUser.bind(this);this.onSelectAudioDeviceHandler=this.onSelectAudioDevice.bind(this);this.onToggleSubscriptionRemoteVideoHandler=this.onToggleSubscriptionRemoteVideo.bind(this);this.onNativeCallAnsweredHandler=this.onNativeCallAnswered.bind(this);this.onNativeCallEndedHandler=this.onNativeCallEnded.bind(this);this.onNativeCallMutedHandler=this.onNativeCallMuted.bind(this);this.onNativeCallVideoIntentHandler=this.onNativeCallVideoIntent.bind(this);this._nativeAnsweredAction=null;this.ignoreNativeCallAnswer=false;this.onProximitySensorDebounced=CallUtil.debounce(this.onProximitySensor.bind(this),500);this.init();this.isAppPaused=false;this.canProximitySensorBeEnabled=false}init(){BX.addCustomEvent("onCallInvite",this.onCallInvite.bind(this));BX.addCustomEvent("CallEvents::incomingCall",this.onIncomingCall.bind(this));BX.addCustomEvent("CallEvents::joinCall",this.onJoinCall.bind(this));BX.addCustomEvent("onAppActive",this.onAppActive.bind(this));BX.addCustomEvent("onAppPaused",this.onAppPaused.bind(this));BX.addCustomEvent("ImRecent::counter::messages",this.onImMessagesCounter.bind(this));BX.PULL.subscribe({type:"server",moduleId:"im",command:"callUserNameUpdate",callback:this.onCallUserNameUpdate.bind(this)});device.on("proximityChanged",this.onProximitySensorDebounced)}getCallType(){if(!this.currentCall){return}const e=this.currentCall.associatedEntity.type==="chat"&&this.currentCall.associatedEntity.advanced["chatType"]==="videoconf";const t=this.callProvider===BX.Call.Provider.Plain?l.AnalyticsType.private:l.AnalyticsType.group;return e?l.AnalyticsType.videoconf:t}onCallInvite(e){let t;let l;if("dialogId"in e){if(e.dialogId.startsWith("chat")){l=e.chatData||{}}else{l=e.userData&&e.userData[e.dialogId]||{}}t=e.dialogId}else if("userId"in e){l=e.userData&&e.userData[e.userId]||{};t=e.userId}else{CallUtil.error("Can not start call. No userId or dialogId in event");navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#","E001"));return}let{name:i,avatar:a,color:n,type:s}=l;a=decodeURI(a);this.startCall(t,e.video,{name:i,avatar:a,color:n,type:s})}maybeShowLocalVideo(e){if(this.localVideoPromise){return this.localVideoPromise}this.localVideoPromise=new Promise(((t,l)=>{if(!e){return t()}MediaDevices.getUserMedia({audio:true,video:true}).then((e=>{this.localVideoStream=e;if(!this.startCallPromise){this.stopLocalVideoStream(true)}else if(this.callView){this.callView.setVideoStream(env.userId,this.localVideoStream,MediaDevices.cameraDirection==="front")}t()})).catch((e=>l(e)))}));return this.localVideoPromise}stopLocalVideoStream(e=false){if(this.localVideoStream){if(e){MediaDevices.stopStreaming();this.localVideoStream=null;return}MediaDevices.stopCapture()}}startCall(e,o,r={}){console.log("CallController.startCall",e,o,r);if(!CallUtil.isDeviceSupported()){CallUtil.error(BX.message("MOBILE_CALL_UNSUPPORTED_VERSION"));navigator.notification.alert(BX.message("MOBILE_CALL_UNSUPPORTED_VERSION"));return}if(this.callView||this.currentCall){if(this.currentCall?.associatedEntity.id===e){this.onJoinCall(this.currentCall.id);return}else{i.showToastWithParams({message:s.getMessage("CALLMOBILE_MESSAGE_HAS_ACTIVE_CALL_HINT"),icon:n.ALERT,backgroundColor:a.colors.accentMainAlert});return}}e=e.toString();let c=BX.Call.Provider.Plain;const h=e.toString().slice(0,4)==="chat";if(callEngine.isCallServerAllowed()&&h){c=BX.Call.Provider.Voximplant}if(h&&callEngine.isBitrixCallServerEnabled()){c=BX.Call.Provider.BitrixDev;this.startCallPromise=this.requestDeviceAccess(o).then((()=>{this.maybeShowLocalVideo(o);return this.openCallView({status:"outgoing",isGroupCall:h,associatedEntityName:r.name,associatedEntityAvatar:r.avatar,associatedEntityAvatarColor:r.color,cameraState:o,chatCounter:this.chatCounter},o)})).then((()=>{BX.postComponentEvent("CallEvents::viewOpened",[]);BX.postWebEvent("CallEvents::viewOpened",{});this.bindViewEvents();media.audioPlayer().playSound("call_start");return this.maybeShowLocalVideo(o)})).then((()=>{this.callProvider=c;return callEngine.createCall({type:r.type==="videoconf"?BX.Call.Type.Permanent:BX.Call.Type.Instant,entityType:"chat",entityId:e,provider:c,videoEnabled:!!o,joinExisting:h})})).then((e=>{console.log("startCall.BitrixDev.createCall.createResult",e);this.currentCall=e.call;this.bindCallEvents();if(!this.callView){if(this.currentCall){this.currentCall.cancel()}this.clearEverything();return}callInterface.indicator().setMode("outgoing");device.setIdleTimerDisabled(true);this.changeProximitySensorStatus(true);this.callView.appendUsers(this.currentCall.getUsers());CallUtil.getUsers(this.currentCall.id,this.getCallUsers(true)).then((e=>this.callView.updateUserData(e)));media.audioPlayer().playSound("call_outgoing",10);if(e.isNew){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.startCall).setType(this.getCallType()).setStatus(l.AnalyticsStatus.success).setP1(this.currentCall.isVideoEnabled()?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);this.ignoreJoinAnalyticsEvent=true;e.send();this.currentCall.inviteUsers()}else{if(this.getCallUsers(true).length>this.getMaxActiveMicrophonesCount()){this.currentCall.setMuted(true);this.callView.setMuted(true)}const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(this.getCallType()).setSection(l.AnalyticsSection.chatWindow).setElement(l.AnalyticsElement.videocall).setStatus(l.AnalyticsStatus.success).setP1(this.currentCall.isVideoEnabled()?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);this.ignoreJoinAnalyticsEvent=true;e.send();this.callView.setState({status:"call"});this.currentCall.answer({useVideo:o})}})).catch((e=>{console.error("startCall.BitrixDev.createCall.createResult.catch",e);CallUtil.error(e);if(e instanceof DeviceAccessError){CallUtil.showDeviceAccessConfirm(o,(()=>Application.openSettings()))}else if(e instanceof CallJoinedElseWhereError){navigator.notification.alert(BX.message("MOBILE_CALL_ALREADY_JOINED"))}else if("code"in e&&e.code==="ALREADY_FINISHED"){navigator.notification.alert("MOBILE_CALL_ALREADY_FINISHED")}else{navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#",`${e.code}`))}this.clearEverything()}));return}this.startCallPromise=this.requestDeviceAccess(o).then((()=>{this.maybeShowLocalVideo(o);return this.openCallView({status:"outgoing",isGroupCall:h,associatedEntityName:r.name,associatedEntityAvatar:r.avatar,associatedEntityAvatarColor:r.color,cameraState:o,chatCounter:this.chatCounter},o)})).then((()=>{BX.postComponentEvent("CallEvents::viewOpened",[]);BX.postWebEvent("CallEvents::viewOpened",{});this.bindViewEvents();media.audioPlayer().playSound("call_start");return this.maybeShowLocalVideo(o)})).then((()=>{this.callProvider=c;return callEngine.createCall({entityType:"chat",entityId:e,provider:c,videoEnabled:!!o,joinExisting:h})})).then((e=>{this.currentCall=e.call;this.bindCallEvents();callInterface.indicator().setMode("outgoing");device.setIdleTimerDisabled(true);this.changeProximitySensorStatus(true);this.callView.appendUsers(this.currentCall.getUsers());CallUtil.getUsers(this.currentCall.id,this.getCallUsers(true)).then((e=>this.callView.updateUserData(e)));media.audioPlayer().playSound("call_outgoing",10);if(e.isNew){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.startCall).setType(this.getCallType()).setStatus(l.AnalyticsStatus.success).setP1(this.currentCall.isVideoEnabled()?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);e.send();this.currentCall.inviteUsers()}else{const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(this.getCallType()).setStatus(l.AnalyticsStatus.success).setP1(this.currentCall.isVideoEnabled()?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);e.send();this.callView.setState({status:"call"});this.currentCall.answer({useVideo:o})}})).catch((e=>{CallUtil.error(e);if(e instanceof DeviceAccessError){CallUtil.showDeviceAccessConfirm(o,(()=>Application.openSettings()))}else if(e instanceof CallJoinedElseWhereError){navigator.notification.alert(BX.message("MOBILE_CALL_ALREADY_JOINED"))}else if("code"in e&&e.code==="ALREADY_FINISHED"){navigator.notification.alert("MOBILE_CALL_ALREADY_FINISHED")}else{navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#",`${e.code}`))}this.clearEverything()}))}joinCall(e,t){if(this.callView||this.currentCall){return}this.requestDeviceAccess(t).then((()=>callEngine.getCallWithId(e))).then((e=>{this.currentCall=e.call;device.setIdleTimerDisabled(true);this.changeProximitySensorStatus(true);return this.openCallView({status:"call",chatCounter:this.chatCounter})})).then((()=>{if(!this.currentCall){this.clearEverything();return}this.bindViewEvents();this.callView.appendUsers(this.currentCall.getUsers());if(this.getCallUsers(true).length>this.getMaxActiveMicrophonesCount()){this.currentCall.setMuted(true);this.callView.setMuted(true)}CallUtil.getUsers(this.currentCall.id,this.getCallUsers(true)).then((e=>this.callView.updateUserData(e)));this.bindCallEvents();this.currentCall.answer({useVideo:!!t})})).catch((e=>{CallUtil.error(e);if(e.code&&e.code=="ALREADY_FINISHED"){navigator.notification.alert(BX.message("MOBILE_CALL_ALREADY_FINISHED"))}else if(e instanceof CallJoinedElseWhereError){navigator.notification.alert(BX.message("MOBILE_CALL_ALREADY_JOINED"))}else if(e instanceof DeviceAccessError){CallUtil.showDeviceAccessConfirm(t,(()=>Application.openSettings()))}else{navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#",`${e.code}`))}}))}onIncomingCall(e){CallUtil.warn("CallController.onIncomingCall",e);const i=callEngine.calls[e.callId];if(!this.canCallBeAnswered(i)){return}this.callInviteTime=Date.now();if(!CallUtil.isDeviceSupported()){navigator.notification.alert(BX.message("MOBILE_CALL_UNSUPPORTED_VERSION"));return}const a=e.provider;const n=a===BX.Call.Provider.Bitrix&&callEngine.isBitrixCallServerEnabled();if(!n&&a!==BX.Call.Provider.Plain&&a!==BX.Call.Provider.Voximplant){return}this.callWithLegacyMobile=e.isLegacyMobile===true;if(i instanceof CallStub){CallUtil.error("This call is already finished");return}if(this.currentCall){if(this.currentCall.id==i.id){}else if(this.currentCall.id==i.parentId){if(!this.childCall){this.childCall=i;this.childCall.users.forEach((e=>this.callView.addUser(e,BX.Call.UserState.Calling)));if(e.userData){this.callView.updateUserData(e.userData)}this.answerChildCall()}}else{CallUtil.warn("can't participate in two calls");const e=i.associatedEntity.type==="chat"&&i.associatedEntity.advanced["chatType"]==="videoconf";const n=a===BX.Call.Provider.Plain?l.AnalyticsType.private:l.AnalyticsType.group;const s=e?l.AnalyticsType.videoconf:n;const o=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(s).setStatus(l.AnalyticsStatus.busy).setP5(`callId_${i.id}`);o.send();i.decline(486)}return}if(this.callView){CallUtil.error("call view already exists");return}const s=e.video===true;this.currentCall=callEngine.calls[i.id];if("callservice"in window){const e=callservice.currentCall();if(e&&e.params.type==="internal"&&e.params.call.ID==i.id){this.nativeCall=e;if(Application.isBackground()){CallUtil.warn("Waking up p&p");CallUtil.forceBackgroundConnectPull(10).then((()=>{if(this.currentCall){this.currentCall.repeatAnswerEvents();CallUtil.warn("checking self state");callEngine.getRestClient().callMethod("im.call.getUserState",{callId:this.currentCall.id}).then((e=>{const t=e.data();const l=t.STATE;if(Application.isBackground()&&l!=="calling"){this.clearEverything()}})).catch((e=>{CallUtil.error(e);if(Application.isBackground()){Application.isBackground()}}))}})).catch((e=>{CallUtil.error("Could not connect to p&p",e);this.clearEverything()}))}}}device.setIdleTimerDisabled(true);this.changeProximitySensorStatus(true);this.bindCallEvents();this.bindNativeCallEvents();this.currentCall.setVideoEnabled(s);this.callProvider=a;this.showIncomingCall({video:s,viewStatus:e.autoAnswer?"call":"incoming",isGroupCall:a!==BX.Call.Provider.Plain}).then((()=>{CallUtil.warn("showIncomingCall success");if(this.currentCall&&e.autoAnswer){CallUtil.warn("auto-answer A");this.onAnswerButtonClick(s)}if(this.nativeCall&&this.nativeCall.connected&&!this.callAnswered){CallUtil.warn("Native call is connected, but we did not receive answered event.");this.answerCurrentCall(this.nativeCall.params.video)}})).catch((e=>{CallUtil.error(e);this.clearEverything()}))}answerCurrentCall(e){media.audioPlayer().stopPlayingSound();if(!this.currentCall){CallUtil.error("no call to answer");this.clearEverything();return}this.currentCall.setVideoEnabled(e);if(this.callAnswered){CallUtil.log("Call already answered")}this.callAnswered=true;this.requestDeviceAccess(e).then((()=>{if(!e){this.onCallLocalMediaStopped();this.stopLocalVideoStream(true)}this.currentCall.answer({useVideo:e});this.callView.setState({status:"connecting"});if(this.getCallUsers(true).length>this.getMaxActiveMicrophonesCount()){this.currentCall.setMuted(true);this.callView.setMuted(true)}})).catch((t=>{CallUtil.error(t);if(t instanceof DeviceAccessError){if(this.currentCall){this.currentCall.decline()}CallUtil.showDeviceAccessConfirm(e,(()=>Application.openSettings()),(()=>{}))}else if(t instanceof CallJoinedElseWhereError){navigator.notification.alert(BX.message("MOBILE_CALL_ALREADY_JOINED"))}else{navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#",`${t.code}`))}this.clearEverything()}))}answerChildCall(){this.removeCallEvents();this.childCall.on(BX.Call.Event.onStreamReceived,this.onChildCallFirstStreamHandler);this.childCall.on(BX.Call.Event.onLocalMediaReceived,this.onCallLocalMediaReceivedHandler);this.childCall.answer({useVideo:this.currentCall.isVideoEnabled()})}showIncomingCall(e){if(typeof e!=="object"){e={}}e.video=e.video===true;this.startCallPromise=this.requestDeviceAccess(e.video).then((()=>{this.maybeShowLocalVideo(e.video);return this.openCallView({status:e.viewStatus||"incoming",isGroupCall:e.isGroupCall,associatedEntityName:this.currentCall.associatedEntity.name,associatedEntityAvatar:this.currentCall.associatedEntity.avatar?CallUtil.makeAbsolute(this.currentCall.associatedEntity.avatar):"",associatedEntityAvatarColor:this.currentCall.associatedEntity.avatarColor,isVideoCall:e.video,cameraState:false,chatCounter:this.chatCounter},e.video)})).then((()=>this.maybeShowLocalVideo(e.video))).then((()=>{if(!this.currentCall){return Promise.reject(new Error("ALREADY_FINISHED"))}if(e.viewStatus=="incoming"){media.audioPlayer().playSound("call_incoming",10)}callInterface.indicator().setMode("incoming");this.bindViewEvents();const t=this.currentCall.getUsers();for(const e in t){this.callView.addUser(e,t[e])}BX.rest.callMethod("im.call.getUsers",{callId:this.currentCall.id,AVATAR_HR:"Y"}).then((e=>{if(this.callView){this.callView.updateUserData(e.data())}}));Promise.resolve()})).catch((t=>{CallUtil.error(t);if(t instanceof DeviceAccessError){CallUtil.showDeviceAccessConfirm(e.video,(()=>Application.openSettings()))}else if(t.code&&t.code=="ALREADY_FINISHED"){return reject("ALREADY_FINISHED")}}));return this.startCallPromise}onJoinCall(e){if(!CallUtil.isDeviceSupported()){navigator.notification.alert(BX.message("MOBILE_CALL_UNSUPPORTED_VERSION"));return}if(this.currentCall){if(this.currentCall.id==e){this.unfold()}else{CallUtil.error("cannot join 2 calls yet")}}else{let t=0;let l=1;let i=2;let a=3;navigator.notification.confirm("",(n=>{if(n==4||n==t){return}if(n==a){BX.postComponentEvent("ImMobile.Messenger.Dialog:open",[{callId:e}],"im.messenger");return}if(n==l||n==i){this.joinCall(e,n==l)}}),BX.message("MOBILE_CALL_JOIN_GROUP_CALL"),[BX.message("MOBILE_CALL_WITH_VIDEO"),BX.message("MOBILE_CALL_WITHOUT_VIDEO"),BX.message("MOBILE_CALL_OPEN_CHAT"),BX.message("MOBILE_CALL_MICROPHONE_CANCEL")])}}onCallHangup(){this.clearEverything()}bindViewEvents(){if(!this.callView){return}this.callView.on(CallLayout.Event.MicButtonClick,this.onMicButtonClickHandler);this.callView.on(CallLayout.Event.CameraButtonClick,this.onCameraButtonClickHandler);this.callView.on(CallLayout.Event.ReplaceCamera,this.onReplaceCameraClickHandler);this.callView.on(CallLayout.Event.FloorRequestButtonClick,this.onFloorRequestButtonClickHandler);this.callView.on(CallLayout.Event.ChatButtonClick,this.onChatButtonClickHandler);this.callView.on(CallLayout.Event.PrivateChatButtonClick,this.onPrivateChatButtonClickHandler);this.callView.on(CallLayout.Event.AnswerButtonClick,this.onAnswerButtonClickHandler);this.callView.on(CallLayout.Event.HangupButtonClick,this.onHangupButtonClickHandler);this.callView.on(CallLayout.Event.DeclineButtonClick,this.onDeclineButtonClickHandler);this.callView.on(CallLayout.Event.SetCentralUser,this.onSetCentralUserHandler);this.callView.on(CallLayout.Event.SelectAudioDevice,this.onSelectAudioDeviceHandler);this.callView.on(CallLayout.Event.ToggleSubscriptionRemoteVideo,this.onToggleSubscriptionRemoteVideoHandler)}removeViewEvents(){if(!this.callView){return}this.callView.off(CallLayout.Event.MicButtonClick,this.onMicButtonClickHandler);this.callView.off(CallLayout.Event.CameraButtonClick,this.onCameraButtonClickHandler);this.callView.off(CallLayout.Event.ReplaceCamera,this.onReplaceCameraClickHandler);this.callView.off(CallLayout.Event.FloorRequestButtonClick,this.onFloorRequestButtonClickHandler);this.callView.off(CallLayout.Event.ChatButtonClick,this.onChatButtonClickHandler);this.callView.off(CallLayout.Event.PrivateChatButtonClick,this.onPrivateChatButtonClickHandler);this.callView.off(CallLayout.Event.AnswerButtonClick,this.onAnswerButtonClickHandler);this.callView.off(CallLayout.Event.HangupButtonClick,this.onHangupButtonClickHandler);this.callView.off(CallLayout.Event.DeclineButtonClick,this.onDeclineButtonClickHandler);this.callView.off(CallLayout.Event.SetCentralUser,this.onSetCentralUserHandler);this.callView.off(CallLayout.Event.SelectAudioDevice,this.onSelectAudioDeviceHandler);this.callView.off(CallLayout.Event.ToggleSubscriptionRemoteVideo,this.onToggleSubscriptionRemoteVideoHandler)}bindCallEvents(){if(!this.currentCall){return}this.currentCall.on(BX.Call.Event.onUserInvited,this.onCallUserInvitedHandler).on(BX.Call.Event.onUserStateChanged,this.onCallUserStateChangedHandler).on(BX.Call.Event.onUserMicrophoneState,this.onCallUserMicrophoneStateHandler).on(BX.Call.Event.onUserScreenState,this.onCallUserScreenStateHandler).on(BX.Call.Event.onUserVideoPaused,this.onCallUserVideoPausedHandler).on(BX.Call.Event.onUserVoiceStarted,this.onCallUserVoiceStartedHandler).on(BX.Call.Event.onUserVoiceStopped,this.onCallUserVoiceStoppedHandler).on(BX.Call.Event.onUserFloorRequest,this.onCallUserFloorRequestHandler).on(BX.Call.Event.onUserEmotion,this.onCallUserEmotionHandler).on(BX.Call.Event.onLocalMediaReceived,this.onCallLocalMediaReceivedHandler).on(BX.Call.Event.onLocalMediaStopped,this.onCallLocalMediaStoppedHandler).on(BX.Call.Event.onRTCStatsReceived,this.onCallRTCStatsReceivedHandler).on(BX.Call.Event.onCallFailure,this.onCallCallFailureHandler).on(BX.Call.Event.onStreamReceived,this.onCallStreamReceivedHandler).on(BX.Call.Event.onStreamRemoved,this.onCallStreamRemovedHandler).on(BX.Call.Event.onJoin,this.onCallJoinHandler).on(BX.Call.Event.onLeave,this.onCallLeaveHandler).on(BX.Call.Event.onDestroy,this.onCallDestroyHandler).on(BX.Call.Event.onHangup,this.onCallHangupHandler).on(BX.Call.Event.onPullEventUserInviteTimeout,this.onCallTimeoutHandler).on(BX.Call.Event.onReconnected,this.onCallReconnectedHandler)}removeCallEvents(){if(!this.currentCall){return}this.currentCall.off(BX.Call.Event.onUserInvited,this.onCallUserInvitedHandler).off(BX.Call.Event.onUserStateChanged,this.onCallUserStateChangedHandler).off(BX.Call.Event.onUserMicrophoneState,this.onCallUserMicrophoneStateHandler).off(BX.Call.Event.onUserScreenState,this.onCallUserScreenStateHandler).off(BX.Call.Event.onUserVoiceStarted,this.onCallUserVoiceStartedHandler).off(BX.Call.Event.onUserVoiceStopped,this.onCallUserVoiceStoppedHandler).off(BX.Call.Event.onUserFloorRequest,this.onCallUserFloorRequestHandler).off(BX.Call.Event.onUserEmotion,this.onCallUserEmotionHandler).off(BX.Call.Event.onLocalMediaReceived,this.onCallLocalMediaReceivedHandler).off(BX.Call.Event.onLocalMediaStopped,this.onCallLocalMediaStoppedHandler).off(BX.Call.Event.onRTCStatsReceived,this.onCallRTCStatsReceivedHandler).off(BX.Call.Event.onCallFailure,this.onCallCallFailureHandler).off(BX.Call.Event.onStreamReceived,this.onCallStreamReceivedHandler).off(BX.Call.Event.onStreamRemoved,this.onCallStreamRemovedHandler).off(BX.Call.Event.onJoin,this.onCallJoinHandler).off(BX.Call.Event.onLeave,this.onCallLeaveHandler).off(BX.Call.Event.onDestroy,this.onCallDestroyHandler).off(BX.Call.Event.onHangup,this.onCallHangupHandler).off(BX.Call.Event.onPullEventUserInviteTimeout,this.onCallTimeoutHandler).off(BX.Call.Event.onReconnected,this.onCallReconnectedHandler)}bindNativeCallEvents(){if(!this.nativeCall){return}this.nativeCall.on("answered",this.onNativeCallAnsweredHandler).on("ended",this.onNativeCallEndedHandler).on("muted",this.onNativeCallMutedHandler).on("videointent",this.onNativeCallVideoIntentHandler)}prepareWidgetLayer(){return new Promise(((e,t)=>{if(uicomponent.widgetLayer()&&this.rootWidget){return e(this.rootWidget)}uicomponent.createWidgetLayer("layout",{backdrop:{}}).then((t=>e(t))).catch((e=>t(e)))}))}openWidgetLayer(){return new Promise(((e,t)=>{this.prepareWidgetLayer().then((e=>{this.rootWidget=e;this.rootWidget.setListener((e=>{if(e==="onViewRemoved"){if(uicomponent.widgetLayer()){uicomponent.widgetLayer().close().then((()=>{this.rootWidget=null}))}else{this.rootWidget=null}}}));return uicomponent.widgetLayer().show()})).then((()=>e())).catch((e=>t(e)))}))}openCallView(e={},t){if(this.callViewPromise){return this.callViewPromise}this.callViewPromise=new Promise(((l,i)=>{this.openWidgetLayer().then((()=>{CallUtil.warn("creating new CallLayout");this.callView=new CallLayout(e);this.rootWidget.showComponent(this.callView);this.callViewPromise=null;if(t&&this.localVideoStream){this.callView.setVideoStream(env.userId,this.localVideoStream,MediaDevices.cameraDirection==="front")}l()})).catch((e=>{CallUtil.error(e);this.callViewPromise=null}))}));return this.callViewPromise}fold(){if(!this.currentCall||!this.callView){return}let e=`${o}img/blank.png`;if(this.currentCall.associatedEntity&&this.currentCall.associatedEntity.avatar&&!CallUtil.isAvatarBlank(this.currentCall.associatedEntity.avatar)){e=encodeURI(CallUtil.makeAbsolute(this.currentCall.associatedEntity.avatar))}uicomponent.widgetLayer().hide().then((()=>{callInterface.indicator().setMode("active");callInterface.indicator().imageUrl=e;callInterface.indicator().show();callInterface.indicator().once("tap",(()=>this.unfold()));this.changeProximitySensorStatus(false);BX.postComponentEvent("CallEvents::viewClosed",[]);BX.postWebEvent("CallEvents::viewClosed",{})}))}unfold(){callInterface.indicator().close();if(!this.currentCall||!this.callView){return}uicomponent.widgetLayer().show();this.changeProximitySensorStatus(true);BX.postComponentEvent("CallEvents::viewOpened",[]);BX.postWebEvent("CallEvents::viewOpened",{})}startCallTimer(){this.callTimerInterval=setInterval((()=>{callInterface.indicator().setTime(CallUtil.formatSeconds((Date.now()-this.callStartTime)/1e3))}),1e3)}stopCallTimer(){clearTimeout(this.callTimerInterval);this.callTimerInterval=null}getCallUsers(e){if(!this.currentCall){return[]}const t=Object.keys(this.currentCall.getUsers());if(e){t.push(this.currentCall.userId)}return t}getMaxActiveCallUsers(){const e=this.currentCall.getUsers();let t=[];for(let l in e){if(e.hasOwnProperty(l)){if(e[l]!==BX.Call.UserState.Declined&&e[l]!==BX.Call.UserState.Busy&&e[l]!==BX.Call.UserState.Unavailable){t.push(l)}}}return t}getActiveCallUsers(){const e=this.currentCall.getUsers();let t=[];for(let l in e){if(e.hasOwnProperty(l)){if(e[l]===BX.Call.UserState.Connected||e[l]===BX.Call.UserState.Connecting||e[l]===BX.Call.UserState.Calling){t.push(l)}}}return t}onCallUserNameUpdate(e){const{userId:t,name:l}=e;if(this.callView){this.callView.updateUserData({[t]:{name:l}})}}onImMessagesCounter(e){this.chatCounter=e;if(this.callView){this.callView.setChatCounter(e)}}onAppActive(){this.isAppPaused=false;CallUtil.log("onAppActive");if(!this.currentCall){CallUtil.warn("no current call");return}const e=Application.getLastNotification();if(Application.getPlatform()==="android"&&BX.type.isFunction(this.currentCall.isReady)&&!this.currentCall.isReady()&&e.hasOwnProperty("id")&&e.id.startsWith("IM_CALL_")){CallUtil.log("check push");try{const t=JSON.parse(e.params);CallUtil.log(t);const l=t.PARAMS.call;const i=t.PARAMS.video;const a=l.ID;if(a==this.currentCall.id){CallUtil.warn("auto-answer B");this.answerCurrentCall(i)}}catch(e){CallUtil.error(e)}}else{CallUtil.log("onAppActive");this.currentCall.log("onAppActive");this.currentCall.setVideoPaused(false);if(Application.getPlatform()==="android"&&!this._hasHeadphones()&&CallUtil.getSdkAudioManager().currentDevice=="receiver"){CallUtil.warn("switching audio output to speaker on application activation");this._selectSpeaker()}}}onAppPaused(){this.isAppPaused=true;if(!this.currentCall){return}CallUtil.log("onAppPaused");this.currentCall.log("onAppPaused");this.currentCall.setVideoPaused(true)}onProximitySensor(){if(!this.currentCall||this.isAppPaused){return}if(device.proximityState){this.currentCall.setVideoPaused(true)}else{this.currentCall.setVideoPaused(false)}}onMicButtonClick(){if(!this.currentCall){return}const e=!this.currentCall.isMuted();const i=e?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn;const a=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(i).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setP5(`callId_${this.currentCall.id}`);a.send();this.currentCall.setMuted(e);this.callView.setMuted(e);if(this.nativeCall){this.nativeCall.mute(e)}}onCameraButtonClick(){if(!this.currentCall){return}const e=!this.currentCall.isVideoEnabled();const i=e?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff;const a=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(i).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setP5(`callId_${this.currentCall.id}`);a.send();if(this.callWithLegacyMobile){navigator.notification.alert(BX.message("MOBILE_CALL_NO_CAMERA_WITH_LEGACY_APP"),(()=>{}),BX.message("MOBILE_CALL_ERROR"));return}if(e){MediaDevices.requestCameraAccess().then((()=>{this.currentCall.setVideoEnabled(e);this.callView.setCameraState(e);this.changeProximitySensorStatus(this.canProximitySensorBeEnabled,null,true)})).catch((()=>{navigator.notification.alert(BX.message("MOBILE_CALL_MICROPHONE_CAN_NOT_ACCESS_CAMERA"),(()=>{}),BX.message("MOBILE_CALL_MICROPHONE_ACCESS_DENIED"));this.changeProximitySensorStatus(this.canProximitySensorBeEnabled,null,false)}))}else{this.currentCall.setVideoEnabled(e);this.callView.setCameraState(e);this.changeProximitySensorStatus(this.canProximitySensorBeEnabled,null,false)}}onReplaceCameraClick(){if(!this.currentCall&&!this.currentCall.videoEnabled){return}this.currentCall.switchCamera();if(Application.getPlatform()==="android"){setTimeout((()=>this.callView.setMirrorLocalVideo(this.currentCall.isFrontCameraUsed())),1e3)}else{this.callView.setHideLocalVideo(true);setTimeout((()=>{this.callView.setMirrorLocalVideo(this.currentCall.isFrontCameraUsed());this.callView.setHideLocalVideo(false)}),100)}}onChatButtonClick(){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.clickChat).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setP5(`callId_${this.currentCall.id}`);e.send();this.fold();if(this.currentCall){BX.postComponentEvent("onOpenDialog",[{dialogId:this.currentCall.associatedEntity.id},true],"im.recent");BX.postComponentEvent("ImMobile.Messenger.Dialog:open",[{dialogId:this.currentCall.associatedEntity.id}],"im.messenger")}}onPrivateChatButtonClick(e){this.fold();BX.postComponentEvent("onOpenDialog",[{dialogId:e},true],"im.recent");BX.postComponentEvent("ImMobile.Messenger.Dialog:open",[{dialogId:e}],"im.messenger")}onFloorRequestButtonClick(){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.handOn).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setP5(`callId_${this.currentCall.id}`);e.send();const i=this.callView.getUserFloorRequestState(env.userId);const a=this.callView.getUserTalking(env.userId);this.callView.setUserFloorRequestState(env.userId,!i);if(this.currentCall){this.currentCall.requestFloor(!i)}clearTimeout(this.callViewFloorRequestTimeout);if(a&&!i){this.callViewFloorRequestTimeout=setTimeout((()=>{if(this.currentCall){this.currentCall.requestFloor(false)}}),1500)}}onAnswerButtonClick(e){CallUtil.log("onAnswerButtonClick");const i=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(this.getCallType()).setSection(l.AnalyticsSection.callPopup).setElement(l.AnalyticsElement.answerButton).setStatus(l.AnalyticsStatus.success).setP1(e?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);this.ignoreJoinAnalyticsEvent=true;i.send();this.answerCurrentCall(e);if(this.nativeCall){CallUtil.log("looks like the native call is not answered , calling answer");this.ignoreNativeCallAnswer=true;this.nativeCall.answer()}}onHangupButtonClick(){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.disconnect).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setSubSection(l.AnalyticsSubSection.finishButton).setStatus(l.AnalyticsStatus.quit).setP1(this.currentCall.isVideoEnabled()?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);this.ignoreLeaveAnalyticsEvent=true;e.send();if(this.currentCall){this.currentCall.hangup()}this.clearEverything()}onDeclineButtonClick(){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(this.getCallType()).setStatus(l.AnalyticsStatus.decline).setP5(`callId_${this.currentCall.id}`);e.send();this.declineCall()}onToggleSubscriptionRemoteVideo(e){if(this.currentCall.toggleSubscriptionRemoteVideo){this.currentCall.toggleSubscriptionRemoteVideo(e)}}onSetCentralUser(e){if(this.currentCall.allowVideoFrom){this.currentCall.allowVideoFrom([e])}if(this.currentCall.onCentralUserSwitch){this.currentCall.onCentralUserSwitch(e)}}onSelectAudioDevice(e){CallUtil.getSdkAudioManager().selectAudioDevice(e);this.changeProximitySensorStatus(this.canProximitySensorBeEnabled,e,null)}onCallUserInvited(e){if(this.callView){this.callView.addUser(e.userId);CallUtil.getUsers(this.currentCall.id,[e.userId]).then((e=>this.callView.updateUserData(e)))}}onCallUserStateChanged(e,t,l,i){console.log("onCallUserStateChanged",e,t);if(this.callView){this.callView.setUserState(e,t)}if(t===BX.Call.UserState.Connecting||t===BX.Call.UserState.Connected){media.audioPlayer().stopPlayingSound()}if(t===BX.Call.UserState.Connected&&!this.callStartTime){this.callStartTime=Date.now();callInterface.indicator().setMode("active");this.startCallTimer()}if(t===BX.Call.UserState.Connected&&this._nativeAnsweredAction){this._nativeAnsweredAction.fullfill();this._nativeAnsweredAction=null}if(i){this.callWithLegacyMobile=true}}onCallUserMicrophoneState(e,t){if(this.callView){this.callView.setUserMicrophoneState(e,t)}}onCallUserScreenState(e,t){if(this.callView){this.callView.setUserScreenState(e,t)}}onCallUserVideoPaused(e,t){if(this.callView){this.callView.setUserVideoPaused(e,t)}}onCallUserVoiceStarted(e){if(this.callView){this.callView.setUserTalking(e,true)}}onCallUserVoiceStopped(e){if(this.callView){this.callView.setUserTalking(e,false)}}onCallUserFloorRequest(e,t){if(this.callView){this.callView.setUserFloorRequestState(e,t)}}onCallUserEmotion(){}onCallLocalMediaReceived(e){if(this.callView){this.callView.setVideoStream(env.userId,e,this.currentCall.isFrontCameraUsed())}if(!(this.currentCall instanceof PlainCall)){this.stopLocalVideoStream()}}onCallLocalMediaStopped(){if(this.callView){this.callView.setVideoStream(env.userId,null)}}onCallRTCStatsReceived(){}onCallCallFailure(){CallUtil.error("onCallFailure");this.clearEverything();navigator.notification.alert(BX.message("MOBILE_CALL_INTERNAL_ERROR").replace("#ERROR_CODE#","E003"))}onCallStreamReceived(e,t){if(this.callView){this.callView.setVideoStream(e,t)}}onCallStreamRemoved(e){if(this.callView){this.callView.setVideoStream(e,null)}}onChildCallFirstStream(e,i){this.currentCall.log("Finishing one-to-one call, switching to group call");this.callView.setVideoStream(e,i);this.childCall.off(BX.Call.Event.onStreamReceived,this.onChildCallFirstStreamHandler);this.removeCallEvents();const a=this.currentCall;const n=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.finishCall).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setStatus(l.AnalyticsStatus.privateToGroup).setP1(`callLength_${CallUtil.getTimeInSeconds(this.callStartTime)}`).setP3(`maxUserCount_${this.getMaxActiveCallUsers().length}`).setP4(`chatId_${this.normalizeChatId(this.currentCall.associatedEntity.id)}`).setP5(`callId_${this.currentCall.id}`);n.send();a.hangup();this.currentCall=this.childCall;this.childCall=null;if(a.muted){this.currentCall.setMuted(true)}this.bindCallEvents()}onCallTimeout(){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(this.getCallType()).setStatus(l.AnalyticsStatus.noAnswer).setP5(`callId_${this.currentCall.id}`);e.send();this.declineCall()}declineCall(){if(this.currentCall){this.currentCall.decline()}this.clearEverything()}onCallJoin(e){if(!this.ignoreJoinAnalyticsEvent&&!e.local){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.connect).setType(this.getCallType()).setSection(l.AnalyticsSection.chatList).setElement(l.AnalyticsElement.joinButton).setStatus(l.AnalyticsStatus.success).setP1(this.currentCall.isVideoEnabled()?l.AnalyticsEvent.cameraOn:l.AnalyticsEvent.cameraOff).setP2(this.currentCall.isMuted()?l.AnalyticsEvent.micOff:l.AnalyticsEvent.micOn).setP5(`callId_${this.currentCall.id}`);e.send()}this.ignoreJoinAnalyticsEvent=false;if(e.local){CallUtil.warn("joined local call");if(Application.getPlatform()==="android"&&!this._hasHeadphones()&&CallUtil.getSdkAudioManager().currentDevice=="receiver"&&!Application.isBackground()){CallUtil.warn("no headphones");this._selectSpeaker()}return}if(this.currentCall){this.currentCall.hangup()}this.clearEverything()}onCallLeave(e){if(!this.getActiveCallUsers().length&&!this.ignoreLeaveAnalyticsEvent){const e=(new t).setTool(l.AnalyticsTool.im).setCategory(l.AnalyticsCategory.call).setEvent(l.AnalyticsEvent.finishCall).setType(this.getCallType()).setSection(l.AnalyticsSection.callWindow).setStatus(l.AnalyticsStatus.lastUserLeft).setP1(`callLength_${CallUtil.getTimeInSeconds(this.callStartTime)}`).setP3(`maxUserCount_${this.getMaxActiveCallUsers().length}`).setP4(`chatId_${this.normalizeChatId(this.currentCall.associatedEntity.id)}`).setP5(`callId_${this.currentCall.id}`);e.send()}this.ignoreLeaveAnalyticsEvent=false;if(!e.local&&this.currentCall&&this.currentCall.ready){CallUtil.error(new Error("received remote leave with active call!"));return}this.clearEverything()}onCallDestroy(){this.clearEverything()}onCallReconnected(){if(!this.currentCall){return}const e=this.currentCall.isMuted();this.currentCall.setMuted(e);this.callView.setMuted(e);if(this.nativeCall){this.nativeCall.mute(e)}}onNativeCallAnswered(e){CallUtil.log("onNativeCallAnswered");if(this.nativeCall){this._nativeAnsweredAction=e;if(!this.ignoreNativeCallAnswer){if(this.callViewPromise){this.callViewPromise.then((()=>{this.answerCurrentCall(this.nativeCall.params.video)}))}else if(this.callView){this.answerCurrentCall(this.nativeCall.params.video)}else{CallUtil.error("callView is not initialized")}}}}onNativeCallEnded(e){if(this.nativeCall&&this.nativeCall.connected){this.onHangupButtonClick()}else{this.declineCall()}if(e){setTimeout((()=>e.fullfill()),500)}}onNativeCallMuted(e){this.currentCall.setMuted(e);this.callView.setMuted(e)}onNativeCallVideoIntent(){setTimeout((()=>this.onCameraButtonClick()),1e3)}getMaxActiveMicrophonesCount(){return 4}canCallBeAnswered(e){const t=this.callInviteTime+this.callDeclineTimeout<Date.now();const l=this.currentCall&&!this.currentCall.parentId&&e.parentId;if(!this.callInviteTime||t||l){return true}return false}clearEverything(){if(this.currentCall){this.removeCallEvents();this.currentCall=null}if(this._nativeAnsweredAction){this._nativeAnsweredAction.fail();this._nativeAnsweredAction=null}if(this.nativeCall){this.nativeCall.finish();this.nativeCall=null}this.ignoreNativeCallAnswer=false;if(uicomponent.widgetLayer()){uicomponent.widgetLayer().close().then((()=>{this.rootWidget=null}))}else{this.rootWidget=null}this.stopLocalVideoStream(true);this.callView=null;callInterface.indicator().close();this.callStartTime=null;this.callViewPromise=null;this.callAnswered=false;this.stopCallTimer();media.audioPlayer().stopPlayingSound();device.setIdleTimerDisabled(false);this.changeProximitySensorStatus(false);this.callWithLegacyMobile=false;this.callVideoEnabled=false;this.startCallPromise=null;this.localVideoPromise=null;BX.postComponentEvent("CallEvents::viewClosed",[]);BX.postWebEvent("CallEvents::viewClosed",{})}requestDeviceAccess(e){return new Promise(((t,l)=>{MediaDevices.requestMicrophoneAccess().then((()=>{if(!e){return t()}MediaDevices.requestCameraAccess().then((()=>t())).catch((({justDenied:e})=>l(new DeviceAccessError(e))))})).catch((({justDenied:e})=>l(new DeviceAccessError(e))))}))}_hasHeadphones(){return CallUtil.getSdkAudioManager().availableAudioDevices.some((e=>e==="wired"||e==="bluetooth"))}_selectSpeaker(){if(Application.getPlatform()==="android")return;CallUtil.getSdkAudioManager().selectAudioDevice("speaker")}normalizeChatId(e){if(!e){return 0}if(e.includes("chat")){e=e.replace("chat","")}return e}changeProximitySensorStatus(e,t,l){this.canProximitySensorBeEnabled=e;if(!this.currentCall||this.isAppPaused){device.setProximitySensorEnabled(false);return}if(t==null)t=CallUtil.getSdkAudioManager().currentDevice;if(l==null)l=this.currentCall.isVideoEnabled();if(t!="receiver"||l){device.setProximitySensorEnabled(false);return}device.setProximitySensorEnabled(e)}test(e="call",t={}){const l=[3,4,464,473];this.openCallView({status:e,isGroupCall:true,isVideoCall:true,associatedEntityName:"Very very long chat name. Very very long chat name. Very very long chat name. And again.",associatedEntityAvatar:"",...t}).then((()=>{this.bindViewEvents();l.forEach((e=>this.callView.addUser(e,BX.Call.UserState.Connected)));this.callView.pinUser(3);BX.rest.callMethod("im.user.list.get",{ID:l.concat(env.userId),AVATAR_HR:"Y"}).then((e=>this.callView.updateUserData(e.data())));CallUtil.log("trying get video");MediaDevices.getUserMedia({audio:true,video:true}).then((e=>{CallUtil.log("video track received");CallUtil.log(e.getTracks());this.stream=e;this.callView.setVideoStream(env.userId,e)})).catch((e=>CallUtil.error(e)))}))}testMenu(e=5,t=false){const l=[];for(let i=0;i<e;i++){l.push({text:`items ${i}`,iconClass:"returnToSpeaker",onClick:()=>CallUtil.log(`item ${i} click`)});if(t){l.push({separator:true})}}this.menu=new CallMenu({items:[{text:"zxc iop",iconClass:"participants",showSubMenu:true,color:"#FF0000",onClick:()=>{CallUtil.log(456)}},{separator:true},...l],onClose:()=>{CallUtil.log("test menu closed");this.menu&&this.menu.destroy();uicomponent.widgetLayer()&&uicomponent.widgetLayer().close()},onDestroy:()=>{this.menu=null}});this.openWidgetLayer().then((()=>this.menu.show())).then((()=>CallUtil.log("success"))).catch((e=>CallUtil.error(e)))}testDevices(){const e=CallUtil.getSdkAudioManager().availableAudioDevices.map((e=>({text:e,selected:e===CallUtil.getSdkAudioManager().currentDevice,onClick:()=>{if(this.menu){this.menu.close()}CallUtil.getSdkAudioManager().selectAudioDevice(e)}})));e.push({separator:true});e.push({text:BX.message("MOBILE_CALL_MENU_CANCEL"),onClick:()=>{if(this.menu){this.menu.close()}}});CallUtil.log(e);this.menu=new CallMenu({items:e,onClose:()=>this.menu.destroy(),onDestroy:()=>{this.menu=null;uicomponent.widgetLayer().close()}});this.openWidgetLayer().then((()=>this.menu.show())).then((()=>CallUtil.log("success"))).catch((e=>CallUtil.error(e)))}ttt(){CallUtil.log(`${o}img/blank.png`);callInterface.indicator().setMode("active");callInterface.indicator().imageUrl=`${o}img/blank.png`;callInterface.indicator().show()}}if("uicomponent"in window&&uicomponent.widgetLayer()){uicomponent.widgetLayer().close()}window.CallController=r})();
//# sourceMappingURL=extension.map.js