this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(t,e,n){"use strict";const o={components:{Button:n.Button},emits:["onSave","onCancel"],props:{selectedTime:{type:Date,default:new Date}},data(){return{ButtonSize:n.ButtonSize,ButtonColor:n.ButtonColor,selectedTimeLocal:this.selectedTime}},mounted(){this.getDatePicker().selectDate(this.selectedTime);this.getDatePicker().show()},watch:{selectedTime(t){this.getDatePicker().selectDate(t)}},beforeUnmount(){var t;(t=this.datePicker)==null?void 0:t.destroy();this.datePicker=null},methods:{getDatePicker(){if(!this.datePicker){this.datePicker=new e.DatePicker({targetNode:this.$refs.datepicker,inline:true,type:"time",timePickerStyle:"wheel"})}return this.datePicker},save(){const t=this.getDatePicker().getSelectedDate();if(t===null){this.$emit("onCancel")}else{const e=new Date(t.toLocaleString("en-US",{timeZone:"UTC"}));this.$emit("onSave",e)}},cancel(){this.$emit("onCancel")}},template:`\n\t\t<div class="booking-drum">\n\t\t\t<p class="booking-drum-header">\n\t\t\t\t{{ loc('BOOKING_COMPONENT_DRUM_HEADER') }}\n\t\t\t</p>\n\t\t\t<div ref="datepicker" class="booking-drum-datepicker"></div>\n\t\t\t<div class="booking-drum-controls">\n\t\t\t\t<div class="booking-drum-controls-btn-save">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t:text="loc('BOOKING_COMPONENT_DRUM_BTN_SAVE')"\n\t\t\t\t\t\t:size="ButtonSize.EXTRA_SMALL"\n\t\t\t\t\t\t:color="ButtonColor.PRIMARY"\n\t\t\t\t\t\t:round="true"\n\t\t\t\t\t\t@click="save"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class="booking-drum-controls-btn-cancel">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t:text="loc('BOOKING_COMPONENT_DRUM_BTN_CANCEL')"\n\t\t\t\t\t\t:size="ButtonSize.EXTRA_SMALL"\n\t\t\t\t\t\t:color="ButtonColor.LINK"\n\t\t\t\t\t\t:round="true"\n\t\t\t\t\t\t@click="cancel"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};t.Drum=o})(this.BX.Booking.Component=this.BX.Booking.Component||{},BX.UI.DatePicker,BX.Booking.Component);
//# sourceMappingURL=drum.bundle.map.js