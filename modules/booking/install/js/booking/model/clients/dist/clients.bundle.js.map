{"version":3,"file":"clients.bundle.js","sources":["../src/clients.js"],"sourcesContent":["import { Store, BuilderModel } from 'ui.vue3.vuex';\nimport type { GetterTree, ActionTree, MutationTree } from 'ui.vue3.vuex';\n\nimport { CrmEntity, Model, Module } from 'booking.const';\nimport type { ClientData, ClientModel, ClientsState } from './types';\n\nexport class Clients extends BuilderModel\n{\n\tgetName(): string\n\t{\n\t\treturn Model.Clients;\n\t}\n\n\tgetState(): ClientsState\n\t{\n\t\treturn {\n\t\t\tproviderModuleId: null,\n\t\t\tcontactCollection: {},\n\t\t\tcompanyCollection: {},\n\t\t};\n\t}\n\n\tgetElementState(): ClientModel\n\t{\n\t\treturn {\n\t\t\tid: 0,\n\t\t\tname: '',\n\t\t\ttype: {\n\t\t\t\tmodule: Module.Crm,\n\t\t\t\tcode: CrmEntity.Contact,\n\t\t\t},\n\t\t\tcontactId: null,\n\t\t\tphones: [],\n\t\t\temails: [],\n\t\t};\n\t}\n\n\tgetGetters(): GetterTree\n\t{\n\t\treturn {\n\t\t\t/** @function clients/providerModuleId */\n\t\t\tproviderModuleId: (state: ClientsState): ClientModel[] => state.providerModuleId,\n\t\t\t/** @function clients/getContacts */\n\t\t\tgetContacts: (state: ClientsState): ClientModel[] => Object.values(state.contactCollection),\n\t\t\t/** @function clients/getCompanies */\n\t\t\tgetCompanies: (state: ClientsState): ClientModel[] => Object.values(state.companyCollection),\n\t\t\t/** @function clients/getByClientData */\n\t\t\tgetByClientData: (state: ClientsState): ClientModel => (clientData: ClientData): ClientModel => {\n\t\t\t\tconst contact = state.contactCollection[clientData.id];\n\t\t\t\tconst company = state.companyCollection[clientData.id];\n\n\t\t\t\tswitch (clientData.type.code)\n\t\t\t\t{\n\t\t\t\t\tcase CrmEntity.Contact:\n\t\t\t\t\t\treturn contact ? ({ ...contact }) : undefined;\n\t\t\t\t\tcase CrmEntity.Company:\n\t\t\t\t\t\treturn company ? ({ ...company }) : undefined;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tgetActions(): ActionTree\n\t{\n\t\treturn {\n\t\t\t/** @function clients/setProviderModuleId */\n\t\t\tsetProviderModuleId: (store: Store, providerModuleId: string | null): void => {\n\t\t\t\tstore.commit('setProviderModuleId', providerModuleId);\n\t\t\t},\n\t\t\t/** @function clients/insertMany */\n\t\t\tinsertMany: (store: Store, clients: ClientModel[]): void => {\n\t\t\t\tclients.forEach((client: ClientModel) => store.commit('insert', client));\n\t\t\t},\n\t\t\t/** @function clients/upsert */\n\t\t\tupsert: (store: Store, client: ClientModel): void => {\n\t\t\t\tstore.commit('upsert', client);\n\t\t\t},\n\t\t\t/** @function clients/upsertMany */\n\t\t\tupsertMany: (store: Store, clients: ClientModel[]): void => {\n\t\t\t\tclients.forEach((client: ClientModel) => store.commit('upsert', client));\n\t\t\t},\n\t\t\t/** @function clients/update */\n\t\t\tupdate: (store: Store, payload: { id: number | string, client: ClientModel }): void => {\n\t\t\t\tstore.commit('update', payload);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMutations(): MutationTree\n\t{\n\t\treturn {\n\t\t\tsetProviderModuleId: (state: ClientsState, providerModuleId: string | null): void => {\n\t\t\t\tstate.providerModuleId = providerModuleId;\n\t\t\t},\n\t\t\tinsert: (state: ClientsState, client: ClientModel): void => {\n\t\t\t\tif (!client)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (client.type.code === CrmEntity.Contact)\n\t\t\t\t{\n\t\t\t\t\tstate.contactCollection[client.id] ??= client;\n\t\t\t\t}\n\n\t\t\t\tif (client.type.code === CrmEntity.Company)\n\t\t\t\t{\n\t\t\t\t\tstate.companyCollection[client.id] ??= client;\n\t\t\t\t}\n\t\t\t},\n\t\t\tupsert: (state: ClientsState, client: ClientModel): void => {\n\t\t\t\tif (!client)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (client.type.code === CrmEntity.Contact)\n\t\t\t\t{\n\t\t\t\t\tstate.contactCollection[client.id] ??= client;\n\t\t\t\t\tObject.assign(state.contactCollection[client.id], client);\n\t\t\t\t}\n\n\t\t\t\tif (client.type.code === CrmEntity.Company)\n\t\t\t\t{\n\t\t\t\t\tstate.companyCollection[client.id] ??= client;\n\t\t\t\t\tObject.assign(state.companyCollection[client.id], client);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate: (state: ClientsState, { id, client }: { id: number | string, client: ClientModel }): void => {\n\t\t\t\tif (client.type.code === CrmEntity.Contact)\n\t\t\t\t{\n\t\t\t\t\tconst updatedClient = { ...state.contactCollection[id], ...client };\n\t\t\t\t\tdelete state.contactCollection[id];\n\t\t\t\t\tstate.contactCollection[client.id] = updatedClient;\n\t\t\t\t}\n\n\t\t\t\tif (client.type.code === CrmEntity.Company)\n\t\t\t\t{\n\t\t\t\t\tconst updatedClient = { ...state.companyCollection[id], ...client };\n\t\t\t\t\tdelete state.companyCollection[id];\n\t\t\t\t\tstate.companyCollection[client.id] = updatedClient;\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":["Clients","BuilderModel","getName","Model","getState","providerModuleId","contactCollection","companyCollection","getElementState","id","name","type","module","Module","Crm","code","CrmEntity","Contact","contactId","phones","emails","getGetters","state","getContacts","Object","values","getCompanies","getByClientData","clientData","contact","company","undefined","Company","getActions","setProviderModuleId","store","commit","insertMany","clients","forEach","client","upsert","upsertMany","update","payload","getMutations","insert","assign","updatedClient"],"mappings":"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"}