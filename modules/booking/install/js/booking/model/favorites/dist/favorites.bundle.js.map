{"version":3,"file":"favorites.bundle.js","sources":["../src/favorites.js"],"sourcesContent":["import { Store, BuilderModel } from 'ui.vue3.vuex';\nimport type { GetterTree, ActionTree, MutationTree } from 'ui.vue3.vuex';\nimport { Model } from 'booking.const';\n\ntype FavoritesState = {\n\tids: number[],\n};\n\nexport class Favorites extends BuilderModel\n{\n\tgetName(): string\n\t{\n\t\treturn Model.Favorites;\n\t}\n\n\tgetState(): FavoritesState\n\t{\n\t\treturn {\n\t\t\tids: [],\n\t\t};\n\t}\n\n\tgetGetters(): GetterTree\n\t{\n\t\treturn {\n\t\t\t/** @function favorites/get */\n\t\t\tget: (state: FavoritesState): number[] => state.ids,\n\t\t};\n\t}\n\n\tgetActions(): ActionTree\n\t{\n\t\treturn {\n\t\t\t/** @function favorites/set */\n\t\t\tset: (store: Store, ids: number[]): void => {\n\t\t\t\tstore.commit('set', ids);\n\t\t\t},\n\t\t\t/** @function favorites/add */\n\t\t\tadd: (store: Store, id: number): void => {\n\t\t\t\tstore.commit('add', id);\n\t\t\t},\n\t\t\t/** @function favorites/addMany */\n\t\t\taddMany: (store: Store, ids: number[]): void => {\n\t\t\t\tstore.commit('addMany', ids);\n\t\t\t},\n\t\t\t/** @function favorites/delete */\n\t\t\tdelete: (store: Store, id: number): void => {\n\t\t\t\tstore.commit('delete', id);\n\t\t\t},\n\t\t\t/** @function favorites/deleteMany */\n\t\t\tdeleteMany: (store: Store, ids: number[]): void => {\n\t\t\t\tstore.commit('deleteMany', ids);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMutations(): MutationTree\n\t{\n\t\treturn {\n\t\t\tset: (state: FavoritesState, ids: number[]): void => {\n\t\t\t\tstate.ids = ids;\n\t\t\t},\n\t\t\tadd: (state: FavoritesState, id: number): void => {\n\t\t\t\tstate.ids = [...state.ids, id];\n\t\t\t},\n\t\t\taddMany: (state: FavoritesState, ids: number[]): void => {\n\t\t\t\tconst uniqueIds = ids.filter((id) => !state.ids.includes(id));\n\t\t\t\tstate.ids = [...state.ids, ...uniqueIds];\n\t\t\t},\n\t\t\tdelete: (state: FavoritesState, id: number): void => {\n\t\t\t\tstate.ids = state.ids.filter((it: number) => it !== id);\n\t\t\t},\n\t\t\tdeleteMany: (state: FavoritesState, ids: number[]): void => {\n\t\t\t\tstate.ids = state.ids.filter((id: number) => !ids.includes(id));\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":["Favorites","BuilderModel","getName","Model","getState","ids","getGetters","get","state","getActions","set","store","commit","add","id","addMany","delete","deleteMany","getMutations","uniqueIds","filter","includes","it"],"mappings":";;;;;;CAQO,MAAMA,SAAS,SAASC,yBAAY,CAC3C;GACCC,OAAO,GACP;KACC,OAAOC,mBAAK,CAACH,SAAS;;GAGvBI,QAAQ,GACR;KACC,OAAO;OACNC,GAAG,EAAE;MACL;;GAGFC,UAAU,GACV;KACC,OAAO;;OAENC,GAAG,EAAGC,KAAqB,IAAeA,KAAK,CAACH;MAChD;;GAGFI,UAAU,GACV;KACC,OAAO;;OAENC,GAAG,EAAE,CAACC,KAAY,EAAEN,GAAa,KAAW;SAC3CM,KAAK,CAACC,MAAM,CAAC,KAAK,EAAEP,GAAG,CAAC;QACxB;;OAEDQ,GAAG,EAAE,CAACF,KAAY,EAAEG,EAAU,KAAW;SACxCH,KAAK,CAACC,MAAM,CAAC,KAAK,EAAEE,EAAE,CAAC;QACvB;;OAEDC,OAAO,EAAE,CAACJ,KAAY,EAAEN,GAAa,KAAW;SAC/CM,KAAK,CAACC,MAAM,CAAC,SAAS,EAAEP,GAAG,CAAC;QAC5B;;OAEDW,MAAM,EAAE,CAACL,KAAY,EAAEG,EAAU,KAAW;SAC3CH,KAAK,CAACC,MAAM,CAAC,QAAQ,EAAEE,EAAE,CAAC;QAC1B;;OAEDG,UAAU,EAAE,CAACN,KAAY,EAAEN,GAAa,KAAW;SAClDM,KAAK,CAACC,MAAM,CAAC,YAAY,EAAEP,GAAG,CAAC;;MAEhC;;GAGFa,YAAY,GACZ;KACC,OAAO;OACNR,GAAG,EAAE,CAACF,KAAqB,EAAEH,GAAa,KAAW;SACpDG,KAAK,CAACH,GAAG,GAAGA,GAAG;QACf;OACDQ,GAAG,EAAE,CAACL,KAAqB,EAAEM,EAAU,KAAW;SACjDN,KAAK,CAACH,GAAG,GAAG,CAAC,GAAGG,KAAK,CAACH,GAAG,EAAES,EAAE,CAAC;QAC9B;OACDC,OAAO,EAAE,CAACP,KAAqB,EAAEH,GAAa,KAAW;SACxD,MAAMc,SAAS,GAAGd,GAAG,CAACe,MAAM,CAAEN,EAAE,IAAK,CAACN,KAAK,CAACH,GAAG,CAACgB,QAAQ,CAACP,EAAE,CAAC,CAAC;SAC7DN,KAAK,CAACH,GAAG,GAAG,CAAC,GAAGG,KAAK,CAACH,GAAG,EAAE,GAAGc,SAAS,CAAC;QACxC;OACDH,MAAM,EAAE,CAACR,KAAqB,EAAEM,EAAU,KAAW;SACpDN,KAAK,CAACH,GAAG,GAAGG,KAAK,CAACH,GAAG,CAACe,MAAM,CAAEE,EAAU,IAAKA,EAAE,KAAKR,EAAE,CAAC;QACvD;OACDG,UAAU,EAAE,CAACT,KAAqB,EAAEH,GAAa,KAAW;SAC3DG,KAAK,CAACH,GAAG,GAAGG,KAAK,CAACH,GAAG,CAACe,MAAM,CAAEN,EAAU,IAAK,CAACT,GAAG,CAACgB,QAAQ,CAACP,EAAE,CAAC,CAAC;;MAEhE;;CAEH;;;;;;;;"}