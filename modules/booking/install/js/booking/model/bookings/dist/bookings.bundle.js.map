{"version":3,"file":"bookings.bundle.js","sources":["../src/lib.js","../src/bookings.js"],"sourcesContent":["export function dateToTsRange(dateTs: number): [number, number]\n{\n\tconst dateFrom = dateTs;\n\tconst dateTo = new Date(dateTs).setDate(new Date(dateTs).getDate() + 1);\n\n\treturn [dateFrom, dateTo];\n}\n","import { BuilderModel, Store } from 'ui.vue3.vuex';\nimport type { GetterTree, ActionTree, MutationTree } from 'ui.vue3.vuex';\n\nimport { Model } from 'booking.const';\nimport { dateToTsRange } from './lib';\nimport type { BookingModel, BookingsState } from './types';\n\nexport class Bookings extends BuilderModel\n{\n\tgetName(): string\n\t{\n\t\treturn Model.Bookings;\n\t}\n\n\tgetState(): BookingsState\n\t{\n\t\treturn {\n\t\t\tcollection: {},\n\t\t};\n\t}\n\n\tgetElementState(): BookingModel\n\t{\n\t\treturn {\n\t\t\tid: 0,\n\t\t\tresourcesIds: [],\n\t\t\tclientId: 0,\n\t\t\tcounter: 0,\n\t\t\tname: '',\n\t\t\tdateFromTs: 0,\n\t\t\tdateToTs: 0,\n\t\t\ttimezoneFrom: Intl.DateTimeFormat().resolvedOptions().timeZone,\n\t\t\ttimezoneTo: Intl.DateTimeFormat().resolvedOptions().timeZone,\n\t\t\trrule: '',\n\t\t\tisConfirmed: false,\n\t\t\tvisitStatus: 'unknown',\n\t\t};\n\t}\n\n\tgetGetters(): GetterTree<BookingsState>\n\t{\n\t\treturn {\n\t\t\t/** @function bookings/get */\n\t\t\tget: (state: BookingsState, getters, rootState, rootGetters): BookingModel[] => {\n\t\t\t\tconst deletingBookings = rootGetters[`${Model.Interface}/deletingBookings`];\n\n\t\t\t\treturn Object.values(state.collection).filter(({ id }) => !deletingBookings[id]);\n\t\t\t},\n\t\t\t/** @function bookings/getById */\n\t\t\tgetById: (state: BookingsState) => (id: number | string): BookingModel => state.collection[id],\n\t\t\t/** @function bookings/getByIds */\n\t\t\tgetByIds: (state: BookingsState, getters) => (ids: number[]): BookingModel[] => {\n\t\t\t\treturn getters.get.filter((booking: BookingModel) => ids.includes(booking.id));\n\t\t\t},\n\t\t\t/** @function bookings/getByDateAndResources */\n\t\t\tgetByDateAndResources: (state: BookingsState, getters) => {\n\t\t\t\treturn (dateTs: number, resourcesIds: number[]): BookingModel[] => {\n\t\t\t\t\treturn getters.getByDate(dateTs)\n\t\t\t\t\t\t.filter((booking: BookingModel) => {\n\t\t\t\t\t\t\treturn resourcesIds\n\t\t\t\t\t\t\t\t.some((resourceId: number) => booking.resourcesIds.includes(resourceId))\n\t\t\t\t\t\t\t;\n\t\t\t\t\t\t})\n\t\t\t\t\t;\n\t\t\t\t};\n\t\t\t},\n\t\t\t/** @function bookings/getByDateAndIds */\n\t\t\tgetByDateAndIds: (state: BookingsState, getters) => {\n\t\t\t\treturn (dateTs: number, ids: number[]): BookingModel[] => {\n\t\t\t\t\treturn getters.getByDate(dateTs)\n\t\t\t\t\t\t.filter((booking: BookingModel) => ids.includes(booking.id))\n\t\t\t\t\t;\n\t\t\t\t};\n\t\t\t},\n\t\t\t/** @function bookings/getByDate */\n\t\t\tgetByDate: (state: BookingsState, getters) => (dateTs: number): BookingModel[] => {\n\t\t\t\tconst [dateFrom, dateTo] = dateToTsRange(dateTs);\n\n\t\t\t\treturn getters.get.filter(({ dateToTs, dateFromTs }) => dateToTs > dateFrom && dateTo > dateFromTs);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetActions(): ActionTree<BookingsState, any>\n\t{\n\t\treturn {\n\t\t\t/** @function bookings/add */\n\t\t\tadd: (store: Store, booking: BookingModel): void => {\n\t\t\t\tstore.commit('add', booking);\n\t\t\t},\n\t\t\t/** @function bookings/insertMany */\n\t\t\tinsertMany: (store: Store, bookings: BookingModel[]): void => {\n\t\t\t\tbookings.forEach((booking: BookingModel) => store.commit('insert', booking));\n\t\t\t},\n\t\t\t/** @function bookings/upsert */\n\t\t\tupsert: (store: Store, booking: BookingModel): void => {\n\t\t\t\tstore.commit('upsert', booking);\n\t\t\t},\n\t\t\t/** @function bookings/upsertMany */\n\t\t\tupsertMany: (store: Store, bookings: BookingModel[]): void => {\n\t\t\t\tbookings.forEach((booking: BookingModel) => store.commit('upsert', booking));\n\t\t\t},\n\t\t\t/** @function bookings/update */\n\t\t\tupdate: (store: Store, payload: { id: number | string, booking: BookingModel }): void => {\n\t\t\t\tstore.commit('update', payload);\n\t\t\t},\n\t\t\t/** @function bookings/delete */\n\t\t\tdelete: (store: Store, bookingId: number | string): void => {\n\t\t\t\tstore.commit('delete', bookingId);\n\t\t\t},\n\t\t\tdeleteMany: (store: Store, bookingIds: number[]): void => {\n\t\t\t\tstore.commit('deleteMany', bookingIds);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMutations(): MutationTree<BookingsState>\n\t{\n\t\treturn {\n\t\t\tadd: (state: BookingsState, booking: BookingModel): void => {\n\t\t\t\tstate.collection[booking.id] = booking;\n\t\t\t},\n\t\t\tinsert: (state: BookingsState, booking: BookingModel): void => {\n\t\t\t\tstate.collection[booking.id] ??= booking;\n\t\t\t},\n\t\t\tupsert: (state: BookingsState, booking: BookingModel): void => {\n\t\t\t\tstate.collection[booking.id] ??= booking;\n\t\t\t\tObject.assign(state.collection[booking.id], booking);\n\t\t\t},\n\t\t\tupdate: (state: BookingsState, { id, booking }: { id: number | string, booking: BookingModel }): void => {\n\t\t\t\tconst updatedBooking = { ...state.collection[id], ...booking };\n\t\t\t\tdelete state.collection[id];\n\t\t\t\tstate.collection[booking.id] = updatedBooking;\n\t\t\t},\n\t\t\tdelete: (state: BookingsState, bookingId: number | string): void => {\n\t\t\t\tdelete state.collection[bookingId];\n\t\t\t},\n\t\t\tdeleteMany: (state, bookingIds: number[]): void => {\n\t\t\t\tfor (const id of bookingIds)\n\t\t\t\t{\n\t\t\t\t\tdelete state.collection[id];\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":["dateToTsRange","dateTs","dateFrom","dateTo","Date","setDate","getDate","Bookings","BuilderModel","getName","Model","getState","collection","getElementState","id","resourcesIds","clientId","counter","name","dateFromTs","dateToTs","timezoneFrom","Intl","DateTimeFormat","resolvedOptions","timeZone","timezoneTo","rrule","isConfirmed","visitStatus","getGetters","get","state","getters","rootState","rootGetters","deletingBookings","Interface","Object","values","filter","getById","getByIds","ids","booking","includes","getByDateAndResources","getByDate","some","resourceId","getByDateAndIds","getActions","add","store","commit","insertMany","bookings","forEach","upsert","upsertMany","update","payload","delete","bookingId","deleteMany","bookingIds","getMutations","insert","assign","updatedBooking"],"mappings":"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"}