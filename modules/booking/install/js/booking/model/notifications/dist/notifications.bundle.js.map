{"version":3,"file":"notifications.bundle.js","sources":["../src/notifications.js"],"sourcesContent":["import { BuilderModel } from 'ui.vue3.vuex';\nimport type { GetterTree, ActionTree, MutationTree } from 'ui.vue3.vuex';\n\nimport { Model } from 'booking.const';\nimport type { NotificationsModel, NotificationsSenderModel, NotificationsState } from './types';\n\nexport class Notifications extends BuilderModel\n{\n\tgetName(): string\n\t{\n\t\treturn Model.Notifications;\n\t}\n\n\tgetState(): NotificationsState\n\t{\n\t\treturn {\n\t\t\tnotifications: {},\n\t\t\tsenders: {},\n\t\t};\n\t}\n\n\tgetElementState(): NotificationsModel\n\t{\n\t\treturn {\n\t\t\ttype: '',\n\t\t\ttemplates: [{\n\t\t\t\ttype: '',\n\t\t\t\ttext: '',\n\t\t\t\ttextSms: '',\n\t\t\t}],\n\t\t};\n\t}\n\n\tgetGetters(): GetterTree\n\t{\n\t\treturn {\n\t\t\t/** @function notifications/get */\n\t\t\tget: (state: NotificationsState): NotificationsModel[] => Object.values(state.notifications),\n\t\t\t/** @function notifications/getByType */\n\t\t\tgetByType: (state: NotificationsState) => (type: string): NotificationsModel => state.notifications[type],\n\t\t\t/** @function notifications/getSenders */\n\t\t\tgetSenders: (state: NotificationsState): NotificationsSenderModel[] => Object.values(state.senders),\n\t\t\t/** @function notifications/isCurrentSenderAvailable */\n\t\t\tisCurrentSenderAvailable: (state: NotificationsState): boolean => {\n\t\t\t\treturn Object.values(state.senders).some((sender: NotificationsSenderModel) => sender.canUse);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetActions(): ActionTree\n\t{\n\t\treturn {\n\t\t\t/** @function notifications/upsert */\n\t\t\tupsert: (store: Store, notification: NotificationsModel): void => {\n\t\t\t\tstore.commit('upsert', notification);\n\t\t\t},\n\t\t\t/** @function notifications/upsertMany */\n\t\t\tupsertMany: (store: Store, notifications: NotificationsModel[]): void => {\n\t\t\t\tnotifications.forEach((notification: NotificationsModel) => store.commit('upsert', notification));\n\t\t\t},\n\t\t\t/** @function notifications/upsertManySenders */\n\t\t\tupsertManySenders: (store: Store, senders: NotificationsSenderModel[]): void => {\n\t\t\t\tsenders.forEach((sender: NotificationsSenderModel) => store.commit('upsertSender', sender));\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMutations(): MutationTree\n\t{\n\t\treturn {\n\t\t\tupsert: (state: NotificationsState, notification: NotificationsModel): void => {\n\t\t\t\tstate.notifications[notification.type] ??= notification;\n\t\t\t\tObject.assign(state.notifications[notification.type], notification);\n\t\t\t},\n\t\t\tupsertSender: (state: NotificationsState, sender: NotificationsSenderModel): void => {\n\t\t\t\tstate.senders[sender.code] ??= sender;\n\t\t\t\tObject.assign(state.senders[sender.code], sender);\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":["Notifications","BuilderModel","getName","Model","getState","notifications","senders","getElementState","type","templates","text","textSms","getGetters","get","state","Object","values","getByType","getSenders","isCurrentSenderAvailable","some","sender","canUse","getActions","upsert","store","notification","commit","upsertMany","forEach","upsertManySenders","getMutations","assign","upsertSender","code"],"mappings":";;;;;;CAMO,MAAMA,aAAa,SAASC,yBAAY,CAC/C;GACCC,OAAO,GACP;KACC,OAAOC,mBAAK,CAACH,aAAa;;GAG3BI,QAAQ,GACR;KACC,OAAO;OACNC,aAAa,EAAE,EAAE;OACjBC,OAAO,EAAE;MACT;;GAGFC,eAAe,GACf;KACC,OAAO;OACNC,IAAI,EAAE,EAAE;OACRC,SAAS,EAAE,CAAC;SACXD,IAAI,EAAE,EAAE;SACRE,IAAI,EAAE,EAAE;SACRC,OAAO,EAAE;QACT;MACD;;GAGFC,UAAU,GACV;KACC,OAAO;;OAENC,GAAG,EAAGC,KAAyB,IAA2BC,MAAM,CAACC,MAAM,CAACF,KAAK,CAACT,aAAa,CAAC;;OAE5FY,SAAS,EAAGH,KAAyB,IAAMN,IAAY,IAAyBM,KAAK,CAACT,aAAa,CAACG,IAAI,CAAC;;OAEzGU,UAAU,EAAGJ,KAAyB,IAAiCC,MAAM,CAACC,MAAM,CAACF,KAAK,CAACR,OAAO,CAAC;;OAEnGa,wBAAwB,EAAGL,KAAyB,IAAc;SACjE,OAAOC,MAAM,CAACC,MAAM,CAACF,KAAK,CAACR,OAAO,CAAC,CAACc,IAAI,CAAEC,MAAgC,IAAKA,MAAM,CAACC,MAAM,CAAC;;MAE9F;;GAGFC,UAAU,GACV;KACC,OAAO;;OAENC,MAAM,EAAE,CAACC,KAAY,EAAEC,YAAgC,KAAW;SACjED,KAAK,CAACE,MAAM,CAAC,QAAQ,EAAED,YAAY,CAAC;QACpC;;OAEDE,UAAU,EAAE,CAACH,KAAY,EAAEpB,aAAmC,KAAW;SACxEA,aAAa,CAACwB,OAAO,CAAEH,YAAgC,IAAKD,KAAK,CAACE,MAAM,CAAC,QAAQ,EAAED,YAAY,CAAC,CAAC;QACjG;;OAEDI,iBAAiB,EAAE,CAACL,KAAY,EAAEnB,OAAmC,KAAW;SAC/EA,OAAO,CAACuB,OAAO,CAAER,MAAgC,IAAKI,KAAK,CAACE,MAAM,CAAC,cAAc,EAAEN,MAAM,CAAC,CAAC;;MAE5F;;GAGFU,YAAY,GACZ;KACC,OAAO;OACNP,MAAM,EAAE,CAACV,KAAyB,EAAEY,YAAgC,KAAW;SAAA;SAC9E,iDAAAZ,KAAK,CAACT,aAAa,uBAACqB,YAAY,CAAClB,IAAI,CAAC,oCAAtC,wCAAsC,GAAKkB,YAAY;SACvDX,MAAM,CAACiB,MAAM,CAAClB,KAAK,CAACT,aAAa,CAACqB,YAAY,CAAClB,IAAI,CAAC,EAAEkB,YAAY,CAAC;QACnE;OACDO,YAAY,EAAE,CAACnB,KAAyB,EAAEO,MAAgC,KAAW;SAAA;SACpF,2CAAAP,KAAK,CAACR,OAAO,iBAACe,MAAM,CAACa,IAAI,CAAC,oCAA1B,4BAA0B,GAAKb,MAAM;SACrCN,MAAM,CAACiB,MAAM,CAAClB,KAAK,CAACR,OAAO,CAACe,MAAM,CAACa,IAAI,CAAC,EAAEb,MAAM,CAAC;;MAElD;;CAEH;;;;;;;;"}