{"version":3,"file":"busy-slots.bundle.js","sources":["../src/busy-slots.js"],"sourcesContent":["import { Core } from 'booking.core';\nimport { BusySlot, DateFormat, Model } from 'booking.const';\nimport { Duration } from 'booking.lib.duration';\nimport { resourceDialogService } from 'booking.provider.service.resource-dialog-service';\nimport { resourcesDateCache } from 'booking.lib.resources-date-cache';\nimport type { BookingModel } from 'booking.model.bookings';\nimport type { ResourceModel, SlotRange } from 'booking.model.resources';\nimport type { Intersections } from 'booking.model.interface';\n\nexport type BusySlotDto = {\n\tid: string,\n\tfromTs: number,\n\ttoTs: number,\n\tresourceId: number,\n\tintersectingResourceId?: number,\n\ttype: string,\n};\n\nconst minBookingViewMs = 15 * 60 * 1000;\n\nclass BusySlots\n{\n\t#busySlots: BusySlotDto[] = [];\n\n\t#getBookings(): BookingModel[]\n\t{\n\t\treturn Core.getStore().getters[`${Model.Bookings}/getByDateAndResources`](\n\t\t\tthis.#selectedDateTs,\n\t\t\tthis.#resourcesIds,\n\t\t);\n\t}\n\n\t#getIntersectingBookings(resourcesIds: number[]): BookingModel[]\n\t{\n\t\treturn Core.getStore().getters[`${Model.Bookings}/getByDateAndResources`](\n\t\t\tthis.#selectedDateTs,\n\t\t\tresourcesIds,\n\t\t);\n\t}\n\n\tget #selectedWeekDay(): string\n\t{\n\t\treturn DateFormat.WeekDays[new Date(this.#selectedDateTs + this.#offset).getDay()];\n\t}\n\n\tget #selectedDateTs(): number\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/selectedDateTs`];\n\t}\n\n\tget #offset(): number\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/offset`];\n\t}\n\n\tget #timezoneOffset(): number\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/timezoneOffset`];\n\t}\n\n\tget #resourcesIds(): number[]\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/resourcesIds`];\n\t}\n\n\tget #intersections(): Intersections\n\t{\n\t\tif (this.#draggedBooking)\n\t\t{\n\t\t\tconst draggedIds = [...this.#draggedBooking.resourcesIds];\n\t\t\tconst notDraggedIds = draggedIds.filter((id: number) => id !== this.#draggedBookingResourceId);\n\n\t\t\treturn {\n\t\t\t\t...[...this.#resourcesIds].reduce((acc: Intersections, id: number) => ({\n\t\t\t\t\t...acc,\n\t\t\t\t\t[id]: notDraggedIds,\n\t\t\t\t}), {}),\n\t\t\t\t...notDraggedIds.reduce((acc: Intersections, id: number) => ({\n\t\t\t\t\t...acc,\n\t\t\t\t\t[id]: draggedIds,\n\t\t\t\t}), {}),\n\t\t\t};\n\t\t}\n\n\t\treturn Core.getStore().getters[`${Model.Interface}/intersections`];\n\t}\n\n\tget #draggedBooking(): BookingModel | null\n\t{\n\t\treturn Core.getStore().getters[`${Model.Bookings}/getById`](this.#draggedBookingId) ?? null;\n\t}\n\n\tget #draggedBookingId(): number\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/draggedBookingId`]\n\t\t\t|| Core.getStore().getters[`${Model.Interface}/resizedBookingId`]\n\t\t;\n\t}\n\n\tget #draggedBookingResourceId(): number\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/draggedBookingResourceId`];\n\t}\n\n\tasync loadBusySlots(): Promise<void>\n\t{\n\t\tawait this.#loadIntersections();\n\n\t\tvoid Core.getStore().dispatch(`${Model.Interface}/clearDisabledBusySlots`);\n\t\tvoid Core.getStore().dispatch(`${Model.Interface}/clearBusySlots`);\n\n\t\tconst resourcesWithIntersections = Object.keys(this.#intersections)\n\t\t\t.flatMap((key: string) => {\n\t\t\t\tconst resourceId = Number(key);\n\n\t\t\t\tif (resourceId > 0)\n\t\t\t\t{\n\t\t\t\t\treturn resourceId;\n\t\t\t\t}\n\n\t\t\t\treturn this.#resourcesIds;\n\t\t\t})\n\t\t;\n\n\t\tthis.#busySlots = [\n\t\t\t...this.#resourcesIds.flatMap((resourceId) => this.#calculateOffHoursBusySlots(resourceId)),\n\t\t\t...resourcesWithIntersections.flatMap((resourceId) => this.#calculateIntersectionBusySlots(resourceId)),\n\t\t];\n\n\t\treturn Core.getStore().dispatch(`${Model.Interface}/upsertBusySlotMany`, this.#busySlots);\n\t}\n\n\tasync #loadIntersections(): Promise<void>\n\t{\n\t\tconst selectedResourceIds = [...new Set(Object.values(this.#intersections).flat())];\n\n\t\tconst dateTs = this.#selectedDateTs / 1000;\n\t\tconst loadedResourcesIds = new Set(resourcesDateCache.getIdsByDateTs(dateTs));\n\t\tconst idsToLoad = selectedResourceIds.filter((id: number) => !loadedResourcesIds.has(id));\n\n\t\tawait resourceDialogService.loadByIds(idsToLoad, dateTs);\n\t}\n\n\t#calculateOffHoursBusySlots(resourceId: number): BusySlotDto[]\n\t{\n\t\tconst resource: ResourceModel = this.#getResource(resourceId);\n\t\tif (resource.slotRanges.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst bookingRanges = this.#getBookings()\n\t\t\t.filter((booking: BookingModel) => booking.resourcesIds.includes(resourceId))\n\t\t\t.map((booking: BookingModel) => this.#calculateMinutesRange(booking))\n\t\t;\n\n\t\tconst minutesInDay = Duration.getUnitDurations().d / Duration.getUnitDurations().i;\n\n\t\tconst slotRanges = resource.slotRanges\n\t\t\t.map((slotRange: SlotRange): SlotRange => {\n\t\t\t\tconst timeZone = slotRange.timezone;\n\n\t\t\t\tconst date = new Date(this.#selectedDateTs);\n\t\t\t\tconst dateInTimezone = new Date(date.toLocaleString('en-US', { timeZone }));\n\t\t\t\tconst dateInUTC = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));\n\n\t\t\t\tconst timezoneOffset = (dateInTimezone.getTime() - dateInUTC.getTime()) / 1000;\n\t\t\t\tconst minutesOffset = (this.#timezoneOffset - timezoneOffset) / 60;\n\n\t\t\t\treturn {\n\t\t\t\t\t...slotRange,\n\t\t\t\t\tfrom: slotRange.from + minutesOffset,\n\t\t\t\t\tto: slotRange.to + minutesOffset,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.map((slotRange: SlotRange) => {\n\t\t\t\tif (slotRange.from > minutesInDay)\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...slotRange,\n\t\t\t\t\t\tfrom: slotRange.from - minutesInDay,\n\t\t\t\t\t\tto: slotRange.to - minutesInDay,\n\t\t\t\t\t\tweekDays: slotRange.weekDays.map((weekDay) => this.#getNextDay(weekDay)),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (slotRange.to < 0)\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...slotRange,\n\t\t\t\t\t\tfrom: slotRange.from + minutesInDay,\n\t\t\t\t\t\tto: slotRange.to + minutesInDay,\n\t\t\t\t\t\tweekDays: slotRange.weekDays.map((weekDay) => this.#getPreviousDay(weekDay)),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn slotRange;\n\t\t\t})\n\t\t\t.flatMap((slotRange: SlotRange): SlotRange[] => {\n\t\t\t\tif (slotRange.from < 0)\n\t\t\t\t{\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...slotRange,\n\t\t\t\t\t\t\tfrom: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...slotRange.weekDays.map((weekDay) => ({\n\t\t\t\t\t\t\t...slotRange,\n\t\t\t\t\t\t\tfrom: minutesInDay + slotRange.from,\n\t\t\t\t\t\t\tto: minutesInDay,\n\t\t\t\t\t\t\tweekDays: [this.#getPreviousDay(weekDay)],\n\t\t\t\t\t\t})),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (slotRange.to > minutesInDay)\n\t\t\t\t{\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...slotRange,\n\t\t\t\t\t\t\tto: minutesInDay,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...slotRange.weekDays.map((weekDay) => ({\n\t\t\t\t\t\t\t...slotRange,\n\t\t\t\t\t\t\tfrom: 0,\n\t\t\t\t\t\t\tto: slotRange.to - minutesInDay,\n\t\t\t\t\t\t\tweekDays: [this.#getNextDay(weekDay)],\n\t\t\t\t\t\t})),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn slotRange;\n\t\t\t})\n\t\t\t.filter((slotRange: SlotRange) => slotRange.weekDays.includes(this.#selectedWeekDay))\n\t\t;\n\n\t\tconst freeRanges = this.filterSlotRanges([...slotRanges, ...bookingRanges]);\n\n\t\tconst busyRanges = [0, ...freeRanges.flatMap(({ from, to }) => [from, to]), 24 * 60]\n\t\t\t.reduce((acc, minutes, index) => {\n\t\t\t\tconst chunkIndex = Math.floor(index / 2);\n\n\t\t\t\tacc[chunkIndex] ??= [];\n\t\t\t\tacc[chunkIndex].push(minutes);\n\n\t\t\t\treturn acc;\n\t\t\t}, [])\n\t\t;\n\n\t\treturn busyRanges.filter(([from, to]) => to - from > 0).map(([from, to]): BusySlotDto => {\n\t\t\tconst fromTs = new Date(this.#selectedDateTs).setMinutes(from);\n\t\t\tconst toTs = new Date(this.#selectedDateTs).setMinutes(to);\n\t\t\tconst id = `${resourceId}-${fromTs}-${toTs}`;\n\t\t\tconst type = BusySlot.OffHours;\n\n\t\t\treturn { id, fromTs, toTs, resourceId, type };\n\t\t});\n\t}\n\n\t#calculateIntersectionBusySlots(resourceId: number): BusySlotDto[]\n\t{\n\t\tconst resource: ResourceModel = this.#getResource(resourceId);\n\t\tif (resource.slotRanges.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst intersectingResourcesIds = [\n\t\t\t...(this.#intersections[0] ?? []),\n\t\t\t...(this.#intersections[resourceId] ?? []),\n\t\t];\n\n\t\tconst intersectingBookings = this.#getIntersectingBookings(intersectingResourcesIds)\n\t\t\t.filter((booking: BookingModel) => {\n\t\t\t\tconst notCurrentResource = !booking.resourcesIds.includes(resourceId);\n\t\t\t\tconst isNotDragged = booking.id !== this.#draggedBookingId;\n\n\t\t\t\treturn notCurrentResource && isNotDragged;\n\t\t\t})\n\t\t;\n\n\t\tconst intersectingBookingRanges = intersectingBookings\n\t\t\t.map((booking: BookingModel) => this.#calculateMinutesRange(booking));\n\t\tif (intersectingBookingRanges.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst bookingRanges = this.#getBookings()\n\t\t\t.filter((booking: BookingModel) => booking.resourcesIds.includes(resourceId))\n\t\t\t.map((booking: BookingModel) => this.#calculateMinutesRange(booking))\n\t\t;\n\n\t\tconst busyRanges = intersectingBookingRanges.flatMap((intersectingRange) => {\n\t\t\treturn this.#subtractRanges(intersectingRange, bookingRanges);\n\t\t});\n\n\t\treturn busyRanges.map(({ from, to, id }): BusySlotDto => {\n\t\t\tconst fromTs = new Date(this.#selectedDateTs).setMinutes(from);\n\t\t\tconst toTs = new Date(this.#selectedDateTs).setMinutes(to);\n\t\t\tconst type = BusySlot.Intersection;\n\n\t\t\tconst booking = intersectingBookings.find((intersectingBooking) => intersectingBooking.id === id);\n\n\t\t\tconst intersectingResourceId = booking\n\t\t\t\t? booking.resourcesIds.find((it) => intersectingResourcesIds.includes(it))\n\t\t\t\t: 0\n\t\t\t;\n\n\t\t\treturn {\n\t\t\t\tid: `${resourceId}-${fromTs}-${toTs}`,\n\t\t\t\tfromTs,\n\t\t\t\ttoTs,\n\t\t\t\tresourceId,\n\t\t\t\tintersectingResourceId,\n\t\t\t\ttype,\n\t\t\t};\n\t\t});\n\t}\n\n\t#calculateMinutesRange(booking: BookingModel): { from: number, to: number }\n\t{\n\t\tconst date = new Date(this.#selectedDateTs);\n\t\tconst dateFromTs = Math.max(date.getTime(), booking.dateFromTs) + this.#offset;\n\t\tconst bookingViewToTs = Math.max(booking.dateToTs, booking.dateFromTs + minBookingViewMs);\n\t\tconst dateToTs = Math.min(date.setDate(date.getDate() + 1), bookingViewToTs) + this.#offset;\n\n\t\tconst dateFrom = new Date(dateFromTs);\n\t\tconst dateTo = new Date(dateToTs);\n\t\tconst to = dateTo.getHours() * 60 + dateTo.getMinutes();\n\n\t\treturn {\n\t\t\tfrom: dateFrom.getHours() * 60 + dateFrom.getMinutes(),\n\t\t\tto: to === 0 ? 60 * 24 : to,\n\t\t\tid: booking.id,\n\t\t};\n\t}\n\n\t#subtractRanges(range, bookingRanges): { from: number, to: number }[]\n\t{\n\t\tlet remainingRanges = [{ ...range }];\n\n\t\tbookingRanges.forEach((bookingRange) => {\n\t\t\tremainingRanges = remainingRanges.flatMap((remainingRange) => {\n\t\t\t\tif (this.#rangesOverlap(remainingRange, bookingRange))\n\t\t\t\t{\n\t\t\t\t\tconst parts = [];\n\t\t\t\t\tif (remainingRange.from < bookingRange.from)\n\t\t\t\t\t{\n\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\tfrom: remainingRange.from,\n\t\t\t\t\t\t\tto: bookingRange.from,\n\t\t\t\t\t\t\tid: remainingRange.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (remainingRange.to > bookingRange.to)\n\t\t\t\t\t{\n\t\t\t\t\t\tparts.push({\n\t\t\t\t\t\t\tfrom: bookingRange.to,\n\t\t\t\t\t\t\tto: remainingRange.to,\n\t\t\t\t\t\t\tid: remainingRange.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn parts;\n\t\t\t\t}\n\n\t\t\t\treturn [remainingRange];\n\t\t\t});\n\t\t});\n\n\t\treturn remainingRanges;\n\t}\n\n\t#rangesOverlap(range1, range2): boolean\n\t{\n\t\treturn range1.from < range2.to && range2.from < range1.to;\n\t}\n\n\tfilterSlotRanges(slotRanges: { from: number, to: number }[]): { from: number, to: number }[]\n\t{\n\t\treturn slotRanges\n\t\t\t.map(({ from, to }) => ({ from, to }))\n\t\t\t.sort((a, b) => a.from - b.from)\n\t\t\t.reduce((acc, { from, to }) => {\n\t\t\t\tconst last = acc.length - 1;\n\t\t\t\tif (acc[last] && acc[last].to >= from)\n\t\t\t\t{\n\t\t\t\t\tif (acc[last].to <= to)\n\t\t\t\t\t{\n\t\t\t\t\t\tacc[last].to = to;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tacc.push({ from, to });\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, [])\n\t\t\t.filter(({ from, to }) => to - from > 0)\n\t\t;\n\t}\n\n\t#getResource(resourceId: number): ResourceModel\n\t{\n\t\treturn Core.getStore().getters[`${Model.Resources}/getById`](resourceId);\n\t}\n\n\t#getNextDay(weekDay: string): string\n\t{\n\t\treturn DateFormat.WeekDays[(DateFormat.WeekDays.indexOf(weekDay) + 1) % 7];\n\t}\n\n\t#getPreviousDay(weekDay: string): string\n\t{\n\t\treturn DateFormat.WeekDays[(DateFormat.WeekDays.indexOf(weekDay) + 7 - 1) % 7];\n\t}\n}\n\nexport const busySlots = new BusySlots();\n"],"names":["minBookingViewMs","BusySlots","loadBusySlots","Core","getStore","dispatch","Model","Interface","resourcesWithIntersections","Object","keys","flatMap","key","resourceId","Number","filterSlotRanges","slotRanges","map","from","to","sort","a","b","reduce","acc","last","length","push","filter","getters","Bookings","resourcesIds","DateFormat","WeekDays","Date","getDay","draggedIds","notDraggedIds","id","selectedResourceIds","Set","values","flat","dateTs","loadedResourcesIds","resourcesDateCache","getIdsByDateTs","idsToLoad","has","resourceDialogService","loadByIds","resource","bookingRanges","booking","includes","minutesInDay","Duration","getUnitDurations","d","i","slotRange","timeZone","timezone","date","dateInTimezone","toLocaleString","dateInUTC","timezoneOffset","getTime","minutesOffset","weekDays","weekDay","freeRanges","busyRanges","minutes","index","chunkIndex","Math","floor","fromTs","setMinutes","toTs","type","BusySlot","OffHours","intersectingResourcesIds","intersectingBookings","notCurrentResource","isNotDragged","intersectingBookingRanges","intersectingRange","Intersection","find","intersectingBooking","intersectingResourceId","it","dateFromTs","max","bookingViewToTs","dateToTs","min","setDate","getDate","dateFrom","dateTo","getHours","getMinutes","range","remainingRanges","forEach","bookingRange","remainingRange","parts","range1","range2","Resources","indexOf","busySlots"],"mappings":"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"}