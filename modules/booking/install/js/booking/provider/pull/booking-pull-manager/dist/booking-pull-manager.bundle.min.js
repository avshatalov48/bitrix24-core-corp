this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,s,t,o,r,a,i,l,d,n,c,u,p){"use strict";class b{constructor(){if(new.target===b){throw new TypeError("BasePullHandler: An abstract class cannot be instantiated")}}getMap(){return{}}getDelayedMap(){return{}}}var v=babelHelpers.classPrivateFieldLooseKey("handleBookingAdded");var h=babelHelpers.classPrivateFieldLooseKey("handleBookingDeleted");var P=babelHelpers.classPrivateFieldLooseKey("updateCounters");class g extends b{constructor(e){super(e);Object.defineProperty(this,P,{value:y});Object.defineProperty(this,h,{value:f});Object.defineProperty(this,v,{value:B});this.handleBookingAdded=babelHelpers.classPrivateFieldLooseBase(this,v)[v].bind(this);this.handleBookingDeleted=babelHelpers.classPrivateFieldLooseBase(this,h)[h].bind(this);this.updateCounters=babelHelpers.classPrivateFieldLooseBase(this,P)[P].bind(this)}getMap(){return{bookingAdded:this.handleBookingAdded,bookingUpdated:this.handleBookingAdded,bookingDeleted:this.handleBookingDeleted}}getDelayedMap(){return{bookingAdded:this.updateCounters,bookingUpdated:this.updateCounters,bookingDeleted:this.updateCounters}}}function B(e){const s=e.booking;const t=l.BookingMappers.mapDtoToModel(s);const o=s.resources.map((e=>n.ResourceMappers.mapDtoToModel(e)));const a=s.clients.map((e=>r.ClientMappers.mapDtoToModel(e)));void Promise.all([c.Core.getStore().dispatch("resources/upsertMany",o),c.Core.getStore().dispatch("bookings/upsert",t),c.Core.getStore().dispatch("clients/upsertMany",a)])}function f(e){void c.Core.getStore().dispatch(`${u.Model.Bookings}/delete`,e.id);void c.Core.getStore().dispatch(`${u.Model.Interface}/addDeletingBooking`,e.id)}async function y(){await a.mainPageService.fetchCounters()}var F=babelHelpers.classPrivateFieldLooseKey("handleCountersUpdated");var M=babelHelpers.classPrivateFieldLooseKey("isFilterMode");var H=babelHelpers.classPrivateFieldLooseKey("getViewDateTs");class L extends b{constructor(...e){super(...e);Object.defineProperty(this,H,{value:S});Object.defineProperty(this,M,{value:m});Object.defineProperty(this,F,{value:k})}getDelayedMap(){return{countersUpdated:babelHelpers.classPrivateFieldLooseBase(this,F)[F].bind(this)}}}async function k(e){await i.countersService.fetchData();await l.bookingService.getById(e.entityId);const s=babelHelpers.classPrivateFieldLooseBase(this,M)[M]();if(!s){const e=babelHelpers.classPrivateFieldLooseBase(this,H)[H]();const s=true;await d.calendarService.loadCounterMarks(e,s)}}function m(){return c.Core.getStore().getters[`${u.Model.Interface}/isFilterMode`]}function S(){return c.Core.getStore().getters[`${u.Model.Interface}/viewDateTs`]}var C=babelHelpers.classPrivateFieldLooseKey("handleResourceAdded");var D=babelHelpers.classPrivateFieldLooseKey("handleResourceUpdated");var w=babelHelpers.classPrivateFieldLooseKey("handleResourceDeleted");class X extends b{constructor(...e){super(...e);Object.defineProperty(this,w,{value:O});Object.defineProperty(this,D,{value:K});Object.defineProperty(this,C,{value:j})}getMap(){return{resourceAdded:babelHelpers.classPrivateFieldLooseBase(this,C)[C].bind(this),resourceUpdated:babelHelpers.classPrivateFieldLooseBase(this,D)[D].bind(this),resourceDeleted:babelHelpers.classPrivateFieldLooseBase(this,w)[w].bind(this)}}}async function j(e){const s=e.resource;const t=n.ResourceMappers.mapDtoToModel(s);await c.Core.getStore().dispatch(`${u.Model.Resources}/upsert`,t);if(t.isMain){await c.Core.getStore().dispatch(`${u.Model.Favorites}/addMany`,[t.id])}const o=c.Core.getStore().getters[`${u.Model.Interface}/isFilterMode`];if(o){return}const r=c.Core.getStore().getters[`${u.Model.Favorites}/get`];void c.Core.getStore().dispatch(`${u.Model.Interface}/setResourcesIds`,r)}function K(e){const s=e.resource;const t=n.ResourceMappers.mapDtoToModel(s);void c.Core.getStore().dispatch(`${u.Model.Resources}/upsert`,t)}function O(e){void Promise.all([c.Core.getStore().dispatch(`${u.Model.Resources}/delete`,e.id),c.Core.getStore().dispatch(`${u.Model.Favorites}/delete`,e.id),c.Core.getStore().dispatch(`${u.Model.Interface}/deleteResourceId`,e.id)])}var R=babelHelpers.classPrivateFieldLooseKey("handleResourceTypeAdded");class I extends b{constructor(...e){super(...e);Object.defineProperty(this,R,{value:T})}getMap(){return{resourceTypeAdded:babelHelpers.classPrivateFieldLooseBase(this,R)[R].bind(this)}}}function T(e){const s=e.resourceType;const t=p.ResourceTypeMappers.mapDtoToModel(s);void c.Core.getStore().dispatch(`${u.Model.ResourceTypes}/upsert`,t)}var $=babelHelpers.classPrivateFieldLooseKey("params");var A=babelHelpers.classPrivateFieldLooseKey("loadItemsDelay");var x=babelHelpers.classPrivateFieldLooseKey("handlers");var E=babelHelpers.classPrivateFieldLooseKey("onBeforePull");var Q=babelHelpers.classPrivateFieldLooseKey("onPull");var U=babelHelpers.classPrivateFieldLooseKey("onBeforeQueueExecute");var V=babelHelpers.classPrivateFieldLooseKey("onQueueExecute");var q=babelHelpers.classPrivateFieldLooseKey("onReload");var z=babelHelpers.classPrivateFieldLooseKey("executeQueue");class G{constructor(e){Object.defineProperty(this,z,{value:_});Object.defineProperty(this,q,{value:Z});Object.defineProperty(this,V,{value:Y});Object.defineProperty(this,U,{value:W});Object.defineProperty(this,Q,{value:N});Object.defineProperty(this,E,{value:J});Object.defineProperty(this,$,{writable:true,value:void 0});Object.defineProperty(this,A,{writable:true,value:500});Object.defineProperty(this,x,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,$)[$]=e;babelHelpers.classPrivateFieldLooseBase(this,x)[x]=new Set([new g,new X,new I,new L])}initQueueManager(){return new o.QueueManager({moduleId:u.Module.Booking,userId:babelHelpers.classPrivateFieldLooseBase(this,$)[$].currentUserId,config:{loadItemsDelay:babelHelpers.classPrivateFieldLooseBase(this,A)[A]},additionalData:{},events:{onBeforePull:e=>{babelHelpers.classPrivateFieldLooseBase(this,E)[E](e)},onPull:e=>{babelHelpers.classPrivateFieldLooseBase(this,Q)[Q](e)}},callbacks:{onBeforeQueueExecute:e=>babelHelpers.classPrivateFieldLooseBase(this,U)[U](e),onQueueExecute:e=>babelHelpers.classPrivateFieldLooseBase(this,V)[V](e),onReload:()=>{babelHelpers.classPrivateFieldLooseBase(this,q)[q]()}}})}}function J(e){const{pullData:{command:s,params:t}}=e.data;for(const e of babelHelpers.classPrivateFieldLooseBase(this,x)[x]){var o,r;(o=(r=e.getMap())[s])==null?void 0:o.call(r,t)}}function N(e){const{pullData:{command:t,params:o},promises:r}=e.data;for(const e of babelHelpers.classPrivateFieldLooseBase(this,x)[x]){if(e.getDelayedMap()[t]){var a;r.push(Promise.resolve({data:{id:(a=o.entityId)!=null?a:s.Text.getRandom(),command:t,params:o}}))}}}function W(e){return Promise.resolve()}async function Y(e){await babelHelpers.classPrivateFieldLooseBase(this,z)[z](e)}function Z(e){}function _(e){return new Promise((s=>{e.forEach((e=>{const{data:{command:s,params:t}}=e;for(const e of babelHelpers.classPrivateFieldLooseBase(this,x)[x]){var o,r;(o=(r=e.getDelayedMap())[s])==null?void 0:o.call(r,t)}}));s()}))}e.BookingPullManager=G})(this.BX.Booking.Provider.Pull=this.BX.Booking.Provider.Pull||{},BX,BX.Event,BX.Pull,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking,BX.Booking.Const,BX.Booking.Provider.Service);
//# sourceMappingURL=booking-pull-manager.bundle.map.js