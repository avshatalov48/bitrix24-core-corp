this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,s,a,r,o,i,t,l,c){"use strict";var n=babelHelpers.classPrivateFieldLooseKey("response");class b{constructor(e){Object.defineProperty(this,n,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,n)[n]=e}getBookings(){return babelHelpers.classPrivateFieldLooseBase(this,n)[n].bookings.map((e=>t.BookingMappers.mapDtoToModel(e)))}getClients(){return babelHelpers.classPrivateFieldLooseBase(this,n)[n].bookings.flatMap((({clients:e})=>e.map((e=>l.ClientMappers.mapDtoToModel(e)))))}getResources(){return babelHelpers.classPrivateFieldLooseBase(this,n)[n].resources.map((e=>c.ResourceMappers.mapDtoToModel(e)))}}var d=babelHelpers.classPrivateFieldLooseKey("data");class p{constructor(e){Object.defineProperty(this,d,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,d)[d]=e}getMainResourceIds(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].map((e=>e.id))}}var u=babelHelpers.classPrivateFieldLooseKey("queryCache");var v=babelHelpers.classPrivateFieldLooseKey("loadByIdsPromises");var B=babelHelpers.classPrivateFieldLooseKey("mainResourcesCache");var h=babelHelpers.classPrivateFieldLooseKey("requestLoadByIds");var P=babelHelpers.classPrivateFieldLooseKey("upsertResponseData");var g=babelHelpers.classPrivateFieldLooseKey("isQueryLoaded");var y=babelHelpers.classPrivateFieldLooseKey("requestGetMainResources");class L{constructor(){Object.defineProperty(this,y,{value:f});Object.defineProperty(this,g,{value:R});Object.defineProperty(this,P,{value:H});Object.defineProperty(this,h,{value:F});Object.defineProperty(this,u,{writable:true,value:[]});Object.defineProperty(this,v,{writable:true,value:{}});Object.defineProperty(this,B,{writable:true,value:null})}async loadByIds(e,a){try{var r,o;(o=(r=babelHelpers.classPrivateFieldLooseBase(this,v)[v])[a])!=null?o:r[a]={};const i=Object.keys(babelHelpers.classPrivateFieldLooseBase(this,v)[v][a]).flatMap((e=>e.split(","))).map((e=>Number(e)));const t=new Set(i);const l=e.filter((e=>!t.has(e)));if(!s.Type.isArrayFilled(l)){await Promise.all(Object.values(babelHelpers.classPrivateFieldLooseBase(this,v)[v][a]));return}const c=l.join(",");babelHelpers.classPrivateFieldLooseBase(this,v)[v][a][c]=babelHelpers.classPrivateFieldLooseBase(this,h)[h](l,a);const n=await babelHelpers.classPrivateFieldLooseBase(this,v)[v][a][c];await babelHelpers.classPrivateFieldLooseBase(this,P)[P](n,a)}catch(e){console.error("ResourceDialogLoadByIdsRequest: error",e)}}async fillDialog(e){try{const s=await(new i.ApiClient).post("ResourceDialog.fillDialog",{dateTs:e});await babelHelpers.classPrivateFieldLooseBase(this,P)[P](s,e)}catch(e){console.error("ResourceDialogFillDialogRequest: error",e)}}async doSearch(e,a){if(!s.Type.isStringFilled(e)){return}if(babelHelpers.classPrivateFieldLooseBase(this,g)[g](e)){return}babelHelpers.classPrivateFieldLooseBase(this,u)[u].push(e);try{const s=await(new i.ApiClient).post("ResourceDialog.doSearch",{query:e,dateTs:a});await babelHelpers.classPrivateFieldLooseBase(this,P)[P](s,a)}catch(e){console.error("ResourceDialogDoSearchRequest: error",e)}}async getMainResources(){try{if(s.Type.isNull(babelHelpers.classPrivateFieldLooseBase(this,B)[B])){babelHelpers.classPrivateFieldLooseBase(this,B)[B]=babelHelpers.classPrivateFieldLooseBase(this,y)[y]()}const e=await babelHelpers.classPrivateFieldLooseBase(this,B)[B];const o=new p(e);const i=o.getMainResourceIds();await a.Core.getStore().dispatch(`${r.Model.MainResources}/setMainResources`,i)}catch(e){console.error("ResourceDialogGetMainResources: error",e)}}clearMainResourcesCache(){babelHelpers.classPrivateFieldLooseBase(this,B)[B]=null}}async function F(e,s){return(new i.ApiClient).post("ResourceDialog.loadByIds",{ids:e,dateTs:s})}async function H(e,s){const r=new b(e);o.resourcesDateCache.upsertIds(s,r.getResources().map((e=>e.id)));await Promise.all([a.Core.getStore().dispatch("bookings/upsertMany",r.getBookings()),a.Core.getStore().dispatch("clients/upsertMany",r.getClients()),a.Core.getStore().dispatch("resources/upsertMany",r.getResources())])}function R(e){return babelHelpers.classPrivateFieldLooseBase(this,u)[u].some((s=>e.startsWith(s)))}function f(){const e=new i.ApiClient;return e.post("ResourceDialog.getMainResources",{})}const w=new L;e.resourceDialogService=w})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX,BX.Booking,BX.Booking.Const,BX.Booking.Lib,BX.Booking.Lib,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service);
//# sourceMappingURL=resource-dialog-service.bundle.map.js