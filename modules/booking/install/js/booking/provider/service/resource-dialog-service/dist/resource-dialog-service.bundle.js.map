{"version":3,"file":"resource-dialog-service.bundle.js","sources":["../src/resource-dialog-data-extractor.js","../src/main-resources-extractor.js","../src/resource-dialog-service.js"],"sourcesContent":["import { BookingMappers } from 'booking.provider.service.booking-service';\nimport { ClientMappers } from 'booking.provider.service.client-service';\nimport { ResourceMappers } from 'booking.provider.service.resources-service';\n\nimport type { BookingModel } from 'booking.model.bookings';\nimport type { BookingDto } from 'booking.provider.service.booking-service';\nimport type { ClientModel } from 'booking.model.clients';\nimport type { ClientDto } from 'booking.provider.service.client-service';\nimport type { ResourceModel } from 'booking.model.resources';\nimport type { ResourceDto } from 'booking.provider.service.resources-service';\n\nimport { ResourceDialogResponse } from './types';\n\nexport class ResourceDialogDataExtractor\n{\n\t#response: ResourceDialogResponse;\n\n\tconstructor(response: ResourceDialogResponse)\n\t{\n\t\tthis.#response = response;\n\t}\n\n\tgetBookings(): BookingModel[]\n\t{\n\t\treturn this.#response.bookings.map((booking: BookingDto): BookingModel => {\n\t\t\treturn BookingMappers.mapDtoToModel(booking);\n\t\t});\n\t}\n\n\tgetClients(): ClientModel[]\n\t{\n\t\treturn this.#response.bookings\n\t\t\t.flatMap(({ clients }) => clients.map((client: ClientDto): ClientModel => {\n\t\t\t\treturn ClientMappers.mapDtoToModel(client);\n\t\t\t}))\n\t\t;\n\t}\n\n\tgetResources(): ResourceModel[]\n\t{\n\t\treturn this.#response.resources.map((resource: ResourceDto): ResourceModel => {\n\t\t\treturn ResourceMappers.mapDtoToModel(resource);\n\t\t});\n\t}\n}\n","import type { ResourceDto } from 'booking.provider.service.resources-service';\n\nexport class MainResourcesExtractor\n{\n\t#data: ResourceDto[];\n\n\tconstructor(data: ResourceDto[])\n\t{\n\t\tthis.#data = data;\n\t}\n\n\tgetMainResourceIds(): number[]\n\t{\n\t\treturn this.#data.map((resource: ResourceDto) => resource.id);\n\t}\n}\n","import { Type } from 'main.core';\n\nimport { Core } from 'booking.core';\nimport { Model } from 'booking.const';\nimport { resourcesDateCache } from 'booking.lib.resources-date-cache';\nimport { ApiClient } from 'booking.lib.api-client';\nimport type { ResourceDto } from 'booking.provider.service.resources-service';\n\nimport { ResourceDialogDataExtractor } from './resource-dialog-data-extractor';\nimport { MainResourcesExtractor } from './main-resources-extractor';\nimport type { ResourceDialogResponse } from './types';\n\nclass ResourceDialogService\n{\n\t#queryCache = [];\n\t#loadByIdsPromises = {};\n\t#mainResourcesCache: Promise | null = null;\n\n\tasync loadByIds(idsToLoad: number[], dateTs: number): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tthis.#loadByIdsPromises[dateTs] ??= {};\n\n\t\t\tconst requestedIds = Object.keys(this.#loadByIdsPromises[dateTs])\n\t\t\t\t.flatMap((key) => key.split(','))\n\t\t\t\t.map((id) => Number(id))\n\t\t\t;\n\n\t\t\tconst requestedIdsSet = new Set(requestedIds);\n\n\t\t\tconst ids = idsToLoad.filter((id) => !requestedIdsSet.has(id));\n\t\t\tif (!Type.isArrayFilled(ids))\n\t\t\t{\n\t\t\t\tawait Promise.all(Object.values(this.#loadByIdsPromises[dateTs]));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst idsKey = ids.join(',');\n\n\t\t\tthis.#loadByIdsPromises[dateTs][idsKey] = this.#requestLoadByIds(ids, dateTs);\n\n\t\t\tconst data = await this.#loadByIdsPromises[dateTs][idsKey];\n\n\t\t\tawait this.#upsertResponseData(data, dateTs);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('ResourceDialogLoadByIdsRequest: error', error);\n\t\t}\n\t}\n\n\tasync #requestLoadByIds(ids: number[], dateTs: number): Promise<void>\n\t{\n\t\treturn new ApiClient().post('ResourceDialog.loadByIds', { ids, dateTs });\n\t}\n\n\tasync fillDialog(dateTs: number): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst data = await new ApiClient().post('ResourceDialog.fillDialog', { dateTs });\n\n\t\t\tawait this.#upsertResponseData(data, dateTs);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('ResourceDialogFillDialogRequest: error', error);\n\t\t}\n\t}\n\n\tasync doSearch(query: string, dateTs: number): Promise<void>\n\t{\n\t\tif (!Type.isStringFilled(query))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#isQueryLoaded(query))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#queryCache.push(query);\n\n\t\ttry\n\t\t{\n\t\t\tconst data = await new ApiClient().post('ResourceDialog.doSearch', { query, dateTs });\n\n\t\t\tawait this.#upsertResponseData(data, dateTs);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('ResourceDialogDoSearchRequest: error', error);\n\t\t}\n\t}\n\n\tasync #upsertResponseData(data: ResourceDialogResponse, dateTs: number): Promise<void>\n\t{\n\t\tconst extractor = new ResourceDialogDataExtractor(data);\n\n\t\tresourcesDateCache.upsertIds(dateTs, extractor.getResources().map((it) => it.id));\n\n\t\tawait Promise.all([\n\t\t\tCore.getStore().dispatch('bookings/upsertMany', extractor.getBookings()),\n\t\t\tCore.getStore().dispatch('clients/upsertMany', extractor.getClients()),\n\t\t\tCore.getStore().dispatch('resources/upsertMany', extractor.getResources()),\n\t\t]);\n\t}\n\n\t#isQueryLoaded(query: string): boolean\n\t{\n\t\treturn this.#queryCache.some((it) => query.startsWith(it));\n\t}\n\n\tasync getMainResources()\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (Type.isNull(this.#mainResourcesCache))\n\t\t\t{\n\t\t\t\tthis.#mainResourcesCache = this.#requestGetMainResources();\n\t\t\t}\n\t\t\tconst data: ResourceDto[] = await this.#mainResourcesCache;\n\t\t\tconst extractor = new MainResourcesExtractor(data);\n\n\t\t\tconst ids = extractor.getMainResourceIds();\n\t\t\tawait Core.getStore().dispatch(`${Model.MainResources}/setMainResources`, ids);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('ResourceDialogGetMainResources: error', error);\n\t\t}\n\t}\n\n\t#requestGetMainResources(): Promise<ResourceDto[]>\n\t{\n\t\tconst api = new ApiClient();\n\n\t\treturn api.post('ResourceDialog.getMainResources', {});\n\t}\n\n\tclearMainResourcesCache(): void\n\t{\n\t\tthis.#mainResourcesCache = null;\n\t}\n}\n\nexport const resourceDialogService = new ResourceDialogService();\n"],"names":["ResourceDialogDataExtractor","constructor","response","getBookings","bookings","map","booking","BookingMappers","mapDtoToModel","getClients","flatMap","clients","client","ClientMappers","getResources","resources","resource","ResourceMappers","MainResourcesExtractor","data","getMainResourceIds","id","ResourceDialogService","loadByIds","idsToLoad","dateTs","requestedIds","Object","keys","key","split","Number","requestedIdsSet","Set","ids","filter","has","Type","isArrayFilled","Promise","all","values","idsKey","join","error","console","fillDialog","ApiClient","post","doSearch","query","isStringFilled","push","getMainResources","isNull","extractor","Core","getStore","dispatch","Model","MainResources","clearMainResourcesCache","resourcesDateCache","upsertIds","it","some","startsWith","api","resourceDialogService"],"mappings":"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"}