this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,s,t,i){"use strict";var o=babelHelpers.classPrivateFieldLooseKey("data");class a{constructor(e){Object.defineProperty(this,o,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,o)[o]=e}getAdvertisingResourceTypes(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,o)[o].advertisingResourceTypes)!=null?e:[]}getNotificationsSettings(){return babelHelpers.classPrivateFieldLooseBase(this,o)[o].notificationsSettings}getCompanyScheduleSlots(){return babelHelpers.classPrivateFieldLooseBase(this,o)[o].companyScheduleSlots}isCompanyScheduleAccess(){return Boolean(babelHelpers.classPrivateFieldLooseBase(this,o)[o].isCompanyScheduleAccess)}getWeekStart(){return babelHelpers.classPrivateFieldLooseBase(this,o)[o].weekStart}}class r{async fetchData(){await this.loadData()}async loadData(){try{const e=new t.ApiClient;const o=await e.post("ResourceWizard.get",{});const r=new a(o);const c=s.Core.getStore();const{notifications:n,senders:l}=r.getNotificationsSettings();await Promise.all([c.dispatch(`${i.Model.ResourceCreationWizard}/setAdvertisingResourceTypes`,r.getAdvertisingResourceTypes()),c.dispatch(`${i.Model.Notifications}/upsertMany`,n),c.dispatch(`${i.Model.Notifications}/upsertManySenders`,l),c.dispatch(`${i.Model.ResourceCreationWizard}/setCompanyScheduleSlots`,r.getCompanyScheduleSlots()),c.dispatch(`${i.Model.ResourceCreationWizard}/setCompanyScheduleAccess`,r.isCompanyScheduleAccess()),c.dispatch(`${i.Model.ResourceCreationWizard}/setWeekStart`,r.getWeekStart())])}catch(e){console.error("ResourceCreationWizardService load data error",e)}}}const c=new r;e.resourceCreationWizardService=c})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX.Booking,BX.Booking.Lib,BX.Booking.Const);
//# sourceMappingURL=resource-creation-wizard-service.bundle.map.js