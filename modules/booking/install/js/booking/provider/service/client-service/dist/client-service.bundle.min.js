this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,t,a,s){"use strict";function o(e){if(!t.Type.isArrayFilled(Object.values(e.data))){return null}return{id:e.id,name:e.data.name,image:e.data.image,type:e.type,phones:e.data.phones,emails:e.data.emails,isReturning:e.isReturning}}let r=e=>e,i;const l="WORK";const n=Object.freeze({AddFormattedName:"crm.controller.integration.booking.contact.addFormattedName",ParseFormattedName:"crm.controller.integration.booking.contact.parseFormattedName",CompanyAdd:"crm.company.add",ContactAdd:"crm.contact.add",CompanyGet:"crm.company.get",ContactGet:"crm.contact.get",GetCompanyContacts:"crm.company.contact.items.get",CompanyUpdate:"crm.company.update",ContactUpdate:"crm.contact.update"});const d=Object.freeze({AddFormattedName:"add_formatted_name",ParseName:"parse_name_#id#",CompanyAdd:"company_add_#id#",ContactAdd:"contact_add_#id#",CompanyGet:"company_get_#id#",ContactGet:"contact_get_#id#",GetCompanyContacts:"get_company_contacts",CompanyUpdate:"company_update_#id#",ContactUpdate:"contact_update_#id#"});var c=babelHelpers.classPrivateFieldLooseKey("requestSaveMany");var p=babelHelpers.classPrivateFieldLooseKey("isClientToUpdate");var m=babelHelpers.classPrivateFieldLooseKey("getParseNameMethods");var b=babelHelpers.classPrivateFieldLooseKey("getCompanyAddMethods");var u=babelHelpers.classPrivateFieldLooseKey("getContactAddMethods");var v=babelHelpers.classPrivateFieldLooseKey("getCompanyGetMethods");var h=babelHelpers.classPrivateFieldLooseKey("getContactGetMethods");var y=babelHelpers.classPrivateFieldLooseKey("getCompanyUpdateMethods");var C=babelHelpers.classPrivateFieldLooseKey("getContactUpdateMethods");var P=babelHelpers.classPrivateFieldLooseKey("prepareContactNameFields");var L=babelHelpers.classPrivateFieldLooseKey("prepareCommunicationsForUpdate");var E=babelHelpers.classPrivateFieldLooseKey("requestLinkedContactId");var B=babelHelpers.classPrivateFieldLooseKey("getRequestKey");class F{constructor(){Object.defineProperty(this,B,{value:I});Object.defineProperty(this,E,{value:G});Object.defineProperty(this,L,{value:S});Object.defineProperty(this,P,{value:U});Object.defineProperty(this,C,{value:M});Object.defineProperty(this,y,{value:T});Object.defineProperty(this,h,{value:O});Object.defineProperty(this,v,{value:_});Object.defineProperty(this,u,{value:N});Object.defineProperty(this,b,{value:g});Object.defineProperty(this,m,{value:A});Object.defineProperty(this,p,{value:H});Object.defineProperty(this,c,{value:f})}async saveMany(e){try{const t=await babelHelpers.classPrivateFieldLooseBase(this,c)[c](e);await s.Core.getStore().dispatch("clients/upsertMany",t);return{clients:t.map((({id:e,type:t})=>({id:e,type:t})))}}catch(e){console.error("ClientService: saveMany error",e);return{error:e}}}async getLinkedContactByCompany(e){var t;const o=s.Core.getStore().getters["clients/getByClientData"](e);(t=o.contactId)!=null?t:o.contactId=await babelHelpers.classPrivateFieldLooseBase(this,E)[E](e);await s.Core.getStore().dispatch("clients/update",{id:o.id,client:o});return s.Core.getStore().getters["clients/getByClientData"]({id:o.contactId,type:{module:a.Module.Crm,code:a.CrmEntity.Contact}})}}async function f(e){const s=e.filter((e=>e.type.code===a.CrmEntity.Company));const o=e.filter((e=>e.type.code===a.CrmEntity.Contact));const l=s.filter((e=>!e.id));const n=s.filter((e=>babelHelpers.classPrivateFieldLooseBase(this,p)[p](e)));const c=o.filter((e=>!e.id));const P=o.filter((e=>babelHelpers.classPrivateFieldLooseBase(this,p)[p](e)));const L=[...l,...n,...c,...P];L.forEach(((e,t)=>{e.index=t}));const E={...babelHelpers.classPrivateFieldLooseBase(this,m)[m]([...c,...P]),...babelHelpers.classPrivateFieldLooseBase(this,b)[b](l),...babelHelpers.classPrivateFieldLooseBase(this,u)[u](c,s),...babelHelpers.classPrivateFieldLooseBase(this,v)[v](n),...babelHelpers.classPrivateFieldLooseBase(this,y)[y](n),...babelHelpers.classPrivateFieldLooseBase(this,h)[h](P),...babelHelpers.classPrivateFieldLooseBase(this,C)[C](P)};const F=await new Promise((e=>{if(Object.keys(E).length===0){e([])}BX.rest.callBatch(E,(t=>e(t)))}));const f=Object.values(F).map((e=>{var t;return(t=e.answer.error)==null?void 0:t.error_description})).filter((e=>e));if(t.Type.isArrayFilled(f)){throw new Error(t.Tag.render(i||(i=r`<span>${0}</span>`),f[0]).textContent)}l.forEach((e=>{e.id=F[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.CompanyAdd,e.index)].data()}));c.forEach((e=>{e.id=F[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactAdd,e.index)].data()}));return e}function H(e){if(!e.id){return false}const t=s.Core.getStore().getters["clients/getByClientData"](e);return e.name!==t.name||e.phones[0]!==t.phones[0]||e.emails[0]!==t.emails[0]}function A(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ParseName,t.index)]:{method:n.ParseFormattedName,params:{fields:{FORMATTED_NAME:t.name}}}})),{})}function g(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.CompanyAdd,t.index)]:{method:n.CompanyAdd,params:{fields:{TITLE:t.name,PHONE:t.phones.map((e=>({VALUE:e,VALUE_TYPE:l}))),EMAIL:t.emails.map((e=>({VALUE:e,VALUE_TYPE:l})))},params:{REGISTER_SONET_EVENT:"Y"}}}})),{})}function N(e,t){return e.reduce(((e,a)=>{var s,o;const r=(s=(o=t[0])==null?void 0:o.id)!=null?s:`$result[${babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.CompanyAdd)}]`;return{...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactAdd,a.index)]:{method:n.ContactAdd,params:{fields:{COMPANY_ID:t.length>0?r:undefined,...babelHelpers.classPrivateFieldLooseBase(this,P)[P](a.index),PHONE:a.phones.map((e=>({VALUE:e,VALUE_TYPE:l}))),EMAIL:a.emails.map((e=>({VALUE:e,VALUE_TYPE:l})))},params:{REGISTER_SONET_EVENT:"Y"}}}}}),{})}function _(e){return e.reduce(((e,{id:t})=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.CompanyGet,t)]:[n.CompanyGet,{id:t}]})),{})}function O(e){return e.reduce(((e,{id:t})=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactGet,t)]:[n.ContactGet,{id:t}]})),{})}function T(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.CompanyUpdate,t.id)]:{method:n.CompanyUpdate,params:{id:t.id,fields:{TITLE:t.name,...babelHelpers.classPrivateFieldLooseBase(this,L)[L](t)},params:{REGISTER_SONET_EVENT:"Y"}}}})),{})}function M(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactUpdate,t.id)]:{method:n.ContactUpdate,params:{id:t.id,fields:{...babelHelpers.classPrivateFieldLooseBase(this,P)[P](t.index),...babelHelpers.classPrivateFieldLooseBase(this,L)[L](t)},params:{REGISTER_SONET_EVENT:"Y"}}}})),{})}function U(e){return{NAME:`$result[${babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ParseName,e)}][NAME]`,SECOND_NAME:`$result[${babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ParseName,e)}][SECOND_NAME]`,LAST_NAME:`$result[${babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ParseName,e)}][LAST_NAME]`}}function S(e){const t=s.Core.getStore().getters["clients/getByClientData"](e);const o=e.type.code===a.CrmEntity.Company?babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.CompanyGet,e.id):babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactGet,e.id);const r=[{ID:t.phones[0]?`$result[${o}][PHONE][0][ID]`:undefined,VALUE:e.phones[0],VALUE_TYPE:l}];const i=[{ID:t.emails[0]?`$result[${o}][EMAIL][0][ID]`:undefined,VALUE:e.emails[0],VALUE_TYPE:l}];return{PHONE:e.phones.length>0?r:undefined,EMAIL:e.emails.length>0?i:undefined}}async function G(e){try{const t=e.id;const o=await new Promise((e=>{BX.rest.callBatch({[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.GetCompanyContacts)]:[n.GetCompanyContacts,{id:t}],[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactGet)]:{method:n.ContactGet,params:{id:`$result[${babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.GetCompanyContacts)}][0][CONTACT_ID]`}},[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.AddFormattedName)]:{method:n.AddFormattedName,params:{fields:`$result[${babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.ContactGet)}]`}}},(t=>{var s,o,r,i,l;const n=t[babelHelpers.classPrivateFieldLooseBase(this,B)[B](d.AddFormattedName)].data();if(!(n!=null&&n.ID)){e(null)}e({id:Number(n.ID),name:n.FORMATTED_NAME,image:(s=n.PHOTO)==null?void 0:s.showUrl,type:{module:a.Module.Crm,code:a.CrmEntity.Contact},phones:(o=(r=n.PHONE)==null?void 0:r.map((({VALUE:e})=>e)))!=null?o:[],emails:(i=(l=n.EMAIL)==null?void 0:l.map((({VALUE:e})=>e)))!=null?i:[]})}))}));if(o===null){return 0}await s.Core.getStore().dispatch("clients/upsert",o);return o.id}catch(e){console.error("ClientService: loadLinkedContactByCompany error",e);return 0}}function I(e,t=0){return e.replace("#id#",t)}const j=new F;const V={mapDtoToModel:o};e.ClientMappers=V;e.clientService=j})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX,BX.Booking.Const,BX.Booking);
//# sourceMappingURL=client-service.bundle.map.js