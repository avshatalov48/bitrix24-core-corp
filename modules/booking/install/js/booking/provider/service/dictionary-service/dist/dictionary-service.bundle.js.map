{"version":3,"file":"dictionary-service.bundle.js","sources":["../src/dictionary-data-extractor.js","../src/dictionary-service.js"],"sourcesContent":["import type { DictionaryResponse } from './types';\nimport type { DictionaryModel } from 'booking.model.dictionary';\n\nexport class DictionaryDataExtractor\n{\n\t#response: DictionaryResponse;\n\n\tconstructor(response: DictionaryResponse)\n\t{\n\t\tthis.#response = response;\n\t}\n\n\tgetCounters(): DictionaryModel\n\t{\n\t\treturn this.#response.counters;\n\t}\n\n\tgetNotifications(): DictionaryModel\n\t{\n\t\treturn this.#response.notifications;\n\t}\n\n\tgetNotificationTemplates(): DictionaryModel\n\t{\n\t\treturn this.#response.notificationTemplateTypes;\n\t}\n\n\tgetPushCommands(): DictionaryModel\n\t{\n\t\treturn this.#response.pushCommands;\n\t}\n\n\tgetBookings(): DictionaryModel\n\t{\n\t\treturn this.#response.bookings;\n\t}\n}\n","import { Core } from 'booking.core';\nimport { ApiClient } from 'booking.lib.api-client';\nimport { DictionaryDataExtractor } from './dictionary-data-extractor';\n\nclass DictionaryService\n{\n\tasync fetchData(): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst data = await new ApiClient().get('Dictionary.get', {});\n\t\t\tconst extractor = new DictionaryDataExtractor(data);\n\n\t\t\treturn Promise.all([\n\t\t\t\tCore.getStore().dispatch('dictionary/setCounters', extractor.getCounters()),\n\t\t\t\tCore.getStore().dispatch('dictionary/setNotifications', extractor.getNotifications()),\n\t\t\t\tCore.getStore().dispatch('dictionary/setNotificationTemplates', extractor.getNotificationTemplates()),\n\t\t\t\tCore.getStore().dispatch('dictionary/setPushCommands', extractor.getPushCommands()),\n\t\t\t\tCore.getStore().dispatch('dictionary/setBookings', extractor.getBookings()),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingDictionaryGetRequest: error', error);\n\t\t}\n\t}\n}\n\nexport const dictionaryService = new DictionaryService();\n"],"names":["DictionaryDataExtractor","constructor","response","getCounters","counters","getNotifications","notifications","getNotificationTemplates","notificationTemplateTypes","getPushCommands","pushCommands","getBookings","bookings","DictionaryService","fetchData","data","ApiClient","get","extractor","Promise","all","Core","getStore","dispatch","error","console","dictionaryService"],"mappings":";;;;;;;;AAGA,CAAO,MAAMA,uBAAuB,CACpC;GAGCC,WAAW,CAACC,QAA4B,EACxC;KAAA;OAAA;OAAA;;KACC,4CAAI,0BAAaA,QAAQ;;GAG1BC,WAAW,GACX;KACC,OAAO,4CAAI,wBAAWC,QAAQ;;GAG/BC,gBAAgB,GAChB;KACC,OAAO,4CAAI,wBAAWC,aAAa;;GAGpCC,wBAAwB,GACxB;KACC,OAAO,4CAAI,wBAAWC,yBAAyB;;GAGhDC,eAAe,GACf;KACC,OAAO,4CAAI,wBAAWC,YAAY;;GAGnCC,WAAW,GACX;KACC,OAAO,4CAAI,wBAAWC,QAAQ;;CAEhC;;CChCA,MAAMC,iBAAiB,CACvB;GACC,MAAMC,SAAS,GACf;KACC,IACA;OACC,MAAMC,IAAI,GAAG,MAAM,IAAIC,+BAAS,EAAE,CAACC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC;OAC5D,MAAMC,SAAS,GAAG,IAAIlB,uBAAuB,CAACe,IAAI,CAAC;OAEnD,OAAOI,OAAO,CAACC,GAAG,CAAC,CAClBC,iBAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,wBAAwB,EAAEL,SAAS,CAACf,WAAW,EAAE,CAAC,EAC3EkB,iBAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,6BAA6B,EAAEL,SAAS,CAACb,gBAAgB,EAAE,CAAC,EACrFgB,iBAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,qCAAqC,EAAEL,SAAS,CAACX,wBAAwB,EAAE,CAAC,EACrGc,iBAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,4BAA4B,EAAEL,SAAS,CAACT,eAAe,EAAE,CAAC,EACnFY,iBAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,wBAAwB,EAAEL,SAAS,CAACP,WAAW,EAAE,CAAC,CAC3E,CAAC;MACF,CACD,OAAOa,KAAK,EACZ;OACCC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;;;CAG7D;AAEA,OAAaE,iBAAiB,GAAG,IAAIb,iBAAiB,EAAE;;;;;;;;"}