this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,o,s,i){"use strict";class t{async getDealData(e){return Promise.resolve()}async getDocData(e){return Promise.resolve()}async getMessageData(e){const t=await(new i.ApiClient).post("MessageStatus.get",{bookingId:e});await Promise.all([s.Core.getStore().dispatch(`${o.Model.MessageStatus}/upsert`,{bookingId:e,status:t})])}async sendMessage(e,o){return(new i.ApiClient).post("Message.send",{bookingId:e,notificationType:o})}async getVisitData(e){return Promise.resolve()}}const n=new t;e.bookingActionsService=n})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX.Booking.Const,BX.Booking,BX.Booking.Lib);
//# sourceMappingURL=booking-actions-service.bundle.map.js