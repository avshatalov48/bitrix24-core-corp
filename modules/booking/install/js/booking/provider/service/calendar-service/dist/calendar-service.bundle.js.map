{"version":3,"file":"calendar-service.bundle.js","sources":["../src/calendar-service.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'booking.core';\nimport { Model } from 'booking.const';\nimport { ApiClient } from 'booking.lib.api-client';\nimport { bookingFilter } from 'booking.lib.booking-filter';\nimport type { BookingListFilter, BookingUIFilter } from 'booking.lib.booking-filter';\n\nimport { CalendarGetBookingsDatesResponse } from './types';\n\nexport class CalendarService\n{\n\t#filterMarksRequests: { [key: string]: Promise<CalendarGetBookingsDatesResponse> } = {};\n\t#lastFilterMarksRequest: Promise<CalendarGetBookingsDatesResponse>;\n\t#freeMarksRequests: { [key: string]: Promise } = {};\n\t#lastFreeMarksRequest: Promise;\n\t#counterMarksRequests: { [key: string]: Promise } = {};\n\n\tclearCache(timestamp: number, resourceId: number): void\n\t{\n\t\tObject.keys(this.#filterMarksRequests).forEach((key) => {\n\t\t\tconst { dateTs, sortedResources } = JSON.parse(key);\n\t\t\tif (timestamp === dateTs)\n\t\t\t{\n\t\t\t\tdelete this.#filterMarksRequests[key];\n\t\t\t}\n\n\t\t\tfor (const ids of sortedResources)\n\t\t\t{\n\t\t\t\tif (ids.includes(resourceId))\n\t\t\t\t{\n\t\t\t\t\tdelete this.#filterMarksRequests[key];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tclearFilterCache(): void\n\t{\n\t\tthis.#filterMarksRequests = {};\n\t}\n\n\tasync loadMarks(dateTs: number, resources: number[][]): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (!Type.isArrayFilled(resources))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sortedResources = resources\n\t\t\t\t.map((ids: number[]) => {\n\t\t\t\t\treturn ids.sort((a, b) => a - b);\n\t\t\t\t})\n\t\t\t\t.sort((a, b) => a[0] - b[0])\n\t\t\t;\n\n\t\t\tconst key = JSON.stringify({ dateTs, sortedResources });\n\t\t\tthis.#freeMarksRequests[key] ??= this.#requestLoadMarks(dateTs, resources);\n\t\t\tthis.#lastFreeMarksRequest = this.#freeMarksRequests[key];\n\n\t\t\tconst freeMarks = await this.#freeMarksRequests[key];\n\n\t\t\tif (this.#freeMarksRequests[key] !== this.#lastFreeMarksRequest)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Core.getStore().dispatch(`${Model.Interface}/setFreeMarks`, freeMarks);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: loadMarks error', error);\n\t\t}\n\t}\n\n\tasync loadFilterMarks(fields: BookingUIFilter): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst filter = bookingFilter.prepareFilter(fields, true);\n\n\t\t\tconst key = JSON.stringify(filter);\n\t\t\tthis.#filterMarksRequests[key] ??= this.#requestFilterMarks(filter);\n\t\t\tthis.#lastFilterMarksRequest = this.#filterMarksRequests[key];\n\n\t\t\tconst { foundDates, foundDatesWithCounters } = await this.#filterMarksRequests[key];\n\n\t\t\tif (this.#filterMarksRequests[key] !== this.#lastFilterMarksRequest)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Promise.all([\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setFilteredMarks`, foundDates),\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setCounterMarks`, foundDatesWithCounters),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: loadFilterMarks error', error);\n\t\t}\n\t}\n\n\tasync loadCounterMarks(dateTs: number, force = false): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst key = dateTs.toString();\n\n\t\t\tif (force)\n\t\t\t{\n\t\t\t\tthis.#counterMarksRequests[key] = this.#requestCounterMarks(dateTs);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.#counterMarksRequests[key] ??= this.#requestCounterMarks(dateTs);\n\t\t\t}\n\n\t\t\tconst counterMarks = await this.#counterMarksRequests[key];\n\n\t\t\tawait Core.getStore().dispatch(`${Model.Interface}/setCounterMarks`, counterMarks);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('CalendarService: loadCounterMarks error', error);\n\t\t}\n\t}\n\n\tasync #requestLoadMarks(dateTs: number, resources: number[][]): Promise<string[]>\n\t{\n\t\tconst now = new Date();\n\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\t\tconst minTs = today.getTime() + this.#offset;\n\n\t\tconst dateFromTs = Math.max(minTs, dateTs) / 1000;\n\t\tconst dateToTs = new Date(dateTs).setMonth(new Date(dateTs).getMonth() + 1) / 1000;\n\n\t\tif (dateToTs < minTs / 1000)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { freeDates } = await new ApiClient().post('Calendar.getResourceOccupation', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tdateFromTs,\n\t\t\tdateToTs,\n\t\t\tresources,\n\t\t});\n\n\t\treturn freeDates;\n\t}\n\n\t#requestFilterMarks(filter: BookingListFilter): Promise<CalendarGetBookingsDatesResponse>\n\t{\n\t\treturn new ApiClient().post('Calendar.getBookingsDates', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tdateFromTs: filter.WITHIN.DATE_FROM,\n\t\t\tdateToTs: filter.WITHIN.DATE_TO,\n\t\t\tfilter,\n\t\t});\n\t}\n\n\tasync #requestCounterMarks(dateTs: number): Promise<string[]>\n\t{\n\t\tconst dateFromTs = dateTs / 1000;\n\t\tconst dateToTs = new Date(dateTs).setMonth(new Date(dateTs).getMonth() + 1) / 1000;\n\n\t\tconst { foundDatesWithCounters } = await new ApiClient().post('Calendar.getBookingsDates', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tdateFromTs,\n\t\t\tdateToTs,\n\t\t\tfilter: {\n\t\t\t\tHAS_COUNTERS_USER_ID: 1,\n\t\t\t},\n\t\t});\n\n\t\treturn foundDatesWithCounters;\n\t}\n\n\tget #offset(): string\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/offset`];\n\t}\n\n\tget #timezone(): string\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/timezone`];\n\t}\n}\n\nexport const calendarService = new CalendarService();\n"],"names":["CalendarService","clearCache","timestamp","resourceId","Object","keys","forEach","key","dateTs","sortedResources","JSON","parse","ids","includes","clearFilterCache","loadMarks","resources","Type","isArrayFilled","map","sort","a","b","stringify","freeMarks","Core","getStore","dispatch","Model","Interface","error","console","loadFilterMarks","fields","filter","bookingFilter","prepareFilter","foundDates","foundDatesWithCounters","Promise","all","loadCounterMarks","force","toString","counterMarks","now","Date","today","getFullYear","getMonth","getDate","minTs","getTime","dateFromTs","Math","max","dateToTs","setMonth","freeDates","ApiClient","post","timezone","WITHIN","DATE_FROM","DATE_TO","HAS_COUNTERS_USER_ID","getters","calendarService"],"mappings":"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"}