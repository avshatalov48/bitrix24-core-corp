this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,t,s,o,r,a,i,l,n){"use strict";var c=babelHelpers.classPrivateFieldLooseKey("response");var d=babelHelpers.classPrivateFieldLooseKey("extractClients");var g=babelHelpers.classPrivateFieldLooseKey("extractClientsFromBookings");class p{constructor(e){Object.defineProperty(this,g,{value:v});Object.defineProperty(this,d,{value:u});Object.defineProperty(this,c,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,c)[c]=e}getFavoriteIds(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].favorites.resources.map((e=>e.id))}getBookings(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].bookings.map((e=>a.BookingMappers.mapDtoToModel(e)))}getClientsProviderModuleId(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].clients.providerModuleId}getClients(){return[...babelHelpers.classPrivateFieldLooseBase(this,d)[d](r.CrmEntity.Contact),...babelHelpers.classPrivateFieldLooseBase(this,d)[d](r.CrmEntity.Company),...babelHelpers.classPrivateFieldLooseBase(this,g)[g]()]}getCounters(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].counters}getResources(){var e,t;const s=new Set;const o=((e=(t=babelHelpers.classPrivateFieldLooseBase(this,c)[c].favorites)==null?void 0:t.resources)!=null?e:[]).map((e=>{s.add(e.id);return l.ResourceMappers.mapDtoToModel(e)}));babelHelpers.classPrivateFieldLooseBase(this,c)[c].bookings.flatMap((({resources:e})=>e)).forEach((e=>{if(s.has(e.id)){return}s.add(e.id);o.push(l.ResourceMappers.mapDtoToModel(e))}));return o}getResourceTypes(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].resourceTypes.map((e=>n.ResourceTypeMappers.mapDtoToModel(e)))}getIntersectionMode(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].isIntersectionForAll}getIsCurrentSenderAvailable(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].isCurrentSenderAvailable}}function u(e){const t=babelHelpers.classPrivateFieldLooseBase(this,c)[c].clients.providerModuleId;if(!t){return[]}return Object.values(babelHelpers.classPrivateFieldLooseBase(this,c)[c].clients.recent[e]).map((s=>({...s,type:{module:t,code:e}})))}function v(){return babelHelpers.classPrivateFieldLooseBase(this,c)[c].bookings.flatMap((({clients:e})=>e.map((e=>i.ClientMappers.mapDtoToModel(e)))))}var b=babelHelpers.classPrivateFieldLooseKey("response");class h{constructor(e){Object.defineProperty(this,b,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,b)[b]=e}getCounters(){return babelHelpers.classPrivateFieldLooseBase(this,b)[b].counters}getTotalClients(){return babelHelpers.classPrivateFieldLooseBase(this,b)[b].clientStatistics.total}getTotalNewClientsToday(){return babelHelpers.classPrivateFieldLooseBase(this,b)[b].clientStatistics.totalToday}getMoneyStatistics(){return babelHelpers.classPrivateFieldLooseBase(this,b)[b].moneyStatistics}}var C=babelHelpers.classPrivateFieldLooseKey("dateCache");var B=babelHelpers.classPrivateFieldLooseKey("requestData");var M=babelHelpers.classPrivateFieldLooseKey("requestDataForBooking");class P{constructor(){Object.defineProperty(this,M,{value:S});Object.defineProperty(this,B,{value:y});Object.defineProperty(this,C,{writable:true,value:[]})}clearCache(e){babelHelpers.classPrivateFieldLooseBase(this,C)[C]=babelHelpers.classPrivateFieldLooseBase(this,C)[C].filter((t=>s.resourcesDateCache.isDateLoaded(t,e)))}async fetchData(e){if(babelHelpers.classPrivateFieldLooseBase(this,C)[C].includes(e)){return}babelHelpers.classPrivateFieldLooseBase(this,C)[C].push(e);await this.loadData(e)}async loadData(e){try{if(t.Core.getStore().getters[`${r.Model.Interface}/isEditingBookingMode`]){await babelHelpers.classPrivateFieldLooseBase(this,M)[M](e)}else{await babelHelpers.classPrivateFieldLooseBase(this,B)[B](e)}}catch(e){console.error("BookingMainPageGetRequest: error",e)}}async fetchCounters(){try{const e=await(new o.ApiClient).get("MainPage.getCounters");const s=new h(e);await Promise.all([t.Core.getStore().dispatch(`${r.Model.Interface}/setTotalClients`,s.getTotalClients()),t.Core.getStore().dispatch(`${r.Model.Interface}/setTotalNewClientsToday`,s.getTotalNewClientsToday()),t.Core.getStore().dispatch(`${r.Model.Interface}/setMoneyStatistics`,s.getMoneyStatistics()),t.Core.getStore().dispatch(`${r.Model.Counters}/set`,s.getCounters())])}catch(e){console.error("BookingMainPageGetCountersRequest: error",e)}}async activateDemo(){try{return await(new o.ApiClient).get("MainPage.activateDemo")}catch(e){console.error("BookingMainPageActivateDemoRequest: error",e)}return Promise.resolve(false)}}async function y(e){const a=await(new o.ApiClient).get("MainPage.get",{dateTs:e});const i=new p(a);s.resourcesDateCache.upsertIds(e,i.getResources().map((e=>e.id)));await Promise.all([t.Core.getStore().dispatch(`${r.Model.Favorites}/set`,i.getFavoriteIds()),t.Core.getStore().dispatch(`${r.Model.Interface}/setResourcesIds`,i.getFavoriteIds()),t.Core.getStore().dispatch(`${r.Model.Interface}/setIntersectionMode`,i.getIntersectionMode()),t.Core.getStore().dispatch(`${r.Model.Resources}/upsertMany`,i.getResources()),t.Core.getStore().dispatch(`${r.Model.ResourceTypes}/upsertMany`,i.getResourceTypes()),t.Core.getStore().dispatch(`${r.Model.Counters}/set`,i.getCounters()),t.Core.getStore().dispatch(`${r.Model.Bookings}/upsertMany`,i.getBookings()),t.Core.getStore().dispatch(`${r.Model.Clients}/upsertMany`,i.getClients()),t.Core.getStore().dispatch(`${r.Model.Clients}/setProviderModuleId`,i.getClientsProviderModuleId()),t.Core.getStore().dispatch(`${r.Model.Interface}/setIsCurrentSenderAvailable`,i.getIsCurrentSenderAvailable())])}async function S(e){const a=t.Core.getParams().editingBookingId;const i=Intl.DateTimeFormat().resolvedOptions().timeZone;const l=t.Core.getStore().getters[`${r.Model.Favorites}/get`];const n=await(new o.ApiClient).get("MainPage.getForBooking",{dateTs:e,bookingId:a,timezone:i,resourcesIds:l});const c=new p(n);const d=[t.Core.getStore().dispatch(`${r.Model.Interface}/setIntersectionMode`,c.getIntersectionMode()),t.Core.getStore().dispatch(`${r.Model.Resources}/upsertMany`,c.getResources()),t.Core.getStore().dispatch(`${r.Model.ResourceTypes}/upsertMany`,c.getResourceTypes()),t.Core.getStore().dispatch(`${r.Model.Counters}/set`,c.getCounters()),t.Core.getStore().dispatch(`${r.Model.Bookings}/upsertMany`,c.getBookings()),t.Core.getStore().dispatch(`${r.Model.Clients}/upsertMany`,c.getClients()),t.Core.getStore().dispatch(`${r.Model.Clients}/setProviderModuleId`,c.getClientsProviderModuleId()),t.Core.getStore().dispatch(`${r.Model.Interface}/setIsCurrentSenderAvailable`,c.getIsCurrentSenderAvailable())];const g=c.getBookings().find((e=>e.id===a));if(!g&&e===0){d.push(t.Core.getStore().dispatch(`${r.Model.Interface}/setEditingBookingId`,0))}let u=new Date(e*1e3);if(g&&e===0){const e=new Date(g.dateFromTs);u=new Date(e.getFullYear(),e.getMonth(),e.getDate());d.push(t.Core.getStore().dispatch(`${r.Model.Interface}/setSelectedDateTs`,u.getTime()));babelHelpers.classPrivateFieldLooseBase(this,C)[C].push(u.getTime()/1e3)}let v=l;if(g&&l.length===0){v=[g.resourcesIds[0]];d.push(t.Core.getStore().dispatch(`${r.Model.Favorites}/set`,[g.resourcesIds[0]]),t.Core.getStore().dispatch(`${r.Model.Interface}/setResourcesIds`,[g.resourcesIds[0]]))}s.resourcesDateCache.upsertIds(u.getTime()/1e3,v);await Promise.all(d)}const F=new P;e.mainPageService=F})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX.Booking,BX.Booking.Lib,BX.Booking.Lib,BX.Booking.Const,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service);
//# sourceMappingURL=main-page-service.bundle.map.js