<? namespace Bitrix\Main\Security\W;$GLOBALS['____537895913']= array(base64_decode('dGltZQ=='),base64_decode(''.'d'.'Glt'.'ZQ'.'=='),base64_decode('anNvbl9'.'kZWNvZGU='),base64_decode('YXJyYXlfbW'.'VyZ2U'.'='),base64_decode(''.'am'.'9pbg'.'=='),base64_decode('am'.'9'.'pb'.'g'.'=='),base64_decode('am'.'9'.'pbg='.'='),base64_decode('YXJyYXl'.'fcG9w'),base64_decode('Y'.'XJyYXlfc2h'.'pZnQ='),base64_decode('Y'.'XJyYXlf'.'c2hpZnQ='),base64_decode('YXJyYXlfc2'.'h'.'pZn'.'Q='),base64_decode('Y'.'X'.'JyYXlfc'.'2'.'hpZnQ='),base64_decode('YXJ'.'yY'.'X'.'lfbW'.'V'.'yZ2U='),base64_decode('aXNfY'.'X'.'J'.'yYXk='),base64_decode('YXJ'.'yYXlfbWVy'.'Z2'.'U='),base64_decode('a'.'W5fYX'.'JyYXk='),base64_decode('aW5fYXJ'.'yYXk='),base64_decode('aW5'.'f'.'YX'.'Jy'.'YXk'.'='),base64_decode('aW5fYXJyYXk='),base64_decode('aW5fYXJ'.'yYX'.'k='),base64_decode('d'.'Gl'.'t'.'ZQ=='),base64_decode('dGlt'.'ZQ=='),base64_decode(''.'Y'.'XJy'.'YXl'.'fbW'.'Fw'),base64_decode('Z2V0X2xvY'.'W'.'RlZ'.'F9l'.'eHRl'.'bnNpb25z'),base64_decode('a'.'nNvbl9lbmNvZGU='),base64_decode('an'.'N'.'vbl9'.'l'.'bmNvZGU='),base64_decode('cG'.'hwdmVyc2l'.'vbg=='),base64_decode('an'.'Nvbl9lbmNvZGU='),base64_decode(''.'am9pbg=='));if(!function_exists(__NAMESPACE__.'\\___1893157915')){function ___1893157915($_1350838484){static $_1710047664= false; if($_1710047664 == false) $_1710047664=array('V1dBTEx'.'fTE9DSw='.'=','c2VjdXJpdHk=','REF'.'UQQ==','eyI'.'=','V1'.'dB'.'TExfTE9DSw==','c2'.'VjdXJpdHk=',''.'U'.'0V'.'DVVJ'.'JVFlfV1dBTExfRVhDR'.'V'.'BUS'.'U9O','RkFJTF9DSEVDS0lORw==','Q2FuI'.'G5v'.'dCB'.'leGVjdXRlIHd3YWxsIH'.'J1bGVzOiA=','I'.'F'.'RyY'.'WN'.'lO'.'iA=','U'.'kVRV'.'UVT'.'VF9'.'V'.'Ukk=',''.'a2V5cw==','dmFsd'.'W'.'Vz','U'.'0VDV'.'V'.'JJVFlfV'.'1dB'.'TExfTU9'.'ES'.'U'.'ZZ','Lg==','U0'.'VDVVJ'.'J'.'VF'.'lfV'.'1dBT'.'ExfVU5TRVQ=','L'.'g==','U0VDVV'.'JJVF'.'lfV'.'1dBTE'.'xfRVhJV'.'A'.'==','Lg='.'=','Z2xvYmFs','a2V5cw'.'='.'=','dmFs'.'dWVz','Z2V0','Z2V0','cG9z'.'d'.'A'.'='.'=',''.'cG9z'.'dA==','Y'.'29va2'.'ll','Y29'.'va'.'2l'.'l',''.'cmVxdWVzdA==',''.'c'.'mVxd'.'WVzdA==','Z2xvYmF'.'s','Z2xvYmFs','bW'.'Fpbl9zZWM=','V'.'1dBTE'.'xfQU'.'NUVUFMSV'.'pF'.'X1'.'JVTEVT','dg'.'='.'=','dmVy'.'c2lvbg==','aQ='.'=',''.'aX'.'NJbnN'.'0Y'.'Wx'.'s'.'ZWQ=',''.'dg==','a'.'W5p','c29ja2V0'.'VGltZ'.'W'.'91dA==','c3RyZWF'.'tVGltZW91dA==','KCc=','Z'.'G'.'F0YQ==','JywgJw==','bW9kdWx'.'l','JywgJw==','bW9'.'k'.'dWxlX3ZlcnNpb24=','Jyk=','LC'.'A=','U0V'.'DVVJJ'.'V'.'FlfV1'.'dBT'.'ExfRVh'.'D'.'R'.'VBUSU'.'9O','bWFpbg==',''.'Rk'.'FJ'.'T'.'F9S'.'R'.'UZSR'.'VNI'.'S'.'U5H',''.'Q2FuIG5vdCByZ'.'WZyZXNoIHd3'.'YW'.'xsIHJ'.'1b'.'GVzOiA=','IFRyYW'.'N'.'lO'.'i'.'A=',''.'ZGF0YQ==','eyI'.'=','L'.'S'.'0tLS1CR'.'U'.'dJTiBQ'.'VUJMSUMgS0VZLS0tL'.'S0=','Ck1JSUJ'.'J'.'akFOQmdrc'.'WhraUc5'.'d'.'zBCQVFFRkF'.'BT0N'.'BUT'.'hBTUlJQk'.'NnS'.'0NBUUVBcTh'.'RRTBIam'.'1IS'.'lVTdFdWN'.'m4we'.'mEKUl'.'Z'.'vTHgwMk'.'t6Y'.'mZ'.'y'.'YlMvU'.'DZzV2F4'.'VHp3O'.'FNl'.'R1R0YlRDT3JwSG'.'k1UU'.'Y2T1J'.'5'.'alov'.'WHh6L'.'0t'.'MVTFHY'.'m'.'9'.'mOUNaMw'.'o0ej'.'dT'.'a3'.'FVd'.'DY2a'.'WJYdk9GQng0Zn'.'cv'.'QVBQUkd'.'EcXRtMG5EM2ZnR3N1M'.'1J'.'l'.'UGd3Mj'.'lpOC'.'t2bT'.'dtd'.'EJLSl'.'VZbDR'.'yC'.'lZw'.'YjZzZlpFV'.'DlLRW'.'I2VDFI'.'RFl'.'t'.'R'.'XZjMW'.'hxL2'.'l'.'pdXl4'.'THJaWmk1UTZV'.'ZmY0VUV2'.'VEkrNjhzc0Z'.'Sa1Er'.'b3dUUnkKZU9JTW'.'JGaE'.'0'.'v'.'VVRtZl'.'Z'.'ZYl'.'RSRnk'.'y'.'b1VROFdNemEybk'.'o1U2'.'F'.'oemkx'.'VUtPMWpBalhUUFJyemM'.'3QWp1Nj'.'M'.'5ajF'.'PMAp'.'wc'.'H'.'FmbTV4Z1dsRk'.'FKa'.'0hRVGdiZGQ1Q'.'VdxREZRa3Q5'.'SEtrWStUbmZCTEd'.'WTX'.'Z'.'We'.'VB'.'3VE'.'hOV'.'1FZ'.'QXc0eHBnL3dBClp3SURBU'.'UFCCi'.'0t'.'LS0tRU5EIFBVQ'.'k'.'xJQ'.'yBLRVktL'.'S'.'0tLQ'.'==');return base64_decode($_1710047664[$_1350838484]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1980548961= 'https://wwall.bitrix.info/rules.php'; protected $_1170877210= true; public function handle(){ try{  $_2057649177= RuleRecordTable::getList([ 'cache' =>['ttl' => 3600* 24* 7]])->fetchAll(); if(empty($_2057649177)){ return;}  $_1695759736= Cache::createInstance(); $_2107823523= false; if($_1695759736->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1468748173= $_1695759736->getVars(); if($GLOBALS['____537895913'][0]()- $_1468748173> round(0+10+10)){  $_690985043= Application::getConnection(); $_1541235720= RuleRecordTable::getTableName(); $_690985043->truncateTable($_1541235720); RuleRecordTable::cleanCache(); $_1695759736->clean(___1893157915(0), ___1893157915(1));}} elseif($_1695759736->startDataCache()){  $_1695759736->endDataCache($GLOBALS['____537895913'][1]()); $_2107823523= true;} foreach($_2057649177 as $_410575982){ $_2102655733= new PublicKeyCipher; $_1053005373= $_2102655733->decrypt($_410575982[___1893157915(2)], static::__341545154()); if(!str_starts_with($_1053005373, ___1893157915(3))){ continue;} $_1269444782= $GLOBALS['____537895913'][2]($_1053005373, true); if(!empty($_1269444782)){ $_1100448525= Rule::make($_1269444782); $_392991827= $this->handleRule($_1100448525); $this->applyHandlingResults($_392991827);}}  if($_2107823523){ $_1695759736->clean(___1893157915(4), ___1893157915(5));}} catch(\Throwable $_213327643){ $this->logEvent( ___1893157915(6), ___1893157915(7), ___1893157915(8). $_213327643->getMessage(). ___1893157915(9). $_213327643->getTraceAsString());}}  public function handleRule(Rule $_1100448525): array{ $_392991827=[]; if($_1100448525->matchPath($_SERVER[___1893157915(10)])){  $_2070047435= $this->getContextElements($_1100448525->getContext()); foreach($_2070047435 as $_1091469296 => &$_1761129796){ $_392991827= $GLOBALS['____537895913'][3]($_392991827, $this->recursiveContextKeyHandle($_1091469296, $_1761129796,[], $_1100448525));}} return $_392991827;}  public function applyHandlingResults(array $_392991827){ $_2070047435= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_392991827 as $_2095455036){ $_1761129796=& $_2070047435[$_2095455036->getContextName()]; $_832456855= $_2095455036->getRuleResult(); $_1100448525= $_2095455036->getRule(); if($_832456855 instanceof ModifyResult){ if($_1100448525->getProcess() === ___1893157915(11)){  static::rewriteContextKey( $_2095455036->getContextName(), $_1761129796, $_2095455036->getContextKey(), $_832456855->getCleanValue());} elseif($_1100448525->getProcess() === ___1893157915(12)){ static::rewriteContextValue( $_2095455036->getContextName(), $_1761129796, $_2095455036->getContextKey(), $_832456855->getCleanValue());} $this->logEvent( ___1893157915(13), $_2095455036->getContextName(), $GLOBALS['____537895913'][4](___1893157915(14), $_2095455036->getContextKey()));} elseif($_832456855 instanceof CheckResult &&!$_832456855->isSuccess()){ if($_832456855->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_2095455036->getContextName(), $_1761129796, $_2095455036->getContextKey(),); $this->logEvent( ___1893157915(15), $_2095455036->getContextName(), $GLOBALS['____537895913'][5](___1893157915(16), $_2095455036->getContextKey()));} elseif($_832456855->getAction() === RuleAction::EXIT){ $this->logEvent( ___1893157915(17), $_2095455036->getContextName(), $GLOBALS['____537895913'][6](___1893157915(18), $_2095455036->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1170877210= false;} protected function rewriteContextKey($_1091469296, &$_1761129796, $_2093817271, $_2099600481){ $_665694000= $_2093817271;  $GLOBALS['____537895913'][7]($_665694000); $_665694000[]= $_2099600481; if($_1091469296 === ___1893157915(19)){ $_1845186914= $GLOBALS['____537895913'][8]($_2093817271); $GLOBALS['____537895913'][9]($_665694000); if(empty($_2093817271)){ $GLOBALS[$_2099600481]= $GLOBALS[$_1845186914]; unset($GLOBALS[$_1845186914]);} else{ $_1761129796=& $GLOBALS[$_1845186914]; $_1584916363= ArrayHelper::getByNestedKey($_1761129796, $_2093817271);  ArrayHelper::setByNestedKey($_1761129796, $_665694000, $_1584916363);  ArrayHelper::unsetByNestedKey($_1761129796, $_2093817271);}} else{ $_1584916363= ArrayHelper::getByNestedKey($_1761129796, $_2093817271);  ArrayHelper::setByNestedKey($_1761129796, $_665694000, $_1584916363);  ArrayHelper::unsetByNestedKey($_1761129796, $_2093817271);}} protected function rewriteContextValue($_1091469296, &$_1761129796, $_430722137, $_1584916363){ if($_1091469296 === 'global'){ $_1845186914= $GLOBALS['____537895913'][10]($_430722137); if(empty($_430722137)){ $GLOBALS[$_1845186914]= $_1584916363;} else{ $_1761129796=& $GLOBALS[$_1845186914]; ArrayHelper::setByNestedKey($_1761129796, $_430722137, $_1584916363);}} else{  ArrayHelper::setByNestedKey($_1761129796, $_430722137, $_1584916363);}} protected function unsetContextValue($_1091469296, &$_1761129796, $_430722137){ if($_1091469296 === 'global'){ $_1845186914= $GLOBALS['____537895913'][11]($_430722137); if(empty($_430722137)){ unset($GLOBALS[$_1845186914]);} else{ $_1761129796=& $GLOBALS[$_1845186914]; ArrayHelper::unsetByNestedKey($_1761129796, $_430722137);}} else{ ArrayHelper::unsetByNestedKey($_1761129796, $_430722137);}}  protected function recursiveContextKeyHandle(string $_1091469296, array &$_1761129796, array $_2122564560, Rule $_1100448525): array{  $_392991827=[]; foreach($_1761129796 as $_1714752536 => $_1584916363){ $_430722137= $GLOBALS['____537895913'][12]($_2122564560,[$_1714752536]); if($_1100448525->matchKey($_430722137)){  if($_1100448525->getProcess() === ___1893157915(20)){ $_832456855= $_1100448525->evaluate($_1714752536);} elseif($_1100448525->getProcess() === ___1893157915(21)){ $_832456855= $_1100448525->evaluateValue($_1584916363);}  if(!empty($_832456855) && $_832456855 instanceof RuleResult){ $_392991827[]= new HandlingResult($_1091469296, $_430722137, $_832456855, $_1100448525);}}  if($GLOBALS['____537895913'][13]($_1584916363)){ $_392991827= $GLOBALS['____537895913'][14]($_392991827, $this->recursiveContextKeyHandle( $_1091469296, $_1761129796[$_1714752536], $_430722137, $_1100448525));}} return $_392991827;} protected function getContextElements(array $_155465558){ $_1205976662=[]; if($GLOBALS['____537895913'][15](___1893157915(22), $_155465558, true)){ $_1205976662[___1893157915(23)]= &$_GET;} if($GLOBALS['____537895913'][16](___1893157915(24), $_155465558, true)){ $_1205976662[___1893157915(25)]= &$_POST;} if($GLOBALS['____537895913'][17](___1893157915(26), $_155465558, true)){ $_1205976662[___1893157915(27)]= &$_COOKIE;} if($GLOBALS['____537895913'][18](___1893157915(28), $_155465558, true)){ $_1205976662[___1893157915(29)]= &$_REQUEST;} if($GLOBALS['____537895913'][19](___1893157915(30), $_155465558, true)){ $_1205976662[___1893157915(31)]= $GLOBALS;} return $_1205976662;} public static function refreshRules(){ try{ $_1278818540= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____537895913'][20]()- $_1278818540)< static::CACHE_RULES_TTL){ return;} Option::set(___1893157915(32), ___1893157915(33), $GLOBALS['____537895913'][21]()); $_2066713582= null;  $_766483079= $GLOBALS['____537895913'][22](function($_350506984){ return[___1893157915(34) => $_350506984[___1893157915(35)], ___1893157915(36) => (int) $_350506984[___1893157915(37)]];}, ModuleManager::getModulesFromDisk());  $_286961690=[]; foreach($GLOBALS['____537895913'][23]() as $_1105787371){ $_1455552159= new ReflectionExtension($_1105787371); $_286961690[$_1105787371]=[ ___1893157915(38) => $_1455552159->getVersion(), ___1893157915(39) => $_1455552159->getINIEntries()];}  $_773217503= new HttpClient([ ___1893157915(40) => round(0+2.5+2.5), ___1893157915(41) => round(0+2.5+2.5)]); $_1819507710= $_773217503->post( static::$_1980548961,[ 'modules' => $GLOBALS['____537895913'][24]($_766483079), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey(), 'php' => $GLOBALS['____537895913'][25]([ 'v' => $GLOBALS['____537895913'][26](), 'ext' => $_286961690]),]); if($_773217503->getStatus() == round(0+50+50+50+50) &&!empty($_1819507710)){ $_2066713582= Json::decode($_1819507710);}  if($_2066713582 !== null){ $_690985043= Application::getConnection(); $_1541235720= RuleRecordTable::getTableName(); if(!empty($_2066713582)){ foreach($_2066713582 as $_3794676){ if(!static::checkRuleSign($_3794676)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____537895913'][27]($_3794676));}}}  $_690985043->truncateTable($_1541235720);  if(!empty($_2066713582)){ $_1977540183=[]; foreach($_2066713582 as $_3794676){ $_1977540183[]= ___1893157915(42). $_690985043->getSqlHelper()->forSql($_3794676[___1893157915(43)]). ___1893157915(44). $_690985043->getSqlHelper()->forSql($_3794676[___1893157915(45)]). ___1893157915(46). $_690985043->getSqlHelper()->forSql($_3794676[___1893157915(47)]). ___1893157915(48);} $_1980191277= $GLOBALS['____537895913'][28](___1893157915(49), $_1977540183);  $_690985043->query("INSERT INTO {$_1541235720} (DATA, MODULE, MODULE_VERSION) VALUES {$_1980191277}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_213327643){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1893157915(50), ___1893157915(51), ___1893157915(52), ___1893157915(53). $_213327643->getMessage(). ___1893157915(54). $_213327643->getTraceAsString());}} protected static function checkRuleSign($_1100448525){ $_2102655733= new PublicKeyCipher; $_1269444782= $_2102655733->decrypt($_1100448525[___1893157915(55)], static::__341545154()); return str_starts_with($_1269444782, ___1893157915(56));} private static function __341545154(){ $_1720403362= ''; $_1720403362 .= ___1893157915(57); $_1720403362 .= ___1893157915(58); return $_1720403362;} protected function logEvent($_640208776, $_586523725, $_1476668262){ if($this->_1170877210){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_640208776, 'main', $_586523725, $_1476668262);}}}?>