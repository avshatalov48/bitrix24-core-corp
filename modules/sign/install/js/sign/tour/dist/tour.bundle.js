/* eslint-disable */
this.BX = this.BX || {};
this.BX.Sign = this.BX.Sign || {};
(function (exports,ui_tour,main_core,main_popup) {
	'use strict';

	class Backend {
	  saveVisit(tourId) {
	    return main_core.ajax.runAction('sign.api.tour.saveVisit', {
	      data: {
	        tourId
	      }
	    }).then(({
	      data
	    }) => data);
	  }
	  getLastVisitDate(tourId) {
	    return main_core.ajax.runAction('sign.api.tour.getLastVisitDate', {
	      data: {
	        tourId
	      }
	    }).then(({
	      data
	    }) => {
	      if (!main_core.Type.isNil(data == null ? void 0 : data.lastVisitDate)) {
	        data.lastVisitDate = new Date(data.lastVisitDate);
	      }
	      return data;
	    });
	  }
	  isAllToursDisabled() {
	    return main_core.ajax.runAction('sign.api.tour.isAllToursDisabled', {}).then(({
	      data
	    }) => data);
	  }
	}

	var _isAllTourDisabled = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("isAllTourDisabled");
	var _isIdAutoGenerated = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("isIdAutoGenerated");
	var _autogeneratedIdPrefix = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("autogeneratedIdPrefix");
	var _backend = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("backend");
	var _popupOptions = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("popupOptions");
	var _adjustPopupPosition = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("adjustPopupPosition");
	var _adjustPopupWithCenterAngle = /*#__PURE__*/babelHelpers.classPrivateFieldLooseKey("adjustPopupWithCenterAngle");
	class Guide extends ui_tour.Guide {
	  constructor(options) {
	    const {
	      popupOptions,
	      ...guideOptions
	    } = options;
	    super(guideOptions);
	    Object.defineProperty(this, _adjustPopupWithCenterAngle, {
	      value: _adjustPopupWithCenterAngle2
	    });
	    Object.defineProperty(this, _isIdAutoGenerated, {
	      writable: true,
	      value: void 0
	    });
	    Object.defineProperty(this, _autogeneratedIdPrefix, {
	      writable: true,
	      value: 'sign-tour-guide-'
	    });
	    Object.defineProperty(this, _backend, {
	      writable: true,
	      value: new Backend()
	    });
	    Object.defineProperty(this, _popupOptions, {
	      writable: true,
	      value: void 0
	    });
	    Object.defineProperty(this, _adjustPopupPosition, {
	      writable: true,
	      value: void 0
	    });
	    if (main_core.Type.isStringFilled(options.id)) {
	      this.setId(options.id);
	      babelHelpers.classPrivateFieldLooseBase(this, _isIdAutoGenerated)[_isIdAutoGenerated] = false;
	    } else {
	      this.setId(babelHelpers.classPrivateFieldLooseBase(this, _autogeneratedIdPrefix)[_autogeneratedIdPrefix] + main_core.Text.getRandom(14));
	      babelHelpers.classPrivateFieldLooseBase(this, _isIdAutoGenerated)[_isIdAutoGenerated] = true;
	    }
	    if (main_core.Type.isFunction(options.adjustPopupPosition)) {
	      babelHelpers.classPrivateFieldLooseBase(this, _adjustPopupPosition)[_adjustPopupPosition] = options.adjustPopupPosition;
	    }
	    if (main_core.Type.isUndefined(babelHelpers.classPrivateFieldLooseBase(Guide, _isAllTourDisabled)[_isAllTourDisabled])) {
	      babelHelpers.classPrivateFieldLooseBase(Guide, _isAllTourDisabled)[_isAllTourDisabled] = babelHelpers.classPrivateFieldLooseBase(this, _backend)[_backend].isAllToursDisabled();
	    }
	    if (popupOptions) {
	      this.setPopupOptions(popupOptions);
	    }
	  }
	  setPopupOptions(popupOptions) {
	    const {
	      autoHide,
	      width,
	      className
	    } = popupOptions;
	    const popup = this.getPopup();
	    if (width) {
	      popup.setWidth(width);
	    }
	    if (autoHide) {
	      popup.setAutoHide(autoHide);
	    }
	    if (className) {
	      main_core.Dom.addClass(popup.getPopupContainer(), className);
	    }
	    babelHelpers.classPrivateFieldLooseBase(this, _popupOptions)[_popupOptions] = popupOptions;
	  }
	  save() {
	    babelHelpers.classPrivateFieldLooseBase(this, _backend)[_backend].saveVisit(this.getId());
	  }
	  async start() {
	    var _babelHelpers$classPr;
	    const isDisabled = await babelHelpers.classPrivateFieldLooseBase(Guide, _isAllTourDisabled)[_isAllTourDisabled];
	    if (isDisabled) {
	      return;
	    }
	    super.start();
	    if (babelHelpers.classPrivateFieldLooseBase(this, _adjustPopupPosition)[_adjustPopupPosition]) {
	      babelHelpers.classPrivateFieldLooseBase(this, _adjustPopupPosition)[_adjustPopupPosition](this.getPopup());
	    } else if ((_babelHelpers$classPr = babelHelpers.classPrivateFieldLooseBase(this, _popupOptions)[_popupOptions]) != null && _babelHelpers$classPr.centerAngle) {
	      babelHelpers.classPrivateFieldLooseBase(this, _adjustPopupWithCenterAngle)[_adjustPopupWithCenterAngle]();
	    }
	  }
	  async startOnce() {
	    if (babelHelpers.classPrivateFieldLooseBase(this, _isIdAutoGenerated)[_isIdAutoGenerated]) {
	      throw new Error("Cant start guide once if id autogenerated. Set id in constructor");
	    }
	    if (!this.getAutoSave()) {
	      throw new Error("Cant start guide once if guide is not auto saved");
	    }
	    const [{
	      lastVisitDate
	    }, isTourDisabled] = await Promise.all([babelHelpers.classPrivateFieldLooseBase(this, _backend)[_backend].getLastVisitDate(this.getId()), babelHelpers.classPrivateFieldLooseBase(Guide, _isAllTourDisabled)[_isAllTourDisabled]]);
	    if (!isTourDisabled && main_core.Type.isNull(lastVisitDate)) {
	      this.start();
	    }
	  }
	}
	function _adjustPopupWithCenterAngle2() {
	  const popup = this.getPopup();
	  const {
	    angleArrowElement
	  } = popup;
	  const {
	    offsetWidth: popupWidth
	  } = popup.getPopupContainer();
	  const shiftX = popupWidth / 2 - angleArrowElement.offsetWidth / 2 - angleArrowElement.offsetLeft;
	  const offsetLeft = main_popup.Popup.getOption('angleLeftOffset') - shiftX;
	  popup.setOffset({
	    offsetLeft
	  });
	  popup.adjustPosition();
	  popup.setAngle({
	    offset: shiftX
	  });
	}
	Object.defineProperty(Guide, _isAllTourDisabled, {
	  writable: true,
	  value: void 0
	});

	exports.Guide = Guide;

}((this.BX.Sign.Tour = this.BX.Sign.Tour || {}),BX.UI.Tour,BX,BX.Main));
//# sourceMappingURL=tour.bundle.js.map
