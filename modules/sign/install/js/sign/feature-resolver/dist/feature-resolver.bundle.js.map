{"version":3,"file":"feature-resolver.bundle.js","sources":["../src/feature-resolver.js"],"sourcesContent":["import { Extension, Type } from 'main.core';\nimport type { SettingsCollection } from 'main.core.collections';\n\nexport class FeatureResolver\n{\n\tstatic #canInstance: boolean = false;\n\tstatic #instance: FeatureResolver;\n\t#featureCodes: Set<string>;\n\n\tconstructor(featureCodes: Array<string> = [])\n\t{\n\t\tif (!FeatureResolver.#canInstance)\n\t\t{\n\t\t\tthrow new Error('Use FeatureResolver.instance() method to get instance of FeatureResolver');\n\t\t}\n\n\t\tthis.#featureCodes = new Set(featureCodes);\n\t}\n\n\tstatic instance(): FeatureResolver\n\t{\n\t\tif (Type.isNil(FeatureResolver.#instance))\n\t\t{\n\t\t\tconst settings: SettingsCollection = Extension.getSettings('sign.feature-resolver');\n\t\t\tFeatureResolver.#canInstance = true;\n\t\t\tFeatureResolver.#instance = new FeatureResolver(settings.get('featureCodes', []));\n\t\t\tFeatureResolver.#canInstance = false;\n\t\t}\n\n\t\treturn FeatureResolver.#instance;\n\t}\n\n\treleased(code: string): boolean\n\t{\n\t\treturn this.#featureCodes.has(code);\n\t}\n}\n"],"names":["FeatureResolver","constructor","featureCodes","Error","Set","instance","Type","isNil","settings","Extension","getSettings","get","released","code","has"],"mappings":";;;;;CAA4C;CAAA;CAAA;AAG5C,CAAO,MAAMA,eAAe,CAC5B;GAKCC,WAAW,CAACC,YAA2B,GAAG,EAAE,EAC5C;KAAA;OAAA;OAAA;;KACC,IAAI,yCAACF,eAAe,6BAAa,EACjC;OACC,MAAM,IAAIG,KAAK,CAAC,0EAA0E,CAAC;;KAG5F,4CAAI,kCAAiB,IAAIC,GAAG,CAACF,YAAY,CAAC;;GAG3C,OAAOG,QAAQ,GACf;KACC,IAAIC,cAAI,CAACC,KAAK,yCAACP,eAAe,wBAAW,EACzC;OACC,MAAMQ,QAA4B,GAAGC,mBAAS,CAACC,WAAW,CAAC,uBAAuB,CAAC;OACnF,wCAAAV,eAAe,gCAAgB,IAAI;OACnC,wCAAAA,eAAe,0BAAa,IAAIA,eAAe,CAACQ,QAAQ,CAACG,GAAG,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;OACjF,wCAAAX,eAAe,gCAAgB,KAAK;;KAGrC,+CAAOA,eAAe;;GAGvBY,QAAQ,CAACC,IAAY,EACrB;KACC,OAAO,4CAAI,gCAAeC,GAAG,CAACD,IAAI,CAAC;;CAErC;CAAC,sBAjCYb,eAAe;GAAA;GAAA,OAEI;CAAK;CAAA,sBAFxBA,eAAe;GAAA;GAAA;CAAA;;;;;;;;"}