this.BX=this.BX||{};(function(e,s){"use strict";var a=babelHelpers.classPrivateFieldLooseKey("canInstance");var t=babelHelpers.classPrivateFieldLooseKey("instance");var r=babelHelpers.classPrivateFieldLooseKey("featureCodes");class l{constructor(e=[]){Object.defineProperty(this,r,{writable:true,value:void 0});if(!babelHelpers.classPrivateFieldLooseBase(l,a)[a]){throw new Error("Use FeatureResolver.instance() method to get instance of FeatureResolver")}babelHelpers.classPrivateFieldLooseBase(this,r)[r]=new Set(e)}static instance(){if(s.Type.isNil(babelHelpers.classPrivateFieldLooseBase(l,t)[t])){const e=s.Extension.getSettings("sign.feature-resolver");babelHelpers.classPrivateFieldLooseBase(l,a)[a]=true;babelHelpers.classPrivateFieldLooseBase(l,t)[t]=new l(e.get("featureCodes",[]));babelHelpers.classPrivateFieldLooseBase(l,a)[a]=false}return babelHelpers.classPrivateFieldLooseBase(l,t)[t]}released(e){return babelHelpers.classPrivateFieldLooseBase(this,r)[r].has(e)}}Object.defineProperty(l,a,{writable:true,value:false});Object.defineProperty(l,t,{writable:true,value:void 0});e.FeatureResolver=l})(this.BX.Sign=this.BX.Sign||{},BX);
//# sourceMappingURL=feature-resolver.bundle.map.js