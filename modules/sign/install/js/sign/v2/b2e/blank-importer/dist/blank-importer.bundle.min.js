this.BX=this.BX||{};this.BX.Sign=this.BX.Sign||{};this.BX.Sign.V2=this.BX.Sign.V2||{};(function(e,s,t,i,a){"use strict";var l=babelHelpers.classPrivateFieldLooseKey("uploader");var o=babelHelpers.classPrivateFieldLooseKey("api");var r=babelHelpers.classPrivateFieldLooseKey("subscribeOnEvents");var n=babelHelpers.classPrivateFieldLooseKey("importBlank");class c extends t.EventEmitter{constructor(e){super();Object.defineProperty(this,n,{value:b});Object.defineProperty(this,r,{value:p});Object.defineProperty(this,l,{writable:true,value:void 0});Object.defineProperty(this,o,{writable:true,value:void 0});this.setEventNamespace("BX.Sign.V2.B2e.BlankImporter");babelHelpers.classPrivateFieldLooseBase(this,o)[o]=new i.Api;babelHelpers.classPrivateFieldLooseBase(this,l)[l]=new a.Uploader({browseElement:e,autoUpload:false,multiple:false,acceptedFileTypes:".json"});babelHelpers.classPrivateFieldLooseBase(this,r)[r]()}}function p(){babelHelpers.classPrivateFieldLooseBase(this,l)[l].subscribe("File:onAdd",(e=>{const s=e.getData().file;const t=new FileReader;t.onload=e=>babelHelpers.classPrivateFieldLooseBase(this,n)[n](e.target.result);t.readAsText(s.getBinary())}))}async function b(e){try{await babelHelpers.classPrivateFieldLooseBase(this,o)[o].template.importBlank(e);window.top.BX.UI.Notification.Center.notify({content:s.Loc.getMessage("SIGN_BLANK_IMPORTER_SUCCESS")});this.emit("onSuccessImport")}catch(e){console.error(e);window.top.BX.UI.Notification.Center.notify({content:s.Loc.getMessage("SIGN_BLANK_IMPORTER_FAILURE")})}}e.BlankImporter=c})(this.BX.Sign.V2.B2e=this.BX.Sign.V2.B2e||{},BX,BX.Event,BX.Sign.V2,BX.UI.Uploader);
//# sourceMappingURL=blank-importer.bundle.map.js