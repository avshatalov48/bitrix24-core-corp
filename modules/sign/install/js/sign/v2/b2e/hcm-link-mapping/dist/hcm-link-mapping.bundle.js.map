{"version":3,"file":"hcm-link-mapping.bundle.js","sources":["../../document-send/src/item.js","../src/hcm-link-mapping.js"],"sourcesContent":["import { Tag, Type, Dom, Loc, Text as TextFormat } from 'main.core';\nimport { Loader } from 'main.loader';\nimport type { MemberRoleType } from 'sign.type';\nimport { Dialog } from 'ui.entity-selector';\nimport { Api } from 'sign.v2.api';\n\nexport type ItemData = {\n\tentityType: string,\n\tentityId: number,\n\trole?: MemberRoleType,\n};\n\ntype ItemViewData = {\n\theader: string,\n\tfooter: string,\n\tavatar: ?string,\n};\n\nexport const EntityTypes = Object.freeze({\n\tUser: 'user',\n\tCompany: 'company'\n});\n\nexport class Item\n{\n\t#api: Api;\n\t#ui = {\n\t\tcontainer: HTMLDivElement = null,\n\t\tavatar: HTMLDivElement = null,\n\t\ttitle: {\n\t\t\tcontainer: HTMLDivElement = null,\n\t\t\theader: HTMLDivElement = null,\n\t\t\tfooter: HTMLDivElement = null,\n\t\t}\n\t};\n\n\t#userDialog: ?Dialog = null;\n\t#loader: ?Loader = null;\n\n\t#data: ?ItemData = null;\n\t#viewData: ?ItemViewData = null;\n\n\tconstructor(data: ItemData)\n\t{\n\t\tthis.#api = new Api();\n\t\tthis.#data = data;\n\t\tthis.#ui.container = this.getLayout();\n\t\tif (Type.isStringFilled(data?.entityType) && Type.isInteger(data?.entityId))\n\t\t{\n\t\t\tthis.#load();\n\t\t}\n\t}\n\n\tsetItemData(data: ItemData): void\n\t{\n\t\tif (this.#data.entityId === data.entityId && this.#data.entityType === data.entityType)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#data = data;\n\t\tif (Type.isStringFilled(data?.entityType) && Type.isInteger(data?.entityId))\n\t\t{\n\t\t\tthis.#load();\n\t\t}\n\t}\n\n\tgetLayout(): HTMLDivElement\n\t{\n\t\tif (this.#ui.container)\n\t\t{\n\t\t\treturn this.#ui.container;\n\t\t}\n\n\t\tconst modifier = this.#data.entityType === EntityTypes.User ? ' --user' : '';\n\t\tthis.#ui.avatar = Tag.render`<div class=\"sign-b2e-send__party_item-info-avatar${modifier}\"></div>`;\n\t\tthis.#ui.title.header = Tag.render`<div class=\"sign-b2e-send__party_item-info-header\"></div>`;\n\t\tthis.#ui.title.footer = Tag.render`<div class=\"sign-b2e-send__party_item-info-footer\"></div>`;\n\t\tthis.#ui.title.container = Tag.render`\n\t\t\t<div class=\"sign-b2e-send__party_item-info-title\">\n\t\t\t\t${this.#ui.title.header}\n\t\t\t\t${this.#ui.title.footer}\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.#ui.container = Tag.render`\n\t\t\t<div class=\"sign-b2e-send__party_item-info\">\n\t\t\t\t${this.#ui.avatar}\n\t\t\t\t${this.#ui.title.container}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn this.#ui.container;\n\t}\n\n\t#loadCompany(): Promise\n\t{\n\t\treturn this.#api.loadB2eCompanyList()\n\t\t\t.then(data => {\n\t\t\t\tif (Type.isObject(data.companies) && Type.isArray(data.companies))\n\t\t\t\t{\n\t\t\t\t\tconst company = data.companies.filter(company => company.id === this.#data.entityId)[0] ?? null;\n\t\t\t\t\tif (company === null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst footer = Type.isBoolean(data?.showTaxId) && data?.showTaxId && company?.rqInn\n\t\t\t\t\t\t? Loc.getMessage('SIGN_DOCUMENT_SUMMARY_COMPANY_INN',\n\t\t\t\t\t\t\t{ '%innValue%' : TextFormat.encode(company?.rqInn) }\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: null\n\t\t\t\t\t;\n\n\t\t\t\t\tthis.#viewData = {\n\t\t\t\t\t\theader: company?.title,\n\t\t\t\t\t\tfooter: footer,\n\t\t\t\t\t\tavatar: null\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.#refreshView();\n\t\t\t\t}\n\n\t\t\t\tthis.#hideLoader();\n\t\t\t}).catch((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t;\n\t}\n\n\t#loadUser(): Promise\n\t{\n\t\t return new Promise((resolve) => {\n\t\t\tthis.#userDialog = new Dialog({\n\t\t\t\tentities: [\n\t\t\t\t\t{ id: EntityTypes.User }\n\t\t\t\t],\n\t\t\t\tevents: {\n\t\t\t\t\t'onLoad': (event) => {\n\t\t\t\t\t\tconst user = this.#userDialog.getSelectedItems()[0] ?? null;\n\t\t\t\t\t\tif (Type.isObject(user))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst lastName = user?.customData?.get('lastName') ?? '';\n\t\t\t\t\t\t\tthis.#viewData = {\n\t\t\t\t\t\t\t\theader: user?.customData?.get('name') + ' ' + lastName,\n\t\t\t\t\t\t\t\tfooter: user?.customData?.get('position') ?? '',\n\t\t\t\t\t\t\t\tavatar: user?.avatar ?? null,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.#refreshView();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.#hideLoader();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpreselectedItems: [[EntityTypes.User, this.#data.entityId]]\n\t\t\t});\n\n\t\t\tthis.#userDialog.load();\n\t\t});\n\t}\n\n\tasync #load(): Promise<void>\n\t{\n\t\tthis.#showLoader();\n\t\tif (this.#data.entityType === EntityTypes.Company)\n\t\t{\n\t\t\tawait this.#loadCompany();\n\t\t}\n\t\telse if (this.#data.entityType === EntityTypes.User)\n\t\t{\n\t\t\tawait this.#loadUser();\n\t\t}\n\t\tthis.#refreshView();\n\t\tthis.#hideLoader();\n\t}\n\n\t#refreshView(): void\n\t{\n\t\tif (this.#viewData?.avatar !== null)\n\t\t{\n\t\t\tthis.#ui.avatar.style.backgroundImage = `url(\"${this.#viewData.avatar}\")`;\n\t\t}\n\n\t\tthis.#ui.title.header.innerText = this.#viewData.header;\n\t\tthis.#ui.title.header.title = this.#viewData.header;\n\t\tthis.#ui.title.footer.innerText = this.#viewData.footer;\n\t\tthis.#ui.title.footer.title = this.#viewData.footer;\n\t}\n\n\t#getLoader(): Loader\n\t{\n\t\tif (this.#loader)\n\t\t{\n\t\t\treturn this.#loader;\n\t\t}\n\n\t\tthis.#loader = new BX.Loader({\n\t\t\ttarget: this.#ui.container,\n\t\t\tmode: 'inline',\n\t\t\tsize: 40\n\t\t});\n\n\t\treturn this.#loader;\n\t}\n\n\t#hideLoader(): void\n\t{\n\t\tthis.#ui.title.container.style.display = 'flex';\n\t\tthis.#ui.avatar.style.display = 'block';\n\t\tthis.#getLoader().hide();\n\t}\n\n\t#showLoader(): void\n\t{\n\t\tthis.#ui.avatar.style.display = 'none';\n\t\tthis.#ui.title.container.style.display = 'none';\n\t\tthis.#getLoader().show(this.#ui.container);\n\t}\n}\n","import { Dom, Event, Loc, Tag, Text, Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport { Mapper } from 'humanresources.hcmlink.data-mapper';\nimport type { Api } from 'signproxy.signing.api';\nimport type { HrmLinkOptions } from './type';\n\nimport './style.css';\nimport { Dialog } from 'ui.entity-selector';\nimport { EntityTypes } from '../../document-send/src/item';\n\nconst maxPreviewUserAvatarCount = 6;\nconst defaultAvatarLink = '/bitrix/js/socialnetwork/entity-selector/src/images/default-user.svg';\n\nexport class HcmLinkMapping extends EventEmitter\n{\n\t#api: Api;\n\n\t#documentUid: string | null = null;\n\t#integrationId: number | null = null;\n\t#employeeIds: Array<number> = [];\n\t#participantsIds: Array<number> = [];\n\n\t#container: HTMLElement | null = null;\n\t#usersPreviewContainer: HTMLElement | null = null;\n\n\t#enabled: boolean = false;\n\n\tconstructor(options: HrmLinkOptions)\n\t{\n\t\tsuper();\n\t\tthis.#api = options.api;\n\n\t\tthis.setEventNamespace('BX.Sign.V2.B2e.HcmLinkMapping');\n\n\t\tthis.#container = this.render();\n\t}\n\n\trender(): HTMLElement\n\t{\n\t\tif (this.#container)\n\t\t{\n\t\t\treturn this.#container;\n\t\t}\n\n\t\tconst { root, syncButton } = Tag.render`\n\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-container --orange\">\n\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-wrapper\">\n\t\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-wrapper-part --left\">\n\t\t\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-title\">\n\t\t\t\t\t\t\t${Loc.getMessage('SIGN_V2_B2E_HCM_LINK_MAPPING_TITLE')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-description\">\n\t\t\t\t\t\t\t${Loc.getMessage('SIGN_V2_B2E_HCM_LINK_MAPPING_TEXT')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-wrapper-part --right\">\n\t\t\t\t\t\t${this.#getUsersPreviewContainer()}\n\t\t\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker__action-button\" ref=\"syncButton\">\n\t\t\t\t\t\t\t${Loc.getMessage('SIGN_V2_B2E_HCM_LINK_MAPPING_SYNC_BUTTON')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tEvent.bind(syncButton, 'click', (): void => this.#openMapper());\n\n\t\tthis.#container = root;\n\t\tthis.hide();\n\n\t\treturn this.#container;\n\t}\n\n\tsetEnabled(value: boolean): void\n\t{\n\t\tthis.#enabled = value;\n\t}\n\n\tsetDocumentUid(uid: string): void\n\t{\n\t\tthis.#documentUid = uid;\n\t}\n\n\tasync check(): Promise<boolean>\n\t{\n\t\tif (!Type.isStringFilled(this.#documentUid))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { integrationId, userIds, allUserIds } = await this.#api.checkNotMappedMembersHrIntegration(this.#documentUid);\n\n\t\tthis.#participantsIds = allUserIds;\n\t\tthis.#employeeIds = userIds;\n\t\tthis.#integrationId = integrationId;\n\n\t\tif (this.#employeeIds.length > 0)\n\t\t{\n\t\t\tawait this.#updateUsersPreview();\n\t\t}\n\n\t\treturn !Type.isArrayFilled(this.#employeeIds);\n\t}\n\n\t#openMapper(): void\n\t{\n\t\tMapper.openSlider({\n\t\t\tcompanyId: this.#integrationId,\n\t\t\tuserIds: new Set(this.#participantsIds),\n\t\t\tmode: Mapper.MODE_DIRECT,\n\t\t}, {\n\t\t\tonCloseHandler: (): void => {\n\t\t\t\tthis.emit('update');\n\t\t\t},\n\t\t});\n\t}\n\n\thide(): void\n\t{\n\t\tDom.hide(this.#container);\n\t}\n\n\tshow(): void\n\t{\n\t\tDom.show(this.#container);\n\t}\n\n\t#loadUsersAvatarMap(userIds: Array<number>): Promise<Map<number, string>>\n\t{\n\t\treturn new Promise((resolve) => {\n\t\t\tconst dialog = new Dialog({\n\t\t\t\tentities: [\n\t\t\t\t\t{ id: EntityTypes.User }\n\t\t\t\t],\n\t\t\t\tevents: {\n\t\t\t\t\t'onLoad': (event) => {\n\t\t\t\t\t\tconst users = dialog.getSelectedItems();\n\t\t\t\t\t\tconst avatarByUserMap = new Map();\n\n\t\t\t\t\t\tusers.forEach((item) => {\n\t\t\t\t\t\t\tavatarByUserMap.set(Number(item.id), item.avatar);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tresolve(avatarByUserMap);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpreselectedItems: userIds.map((userId: number): [string, number] => ['user', userId])\n\t\t\t});\n\n\t\t\tdialog.load();\n\t\t});\n\t}\n\n\tasync #updateUsersPreview(): void\n\t{\n\t\tconst usersCount = this.#employeeIds.length;\n\t\tconst userIds = this.#employeeIds.slice(0, maxPreviewUserAvatarCount);\n\t\tconst usersAvatarMap =  await this.#loadUsersAvatarMap(userIds);\n\n\t\tDom.clean(this.#getUsersPreviewContainer());\n\n\t\tconst userAvatarContainer = Tag.render`\n\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-users-avatar-container\"></div>\n\t\t`;\n\n\t\tuserIds.forEach((userId: number): void => {\n\t\t\tconst avatarLink = usersAvatarMap.get(userId) ?? defaultAvatarLink;\n\n\t\t\tconst previewElement = Tag.render`\n\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-user-preview --orange\">\n\t\t\t\t\t<img src=\"${avatarLink}\">\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tDom.append(previewElement, userAvatarContainer);\n\t\t});\n\n\t\tDom.append(userAvatarContainer, this.#getUsersPreviewContainer());\n\n\t\tconst additionalUserCount = usersCount - maxPreviewUserAvatarCount;\n\t\tif (additionalUserCount > 0)\n\t\t{\n\t\t\tconst counterElement = Tag.render`\n\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-users-preview-counter\">\n\t\t\t\t\t${Loc.getMessage('SIGN_V2_B2E_HCM_LINK_EMPLOYEE_USERS_COUNT_PLUS', { '#COUNT#' : additionalUserCount })}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\tDom.append(counterElement, this.#getUsersPreviewContainer());\n\t\t}\n\t}\n\n\t#getUsersPreviewContainer(): HTMLElement\n\t{\n\t\tif (!this.#usersPreviewContainer)\n\t\t{\n\t\t\tthis.#usersPreviewContainer = Tag.render`\n\t\t\t\t<div class=\"sign-b2e-hcm-link-party-checker-users-preview-container\"></div>\n\t\t\t`;\n\t\t}\n\n\t\treturn this.#usersPreviewContainer;\n\t}\n}\n"],"names":["EntityTypes","Object","freeze","User","Company","maxPreviewUserAvatarCount","defaultAvatarLink","HcmLinkMapping","EventEmitter","constructor","options","api","setEventNamespace","render","root","syncButton","Tag","Loc","getMessage","Event","bind","hide","setEnabled","value","setDocumentUid","uid","check","Type","isStringFilled","integrationId","userIds","allUserIds","checkNotMappedMembersHrIntegration","length","isArrayFilled","Dom","show","Mapper","openSlider","companyId","Set","mode","MODE_DIRECT","onCloseHandler","emit","Promise","resolve","dialog","Dialog","entities","id","events","event","users","getSelectedItems","avatarByUserMap","Map","forEach","item","set","Number","avatar","preselectedItems","map","userId","load","usersCount","slice","usersAvatarMap","clean","userAvatarContainer","avatarLink","get","previewElement","append","additionalUserCount","counterElement"],"mappings":"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"}