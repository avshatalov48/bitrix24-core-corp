this.BX=this.BX||{};this.BX.Sign=this.BX.Sign||{};(function(e,s,t){"use strict";var r=babelHelpers.classPrivateFieldLooseKey("api");var i=babelHelpers.classPrivateFieldLooseKey("fireEvent");class a extends t.Event.EventEmitter{constructor(e={}){super();Object.defineProperty(this,i,{value:l});Object.defineProperty(this,r,{writable:true,value:void 0});this.setEventNamespace("bx:sign:v2:documentsend");babelHelpers.classPrivateFieldLooseBase(this,r)[r]=new s.Api}loadStatus(e){if(e.length>0){return babelHelpers.classPrivateFieldLooseBase(this,r)[r].memberLoadReadyForMessageStatus(e).then((e=>{var s;const t=(s=e==null?void 0:e.readyMembers)!=null?s:[];babelHelpers.classPrivateFieldLooseBase(this,i)[i](t);return t}))}babelHelpers.classPrivateFieldLooseBase(this,i)[i]([]);return Promise.resolve([])}send(e){if(e.length>0){return babelHelpers.classPrivateFieldLooseBase(this,r)[r].memberResendMessage(e)}return Promise.reject(new Error("empty members"))}}function l(e){this.emit("ready",new t.Event.BaseEvent({data:{readyMembers:e}}))}e.DocumentSend=a})(this.BX.Sign.V2=this.BX.Sign.V2||{},BX.Sign.V2,BX);
//# sourceMappingURL=document-send.bundle.map.js