(function(t,e,s,a,n,i,r,o,m,l,c){"use strict";var f=window.BX;var g=Object.freeze({default:"default",progress:"progress",image:"image",audio:"audio",video:"video",richLink:"richLink"});r.Vue.component("bx-messenger-message-body",{props:{userId:{default:0},dialogId:{default:"0"},chatId:{default:0},messageType:{default:l.MessageType.self},message:{type:Object,default:m.MessagesModel.create().getElementState},user:{type:Object,default:m.UsersModel.create().getElementState},dialog:{type:Object,default:m.DialoguesModel.create().getElementState},files:{type:Object,default:{}},enableReactions:{default:true},showName:{default:true},showAvatar:{default:true},referenceContentBodyClassName:{default:""},referenceContentNameClassName:{default:""}},created:function t(){this.dateFormatFunction=null;this.cacheFormatDate={}},methods:{clickByUserName:function t(e){this.$emit("clickByUserName",e)},clickByUploadCancel:function t(e){this.$emit("clickByUploadCancel",e)},clickByChatTeaser:function t(e){this.$emit("clickByChatTeaser",{message:e.message,event:e})},clickByKeyboardButton:function t(e){this.$emit("clickByKeyboardButton",babelHelpers.objectSpread({message:e.message},e.event))},setReaction:function t(e){this.$emit("setReaction",e)},openReactionList:function t(e){this.$emit("openReactionList",e)},formatDate:function t(e){var s=e.toJSON().slice(0,10);if(this.cacheFormatDate[s]){return this.cacheFormatDate[s]}var a=c.Utils.date.getFormatType(f.Messenger.Const.DateFormat.message,this.$root.$bitrixMessages);this.cacheFormatDate[s]=this._getDateFormat().format(a,e);return this.cacheFormatDate[s]},_getDateFormat:function t(){var e=this;if(this.dateFormatFunction){return this.dateFormatFunction}this.dateFormatFunction=Object.create(f.Main.Date);if(this.$root.$bitrixMessages){this.dateFormatFunction._getMessage=function(t){return e.$root.$bitrixMessages[t]}}return this.dateFormatFunction}},computed:babelHelpers.objectSpread({MessageType:function t(){return l.MessageType},ContentType:function t(){return g},contentType:function t(){if(this.filesData.length>0){var e=false;var s=false;var a=false;var n=false;var i=true;var r=false;var o=undefined;try{for(var m=this.filesData[Symbol.iterator](),l;!(i=(l=m.next()).done);i=true){var c=l.value;if(c.progress<0){n=true;break}else if(c.type==="audio"){if(s||e){e=false;s=false;break}a=true}else if(c.type==="image"&&c.image){if(s||a){a=false;s=false;break}e=true}else if(c.type==="video"){if(e||a){a=false;e=false;break}s=true}else{a=false;e=false;s=false;break}}}catch(t){r=true;o=t}finally{try{if(!i&&m.return!=null){m.return()}}finally{if(r){throw o}}}if(n){return g.progress}else if(e){return g.image}else if(a){return g.audio}else if(s){return g.video}}return g.default},localize:function t(){return r.Vue.getFilteredPhrases("IM_MESSENGER_MESSAGE_",this.$root.$bitrixMessages)},formattedDate:function t(){return this.formatDate(this.message.date)},messageText:function t(){if(this.isDeleted){return this.localize.IM_MESSENGER_MESSAGE_DELETED}return this.message.textConverted},messageAttach:function t(){return this.message.params.ATTACH},messageReactions:function t(){return this.message.params.REACTION||{}},isEdited:function t(){return this.message.params.IS_EDITED==="Y"},isDeleted:function t(){return this.message.params.IS_DELETED==="Y"},chatColor:function t(){return this.dialog.type!==l.DialogType.private?this.dialog.color:this.user.color},filesData:function t(){var e=this;var s=[];if(!this.message.params.FILE_ID||this.message.params.FILE_ID.length<=0){return s}this.message.params.FILE_ID.forEach(function(t){if(!t){return false}var a=e.$store.getters["files/get"](e.chatId,t,true);if(!a){e.$store.commit("files/set",{data:[e.$store.getters["files/getBlank"]({id:t,chatId:e.chatId})]});a=e.$store.getters["files/get"](e.chatId,t,true)}if(a){s.push(a)}});return s},keyboardButtons:function t(){var e=false;if(!this.message.params.KEYBOARD||this.message.params.KEYBOARD==="N"){return e}return this.message.params.KEYBOARD},chatTeaser:function t(){if(typeof this.message.params.CHAT_ID==="undefined"||typeof this.message.params.CHAT_LAST_DATE==="undefined"||typeof this.message.params.CHAT_MESSAGE==="undefined"){return false}return{messageCounter:this.message.params.CHAT_MESSAGE,messageLastDate:this.message.params.CHAT_LAST_DATE,languageId:this.application.common.languageId}},userName:function t(){if(this.message.params.NAME){return this.message.params.NAME}if(!this.showAvatar){return this.user.name}else{return this.user.firstName?this.user.firstName:this.user.name}}},o.Vuex.mapState({application:function t(e){return e.application}})),template:'\n\t\t<div class="bx-im-message-content-wrap">\n\t\t\t<template v-if="contentType == ContentType.default || contentType == ContentType.audio || contentType == ContentType.progress">\n\t\t\t\t<div class="bx-im-message-content">\n\t\t\t\t\t<span class="bx-im-message-content-box">\n\t\t\t\t\t\t<template v-if="showName && messageType == MessageType.opponent">\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-name\', referenceContentNameClassName]" :style="{color: user.color}" @click="clickByUserName({user: user, event: $event})">{{userName}}</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body\', referenceContentBodyClassName]">\n\t\t\t\t\t\t\t<template v-if="contentType == ContentType.audio">\n\t\t\t\t\t\t\t\t<bx-messenger-element-file-audio v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId" @uploadCancel="clickByUploadCancel"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t\t\t<bx-messenger-element-file v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId" @uploadCancel="clickByUploadCancel"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body-wrap\', {\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-with-text\': messageText.length > 0,\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-without-text\': messageText.length <= 0,\n\t\t\t\t\t\t\t}]">\n\t\t\t\t\t\t\t\t<template v-if="messageText">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-text" v-html="messageText"></span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<template v-for="(config, id) in messageAttach">\n\t\t\t\t\t\t\t\t\t<bx-messenger-element-attach :baseColor="chatColor" :config="config" :key="id"/>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<span class="bx-im-message-content-params">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-date">{{formattedDate}}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="!message.push && enableReactions && message.authorId" class="bx-im-message-content-reaction">\n\t\t\t\t\t\t<bx-reaction :values="messageReactions" :userId="userId" :openList="false" @set="setReaction({message: message, reaction: $event})" @list="openReactionList({message: message, values: $event.values})"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-else-if="contentType == ContentType.richLink">\n\t\t\t\t\x3c!-- richLink type markup --\x3e\n\t\t\t</template>\n\t\t\t<template v-else-if="contentType == ContentType.image || contentType == ContentType.video">\n\t\t\t\t<div class="bx-im-message-content bx-im-message-content-fit">\n\t\t\t\t\t<span class="bx-im-message-content-box">\n\t\t\t\t\t\t<template v-if="showName && messageType == MessageType.opponent">\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-name\', referenceContentNameClassName]" :style="{color: user.color}" @click="clickByUserName({user: user, event: $event})">{{!showAvatar? user.name: (user.firstName? user.firstName: user.name)}}</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body\', referenceContentBodyClassName]">\n\t\t\t\t\t\t\t<template v-if="contentType == ContentType.image">\n\t\t\t\t\t\t\t\t<bx-messenger-element-file-image v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId" @uploadCancel="clickByUploadCancel"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-else-if="contentType == ContentType.video">\n\t\t\t\t\t\t\t\t<bx-messenger-element-file-video v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId" @uploadCancel="clickByUploadCancel"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body-wrap\', {\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-with-text\': messageText.length > 0,\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-without-text\': messageText.length <= 0,\n\t\t\t\t\t\t\t}]">\n\t\t\t\t\t\t\t\t<template v-if="messageText">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-text" v-html="messageText"></span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<span class="bx-im-message-content-params">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-date">{{formattedDate}}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="!message.push && enableReactions && message.authorId" class="bx-im-message-content-reaction">\n\t\t\t\t\t\t<bx-reaction :values="messageReactions" :userId="userId" :openList="false" @set="setReaction({message: message, reaction: $event})" @list="openReactionList({message: message, values: $event.values})"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if="keyboardButtons">\n\t\t\t\t<bx-messenger-element-keyboard :buttons="keyboardButtons" :messageId="message.id" :userId="userId" :dialogId="dialogId" @click="clickByKeyboardButton({message: message, event: $event})"/>\n\t\t\t</template>\n\t\t\t<template v-if="chatTeaser">\n\t\t\t\t<bx-messenger-element-chat-teaser :messageCounter="chatTeaser.messageCounter" :messageLastDate="chatTeaser.messageLastDate" :languageId="chatTeaser.languageId" @click="clickByChatTeaser({message: message, event: $event})"/>\n\t\t\t</template>\n\t\t</div>\n\t'})})(this.window=this.window||{},window,window,window,window,window,BX,BX,BX.Messenger.Model,BX.Messenger.Const,BX.Messenger);
//# sourceMappingURL=body.bundle.map.js