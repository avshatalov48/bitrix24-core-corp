(function(){BX.namespace("BX.Call");BX.Call.AbstractCall=function(t){var e=this;this.id=t.id;this.instanceId=t.instanceId;this.parentId=t.parentId||null;this.direction=t.direction;this.type=BX.prop.getInteger(t,"type",BX.Call.Type.Instant);this.state=BX.prop.getString(t,"state",BX.Call.State.Idle);this.ready=false;this.userId=BX.Call.Engine.getInstance().getCurrentUserId();this.initiatorId=t.initiatorId||"";this.users=BX.type.isArray(t.users)?t.users.filter(function(t){return t!=e.userId}):[];this.associatedEntity=BX.type.isPlainObject(t.associatedEntity)?t.associatedEntity:{};this.startDate=new Date(BX.prop.getString(t,"startDate",""));this.videoEnabled=t.videoEnabled===true;this.videoHd=t.videoHd===true;this.cameraId=t.cameraId||"";this.microphoneId=t.microphoneId||"";this.muted=t.muted===true;this.wasConnected=false;this.logToken=t.logToken||"";if(BX.CallEngine.getLogService()&&this.logToken){this.logger=new BX.Call.Logger(BX.CallEngine.getLogService(),this.logToken)}this.localStreams={main:null,screen:null};this.eventListeners={};if(BX.type.isPlainObject(t.events)){this.initEventListeners(t.events)}Object.defineProperty(this,"provider",{get:function(){if(this instanceof BX.Call.PlainCall){return BX.Call.Provider.Plain}else if(this instanceof BX.Call.VoximplantCall){return BX.Call.Provider.Voximplant}else{return""}}});this._microphoneLevel=0;Object.defineProperty(this,"microphoneLevel",{get:function(){return this._microphoneLevel},set:function(t){if(t!=this._microphoneLevel){this._microphoneLevel=t;this.runCallback(BX.Call.Event.onMicrophoneLevel,{level:t})}}})};BX.Call.AbstractCall.prototype.initEventListeners=function(t){for(var e in t){this.addEventListener(e,t[e])}};BX.Call.AbstractCall.prototype.addEventListener=function(t,e){if(!BX.type.isArray(this.eventListeners[t])){this.eventListeners[t]=[]}if(BX.type.isFunction(e)){this.eventListeners[t].push(e)}};BX.Call.AbstractCall.prototype.removeEventListener=function(t,e){if(BX.type.isArray(this.eventListeners[t])&&this.eventListeners[t].indexOf(e)>=0){var i=this.eventListeners[t].indexOf(e);if(i>=0){this.eventListeners[t].splice(i,1)}}};BX.Call.AbstractCall.prototype.runCallback=function(t,e){if(BX.type.isArray(this.eventListeners[t])&&this.eventListeners[t].length>0){if(t===null||typeof e!=="object"){e={}}e.call=this;for(var i=0;i<this.eventListeners[t].length;i++){try{this.eventListeners[t][i].call(this,e)}catch(e){console.error(t+" callback error: ",e);this.log(t+" callback error: ",e)}}}};BX.Call.AbstractCall.prototype.getLocalStream=function(t){return this.localStreams[t]};BX.Call.AbstractCall.prototype.setLocalStream=function(t,e){e=e||"main";this.localStreams[e]=t};BX.Call.AbstractCall.prototype.isVideoEnabled=function(){return this.videoEnabled};BX.Call.AbstractCall.prototype.isAnyoneParticipating=function(){throw new Error("isAnyoneParticipating should be implemented")};BX.Call.AbstractCall.prototype.__onPullEvent=function(t,e){throw new Error("__onPullEvent should be implemented")};BX.Call.AbstractCall.prototype.inviteUsers=function(){throw new Error("inviteUsers is not implemented")};BX.Call.AbstractCall.prototype.cancel=function(){throw new Error("cancel is not implemented")};BX.Call.AbstractCall.prototype.answer=function(){throw new Error("answer is not implemented")};BX.Call.AbstractCall.prototype.decline=function(t,e){throw new Error("decline is not implemented")};BX.Call.AbstractCall.prototype.hangup=function(){throw new Error("hangup is not implemented")};BX.Call.AbstractCall.prototype.log=function(){var t=BX.Call.Util.getLogMessage.apply(BX.Call.Util,arguments);if(BX.desktop&&BX.desktop.ready()){BX.desktop.log(BX.message("USER_ID")+".video.log",t.substr(3))}if(BX.CallEngine.debugFlag&&console){var e=["Call log ["+BX.Call.Util.getTimeForLog()+"]: "];console.log.apply(this,e.concat(Array.prototype.slice.call(arguments)))}if(this.logger){this.logger.log(t)}if(BX.MessengerDebug){BX.MessengerDebug.addLog(this.id,t)}};BX.Call.AbstractCall.prototype.destroy=function(){if(this.logger){this.logger.destroy();this.logger=null}this.state=BX.Call.State.Finished;this.runCallback(BX.Call.Event.onDestroy)}})();
//# sourceMappingURL=abstract_call.map.js