this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,n,s,o,a,i,r,g,c,l,u,m,C,v,d){"use strict";const h={name:"MessengerRoot",components:{MessengerNavigation:n.MessengerNavigation,RecentListContainer:s.RecentListContainer,OpenlineListContainer:o.OpenlineListContainer,ChatContent:a.ChatContent,CreateChatContent:i.CreateChatContent,OpenlineContent:r.OpenlineContent,NotificationContent:g.NotificationContent,MarketContent:c.MarketContent},data(){return{contextMessageId:0}},computed:{layout(){return this.$store.getters["application/getLayout"]},currentLayout(){return m.Layout[this.layout.name]},entityId(){return this.layout.entityId},currentDialog(){return this.$store.getters["dialogues/get"](this.entityId,true)},isChat(){return this.layout.name===m.Layout.chat.name},isNotification(){return this.layout.name===m.Layout.notification.name},containerClasses(){return{"--dark-theme":v.ThemeManager.isDarkTheme(),"--light-theme":v.ThemeManager.isLightTheme(),"--desktop":d.DesktopManager.isDesktop()}},callContainerClass(){return[C.CallManager.viewContainerClass]}},created(){u.InitManager.start();l.Logger.warn("MessengerRoot created")},mounted(){e.EventEmitter.subscribe(m.EventType.dialog.goToMessageContext,this.onGoToMessageContext)},beforeUnmount(){e.EventEmitter.unsubscribe(m.EventType.dialog.goToMessageContext,this.onGoToMessageContext)},methods:{onNavigationClick({layoutName:t,layoutEntityId:e}){let n="";const s=t===m.Layout.chat.name;const o=t===m.Layout.market.name;if(s){n=this.previouslySelectedChat}else if(o){n=e}this.$store.dispatch("application/setLayout",{layoutName:t,entityId:n})},onEntitySelect({layoutName:t,entityId:e}){this.saveLastOpenedChat(e);this.$store.dispatch("application/setLayout",{layoutName:t,entityId:e})},onGoToMessageContext(t){const{dialogId:e,messageId:n}=t.getData();if(this.currentDialog.dialogId===e){return}this.$store.dispatch("application/setLayout",{layoutName:m.Layout.chat.name,entityId:e,contextId:n})},saveLastOpenedChat(t){this.previouslySelectedChat=t||""}},template:`\n\t\t<div class="bx-im-messenger__scope bx-im-messenger__container" :class="containerClasses">\n\t\t\t<div class="bx-im-messenger__navigation_container">\n\t\t\t\t<MessengerNavigation :currentLayoutName="currentLayout.name" @navigationClick="onNavigationClick" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-messenger__layout_container">\n\t\t\t\t<div class="bx-im-messenger__layout_content">\n\t\t\t\t\t<div v-if="currentLayout.list" class="bx-im-messenger__list_container">\n\t\t\t\t\t\t<KeepAlive>\n\t\t\t\t\t\t\t<component :is="currentLayout.list" @selectEntity="onEntitySelect" />\n\t\t\t\t\t\t</KeepAlive>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-messenger__content_container">\n\t\t\t\t\t\t<component :is="currentLayout.content" :entityId="entityId" :contextMessageId="contextMessageId" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div :class="callContainerClass"></div>\n\t`};t.Messenger=h})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX.Event,BX.Messenger.v2.Component,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=messenger.bundle.map.js