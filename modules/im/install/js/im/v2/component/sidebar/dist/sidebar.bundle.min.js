this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,i,s,n,a,r,o,l,d,c,u,h,m,g,p,b,v,I,f,_,x,S,M,k,C,B,D,y,T){"use strict";const w="Not implemented";class E{constructor(t,e){this.store=null;this.dialogId="";this.chatId=0;this.userManager=null;this.store=I.Core.getStore();this.restClient=I.Core.getRestClient();this.chatId=t;this.dialogId=e;this.userManager=new i.UserManager}loadFirstPage(){throw new Error(w)}loadNextPage(){throw new Error(w)}getInitialRequest(){throw new Error(w)}getResponseHandler(){throw new Error(w)}getCurrentUserId(){return I.Core.getUserId()}getLastElementId(t){var e;const i=(e=t[t.length-1])==null?void 0:e.id;if(T.Type.isNumber(i)){return i}return null}}const L=50;class A extends E{constructor(...t){super(...t);this.hasMoreItemsToLoad=true;this.lastId=0}getInitialRequest(){return{[B.RestMethod.imChatFileCollectionGet]:[B.RestMethod.imChatFileCollectionGet,{chat_id:this.chatId,limit:L}]}}getResponseHandler(){return t=>{if(!t){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.extractLoadFileError(t);if(e){return Promise.reject(new Error(e))}const i=t[B.RestMethod.imChatFileCollectionGet].data();return this.updateModels(i)}}extractLoadFileError(t){const e=t[B.RestMethod.imChatFileCollectionGet];if(e!=null&&e.error()){return`Sidebar service error: ${B.RestMethod.imChatFileCollectionGet}: ${e==null?void 0:e.error()}`}return null}handleResponse(t){const e=t.data();if(e.list.length<L){this.hasMoreItemsToLoad=false}this.lastId=this.getLastElementId(e.list);return this.updateModels(e)}updateModels(t){const{list:e,users:i,files:s}=t;const n=this.userManager.setUsersToModel(i);const a=this.store.dispatch("files/set",s);const r=this.store.dispatch("sidebar/files/set",{chatId:this.chatId,files:e});return Promise.all([a,r,n])}loadFirstPageBySubType(t){const e=this.getFilesCountFromModel(t);if(e>L){return Promise.resolve()}const i=this.getQueryParams(t);return this.requestPage(i)}loadNextPageBySubType(t){const e=this.getQueryParams(t);return this.requestPage(e)}getQueryParams(t){const e={CHAT_ID:this.chatId,SUBTYPE:t,LIMIT:L};if(this.lastId>0){e["LAST_ID"]=this.lastId}return e}requestPage(t){return this.restClient.callMethod(B.RestMethod.imChatFileGet,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarInfo: imChatFileGet: page request error",t)}))}getFilesCountFromModel(t){return this.store.getters["sidebar/files/getSize"](this.chatId,t)}}class P extends A{loadFirstPage(){return this.loadFirstPageBySubType(B.SidebarFileTabTypes.media)}loadNextPage(){return this.loadNextPageBySubType(B.SidebarFileTabTypes.media)}}class F extends A{loadFirstPage(){return this.loadFirstPageBySubType(B.SidebarFileTabTypes.audio)}loadNextPage(){return this.loadNextPageBySubType(B.SidebarFileTabTypes.audio)}}class R extends A{loadFirstPage(){return this.loadFirstPageBySubType(B.SidebarFileTabTypes.document)}loadNextPage(){return this.loadNextPageBySubType(B.SidebarFileTabTypes.document)}}class $ extends A{loadFirstPage(){return this.loadFirstPageBySubType(B.SidebarFileTabTypes.other)}loadNextPage(){return this.loadNextPageBySubType(B.SidebarFileTabTypes.other)}}const U=50;class N extends E{constructor(...t){super(...t);this.hasMoreItemsToLoad=true;this.lastId=0}getInitialRequest(){return{[B.RestMethod.imChatFavoriteCounterGet]:[B.RestMethod.imChatFavoriteCounterGet,{chat_id:this.chatId}],[B.RestMethod.imChatFavoriteGet]:[B.RestMethod.imChatFavoriteGet,{chat_id:this.chatId,limit:U}]}}getResponseHandler(){return t=>{if(!t){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.extractLoadCountersError(t);if(e){return Promise.reject(new Error(e))}const i=t[B.RestMethod.imChatFavoriteCounterGet].data();const s=this.store.dispatch("sidebar/favorites/setCounter",{chatId:this.chatId,counter:i.counter});const n=this.handleResponse(t[B.RestMethod.imChatFavoriteGet]);return Promise.all([s,n])}}extractLoadCountersError(t){const e=t[B.RestMethod.imChatFavoriteCounterGet];if(e!=null&&e.error()){return`SidebarInfo service error: ${B.RestMethod.imChatFavoriteCounterGet}: ${e==null?void 0:e.error()}`}const i=t[B.RestMethod.imChatFavoriteGet];if(i!=null&&i.error()){return`SidebarInfo service error: ${B.RestMethod.imChatFavoriteGet}: ${i==null?void 0:i.error()}`}return null}loadFirstPage(){const t=this.getFavoritesCountFromModel();if(t>U){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:U};if(this.lastId>0){t.LAST_ID=this.lastId}return t}requestPage(t){return this.restClient.callMethod(B.RestMethod.imChatFavoriteGet,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarInfo: Im.imChatFavoriteGet: page request error",t)}))}handleResponse(t){const e=t.data();if(e.list.length<U){this.hasMoreItemsToLoad=false}const i=this.getLastElementId(e.list);if(i){this.lastId=i}return this.updateModels(e)}updateModels(t){const{list:e=[],users:i=[],files:s=[]}=t;const n=this.userManager.setUsersToModel(i);const a=e.map((t=>t.message));const r=this.store.dispatch("files/set",s);const o=this.store.dispatch("messages/store",a);const l=this.store.dispatch("sidebar/favorites/set",{chatId:this.chatId,favorites:e});return Promise.all([r,o,l,n])}getFavoritesCountFromModel(){return this.store.getters["sidebar/favorites/getSize"](this.chatId)}}const O=50;class G extends E{constructor(...t){super(...t);this.hasMoreItemsToLoad=true}getInitialRequest(){return{[B.RestMethod.imChatUrlCounterGet]:[B.RestMethod.imChatUrlCounterGet,{chat_id:this.chatId}],[B.RestMethod.imChatUrlGet]:[B.RestMethod.imChatUrlGet,{chat_id:this.chatId,limit:O}]}}getResponseHandler(){return t=>{if(!t){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.extractLoadCountersError(t);if(e){return Promise.reject(new Error(e))}const i=t[B.RestMethod.imChatUrlCounterGet].data();const s=this.store.dispatch("sidebar/links/setCounter",{chatId:this.chatId,counter:i.counter});const n=this.handleResponse(t[B.RestMethod.imChatUrlGet]);return Promise.all([s,n])}}extractLoadCountersError(t){const e=t[B.RestMethod.imChatUrlCounterGet];if(e!=null&&e.error()){return`SidebarInfo service error: ${B.RestMethod.imChatUrlCounterGet}: ${e==null?void 0:e.error()}`}const i=t[B.RestMethod.imChatUrlGet];if(i!=null&&i.error()){return`SidebarInfo service error: ${B.RestMethod.imChatUrlGet}: ${i==null?void 0:i.error()}`}return null}loadFirstPage(){const t=this.getLinksCountFromModel();if(t>O){return Promise.resolve()}const e=this.getQueryParams(t);return this.requestPage(e)}loadNextPage(){const t=this.getLinksCountFromModel();const e=this.getQueryParams(t);return this.requestPage(e)}getQueryParams(t=0){const e={CHAT_ID:this.chatId,LIMIT:O};if(T.Type.isNumber(t)&&t>0){e.OFFSET=t}return e}requestPage(t){return this.restClient.callMethod(B.RestMethod.imChatUrlGet,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarInfo: Im.chatUrlList: page request error",t)}))}handleResponse(t){const e=t.data();if(e.list.length<O){this.hasMoreItemsToLoad=false}return this.updateModels(e)}updateModels(t){const{list:e,users:i}=t;const s=this.userManager.setUsersToModel(i);const n=this.store.dispatch("sidebar/links/set",{chatId:this.chatId,links:e});return Promise.all([n,s])}getLinksCountFromModel(){return this.store.getters["sidebar/links/getSize"](this.chatId)}}const q=50;class z extends E{constructor(...t){super(...t);this.hasMoreItemsToLoad=true;this.lastId=0}getInitialRequest(){return{[B.RestMethod.imChatTaskGet]:[B.RestMethod.imChatTaskGet,{chat_id:this.chatId,limit:q}]}}getResponseHandler(){return t=>{if(!t){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.extractLoadTaskError(t);if(e){return Promise.reject(new Error(e))}return this.handleResponse(t[B.RestMethod.imChatTaskGet])}}extractLoadTaskError(t){const e=t[B.RestMethod.imChatTaskGet];if(e!=null&&e.error()){return`Sidebar service error: ${B.RestMethod.imChatTaskGet}: ${e==null?void 0:e.error()}`}return null}loadFirstPage(){const t=this.getTasksCountFromModel();if(t>q){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:q};if(this.lastId>0){t["LAST_ID"]=this.lastId}return t}requestPage(t){return this.restClient.callMethod(B.RestMethod.imChatTaskGet,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarInfo: Im.imChatFavoriteGet: page request error",t)}))}handleResponse(t){const e=t.data();if(e.list.length<q){this.hasMoreItemsToLoad=false}this.firstPageReceived=true;this.lastId=this.getLastElementId(e.list);return this.updateModels(e)}updateModels(t){const{list:e,users:i}=t;const s=this.userManager.setUsersToModel(i);const n=this.store.dispatch("sidebar/tasks/set",{chatId:this.chatId,tasks:e});return Promise.all([n,s])}getTasksCountFromModel(){return this.store.getters["sidebar/tasks/getSize"](this.chatId)}}const X=50;class H extends E{constructor(...t){super(...t);this.hasMoreItemsToLoad=true;this.lastId=0}getInitialRequest(){return{[B.RestMethod.imDialogUsersList]:[B.RestMethod.imDialogUsersList,{dialog_id:this.dialogId,limit:X}]}}loadFirstPage(){const t=this.getMembersCountFromModel();if(t>X){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){return{DIALOG_ID:this.dialogId,LIMIT:X,LAST_ID:this.lastId}}requestPage(t){return this.restClient.callMethod(B.RestMethod.imDialogUsersList,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarMain: Im.DialogUsersList: page request error",t)}))}getResponseHandler(){return t=>this.handleResponse(t[B.RestMethod.imDialogUsersList])}updateModels(t){const e=[];const i=this.userManager.setUsersToModel(t);t.forEach((t=>{e.push(t.id)}));const s=this.store.dispatch("sidebar/members/set",{chatId:this.chatId,users:e});return Promise.all([i,s])}getMembersCountFromModel(){return this.store.getters["sidebar/members/getSize"](this.chatId)}handleResponse(t){const e=t.data();if(e.length<X){this.hasMoreItemsToLoad=false}const i=this.getLastElementId(e);if(i){this.lastId=i}return this.updateModels(e)}}class j extends A{loadFirstPage(){return this.loadFirstPageBySubType(B.SidebarFileTypes.brief)}loadNextPage(){return this.loadNextPageBySubType(B.SidebarFileTypes.brief)}}const V=50;class K extends E{getInitialRequest(){return{[B.RestMethod.imChatCalendarGet]:[B.RestMethod.imChatCalendarGet,{chat_id:this.chatId,limit:V}]}}getResponseHandler(){return t=>{if(!t){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.extractLoadTaskError(t);if(e){return Promise.reject(new Error(e))}return this.handleResponse(t[B.RestMethod.imChatCalendarGet])}}extractLoadTaskError(t){const e=t[B.RestMethod.imChatCalendarGet];if(e!=null&&e.error()){return`Sidebar service error: ${B.RestMethod.imChatCalendarGet}: ${e==null?void 0:e.error()}`}return null}loadFirstPage(){const t=this.getMeetingsCountFromState();if(t>V){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:V};if(this.lastId>0){t["LAST_ID"]=this.lastId}return t}requestPage(t){return this.restClient.callMethod(B.RestMethod.imChatCalendarGet,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarInfo: Im.imChatCalendarGet: page request error",t)}))}updateModels(t){const{list:e,users:i}=t;const s=this.userManager.setUsersToModel(i);const n=this.store.dispatch("sidebar/meetings/set",{chatId:this.chatId,meetings:e});return Promise.all([n,s])}handleResponse(t){const e=t.data();if(e.list.length<V){this.hasMoreItemsToLoad=false}this.lastId=this.getLastElementId(e.list);return this.updateModels(e)}getMeetingsCountFromState(){return this.store.getters["sidebar/meetings/getSize"](this.chatId)}}const Y=50;class Q extends E{constructor(...t){super(...t);this.hasMoreItemsToLoad=true;this.lastId=0}getInitialRequest(){return{[B.RestMethod.imDiskFolderListGet]:[B.RestMethod.imDiskFolderListGet,{chat_id:this.chatId,limit:Y}]}}getResponseHandler(){return t=>{if(!t){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.extractLoadFileError(t);if(e){return Promise.reject(new Error(e))}const i=t[B.RestMethod.imDiskFolderListGet].data();return this.updateModels(i)}}extractLoadFileError(t){const e=t[B.RestMethod.imDiskFolderListGet];if(e!=null&&e.error()){return`SidebarInfo service error: ${B.RestMethod.imDiskFolderListGet}: ${e==null?void 0:e.error()}`}return null}loadFirstPage(){const t=this.getFilesCountFromModel(B.SidebarDetailBlock.fileUnsorted);if(t>Y){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:Y};if(this.lastId>0){t.LAST_ID=this.lastId}return t}requestPage(t){return this.restClient.callMethod(B.RestMethod.imDiskFolderListGet,t).then((t=>this.handleResponse(t))).catch((t=>{console.error("SidebarInfo: Im.imDiskFolderListGet: page request error",t)}))}handleResponse(t){const e=t.data();if(e.files.length<Y){this.hasMoreItemsToLoad=false}const i=this.getLastElementId(e.files);if(i){this.lastId=i}return this.updateModels(e)}updateModels(t){const{users:e,files:i}=t;const s=i.map((t=>({...t,subType:B.SidebarDetailBlock.fileUnsorted})));const n=this.userManager.setUsersToModel(e);const a=this.store.dispatch("files/set",s);const r=this.store.dispatch("sidebar/files/set",{chatId:this.chatId,files:s});return Promise.all([a,r,n])}getFilesCountFromModel(t){return this.store.getters["sidebar/files/getSize"](this.chatId,t)}}class W{constructor(){this.store=null;this.settings=null;this.store=I.Core.getStore();this.settings=T.Extension.getSettings("im.v2.component.sidebar");this.saveSettings()}saveSettings(){this.store.dispatch("sidebar/setFilesMigrated",this.settings.get("filesMigrated",false));this.store.dispatch("sidebar/setLinksMigrated",this.settings.get("linksAvailable",false))}getBlocks(){return this.settings.get("blocks",[])}isLinksMigrationFinished(){return this.store.state.sidebar.isLinksMigrated}canShowBriefs(){return this.settings.get("canShowBriefs",false)}isFileMigrationFinished(){return this.store.state.sidebar.isFilesMigrated}}const J={[B.SidebarBlock.main]:10,[B.SidebarBlock.info]:20,[B.SidebarBlock.file]:30,[B.SidebarBlock.brief]:40,[B.SidebarBlock.sign]:50,[B.SidebarBlock.task]:60,[B.SidebarBlock.meeting]:70};var Z=babelHelpers.classPrivateFieldLooseKey("settingsManager");var tt=babelHelpers.classPrivateFieldLooseKey("store");var et=babelHelpers.classPrivateFieldLooseKey("dialogId");var it=babelHelpers.classPrivateFieldLooseKey("filterUnavailableBlocks");var st=babelHelpers.classPrivateFieldLooseKey("isFileMigrationFinished");var nt=babelHelpers.classPrivateFieldLooseKey("canShowBriefs");var at=babelHelpers.classPrivateFieldLooseKey("hasMarketApps");var rt=babelHelpers.classPrivateFieldLooseKey("sortBlocks");class ot{constructor(t,e){Object.defineProperty(this,rt,{value:ht});Object.defineProperty(this,at,{value:ut});Object.defineProperty(this,nt,{value:ct});Object.defineProperty(this,st,{value:dt});Object.defineProperty(this,it,{value:lt});Object.defineProperty(this,Z,{writable:true,value:null});Object.defineProperty(this,tt,{writable:true,value:void 0});Object.defineProperty(this,et,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Z)[Z]=t;babelHelpers.classPrivateFieldLooseBase(this,tt)[tt]=I.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,et)[et]=e}getBlocks(){const t=babelHelpers.classPrivateFieldLooseBase(this,Z)[Z].getBlocks();const e=babelHelpers.classPrivateFieldLooseBase(this,it)[it](t);return babelHelpers.classPrivateFieldLooseBase(this,rt)[rt](e)}}function lt(t){const e=new Set(t);if(babelHelpers.classPrivateFieldLooseBase(this,st)[st]()){e.delete(B.SidebarBlock.fileUnsorted)}else{e.delete(B.SidebarBlock.brief);e.delete(B.SidebarBlock.file)}if(!babelHelpers.classPrivateFieldLooseBase(this,nt)[nt]()){e.delete(B.SidebarBlock.brief)}if(!babelHelpers.classPrivateFieldLooseBase(this,at)[at]()){e.delete(B.SidebarBlock.market)}return[...e]}function dt(){return babelHelpers.classPrivateFieldLooseBase(this,Z)[Z].isFileMigrationFinished()}function ct(){return babelHelpers.classPrivateFieldLooseBase(this,Z)[Z].canShowBriefs()}function ut(){return x.MarketManager.getInstance().getAvailablePlacementsByType(B.PlacementType.sidebar,babelHelpers.classPrivateFieldLooseBase(this,et)[et]).length>0}function ht(t){return[...t].sort(((t,e)=>J[t]-J[e]))}const mt={Main:H,Favorite:N,Link:G,Task:z,Media:P,Audio:F,Document:R,Other:$,Brief:j,Meeting:K,FileUnsorted:Q};const gt=Object.freeze({[B.SidebarBlock.main]:[B.SidebarDetailBlock.main],[B.SidebarBlock.info]:[B.SidebarDetailBlock.favorite,B.SidebarDetailBlock.link],[B.SidebarBlock.task]:[B.SidebarDetailBlock.task],[B.SidebarBlock.meeting]:[B.SidebarDetailBlock.meeting],[B.SidebarBlock.brief]:[B.SidebarDetailBlock.brief],[B.SidebarBlock.file]:[B.SidebarDetailBlock.media,B.SidebarDetailBlock.audio,B.SidebarDetailBlock.document,B.SidebarDetailBlock.other],[B.SidebarBlock.fileUnsorted]:[B.SidebarDetailBlock.fileUnsorted]});class pt{constructor(t){this.blockServices=[];this.dialogId="";this.chatId=0;this.store=null;this.restClient=null;this.availabilityManager=null;this.store=I.Core.getStore();this.restClient=I.Core.getRestClient();this.availabilityManager=t}requestInitialData(){if(!T.Type.isArrayFilled(this.blockServices)){this.buildBlocks()}return new Promise(((t,e)=>{this.restClient.callBatch(this.getInitialRequestQuery(),(e=>t(this.handleBatchRequestResult(e))),(t=>e(t)))}))}getBlockInstance(t){var e;if(!T.Type.isArrayFilled(this.blockServices)){this.buildBlocks()}return(e=this.blockServices.find((e=>e.type===t.toLowerCase())))==null?void 0:e.blockManager}setChatId(t){this.chatId=t}setDialogId(t){this.dialogId=t}buildBlocks(){const t=this.getServiceClassesForBlocks();this.blockServices=t.map((t=>{const e=new mt[t](this.chatId,this.dialogId);return{type:t.toLowerCase(),blockManager:e,initialRequest:e.getInitialRequest(),responseHandler:e.getResponseHandler()}}))}getServiceClassesForBlocks(){const t=[];const e=this.availabilityManager.getBlocks();e.forEach((e=>{const i=gt[e];if(i){t.push(...i)}}));return t.map((t=>T.Text.capitalize(t)))}getInitialRequestQuery(){let t={};this.blockServices.forEach((e=>{t=Object.assign(t,e.initialRequest)}));return t}handleBatchRequestResult(t){const e=[];this.blockServices.forEach((i=>{e.push(i.responseHandler(t))}));return Promise.all(e).then((()=>this.setInited())).catch((t=>console.error(t)))}setInited(){return this.store.dispatch("sidebar/setInited",this.chatId)}}const bt={name:"DetailUser",components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle},props:{dialogId:{type:String,required:true},isModerator:{type:Boolean,default:false}},data(){return{showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,position(){return this.$store.getters["users/getPosition"](this.dialogId)},user(){return this.$store.getters["users/get"](this.dialogId,true)}},methods:{onClickContextMenu(t){this.$emit("contextMenuClick",{userDialogId:this.dialogId,target:t.currentTarget})}},template:`\n\t\t<div\n\t\t\tclass="bx-im-sidebar-main-detail__user"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-main-detail__avatar-container">\n\t\t\t\t<Avatar :size="AvatarSize.L" :dialogId="dialogId" />\n\t\t\t\t<span v-if="isModerator" class="bx-im-sidebar-main-detail__avatar-moderator-icon"></span>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-detail__user-info-container">\n\t\t\t\t<div class="bx-im-sidebar-main-detail__user-title-container">\n\t\t\t\t\t<ChatTitle :dialogId="dialogId" class="bx-im-sidebar-main-detail__user-title-text" />\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\t\tclass="bx-im-sidebar-main-detail__context-menu-icon bx-im-messenger__context-menu-icon"\n\t\t\t\t\t\t@click="onClickContextMenu"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-main-detail__position-text" :title="position">\n\t\t\t\t\t{{ position }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\n\t`};const vt={name:"SidebarDetail",components:{Loader:C.Loader},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},emits:["onScroll"],data(){return{isLoading:false}},computed:{hasInitialData(){return this.$store.getters["sidebar/isInited"](this.chatId)}},created(){this.loadFirstPage()},methods:{loadFirstPage(){if(this.hasInitialData){return}this.isLoading=true;this.service.loadFirstPage().then((()=>{this.isLoading=false}))},needToLoadNextPage(t){return t.target.scrollTop+t.target.clientHeight>=t.target.scrollHeight-t.target.clientHeight},onScroll(t){this.$emit("onScroll");if(this.isLoading){return}if(!this.needToLoadNextPage(t)||!this.service.hasMoreItemsToLoad){return}this.isLoading=true;this.service.loadNextPage().then((()=>{this.isLoading=false}))}},template:`\n\t\t<div class="bx-im-sidebar-detail__container bx-im-sidebar-detail__scope" @scroll="onScroll">\n\t\t\t<slot :isLoading="isLoading" :chatId="chatId" :dialogId="dialogId"></slot>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};class It extends M.BaseMenu{constructor(){super();this.id="im-sidebar-context-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName()}}getOpenContextMessageItem(){if(!this.context.messageId||this.context.messageId===0){return null}return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_GO_TO_CONTEXT_MESSAGE"),onclick:()=>{S.EventEmitter.emit(B.EventType.dialog.goToMessageContext,{messageId:this.context.messageId,dialogId:this.context.dialogId});this.menuInstance.close()}}}getCopyLinkItem(t){if(!BX.clipboard.isCopySupported()){return null}return{text:t,onclick:()=>{if(BX.clipboard.copy(this.context.source)){BX.UI.Notification.Center.notify({content:T.Loc.getMessage("IM_SIDEBAR_COPIED_SUCCESS")})}this.menuInstance.close()}}}}class ft extends It{constructor(){super();this.chatService=new o.ChatService;this.callManager=s.CallManager.getInstance()}getMenuItems(){return[this.getInsertNameItem(),this.getSendMessageItem(),this.getCallItem(),this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getKickItem(),this.getLeaveItem()]}getInsertNameItem(){const t=this.store.getters["users/get"](this.context.dialogId,true);return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_INSERT_NAME"),onclick:()=>{S.EventEmitter.emit(B.EventType.textarea.insertMention,{mentionText:t.name,mentionReplacement:k.Utils.user.getMentionBbCode(this.context.dialogId,t.name)});this.menuInstance.close()}}}getSendMessageItem(){return{text:T.Loc.getMessage("IM_LIB_MENU_WRITE"),onclick:()=>{n.Messenger.openChat(this.context.dialogId);this.menuInstance.close()}}}getCallItem(){if(!this.callManager.chatCanBeCalled(this.context.dialogId)){return null}return{text:T.Loc.getMessage("IM_LIB_MENU_CALL"),onclick:()=>{S.EventEmitter.emit(B.EventType.dialog.call,this.context);this.menuInstance.close()}}}getOpenProfileItem(){const t=this.store.getters["dialogues/isUser"](this.context.dialogId);if(!t){return null}const e=k.Utils.user.getProfileLink(this.context.dialogId);return{text:T.Loc.getMessage("IM_LIB_MENU_OPEN_PROFILE"),href:e,onclick:()=>{this.menuInstance.close()}}}getOpenUserCalendarItem(){const t=this.store.getters["dialogues/isUser"](this.context.dialogId);if(!t){return null}const e=this.store.getters["users/get"](this.context.dialogId,true);if(e.bot){return null}const i=k.Utils.user.getCalendarLink(this.context.dialogId);return{text:T.Loc.getMessage("IM_LIB_MENU_OPEN_CALENDAR"),onclick:()=>{BX.SidePanel.Instance.open(i);this.menuInstance.close()}}}getKickItem(){const t=Number.parseInt(this.context.dialogId,10);const e=t===this.getCurrentUserId();const i=this.store.getters["dialogues/canLeave"](this.context.contextDialogId);if(e||!this.isCurrentUserManager(this.context.contextDialogId)||!i){return null}return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_KICK_FROM_CHAT"),onclick:()=>{this.chatService.kickUserFromChat(this.context.contextDialogId,this.context.dialogId);this.menuInstance.close()}}}getLeaveItem(){const t=Number.parseInt(this.context.dialogId,10);const e=t===this.getCurrentUserId();const i=this.store.getters["dialogues/canLeave"](this.context.contextDialogId);if(!e||!i){return null}return{text:T.Loc.getMessage("IM_LIB_MENU_LEAVE"),onclick:()=>{this.chatService.leaveChat(this.context.contextDialogId);this.menuInstance.close()}}}isCurrentUserManager(t){const e=this.store.getters["dialogues/get"](t);if(!e){return false}return e.managerList.includes(this.getCurrentUserId())}}const _t={name:"MainDetail",components:{DetailUser:bt,SidebarDetail:vt,Button:C.Button},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{ButtonSize:()=>C.ButtonSize,ButtonColor:()=>C.ButtonColor,dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},dialogManagers(){return this.dialog.managerList},dialogIds(){const t=this.$store.getters["sidebar/members/get"](this.chatId);return t.map((t=>t.toString()))},showCopyInviteButton(){return true},chatLink(){return`${I.Core.getHost()}/online/?IM_DIALOG=${this.dialogId}`}},created(){this.contextMenu=new ft},beforeUnmount(){this.contextMenu.destroy()},methods:{isModerator(t){const e=Number.parseInt(t,10);return this.dialogManagers.includes(e)},onContextMenuClick(t){const e={dialogId:t.userDialogId,contextDialogId:this.dialogId,contextChatId:this.chatId};this.contextMenu.openMenu(e,t.target)},onScroll(){this.contextMenu.destroy()},onCopyInviteClick(){if(BX.clipboard.copy(this.chatLink)){BX.UI.Notification.Center.notify({content:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_COPIED_SUCCESS")})}}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-main-detail__scope"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-main-detail__invitation-button-container">\n\t\t\t\t<Button\n\t\t\t\t\tv-if="showCopyInviteButton"\n\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_COPY_INVITE_LINK')"\n\t\t\t\t\t:size="ButtonSize.M"\n\t\t\t\t\t:color="ButtonColor.PrimaryBorder"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\ticon="link"\n\t\t\t\t\t@click="onCopyInviteClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailUser \n\t\t\t\tv-for="dialogId in dialogIds" \n\t\t\t\t:dialogId="dialogId" \n\t\t\t\t:isModerator="isModerator(dialogId)"\n\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const xt={name:"MainPreviewSettings",directives:{hint:a.hint},components:{Toggle:C.Toggle},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true},isModerator:{type:Boolean,default:false}},data(){return{autoDeleteEnabled:false}},computed:{ToggleSize:()=>C.ToggleSize,dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isGroupChat(){return this.dialogId.startsWith("chat")},canBeMuted(){return this.$store.getters["dialogues/canMute"](this.dialogId)},isChatMuted(){const t=this.dialog.muteList.find((t=>t===I.Core.getUserId()));return!!t},hintMuteNotAvailable(){if(this.canBeMuted){return null}return{text:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MUTE_NOT_AVAILABLE"),popupOptions:{angle:true,targetContainer:document.body,offsetLeft:141,offsetTop:-10,bindOptions:{position:"top"}}}},hintAutoDeleteNotAvailable(){return{text:this.$Bitrix.Loc.getMessage("IM_MESSENGER_NOT_AVAILABLE"),popupOptions:{bindOptions:{position:"top"},angle:true,targetContainer:document.body,offsetLeft:125,offsetTop:-10}}},chatTypeClass(){return this.isGroupChat?"--group-chat":"--personal"}},methods:{getChatService(){if(!this.chatService){this.chatService=new o.ChatService}return this.chatService},muteActionHandler(){if(!this.canBeMuted){return}if(this.isChatMuted){this.getChatService().unmuteChat(this.dialogId)}else{this.getChatService().muteChat(this.dialogId)}}},template:`\n\t\t<div v-if="isLoading" class="bx-im-sidebar-main-settings__skeleton" :class="chatTypeClass"></div>\n\t\t<div v-else class="bx-im-sidebar-main-settings__container bx-im-sidebar-main-settings__scope" :class="chatTypeClass">\n\t\t\t<div\n\t\t\t\tv-if="isGroupChat"\n\t\t\t\tclass="bx-im-sidebar-main-settings__notification-container"\n\t\t\t\t:class="[canBeMuted ? '' : '--not-active']"\n\t\t\t\tv-hint="hintMuteNotAvailable"\n\t\t\t>\n\t\t\t\t<div class="bx-im-sidebar-main-settings__notification-title">\n\t\t\t\t\t<div class="bx-im-sidebar-main-settings__title-text bx-im-sidebar-main-settings__title-icon --notification">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_ENABLE_NOTIFICATION_TITLE') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="!isChatMuted" @change="muteActionHandler" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-settings__autodelete-container --not-active" v-hint="hintAutoDeleteNotAvailable">\n\t\t\t\t<div class="bx-im-sidebar-main-settings__autodelete-title">\n\t\t\t\t\t<div class="bx-im-sidebar-main-settings__title-text bx-im-sidebar-main-settings__title-icon --autodelete">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_ENABLE_AUTODELETE_TITLE') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="autoDeleteEnabled" />\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-main-settings__autodelete-status">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_AUTODELETE_STATUS_OFF') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const St={name:"PersonalChatPreview",directives:{hint:a.hint},components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle,MessengerButton:C.Button,AddToChat:y.AddToChat,Settings:xt},props:{dialogId:{type:String,required:true},isLoading:{type:Boolean,default:false}},data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>C.AvatarSize,ButtonSize:()=>C.ButtonSize,ButtonColor:()=>C.ButtonColor,userPosition(){return this.$store.getters["users/getPosition"](this.dialogId)},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},canInviteMembers(){return this.$store.getters["dialogues/getChatOption"](this.dialog.type,B.ChatOption.extend)},userLink(){return k.Utils.user.getProfileLink(this.dialogId)}},methods:{onAddClick(){this.showAddToChatPopup=true}},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-personal-chat__avatar-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-personal-chat__avatar-container">\n\t\t\t\t<Avatar\n\t\t\t\t\t:size="AvatarSize.XXXL"\n\t\t\t\t\t:withStatus="false"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\tclass="bx-im-sidebar-main-preview-personal-chat__avatar"\n\t\t\t\t/>\n\t\t\t\t<a :href="userLink" target="_blank">\n\t\t\t\t\t<ChatTitle :dialogId="dialogId" class="bx-im-sidebar-main-preview-personal-chat__user-name" />\n\t\t\t\t</a>\n\t\t\t\t<div class="bx-im-sidebar-main-preview-personal-chat__user-position" :title="userPosition">\n\t\t\t\t\t{{ userPosition }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-personal-chat__invite-button-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-personal-chat__invite-button-container" ref="add-members">\n\t\t\t\t<MessengerButton\n\t\t\t\t\tv-if="canInviteMembers"\n\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_INVITE_BUTTON_TEXT')"\n\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\ticon="plus"\n\t\t\t\t\t@click="onAddClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Settings :isLoading="isLoading" :dialogId="dialogId" />\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:chatId="chatId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: -220, offsetLeft: -320}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const Mt={name:"GroupChatPreview",components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle,MessengerButton:C.Button,AddToChat:y.AddToChat,Settings:xt},props:{dialogId:{type:String,required:true},isLoading:{type:Boolean,default:false}},emits:["openDetail"],data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>C.AvatarSize,ButtonSize:()=>C.ButtonSize,ButtonColor:()=>C.ButtonColor,dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},dialogIds(){const t=4;const e=this.$store.getters["sidebar/members/get"](this.chatId);return e.map((t=>t.toString())).slice(0,t)},usersInChatCount(){return this.dialog.userCounter},moreUsersCount(){return Math.max(this.usersInChatCount-this.dialogIds.length,0)},canSeeMembers(){return this.$store.getters["dialogues/getChatOption"](this.dialog.type,B.ChatOption.userList)},canInviteMembers(){return this.$store.getters["dialogues/getChatOption"](this.dialog.type,B.ChatOption.extend)}},methods:{onOpenUsers(){this.$emit("openDetail")},onOpenInvitePopup(){this.showAddToChatPopup=true}},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-group-chat__avatar-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-group-chat__avatar-container">\n\t\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__avatar">\n\t\t\t\t\t<Avatar :size="AvatarSize.XXXL" :withStatus="false" :dialogId="dialogId" />\n\t\t\t\t</div>\n\t\t\t\t<ChatTitle :dialogId="dialogId" :twoLine="true" class="bx-im-sidebar-main-preview-group-chat__title" />\n\t\t\t</div>\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-group-chat__members-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-group-chat__members-container">\n\t\t\t\t<div v-if="canSeeMembers" class="bx-im-sidebar-main-preview-group-chat__members" @click="onOpenUsers">\n\t\t\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__members-avatars" >\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tclass="bx-im-sidebar-main-preview-group-chat__chat-user-avatar"\n\t\t\t\t\t\t\tv-for="id in dialogIds"\n\t\t\t\t\t\t\t:size="AvatarSize.S"\n\t\t\t\t\t\t\t:withStatus="false"\n\t\t\t\t\t\t\t:dialogId="id"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if="moreUsersCount > 0" class="bx-im-sidebar-main-preview-group-chat__more-users-count-text">\n\t\t\t\t\t\t+{{ moreUsersCount }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div ref="add-members">\n\t\t\t\t\t<MessengerButton\n\t\t\t\t\t\tv-if="canInviteMembers"\n\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_INVITE_BUTTON_TEXT')"\n\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t@click="onOpenInvitePopup"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Settings :isLoading="isLoading" :dialogId="dialogId" />\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:chatId="chatId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: -220, offsetLeft: -420}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const kt={name:"MainPreview",components:{GroupChatPreview:Mt,PersonalChatPreview:St},inheritAttrs:false,props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},computed:{isGroupChat(){return this.dialogId.startsWith("chat")}},methods:{onOpenDetail(){this.$emit("openDetail",{block:B.SidebarBlock.main,detailBlock:B.SidebarDetailBlock.main})}},template:`\n\t\t<GroupChatPreview \n\t\t\tv-if="isGroupChat" \n\t\t\t:dialogId="dialogId"\n\t\t\t:isLoading="isLoading" \n\t\t\t@openDetail="onOpenDetail"\n\t\t\tclass="bx-im-sidebar__box"\n\t\t/>\n\t\t<PersonalChatPreview \n\t\t\tv-else \n\t\t\t:dialogId="dialogId"\n\t\t\t:isLoading="isLoading"\n\t\t\tclass="bx-im-sidebar__box"\n\t\t/>\n\t`};const Ct=25;const Bt={name:"InfoPreview",directives:{hint:a.hint},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},emits:["openDetail"],data(){return{expanded:false}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isUser(){return this.dialog.type===B.DialogType.user},previewDescription(){if(this.dialog.description.length===0){return this.chatTypeText}if(this.dialog.description.length>Ct){return`${this.dialog.description.slice(0,Ct)}...`}return this.dialog.description},descriptionToShow(){const t=this.expanded?this.dialog.description:this.previewDescription;return r.Parser.purifyText(t)},chatTypeText(){if(this.isUser){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_USER")}return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_GROUP_V2")},showExpandButton(){if(this.expanded){return false}return this.dialog.description.length>=Ct},favoriteCounter(){const t=this.$store.getters["sidebar/favorites/getCounter"](this.chatId);return this.getCounterString(t)},urlCounter(){const t=this.$store.getters["sidebar/links/getCounter"](this.chatId);return this.getCounterString(t)},isLinksAvailable(){return this.$store.state.sidebar.isLinksMigrated},hintDirectiveContent(){return{text:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_LINKS_NOT_AVAILABLE"),popupOptions:{angle:true,targetContainer:document.body,offsetLeft:141,offsetTop:-10,bindOptions:{position:"top"}}}},chatId(){return this.dialog.chatId}},methods:{getCounterString(t){const e=100;if(t>=e){return"99+"}return t.toString()},onFavouriteClick(){this.$emit("openDetail",{block:B.SidebarBlock.info,detailBlock:B.SidebarDetailBlock.favorite})},onLinkClick(){if(!this.isLinksAvailable){return}this.$emit("openDetail",{block:B.SidebarBlock.info,detailBlock:B.SidebarDetailBlock.link})}},template:`\n\t\t<div class="bx-im-sidebar-info-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-info-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-info-preview__container" :class="[expanded ? '--expanded' : '']">\n\t\t\t\t<div class="bx-im-sidebar-info-preview__description-container">\n\t\t\t\t\t<div class="bx-im-sidebar-info-preview__description-text-container" :class="[expanded ? '--expanded' : '']">\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__description-icon bx-im-sidebar-info-preview__item-icon"></div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__description-text">\n\t\t\t\t\t\t\t{{descriptionToShow}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tv-if="showExpandButton"\n\t\t\t\t\t\tclass="bx-im-sidebar-info-preview__show-description-button"\n\t\t\t\t\t\t@click="expanded = !expanded"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_CHAT_DESCRIPTION_SHOW') }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-info-preview__items-container">\n\t\t\t\t\t<div class="bx-im-sidebar-info-preview__item-container" @click="onFavouriteClick">\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-container">\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__favorite-icon bx-im-sidebar-info-preview__item-icon"></div>\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-text">\n\t\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITE_DETAIL_TITLE') }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__counter-container">\n\t\t\t\t\t\t\t<span class="bx-im-sidebar-info-preview__counter">{{favoriteCounter}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div \n\t\t\t\t\t\tclass="bx-im-sidebar-info-preview__item-container" \n\t\t\t\t\t\t:class="[isLinksAvailable ? '' : '--links-not-active']"\n\t\t\t\t\t\t@click="onLinkClick"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tv-if="!isLinksAvailable" \n\t\t\t\t\t\t\tclass="bx-im-sidebar-info-preview__hint-not-active" \n\t\t\t\t\t\t\tv-hint="hintDirectiveContent"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-container">\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__link-icon bx-im-sidebar-info-preview__item-icon"></div>\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-text">\n\t\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_LINK_DETAIL_TITLE') }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__counter-container">\n\t\t\t\t\t\t\t<span class="bx-im-sidebar-info-preview__counter">{{urlCounter}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};class Dt{constructor(){this.cachedDateGroups={}}format(t){const e={};t.forEach((t=>{const i=this.getDateGroup(t.date);if(!e[i.title]){e[i.title]={dateGroupTitle:i.title,items:[]}}e[i.title].items.push(t)}));return Object.values(e)}getDateGroup(t){const e=10;const i=t.toJSON().slice(0,e);if(this.cachedDateGroups[i]){return this.cachedDateGroups[i]}this.cachedDateGroups[i]={id:i,title:_.DateFormatter.formatByTemplate(t,_.DateTemplate.dateGroup)};return this.cachedDateGroups[i]}destroy(){this.cachedDateGroups={}}}class yt{constructor(){this.store=I.Core.getStore();this.restClient=I.Core.getRestClient()}delete(t){this.store.dispatch("sidebar/links/delete",{chatId:t.chatId,id:t.id});const e={LINK_ID:t.id};this.restClient.callMethod(B.RestMethod.imChatUrlDelete,e).catch((t=>{console.error("Im.Sidebar: error deleting link",t)}))}}class Tt extends It{constructor(){super();this.linkManager=new yt}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(T.Loc.getMessage("IM_SIDEBAR_MENU_COPY_LINK")),this.getDeleteLinkItem()]}getDeleteLinkItem(){return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_FROM_LINKS"),onclick:function(){this.linkManager.delete(this.context);this.menuInstance.close()}.bind(this)}}}const wt={name:"LinkItem",components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle},props:{link:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,linkItem(){return this.link},source(){return this.linkItem.source},shortDescription(){let t="";try{t=new URL(this.source).hostname}catch(e){t=this.source;console.error(e)}return t},description(){const{name:t,description:e}=this.linkItem.richData;const i=e||t||this.source;return k.Utils.text.convertHtmlEntities(i)},authorDialogId(){return this.linkItem.authorId.toString()},hasPreview(){var t;return!!((t=this.linkItem.richData)!=null&&t.previewUrl)},previewStyles(){var t;return{backgroundImage:`url('${(t=this.linkItem.richData)==null?void 0:t.previewUrl}')`,backgroundSize:"cover",backgroundRepeat:"no-repeat"}},iconTypeClass(){var t;switch((t=this.linkItem.richData)==null?void 0:t.type){case"TASKS":return"--task";case"LANDING":return"--landing";case"POST":return"--post";case"CALENDAR":return"--calendar";default:return"--common"}}},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{id:this.linkItem.id,messageId:this.linkItem.messageId,source:this.source,target:t.currentTarget})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-link-item__container bx-im-link-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<template v-if="hasPreview">\n\t\t\t\t<div class="bx-im-link-item__icon-container" :style="previewStyles"></div>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div class="bx-im-link-item__icon-container" :class="iconTypeClass">\n\t\t\t\t\t<div class="bx-im-link-item__icon" :class="iconTypeClass" ></div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<div class="bx-im-link-item__content">\n\t\t\t\t<div class="bx-im-link-item__short-description-text">{{ shortDescription }}</div>\n\t\t\t\t<a :href="source" :title="description" target="_blank" class="bx-im-link-item__description-text">\n\t\t\t\t\t{{ description }}\n\t\t\t\t</a>\n\t\t\t\t<div class="bx-im-link-item__author-container">\n\t\t\t\t\t<Avatar \n\t\t\t\t\t\t:size="AvatarSize.XS" \n\t\t\t\t\t\t:withStatus="false" \n\t\t\t\t\t\t:dialogId="authorDialogId" \n\t\t\t\t\t\tclass="bx-im-link-item__author-avatar" \n\t\t\t\t\t/>\n\t\t\t\t\t<ChatTitle :dialogId="authorDialogId" :showItsYou="false" class="bx-im-link-item__author-text" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-if="showContextButton" class="bx-im-link-item__context-menu">\n\t\t\t\t<button class="bx-im-messenger__context-menu-icon" @click="onContextMenuClick"></button>\n\t\t\t</div>\n\t\t</div>\n\t`};const Et={name:"DateGroup",props:{dateText:{type:String,required:true}},template:`\n\t\t<div class="bx-im-sidebar-date-group__container bx-im-sidebar-date-group__scope">\n\t\t\t<div class="bx-im-sidebar-date-group__text">\n\t\t\t\t{{ dateText }}\n\t\t\t</div>\n\t\t</div>\n\t`};const Lt={name:"DetailEmptyState",props:{title:{type:String,required:true},iconType:{type:String,required:true}},computed:{iconClass(){return`--${this.iconType}`}},template:`\n\t\t<div class="bx-im-sidebar-detail-empty-state__container bx-im-sidebar-detail-empty-state__scope">\n\t\t\t<span class="bx-im-sidebar-detail-empty-state__icon" :class="[iconClass]"></span>\n\t\t\t<span class="bx-im-sidebar-detail-empty-state__text">{{ title }}</span>\n\t\t</div>\n\t`};const At={name:"LinkDetail",components:{LinkItem:wt,SidebarDetail:vt,DateGroup:Et,DetailEmptyState:Lt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,links(){return this.$store.getters["sidebar/links/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.links)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Tt},beforeUnmount(){this.contextMenu.destroy();this.collectionFormatter.destroy()},methods:{onContextMenuClick(t){const e={id:t.id,messageId:t.messageId,dialogId:this.dialogId,chatId:this.chatId,source:t.source};this.contextMenu.openMenu(e,t.target)},onScroll(){this.contextMenu.destroy()}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-link-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<template v-for="link in dateGroup.items">\n\t\t\t\t\t<LinkItem :link="link" @contextMenuClick="onContextMenuClick" />\n\t\t\t\t</template>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_LINKS_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.link"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};class Pt extends It{constructor(){super();this.id="im-sidebar-context-menu"}getMenuItems(){return[this.getOpenContextMessageItem(),this.getDeleteFromFavoriteItem()]}getDeleteFromFavoriteItem(){return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_REMOVE_FROM_SAVED_V2"),onclick:function(){const t=new o.MessageService({chatId:this.context.chatId});t.removeMessageFromFavorite(this.context.messageId);this.menuInstance.close()}.bind(this)}}}const Ft={name:"FavoriteItem",components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle},props:{favorite:{type:Object,required:true},chatId:{type:Number,required:true},dialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,favoriteItem(){return this.favorite},favoriteMessage(){return this.$store.getters["messages/getById"](this.favoriteItem.messageId)},authorDialogId(){return this.favoriteMessage.authorId.toString()},messageText(){return r.Parser.purifyMessage(this.favoriteMessage)}},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{id:this.favoriteItem.id,messageId:this.favorite.messageId,target:t.currentTarget})},onItemClick(){S.EventEmitter.emit(B.EventType.dialog.goToMessageContext,{messageId:this.favorite.messageId,dialogId:this.dialogId})},onMessageBodyClick(t){if(t.target.tagName==="A"){t.stopPropagation()}}},template:`\n\t\t<div \n\t\t\tclass="bx-im-favorite-item__container bx-im-favorite-item__scope" \n\t\t\t@click.stop="onItemClick"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-favorite-item__header-container">\n\t\t\t\t<div class="bx-im-favorite-item__author-container">\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t:withStatus="false"\n\t\t\t\t\t\t:dialogId="authorDialogId"\n\t\t\t\t\t\tclass="bx-im-favorite-item__author-avatar"\n\t\t\t\t\t/>\n\t\t\t\t\t<ChatTitle :dialogId="authorDialogId" :showItsYou="false" class="bx-im-favorite-item__author-text" />\n\t\t\t\t</div>\n\t\t\t\t<button \n\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\tclass="bx-im-messenger__context-menu-icon"\n\t\t\t\t\t@click.stop="onContextMenuClick"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div class="bx-im-favorite-item__message-text" v-html="messageText" @click="onMessageBodyClick"></div>\n\t\t</div>\n\t`};const Rt={name:"FavoriteDetail",components:{FavoriteItem:Ft,DateGroup:Et,DetailEmptyState:Lt,SidebarDetail:vt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,favorites(){return this.$store.getters["sidebar/favorites/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.favorites)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Pt},beforeUnmount(){this.contextMenu.destroy();this.collectionFormatter.destroy()},methods:{onContextMenuClick(t){const e={id:t.id,messageId:t.messageId,dialogId:this.dialogId,chatId:this.chatId};this.contextMenu.openMenu(e,t.target)},onScroll(){this.contextMenu.destroy()}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-favorite-detail__scope bx-im-sidebar-favorite-detail__container"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<FavoriteItem \n\t\t\t\t\tv-for="favorite in dateGroup.items" \n\t\t\t\t\t:favorite="favorite"\n\t\t\t\t\t:chatId="chatId"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick" \n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.favorite"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};class $t{constructor(){this.store=I.Core.getStore();this.diskService=new o.DiskService}delete(t){this.store.dispatch("sidebar/files/delete",{chatId:t.chatId,id:t.id});this.diskService.delete({chatId:t.chatId,fileId:t.fileId})}saveOnDisk(t){return this.diskService.save(t)}}class Ut extends It{constructor(){super();this.id="im-sidebar-context-menu";this.mediaManager=new $t}getMenuItems(){return[this.getOpenContextMessageItem(),this.getDownloadFileItem(),this.getSaveFileOnDiskItem(),this.getDeleteFileItem()]}getViewFileItem(){const t=k.Utils.file.getViewerDataAttributes(this.context.file.viewerAttrs);if(!t||this.context.file.type==="audio"){return null}return{html:this.getViewHtml(t),onclick:function(){this.menuInstance.close()}.bind(this)}}getDownloadFileItem(){if(!this.context.file.urlDownload){return null}return{html:this.getDownloadHtml(this.context.file.urlDownload,this.context.file.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveFileOnDiskItem(){if(!this.context.sidebarFile.fileId){return null}return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_SAVE_FILE_ON_DISK"),onclick:function(){this.mediaManager.saveOnDisk(this.context.sidebarFile.fileId).then((()=>{BX.UI.Notification.Center.notify({content:T.Loc.getMessage("IM_SIDEBAR_FILE_SAVE_ON_DISK_SUCCESS")})}));this.menuInstance.close()}.bind(this)}}getDeleteFileItem(){if(this.getCurrentUserId()!==this.context.sidebarFile.authorId){return null}return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_FILE"),onclick:function(){this.mediaManager.delete(this.context.sidebarFile);this.menuInstance.close()}.bind(this)}}getViewHtml(t){const e=T.Dom.create("div",{text:T.Loc.getMessage("IM_SIDEBAR_MENU_VIEW_FILE")});Object.entries(t).forEach((t=>{const[i,s]=t;e.setAttribute(i,s)}));return e}getDownloadHtml(t,e){const i=T.Dom.create("a",{text:T.Loc.getMessage("IM_SIDEBAR_MENU_DOWNLOAD_FILE")});T.Dom.style(i,"display","block");T.Dom.style(i,"color","inherit");T.Dom.style(i,"text-decoration","inherit");i.setAttribute("href",t);i.setAttribute("download",e);return i}}const Nt={name:"MediaDetailItem",components:{SocialVideo:l.SocialVideo,Avatar:C.Avatar},props:{fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false,videoDuration:0}},computed:{AvatarSize:()=>C.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},previewPicture(){if(!this.hasPreview){return{}}return{backgroundImage:`url('${this.file.urlPreview}')`}},hasPreview(){return this.file.urlPreview!==""},isImage(){return this.file.type==="image"},isVideo(){return this.file.type==="video"},viewerAttributes(){return k.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},videoDurationText(){if(this.videoDuration===0){return"--:--"}return this.formatTime(this.videoDuration)}},methods:{formatTime(t){t=Math.floor(t);const e=Math.floor(t/60/60);if(e>0){t-=e*60*60}const i=Math.floor(t/60);if(i>0){t-=i*60}const s=e>0?`${e}:`:"";const n=s>0?`${i.toString().padStart(2,"0")}:`:`${i}:`;const a=t.toString().padStart(2,"0");return s+n+a},handleVideoEvent(){if(!this.$refs["video"]){return}this.videoDuration=this.$refs["video"].duration},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-media-detail-item__container bx-im-sidebar-file-media-detail-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-file-media-detail-item__header-container">\n\t\t\t\t<div class="bx-im-sidebar-file-media-detail-item__avatar-container">\n\t\t\t\t\t<Avatar :dialogId="sidebarFileItem.authorId" :withStatus="false" :size="AvatarSize.S"></Avatar>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__context-menu bx-im-messenger__context-menu-icon"\n\t\t\t\t\t@click="onContextMenuClick"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tv-if="isImage"\n\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__content --image" \n\t\t\t\t:style="previewPicture"\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-if="isVideo"\n\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__content --video"\n\t\t\t\t:style="previewPicture"\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t>\n\t\t\t\t<video \n\t\t\t\t\tv-show="!hasPreview"\n\t\t\t\t\tref="video"\n\t\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__video" \n\t\t\t\t\tpreload="metadata" :src="file.urlDownload"\n\t\t\t\t\t@durationchange="handleVideoEvent"\n\t\t\t\t\t@loadeddata="handleVideoEvent"\n\t\t\t\t\t@loadedmetadata="handleVideoEvent"\n\t\t\t\t></video>\n\t\t\t</div>\n\t\t\t<div v-if="isVideo" class="bx-im-sidebar-file-media-detail-item__video-controls">\n\t\t\t\t<span class="bx-im-sidebar-file-media-detail-item__video-controls-icon"></span>\n\t\t\t\t<span class="bx-im-sidebar-file-media-detail-item__video-controls-time">{{ videoDurationText }}</span>\n\t\t\t</div>\n\t\t</div>\n\t`};const Ot={name:"MediaDetail",components:{DateGroup:Et,MediaDetailItem:Nt,DetailEmptyState:Lt,SidebarDetail:vt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.media)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-file-media-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<div class="bx-im-sidebar-file-media-detail__items-group">\n\t\t\t\t\t<MediaDetailItem\n\t\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.media"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const Gt=d.BitrixVue.cloneComponent(c.AudioPlayer,{name:"SidebarAudioPlayer",components:{Avatar:C.Avatar},props:{file:{type:Object,required:true},authorId:{type:Number,required:true},timelineType:{type:Number,required:true}},data(){return{...this.parentData(),showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,fileSize(){return k.Utils.file.formatFileSize(this.file.size)},fileAuthorDialogId(){return this.authorId.toString()},progressPosition(){if(!this.loaded||this.state===c.AudioPlayerState.none){return{width:"100%"}}return{width:`${this.progressInPixel}px`}},activeTimelineStyles(){const t=44;const e=19;const i=this.timelineType*t+e;return{...this.progressPosition,"background-position-y":`-${i}px`}},timelineStyles(){const t=44;const e=this.timelineType*t;return{"background-position-y":`-${e}px`}}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-audio-player__container bx-im-sidebar-audio-player__scope" \n\t\t\tref="body"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-audio-player__control-container">\n\t\t\t\t<button :class="['bx-im-sidebar-audio-player__control-button', {\n\t\t\t\t\t'bx-im-sidebar-audio-player__control-loader': loading,\n\t\t\t\t\t'bx-im-sidebar-audio-player__control-play': !loading && state !== State.play,\n\t\t\t\t\t'bx-im-sidebar-audio-player__control-pause': !loading && state === State.play,\n\t\t\t\t}]" @click="clickToButton"></button>\n\t\t\t\t<div class="bx-im-sidebar-audio-player__author-avatar-container">\n\t\t\t\t\t<Avatar :dialogId="fileAuthorDialogId" :withStatus="false" :size="AvatarSize.XS"></Avatar>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-audio-player__timeline-container">\n\t\t\t\t<div class="bx-im-sidebar-audio-player__track-container" @click="setPosition" ref="track">\n\t\t\t\t\t<div class="bx-im-sidebar-audio-player__track-mask" :style="timelineStyles"></div>\n\t\t\t\t\t<div class="bx-im-sidebar-audio-player__track-mask --active" :style="activeTimelineStyles"></div>\n\t\t\t\t\t<div class="bx-im-sidebar-audio-player__track-seek" :style="seekPosition"></div>\n\t\t\t\t\t<div class="bx-im-sidebar-audio-player__track-event" @mousemove="seeking"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-audio-player__timer-container">\n\t\t\t\t\t{{fileSize}}, {{labelTime}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon bx-im-sidebar-audio-player__context-menu-button"\n\t\t\t\t@click="$emit('contextMenuClick', $event)"\n\t\t\t></button>\n\t\t\t<audio \n\t\t\t\tv-if="src" \n\t\t\t\t:src="src" \n\t\t\t\tclass="bx-im-sidebar-audio-player__audio-source" \n\t\t\t\tref="source" \n\t\t\t\t:preload="preload"\n\t\t\t\t@abort="audioEventRouter('abort', $event)"\n\t\t\t\t@error="audioEventRouter('error', $event)"\n\t\t\t\t@suspend="audioEventRouter('suspend', $event)"\n\t\t\t\t@canplay="audioEventRouter('canplay', $event)"\n\t\t\t\t@canplaythrough="audioEventRouter('canplaythrough', $event)"\n\t\t\t\t@durationchange="audioEventRouter('durationchange', $event)"\n\t\t\t\t@loadeddata="audioEventRouter('loadeddata', $event)"\n\t\t\t\t@loadedmetadata="audioEventRouter('loadedmetadata', $event)"\n\t\t\t\t@timeupdate="audioEventRouter('timeupdate', $event)"\n\t\t\t\t@play="audioEventRouter('play', $event)"\n\t\t\t\t@playing="audioEventRouter('playing', $event)"\n\t\t\t\t@pause="audioEventRouter('pause', $event)"\n\t\t\t></audio>\n\t\t</div>\n\t`});const qt={name:"AudioDetailItem",components:{SidebarAudioPlayer:Gt,Avatar:C.Avatar},props:{id:{type:Number,required:true},fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{timelineType:0}},computed:{AvatarSize:()=>C.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},audioUrl(){return this.file.urlDownload}},created(){this.timelineType=Math.floor(Math.random()*5)},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div class="bx-im-sidebar-file-audio-detail-item__container bx-im-sidebar-file-audio-detail-item__scope">\n\t\t\t<SidebarAudioPlayer \n\t\t\t\t:id="id"\n\t\t\t\t:src="audioUrl" \n\t\t\t\t:file="file" \n\t\t\t\t:timelineType="timelineType" \n\t\t\t\t:authorId="sidebarFileItem.authorId" \n\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t/>\n\t\t</div>\n\t`};const zt={name:"AudioDetail",components:{DetailEmptyState:Lt,AudioDetailItem:qt,DateGroup:Et,SidebarDetail:vt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.audio)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-file-audio-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<AudioDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:id="file.id"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.audio"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const Xt={name:"DocumentDetailItem",components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle},props:{fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},fileIconClass(){return`ui-icon ui-icon-file-${this.file.icon}`},fileShortName(){const t=21;return k.Utils.file.getShortFileName(this.file.name,t)},fileSize(){return k.Utils.file.formatFileSize(this.file.size)},viewerAttributes(){return k.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0},authorId(){return this.sidebarFileItem.authorId}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-document-detail-item__container bx-im-sidebar-file-document-detail-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\t\t\n\t\t>\n\t\t\t<div class="bx-im-sidebar-file-document-detail-item__icon-container">\n\t\t\t\t<div :class="fileIconClass"><i></i></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-file-document-detail-item__content-container" v-bind="viewerAttributes">\n\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__document-title" @click="download">\n\t\t\t\t\t\t<span class="bx-im-sidebar-file-document-detail-item__document-title-text">{{fileShortName}}</span>\n\t\t\t\t\t\t<span class="bx-im-sidebar-file-document-detail-item__document-size">{{fileSize}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__author-container">\n\t\t\t\t\t\t<template v-if="authorId > 0">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t:dialogId="authorId"\n\t\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\t\t:withStatus="false"\n\t\t\t\t\t\t\t\tclass="bx-im-sidebar-file-document-detail-item__author-avatar"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ChatTitle :dialogId="authorId" :showItsYou="false" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<span v-else class="bx-im-sidebar-file-document-detail-item__system-author-text">\n\t\t\t\t\t\t\t{{$Bitrix.Loc.getMessage('IM_SIDEBAR_SYSTEM_USER')}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Ht={name:"DocumentDetail",components:{DateGroup:Et,DocumentDetailItem:Xt,DetailEmptyState:Lt,SidebarDetail:vt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.document)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-file-document-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.document"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const jt={name:"OtherDetail",components:{DateGroup:Et,DocumentDetailItem:Xt,DetailEmptyState:Lt,SidebarDetail:vt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.other)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-file-other-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.other"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const Vt={name:"FilePreviewItem",props:{fileItem:{type:Object,required:true}},computed:{sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},previewImageStyles(){if(!this.hasPreview){return{}}return{backgroundImage:`url('${this.file.urlPreview}')`}},hasPreview(){return this.file.urlPreview!==""},fileShortName(){const t=25;return k.Utils.file.getShortFileName(this.file.name,t)},viewerAttributes(){return k.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isImage(){return this.file.type==="image"},isVideo(){return this.file.type==="video"},isAudio(){return this.file.type==="audio"},fileIconClass(){return`ui-icon ui-icon-file-${this.file.icon}`},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-preview-item__container bx-im-sidebar-file-preview-item__scope" \n\t\t\tv-bind="viewerAttributes" \n\t\t\t@click="download" \n\t\t\t:title="file.name"\n\t\t>\n\t\t\t<div v-if="isImage" class="bx-im-sidebar-file-preview-item__preview-box" :style="previewImageStyles"></div>\n\t\t\t<div \n\t\t\t\tv-else-if="isVideo" \n\t\t\t\tclass="bx-im-sidebar-file-preview-item__preview-box bx-im-sidebar-file-preview-item__preview-video-box"\n\t\t\t\t:style="previewImageStyles"\n\t\t\t>\n\t\t\t\t<video v-if="!hasPreview" class="bx-im-sidebar-file-preview-item__preview-video" preload="metadata" :src="file.urlDownload"></video>\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-video-play-button"></div>\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-video-play-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-else-if="isAudio" class="bx-im-sidebar-file-preview-item__preview-box">\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-audio-play-button"></div>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-sidebar-file-preview-item__preview-box">\n\t\t\t\t<div :class="fileIconClass"><i></i></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-file-preview-item__text">{{ fileShortName }}</div>\n\t\t</div>\n\t`};const Kt={name:"FilePreview",components:{DetailEmptyState:Lt,FilePreviewItem:Vt},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){if(this.isMigrationFinished){return this.$store.getters["sidebar/files/getLatest"](this.chatId)}return this.$store.getters["sidebar/files/getLatestUnsorted"](this.chatId)},hasFiles(){return this.files.length>0},isMigrationFinished(){return this.$store.state.sidebar.isFilesMigrated},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},methods:{onOpenDetail(){if(!this.hasFiles){return}const t=this.isMigrationFinished?B.SidebarBlock.file:B.SidebarBlock.fileUnsorted;const e=this.isMigrationFinished?B.SidebarDetailBlock.media:B.SidebarDetailBlock.fileUnsorted;this.$emit("openDetail",{block:t,detailBlock:e})}},template:`\n\t\t<div class="bx-im-sidebar-file-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-file-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-file-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-file-preview__header_container" \n\t\t\t\t\t:class="[hasFiles ? '--active': '']" \n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<span class="bx-im-sidebar-file-preview__title-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="hasFiles" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="hasFiles" class="bx-im-sidebar-file-preview__files-container">\n\t\t\t\t\t<FilePreviewItem v-for="file in files" :fileItem="file" />\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-else\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_AND_FILES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.media"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const Yt={name:"FileUnsortedDetail",components:{DateGroup:Et,DocumentDetailItem:Xt,DetailEmptyState:Lt,SidebarDetail:vt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.fileUnsorted)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-file-unsorted-detail__container bx-im-sidebar-file-unsorted-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.document"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};class Qt{constructor(){this.store=I.Core.getStore();this.restClient=I.Core.getRestClient()}delete({id:t,chatId:e}){this.store.dispatch("sidebar/tasks/delete",{chatId:e,id:t});const i={LINK_ID:t};this.restClient.callMethod(B.RestMethod.imChatTaskDelete,i).catch((t=>{console.error("Im.Sidebar: error deleting task",t)}))}}class Wt extends It{constructor(){super();this.id="im-sidebar-context-menu";this.taskManager=new Qt}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(T.Loc.getMessage("IM_SIDEBAR_MENU_COPY_TASK_LINK")),this.getDeleteItem()]}getDeleteItem(){return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_TASK_CONNECTION"),onclick:function(){this.taskManager.delete(this.context.task);this.menuInstance.close()}.bind(this)}}}const Jt={name:"TaskItem",components:{Avatar:C.Avatar,AvatarSize:C.AvatarSize},props:{task:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,taskItem(){return this.task},taskTitle(){return this.taskItem.task.title},taskAuthorDialogId(){return this.taskItem.task.creatorId.toString()},taskResponsibleDialogId(){return this.taskItem.task.responsibleId.toString()},taskDeadlineText(){const t=T.Type.isStringFilled(this.taskItem.task.state)?this.taskItem.task.state:this.taskItem.task.statusTitle;return k.Utils.text.convertHtmlEntities(t)},taskBackgroundColorClass(){if(this.taskItem.task.status===5){return"--completed"}return""},statusColorClass(){if(!this.taskItem.task.color||!h.LabelColor[this.taskItem.task.color.toUpperCase()]){return""}return`ui-label-${this.taskItem.task.color.toLowerCase()}`}},methods:{onTaskClick(){BX.SidePanel.Instance.open(this.taskItem.task.source,{cacheable:false})},onContextMenuClick(t){this.$emit("contextMenuClick",{task:this.taskItem,source:this.taskItem.task.source,messageId:this.taskItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-task-item__container bx-im-sidebar-task-item__scope" \n\t\t\t:class="taskBackgroundColorClass"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-task-item__content" @click="onTaskClick">\n\t\t\t\t<div class="bx-im-sidebar-task-item__header-text" :title="taskTitle">\n\t\t\t\t\t{{ taskTitle }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-task-item__detail-container">\n\t\t\t\t\t<Avatar :size="AvatarSize.XS" :dialogId="taskAuthorDialogId" />\n\t\t\t\t\t<div class="bx-im-sidebar-task-item__forward-small-icon bx-im-sidebar__forward-small-icon"></div>\n\t\t\t\t\t<Avatar :size="AvatarSize.XS" :dialogId="taskResponsibleDialogId" />\n\t\t\t\t\t<div class="bx-im-sidebar-task-item__status-text" :class="statusColorClass">\n\t\t\t\t\t\t{{taskDeadlineText}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Zt={name:"TaskPreview",components:{DetailEmptyState:Lt,TaskItem:Jt,Button:C.Button},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},emits:["openDetail"],data(){return{showAddButton:false}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,ButtonSize:()=>C.ButtonSize,ButtonColor:()=>C.ButtonColor,firstTask(){return this.$store.getters["sidebar/tasks/get"](this.chatId)[0]},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.contextMenu=new Wt},beforeUnmount(){this.contextMenu.destroy()},methods:{getEntityCreator(){if(!this.entityCreator){this.entityCreator=new D.EntityCreator(this.chatId)}return this.entityCreator},onAddClick(){this.getEntityCreator().createTaskForChat()},onOpenDetail(){if(!this.firstTask){return}this.$emit("openDetail",{block:B.SidebarBlock.task,detailBlock:B.SidebarDetailBlock.task})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<div class="bx-im-sidebar-task-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-task-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-task-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-task-preview__header_container"\n\t\t\t\t\t@mouseover="showAddButton = true"\n\t\t\t\t\t@mouseleave="showAddButton = false"\n\t\t\t\t\t:class="[firstTask ? '--active': '']"\n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-task-preview__title">\n\t\t\t\t\t\t<span class="bx-im-sidebar-task-preview__title-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_TASK_DETAIL_TITLE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div v-if="firstTask" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<transition name="add-button">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-if="showAddButton"\n\t\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-task-preview__title-button"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t\t<TaskItem v-if="firstTask" :task="firstTask" @contextMenuClick="onContextMenuClick"/>\n\t\t\t\t<DetailEmptyState \n\t\t\t\t\tv-else \n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.task"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const te={name:"TaskDetail",components:{TaskItem:Jt,DateGroup:Et,SidebarDetail:vt,DetailEmptyState:Lt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,tasks(){return this.$store.getters["sidebar/tasks/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.tasks)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Wt},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-task-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<TaskItem\n\t\t\t\t\tv-for="task in dateGroup.items"\n\t\t\t\t\t:task="task"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASKS_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.task"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const ee={name:"BriefItem",components:{Avatar:C.Avatar,ChatTitle:C.ChatTitle},props:{brief:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>C.AvatarSize,sidebarFileItem(){return this.brief},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},fileShortName(){const t=21;return k.Utils.file.getShortFileName(this.file.name,t)},fileSize(){return k.Utils.file.formatFileSize(this.file.size)},viewerAttributes(){return k.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-brief-item__container bx-im-sidebar-brief-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-brief-item__icon-container"></div>\n\t\t\t<div class="bx-im-sidebar-brief-item__content-container">\n\t\t\t\t<div class="bx-im-sidebar-brief-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-brief-item__title" @click="download" v-bind="viewerAttributes">\n\t\t\t\t\t\t<span class="bx-im-sidebar-brief-item__title-text" :title="file.name">{{fileShortName}}</span>\n\t\t\t\t\t\t<span class="bx-im-sidebar-brief-item__size-text">{{fileSize}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-brief-item__author-container">\n\t\t\t\t\t\t<Avatar \n\t\t\t\t\t\t\t:dialogId="sidebarFileItem.authorId" \n\t\t\t\t\t\t\t:size="AvatarSize.XS" \n\t\t\t\t\t\t\t:withStatus="false" \n\t\t\t\t\t\t\tclass="bx-im-sidebar-brief-item__author-avatar" \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatTitle :dialogId="sidebarFileItem.authorId" :showItsYou="false" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon bx-im-sidebar-brief-item__context-menu-button"\n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const ie={name:"BriefDetail",components:{DateGroup:Et,BriefItem:ee,SidebarDetail:vt,DetailEmptyState:Lt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.brief)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-brief-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle"/>\n\t\t\t\t<BriefItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:brief="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_BRIEFS_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.brief"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const se={name:"BriefPreview",components:{DetailEmptyState:Lt,BriefItem:ee},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},emits:["openDetail"],data(){return{showAddButton:false}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},firstBrief(){return this.$store.getters["sidebar/files/get"](this.chatId,B.SidebarFileTypes.brief)[0]}},created(){this.contextMenu=new Ut},beforeUnmount(){this.contextMenu.destroy()},methods:{onOpenDetail(){if(!this.firstBrief){return}this.$emit("openDetail",{block:B.SidebarBlock.brief,detailBlock:B.SidebarDetailBlock.brief})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<div class="bx-im-sidebar-brief-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-brief-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-brief-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-brief-preview__header_container" \n\t\t\t\t\t:class="[firstBrief ? '--active': '']" \n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<span class="bx-im-sidebar-brief-preview__title-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_BRIEF_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="firstBrief" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t</div>\n\t\t\t\t<BriefItem \n\t\t\t\t\tv-if="firstBrief" \n\t\t\t\t\t:brief="firstBrief"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t\t<DetailEmptyState \n\t\t\t\t\tv-else \n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_BRIEFS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.brief"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};class ne{constructor(){this.store=I.Core.getStore();this.restClient=I.Core.getRestClient()}delete({id:t,chatId:e}){this.store.dispatch("sidebar/meetings/delete",{chatId:e,id:t});const i={LINK_ID:t};this.restClient.callMethod(B.RestMethod.imChatCalendarDelete,i).catch((t=>{console.error("Im.Sidebar: error deleting meeting",t)}))}}class ae extends It{constructor(){super();this.id="im-sidebar-context-menu";this.meetingManager=new ne}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(T.Loc.getMessage("IM_SIDEBAR_MENU_COPY_MEETING_LINK")),this.getDeleteItem()]}getDeleteItem(){return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_MEETING_CONNECTION"),onclick:function(){this.meetingManager.delete(this.context.meeting);this.menuInstance.close()}.bind(this)}}}const re={name:"MeetingItem",props:{meeting:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{meetingItem(){return this.meeting},title(){return this.meetingItem.meeting.title},date(){const t=this.meetingItem.meeting.dateFrom;return _.DateFormatter.formatByTemplate(t,_.DateTemplate.meeting)},day(){return this.meetingItem.meeting.dateFrom.getDate().toString()},monthShort(){return f.DateTimeFormat.format("M",this.meetingItem.meeting.dateFrom)},isActive(){return this.meetingItem.meeting.dateFrom.getTime()>Date.now()}},methods:{onMeetingClick(){new(window.top.BX||window.BX).Calendar.SliderLoader(this.meetingItem.meeting.id).show()},onContextMenuClick(t){this.$emit("contextMenuClick",{meeting:this.meetingItem,source:this.meetingItem.meeting.source,messageId:this.meetingItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-meeting-item__container bx-im-sidebar-meeting-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass="bx-im-sidebar-meeting-item__icon-container"\n\t\t\t\t:class="[isActive ? '--active' : '--inactive']"\n\t\t\t>\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__day-text">{{ day }}</div>\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__month-text">{{ monthShort }}</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-meeting-item__content-container" @click="onMeetingClick">\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-item__title" :title="title">{{ title }}</div>\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-item__date">{{ date }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const oe={name:"MeetingPreview",components:{MeetingItem:re,DetailEmptyState:Lt,Button:C.Button},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},data(){return{showAddButton:false}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,ButtonSize:()=>C.ButtonSize,ButtonColor:()=>C.ButtonColor,firstMeeting(){return this.$store.getters["sidebar/meetings/get"](this.chatId)[0]},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.contextMenu=new ae},beforeUnmount(){this.contextMenu.destroy()},methods:{getEntityCreator(){if(!this.entityCreator){this.entityCreator=new D.EntityCreator(this.chatId)}return this.entityCreator},onAddClick(){this.getEntityCreator().createMeetingForChat()},onOpenDetail(){if(!this.firstMeeting){return}this.$emit("openDetail",{block:B.SidebarBlock.meeting,detailBlock:B.SidebarDetailBlock.meeting})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<div class="bx-im-sidebar-meeting-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-meeting-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-meeting-preview__container">\n\t\t\t\t<div\n\t\t\t\t\tclass="bx-im-sidebar-meeting-preview__header_container"\n\t\t\t\t\t@mouseover="showAddButton = true"\n\t\t\t\t\t@mouseleave="showAddButton = false"\n\t\t\t\t\t:class="[firstMeeting ? '--active': '']"\n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-preview__title">\n\t\t\t\t\t\t<span class="bx-im-sidebar-meeting-preview__title-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MEETING_DETAIL_TITLE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div v-if="firstMeeting" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<transition name="add-button">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-if="showAddButton"\n\t\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-meeting-preview__title-button"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t\t<MeetingItem v-if="firstMeeting" :meeting="firstMeeting" @contextMenuClick="onContextMenuClick"/>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-else\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETINGS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.meeting"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const le={name:"MeetingDetail",components:{MeetingItem:re,DateGroup:Et,SidebarDetail:vt,DetailEmptyState:Lt},props:{dialogId:{type:String,required:true},chatId:{type:Number,required:true},service:{type:Object,required:true}},computed:{SidebarDetailBlock:()=>B.SidebarDetailBlock,meetings(){return this.$store.getters["sidebar/meetings/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.meetings)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.collectionFormatter=new Dt;this.contextMenu=new ae},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onScroll(){this.contextMenu.destroy()},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<SidebarDetail\n\t\t\t:dialogId="dialogId"\n\t\t\t:chatId="chatId"\n\t\t\t:service="service"\n\t\t\t@scroll="onScroll"\n\t\t\tv-slot="slotProps"\n\t\t\tclass="bx-im-sidebar-meeting-detail__scope"\n\t\t>\n\t\t\t<template v-for="dateGroup in formattedCollection">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<MeetingItem\n\t\t\t\t\tv-for="meeting in dateGroup.items"\n\t\t\t\t\t:meeting="meeting"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!slotProps.isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETINGS_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.meeting"\n\t\t\t/>\n\t\t</SidebarDetail>\n\t`};const de={props:{isLoading:{type:Boolean,default:false}},template:`\n\t\t<div class="bx-im-sidebar-sign-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-sign-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-sign-preview__container" >\n\t\t\t\tSigned documents. Work in progress\n\t\t\t</div>\n\t\t</div>\n\t`};const ce={emits:["back"],data(){return{}},template:`\n\t\t<div>\n\t\t<div @click="$emit('back')" style="margin-bottom: 20px; cursor: pointer">&lt;- Back</div>\n\t\t\t<div v-for="i in 50">Sign {{ i }}</div>\n\t\t</div>\n\t`};const ue={name:"MarketPreviewItem",props:{item:{type:Object,required:true}},computed:{marketItem(){return this.item},iconClass(){return`fa ${this.marketItem.options.iconName}`},iconColor(){return this.marketItem.options.color}},template:`\n\t\t<div class="bx-im-sidebar-market-preview-item__container bx-im-sidebar-market-preview-item__scope">\n\t\t\t<div class="bx-im-sidebar-market-preview-item__icon-container" :style="{backgroundColor: iconColor}">\n\t\t\t\t<i :class="iconClass" aria-hidden="true"></i>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-market-preview-item__title-container" :title="marketItem.title">\n\t\t\t\t{{ marketItem.title }}\n\t\t\t</div>\n\t\t</div>\n\t`};const he={name:"MarketPreview",components:{MarketPreviewItem:ue},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},emits:["openDetail"],computed:{marketMenuItems(){return x.MarketManager.getInstance().getAvailablePlacementsByType(B.PlacementType.sidebar,this.dialogId)}},methods:{onMarketItemClick(t){this.$emit("openDetail",{block:B.SidebarBlock.meeting,detailBlock:B.SidebarDetailBlock.market,entityId:t})}},template:`\n\t\t<div v-if="!isLoading" class="bx-im-sidebar-market-preview__scope bx-im-sidebar-market-preview__container">\n\t\t\t<div class="bx-im-sidebar-market-preview__header_container">\n\t\t\t\t<div class="bx-im-sidebar-market-preview__title">\n\t\t\t\t\t<span class="bx-im-sidebar-market-preview__title-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MARKET_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MarketPreviewItem \n\t\t\t\tv-for="item in marketMenuItems" \n\t\t\t\t:key="item.id"\n\t\t\t\t:item="item"\n\t\t\t\t@click="onMarketItemClick(item.id)"\n\t\t\t/>\n\t\t</div>\n\t`};const me={name:"MarketDetail",components:{Spinner:C.Spinner},props:{detailBlockEntityId:{type:String,required:true},dialogId:{type:String,required:true}},data(){return{isLoading:true}},computed:{SpinnerSize:()=>C.SpinnerSize},created(){this.marketManager=x.MarketManager.getInstance()},mounted(){const t={dialogId:this.dialogId};this.marketManager.loadPlacement(this.detailBlockEntityId,t).then((t=>{this.isLoading=false;T.Runtime.html(this.$refs["im-messenger-sidebar-placement"],t)}))},template:`\n\t\t<div class="bx-im-sidebar-market-detail__container">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-market-detail__loader-container">\n\t\t\t\t<Spinner :size="SpinnerSize.S" />\n\t\t\t</div>\n\t\t\t<div ref="im-messenger-sidebar-placement"></div>\n\t\t</div>\n\t\t\n\t`};class ge extends M.RecentMenu{constructor(){super();this.id="im-sidebar-context-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:false}}getMenuItems(){return[this.getUnreadMessageItem(),this.getPinMessageItem(),this.getCallItem(),this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getAddMembersToChatItem(),this.getHideItem(),this.getLeaveItem()]}getOpenUserCalendarItem(){const t=this.store.getters["dialogues/isUser"](this.context.dialogId);if(!t){return null}const e=this.store.getters["users/get"](this.context.dialogId,true);if(e.bot){return null}const i=k.Utils.user.getCalendarLink(this.context.dialogId);return{text:T.Loc.getMessage("IM_LIB_MENU_OPEN_CALENDAR"),onclick:()=>{BX.SidePanel.Instance.open(i);this.menuInstance.close()}}}getAddMembersToChatItem(){const t=this.store.getters["dialogues/get"](this.context.dialogId,true);const e=this.store.getters["dialogues/getChatOption"](t.type,B.ChatOption.extend);if(!e){return null}return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_INVITE_MEMBERS"),onclick:()=>{this.emit(ge.events.onAddToChatShow);this.menuInstance.close()}}}getJoinChatItem(){const t=this.store.getters["dialogues/get"](this.context.dialogId);const e=t.type===B.DialogType.user;if(e){return null}return{text:T.Loc.getMessage("IM_SIDEBAR_MENU_JOIN_CHAT"),onclick:()=>{console.warn("sidebar menu: join chat is not implemented");this.menuInstance.close()}}}canShowFullMenu(t){const e=this.store.getters["recent/get"](t);return Boolean(e)}}ge.events={onAddToChatShow:"onAddToChatShow"};const pe={name:"SidebarHeader",components:{AddToChat:y.AddToChat},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true},chatId:{type:Number,required:true}},data(){return{showAddToChatPopup:false}},computed:{recentItem(){return this.$store.getters["recent/get"](this.dialogId,true)}},created(){this.contextMenu=new ge;this.contextMenu.subscribe(ge.events.onAddToChatShow,this.onAddChatShow)},beforeUnmount(){this.contextMenu.destroy();this.contextMenu.unsubscribe(ge.events.onAddToChatShow,this.onAddChatShow)},methods:{onAddChatShow(){this.showAddToChatPopup=true},onContextMenuClick(t){const e={dialogId:this.dialogId,...this.recentItem};this.contextMenu.openMenu(e,t.target)},onSidebarCloseClick(){S.EventEmitter.emit(B.EventType.sidebar.close)}},template:`\n\t\t<div class="bx-im-sidebar-header__container bx-im-sidebar-header__scope">\n\t\t\t<div class="bx-im-sidebar-header__title-container">\n\t\t\t\t<button \n\t\t\t\t\tclass="bx-im-sidebar-header__cross-icon bx-im-messenger__cross-icon" \n\t\t\t\t\t@click="onSidebarCloseClick"\n\t\t\t\t></button>\n\t\t\t\t<div class="bx-im-sidebar-header__title">{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_HEADER_TITLE') }}</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclass="bx-im-sidebar-header__context-menu-icon bx-im-messenger__context-menu-icon"\n\t\t\t\t@click="onContextMenuClick"\n\t\t\t\tref="context-menu"\n\t\t\t></button>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['context-menu'] || {}"\n\t\t\t\t:chatId="chatId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 0, offsetLeft: -420}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const be={name:"DetailHeader",components:{ChatButton:C.Button,AddToChat:y.AddToChat},props:{detailBlock:{type:String,required:true},dialogId:{type:String,required:true},chatId:{type:Number,required:true}},emits:["back"],data(){return{showAddToChatPopup:false}},computed:{ButtonSize:()=>C.ButtonSize,ButtonColor:()=>C.ButtonColor,needAddButton(){const t=[B.SidebarDetailBlock.main,B.SidebarDetailBlock.task,B.SidebarDetailBlock.meeting];if(this.detailBlock===B.SidebarDetailBlock.main){return this.$store.getters["dialogues/getChatOption"](this.dialog.type,B.ChatOption.extend)}return t.includes(this.detailBlock)},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},title(){if(this.detailBlock===B.SidebarDetailBlock.main){let t=this.dialog.userCounter;if(t>=1e3){t=`${Math.floor(t/1e3)}k`}return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MAIN_DETAIL_TITLE").replace("#NUMBER#",t)}if(Object.values(B.SidebarFileTabTypes).includes(this.detailBlock)){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MEDIA_DETAIL_TITLE")}const t=`IM_SIDEBAR_${this.detailBlock.toUpperCase()}_DETAIL_TITLE`;return this.$Bitrix.Loc.getMessage(t)}},created(){this.entityCreator=new D.EntityCreator(this.chatId)},methods:{onSearchClick(){console.warn("onSearchClick")},onAddClick(){if(!this.needAddButton){return}switch(this.detailBlock){case B.SidebarDetailBlock.meeting:{this.entityCreator.createMeetingForChat();break}case B.SidebarDetailBlock.task:{this.entityCreator.createTaskForChat();break}case B.SidebarDetailBlock.main:{this.showAddToChatPopup=true;break}default:break}}},template:`\n\t\t<div class="bx-im-sidebar-detail-header__container bx-im-sidebar-detail-header__scope">\n\t\t\t<div class="bx-im-sidebar-detail-header__title-container">\n\t\t\t\t<button class="bx-im-sidebar__back-icon" @click="$emit('back')"></button>\n\t\t\t\t<div class="bx-im-sidebar-detail-header__title-text">{{ title }}</div>\n\t\t\t\t<div class="bx-im-sidebar-detail-header__add-button" ref="add-members">\n\t\t\t\t\t<ChatButton\n\t\t\t\t\t\tv-if="needAddButton"\n\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\x3c!--\t\t\t<button--\x3e\n\x3c!--\t\t\t\tclass="bx-im-sidebar-detail-header__search-button bx-im-sidebar__search-icon"--\x3e\n\x3c!--\t\t\t\t@click="onSearchClick"--\x3e\n\x3c!--\t\t\t>--\x3e\n\x3c!--\t\t\t</button>--\x3e\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:chatId="chatId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 15, offsetLeft: -300}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const ve=50;const Ie={name:"DetailTabs",props:{tabs:{type:Array,default:()=>[]}},data(){return{hasLeftControl:false,hasRightControl:false,currentElementIndex:0,highlightOffsetLeft:0,highlightWidth:0}},computed:{highlightStyle(){return{left:`${this.highlightOffsetLeft}px`,width:`${this.highlightWidth}px`}}},watch:{currentElementIndex(t){this.updateHighlightPosition(t);this.$emit("tabSelect",this.tabs[t]);this.scrollToElement(t)}},mounted(){if(this.$refs.tabs.scrollWidth>this.$refs.tabs.offsetWidth){this.hasRightControl=true}this.updateHighlightPosition(this.currentElementIndex)},methods:{getElementNodeByIndex(t){return[...this.$refs.tabs.children].filter((t=>!T.Dom.hasClass(t,"bx-sidebar-tabs-highlight")))[t]},updateHighlightPosition(t){const e=this.getElementNodeByIndex(t);this.highlightOffsetLeft=e.offsetLeft;this.highlightWidth=e.offsetWidth},scrollToElement(t){const e=this.getElementNodeByIndex(t);this.$refs.tabs.scroll({left:e.offsetLeft-ve,behavior:"smooth"})},onTabClick(t){this.currentElementIndex=t.index},getTabTitle(t){const e=`IM_SIDEBAR_FILES_${t.toUpperCase()}_TAB`;return this.$Bitrix.Loc.getMessage(e)},isSelectedTab(t){return t===this.currentElementIndex},onLeftClick(){if(this.currentElementIndex<=0){return}this.currentElementIndex--},onRightClick(){if(this.currentElementIndex>=this.tabs.length-1){return}this.currentElementIndex++},updateControlsVisibility(){this.hasRightControl=this.$refs.tabs.scrollWidth>this.$refs.tabs.scrollLeft+this.$refs.tabs.clientWidth;this.hasLeftControl=this.$refs.tabs.scrollLeft>0}},template:`\n\t\t<div class="bx-im-sidebar-detail-tabs__container bx-im-sidebar-detail-tabs__scope">\n\t\t\t<div v-if="hasLeftControl" @click.stop="onLeftClick" class="bx-im-sidebar-ears__control --left">\n\t\t\t\t<div class="bx-im-sidebar__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-if="hasRightControl" @click.stop="onRightClick" class="bx-im-sidebar-ears__control --right">\n\t\t\t\t<div class="bx-im-sidebar__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-ears__elements" ref="tabs" @scroll.passive="updateControlsVisibility">\n\t\t\t\t<div class="bx-sidebar-tabs-highlight" :style="highlightStyle"></div>\n\t\t\t\t<div\n\t\t\t\t\tv-for="(tab, index) in tabs"\n\t\t\t\t\t:key="tab"\n\t\t\t\t\tclass="bx-im-sidebar-detail-tabs__item"\n\t\t\t\t\t:class="[isSelectedTab(index) ? '--selected' : '']"\n\t\t\t\t\t@click="onTabClick({index: index})"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-detail-tabs__item-title">{{ getTabTitle(tab) }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const fe={name:"ChatSidebar",components:{DetailHeader:be,DetailTabs:Ie,SidebarHeader:pe,MainDetail:_t,MainPreview:kt,InfoPreview:Bt,LinkDetail:At,FavoriteDetail:Rt,MediaDetail:Ot,AudioDetail:zt,DocumentDetail:Ht,OtherDetail:jt,FilePreview:Kt,TaskPreview:Zt,TaskDetail:te,BriefDetail:ie,BriefPreview:se,MeetingPreview:oe,MeetingDetail:le,SignPreview:de,SignDetail:ce,FileUnsortedDetail:Yt,FileUnsortedPreview:Kt,MarketPreview:he,MarketDetail:me},props:{dialogId:{type:String,required:true},sidebarDetailBlock:{type:String,default:null}},emits:["back"],data(){return{isLoading:false,detailBlock:null,detailBlockEntityId:null,detailTransition:"right-panel-detail-transition"}},computed:{blocks(){return this.availabilityManager.getBlocks()},hasInitialData(){return this.$store.getters["sidebar/isInited"](this.chatId)},detailComponent(){if(!this.detailBlock){return null}return`${this.detailBlock}Detail`},getBlockServiceInstance(){return this.sidebarService.getBlockInstance(this.detailBlock)},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},dialogInited(){return this.dialog.inited},tabs(){if(B.SidebarFileTabTypes[this.detailBlock]){return Object.values(B.SidebarFileTabTypes)}return[]}},watch:{sidebarDetailBlock(t,e){if(!e&&t){this.detailBlock=t}},dialogInited(t,e){if(t===true&&e===false){this.initializeSidebar()}}},created(){e.Logger.warn("Sidebar: Chat Sidebar created");this.settingsManager=new W;this.availabilityManager=new ot(this.settingsManager,this.dialogId);this.sidebarService=new pt(this.availabilityManager);this.initializeSidebar()},mounted(){if(this.sidebarDetailBlock){this.detailBlock=this.sidebarDetailBlock;this.detailTransition=""}},methods:{initializeSidebar(){if(this.hasInitialData){return}this.isLoading=true;if(!this.dialogInited){return}this.sidebarService.setChatId(this.chatId);this.sidebarService.setDialogId(this.dialogId);this.sidebarService.requestInitialData().then((()=>{this.isLoading=false}))},onOpenDetail(t){const{detailBlock:e,entityId:i=""}=t;this.detailBlock=e;this.detailBlockEntityId=i.toString()},getPreviewComponentName(t){return`${t}Preview`},onClickBack(){this.detailBlock=null;this.detailTransition="right-panel-detail-transition";this.$emit("back")},onTabSelect(t){this.detailBlock=t}},template:`\n\t\t<SidebarHeader :isLoading="isLoading" :dialogId="dialogId" :chatId="chatId" />\n\t\t<div class="bx-im-sidebar__container bx-im-sidebar__scope">\n\t\t\t<component\n\t\t\t\tv-for="block in blocks"\n\t\t\t\t:key="block"\n\t\t\t\tclass="bx-im-sidebar__box"\n\t\t\t\t:is="getPreviewComponentName(block)"\n\t\t\t\t:isLoading="isLoading"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t@openDetail="onOpenDetail"\n\t\t\t/>\n\t\t</div>\n\t\t<transition :name="detailTransition">\n\t\t\t<div v-if="detailComponent && dialogInited" class="bx-im-sidebar__detail_container bx-im-sidebar__scope">\n\t\t\t\t<DetailHeader :detailBlock="detailBlock" :dialogId="dialogId" :chatId="chatId" @back="onClickBack"/>\n\t\t\t\t<DetailTabs v-if="tabs.length > 0" :tabs="tabs" @tabSelect="onTabSelect" />\n\t\t\t\t<component\n\t\t\t\t\t:is="detailComponent"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t:chatId="chatId"\n\t\t\t\t\t:detailBlock="detailBlock"\n\t\t\t\t\t:detailBlockEntityId="detailBlockEntityId"\n\t\t\t\t\t:service="getBlockServiceInstance"\n\t\t\t\t\t@back="onClickBack"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</transition> \n\t`};t.ChatSidebar=fe})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Vue3.Directives,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Vue3.Components,BX.Vue3,BX.Vue3.Components,BX.UI.Viewer,BX.UI,BX,BX.Messenger.v2.Model,BX,BX,BX.Vue3.Vuex,BX.Messenger.v2.Application,BX.Main,BX.Im.V2.Lib,BX.Messenger.v2.Lib,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.EntitySelector,BX);
//# sourceMappingURL=sidebar.bundle.map.js