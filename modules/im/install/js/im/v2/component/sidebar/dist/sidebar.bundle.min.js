this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,i,s,n,a,r,o,l,d,c,h,u,m,g,p,v,b,I,f,_,x,M,S,C,k,L,T,y,B,E,D,P,w){"use strict";function A(t){const e=D.Core.getStore().getters["chats/get"](t,true);return e.chatId}function F(t,e="ASC"){if(t.length===0){return null}t.sort(((t,i)=>{if(e==="ASC"){return t.id-i.id}return i.id-t.id}));const[i]=t;if(C.Type.isNumber(i.id)){return i.id}return null}const R=50;class N{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imChatFavoriteCounterGet]:{chat_id:this.chatId},[P.RestMethod.imChatFavoriteGet]:{chat_id:this.chatId,limit:R}}}getResponseHandler(){return t=>{if(!t[P.RestMethod.imChatFavoriteCounterGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=t[P.RestMethod.imChatFavoriteCounterGet];const i=this.store.dispatch("sidebar/favorites/setCounter",{chatId:this.chatId,counter:e.counter});const s=this.handleResponse(t[P.RestMethod.imChatFavoriteGet]);return Promise.all([i,s])}}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:R};const e=this.store.getters["sidebar/favorites/getLastId"](this.chatId);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(P.RestMethod.imChatFavoriteGet,t).then((t=>this.handleResponse(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imChatFavoriteGet: page request error",t)}))}handleResponse(t){return this.updateModels(t)}updateModels(t){const{list:e=[],users:i=[],files:s=[]}=t;const n=this.userManager.setUsersToModel(i);const a=e.map((t=>t.message));const r=e.length===R;const o=F(e);const l=this.store.dispatch("files/set",s);const d=this.store.dispatch("messages/store",a);const c=this.store.dispatch("sidebar/favorites/set",{chatId:this.chatId,favorites:e,hasNextPage:r,lastId:o});return Promise.all([l,d,c,n])}}class U{constructor(){this.settings=C.Extension.getSettings("im.v2.component.sidebar");this.saveSettings()}async saveSettings(){await D.Core.ready();void D.Core.getStore().dispatch("sidebar/setFilesMigrated",this.settings.get("filesMigrated",false));void D.Core.getStore().dispatch("sidebar/setLinksMigrated",this.settings.get("linksAvailable",false))}canShowBriefs(){return this.settings.get("canShowBriefs",false)}isLinksMigrationFinished(){return D.Core.getStore().state.sidebar.isLinksMigrated}isFileMigrationFinished(){return D.Core.getStore().state.sidebar.isFilesMigrated}}const $=Object.freeze({[P.MainPanelBlock.chat]:10,[P.MainPanelBlock.user]:10,[P.MainPanelBlock.info]:20,[P.MainPanelBlock.file]:30,[P.MainPanelBlock.fileUnsorted]:30,[P.MainPanelBlock.task]:40,[P.MainPanelBlock.meeting]:50,[P.MainPanelBlock.market]:60});const H=new U;function O(t){const e=Object.values(P.MainPanelBlock);const i=G(t,e);return z(i)}function G(t,e){const i=new Set(e);if(X(t)){i.delete(P.MainPanelBlock.user)}else{i.delete(P.MainPanelBlock.chat)}if(V()){i.delete(P.MainPanelBlock.fileUnsorted)}else{i.delete(P.MainPanelBlock.file)}if(!Q(t)){i.delete(P.MainPanelBlock.market)}if(q(t)){i.delete(P.MainPanelBlock.task);i.delete(P.MainPanelBlock.meeting)}return[...i]}function z(t){return[...t].sort(((t,e)=>$[t]-$[e]))}function q(t){const e=D.Core.getStore().getters["users/get"](t);return(e==null?void 0:e.bot)===true}function X(t){return t.startsWith("chat")}function V(){return H.isFileMigrationFinished()}function Q(t){return p.MarketManager.getInstance().getAvailablePlacementsByType(P.PlacementType.sidebar,t).length>0}const K=50;class j{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imChatUrlCounterGet]:{chat_id:this.chatId},[P.RestMethod.imChatUrlGet]:{chat_id:this.chatId,limit:K}}}getResponseHandler(){return t=>{if(!t[P.RestMethod.imChatUrlCounterGet]||!t[P.RestMethod.imChatUrlGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.handleUrlGetResponse(t[P.RestMethod.imChatUrlGet]);const i=this.handleCounterGetResponse(t[P.RestMethod.imChatUrlCounterGet]);return Promise.all([e,i])}}loadNextPage(){const t=this.getLinksCountFromModel();if(t===0){return Promise.resolve()}const e=this.getQueryParams(t);return this.requestPage(e)}getQueryParams(t=0){const e={CHAT_ID:this.chatId,LIMIT:K};if(C.Type.isNumber(t)&&t>0){e.OFFSET=t}return e}requestPage(t){return this.restClient.callMethod(P.RestMethod.imChatUrlGet,t).then((t=>this.handleUrlGetResponse(t.data()))).catch((t=>{console.error("SidebarInfo: Im.chatUrlList: page request error",t)}))}handleUrlGetResponse(t){const{list:e,users:i}=t;const s=this.userManager.setUsersToModel(i);const n=this.store.dispatch("sidebar/links/set",{chatId:this.chatId,links:e,hasNextPage:e.length===K});return Promise.all([n,s])}handleCounterGetResponse(t){const e=t.counter;return this.store.dispatch("sidebar/links/setCounter",{chatId:this.chatId,counter:e})}getLinksCountFromModel(){return this.store.getters["sidebar/links/getSize"](this.chatId)}}const Y=50;class W{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imChatFileCollectionGet]:{chat_id:this.chatId,limit:Y}}}getResponseHandler(){return t=>{if(!t[P.RestMethod.imChatFileCollectionGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[P.RestMethod.imChatFileCollectionGet])}}updateModels(t){const{list:e,users:i,files:s}=t;const n=this.userManager.setUsersToModel(i);const a=this.store.dispatch("files/set",s);const r={};e.forEach((t=>{if(!r[t.subType]){r[t.subType]=[]}r[t.subType].push(t)}));const o=[];Object.keys(r).forEach((t=>{const e=r[t];o.push(this.store.dispatch("sidebar/files/set",{chatId:this.chatId,files:e,subType:t}),this.store.dispatch("sidebar/files/setHasNextPage",{chatId:this.chatId,subType:t,hasNextPage:e.length===Y}),this.store.dispatch("sidebar/files/setLastId",{chatId:this.chatId,subType:t,lastId:F(e)}))}));return Promise.all([a,n,...o])}loadFirstPage(t){return this.loadFirstPageBySubType(t)}loadNextPage(t){return this.loadNextPageBySubType(t)}loadFirstPageBySubType(t){const e=this.getFilesCountFromModel(t);if(e>Y){return Promise.resolve()}const i=this.getQueryParams(t);return this.requestPage(i)}loadNextPageBySubType(t){const e=this.getQueryParams(t);return this.requestPage(e)}getQueryParams(t){const e={CHAT_ID:this.chatId,SUBTYPE:t,LIMIT:Y};const i=this.store.getters["sidebar/files/getLastId"](this.chatId,t);if(i>0){e.LAST_ID=i}return e}requestPage(t){return this.restClient.callMethod(P.RestMethod.imChatFileGet,t).then((t=>this.updateModels(t.data()))).catch((t=>{console.error("SidebarInfo: imChatFileGet: page request error",t)}))}getFilesCountFromModel(t){return this.store.getters["sidebar/files/getSize"](this.chatId,t)}}const J=50;class Z{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imChatTaskGet]:{chat_id:this.chatId,limit:J}}}getResponseHandler(){return t=>{if(!t[P.RestMethod.imChatTaskGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[P.RestMethod.imChatTaskGet])}}loadFirstPage(){const t=this.getTasksCountFromModel();if(t>J){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:J};const e=this.store.getters["sidebar/tasks/getLastId"](this.chatId);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(P.RestMethod.imChatTaskGet,t).then((t=>this.updateModels(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imChatFavoriteGet: page request error",t)}))}updateModels(t){const{list:e,users:i}=t;const s=e.length===J;const n=F(e);const a=this.userManager.setUsersToModel(i);const r=this.store.dispatch("sidebar/tasks/set",{chatId:this.chatId,tasks:e,hasNextPage:s,lastId:n});return Promise.all([r,a])}getTasksCountFromModel(){return this.store.getters["sidebar/tasks/getSize"](this.chatId)}}const tt=50;class et{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imChatCalendarGet]:{chat_id:this.chatId,limit:tt}}}getResponseHandler(){return t=>{if(!t[P.RestMethod.imChatCalendarGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[P.RestMethod.imChatCalendarGet])}}loadFirstPage(){const t=this.getMeetingsCountFromState();if(t>tt){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:tt};const e=this.store.getters["sidebar/meetings/getLastId"](this.chatId);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(P.RestMethod.imChatCalendarGet,t).then((t=>this.updateModels(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imChatCalendarGet: page request error",t)}))}updateModels(t){const{list:e,users:i}=t;const s=e.length===tt;const n=F(e);const a=this.userManager.setUsersToModel(i);const r=this.store.dispatch("sidebar/meetings/set",{chatId:this.chatId,meetings:e,hasNextPage:s,lastId:n});return Promise.all([r,a])}getMeetingsCountFromState(){return this.store.getters["sidebar/meetings/getSize"](this.chatId)}}const it=50;class st{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imDialogUsersList]:{dialog_id:this.dialogId,limit:it}}}loadFirstPage(){const t=this.getMembersCountFromModel();if(t>it){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){return{DIALOG_ID:this.dialogId,LIMIT:it,LAST_ID:this.store.getters["sidebar/members/getLastId"](this.chatId)}}async requestPage(t){let e=[];try{const i=await this.restClient.callMethod(P.RestMethod.imDialogUsersList,t);e=i.data()}catch(t){console.error("SidebarMain: Im.DialogUsersList: page request error",t)}return this.updateModels(e)}getResponseHandler(){return t=>this.updateModels(t[P.RestMethod.imDialogUsersList])}updateModels(t){const e=[];const i=this.userManager.setUsersToModel(t);t.forEach((t=>{e.push(t.id)}));const s=this.store.dispatch("sidebar/members/set",{chatId:this.chatId,users:e,lastId:F(t,"DESC"),hasNextPage:t.length===it});return Promise.all([i,s])}getMembersCountFromModel(){return this.store.getters["sidebar/members/getSize"](this.chatId)}}const nt=50;class at{constructor({dialogId:t}){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=this.getChatId();this.userManager=new w.UserManager}getInitialQuery(){return{[P.RestMethod.imDiskFolderListGet]:{chat_id:this.chatId,limit:nt}}}getResponseHandler(){return t=>{if(!t[P.RestMethod.imDiskFolderListGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[P.RestMethod.imDiskFolderListGet])}}loadFirstPage(){const t=this.getFilesCountFromModel(P.SidebarDetailBlock.fileUnsorted);if(t>nt){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:nt};const e=this.store.getters["sidebar/files/getLastId"](this.chatId,P.SidebarDetailBlock.fileUnsorted);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(P.RestMethod.imDiskFolderListGet,t).then((t=>this.handleResponse(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imDiskFolderListGet: page request error",t)}))}handleResponse(t){const e=t;if(e.files.length<nt){this.hasMoreItemsToLoad=false}const i=F(e.files);if(i){this.lastId=i}return this.updateModels(e)}updateModels(t){const{users:e,files:i}=t;const s=i.map((t=>({...t,subType:P.SidebarDetailBlock.fileUnsorted})));const n=this.userManager.setUsersToModel(e);const a=this.store.dispatch("files/set",s);const r=this.store.dispatch("sidebar/files/set",{chatId:this.chatId,files:s,subType:P.SidebarDetailBlock.fileUnsorted});const o=this.store.dispatch("sidebar/files/setHasNextPage",{chatId:this.chatId,subType:P.SidebarDetailBlock.fileUnsorted,hasNextPage:s.length===nt});const l=this.store.dispatch("sidebar/files/setLastId",{chatId:this.chatId,subType:P.SidebarDetailBlock.fileUnsorted,lastId:F(s)});return Promise.all([a,r,n,o,l])}getFilesCountFromModel(t){return this.store.getters["sidebar/files/getSize"](this.chatId,t)}getChatId(){const t=this.store.getters["chats/get"](this.dialogId,true);return t.chatId}}const rt={Members:st,Favorite:N,Link:j,Task:Z,File:W,Meeting:et,FileUnsorted:at};const ot=Object.freeze({[P.MainPanelBlock.chat]:[P.SidebarDetailBlock.members],[P.MainPanelBlock.info]:[P.SidebarDetailBlock.favorite,P.SidebarDetailBlock.link],[P.MainPanelBlock.file]:[P.SidebarDetailBlock.file],[P.MainPanelBlock.fileUnsorted]:[P.SidebarDetailBlock.fileUnsorted],[P.MainPanelBlock.task]:[P.SidebarDetailBlock.task],[P.MainPanelBlock.meeting]:[P.SidebarDetailBlock.meeting]});class lt{constructor({dialogId:t}){this.blockServices=[];this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.buildBlocks()}async requestInitialData(){const t=this.getInitialQuery();const e=await i.callBatch(t);return this.handleBatchRequestResult(e)}buildBlocks(){const t=this.getServiceClassesForBlocks();this.blockServices=t.map((t=>{const e=new rt[t]({dialogId:this.dialogId});return{initialQuery:e.getInitialQuery(),responseHandler:e.getResponseHandler()}}))}getServiceClassesForBlocks(){const t=[];const e=O(this.dialogId);e.forEach((e=>{const i=ot[e];if(i){t.push(...i)}}));return t.map((t=>C.Text.capitalize(t)))}getInitialQuery(){let t={};this.blockServices.forEach((e=>{t=Object.assign(t,e.initialQuery)}));return t}handleBatchRequestResult(t){const e=[];this.blockServices.forEach((i=>{e.push(i.responseHandler(t))}));return Promise.all(e).then((()=>this.setInited())).catch((t=>console.error(t)))}setInited(){return this.store.dispatch("sidebar/setInited",A(this.dialogId))}}const dt=25;const ct={name:"InfoPreview",directives:{hint:o.hint},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},data(){return{expanded:false}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isUser(){return this.dialog.type===P.ChatType.user},isBot(){const t=this.$store.getters["users/get"](this.dialogId,true);return t.bot===true},previewDescription(){if(this.dialog.description.length===0){return this.chatTypeText}if(this.dialog.description.length>dt){return`${this.dialog.description.slice(0,dt)}...`}return this.dialog.description},descriptionToShow(){const t=this.expanded?this.dialog.description:this.previewDescription;return k.Parser.purifyText(t)},chatTypeText(){if(this.isBot){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_BOT")}if(this.isUser){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_USER")}return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_GROUP_V2")},showExpandButton(){if(this.expanded){return false}return this.dialog.description.length>=dt},favoriteCounter(){const t=this.$store.getters["sidebar/favorites/getCounter"](this.chatId);return this.getCounterString(t)},urlCounter(){const t=this.$store.getters["sidebar/links/getCounter"](this.chatId);return this.getCounterString(t)},isLinksAvailable(){return this.$store.state.sidebar.isLinksMigrated},hintDirectiveContent(){return{text:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_LINKS_NOT_AVAILABLE"),popupOptions:{angle:true,targetContainer:document.body,offsetLeft:141,offsetTop:-10,bindOptions:{position:"top"}}}},chatId(){return this.dialog.chatId}},methods:{getCounterString(t){const e=100;if(t>=e){return"99+"}return t.toString()},onFavouriteClick(){T.EventEmitter.emit(P.EventType.sidebar.open,{panel:P.SidebarDetailBlock.favorite,dialogId:this.dialogId})},onLinkClick(){if(!this.isLinksAvailable){return}T.EventEmitter.emit(P.EventType.sidebar.open,{panel:P.SidebarDetailBlock.link,dialogId:this.dialogId})}},template:`\n\t\t<div class="bx-im-sidebar-info-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-info-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-info-preview__container" :class="[expanded ? '--expanded' : '']">\n\t\t\t\t<div class="bx-im-sidebar-info-preview__description-container">\n\t\t\t\t\t<div class="bx-im-sidebar-info-preview__description-text-container" :class="[expanded ? '--expanded' : '']">\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__description-icon bx-im-sidebar-info-preview__item-icon"></div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__description-text">\n\t\t\t\t\t\t\t{{descriptionToShow}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tv-if="showExpandButton"\n\t\t\t\t\t\tclass="bx-im-sidebar-info-preview__show-description-button"\n\t\t\t\t\t\t@click="expanded = !expanded"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_CHAT_DESCRIPTION_SHOW') }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-info-preview__items-container">\n\t\t\t\t\t<div class="bx-im-sidebar-info-preview__item-container" @click="onFavouriteClick">\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-container">\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__favorite-icon bx-im-sidebar-info-preview__item-icon"></div>\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-text">\n\t\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITE_DETAIL_TITLE') }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__counter-container">\n\t\t\t\t\t\t\t<span class="bx-im-sidebar-info-preview__counter">{{favoriteCounter}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div \n\t\t\t\t\t\tclass="bx-im-sidebar-info-preview__item-container" \n\t\t\t\t\t\t:class="[isLinksAvailable ? '' : '--links-not-active']"\n\t\t\t\t\t\t@click="onLinkClick"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tv-if="!isLinksAvailable" \n\t\t\t\t\t\t\tclass="bx-im-sidebar-info-preview__hint-not-active" \n\t\t\t\t\t\t\tv-hint="hintDirectiveContent"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-container">\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__link-icon bx-im-sidebar-info-preview__item-icon"></div>\n\t\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__title-text">\n\t\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_LINK_DETAIL_TITLE') }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-sidebar-info-preview__counter-container">\n\t\t\t\t\t\t\t<span class="bx-im-sidebar-info-preview__counter">{{urlCounter}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ht={name:"FilePreviewItem",directives:{lazyload:s.lazyload},props:{fileItem:{type:Object,required:true}},computed:{sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},previewImageStyles(){if(!this.hasPreview){return{}}return{backgroundImage:`url('${this.file.urlPreview}')`}},hasPreview(){return this.file.urlPreview!==""},fileShortName(){const t=22;return I.Utils.file.getShortFileName(this.file.name,t)},viewerAttributes(){return I.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isImage(){return this.file.type==="image"},isVideo(){return this.file.type==="video"},isAudio(){return this.file.type==="audio"},fileIconClass(){return`ui-icon ui-icon-file-${this.file.icon}`},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-preview-item__container bx-im-sidebar-file-preview-item__scope" \n\t\t\tv-bind="viewerAttributes" \n\t\t\t@click="download" \n\t\t\t:title="file.name"\n\t\t>\n\t\t\t<img\n\t\t\t\tv-if="isImage"\n\t\t\t\tv-lazyload\n\t\t\t\tdata-lazyload-dont-hide\n\t\t\t\t:data-lazyload-src="file.urlShow"\n\t\t\t\t:title="file.name"\n\t\t\t\t:alt="file.name"\n\t\t\t\tclass="bx-im-sidebar-file-preview-item__preview-box"\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tv-else-if="isVideo" \n\t\t\t\tclass="bx-im-sidebar-file-preview-item__preview-box bx-im-sidebar-file-preview-item__preview-video-box"\n\t\t\t\t:style="previewImageStyles"\n\t\t\t>\n\t\t\t\t<video v-if="!hasPreview" class="bx-im-sidebar-file-preview-item__preview-video" preload="metadata" :src="file.urlDownload"></video>\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-video-play-button"></div>\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-video-play-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-else-if="isAudio" class="bx-im-sidebar-file-preview-item__preview-box">\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-audio-play-button"></div>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-sidebar-file-preview-item__preview-box">\n\t\t\t\t<div :class="fileIconClass"><i></i></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-file-preview-item__text">{{ fileShortName }}</div>\n\t\t</div>\n\t`};const ut={name:"DetailEmptyState",props:{title:{type:String,required:true},iconType:{type:String,required:true}},computed:{iconClass(){return`--${C.Text.toKebabCase(this.iconType)}`}},template:`\n\t\t<div class="bx-im-sidebar-detail-empty-state__container bx-im-sidebar-detail-empty-state__scope">\n\t\t\t<span class="bx-im-sidebar-detail-empty-state__icon" :class="[iconClass]"></span>\n\t\t\t<span class="bx-im-sidebar-detail-empty-state__text">{{ title }}</span>\n\t\t</div>\n\t`};const mt={name:"FilePreview",components:{DetailEmptyState:ut,FilePreviewItem:ht},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,files(){if(this.isMigrationFinished){return this.$store.getters["sidebar/files/getLatest"](this.chatId)}return this.$store.getters["sidebar/files/getLatestUnsorted"](this.chatId)},hasFiles(){return this.files.length>0},isMigrationFinished(){return this.$store.state.sidebar.isFilesMigrated},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},methods:{onOpenDetail(){if(!this.hasFiles){return}const t=this.isMigrationFinished?P.SidebarDetailBlock.file:P.SidebarDetailBlock.fileUnsorted;T.EventEmitter.emit(P.EventType.sidebar.open,{panel:t,dialogId:this.dialogId})}},template:`\n\t\t<div class="bx-im-sidebar-file-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-file-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-file-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-file-preview__header_container" \n\t\t\t\t\t:class="[hasFiles ? '--active': '']" \n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<span class="bx-im-sidebar-file-preview__title-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="hasFiles" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="hasFiles" class="bx-im-sidebar-file-preview__files-container">\n\t\t\t\t\t<FilePreviewItem v-for="file in files" :fileItem="file" />\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-else\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_AND_FILES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.media"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};class gt extends a.BaseMenu{constructor(){super();this.id="im-sidebar-context-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName()}}getOpenContextMessageItem(){if(!this.context.messageId||this.context.messageId===0){return null}return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_GO_TO_CONTEXT_MESSAGE"),onclick:()=>{T.EventEmitter.emit(P.EventType.dialog.goToMessageContext,{messageId:this.context.messageId,dialogId:this.context.dialogId});this.menuInstance.close()}}}getCopyLinkItem(t){if(!BX.clipboard.isCopySupported()){return null}return{text:t,onclick:()=>{if(BX.clipboard.copy(this.context.source)){BX.UI.Notification.Center.notify({content:C.Loc.getMessage("IM_SIDEBAR_COPIED_SUCCESS")})}this.menuInstance.close()}}}}class pt{constructor(){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient()}delete({id:t,chatId:e}){this.store.dispatch("sidebar/tasks/delete",{chatId:e,id:t});const i={LINK_ID:t};this.restClient.callMethod(P.RestMethod.imChatTaskDelete,i).catch((t=>{console.error("Im.Sidebar: error deleting task",t)}))}}class vt extends gt{constructor(){super();this.id="im-sidebar-context-menu";this.taskManager=new pt}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(C.Loc.getMessage("IM_SIDEBAR_MENU_COPY_TASK_LINK")),this.getDeleteItem()]}getDeleteItem(){return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_TASK_CONNECTION"),onclick:function(){this.taskManager.delete(this.context.task);this.menuInstance.close()}.bind(this)}}}const bt={name:"TaskItem",components:{Avatar:B.Avatar,AvatarSize:B.AvatarSize},props:{task:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>B.AvatarSize,taskItem(){return this.task},taskTitle(){return this.taskItem.task.title},taskAuthorDialogId(){return this.taskItem.task.creatorId.toString()},taskResponsibleDialogId(){return this.taskItem.task.responsibleId.toString()},taskDeadlineText(){const t=C.Type.isStringFilled(this.taskItem.task.state)?this.taskItem.task.state:this.taskItem.task.statusTitle;return I.Utils.text.convertHtmlEntities(t)},taskBackgroundColorClass(){if(this.taskItem.task.status===5){return"--completed"}return""},statusColorClass(){if(!this.taskItem.task.color||!n.LabelColor[this.taskItem.task.color.toUpperCase()]){return""}return`ui-label-${this.taskItem.task.color.toLowerCase()}`}},methods:{onTaskClick(){BX.SidePanel.Instance.open(this.taskItem.task.source,{cacheable:false})},onContextMenuClick(t){this.$emit("contextMenuClick",{task:this.taskItem,source:this.taskItem.task.source,messageId:this.taskItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-task-item__container bx-im-sidebar-task-item__scope" \n\t\t\t:class="taskBackgroundColorClass"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-task-item__content" @click="onTaskClick">\n\t\t\t\t<div class="bx-im-sidebar-task-item__header-text" :title="taskTitle">\n\t\t\t\t\t{{ taskTitle }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-task-item__detail-container">\n\t\t\t\t\t<Avatar :size="AvatarSize.XS" :dialogId="taskAuthorDialogId" />\n\t\t\t\t\t<div class="bx-im-sidebar-task-item__forward-small-icon bx-im-sidebar__forward-small-icon"></div>\n\t\t\t\t\t<Avatar :size="AvatarSize.XS" :dialogId="taskResponsibleDialogId" />\n\t\t\t\t\t<div class="bx-im-sidebar-task-item__status-text" :class="statusColorClass">\n\t\t\t\t\t\t{{taskDeadlineText}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const It={name:"TaskPreview",components:{DetailEmptyState:ut,TaskItem:bt,MessengerButton:B.Button},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,ButtonSize:()=>B.ButtonSize,ButtonColor:()=>B.ButtonColor,firstTask(){return this.$store.getters["sidebar/tasks/get"](this.chatId)[0]},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.contextMenu=new vt},beforeUnmount(){this.contextMenu.destroy()},methods:{getEntityCreator(){if(!this.entityCreator){this.entityCreator=new v.EntityCreator(this.chatId)}return this.entityCreator},onAddClick(){this.getEntityCreator().createTaskForChat()},onOpenDetail(){if(!this.firstTask){return}T.EventEmitter.emit(P.EventType.sidebar.open,{panel:P.SidebarDetailBlock.task,dialogId:this.dialogId})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<div class="bx-im-sidebar-task-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-task-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-task-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-task-preview__header_container"\n\t\t\t\t\t:class="[firstTask ? '--active': '']"\n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-task-preview__title">\n\t\t\t\t\t\t<span class="bx-im-sidebar-task-preview__title-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_TASK_DETAIL_TITLE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div v-if="firstTask" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<transition name="add-button">\n\t\t\t\t\t\t<MessengerButton\n\t\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-task-preview__title-button"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t\t<TaskItem v-if="firstTask" :task="firstTask" @contextMenuClick="onContextMenuClick"/>\n\t\t\t\t<DetailEmptyState \n\t\t\t\t\tv-else \n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.task"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};class ft extends a.RecentMenu{constructor(){super();this.id="im-sidebar-context-menu";this.permissionManager=_.PermissionManager.getInstance()}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:false}}getMenuItems(){return[this.getUnreadMessageItem(),this.getPinMessageItem(),this.getCallItem(),this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getChatsWithUserItem(),this.getAddMembersToChatItem(),this.getHideItem(),this.getLeaveItem()]}getOpenUserCalendarItem(){const t=this.store.getters["chats/isUser"](this.context.dialogId);if(!t){return null}const e=this.store.getters["users/get"](this.context.dialogId,true);if(e.bot){return null}const i=I.Utils.user.getCalendarLink(this.context.dialogId);return{text:C.Loc.getMessage("IM_LIB_MENU_OPEN_CALENDAR"),onclick:()=>{BX.SidePanel.Instance.open(i);this.menuInstance.close()}}}getAddMembersToChatItem(){const t=this.store.getters["users/get"](this.context.dialogId);if((t==null?void 0:t.bot)===true){return null}const e=this.permissionManager.canPerformAction(P.ChatActionType.extend,this.context.dialogId);if(!e){return null}return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_INVITE_MEMBERS"),onclick:()=>{this.emit(ft.events.onAddToChatShow);this.menuInstance.close()}}}getJoinChatItem(){const t=this.store.getters["chats/get"](this.context.dialogId);const e=t.type===P.ChatType.user;if(e){return null}return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_JOIN_CHAT"),onclick:()=>{console.warn("sidebar menu: join chat is not implemented");this.menuInstance.close()}}}canShowFullMenu(t){const e=this.store.getters["recent/get"](t);return Boolean(e)}}ft.events={onAddToChatShow:"onAddToChatShow"};const _t={name:"MainHeader",components:{AddToChat:b.AddToChat},props:{dialogId:{type:String,required:true}},data(){return{showAddToChatPopup:false}},computed:{recentItem(){return this.$store.getters["recent/get"](this.dialogId,true)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)}},created(){this.contextMenu=new ft;this.contextMenu.subscribe(ft.events.onAddToChatShow,this.onAddChatShow)},beforeUnmount(){this.contextMenu.destroy();this.contextMenu.unsubscribe(ft.events.onAddToChatShow,this.onAddChatShow)},methods:{onAddChatShow(){this.showAddToChatPopup=true},onContextMenuClick(t){const e={dialogId:this.dialogId,...this.recentItem};this.contextMenu.openMenu(e,t.target)},onSidebarCloseClick(){T.EventEmitter.emit(P.EventType.sidebar.close)}},template:`\n\t\t<div class="bx-im-sidebar-header__container bx-im-sidebar-header__scope">\n\t\t\t<div class="bx-im-sidebar-header__title-container">\n\t\t\t\t<button \n\t\t\t\t\tclass="bx-im-sidebar-header__cross-icon bx-im-messenger__cross-icon" \n\t\t\t\t\t@click="onSidebarCloseClick"\n\t\t\t\t></button>\n\t\t\t\t<div class="bx-im-sidebar-header__title">{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_HEADER_TITLE') }}</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclass="bx-im-sidebar-header__context-menu-icon bx-im-messenger__context-menu-icon"\n\t\t\t\t@click="onContextMenuClick"\n\t\t\t\tref="context-menu"\n\t\t\t></button>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['context-menu'] || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 0, offsetLeft: -420}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const xt={name:"MarketItem",props:{item:{type:Object,required:true}},computed:{marketItem(){return this.item},iconClass(){return`fa ${this.marketItem.options.iconName}`},iconColor(){return this.marketItem.options.color}},template:`\n\t\t<div class="bx-im-sidebar-market-preview-item__container bx-im-sidebar-market-preview-item__scope">\n\t\t\t<div class="bx-im-sidebar-market-preview-item__icon-container" :style="{backgroundColor: iconColor}">\n\t\t\t\t<i :class="iconClass" aria-hidden="true"></i>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-market-preview-item__title-container" :title="marketItem.title">\n\t\t\t\t{{ marketItem.title }}\n\t\t\t</div>\n\t\t</div>\n\t`};const Mt={name:"MarketPreview",components:{MarketItem:xt},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},emits:["openDetail"],computed:{marketMenuItems(){return p.MarketManager.getInstance().getAvailablePlacementsByType(P.PlacementType.sidebar,this.dialogId)}},methods:{onMarketItemClick(t){T.EventEmitter.emit(P.EventType.sidebar.open,{panel:P.SidebarDetailBlock.market,dialogId:this.dialogId,entityId:t})}},template:`\n\t\t<div v-if="!isLoading" class="bx-im-sidebar-market-preview__scope bx-im-sidebar-market-preview__container">\n\t\t\t<div class="bx-im-sidebar-market-preview__header_container">\n\t\t\t\t<div class="bx-im-sidebar-market-preview__title">\n\t\t\t\t\t<span class="bx-im-sidebar-market-preview__title-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MARKET_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MarketItem \n\t\t\t\tv-for="item in marketMenuItems" \n\t\t\t\t:key="item.id"\n\t\t\t\t:item="item"\n\t\t\t\t@click="onMarketItemClick(item.id)"\n\t\t\t/>\n\t\t</div>\n\t`};class St{constructor(){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient()}delete({id:t,chatId:e}){this.store.dispatch("sidebar/meetings/delete",{chatId:e,id:t});const i={LINK_ID:t};this.restClient.callMethod(P.RestMethod.imChatCalendarDelete,i).catch((t=>{console.error("Im.Sidebar: error deleting meeting",t)}))}}class Ct extends gt{constructor(){super();this.id="im-sidebar-context-menu";this.meetingManager=new St}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(C.Loc.getMessage("IM_SIDEBAR_MENU_COPY_MEETING_LINK")),this.getDeleteItem()]}getDeleteItem(){return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_MEETING_CONNECTION"),onclick:function(){this.meetingManager.delete(this.context.meeting);this.menuInstance.close()}.bind(this)}}}const kt={name:"MeetingItem",props:{meeting:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{meetingItem(){return this.meeting},title(){return this.meetingItem.meeting.title},date(){const t=this.meetingItem.meeting.dateFrom;return E.DateFormatter.formatByTemplate(t,E.DateTemplate.meeting)},day(){return this.meetingItem.meeting.dateFrom.getDate().toString()},monthShort(){return r.DateTimeFormat.format("M",this.meetingItem.meeting.dateFrom)},isActive(){return this.meetingItem.meeting.dateFrom.getTime()>Date.now()}},methods:{onMeetingClick(){new(window.top.BX||window.BX).Calendar.SliderLoader(this.meetingItem.meeting.id).show()},onContextMenuClick(t){this.$emit("contextMenuClick",{meeting:this.meetingItem,source:this.meetingItem.meeting.source,messageId:this.meetingItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-meeting-item__container bx-im-sidebar-meeting-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass="bx-im-sidebar-meeting-item__icon-container"\n\t\t\t\t:class="[isActive ? '--active' : '--inactive']"\n\t\t\t>\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__day-text">{{ day }}</div>\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__month-text">{{ monthShort }}</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-meeting-item__content-container" @click="onMeetingClick">\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-item__title" :title="title">{{ title }}</div>\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-item__date">{{ date }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Lt={name:"MeetingPreview",components:{MeetingItem:kt,DetailEmptyState:ut,MessengerButton:B.Button},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,ButtonSize:()=>B.ButtonSize,ButtonColor:()=>B.ButtonColor,firstMeeting(){return this.$store.getters["sidebar/meetings/get"](this.chatId)[0]},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.contextMenu=new Ct},beforeUnmount(){this.contextMenu.destroy()},methods:{getEntityCreator(){if(!this.entityCreator){this.entityCreator=new v.EntityCreator(this.chatId)}return this.entityCreator},onAddClick(){this.getEntityCreator().createMeetingForChat()},onOpenDetail(){if(!this.firstMeeting){return}T.EventEmitter.emit(P.EventType.sidebar.open,{panel:P.SidebarDetailBlock.meeting,dialogId:this.dialogId})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)}},template:`\n\t\t<div class="bx-im-sidebar-meeting-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-meeting-preview__skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-meeting-preview__container">\n\t\t\t\t<div\n\t\t\t\t\tclass="bx-im-sidebar-meeting-preview__header_container"\n\t\t\t\t\t:class="[firstMeeting ? '--active': '']"\n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-preview__title">\n\t\t\t\t\t\t<span class="bx-im-sidebar-meeting-preview__title-text">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MEETING_DETAIL_TITLE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div v-if="firstMeeting" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<transition name="add-button">\n\t\t\t\t\t\t<MessengerButton\n\t\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-meeting-preview__title-button"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t\t<MeetingItem v-if="firstMeeting" :meeting="firstMeeting" @contextMenuClick="onContextMenuClick"/>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-else\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETINGS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.meeting"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const Tt={name:"MainPreviewSettings",directives:{hint:o.hint},components:{Toggle:B.Toggle},props:{isLoading:{type:Boolean,default:false},dialogId:{type:String,required:true},isModerator:{type:Boolean,default:false}},data(){return{autoDeleteEnabled:false}},computed:{ToggleSize:()=>B.ToggleSize,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isGroupChat(){return this.dialogId.startsWith("chat")},canBeMuted(){return _.PermissionManager.getInstance().canPerformAction(P.ChatActionType.mute,this.dialogId)},isChatMuted(){const t=this.dialog.muteList.find((t=>t===D.Core.getUserId()));return Boolean(t)},hintMuteNotAvailable(){if(this.canBeMuted){return null}return{text:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MUTE_NOT_AVAILABLE"),popupOptions:{angle:true,targetContainer:document.body,offsetLeft:141,offsetTop:-10,bindOptions:{position:"top"}}}},hintAutoDeleteNotAvailable(){return{text:this.$Bitrix.Loc.getMessage("IM_MESSENGER_NOT_AVAILABLE"),popupOptions:{bindOptions:{position:"top"},angle:true,targetContainer:document.body,offsetLeft:125,offsetTop:-10}}},chatTypeClass(){return this.isGroupChat?"--group-chat":"--personal"}},methods:{getChatService(){if(!this.chatService){this.chatService=new M.ChatService}return this.chatService},muteActionHandler(){if(!this.canBeMuted){return}if(this.isChatMuted){this.getChatService().unmuteChat(this.dialogId)}else{this.getChatService().muteChat(this.dialogId)}}},template:`\n\t\t<div v-if="isLoading" class="bx-im-sidebar-main-settings__skeleton" :class="chatTypeClass"></div>\n\t\t<div v-else class="bx-im-sidebar-main-settings__container bx-im-sidebar-main-settings__scope" :class="chatTypeClass">\n\t\t\t<div\n\t\t\t\tv-if="isGroupChat"\n\t\t\t\tclass="bx-im-sidebar-main-settings__notification-container"\n\t\t\t\t:class="[canBeMuted ? '' : '--not-active']"\n\t\t\t\tv-hint="hintMuteNotAvailable"\n\t\t\t>\n\t\t\t\t<div class="bx-im-sidebar-main-settings__notification-title">\n\t\t\t\t\t<div class="bx-im-sidebar-main-settings__title-text bx-im-sidebar-main-settings__title-icon --notification">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_ENABLE_NOTIFICATION_TITLE_2') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="!isChatMuted" @change="muteActionHandler" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-settings__autodelete-container --not-active" v-hint="hintAutoDeleteNotAvailable">\n\t\t\t\t<div class="bx-im-sidebar-main-settings__autodelete-title">\n\t\t\t\t\t<div class="bx-im-sidebar-main-settings__title-text bx-im-sidebar-main-settings__title-icon --autodelete">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_ENABLE_AUTODELETE_TITLE') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="autoDeleteEnabled" />\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-main-settings__autodelete-status">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_AUTODELETE_STATUS_OFF') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const yt={name:"ChatPreview",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle,MessengerButton:B.Button,AddToChat:b.AddToChat,Settings:Tt},props:{dialogId:{type:String,required:true},isLoading:{type:Boolean,default:false}},emits:["openDetail"],data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>B.AvatarSize,ButtonSize:()=>B.ButtonSize,ButtonColor:()=>B.ButtonColor,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},dialogIds(){const t=4;const e=this.$store.getters["sidebar/members/get"](this.chatId);return e.map((t=>t.toString())).slice(0,t)},usersInChatCount(){return this.dialog.userCounter},moreUsersCount(){return Math.max(this.usersInChatCount-this.dialogIds.length,0)},canSeeMembers(){return _.PermissionManager.getInstance().canPerformAction(P.ChatActionType.userList,this.dialogId)},canInviteMembers(){return _.PermissionManager.getInstance().canPerformAction(P.ChatActionType.extend,this.dialogId)},chatId(){return this.dialog.chatId}},methods:{onOpenUsers(){T.EventEmitter.emit(P.EventType.sidebar.open,{panel:P.SidebarDetailBlock.members,dialogId:this.dialogId})},onOpenInvitePopup(){this.showAddToChatPopup=true}},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-group-chat__avatar-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-group-chat__avatar-container">\n\t\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__avatar">\n\t\t\t\t\t<Avatar :size="AvatarSize.XXXL" :dialogId="dialogId" />\n\t\t\t\t</div>\n\t\t\t\t<ChatTitle :dialogId="dialogId" :twoLine="true" class="bx-im-sidebar-main-preview-group-chat__title" />\n\t\t\t</div>\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-group-chat__members-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-group-chat__members-container">\n\t\t\t\t<div v-if="canSeeMembers" class="bx-im-sidebar-main-preview-group-chat__members" @click="onOpenUsers">\n\t\t\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__members-avatars" >\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tclass="bx-im-sidebar-main-preview-group-chat__chat-user-avatar"\n\t\t\t\t\t\t\tv-for="id in dialogIds"\n\t\t\t\t\t\t\t:size="AvatarSize.S"\n\t\t\t\t\t\t\t:dialogId="id"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if="moreUsersCount > 0" class="bx-im-sidebar-main-preview-group-chat__more-users-count-text">\n\t\t\t\t\t\t+{{ moreUsersCount }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div ref="add-members">\n\t\t\t\t\t<MessengerButton\n\t\t\t\t\t\tv-if="canInviteMembers"\n\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t@click="onOpenInvitePopup"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Settings :isLoading="isLoading" :dialogId="dialogId" />\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: -220, offsetLeft: -420}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const Bt={name:"UserPreview",directives:{hint:o.hint},components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle,MessengerButton:B.Button,AddToChat:b.AddToChat,Settings:Tt},props:{dialogId:{type:String,required:true},isLoading:{type:Boolean,default:false}},data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>B.AvatarSize,ButtonSize:()=>B.ButtonSize,ButtonColor:()=>B.ButtonColor,userPosition(){return this.$store.getters["users/getPosition"](this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},canInviteMembers(){return _.PermissionManager.getInstance().canPerformAction(P.ChatActionType.extend,this.dialogId)},showInviteButton(){if(this.isBot){return false}return this.canInviteMembers},userLink(){return I.Utils.user.getProfileLink(this.dialogId)},isBot(){return this.user.bot===true}},methods:{onAddClick(){this.showAddToChatPopup=true}},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-personal-chat__avatar-skeleton"></div>\n\t\t\t<div v-else class="bx-im-sidebar-main-preview-personal-chat__avatar-container">\n\t\t\t\t<Avatar\n\t\t\t\t\t:size="AvatarSize.XXXL"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\tclass="bx-im-sidebar-main-preview-personal-chat__avatar"\n\t\t\t\t/>\n\t\t\t\t<a :href="userLink" target="_blank">\n\t\t\t\t\t<ChatTitle :dialogId="dialogId" class="bx-im-sidebar-main-preview-personal-chat__user-name" />\n\t\t\t\t</a>\n\t\t\t\t<div class="bx-im-sidebar-main-preview-personal-chat__user-position" :title="userPosition">\n\t\t\t\t\t{{ userPosition }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-if="isLoading" class="bx-im-sidebar-main-preview-personal-chat__invite-button-skeleton"></div>\n\t\t\t<div \n\t\t\t\tv-else-if="showInviteButton" \n\t\t\t\tclass="bx-im-sidebar-main-preview-personal-chat__invite-button-container" \n\t\t\t\tref="add-members"\n\t\t\t>\n\t\t\t\t<MessengerButton\n\t\t\t\t\tv-if="canInviteMembers"\n\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_CREATE_GROUP_CHAT')"\n\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\ticon="plus"\n\t\t\t\t\t@click="onAddClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Settings :isLoading="isLoading" :dialogId="dialogId" />\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: -220, offsetLeft: -320}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const Et={name:"MainPanel",components:{MainHeader:_t,ChatPreview:yt,UserPreview:Bt,InfoPreview:ct,FilePreview:mt,TaskPreview:It,MeetingPreview:Lt,FileUnsortedPreview:mt,MarketPreview:Mt},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{blocks(){return O(this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},dialogInited(){return this.dialog.inited},chatId(){return this.dialog.chatId},hasInitialData(){return this.$store.getters["sidebar/isInited"](this.chatId)}},watch:{chatId(t){if(t>0){this.initializeSidebar()}}},created(){this.initializeSidebar()},methods:{getPreviewComponentName(t){return`${t}Preview`},initializeSidebar(){if(this.hasInitialData){this.isLoading=false;return}this.sidebarService=new lt({dialogId:this.dialogId});this.isLoading=true;this.sidebarService.requestInitialData().then((()=>{this.isLoading=false})).catch((t=>{S.Logger.warn("Sidebar: request initial data error:",t)}))}},template:`\n\t\t<div class="bx-im-sidebar-main-panel__container">\n\t\t\t<MainHeader :dialogId="dialogId" />\n\t\t\t<div class="bx-im-sidebar-main-panel__blocks">\n\t\t\t\t<component\n\t\t\t\t\tv-for="block in blocks"\n\t\t\t\t\t:key="block"\n\t\t\t\t\tclass="bx-im-sidebar-main-panel__block"\n\t\t\t\t\t:is="getPreviewComponentName(block)"\n\t\t\t\t\t:isLoading="isLoading"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const Dt={name:"DateGroup",props:{dateText:{type:String,required:true}},template:`\n\t\t<div class="bx-im-sidebar-date-group__container bx-im-sidebar-date-group__scope">\n\t\t\t<div class="bx-im-sidebar-date-group__text">\n\t\t\t\t{{ dateText }}\n\t\t\t</div>\n\t\t</div>\n\t`};const Pt={name:"DetailHeader",components:{ChatButton:B.Button},props:{title:{type:String,required:true},secondLevel:{type:Boolean,default:false},withAddButton:{type:Boolean,default:false}},emits:["back","addClick"],computed:{ButtonSize:()=>B.ButtonSize,ButtonColor:()=>B.ButtonColor},template:`\n\t\t<div class="bx-im-sidebar-detail-header__container bx-im-sidebar-detail-header__scope">\n\t\t\t<div class="bx-im-sidebar-detail-header__title-container">\n\t\t\t\t<button\n\t\t\t\t\t:class="{'bx-im-messenger__cross-icon': !secondLevel, 'bx-im-sidebar__back-icon': secondLevel}"\n\t\t\t\t\t@click="$emit('back')"\n\t\t\t\t></button>\n\t\t\t\t<div class="bx-im-sidebar-detail-header__title-text">{{ title }}</div>\n\t\t\t\t<div v-if="withAddButton" class="bx-im-sidebar-detail-header__add-button" ref="add-button">\n\t\t\t\t\t<ChatButton\n\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t@click="$emit('addClick', {target: $refs['add-button']})"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};class wt{constructor(){this.cachedDateGroups={}}format(t){const e={};t.forEach((t=>{const i=this.getDateGroup(t.date);if(!e[i.title]){e[i.title]={dateGroupTitle:i.title,items:[]}}e[i.title].items.push(t)}));return Object.values(e)}getDateGroup(t){const e=10;const i=t.toJSON().slice(0,e);if(this.cachedDateGroups[i]){return this.cachedDateGroups[i]}this.cachedDateGroups[i]={id:i,title:E.DateFormatter.formatByTemplate(t,E.DateTemplate.dateGroup)};return this.cachedDateGroups[i]}destroy(){this.cachedDateGroups={}}}const At={name:"TaskPanel",components:{TaskItem:bt,DateGroup:Dt,DetailHeader:Pt,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,tasks(){return this.$store.getters["sidebar/tasks/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.tasks)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new wt;this.contextMenu=new vt;this.service=new Z({dialogId:this.dialogId})},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.task})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/tasks/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onAddClick(){new v.EntityCreator(this.chatId).createTaskForChat()}},template:`\n\t\t<div class="bx-im-sidebar-task-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASK_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t:withAddButton="true"\n\t\t\t\t@addClick="onAddClick"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-task-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-task-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<TaskItem\n\t\t\t\t\t\tv-for="task in dateGroup.items"\n\t\t\t\t\t\t:task="task"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.task"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const Ft=50;const Rt={name:"DetailTabs",props:{tabs:{type:Array,default:()=>[]}},emits:["tabSelect"],data(){return{hasLeftControl:false,hasRightControl:false,currentElementIndex:0,highlightOffsetLeft:0,highlightWidth:0}},computed:{highlightStyle(){return{left:`${this.highlightOffsetLeft}px`,width:`${this.highlightWidth}px`}}},watch:{currentElementIndex(t){this.updateHighlightPosition(t);this.$emit("tabSelect",this.tabs[t]);this.scrollToElement(t)}},mounted(){if(this.$refs.tabs.scrollWidth>this.$refs.tabs.offsetWidth){this.hasRightControl=true}this.updateHighlightPosition(this.currentElementIndex)},methods:{getElementNodeByIndex(t){return[...this.$refs.tabs.children].filter((t=>!C.Dom.hasClass(t,"bx-sidebar-tabs-highlight")))[t]},updateHighlightPosition(t){const e=this.getElementNodeByIndex(t);this.highlightOffsetLeft=e.offsetLeft;this.highlightWidth=e.offsetWidth},scrollToElement(t){const e=this.getElementNodeByIndex(t);this.$refs.tabs.scroll({left:e.offsetLeft-Ft,behavior:"smooth"})},onTabClick(t){this.currentElementIndex=t.index},getTabTitle(t){const e=`IM_SIDEBAR_FILES_${t.toUpperCase()}_TAB`;return this.$Bitrix.Loc.getMessage(e)},isSelectedTab(t){return t===this.currentElementIndex},onLeftClick(){if(this.currentElementIndex<=0){return}this.currentElementIndex--},onRightClick(){if(this.currentElementIndex>=this.tabs.length-1){return}this.currentElementIndex++},updateControlsVisibility(){this.hasRightControl=this.$refs.tabs.scrollWidth>this.$refs.tabs.scrollLeft+this.$refs.tabs.clientWidth;this.hasLeftControl=this.$refs.tabs.scrollLeft>0}},template:`\n\t\t<div class="bx-im-sidebar-detail-tabs__container bx-im-sidebar-detail-tabs__scope">\n\t\t\t<div v-if="hasLeftControl" @click.stop="onLeftClick" class="bx-im-sidebar-ears__control --left">\n\t\t\t\t<div class="bx-im-sidebar__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-if="hasRightControl" @click.stop="onRightClick" class="bx-im-sidebar-ears__control --right">\n\t\t\t\t<div class="bx-im-sidebar__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-ears__elements" ref="tabs" @scroll.passive="updateControlsVisibility">\n\t\t\t\t<div class="bx-sidebar-tabs-highlight" :style="highlightStyle"></div>\n\t\t\t\t<div\n\t\t\t\t\tv-for="(tab, index) in tabs"\n\t\t\t\t\t:key="tab"\n\t\t\t\t\tclass="bx-im-sidebar-detail-tabs__item"\n\t\t\t\t\t:class="[isSelectedTab(index) ? '--selected' : '']"\n\t\t\t\t\t@click="onTabClick({index: index})"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-detail-tabs__item-title">{{ getTabTitle(tab) }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Nt={name:"MediaDetailItem",components:{SocialVideo:l.SocialVideo,Avatar:B.Avatar},props:{fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false,videoDuration:0}},computed:{AvatarSize:()=>B.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},previewPicture(){if(!this.hasPreview){return{}}return{backgroundImage:`url('${this.file.urlPreview}')`}},hasPreview(){return this.file.urlPreview!==""},isImage(){return this.file.type==="image"},isVideo(){return this.file.type==="video"},viewerAttributes(){return I.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},videoDurationText(){if(this.videoDuration===0){return"--:--"}return this.formatTime(this.videoDuration)}},methods:{formatTime(t){t=Math.floor(t);const e=Math.floor(t/60/60);if(e>0){t-=e*60*60}const i=Math.floor(t/60);if(i>0){t-=i*60}const s=e>0?`${e}:`:"";const n=s>0?`${i.toString().padStart(2,"0")}:`:`${i}:`;const a=t.toString().padStart(2,"0");return s+n+a},handleVideoEvent(){if(!this.$refs.video){return}this.videoDuration=this.$refs.video.duration},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-media-detail-item__container bx-im-sidebar-file-media-detail-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-file-media-detail-item__header-container">\n\t\t\t\t<div class="bx-im-sidebar-file-media-detail-item__avatar-container">\n\t\t\t\t\t<Avatar :dialogId="sidebarFileItem.authorId" :size="AvatarSize.S"></Avatar>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__context-menu bx-im-messenger__context-menu-icon"\n\t\t\t\t\t@click="onContextMenuClick"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tv-if="isImage"\n\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__content --image" \n\t\t\t\t:style="previewPicture"\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t\t:title="file.name"\n\t\t\t>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-if="isVideo"\n\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__content --video"\n\t\t\t\t:style="previewPicture"\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t\t:title="file.name"\n\t\t\t>\n\t\t\t\t<video \n\t\t\t\t\tv-show="!hasPreview"\n\t\t\t\t\tref="video"\n\t\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__video" \n\t\t\t\t\tpreload="metadata" :src="file.urlDownload"\n\t\t\t\t\t@durationchange="handleVideoEvent"\n\t\t\t\t\t@loadeddata="handleVideoEvent"\n\t\t\t\t\t@loadedmetadata="handleVideoEvent"\n\t\t\t\t></video>\n\t\t\t</div>\n\t\t\t<div v-if="isVideo" class="bx-im-sidebar-file-media-detail-item__video-controls">\n\t\t\t\t<span class="bx-im-sidebar-file-media-detail-item__video-controls-icon"></span>\n\t\t\t\t<span class="bx-im-sidebar-file-media-detail-item__video-controls-time">{{ videoDurationText }}</span>\n\t\t\t</div>\n\t\t</div>\n\t`};class Ut{constructor(){this.store=D.Core.getStore();this.diskService=new M.DiskService}delete(t){this.store.dispatch("sidebar/files/delete",{dialogId:t.chatId,id:t.id});this.diskService.delete({chatId:t.chatId,fileId:t.fileId})}saveOnDisk(t){return this.diskService.save(t)}}class $t extends gt{constructor(){super();this.id="im-sidebar-context-menu";this.mediaManager=new Ut}getMenuItems(){return[this.getOpenContextMessageItem(),this.getDownloadFileItem(),this.getSaveFileOnDiskItem(),this.getDeleteFileItem()]}getViewFileItem(){const t=I.Utils.file.getViewerDataAttributes(this.context.file.viewerAttrs);if(!t||this.context.file.type==="audio"){return null}return{html:this.getViewHtml(t),onclick:function(){this.menuInstance.close()}.bind(this)}}getDownloadFileItem(){if(!this.context.file.urlDownload){return null}return{html:this.getDownloadHtml(this.context.file.urlDownload,this.context.file.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveFileOnDiskItem(){if(!this.context.sidebarFile.fileId){return null}return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_SAVE_FILE_ON_DISK_MSGVER_1"),onclick:function(){this.mediaManager.saveOnDisk(this.context.sidebarFile.fileId).then((()=>{BX.UI.Notification.Center.notify({content:C.Loc.getMessage("IM_SIDEBAR_FILE_SAVE_ON_DISK_SUCCESS")})}));this.menuInstance.close()}.bind(this)}}getDeleteFileItem(){if(this.getCurrentUserId()!==this.context.sidebarFile.authorId){return null}return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_FILE"),onclick:function(){this.mediaManager.delete(this.context.sidebarFile);this.menuInstance.close()}.bind(this)}}getViewHtml(t){const e=C.Dom.create("div",{text:C.Loc.getMessage("IM_SIDEBAR_MENU_VIEW_FILE")});Object.entries(t).forEach((t=>{const[i,s]=t;e.setAttribute(i,s)}));return e}getDownloadHtml(t,e){const i=C.Dom.create("a",{text:C.Loc.getMessage("IM_SIDEBAR_MENU_DOWNLOAD_FILE")});C.Dom.style(i,"display","block");C.Dom.style(i,"color","inherit");C.Dom.style(i,"text-decoration","inherit");i.setAttribute("href",t);i.setAttribute("download",e);return i}}const Ht={name:"MediaTab",components:{DateGroup:Dt,MediaDetailItem:Nt,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},files(){return this.$store.getters["sidebar/files/get"](this.chatId,P.SidebarFileTypes.media)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.service=new W({dialogId:this.dialogId});this.collectionFormatter=new wt;this.contextMenu=new $t},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,P.SidebarFileTypes.media);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(P.SidebarFileTypes.media);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-media-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-media-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<div class="bx-im-sidebar-file-media-detail__items-group">\n\t\t\t\t\t<MediaDetailItem\n\t\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.media"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const Ot={name:"AudioDetailItem",components:{AudioPlayer:B.AudioPlayer,Avatar:B.Avatar},props:{id:{type:Number,required:true},fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{timelineType:0}},computed:{AvatarSize:()=>B.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},audioUrl(){return this.file.urlDownload}},created(){this.timelineType=Math.floor(Math.random()*5)},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div class="bx-im-sidebar-file-audio-detail-item__container bx-im-sidebar-file-audio-detail-item__scope">\n\t\t\t<AudioPlayer \n\t\t\t\t:id="id"\n\t\t\t\t:src="audioUrl" \n\t\t\t\t:file="file" \n\t\t\t\t:timelineType="timelineType" \n\t\t\t\t:authorId="sidebarFileItem.authorId" \n\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t/>\n\t\t</div>\n\t`};const Gt={name:"AudioTab",components:{DetailEmptyState:ut,AudioDetailItem:Ot,DateGroup:Dt,Loader:B.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,P.SidebarFileTypes.audio)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new W({dialogId:this.dialogId});this.collectionFormatter=new wt;this.contextMenu=new $t},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,P.SidebarFileTypes.audio);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(P.SidebarFileTypes.audio);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-audio-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-audio-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<AudioDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:id="file.id"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.audio"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const zt={name:"BriefItem",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{brief:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>B.AvatarSize,sidebarFileItem(){return this.brief},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},fileShortName(){const t=15;return I.Utils.file.getShortFileName(this.file.name,t)},fileSize(){return I.Utils.file.formatFileSize(this.file.size)},viewerAttributes(){return I.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-brief-item__container bx-im-sidebar-brief-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-brief-item__icon-container"></div>\n\t\t\t<div class="bx-im-sidebar-brief-item__content-container">\n\t\t\t\t<div class="bx-im-sidebar-brief-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-brief-item__title" @click="download" v-bind="viewerAttributes">\n\t\t\t\t\t\t<span class="bx-im-sidebar-brief-item__title-text" :title="file.name">{{fileShortName}}</span>\n\t\t\t\t\t\t<span class="bx-im-sidebar-brief-item__size-text">{{fileSize}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-brief-item__author-container">\n\t\t\t\t\t\t<Avatar \n\t\t\t\t\t\t\t:dialogId="sidebarFileItem.authorId" \n\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-brief-item__author-avatar" \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatTitle :dialogId="sidebarFileItem.authorId" :showItsYou="false" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon bx-im-sidebar-brief-item__context-menu-button"\n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const qt={name:"BriefTab",components:{DateGroup:Dt,BriefItem:zt,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,P.SidebarFileTypes.brief)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new W({dialogId:this.dialogId});this.collectionFormatter=new wt;this.contextMenu=new $t},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,P.SidebarFileTypes.brief);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(P.SidebarFileTypes.brief);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-brief-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-brief-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle"/>\n\t\t\t\t<BriefItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:brief="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_BRIEFS_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.brief"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const Xt={name:"DocumentDetailItem",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>B.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},fileIconClass(){return`ui-icon ui-icon-file-${this.file.icon}`},fileShortName(){const t=15;return I.Utils.file.getShortFileName(this.file.name,t)},fileSize(){return I.Utils.file.formatFileSize(this.file.size)},viewerAttributes(){return I.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0},authorId(){return this.sidebarFileItem.authorId}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-document-detail-item__container bx-im-sidebar-file-document-detail-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\t\t\n\t\t>\n\t\t\t<div class="bx-im-sidebar-file-document-detail-item__icon-container">\n\t\t\t\t<div :class="fileIconClass"><i></i></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-file-document-detail-item__content-container" v-bind="viewerAttributes">\n\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__document-title" @click="download" :title="file.name">\n\t\t\t\t\t\t<span class="bx-im-sidebar-file-document-detail-item__document-title-text">{{fileShortName}}</span>\n\t\t\t\t\t\t<span class="bx-im-sidebar-file-document-detail-item__document-size">{{fileSize}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__author-container">\n\t\t\t\t\t\t<template v-if="authorId > 0">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t:dialogId="authorId"\n\t\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\t\tclass="bx-im-sidebar-file-document-detail-item__author-avatar"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ChatTitle :dialogId="authorId" :showItsYou="false" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<span v-else class="bx-im-sidebar-file-document-detail-item__system-author-text">\n\t\t\t\t\t\t\t{{$Bitrix.Loc.getMessage('IM_SIDEBAR_SYSTEM_USER')}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Vt={name:"OtherTab",components:{DateGroup:Dt,DocumentDetailItem:Xt,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,P.SidebarFileTypes.other)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new W({dialogId:this.dialogId});this.collectionFormatter=new wt;this.contextMenu=new $t},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,P.SidebarFileTypes.other);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(P.SidebarFileTypes.other);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-other-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-other-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.other"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const Qt={name:"DocumentTab",components:{DateGroup:Dt,DocumentDetailItem:Xt,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,P.SidebarFileTypes.document)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new W({dialogId:this.dialogId});this.collectionFormatter=new wt;this.contextMenu=new $t},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,P.SidebarFileTypes.document);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(P.SidebarFileTypes.document);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-document-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-document-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.document"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const Kt={name:"FilePanel",components:{DetailHeader:Pt,DetailTabs:Rt,MediaTab:Ht,AudioTab:Gt,DocumentTab:Qt,BriefTab:qt,OtherTab:Vt},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{tab:P.SidebarFileTabTypes.media}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,tabComponentName(){return`${C.Text.capitalize(this.tab)}Tab`},tabs(){const t=Object.values(P.SidebarFileTabTypes);const e=C.Extension.getSettings("im.v2.component.sidebar");const i=e.get("canShowBriefs",false);if(!i){return t.filter((t=>t!==P.SidebarDetailBlock.brief))}return t}},methods:{onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.file})},onTabSelect(t){this.tab=t}},template:`\n\t\t<div>\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<DetailTabs :tabs="tabs" @tabSelect="onTabSelect" />\n\t\t\t<KeepAlive>\n\t\t\t\t<component :is="tabComponentName" :dialogId="dialogId" />\n\t\t\t</KeepAlive>\n\t\t</div>\n\t`};const jt={name:"FileUnsortedPanel",components:{DateGroup:Dt,DocumentDetailItem:Xt,DetailEmptyState:ut,DetailHeader:Pt,Loader:B.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,P.SidebarFileTypes.fileUnsorted)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new at({dialogId:this.dialogId});this.collectionFormatter=new wt;this.contextMenu=new $t},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,P.SidebarFileTypes.fileUnsorted);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.fileUnsorted})}},template:`\n\t\t<div class="bx-im-sidebar-file-unsorted-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILEUNSORTED_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-file-unsorted-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-unsorted-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<DocumentDetailItem\n\t\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.document"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const Yt={name:"LinkItem",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{link:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>B.AvatarSize,linkItem(){return this.link},source(){return this.linkItem.source},shortDescription(){let t="";try{t=new URL(this.source).hostname}catch(e){t=this.source;console.error(e)}return t},description(){const{name:t,description:e}=this.linkItem.richData;const i=e||t||this.source;return I.Utils.text.convertHtmlEntities(i)},authorDialogId(){return this.linkItem.authorId.toString()},hasPreview(){var t;return Boolean((t=this.linkItem.richData)==null?void 0:t.previewUrl)},previewStyles(){var t;return{backgroundImage:`url('${(t=this.linkItem.richData)==null?void 0:t.previewUrl}')`,backgroundSize:"cover",backgroundRepeat:"no-repeat"}},iconTypeClass(){var t;switch((t=this.linkItem.richData)==null?void 0:t.type){case"TASKS":return"--task";case"LANDING":return"--landing";case"POST":return"--post";case"CALENDAR":return"--calendar";default:return"--common"}}},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{id:this.linkItem.id,messageId:this.linkItem.messageId,source:this.source,target:t.currentTarget})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-link-item__container bx-im-link-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<template v-if="hasPreview">\n\t\t\t\t<div class="bx-im-link-item__icon-container" :style="previewStyles"></div>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div class="bx-im-link-item__icon-container" :class="iconTypeClass">\n\t\t\t\t\t<div class="bx-im-link-item__icon" :class="iconTypeClass" ></div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<div class="bx-im-link-item__content">\n\t\t\t\t<div class="bx-im-link-item__short-description-text">{{ shortDescription }}</div>\n\t\t\t\t<a :href="source" :title="description" target="_blank" class="bx-im-link-item__description-text">\n\t\t\t\t\t{{ description }}\n\t\t\t\t</a>\n\t\t\t\t<div class="bx-im-link-item__author-container">\n\t\t\t\t\t<Avatar \n\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t:dialogId="authorDialogId" \n\t\t\t\t\t\tclass="bx-im-link-item__author-avatar" \n\t\t\t\t\t/>\n\t\t\t\t\t<ChatTitle :dialogId="authorDialogId" :showItsYou="false" class="bx-im-link-item__author-text" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-if="showContextButton" class="bx-im-link-item__context-menu">\n\t\t\t\t<button class="bx-im-messenger__context-menu-icon" @click="onContextMenuClick"></button>\n\t\t\t</div>\n\t\t</div>\n\t`};class Wt{constructor(){this.store=D.Core.getStore();this.restClient=D.Core.getRestClient()}delete(t){this.store.dispatch("sidebar/links/delete",{chatId:t.chatId,id:t.id});const e={LINK_ID:t.id};this.restClient.callMethod(P.RestMethod.imChatUrlDelete,e).catch((t=>{console.error("Im.Sidebar: error deleting link",t)}))}}class Jt extends gt{constructor(){super();this.linkManager=new Wt}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(C.Loc.getMessage("IM_SIDEBAR_MENU_COPY_LINK")),this.getDeleteLinkItem()]}getDeleteLinkItem(){return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_FROM_LINKS"),onclick:function(){this.linkManager.delete(this.context);this.menuInstance.close()}.bind(this)}}}const Zt={name:"LinkPanel",components:{DetailHeader:Pt,LinkItem:Yt,DateGroup:Dt,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,links(){return this.$store.getters["sidebar/links/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.links)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new wt;this.contextMenu=new Jt;this.service=new j({dialogId:this.dialogId})},beforeUnmount(){this.contextMenu.destroy();this.collectionFormatter.destroy()},methods:{onContextMenuClick(t){const e={id:t.id,messageId:t.messageId,dialogId:this.dialogId,chatId:this.chatId,source:t.source};this.contextMenu.openMenu(e,t.target)},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.link})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/links/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-link-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_LINK_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-link-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<template v-for="link in dateGroup.items">\n\t\t\t\t\t\t<LinkItem :link="link" @contextMenuClick="onContextMenuClick" />\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_LINKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.link"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const te={name:"MarketPanel",components:{Spinner:B.Spinner,DetailHeader:Pt},props:{dialogId:{type:String,required:true},entityId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:true}},computed:{SpinnerSize:()=>B.SpinnerSize,SidebarDetailBlock:()=>P.SidebarDetailBlock,placement(){const t=Number.parseInt(this.entityId,10);return this.$store.getters["market/getById"](t)},title(){if(this.placement&&C.Type.isStringFilled(this.placement.title)){return this.placement.title}return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MARKET_DETAIL_TITLE")}},created(){this.marketManager=p.MarketManager.getInstance()},async mounted(){const t={dialogId:this.dialogId};const e=await this.marketManager.loadPlacement(this.entityId,t);this.isLoading=false;C.Runtime.html(this.$refs["im-messenger-sidebar-placement"],e)},methods:{onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.market})}},template:`\n\t\t<div class="bx-im-sidebar-favorite-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="title"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-market-detail__container">\n\t\t\t\t<div v-if="isLoading" class="bx-im-sidebar-market-detail__loader-container">\n\t\t\t\t\t<Spinner :size="SpinnerSize.S" />\n\t\t\t\t</div>\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-market-detail__placement-container" \n\t\t\t\t\tref="im-messenger-sidebar-placement"\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ee={name:"MeetingPanel",components:{MeetingItem:kt,DateGroup:Dt,DetailEmptyState:ut,DetailHeader:Pt,Loader:B.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,meetings(){return this.$store.getters["sidebar/meetings/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.meetings)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new wt;this.contextMenu=new Ct},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.meeting})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/meetings/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onAddClick(){new v.EntityCreator(this.chatId).createMeetingForChat()}},template:`\n\t\t<div class="bx-im-sidebar-meeting-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETING_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t:withAddButton="true"\n\t\t\t\t@addClick="onAddClick"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-meeting-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-meeting-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<MeetingItem\n\t\t\t\t\t\tv-for="meeting in dateGroup.items"\n\t\t\t\t\t\t:meeting="meeting"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETINGS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.meeting"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const ie={name:"DetailUser",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{dialogId:{type:String,required:true},isModerator:{type:Boolean,default:false}},data(){return{showContextButton:false}},computed:{AvatarSize:()=>B.AvatarSize,position(){return this.$store.getters["users/getPosition"](this.dialogId)},user(){return this.$store.getters["users/get"](this.dialogId,true)},userLink(){return I.Utils.user.getProfileLink(this.dialogId)}},methods:{onClickContextMenu(t){this.$emit("contextMenuClick",{userDialogId:this.dialogId,target:t.currentTarget})}},template:`\n\t\t<div\n\t\t\tclass="bx-im-sidebar-main-detail__user"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-main-detail__avatar-container">\n\t\t\t\t<Avatar :size="AvatarSize.L" :dialogId="dialogId" />\n\t\t\t\t<span v-if="isModerator" class="bx-im-sidebar-main-detail__avatar-moderator-icon"></span>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-detail__user-info-container">\n\t\t\t\t<div class="bx-im-sidebar-main-detail__user-title-container">\n\t\t\t\t\t<a :href="userLink" target="_blank" class="bx-im-sidebar-main-detail__user-title-link">\n\t\t\t\t\t\t<ChatTitle :dialogId="dialogId" />\n\t\t\t\t\t</a>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\t\tclass="bx-im-sidebar-main-detail__context-menu-icon bx-im-messenger__context-menu-icon"\n\t\t\t\t\t\t@click="onClickContextMenu"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-main-detail__position-text" :title="position">\n\t\t\t\t\t{{ position }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\n\t`};class se extends gt{constructor(){super();this.chatService=new M.ChatService;this.callManager=f.CallManager.getInstance();this.permissionManager=_.PermissionManager.getInstance()}getMenuItems(){return[this.getInsertNameItem(),this.getSendMessageItem(),this.getCallItem(),this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getKickItem(),this.getLeaveItem()]}getInsertNameItem(){const t=this.store.getters["users/get"](this.context.dialogId,true);return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_INSERT_NAME"),onclick:()=>{T.EventEmitter.emit(P.EventType.textarea.insertMention,{mentionText:t.name,mentionReplacement:I.Utils.text.getMentionBbCode(this.context.dialogId,t.name)});this.menuInstance.close()}}}getSendMessageItem(){return{text:C.Loc.getMessage("IM_LIB_MENU_WRITE"),onclick:()=>{y.Messenger.openChat(this.context.dialogId);this.menuInstance.close()}}}getCallItem(){const t=this.callManager.chatCanBeCalled(this.context.dialogId);const e=this.permissionManager.canPerformAction(P.ChatActionType.call,this.context.dialogId);if(!t||!e){return null}return{text:C.Loc.getMessage("IM_LIB_MENU_CALL_2"),onclick:()=>{this.callManager.startCall(this.context.dialogId);this.menuInstance.close()}}}getOpenProfileItem(){if(!this.isUser()||this.isBot()){return null}const t=I.Utils.user.getProfileLink(this.context.dialogId);return{text:C.Loc.getMessage("IM_LIB_MENU_OPEN_PROFILE"),href:t,onclick:()=>{this.menuInstance.close()}}}getOpenUserCalendarItem(){if(!this.isUser()||this.isBot()){return null}const t=I.Utils.user.getCalendarLink(this.context.dialogId);return{text:C.Loc.getMessage("IM_LIB_MENU_OPEN_CALENDAR"),onclick:()=>{BX.SidePanel.Instance.open(t);this.menuInstance.close()}}}getKickItem(){const t=Number.parseInt(this.context.dialogId,10);const e=t===this.getCurrentUserId();const i=this.permissionManager.canPerformAction(P.ChatActionType.kick,this.context.contextDialogId);if(e||!i){return null}return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_KICK_FROM_CHAT"),onclick:async()=>{this.menuInstance.close();const t=await x.showKickUserConfirm();if(t===true){this.chatService.kickUserFromChat(this.context.contextDialogId,this.context.dialogId)}}}}getLeaveItem(){const t=Number.parseInt(this.context.dialogId,10);const e=t===this.getCurrentUserId();const i=this.permissionManager.canPerformAction(P.ChatActionType.leave,this.context.contextDialogId);if(!e||!i){return null}return{text:C.Loc.getMessage("IM_LIB_MENU_LEAVE"),onclick:async()=>{this.menuInstance.close();const t=await x.showLeaveFromChatConfirm();if(t===true){this.chatService.leaveChat(this.context.contextDialogId)}}}}isUser(){return this.store.getters["chats/isUser"](this.context.dialogId)}isBot(){if(!this.isUser()){return false}const t=this.store.getters["users/get"](this.context.dialogId);return t.bot===true}}const ne={name:"MembersPanel",components:{DetailUser:ie,ChatButton:B.Button,DetailHeader:Pt,Loader:B.Loader,AddToChat:b.AddToChat},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false,showAddToChatPopup:false,showAddToChatTarget:null}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,ButtonSize:()=>B.ButtonSize,ButtonColor:()=>B.ButtonColor,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},dialogManagers(){return this.dialog.managerList},dialogIds(){const t=this.$store.getters["sidebar/members/get"](this.chatId);return t.map((t=>t.toString()))},chatLink(){return`${D.Core.getHost()}/online/?IM_DIALOG=${this.dialogId}`},hasNextPage(){return this.$store.getters["sidebar/members/hasNextPage"](this.chatId)},panelInited(){return this.$store.getters["sidebar/members/getInited"](this.chatId)},chatId(){return this.dialog.chatId},title(){let t=this.dialog.userCounter;if(t>=1e3){t=`${Math.floor(t/1e3)}k`}return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MEMBERS_DETAIL_TITLE").replace("#NUMBER#",t)},needAddButton(){return _.PermissionManager.getInstance().canPerformAction(P.ChatActionType.extend,this.dialogId)}},watch:{dialogId(t){this.service=new st({dialogId:t});this.loadFirstPage()}},created(){this.contextMenu=new se;this.service=new st({dialogId:this.dialogId});this.loadFirstPage()},beforeUnmount(){this.contextMenu.destroy()},methods:{async loadFirstPage(){if(this.panelInited||this.isLoading){return}this.isLoading=true;this.chats=await this.service.loadFirstPage();this.isLoading=false},isModerator(t){const e=Number.parseInt(t,10);return this.dialogManagers.includes(e)},onContextMenuClick(t){const e={dialogId:t.userDialogId,contextDialogId:this.dialogId};this.contextMenu.openMenu(e,t.target)},onCopyInviteClick(){if(BX.clipboard.copy(this.chatLink)){BX.UI.Notification.Center.notify({content:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_COPIED_SUCCESS")})}},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.members})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;return i&&this.hasNextPage},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onAddClick(t){this.showAddToChatPopup=true;this.showAddToChatTarget=t.target}},template:`\n\t\t<div class="bx-im-sidebar-main-detail__scope">\n\t\t\t<DetailHeader \n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="title"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t:withAddButton="needAddButton"\n\t\t\t\t@addClick="onAddClick"\n\t\t\t\t@back="onBackClick" \n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div class="bx-im-sidebar-main-detail__invitation-button-container">\n\t\t\t\t\t<ChatButton\n\t\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_COPY_INVITE_LINK')"\n\t\t\t\t\t\t:size="ButtonSize.M"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryBorder"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\ticon="link"\n\t\t\t\t\t\t@click="onCopyInviteClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailUser\n\t\t\t\t\tv-for="dialogId in dialogIds"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t:isModerator="isModerator(dialogId)"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="showAddToChatTarget || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 0, offsetLeft: 0}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};class ae extends gt{constructor(){super();this.id="im-sidebar-context-menu"}getMenuItems(){return[this.getOpenContextMessageItem(),this.getDeleteFromFavoriteItem()]}getDeleteFromFavoriteItem(){return{text:C.Loc.getMessage("IM_SIDEBAR_MENU_REMOVE_FROM_SAVED_V2"),onclick:function(){const t=new M.MessageService({chatId:this.context.chatId});t.removeMessageFromFavorite(this.context.messageId);this.menuInstance.close()}.bind(this)}}}const re={name:"FavoriteItem",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{favorite:{type:Object,required:true},chatId:{type:Number,required:true},dialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>B.AvatarSize,favoriteItem(){return this.favorite},favoriteMessage(){return this.$store.getters["messages/getById"](this.favoriteItem.messageId)},authorDialogId(){return this.favoriteMessage.authorId.toString()},messageText(){return k.Parser.purifyMessage(this.favoriteMessage)}},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{id:this.favoriteItem.id,messageId:this.favorite.messageId,target:t.currentTarget})},onItemClick(){T.EventEmitter.emit(P.EventType.dialog.goToMessageContext,{messageId:this.favorite.messageId,dialogId:this.dialogId})},onMessageBodyClick(t){if(t.target.tagName==="A"){t.stopPropagation()}}},template:`\n\t\t<div \n\t\t\tclass="bx-im-favorite-item__container bx-im-favorite-item__scope" \n\t\t\t@click.stop="onItemClick"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-favorite-item__header-container">\n\t\t\t\t<div class="bx-im-favorite-item__author-container">\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t:dialogId="authorDialogId"\n\t\t\t\t\t\tclass="bx-im-favorite-item__author-avatar"\n\t\t\t\t\t/>\n\t\t\t\t\t<ChatTitle :dialogId="authorDialogId" :showItsYou="false" class="bx-im-favorite-item__author-text" />\n\t\t\t\t</div>\n\t\t\t\t<button \n\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\tclass="bx-im-messenger__context-menu-icon"\n\t\t\t\t\t@click.stop="onContextMenuClick"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div class="bx-im-favorite-item__message-text" v-html="messageText" @click="onMessageBodyClick"></div>\n\t\t</div>\n\t`};const oe={name:"FavoritePanel",components:{FavoriteItem:re,DateGroup:Dt,DetailEmptyState:ut,DetailHeader:Pt,Loader:B.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,favorites(){return this.$store.getters["sidebar/favorites/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.favorites)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new wt;this.contextMenu=new ae;this.service=new N({dialogId:this.dialogId})},beforeUnmount(){this.contextMenu.destroy();this.collectionFormatter.destroy()},methods:{onContextMenuClick(t){const e={id:t.id,messageId:t.messageId,dialogId:this.dialogId,chatId:this.chatId};this.contextMenu.openMenu(e,t.target)},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.favorite})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/favorites/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-favorite-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITE_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-favorite-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div \n\t\t\t\t\tv-for="dateGroup in formattedCollection" \n\t\t\t\t\tclass="bx-im-sidebar-favorite-detail__date-group_container"\n\t\t\t\t>\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<FavoriteItem \n\t\t\t\t\t\tv-for="favorite in dateGroup.items" \n\t\t\t\t\t\t:favorite="favorite"\n\t\t\t\t\t\t:chatId="chatId"\n\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.favorite"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const le=50;var de=babelHelpers.classPrivateFieldLooseKey("lastMessageId");var ce=babelHelpers.classPrivateFieldLooseKey("query");var he=babelHelpers.classPrivateFieldLooseKey("request");var ue=babelHelpers.classPrivateFieldLooseKey("processSearchResponse");var me=babelHelpers.classPrivateFieldLooseKey("updateModels");class ge{constructor({dialogId:t}){Object.defineProperty(this,me,{value:be});Object.defineProperty(this,ue,{value:ve});Object.defineProperty(this,he,{value:pe});this.hasMoreItemsToLoad=true;Object.defineProperty(this,de,{writable:true,value:0});Object.defineProperty(this,ce,{writable:true,value:""});this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.chatId=A(t);this.userManager=new w.UserManager}searchOnServer(t){if(babelHelpers.classPrivateFieldLooseBase(this,ce)[ce]!==t){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce]=t;this.hasMoreItemsToLoad=true;babelHelpers.classPrivateFieldLooseBase(this,de)[de]=0}return babelHelpers.classPrivateFieldLooseBase(this,he)[he]()}loadNextPage(){return babelHelpers.classPrivateFieldLooseBase(this,he)[he]()}loadFirstPage(){return Promise.resolve()}resetSearchState(){babelHelpers.classPrivateFieldLooseBase(this,de)[de]=0;babelHelpers.classPrivateFieldLooseBase(this,ce)[ce]="";this.hasMoreItemsToLoad=true}}function pe(){const t={SEARCH_MESSAGE:babelHelpers.classPrivateFieldLooseBase(this,ce)[ce],CHAT_ID:this.chatId};if(babelHelpers.classPrivateFieldLooseBase(this,de)[de]>0){t.LAST_ID=babelHelpers.classPrivateFieldLooseBase(this,de)[de]}return new Promise(((e,i)=>{this.restClient.callMethod(P.RestMethod.imDialogMessagesSearch,t).then((t=>{const i=t.data();e(babelHelpers.classPrivateFieldLooseBase(this,ue)[ue](i))})).catch((t=>i(t)))}))}function ve(t){babelHelpers.classPrivateFieldLooseBase(this,de)[de]=F(t.messages);if(t.messages.length<le){this.hasMoreItemsToLoad=false}return babelHelpers.classPrivateFieldLooseBase(this,me)[me](t).then((()=>t.messages.map((t=>t.id))))}function be(t){const{files:e,users:i,usersShort:s,reactions:n,additionalMessages:a,messages:r}=t;const o=Promise.all([this.userManager.setUsersToModel(i),this.userManager.addUsersToModel(s)]);const l=this.store.dispatch("files/set",e);const d=this.store.dispatch("messages/reactions/set",n);const c=this.store.dispatch("messages/store",a);const h=this.store.dispatch("messages/store",r);return Promise.all([l,o,d,c,h])}const Ie={name:"EmptyState",computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MESSAGE_SEARCH_NOT_FOUND")},subTitle(){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MESSAGE_SEARCH_NOT_FOUND_DESCRIPTION")}},template:`\n\t\t<div class="bx-im-message-search-empty-state__container bx-im-message-search-empty-state__scope">\n\t\t\t<div class="bx-im-message-search-empty-state__icon"></div>\n\t\t\t<div class="bx-im-message-search-empty-state__title">\n\t\t\t\t{{ title }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-search-empty-state__subtitle">\n\t\t\t\t{{ subTitle }}\n\t\t\t</div>\n\t\t</div>\n\t`};const fe={name:"SearchItem",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{messageId:{type:[String,Number],required:true},dialogId:{type:String,required:true},query:{type:String,default:""}},computed:{AvatarSize:()=>B.AvatarSize,message(){return this.$store.getters["messages/getById"](this.messageId)},authorDialogId(){return this.message.authorId.toString()},isSystem(){return this.message.authorId===0},messageText(){const t=k.Parser.purifyMessage(this.message);return L.highlightText(C.Text.encode(t),this.query)}},methods:{onItemClick(){T.EventEmitter.emit(P.EventType.dialog.goToMessageContext,{messageId:this.messageId,dialogId:this.dialogId})},onMessageBodyClick(t){if(t.target.tagName==="A"){t.stopPropagation()}}},template:`\n\t\t<div \n\t\t\tclass="bx-im-message-search-item__container bx-im-message-search-item__scope" \n\t\t\t@click.stop="onItemClick"\n\t\t>\n\t\t\t<div class="bx-im-message-search-item__header-container">\n\t\t\t\t<div class="bx-im-message-search-item__author-container">\n\t\t\t\t\t<template v-if="!isSystem">\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\t:dialogId="authorDialogId"\n\t\t\t\t\t\t\tclass="bx-im-message-search-item__author-avatar"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatTitle \n\t\t\t\t\t\t\t:dialogId="authorDialogId" \n\t\t\t\t\t\t\t:showItsYou="false" \n\t\t\t\t\t\t\tclass="bx-im-message-search-item__author-text" \n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t<span class="bx-im-message-search-item__system-author">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_SYSTEM_MESSAGE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-search-item__message-text" v-html="messageText" @click="onMessageBodyClick"></div>\n\t\t</div>\n\t`};const _e={name:"SearchHeader",components:{SearchInput:B.SearchInput},props:{secondLevel:{type:Boolean,default:false}},emits:["back","changeQuery"],template:`\n\t\t<div class="bx-im-sidebar-search-header__container bx-im-sidebar-search-header__scope">\n\t\t\t<div class="bx-im-sidebar-search-header__title-container">\n\t\t\t\t<button\n\t\t\t\t\t:class="{'bx-im-messenger__cross-icon': !secondLevel, 'bx-im-sidebar__back-icon': secondLevel}"\n\t\t\t\t\t@click="$emit('back')"\n\t\t\t\t></button>\n\t\t\t\t<SearchInput\n\t\t\t\t\t:placeholder="$Bitrix.Loc.getMessage('IM_SIDEBAR_SEARCH_MESSAGE_PLACEHOLDER')"\n\t\t\t\t\t:withIcon="false"\n\t\t\t\t\t:delayForFocusOnStart="300"\n\t\t\t\t\t@queryChange="$emit('changeQuery', $event)"\n\t\t\t\t\tclass="bx-im-sidebar-search-header__input"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const xe={name:"MessageSearchPanel",components:{DateGroup:Dt,EmptyState:Ie,SearchItem:fe,Loader:B.Loader,StartState:ut,SearchHeader:_e},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{searchQuery:"",isLoading:false,searchResult:[],currentServerQueries:0}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,formattedCollection(){const t=this.searchResult.map((t=>this.$store.getters["messages/getById"](t))).filter((t=>Boolean(t)));return this.collectionFormatter.format(t)},isEmptyState(){return this.preparedQuery.length>0&&this.formattedCollection.length===0},preparedQuery(){return this.searchQuery.trim().toLowerCase()}},watch:{preparedQuery(t,e){if(t===e){return}this.service.resetSearchState();this.searchResult=[];this.startSearch(t)}},created(){this.service=new ge({dialogId:this.dialogId});this.collectionFormatter=new wt;this.searchOnServerDelayed=C.Runtime.debounce(this.searchOnServer,500,this)},beforeUnmount(){this.collectionFormatter.destroy()},methods:{searchOnServer(t){this.currentServerQueries++;this.service.searchOnServer(t).then((e=>{if(t!==this.preparedQuery){this.isLoading=false;return}this.searchResult=this.mergeResult(e)})).catch((t=>{console.error(t)})).finally((()=>{this.currentServerQueries--;this.stopLoader()}))},startSearch(t){if(t.length<3){return}if(t.length>=3){this.isLoading=true;this.searchOnServerDelayed(t)}if(t.length===0){this.cleanSearchResult()}},stopLoader(){if(this.currentServerQueries>0){return}this.isLoading=false},cleanSearchResult(){this.searchResult=[]},needToLoadNextPage(t){const e=t.target;return e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight},onScroll(t){if(this.isLoading){return}if(!this.needToLoadNextPage(t)||!this.service.hasMoreItemsToLoad){return}this.isLoading=true;this.service.loadNextPage().then((t=>{this.searchResult=this.mergeResult(t);this.isLoading=false})).catch((t=>{S.Logger.warn("Message Search: loadNextPage error",t)}))},mergeResult(t){return[...this.searchResult,...t].sort(((t,e)=>e-t))},onChangeQuery(t){this.searchQuery=t},onClickBack(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.messageSearch})}},template:`\n\t\t<div class="bx-im-message-search-detail__scope">\n\t\t\t<SearchHeader :secondLevel="secondLevel" @changeQuery="onChangeQuery" @back="onClickBack" />\n\t\t\t<div class="bx-im-message-search-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<StartState \n\t\t\t\t\tv-if="!isLoading && preparedQuery.length === 0"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_SEARCH_MESSAGE_START_TITLE')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.messageSearch"\n\t\t\t\t/>\n\t\t\t\t<EmptyState v-if="!isLoading && isEmptyState" />\n\t\t\t\t<Loader v-if="isLoading && isEmptyState" class="bx-im-message-search-detail__loader" />\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-message-search-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<SearchItem\n\t\t\t\t\t\tv-for="item in dateGroup.items"\n\t\t\t\t\t\t:messageId="item.id"\n\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t:query="preparedQuery"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Me={name:"ChatItem",components:{Avatar:B.Avatar,ChatTitle:B.ChatTitle},props:{dialogId:{type:String,required:true}},emits:["clickItem","rightClickItem"],computed:{AvatarSize:()=>B.AvatarSize,recentItem(){return this.$store.getters["recent/get"](this.dialogId)},chatItemText(){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_GROUP_V2")},formattedDate(){if(!this.recentItem.message.date){return""}return this.formatDate(this.recentItem.message.date)}},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})},formatDate(t){return E.DateFormatter.formatByTemplate(t,E.DateTemplate.recent)}},template:`\n\t\t<div \n\t\t\t@click="onClick"\n\t\t\tclass="bx-im-chat-with-user-item__container bx-im-chat-with-user-item__scope"\n\t\t>\n\t\t\t<div class="bx-im-chat-with-user-item__avatar-container">\n\t\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-with-user-item__content-container">\n\t\t\t\t<div class="bx-im-chat-with-user-item__content_header">\n\t\t\t\t\t<ChatTitle :dialogId="dialogId" />\n\t\t\t\t\t<div v-if="formattedDate.length > 0" class="bx-im-chat-with-user-item__date">\n\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-chat-with-user-item__item-text" :title="chatItemText">\n\t\t\t\t\t{{ chatItemText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Se=50;var Ce=babelHelpers.classPrivateFieldLooseKey("chatsCount");var ke=babelHelpers.classPrivateFieldLooseKey("getRequestParams");var Le=babelHelpers.classPrivateFieldLooseKey("requestPage");var Te=babelHelpers.classPrivateFieldLooseKey("handleResponse");var ye=babelHelpers.classPrivateFieldLooseKey("updateModels");var Be=babelHelpers.classPrivateFieldLooseKey("setDialoguesPromise");var Ee=babelHelpers.classPrivateFieldLooseKey("setRecentItems");class De{constructor({dialogId:t}){Object.defineProperty(this,Ee,{value:Ne});Object.defineProperty(this,Be,{value:Re});Object.defineProperty(this,ye,{value:Fe});Object.defineProperty(this,Te,{value:Ae});Object.defineProperty(this,Le,{value:we});Object.defineProperty(this,ke,{value:Pe});this.hasMoreItemsToLoad=true;Object.defineProperty(this,Ce,{writable:true,value:0});this.store=D.Core.getStore();this.restClient=D.Core.getRestClient();this.dialogId=t;this.userManager=new w.UserManager}loadFirstPage(){return babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]()}loadNextPage(){return babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]()}getResponseHandler(){return()=>{}}}function Pe(){const t=Number.parseInt(this.dialogId,10);const e={filter:{userId:t},limit:Se};if(babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce]>0){e.offset=babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce]}return e}async function we(){const t=babelHelpers.classPrivateFieldLooseBase(this,ke)[ke]();const e=await this.restClient.callMethod(P.RestMethod.imV2ChatListShared,t);return babelHelpers.classPrivateFieldLooseBase(this,Te)[Te](e.data())}async function Ae(t){const{chats:e}=t;babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce]+=e.length;if(e.length<Se){this.hasMoreItemsToLoad=false}await babelHelpers.classPrivateFieldLooseBase(this,ye)[ye](e);return e.map((t=>t.dialogId))}function Fe(t){return Promise.all([babelHelpers.classPrivateFieldLooseBase(this,Be)[Be](t),babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee](t)])}function Re(t){return this.store.dispatch("chats/set",t)}function Ne(t){const e=[];t.forEach((t=>{e.push({dialogId:t.dialogId,message:{date:t.dateMessage}})}));return this.store.dispatch("recent/store",e)}const Ue={name:"ChatsWithUserPanel",components:{DetailHeader:Pt,ChatItem:Me,DetailEmptyState:ut,Loader:B.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false,chats:[]}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,isEmptyState(){return!this.isLoading&&this.chats.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},watch:{dialogId(){this.chats=[];this.service=new De({dialogId:this.dialogId});this.loadFirstPage()}},created(){this.service=new De({dialogId:this.dialogId});this.loadFirstPage()},methods:{onClick(t){const{dialogId:e}=t;void y.Messenger.openChat(e)},async loadFirstPage(){this.isLoading=true;this.chats=await this.service.loadFirstPage();this.isLoading=false},needToLoadNextPage(t){const e=t.target;return e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight},async onScroll(t){if(this.isLoading){return}if(!this.needToLoadNextPage(t)||!this.service.hasMoreItemsToLoad){return}this.isLoading=true;const e=await this.service.loadNextPage();this.chats=[...this.chats,...e];this.isLoading=false},onBackClick(){T.EventEmitter.emit(P.EventType.sidebar.close,{panel:P.SidebarDetailBlock.chatsWithUser})}},template:`\n\t\t<div class="bx-im-sidebar-chats-with-user-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_CHATSWITHUSER_DETAIL_TITLE')"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclass="bx-im-sidebar-chats-with-user-detail__container" \n\t\t\t\t@scroll="onScroll"\n\t\t\t>\n\t\t\t\t<ChatItem\n\t\t\t\t\tv-for="chat in chats"\n\t\t\t\t\t:dialog-id="chat"\n\t\t\t\t\t@clickItem="onClick"\n\t\t\t\t/>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_CHATS_WITH_USER_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.messageSearch"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-chats-with-user-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const $e={name:"SidebarPanel",components:{MainPanel:Et,ChatsWithUserPanel:Ue,MembersPanel:ne,FavoritePanel:oe,LinkPanel:Zt,FilePanel:Kt,TaskPanel:At,MeetingPanel:ee,MarketPanel:te,MessageSearchPanel:xe,FileUnsortedPanel:jt},props:{dialogId:{type:String,required:true},panel:{type:String,required:true},secondLevel:{type:Boolean,default:false},entityId:{type:String,default:""}},computed:{panelComponentName(){return`${C.Text.capitalize(this.panel)}Panel`}},template:`\n\t\t<div class="bx-im-sidebar-panel__container" :class="{'--second-level': secondLevel}">\n\t\t\t<KeepAlive>\n\t\t\t\t<component\n\t\t\t\t\t:is="panelComponentName"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t:entityId="entityId"\n\t\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t\tclass="bx-im-sidebar-panel__component"\n\t\t\t\t/>\n\t\t\t</KeepAlive>\n\t\t</div>\n\t`};const He={name:"ChatSidebar",components:{SidebarPanel:$e},props:{originDialogId:{type:String,required:true}},emits:["changePanel"],data(){return{needTopLevelTransition:true,needSecondLevelTransition:true,topLevelPanelType:"",topLevelPanelDialogId:"",topLevelPanelStandalone:false,secondLevelPanelType:"",secondLevelPanelDialogId:"",secondLevelPanelEntityId:"",secondLevelPanelStandalone:false}},computed:{SidebarDetailBlock:()=>P.SidebarDetailBlock,topLevelTransitionName(){return this.needTopLevelTransition?"top-level-panel":""},secondLevelTransitionName(){return this.needSecondLevelTransition?"second-level-panel":""},canShowTopPanelForChat(){const t=!this.originDialogId.startsWith("chat");return!(t&&this.topLevelPanelType===P.SidebarDetailBlock.members)}},watch:{originDialogId(t,e){const i=Boolean(t&&e);if(i){this.needTopLevelTransition=false}if(!this.secondLevelPanelStandalone&&!this.topLevelPanelStandalone){this.updateTopPanelOriginDialogId(t)}const s=this.secondLevelPanelType.length>0;if(s&&!this.secondLevelPanelStandalone){this.closeSecondLevelPanel()}if(!this.canShowTopPanelForChat){this.closeTopPanel()}},topLevelPanelType(t,e){this.needTopLevelTransition=e.length===0||t.length===0;const i=t===P.SidebarDetailBlock.main;this.saveSidebarOpenedState(i)},secondLevelPanelType(t,e){this.needSecondLevelTransition=!(t&&e)}},created(){S.Logger.warn("ChatSidebar: created");this.restoreOpenState()},mounted(){T.EventEmitter.subscribe(P.EventType.sidebar.open,this.onSidebarOpen);T.EventEmitter.subscribe(P.EventType.sidebar.close,this.onSidebarClose)},beforeUnmount(){T.EventEmitter.unsubscribe(P.EventType.sidebar.open,this.onSidebarOpen);T.EventEmitter.unsubscribe(P.EventType.sidebar.close,this.onSidebarClose)},methods:{onSidebarOpen(t){const{panel:e="",standalone:i=false,dialogId:s,entityId:n=""}=t.getData();const a=e&&this.secondLevelPanelType===e;if(a){this.closeSecondLevelPanel();return}const r=this.topLevelPanelType&&this.topLevelPanelType!==e;if(r){this.openSecondLevelPanel(e,s,i,n)}else{this.openTopPanel(e,s,i)}},onSidebarClose(t){this.needTopLevelTransition=true;const{panel:e=""}=t.getData();const i=e&&this.secondLevelPanelType===e;if(i){this.closeSecondLevelPanel()}else{this.closeSecondLevelPanel();this.closeTopPanel()}},restoreOpenState(){const t=e.LocalStorageManager.getInstance().get(P.LocalStorageKey.sidebarOpened);if(!t){return}this.openTopPanel(P.SidebarDetailBlock.main,this.originDialogId,false)},saveSidebarOpenedState(t){const i=200;clearTimeout(this.saveSidebarStateTimeout);this.saveSidebarStateTimeout=setTimeout((()=>{e.LocalStorageManager.getInstance().set(P.LocalStorageKey.sidebarOpened,t)}),i)},openTopPanel(t,e,i=false){this.topLevelPanelType=t;this.topLevelPanelDialogId=e;this.topLevelPanelStandalone=i;this.$emit("changePanel",{panel:this.topLevelPanelType})},updateTopPanelOriginDialogId(t){this.topLevelPanelDialogId=t},openSecondLevelPanel(t,e,i=false,s=""){this.secondLevelPanelType=t;this.secondLevelPanelDialogId=e;this.secondLevelPanelStandalone=i;this.secondLevelPanelEntityId=s;this.$emit("changePanel",{panel:this.secondLevelPanelType})},closeTopPanel(){this.topLevelPanelType="";this.topLevelPanelDialogId="";this.topLevelPanelStandalone=false;this.$emit("changePanel",{panel:""})},closeSecondLevelPanel(){this.secondLevelPanelType="";this.secondLevelPanelDialogId="";this.secondLevelPanelStandalone=false;this.$emit("changePanel",{panel:this.topLevelPanelType})}},template:`\n\t\t<div class="bx-im-sidebar__container">\n\t\t\t<Transition :name="topLevelTransitionName">\n\t\t\t\t<SidebarPanel\n\t\t\t\t\tv-if="topLevelPanelType"\n\t\t\t\t\t:dialogId="topLevelPanelDialogId"\n\t\t\t\t\t:panel="topLevelPanelType"\n\t\t\t\t/>\n\t\t\t</Transition>\n\t\t\t<Transition :name="secondLevelTransitionName">\n\t\t\t\t<SidebarPanel\n\t\t\t\t\tv-if="secondLevelPanelType"\n\t\t\t\t\t:dialogId="secondLevelPanelDialogId" \n\t\t\t\t\t:panel="secondLevelPanelType"\n\t\t\t\t\t:entityId="secondLevelPanelEntityId"\n\t\t\t\t\t:secondLevel="true"\n\t\t\t\t/>\n\t\t\t</Transition>\n\t\t</div>\n\t`};t.ChatSidebar=He})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Vue3.Directives,BX.UI,BX.Messenger.v2.Lib,BX.Main,BX.Vue3.Directives,BX.Vue3.Components,BX.UI.Viewer,BX,BX.Messenger.v2.Model,BX,BX,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.EntitySelector,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib);
//# sourceMappingURL=sidebar.bundle.map.js