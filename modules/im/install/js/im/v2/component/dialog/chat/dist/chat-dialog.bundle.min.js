this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,a,o,r,n,l,c,g,d,h,u,m,M,p,v,I,b,f,S,T){"use strict";const _="BX.Messenger.v2.Dialog.ScrollManager";const C=1500;const L=40;const x=400;class w extends m.EventEmitter{constructor(){super();this.isScrolling=false;this.currentScroll=0;this.lastScroll=0;this.chatIsScrolledUp=false;this.scrollButtonClicked=false;this.setEventNamespace(_)}setContainer(e){this.container=e}onScroll(e){if(this.isScrolling||!e.target){return false}this.currentScroll=e.target.scrollTop;const t=this.lastScroll<this.currentScroll;const s=!t;if(s){this.scrollButtonClicked=false}const i=e.target.scrollHeight-e.target.scrollTop-e.target.clientHeight;if(t&&this.lastScroll>0&&i<C){this.emit(w.events.onScrollTriggerDown)}else if(s&&this.currentScroll<=C){this.emit(w.events.onScrollTriggerUp)}this.lastScroll=this.currentScroll;this.checkIfChatIsScrolledUp()}checkIfChatIsScrolledUp(){const e=this.container.scrollHeight-this.container.clientHeight;const t=this.currentScroll+x<e;if(t!==this.chatIsScrolledUp){this.emit(w.events.onScrollThresholdPass,t)}this.chatIsScrolledUp=t}scrollToBottom(){T.Logger.warn("Dialog: ScrollManager: scroll to bottom");this.forceScrollTo(this.container.scrollHeight-this.container.clientHeight)}animatedScrollToBottom(){T.Logger.warn("Dialog: ScrollManager: animated scroll to bottom");this.animatedScrollTo(this.container.scrollHeight-this.container.clientHeight)}scrollToMessage(e,t=-10){T.Logger.warn("Dialog: ScrollManager: scroll to message - ",e);const s=this.getDomElementById(e);if(!s){T.Logger.warn("Dialog: ScrollManager: message not found - ",e);return}const i=s.offsetTop+t;this.forceScrollTo(i)}animatedScrollToMessage(e,t=-10){T.Logger.warn("Dialog: ScrollManager: animated scroll to message - ",e);const s=this.getDomElementById(e);if(!s){T.Logger.warn("Dialog: ScrollManager: message not found - ",e);return}const i=s.offsetTop+t;return this.animatedScrollTo(i)}forceScrollTo(e){T.Logger.warn("Dialog: ScrollManager: Force scroll to - ",e);this.cancelAnimatedScroll();this.container.scroll({top:e,behavior:"instant"})}adjustScrollOnHistoryAddition(e){T.Logger.warn("Dialog: ScrollManager: Adjusting scroll after history addition");const t=this.container.scrollHeight-this.container.clientHeight;const s=this.container.scrollTop+t-e;this.forceScrollTo(s)}animatedScrollTo(e){T.Logger.warn("Dialog: ScrollManager: Animated scroll to - ",e);return new Promise((t=>{o.Animation.start({start:this.container.scrollTop,end:e,element:this.container,elementProperty:"scrollTop",callback:()=>{this.checkIfChatIsScrolledUp();t()}})}))}cancelAnimatedScroll(){if(!this.isScrolling){return}o.Animation.cancel();this.isScrolling=false}isAtTheTop(){return this.container.scrollTop===0}isAtTheBottom(){return this.container.scrollTop+this.container.clientHeight>=this.container.scrollHeight}isAroundBottom(){return this.container.scrollHeight-this.container.scrollTop-this.container.clientHeight<L}getDomElementById(e){return this.container.querySelector(`[data-id="${e}"]`)}}w.events={onScrollTriggerUp:"onScrollTriggerUp",onScrollTriggerDown:"onScrollTriggerDown",onScrollThresholdPass:"onScrollThresholdPass"};class E{constructor(e){this.firstIteration=true;this.cachedDateGroups={};this.store=b.Core.getStore();this.dialogId=e}formatMessageCollection(e){const t={};const s=[];let i=null;let a=null;let o=null;const r=this.store.getters["dialogues/get"](this.dialogId);const{markedId:n,inited:l}=r;let c=false;const g=this.store.getters["dialogues/getLastReadId"](this.dialogId);if(this.firstIteration){this.initialLastReadMessage=g;this.initialMarkedId=n}if(n!==this.initialMarkedId&&n!==0){this.initialMarkedId=n;this.initialLastReadMessage=null}e.forEach(((r,n)=>{const l=this.getDateGroup(r.date);if(!t[l.title]){t[l.title]=l.id;i=[];s.push({type:f.DialogBlockType.dateGroup,date:l,items:i});a=null}if(r.id===this.initialMarkedId){i.push({type:f.DialogBlockType.markedMessages});a=null;c=true}if(r.authorId!==a){a=r.authorId;o=[];i.push({type:f.DialogBlockType.authorGroup,userId:r.authorId,avatar:this.getAvatarConfig(r),messageType:this.getMessageType(r),items:o})}o.push(r);const g=n===e.length-1;if(!c&&!g&&r.id===this.initialLastReadMessage){i.push({type:f.DialogBlockType.newMessages});a=null}}));if(l){this.firstIteration=false}return s}getDateGroup(e){const t=10;const s=e.toJSON().slice(0,t);if(this.cachedDateGroups[s]){return this.cachedDateGroups[s]}this.cachedDateGroups[s]={id:s,title:v.DateFormatter.formatByTemplate(e,v.DateTemplate.dateGroup)};return this.cachedDateGroups[s]}getAvatarConfig(e){const t=this.getMessageType(e);let s=e.authorId.toString();let i=true;if(t===f.MessageType.self||t===f.MessageType.system||e.componentId!==f.MessageComponent.base){i=false}return{isNeeded:i,avatarId:s}}getMessageType(e){if(!e.authorId){return f.MessageType.system}else if(e.authorId===b.Core.getUserId()){return f.MessageType.self}else{return f.MessageType.opponent}}}const A="-".repeat(54);const D={sendQuoteEvent(e){m.EventEmitter.emit(f.EventType.textarea.insertText,{text:this.prepareQuoteText(e),withNewLine:true})},prepareQuoteText(e){let t=p.Loc.getMessage("IM_DIALOG_CHAT_QUOTE_DEFAULT_TITLE");if(e.authorId){const s=b.Core.getStore().getters["users/get"](e.authorId);t=s.name}const s=v.DateFormatter.formatByTemplate(e.date,v.DateTemplate.notification);const i=M.Parser.prepareQuote(e);let a="";const o=b.Core.getStore().getters["dialogues/getByChatId"](e.chatId);if(o&&o.type===f.DialogType.user){a=`#${o.dialogId}:${b.Core.getUserId()}/${e.id}`}else{a=`#${o.dialogId}/${e.id}`}return`${A}\n`+`${t} [${s}] ${a}\n`+`${i}\n`+`${A}\n`}};var P=babelHelpers.classPrivateFieldLooseKey("isOwnMessage");var B=babelHelpers.classPrivateFieldLooseKey("isDeletedMessage");var y=babelHelpers.classPrivateFieldLooseKey("getMessageFile");class U extends g.BaseMenu{constructor(){super();Object.defineProperty(this,y,{value:F});Object.defineProperty(this,B,{value:H});Object.defineProperty(this,P,{value:k});this.id="bx-im-message-context-menu";this.diskService=new h.DiskService;this.marketManager=n.MarketManager.getInstance()}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:true,offsetLeft:11}}getMenuItems(){return[this.getQuoteItem(),this.getCopyItem(),this.getDelimiter(),this.getDownloadFileItem(),this.getSaveToDisk(),this.getPinItem(),this.getFavoriteItem(),this.getMarkItem(),this.getDelimiter(),this.getCreateItem(),this.getDelimiter(),this.getEditItem(),this.getDelimiter(),this.getDeleteItem()]}getQuoteItem(){return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_QUOTE"),onclick:()=>{D.sendQuoteEvent(this.context);this.menuInstance.close()}}}getCopyItem(){if(this.context.files.length===0){return null}return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_FILE"),onclick:()=>{var e;const t=M.Parser.prepareCopy(this.context);if((e=BX.clipboard)!=null&&e.copy(t)){BX.UI.Notification.Center.notify({content:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_FILE_SUCCESS")})}this.menuInstance.close()}}}getPinItem(){if(babelHelpers.classPrivateFieldLooseBase(this,B)[B]()){return null}const e=this.store.getters["messages/pin/isPinned"]({chatId:this.context.chatId,messageId:this.context.id});return{text:e?p.Loc.getMessage("IM_DIALOG_CHAT_MENU_UNPIN"):p.Loc.getMessage("IM_DIALOG_CHAT_MENU_PIN"),onclick:()=>{const t=new h.MessageService({chatId:this.context.chatId});if(e){t.unpinMessage(this.context.chatId,this.context.id)}else{t.pinMessage(this.context.chatId,this.context.id)}this.menuInstance.close()}}}getFavoriteItem(){if(babelHelpers.classPrivateFieldLooseBase(this,B)[B]()){return null}const e=this.store.getters["sidebar/favorites/isFavoriteMessage"](this.context.chatId,this.context.id);const t=e?p.Loc.getMessage("IM_DIALOG_CHAT_MENU_REMOVE_FROM_SAVED"):p.Loc.getMessage("IM_DIALOG_CHAT_MENU_SAVE");return{text:t,onclick:()=>{const t=new h.MessageService({chatId:this.context.chatId});if(e){t.removeMessageFromFavorite(this.context.id)}else{t.addMessageToFavorite(this.context.id)}this.menuInstance.close()}}}getMarkItem(){const e=this.context.viewed&&!babelHelpers.classPrivateFieldLooseBase(this,P)[P]();const t=this.store.getters["dialogues/getByChatId"](this.context.chatId);const s=this.context.id===t.markedId;if(!e||s){return null}return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_MARK"),onclick:()=>{const e=new h.MessageService({chatId:this.context.chatId});e.markMessage(this.context.id);this.menuInstance.close()}}}getCreateItem(){if(babelHelpers.classPrivateFieldLooseBase(this,B)[B]()){return null}return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_CREATE"),items:[this.getCreateTaskItem(),this.getCreateMeetingItem(),...this.getMarketItems()]}}getCreateTaskItem(){return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_CREATE_TASK"),onclick:()=>{const e=new r.EntityCreator(this.context.chatId);void e.createTaskForMessage(this.context.id);this.menuInstance.close()}}}getCreateMeetingItem(){return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_CREATE_MEETING"),onclick:()=>{const e=new r.EntityCreator(this.context.chatId);void e.createMeetingForMessage(this.context.id);this.menuInstance.close()}}}getEditItem(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P]()||babelHelpers.classPrivateFieldLooseBase(this,B)[B]()){return null}return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_EDIT"),onclick:()=>{m.EventEmitter.emit(f.EventType.textarea.editMessage,{messageId:this.context.id});this.menuInstance.close()}}}getDeleteItem(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P]()||babelHelpers.classPrivateFieldLooseBase(this,B)[B]()){return null}return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_DELETE"),onclick:()=>{const e=new h.MessageService({chatId:this.context.chatId});e.deleteMessage(this.context.id);this.menuInstance.close()}}}getMarketItems(){const{dialogId:e,id:t}=this.context;const s=this.marketManager.getAvailablePlacementsByType(f.PlacementType.contextMenu,e);const i=[];if(s.length>0){i.push(this.getDelimiter())}const a={messageId:t,dialogId:e};s.forEach((e=>{i.push({text:e.title,onclick:()=>{n.MarketManager.openSlider(e,a);this.menuInstance.close()}})}));const o=11;return i.slice(0,o)}getDownloadFileItem(){const e=babelHelpers.classPrivateFieldLooseBase(this,y)[y]();if(!e){return null}return{html:d.Utils.file.createDownloadLink(p.Loc.getMessage("IM_DIALOG_CHAT_MENU_DOWNLOAD_FILE"),e.urlDownload,e.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveToDisk(){const e=babelHelpers.classPrivateFieldLooseBase(this,y)[y]();if(!e){return null}return{text:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_SAVE_ON_DISK"),onclick:function(){void this.diskService.save(e.id).then((()=>{BX.UI.Notification.Center.notify({content:p.Loc.getMessage("IM_DIALOG_CHAT_MENU_SAVE_ON_DISK_SUCCESS")})}));this.menuInstance.close()}.bind(this)}}getDelimiter(){return{delimiter:true}}}function k(){return this.context.authorId===b.Core.getUserId()}function H(){return this.context.isDeleted}function F(){if(this.context.files.length===0){return null}return this.store.getters["files/get"](this.context.files[0])}class O extends g.BaseMenu{constructor(){super();this.id="bx-im-avatar-context-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:true,offsetLeft:21}}getMenuItems(){return[this.getMentionItem(),this.getSendItem(),this.getProfileItem(),this.getKickItem()]}getMentionItem(){return{text:p.Loc.getMessage("IM_DIALOG_AVATAR_MENU_MENTION"),onclick:()=>{m.EventEmitter.emit(f.EventType.textarea.insertMention,{mentionText:this.context.user.name,mentionReplacement:d.Utils.user.getMentionBbCode(this.context.user.id,this.context.user.name)});this.menuInstance.close()}}}getSendItem(){return{text:p.Loc.getMessage("IM_DIALOG_AVATAR_MENU_SEND_MESSAGE"),onclick:()=>{c.Messenger.openChat(this.context.user.id);this.menuInstance.close()}}}getProfileItem(){return{text:p.Loc.getMessage("IM_DIALOG_AVATAR_MENU_OPEN_PROFILE"),href:d.Utils.user.getProfileLink(this.context.user.id),onclick:()=>{this.menuInstance.close()}}}getKickItem(){const e=b.Core.getUserId()===this.context.dialog.owner;const t=this.context.dialog.type===f.DialogType.user;if(!e||t){return null}return{text:p.Loc.getMessage("IM_DIALOG_AVATAR_MENU_KICK"),onclick:()=>{const e=new h.ChatService;e.kickUserFromChat(this.context.dialog.dialogId,this.context.user.id);this.menuInstance.close()}}}}const G="BX.Messenger.v2.Dialog.ObserverManager";var N=babelHelpers.classPrivateFieldLooseKey("observer");var R=babelHelpers.classPrivateFieldLooseKey("observedElements");var $=babelHelpers.classPrivateFieldLooseKey("visibleMessages");var V=babelHelpers.classPrivateFieldLooseKey("messagesToRead");var X=babelHelpers.classPrivateFieldLooseKey("dialogInited");var K=babelHelpers.classPrivateFieldLooseKey("initObserver");var j=babelHelpers.classPrivateFieldLooseKey("getMessageIdFromElement");var q=babelHelpers.classPrivateFieldLooseKey("messageIsViewed");class Q extends m.EventEmitter{constructor(){super();Object.defineProperty(this,q,{value:Y});Object.defineProperty(this,j,{value:z});Object.defineProperty(this,K,{value:W});Object.defineProperty(this,N,{writable:true,value:void 0});Object.defineProperty(this,R,{writable:true,value:{}});Object.defineProperty(this,$,{writable:true,value:new Set});Object.defineProperty(this,V,{writable:true,value:new Set});Object.defineProperty(this,X,{writable:true,value:false});this.setEventNamespace(G);babelHelpers.classPrivateFieldLooseBase(this,K)[K]()}setDialogInited(e){Object.values(babelHelpers.classPrivateFieldLooseBase(this,R)[R]).forEach((e=>{this.unobserveMessage(e);this.observeMessage(e)}));babelHelpers.classPrivateFieldLooseBase(this,X)[X]=e}observeMessage(e){babelHelpers.classPrivateFieldLooseBase(this,N)[N].observe(e);if(babelHelpers.classPrivateFieldLooseBase(this,j)[j](e)){babelHelpers.classPrivateFieldLooseBase(this,R)[R][e.dataset.id]=e}}unobserveMessage(e){babelHelpers.classPrivateFieldLooseBase(this,N)[N].unobserve(e);if(babelHelpers.classPrivateFieldLooseBase(this,j)[j](e)){delete babelHelpers.classPrivateFieldLooseBase(this,R)[R][e.dataset.id]}}onReadMessage(e){babelHelpers.classPrivateFieldLooseBase(this,V)[V].delete(e)}getMessagesToRead(){return[...babelHelpers.classPrivateFieldLooseBase(this,V)[V]]}getFirstVisibleMessage(){if(babelHelpers.classPrivateFieldLooseBase(this,$)[$].size===0){return 0}const[e]=[...babelHelpers.classPrivateFieldLooseBase(this,$)[$]].sort(((e,t)=>e-t));return e}}function W(){babelHelpers.classPrivateFieldLooseBase(this,N)[N]=new IntersectionObserver((e=>{e.forEach((e=>{const t=babelHelpers.classPrivateFieldLooseBase(this,j)[j](e.target);if(!t||!e.rootBounds||!babelHelpers.classPrivateFieldLooseBase(this,X)[X]){return}const s=e.isIntersecting&&e.intersectionRatio>=.99;const i=e.intersectionRect.height>=e.rootBounds.height/2.2;if(s||i){babelHelpers.classPrivateFieldLooseBase(this,$)[$].add(t);if(!babelHelpers.classPrivateFieldLooseBase(this,q)[q](e.target)){babelHelpers.classPrivateFieldLooseBase(this,V)[V].add(t);this.emit(Q.events.onMessageIsVisible)}}else{babelHelpers.classPrivateFieldLooseBase(this,$)[$].delete(t);if(babelHelpers.classPrivateFieldLooseBase(this,q)[q](e.target)){babelHelpers.classPrivateFieldLooseBase(this,V)[V].delete(t)}}}))}),{threshold:Array.from({length:101}).fill(0).map(((e,t)=>t*.01))})}function z(e){return+e.dataset.id}function Y(e){return e.dataset["viewed"]==="true"}Q.events={onMessageIsVisible:"onMessageIsVisible"};const J={data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-dialog-chat__new-message-block">\n\t\t\t<div class="bx-im-dialog-chat__new-message-block_text">{{ loc('IM_DIALOG_CHAT_BLOCK_NEW_MESSAGES_2') }}</div>\n\t\t</div>\n\t`};const Z={data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-dialog-chat__new-message-block">\n\t\t\t<div class="bx-im-dialog-chat__new-message-block_text">{{ loc('IM_DIALOG_CHAT_BLOCK_MARKED_MESSAGES') }}</div>\n\t\t</div>\n\t`};const ee={props:{title:{type:String,required:true}},data(){return{}},template:`\n\t\t<div class="bx-im-dialog-chat__date-group_title_container">\n\t\t\t<div class="bx-im-dialog-chat__date-group_title">{{ title }}</div>\n\t\t</div>\n\t`};const te={props:{message:{type:Object,required:true}},data(){return{}},computed:{internalMessage(){return this.message},text(){return M.Parser.purifyMessage(this.internalMessage)},authorId(){return this.internalMessage.authorId},author(){return this.$store.getters["users/get"](this.authorId)}},template:`\n\t\t<div class="bx-im-dialog-chat__pinned_item">\n\t\t\t<span v-if="author" class="bx-im-dialog-chat__pinned_item_user">{{ author.name }}:</span> {{ text }}\n\t\t</div>\n\t`};const se={components:{PinnedMessage:te},props:{messages:{type:Array,required:true}},emits:["messageClick","messageUnpin"],data(){return{}},computed:{firstMessage(){return this.messagesToShow[0]},messagesToShow(){return this.messages.slice(-1)}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div @click="$emit('messageClick', firstMessage.id)" class="bx-im-dialog-chat__pinned_container">\n\t\t\t<div class="bx-im-dialog-chat__pinned_title">{{ loc('IM_DIALOG_CHAT_PINNED_TITLE') }}</div>\n\t\t\t<PinnedMessage\n\t\t\t\tv-for="message in messagesToShow"\n\t\t\t\t:message="message"\n\t\t\t\t:key="message.id"\n\t\t\t\t@click="$emit('messageClick', message.id)"\n\t\t\t/>\n\t\t\t<div @click.stop="$emit('messageUnpin', firstMessage.id)" class="bx-im-dialog-chat__pinned_unpin"></div>\n\t\t</div>\n\t`};var ie=babelHelpers.classPrivateFieldLooseKey("store");var ae=babelHelpers.classPrivateFieldLooseKey("restClient");var oe=babelHelpers.classPrivateFieldLooseKey("userManager");class re{constructor(){Object.defineProperty(this,ie,{writable:true,value:void 0});Object.defineProperty(this,ae,{writable:true,value:void 0});Object.defineProperty(this,oe,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]=b.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]=b.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,oe)[oe]=new S.UserManager}loadReadUsers(e){let t=[];T.Logger.warn("Dialog: UserService: loadReadUsers",e);return babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].callMethod(f.RestMethod.imV2ChatMessageTailViewers,{id:e}).then((e=>{t=e.data().users;return babelHelpers.classPrivateFieldLooseBase(this,oe)[oe].setUsersToModel(Object.values(t))})).then((()=>t.map((e=>e.id)))).catch((e=>{console.error("Dialog: UserService: loadReadUsers error",e);throw new Error(e)}))}}const ne={components:{UserListPopup:I.UserListPopup},props:{dialogId:{type:String,required:true},show:{type:Boolean,required:true},bindElement:{type:Object,required:true}},emits:["close"],data(){return{showPopup:false,loadingAdditionalUsers:false,additionalUsers:[]}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)}},watch:{show(e,t){if(!t&&e){this.showPopup=true;this.loadUsers()}}},methods:{loadUsers(){this.loadingAdditionalUsers=true;this.getUserService().loadReadUsers(this.dialog.lastMessageId).then((e=>{this.additionalUsers=this.prepareAdditionalUsers(e);this.loadingAdditionalUsers=false})).catch((()=>{this.loadingAdditionalUsers=false}))},onPopupClose(){this.showPopup=false;this.$emit("close")},prepareAdditionalUsers(e){const t=this.dialog.lastMessageViews.firstViewer.userId;return e.filter((e=>e!==b.Core.getUserId()&&e!==t))},getUserService(){if(!this.userService){this.userService=new re}return this.userService}},template:`\n\t\t<UserListPopup\n\t\t\tid="bx-im-dialog-read-users"\n\t\t\t:showPopup="showPopup"\n\t\t\t:loading="loadingAdditionalUsers"\n\t\t\t:userIds="additionalUsers"\n\t\t\t:bindElement="bindElement || {}"\n\t\t\t:withAngle="false"\n\t\t\t:forceTop="true"\n\t\t\t@close="onPopupClose"\n\t\t/>\n\t`};const le=3;const ce="bx-im-dialog-chat-status__user-count";const ge={components:{AdditionalUsers:ne},props:{dialogId:{required:true,type:String}},data(){return{showAdditionalUsers:false,additionalUsersLinkElement:null}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isUser(){return this.dialog.type===f.DialogType.user},isChat(){return!this.isUser},typingStatus(){if(!this.dialog.inited||this.dialog.writingList.length===0){return""}const e=this.dialog.writingList.slice(0,le);const t=e.map((e=>e.userName)).join(", ");const s=this.dialog.writingList.length-le;if(s>0){return this.loc("IM_DIALOG_CHAT_STATUS_TYPING_PLURAL",{"#USER#":t,"#COUNT#":s})}return this.loc("IM_DIALOG_CHAT_STATUS_TYPING",{"#USER#":t})},readStatus(){if(!this.dialog.inited){return""}if(this.lastMessageViews.countOfViewers===0){return""}if(this.isUser){return this.formatUserViewStatus()}return this.formatChatViewStatus()},lastMessageViews(){return this.dialog.lastMessageViews}},methods:{formatUserViewStatus(){const{date:e}=this.lastMessageViews.firstViewer;return this.loc("IM_DIALOG_CHAT_STATUS_READ_USER",{"#DATE#":v.DateFormatter.formatByTemplate(e,v.DateTemplate.messageReadStatus)})},formatChatViewStatus(){const{countOfViewers:e,firstViewer:t}=this.lastMessageViews;if(e===1){return this.loc("IM_DIALOG_CHAT_STATUS_READ_CHAT",{"#USER#":t.userName})}return this.loc("IM_DIALOG_CHAT_STATUS_READ_CHAT_PLURAL",{"#USERS#":p.Text.encode(t.userName),"#LINK_START#":`<span class="${ce}" ref="moreUsersLink">`,"#COUNT#":e-1,"#LINK_END#":"</span>"})},onClick(e){if(!e.target.matches(`.${ce}`)){return}this.onMoreUsersClick()},onMoreUsersClick(){this.additionalUsersLinkElement=document.querySelector(`.${ce}`);this.showAdditionalUsers=true},loc(e,t={}){return this.$Bitrix.Loc.getMessage(e,t)}},template:`\n\t\t<div @click="onClick" class="bx-im-dialog-chat-status__container">\n\t\t\t<div v-if="typingStatus" class="bx-im-dialog-chat-status__content">\n\t\t\t\t<div class="bx-im-dialog-chat-status__icon --typing"></div>\n\t\t\t\t<div class="bx-im-dialog-chat-status__text">{{ typingStatus }}</div>\n\t\t\t</div>\n\t\t\t<div v-else-if="readStatus" class="bx-im-dialog-chat-status__content">\n\t\t\t\t<div class="bx-im-dialog-chat-status__icon --read"></div>\n\t\t\t\t<div v-html="readStatus" class="bx-im-dialog-chat-status__text"></div>\n\t\t\t</div>\n\t\t\t<AdditionalUsers\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:show="showAdditionalUsers"\n\t\t\t\t:bindElement="additionalUsersLinkElement || {}"\n\t\t\t\t@close="showAdditionalUsers = false"\n\t\t\t/>\n\t\t</div>\n\t`};const de={name:"DialogLoader",props:{fullHeight:{type:Boolean,default:true}},data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-dialog-loader__container" :class="{'--full-height': fullHeight}">\n\t\t\t<div class="bx-im-dialog-loader__spinner"></div>\n\t\t\t<div class="bx-im-dialog-loader__text">{{ loc('IM_DIALOG_CHAT_LOADER_TEXT') }}</div>\n\t\t</div>\n\t`};const he=52;const ue=200;const me={name:"ChatDialog",components:{Avatar:I.Avatar,BaseMessage:s.BaseMessage,ChatCreationMessage:i.ChatCreationMessage,PinnedMessages:se,NewMessagesBlock:J,MarkedMessagesBlock:Z,DateGroupTitle:ee,ChatInfoPopup:I.ChatInfoPopup,DialogStatus:ge,DialogLoader:de},directives:{"message-observer":{mounted(e,t){t.instance.observerManager.observeMessage(e)},beforeUnmount(e,t){t.instance.observerManager.unobserveMessage(e)}}},props:{dialogId:{type:String,default:""},textareaHeight:{type:Number,default:0}},data(){return{messageMenuIsActiveForId:0,chatInfoPopup:{element:null,dialogId:0,show:false},contextMode:{active:false,messageIsLoaded:false},initialScrollCompleted:false,isScrolledUp:false,windowFocused:false}},computed:{BlockType:()=>f.DialogBlockType,AvatarSize:()=>I.AvatarSize,layout(){return this.$store.getters["application/getLayout"]},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},dialogInited(){return this.dialog.inited},formattedCollection(){if(!this.dialogInited&&this.messageCollection.length===0){return[]}return this.getCollectionManager().formatMessageCollection(this.messageCollection)},messageCollection(){return this.$store.getters["messages/get"](this.dialog.chatId)},pinnedMessages(){return this.$store.getters["messages/pin/getPinned"](this.dialog.chatId)},isOpened(){const e=this.$store.getters["application/getLayout"].entityId;return this.dialogId===e},debouncedScrollHandler(){const e=200;return p.Runtime.debounce(this.getScrollManager().onScroll,e,this.getScrollManager())},debouncedReadHandler(){return p.Runtime.debounce(this.readVisibleMessages,50,this)},formattedCounter(){if(this.dialog.counter===0){return""}if(this.dialog.counter>99){return"99+"}return String(this.dialog.counter)},showDialogStatus(){return this.messageCollection.some((e=>e.id===this.dialog.lastMessageId))}},watch:{dialogInited(e,t){if(!e||t){return}this.onChatInited()},textareaHeight(){if(this.isScrolledUp||!this.dialogInited){return}void this.$nextTick((()=>{this.getScrollManager().scrollToBottom()}))}},created(){T.Logger.warn("Dialog: Chat created",this.dialogId);this.getCollectionManager();this.initContextMenu();this.initObserverManager();this.initContextMode()},mounted(){this.getScrollManager().setContainer(this.getContainer());if(this.dialogInited){this.onChatInited()}else if(!this.dialogInited&&this.messageCollection.length>0){this.scrollOnStart()}this.windowFocused=document.hasFocus();this.subscribeToEvents()},beforeUnmount(){this.closeMessageMenu();this.unsubscribeFromEvents();if(this.dialogInited){this.saveScrollPosition();this.loadMessagesOnExit()}},methods:{readVisibleMessages(){if(!this.dialogInited||!this.windowFocused||this.hasVisibleCall()){return}this.getObserverManager().getMessagesToRead().forEach((e=>{this.getChatService().readMessage(this.dialog.chatId,e);this.getObserverManager().onReadMessage(e)}))},scrollOnStart(){void this.$nextTick((()=>{if(this.contextMode.active&&this.contextMode.messageIsLoaded){this.getScrollManager().scrollToMessage(this.layout.contextId,-he);void this.$nextTick((()=>{this.highlightMessage(this.layout.contextId)}))}else if(this.contextMode.active&&!this.contextMode.messageIsLoaded){void this.goToMessageContext(this.layout.contextId)}else if(this.dialog.markedId){this.getScrollManager().scrollToMessage(f.DialogBlockType.newMessages,-he)}else if(this.dialog.savedPositionMessageId){T.Logger.warn("Dialog: saved scroll position, scrolling to",this.dialog.savedPositionMessageId);this.getScrollManager().scrollToMessage(this.dialog.savedPositionMessageId)}else if(this.$store.getters["dialogues/getLastReadId"](this.dialogId)){this.getScrollManager().scrollToMessage(f.DialogBlockType.newMessages,-he)}else if(this.$store.getters["messages/getFirstUnread"](this.dialog.chatId)){T.Logger.warn("Dialog: new chat with unread messages, dont scroll")}else{this.getScrollManager().scrollToBottom()}}))},goToMessageContext(e){const t=this.$store.getters["messages/hasMessage"]({chatId:this.dialog.chatId,messageId:e});if(t){T.Logger.warn("Dialog: we have this message, scrolling to it",e);return this.getScrollManager().animatedScrollToMessage(e,-he).then((()=>{this.highlightMessage(e);return true}))}return this.getMessageService().loadContext(e).then((()=>this.$nextTick())).then((()=>{this.getScrollManager().scrollToMessage(e,-he);return this.$nextTick()})).then((()=>{this.highlightMessage(e);return true})).catch((e=>{T.Logger.error("goToMessageContext error",e)}))},highlightMessage(e){const t="bx-im-dialog-chat__highlighted-message";const s=2e3;const i=this.getScrollManager().getDomElementById(e);if(!i){return}p.Dom.addClass(i,t);setTimeout((()=>{p.Dom.removeClass(i,t)}),s)},saveScrollPosition(){let e=this.getObserverManager().getFirstVisibleMessage();if(this.getScrollManager().isAroundBottom()){e=0}this.$store.dispatch("dialogues/update",{dialogId:this.dialogId,fields:{savedPositionMessageId:e}})},loadMessagesOnExit(){setTimeout((()=>{void this.getMessageService().reloadMessageList()}),ue)},initContextMode(){if(!this.layout.contextId){return}this.contextMode.active=true;this.contextMode.messageIsLoaded=!this.dialogInited},initContextMenu(){this.messageMenu=new U;this.messageMenu.subscribe(U.events.onCloseMenu,(()=>{this.messageMenuIsActiveForId=0}));this.avatarMenu=new O},initObserverManager(){this.observerManager=new Q;this.observerManager.subscribe(Q.events.onMessageIsVisible,(()=>{this.debouncedReadHandler()}))},getObserverManager(){return this.observerManager},getCollectionManager(){if(!this.collectionManager){this.collectionManager=new E(this.dialogId)}return this.collectionManager},getMessageService(){if(!this.messageService){this.messageService=new h.MessageService({chatId:this.dialog.chatId})}return this.messageService},getChatService(){if(!this.chatService){this.chatService=new h.ChatService}return this.chatService},getScrollManager(){if(!this.scrollManager){this.scrollManager=new w;this.scrollManager.subscribe(w.events.onScrollTriggerUp,this.onScrollTriggerUp);this.scrollManager.subscribe(w.events.onScrollTriggerDown,this.onScrollTriggerDown);this.scrollManager.subscribe(w.events.onScrollThresholdPass,(e=>{this.isScrolledUp=e.getData()}))}return this.scrollManager},onChatInited(){if(!this.dialog.loading){this.scrollOnStart();this.readVisibleMessages();this.getObserverManager().setDialogInited(true)}void this.$nextTick((()=>{this.getChatService().clearDialogMark(this.dialogId)}));m.EventEmitter.emit(f.EventType.dialog.onDialogInited,{dialogId:this.dialogId})},async onScrollTriggerUp(){if(!this.dialogInited||!this.getContainer()){return}T.Logger.warn("Dialog: scroll triggered UP");const e=this.getContainer();const t=e.scrollHeight-e.clientHeight;if(this.getMessageService().hasPreparedHistoryMessages()){await this.getMessageService().drawPreparedHistoryMessages();this.getScrollManager().adjustScrollOnHistoryAddition(t);return}if(this.getMessageService().isLoading()||!this.dialog.hasPrevPage){return}await this.getMessageService().loadHistory();if(this.getScrollManager().isAtTheTop()){T.Logger.warn("Dialog: we are at the top after history request, inserting messages");await this.getMessageService().drawPreparedHistoryMessages();this.getScrollManager().adjustScrollOnHistoryAddition(t)}},async onScrollTriggerDown(){if(!this.dialogInited||!this.getContainer()){return}T.Logger.warn("Dialog: scroll triggered DOWN");if(this.getMessageService().hasPreparedUnreadMessages()){await this.getMessageService().drawPreparedUnreadMessages();return}if(this.getMessageService().isLoading()||!this.dialog.hasNextPage){return}await this.getMessageService().loadUnread();if(this.getScrollManager().isAroundBottom()){T.Logger.warn("Dialog: we are at the bottom after unread request, inserting messages");await this.getMessageService().drawPreparedUnreadMessages();this.getScrollManager().checkIfChatIsScrolledUp()}},onScrollToBottom(e){const{chatId:t,threshold:s=f.DialogScrollThreshold.halfScreenUp}=e.getData();if(this.dialog.chatId!==t){return}if(!this.windowFocused||this.hasVisibleCall()){const e=this.$store.getters["messages/getFirstUnread"](this.dialog.chatId);if(e){void this.$nextTick((()=>{this.getScrollManager().scrollToMessage(e,-he)}));return}}T.Logger.warn("Dialog: scroll to bottom",t,s);if(s===f.DialogScrollThreshold.halfScreenUp&&this.isScrolledUp){return}if(s===f.DialogScrollThreshold.nearTheBottom&&!this.getScrollManager().isAroundBottom()){return}void this.$nextTick((()=>{this.getScrollManager().animatedScrollToBottom()}))},onGoToMessageContext(e){const{dialogId:t,messageId:s}=e.getData();if(this.dialog.dialogId!==t){return}void this.goToMessageContext(s)},onOpenChatInfo(e){const{dialogId:t,event:s}=e.getData();this.chatInfoPopup.element=s.target;this.chatInfoPopup.dialogId=t;this.chatInfoPopup.show=true},onPinnedMessageClick(e){void this.goToMessageContext(e)},onPinnedMessageUnpin(e){this.getMessageService().unpinMessage(this.dialog.chatId,e)},onMessageContextMenuClick(e){const t={dialogId:this.dialogId,...e.message};this.messageMenu.openMenu(t,e.$event.currentTarget);this.messageMenuIsActiveForId=e.message.id},onMessageQuote(e){const{message:t}=e;D.sendQuoteEvent(t)},onScroll(e){this.closeDialogPopups();this.debouncedScrollHandler(e)},async onScrollButtonClick(){if(this.getScrollManager().scrollButtonClicked){this.handleSecondScrollButtonClick();return}this.getScrollManager().scrollButtonClicked=true;if(this.dialog.counter===0){await this.getMessageService().loadInitialMessages();this.getScrollManager().scrollToBottom();return}const e=this.$store.getters["messages/getFirstUnread"](this.dialog.chatId);if(!e){await this.getMessageService().loadInitialMessages();await this.getScrollManager().animatedScrollToMessage(e,-he)}await this.getScrollManager().animatedScrollToMessage(e,-he)},onWindowFocus(){this.windowFocused=true;this.readVisibleMessages()},onWindowBlur(){this.windowFocused=false},onAvatarClick(e,t){const s=this.$store.getters["users/get"](e);const i=Number.parseInt(e,10);if(!s||b.Core.getUserId()===i){return}if(d.Utils.key.isAltOrOption(t)){m.EventEmitter.emit(f.EventType.textarea.insertMention,{mentionText:s.name,mentionReplacement:d.Utils.user.getMentionBbCode(s.id,s.name)});return}this.avatarMenu.openMenu({user:s,dialog:this.dialog},t.currentTarget)},onCallFold(){const e=a.CallManager.getInstance().getCurrentCallDialogId();if(e!==this.dialogId){return}this.readVisibleMessages()},handleSecondScrollButtonClick(){this.getScrollManager().scrollButtonClicked=false;if(this.dialog.hasNextPage){this.getMessageService().loadContext(this.dialog.lastMessageId).then((()=>{m.EventEmitter.emit(f.EventType.dialog.scrollToBottom,{chatId:this.dialog.chatId})})).catch((e=>{T.Logger.error("ChatDialog: scroll to chat end loadContext error",e)}));return}void this.getScrollManager().animatedScrollToMessage(this.dialog.lastMessageId)},hasVisibleCall(){return a.CallManager.getInstance().hasVisibleCall()},closeDialogPopups(){var e,s;this.closeMessageMenu();this.chatInfoPopup.show=false;this.avatarMenu.close();(e=t.PopupManager.getPopupById(f.PopupType.dialogReactionUsers))==null?void 0:e.close();(s=t.PopupManager.getPopupById(f.PopupType.dialogReadUsers))==null?void 0:s.close()},closeMessageMenu(){this.messageMenu.close();this.messageMenuIsActiveForId=0},subscribeToEvents(){m.EventEmitter.subscribe(f.EventType.dialog.scrollToBottom,this.onScrollToBottom);m.EventEmitter.subscribe(f.EventType.dialog.goToMessageContext,this.onGoToMessageContext);m.EventEmitter.subscribe(f.EventType.mention.openChatInfo,this.onOpenChatInfo);m.EventEmitter.subscribe(f.EventType.call.onFold,this.onCallFold);p.Event.bind(window,"focus",this.onWindowFocus);p.Event.bind(window,"blur",this.onWindowBlur)},unsubscribeFromEvents(){m.EventEmitter.unsubscribe(f.EventType.dialog.scrollToBottom,this.onScrollToBottom);m.EventEmitter.unsubscribe(f.EventType.dialog.goToMessageContext,this.onGoToMessageContext);m.EventEmitter.unsubscribe(f.EventType.mention.openChatInfo,this.onOpenChatInfo);m.EventEmitter.unsubscribe(f.EventType.call.onFold,this.onCallFold);p.Event.unbind(window,"focus",this.onWindowFocus);p.Event.unbind(window,"blur",this.onWindowBlur)},getContainer(){return this.$refs.container}},template:`\n\t\t<div class="bx-im-dialog-chat__block bx-im-dialog-chat__scope">\n\t\t\t<PinnedMessages\n\t\t\t\tv-if="pinnedMessages.length > 0"\n\t\t\t\t:messages="pinnedMessages"\n\t\t\t\t@messageClick="onPinnedMessageClick"\n\t\t\t\t@messageUnpin="onPinnedMessageUnpin"\n\t\t\t/>\n\t\t\t<div @scroll="onScroll" class="bx-im-dialog-chat__scroll-container" ref="container">\n\t\t\t\t<div class="bx-im-dialog-chat__content">\n\t\t\t\t\t\x3c!-- Loader --\x3e\n\t\t\t\t\t<DialogLoader v-if="!dialogInited" :fullHeight="formattedCollection.length === 0" />\n\t\t\t\t\t\x3c!-- Date groups --\x3e\n\t\t\t\t\t<div v-for="dateGroup in formattedCollection" :key="dateGroup.date.id" class="bx-im-dialog-chat__date-group_container">\n\t\t\t\t\t\t\x3c!-- Date mark --\x3e\n\t\t\t\t\t\t<DateGroupTitle :title="dateGroup.date.title" />\n\t\t\t\t\t\t\x3c!-- Single date group --\x3e\n\t\t\t\t\t\t<template v-for="dateGroupItem in dateGroup.items">\n\t\t\t\t\t\t\t\x3c!-- 'New messages' mark --\x3e\n\t\t\t\t\t\t\t<MarkedMessagesBlock v-if="dateGroupItem.type === BlockType.markedMessages" data-id="newMessages" />\n\t\t\t\t\t\t\t<NewMessagesBlock v-else-if="dateGroupItem.type === BlockType.newMessages" data-id="newMessages" />\n\t\t\t\t\t\t\t\x3c!-- Author group --\x3e\n\t\t\t\t\t\t\t<div v-else-if="dateGroupItem.type === BlockType.authorGroup" :class="'--' + dateGroupItem.messageType" class="bx-im-dialog-chat__author-group_container">\n\t\t\t\t\t\t\t\t\x3c!-- Author group avatar --\x3e\n\t\t\t\t\t\t\t\t<div v-if="dateGroupItem.avatar.isNeeded" class="bx-im-dialog-chat__author-group_avatar">\n\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t:dialogId="dateGroupItem.avatar.avatarId"\n\t\t\t\t\t\t\t\t\t\t:size="AvatarSize.L"\n\t\t\t\t\t\t\t\t\t\t:withStatus="false"\n\t\t\t\t\t\t\t\t\t\t@click="onAvatarClick(dateGroupItem.avatar.avatarId, $event)"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\x3c!-- Messages --\x3e\n\t\t\t\t\t\t\t\t<div class="bx-im-dialog-chat__messages_container">\n\t\t\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t\t\tv-for="(message, index) in dateGroupItem.items"\n\t\t\t\t\t\t\t\t\t\tv-message-observer\n\t\t\t\t\t\t\t\t\t\t:is="message.componentId"\n\t\t\t\t\t\t\t\t\t\t:withTitle="index === 0"\n\t\t\t\t\t\t\t\t\t\t:item="message"\n\t\t\t\t\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t\t\t\t\t:key="message.id"\n\t\t\t\t\t\t\t\t\t\t:menuIsActiveForId="messageMenuIsActiveForId"\n\t\t\t\t\t\t\t\t\t\t:withAvatar="dateGroupItem.avatar.isNeeded"\n\t\t\t\t\t\t\t\t\t\t:data-viewed="message.viewed"\n\t\t\t\t\t\t\t\t\t\t@contextMenuClick="onMessageContextMenuClick"\n\t\t\t\t\t\t\t\t\t\t@quoteMessage="onMessageQuote"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DialogStatus v-if="showDialogStatus" :dialogId="dialogId" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Transition name="scroll-button-transition">\n\t\t\t\t<div v-if="isScrolledUp" @click="onScrollButtonClick" class="bx-im-dialog-chat__scroll-button">\n\t\t\t\t\t<div v-if="dialog.counter" class="bx-im-dialog-chat__scroll-button_counter">{{ formattedCounter }}</div>\n\t\t\t\t</div>\n\t\t\t</Transition>\n\t\t\t<ChatInfoPopup\n\t\t\t\tv-if="chatInfoPopup.show"\n\t\t\t\t:dialogId="chatInfoPopup.dialogId"\n\t\t\t\t:bindElement="chatInfoPopup.element"\n\t\t\t\t:showPopup="chatInfoPopup.show"\n\t\t\t\t@close="chatInfoPopup.show = false"\n\t\t\t/>\n\t\t</div>\n\t`};e.ChatDialog=me})(this.BX.Messenger.v2.Component.Dialog=this.BX.Messenger.v2.Component.Dialog||{},BX.Main,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX,BX.Event,BX.Messenger.v2.Lib,BX,BX.Im.V2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=chat-dialog.bundle.map.js