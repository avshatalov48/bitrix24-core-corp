this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,s,i,n,a,o){"use strict";const r={name:"CopilotMessage",components:{AuthorTitle:a.AuthorTitle,BaseMessage:o.BaseMessage,DefaultMessageContent:a.DefaultMessageContent,MessageStatus:a.MessageStatus},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},computed:{message(){return this.item},formattedText(){return s.Parser.decodeMessage(this.item)},canSetReactions(){return n.Type.isNumber(this.message.id)},isReply(){return this.message.replyId!==0},isError(){var t;return((t=this.message.componentParams)==null?void 0:t.copilotError)===true},hasMore(){var t;return((t=this.message.componentParams)==null?void 0:t.copilotHasMore)===true}},methods:{onCopyClick(){var t;if((t=BX.clipboard)!=null&&t.copy(this.message.text)){BX.UI.Notification.Center.notify({content:n.Loc.getMessage("IM_MESSAGE_COPILOT_ANSWER_ACTION_COPY_SUCCESS")})}},onContinueClick(){this.getSendingService().sendMessage({text:this.loc("IM_MESSAGE_COPILOT_ANSWER_CONTINUE_TEXT"),dialogId:this.dialogId})},getSendingService(){if(!this.sendingService){this.sendingService=i.SendingService.getInstance()}return this.sendingService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<BaseMessage :item="item" :dialogId="dialogId" class="bx-im-message-copilot-base-message__container">\n\t\t\t<div class="bx-im-message-default__container bx-im-message-copilot-answer__container" :class="{'--error': isError}">\n\t\t\t\t<AuthorTitle v-if="withTitle" :item="item" />\n\t\t\t\t<div class="bx-im-message-default-content__container bx-im-message-default-content__scope">\n\t\t\t\t\t<div class="bx-im-message-default-content__text" v-html="formattedText"></div>\n\t\t\t\t\t<div class="bx-im-message-default-content__bottom-panel">\n\t\t\t\t\t\t<div v-if="!isError" class="bx-im-message-copilot-answer__actions">\n\t\t\t\t\t\t\t<div class="bx-im-message-copilot-answer__action" @click="onCopyClick">\n\t\t\t\t\t\t\t\t<div class="bx-im-message-copilot-answer__action_icon --copy"></div>\n\t\t\t\t\t\t\t\t<div class="bx-im-message-copilot-answer__action_text">\n\t\t\t\t\t\t\t\t\t{{ loc('IM_MESSAGE_COPILOT_ANSWER_ACTION_COPY') }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-if="hasMore" class="bx-im-message-copilot-answer__action" @click="onContinueClick">\n\t\t\t\t\t\t\t\t<div class="bx-im-message-copilot-answer__action_icon --continue"></div>\n\t\t\t\t\t\t\t\t<div class="bx-im-message-copilot-answer__action_text">\n\t\t\t\t\t\t\t\t\t{{ loc('IM_MESSAGE_COPILOT_ANSWER_ACTION_CONTINUE') }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-message-default-content__status-container">\n\t\t\t\t\t\t\t<MessageStatus :item="message" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};t.CopilotMessage=r})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message);
//# sourceMappingURL=copilot-answer.bundle.map.js