{"version":3,"file":"default.bundle.js","sources":["../src/components/reply.js","../src/default.js"],"sourcesContent":["import { Parser } from 'im.v2.lib.parser';\n\nimport type { ImModelMessage, ImModelUser } from 'im.v2.model';\n\n// @vue/component\nexport const Reply = {\n\tname: 'ReplyComponent',\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\treplyId: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\treplyMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.replyId);\n\t\t},\n\t\treplyAuthor(): ImModelUser\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](this.replyMessage.authorId);\n\t\t},\n\t\treplyTitle(): string\n\t\t{\n\t\t\treturn this.replyAuthor ? this.replyAuthor.name : this.loc('IM_DIALOG_CHAT_QUOTE_DEFAULT_TITLE');\n\t\t},\n\t\treplyText(): string\n\t\t{\n\t\t\tlet text = Parser.prepareQuote(this.replyMessage);\n\t\t\ttext = Parser.decodeText(text);\n\n\t\t\treturn text;\n\t\t},\n\t\treplyContext(): string\n\t\t{\n\t\t\treturn `${this.dialogId}/${this.replyId}`;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-quote --with-context\" :data-context=\"replyContext\">\n\t\t\t<div class=\"bx-im-message-quote__wrap\">\n\t\t\t\t<div class=\"bx-im-message-quote__name\">\n\t\t\t\t\t<div class=\"bx-im-message-quote__name-text\">\n\t\t\t\t\t\t{{ replyTitle }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-message-quote__text\" v-html=\"replyText\"></div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Type } from 'main.core';\n\nimport { DefaultMessageContent, AuthorTitle, ReactionSelector } from 'im.v2.component.message.elements';\nimport { BaseMessage } from 'im.v2.component.message.base';\n\nimport { Reply } from './components/reply';\n\nimport './css/default.css';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const DefaultMessage = {\n\tname: 'DefaultMessage',\n\tcomponents: {\n\t\tAuthorTitle,\n\t\tBaseMessage,\n\t\tDefaultMessageContent,\n\t\tReactionSelector,\n\t\tReply,\n\t},\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\twithTitle: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tmessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tcanSetReactions(): boolean\n\t\t{\n\t\t\treturn Type.isNumber(this.message.id);\n\t\t},\n\t\tisReply(): boolean\n\t\t{\n\t\t\treturn this.message.replyId !== 0;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseMessage :item=\"item\" :dialogId=\"dialogId\">\n\t\t\t<div class=\"bx-im-message-default__container\">\n\t\t\t\t<AuthorTitle v-if=\"withTitle\" :item=\"item\" />\n\t\t\t\t<Reply v-if=\"isReply\" :dialogId=\"dialogId\" :replyId=\"message.replyId\" />\n\t\t\t\t<DefaultMessageContent :item=\"item\" :dialogId=\"dialogId\" />\n\t\t\t\t<ReactionSelector :messageId=\"message.id\" />\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`,\n};\n"],"names":["Reply","name","props","dialogId","type","String","required","replyId","Number","computed","replyMessage","$store","getters","replyAuthor","authorId","replyTitle","loc","replyText","text","Parser","prepareQuote","decodeText","replyContext","methods","phraseCode","$Bitrix","Loc","getMessage","template","DefaultMessage","components","AuthorTitle","BaseMessage","DefaultMessageContent","ReactionSelector","item","Object","withTitle","Boolean","default","message","canSetReactions","Type","isNumber","id","isReply"],"mappings":";;;;;;;;CAIA;AACA,CAAO,MAAMA,KAAK,GAAG;GACpBC,IAAI,EAAE,gBAAgB;GACtBC,KAAK,EACL;KACCC,QAAQ,EAAE;OACTC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;MACV;KACDC,OAAO,EAAE;OACRH,IAAI,EAAEI,MAAM;OACZF,QAAQ,EAAE;;IAEX;GACDG,QAAQ,EACR;KACCC,YAAY,GACZ;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAACL,OAAO,CAAC;MAC5D;KACDM,WAAW,GACX;OACC,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACF,YAAY,CAACI,QAAQ,CAAC;MACnE;KACDC,UAAU,GACV;OACC,OAAO,IAAI,CAACF,WAAW,GAAG,IAAI,CAACA,WAAW,CAACZ,IAAI,GAAG,IAAI,CAACe,GAAG,CAAC,oCAAoC,CAAC;MAChG;KACDC,SAAS,GACT;OACC,IAAIC,IAAI,GAAGC,uBAAM,CAACC,YAAY,CAAC,IAAI,CAACV,YAAY,CAAC;OACjDQ,IAAI,GAAGC,uBAAM,CAACE,UAAU,CAACH,IAAI,CAAC;OAE9B,OAAOA,IAAI;MACX;KACDI,YAAY,GACZ;OACC,OAAQ,GAAE,IAAI,CAACnB,QAAS,IAAG,IAAI,CAACI,OAAQ,EAAC;;IAE1C;GACDgB,OAAO,EACP;KACCP,GAAG,CAACQ,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDI,QAAQ,EAAG;;;;;;;;;;;;CAYZ,CAAC;;CCpDD;AACA,OAAaC,cAAc,GAAG;GAC7B5B,IAAI,EAAE,gBAAgB;GACtB6B,UAAU,EAAE;kBACXC,4CAAW;kBACXC,wCAAW;4BACXC,sDAAqB;uBACrBC,iDAAgB;KAChBlC;IACA;GACDE,KAAK,EAAE;KACNiC,IAAI,EAAE;OACL/B,IAAI,EAAEgC,MAAM;OACZ9B,QAAQ,EAAE;MACV;KACDH,QAAQ,EAAE;OACTC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;MACV;KACD+B,SAAS,EAAE;OACVjC,IAAI,EAAEkC,OAAO;OACbC,OAAO,EAAE;;IAEV;GACD9B,QAAQ,EACR;KACC+B,OAAO,GACP;OACC,OAAO,IAAI,CAACL,IAAI;MAChB;KACDM,eAAe,GACf;OACC,OAAOC,cAAI,CAACC,QAAQ,CAAC,IAAI,CAACH,OAAO,CAACI,EAAE,CAAC;MACrC;KACDC,OAAO,GACP;OACC,OAAO,IAAI,CAACL,OAAO,CAACjC,OAAO,KAAK,CAAC;;IAElC;GACDqB,QAAQ,EAAG;;;;;;;;;;CAUZ,CAAC;;;;;;;;"}