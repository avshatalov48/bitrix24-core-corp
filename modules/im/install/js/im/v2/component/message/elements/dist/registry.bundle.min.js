this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,r,a,n,o,c,l,d,u,m,h,g,v){"use strict";const p={name:"MessageStatus",props:{item:{type:Object,required:true},isOverlay:{type:Boolean,default:false}},computed:{message(){return this.item},formattedDate(){return t.DateFormatter.formatByCode(this.message.date,t.DateCode.shortTimeFormat)},isSelfMessage(){return this.message.authorId===d.Core.getUserId()},messageStatus(){if(this.message.sending){return h.OwnMessageStatus.sending}if(this.message.viewedByOthers){return h.OwnMessageStatus.viewed}return h.OwnMessageStatus.sent}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-status__container bx-im-message-status__scope" :class="{'--overlay': isOverlay}">\n\t\t\t<div v-if="message.isEdited && !message.isDeleted" class="bx-im-message-status__edit-mark">\n\t\t\t\t{{ loc('IM_MESSENGER_MESSAGE_EDITED') }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-status__date" :class="{'--overlay': isOverlay}">\n\t\t\t\t{{ formattedDate }}\n\t\t\t</div>\n\t\t\t<div v-if="isSelfMessage" :class="'--' + messageStatus" class="bx-im-message-status__icon"></div>\n\t\t</div>\n\t`};const b={name:"MessageAttach",components:{Attach:u.Attach},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{message(){return this.item},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},dialogColor(){return this.dialog.type===h.DialogType.private?this.user.color:this.dialog.color}},created(){s.provide("message",this.message)},template:`\n\t\t<div v-for="config in message.attach" :key="config.ID" class="bx-im-message-attach__container">\n\t\t\t<Attach :baseColor="dialogColor" :config="config" />\n\t\t</div>\n\t`};const f={components:{Avatar:u.Avatar},props:{userId:{type:Number,required:true}},computed:{AvatarSize:()=>u.AvatarSize,user(){return this.$store.getters["users/get"](this.userId)},avatarStyle(){if(!this.user.avatar){return{}}return{backgroundImage:`url('${this.user.avatar}')`}}},template:`\n\t\t<div class="bx-im-reaction-list__user_avatar">\n\t\t\t<Avatar \n\t\t\t\t:dialogId="userId" \n\t\t\t\t:size="AvatarSize.XS" \n\t\t\t\t:withAvatarLetters="false" \n\t\t\t\t:withStatus="false" \n\t\t\t\t:withTooltip="false"\n\t\t\t/>\n\t\t</div>\n\t`};var S=babelHelpers.classPrivateFieldLooseKey("store");var y=babelHelpers.classPrivateFieldLooseKey("restClient");var I=babelHelpers.classPrivateFieldLooseKey("userManager");class w{constructor(){Object.defineProperty(this,S,{writable:true,value:void 0});Object.defineProperty(this,y,{writable:true,value:void 0});Object.defineProperty(this,I,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,S)[S]=d.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,y)[y]=d.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,I)[I]=new r.UserManager}loadReactionUsers(e,t){let s=[];a.Logger.warn("Reactions: UserService: loadReactionUsers",e,t);const i={messageId:e,filter:{reaction:t}};return babelHelpers.classPrivateFieldLooseBase(this,y)[y].callMethod(h.RestMethod.imV2ChatMessageReactionTail,i).then((e=>{s=e.data().users;return babelHelpers.classPrivateFieldLooseBase(this,I)[I].setUsersToModel(Object.values(s))})).then((()=>s.map((e=>e.id)))).catch((e=>{console.error("Reactions: UserService: loadReactionUsers error",e);throw new Error(e)}))}}const T={components:{UserListPopup:u.UserListPopup},props:{messageId:{type:[String,Number],required:true},reaction:{type:String,required:true},show:{type:Boolean,required:true},bindElement:{type:Object,required:true}},emits:["close"],data(){return{showPopup:false,loadingAdditionalUsers:false,additionalUsers:[]}},watch:{show(e,t){if(!t&&e){this.showPopup=true;this.loadUsers()}}},methods:{loadUsers(){this.loadingAdditionalUsers=true;this.getUserService().loadReactionUsers(this.messageId,this.reaction).then((e=>{this.additionalUsers=e;this.loadingAdditionalUsers=false})).catch((()=>{this.loadingAdditionalUsers=false}))},onPopupClose(){this.showPopup=false;this.$emit("close")},prepareAdditionalUsers(e){const t=this.dialog.lastMessageViews.firstViewer.userId;return e.filter((e=>e!==d.Core.getUserId()&&e!==t))},getUserService(){if(!this.userService){this.userService=new w}return this.userService}},template:`\n\t\t<UserListPopup\n\t\t\tid="bx-im-message-reaction-users"\n\t\t\t:showPopup="showPopup"\n\t\t\t:loading="loadingAdditionalUsers"\n\t\t\t:userIds="additionalUsers"\n\t\t\t:bindElement="bindElement || {}"\n\t\t\t:withAngle="false"\n\t\t\t:offsetLeft="-112"\n\t\t\t:forceTop="true"\n\t\t\t@close="onPopupClose"\n\t\t/>\n\t`};const R=5;const M=500;const C={components:{ReactionUser:f,AdditionalUsers:T},props:{messageId:{type:[String,Number],required:true},type:{type:String,required:true},counter:{type:Number,required:true},users:{type:Array,required:true},selected:{type:Boolean,required:true},animate:{type:Boolean,required:true}},emits:["click"],data(){return{showAdditionalUsers:false}},computed:{showUsers(){const e=this.counter<=R;const t=this.counter===this.users.length;return e&&t},preparedUsers(){return[...this.users].sort(((e,t)=>e-t)).reverse()},reactionClass(){return n.reactionCssClass[this.type]}},mounted(){if(this.animate){this.playAnimation()}},methods:{playAnimation(){this.animation=i.Lottie.loadAnimation({animationData:n.ReactionsSelect.getLottieAnimation(this.type),container:this.$refs.reactionIcon,loop:false,autoplay:false,renderer:"svg",rendererSettings:{viewBoxOnly:true}});o.Event.bind(this.animation,"complete",(()=>{this.animation.destroy()}));o.Event.bind(this.animation,"destroy",(()=>{this.animation=null}));this.animation.play()},startShowUsersTimer(){this.showUsersTimeout=setTimeout((()=>{this.showAdditionalUsers=true}),M)},clearShowUsersTimer(){clearTimeout(this.showUsersTimeout)},onClick(){this.clearShowUsersTimer();this.$emit("click",{animateItemFunction:this.playAnimation})}},template:`\n\t\t<div\n\t\t\t@click="onClick" \n\t\t\t@mouseenter="startShowUsersTimer"\n\t\t\t@mouseleave="clearShowUsersTimer"\n\t\t\tclass="bx-im-reaction-list__item"\n\t\t\t:class="{'--selected': selected}"\n\t\t>\n\t\t\t<div class="bx-im-reaction-list__item_icon" :class="reactionClass" ref="reactionIcon"></div>\n\t\t\t<div v-if="showUsers" class="bx-im-reaction-list__user_container" ref="users">\n\t\t\t\t<TransitionGroup name="bx-im-reaction-list__user_animation">\n\t\t\t\t\t<ReactionUser v-for="user in preparedUsers" :key="user" :userId="user" />\n\t\t\t\t</TransitionGroup>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-reaction-list__item_counter" ref="counter">{{ counter }}</div>\n\t\t\t<AdditionalUsers\n\t\t\t\t:show="showAdditionalUsers"\n\t\t\t\t:bindElement="$refs['users'] || $refs['counter'] || {}"\n\t\t\t\t:messageId="messageId"\n\t\t\t\t:reaction="type"\n\t\t\t\t@close="showAdditionalUsers = false"\n\t\t\t/>\n\t\t</div>\n\t`};var _=babelHelpers.classPrivateFieldLooseKey("store");var U=babelHelpers.classPrivateFieldLooseKey("restClient");class B{constructor(){Object.defineProperty(this,_,{writable:true,value:void 0});Object.defineProperty(this,U,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,_)[_]=d.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,U)[U]=d.Core.getRestClient()}setReaction(e,t){a.Logger.warn("ReactionService: setReaction",e,t);babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("messages/reactions/setReaction",{messageId:e,reaction:t,userId:d.Core.getUserId()});babelHelpers.classPrivateFieldLooseBase(this,U)[U].callMethod(h.RestMethod.imV2ChatMessageReactionAdd,{messageId:e,reaction:t}).catch((e=>{console.error("ReactionService: error setting reaction",e)}))}removeReaction(e,t){a.Logger.warn("ReactionService: removeReaction",e,t);babelHelpers.classPrivateFieldLooseBase(this,_)[_].dispatch("messages/reactions/removeReaction",{messageId:e,reaction:t,userId:d.Core.getUserId()});babelHelpers.classPrivateFieldLooseBase(this,U)[U].callMethod(h.RestMethod.imV2ChatMessageReactionDelete,{messageId:e,reaction:t}).catch((e=>{console.error("ReactionService: error removing reaction",e)}))}}const x={components:{ReactionItem:C},props:{messageId:{type:[String,Number],required:true}},data(){return{mounted:false}},computed:{Reaction:()=>n.reactionType,message(){return this.$store.getters["messages/getById"](this.messageId)},reactionsData(){return this.$store.getters["messages/reactions/getByMessageId"](this.messageId)},reactionCounters(){var e,t;return(e=(t=this.reactionsData)==null?void 0:t.reactionCounters)!=null?e:{}},ownReactions(){var e,t;return(e=(t=this.reactionsData)==null?void 0:t.ownReactions)!=null?e:new Set},showReactionsContainer(){return Object.keys(this.reactionCounters).length>0}},watch:{showReactionsContainer(e,t){if(!t&&e){m.EventEmitter.emit(h.EventType.dialog.scrollToBottom,{chatId:this.message.chatId,threshold:h.DialogScrollThreshold.nearTheBottom,animation:false})}}},mounted(){this.mounted=true},methods:{onReactionSelect(e,t){var s;const{animateItemFunction:i}=t;if((s=this.ownReactions)!=null&&s.has(e)){this.getReactionService().removeReaction(this.messageId,e);return}this.getReactionService().setReaction(this.messageId,e);i()},getReactionUsers(e){const t=this.reactionsData.reactionUsers[e];if(!t){return[]}return[...t]},getReactionService(){if(!this.reactionService){this.reactionService=new B}return this.reactionService}},template:`\n\t\t<div v-if="showReactionsContainer" class="bx-im-reaction-list__container bx-im-reaction-list__scope">\n\t\t\t<template v-for="reactionType in Reaction">\n\t\t\t\t<ReactionItem\n\t\t\t\t\tv-if="reactionCounters[reactionType] > 0"\n\t\t\t\t\t:key="reactionType + messageId"\n\t\t\t\t\t:messageId="messageId"\n\t\t\t\t\t:type="reactionType"\n\t\t\t\t\t:counter="reactionCounters[reactionType]"\n\t\t\t\t\t:users="getReactionUsers(reactionType)"\n\t\t\t\t\t:selected="ownReactions.has(reactionType)"\n\t\t\t\t\t:animate="mounted"\n\t\t\t\t\t@click="onReactionSelect(reactionType, $event)"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</div>\n\t`};const A=500;const E=800;const L={props:{messageId:{type:[String,Number],required:true}},computed:{reactionsData(){return this.$store.getters["messages/reactions/getByMessageId"](this.messageId)},ownReactionSet(){var e,t;return((e=this.reactionsData)==null?void 0:(t=e.ownReactions)==null?void 0:t.size)>0},isGuest(){const e=this.$store.getters["messages/getById"](this.messageId);const t=this.$store.getters["dialogues/getByChatId"](e.chatId);return t.role===h.UserRole.guest},canSetReactions(){return o.Type.isNumber(this.messageId)&&!this.isGuest}},methods:{startShowTimer(){var e;this.clearHideTimer();if((e=this.selector)!=null&&e.isShown()){return}this.showTimeout=setTimeout((()=>{this.showSelector()}),A)},clearShowTimer(){clearTimeout(this.showTimeout);this.startHideTimer()},showSelector(){this.selector=new n.ReactionsSelect({name:"im-base-message-reaction-selector",position:this.$refs.selector});this.subscribeToSelectorEvents();this.selector.show()},subscribeToSelectorEvents(){this.selector.subscribe("select",(e=>{var t;const{reaction:s}=e.getData();this.getReactionService().setReaction(this.messageId,s);(t=this.selector)==null?void 0:t.hide()}));this.selector.subscribe("mouseleave",this.startHideTimer);this.selector.subscribe("mouseenter",(()=>{clearTimeout(this.hideTimeout)}));this.selector.subscribe("hide",(()=>{clearTimeout(this.hideTimeout);this.selector=null}))},startHideTimer(){this.hideTimeout=setTimeout((()=>{var e;(e=this.selector)==null?void 0:e.hide()}),E)},clearHideTimer(){clearTimeout(this.hideTimeout)},onIconClick(){this.clearShowTimer();if(this.ownReactionSet){const[e]=[...this.reactionsData.ownReactions];this.getReactionService().removeReaction(this.messageId,e);return}this.getReactionService().setReaction(this.messageId,n.reactionType.like)},getReactionService(){if(!this.reactionService){this.reactionService=new B}return this.reactionService}},template:`\n\t\t<div v-if="canSetReactions" class="bx-im-reaction-selector__container">\n\t\t\t<div\n\t\t\t\t@click="onIconClick"\n\t\t\t\t@mouseenter="startShowTimer"\n\t\t\t\t@mouseleave="clearShowTimer"\n\t\t\t\tclass="bx-im-reaction-selector__selector"\n\t\t\t\tref="selector"\n\t\t\t>\n\t\t\t\t<div class="bx-im-reaction-selector__icon" :class="{'--active': ownReactionSet}"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const P={name:"DefaultMessageContent",components:{Reactions:c.Reactions,MessageStatus:p,MessageAttach:b,ReactionList:x},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withMessageStatus:{type:Boolean,default:true},withText:{type:Boolean,default:true}},computed:{message(){return this.item},formattedText(){return l.Parser.decodeMessage(this.item)},canSetReactions(){return o.Type.isNumber(this.message.id)}},template:`\n\t\t<div class="bx-im-message-default-content__container bx-im-message-default-content__scope">\n\t\t\t<div v-if="withText" class="bx-im-message-default-content__text" v-html="formattedText"></div>\n\t\t\t<div v-if="message.attach.length > 0" class="bx-im-message-default-content__attach">\n\t\t\t\t<MessageAttach :item="message" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-default-content__bottom-panel">\n\t\t\t\t<ReactionList \n\t\t\t\t\tv-if="canSetReactions" \n\t\t\t\t\t:messageId="message.id" \n\t\t\t\t\tclass="bx-im-message-default-content__reaction-list" \n\t\t\t\t/>\n\t\t\t\t<div v-if="withMessageStatus" class="bx-im-message-default-content__status-container">\n\t\t\t\t\t<MessageStatus :item="message" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const D={name:"AuthorTitle",components:{ChatTitle:u.ChatTitle},props:{item:{type:Object,required:true}},computed:{message(){return this.item},dialog(){return this.$store.getters["dialogues/getByChatId"](this.message.chatId)},isSystemMessage(){return this.message.authorId===0},isSelfMessage(){return this.message.authorId===d.Core.getUserId()},isUserChat(){return this.dialog.type===h.DialogType.user},showTitle(){return!this.isSystemMessage&&!this.isSelfMessage&&!this.isUserChat},user(){return this.$store.getters["users/get"](this.message.authorId,true)},authorDialogId(){if(this.message.authorId){return this.message.authorId.toString()}return this.dialogId}},methods:{onAuthorNameClick(){const e=Number.parseInt(this.authorDialogId,10);if(e===d.Core.getUserId()){return}m.EventEmitter.emit(h.EventType.textarea.insertMention,{mentionText:this.user.name,mentionReplacement:g.Utils.text.getMentionBbCode(this.user.id,this.user.name)})}},template:`\n\t\t<div v-if="showTitle" @click="onAuthorNameClick" class="bx-im-message-author-title__container">\n\t\t\t<ChatTitle\n\t\t\t\t:dialogId="authorDialogId"\n\t\t\t\t:showItsYou="false"\n\t\t\t\t:withColor="true"\n\t\t\t\t:withLeftIcon="false"\n\t\t\t/>\n\t\t</div>\n\t`};const X={name:"ContextMenu",props:{message:{type:Object,required:true},menuIsActiveForId:{type:[String,Number],default:0}},computed:{menuTitle(){return this.$Bitrix.Loc.getMessage("IM_MESSENGER_MESSAGE_MENU_TITLE",{"#SHORTCUT#":g.Utils.platform.isMac()?"CMD":"CTRL"})}},methods:{onMenuClick(e){if(g.Utils.key.isCombination(e,["Alt+Ctrl"])){const e={...this.message};m.EventEmitter.emit(h.EventType.textarea.insertText,{text:v.Quote.prepareQuoteText(e),withNewLine:true,replace:false});return}if(g.Utils.key.isCmdOrCtrl(e)){const e={...this.message};m.EventEmitter.emit(h.EventType.textarea.replyMessage,{messageId:e.id});return}m.EventEmitter.emit(h.EventType.dialog.onClickMessageContextMenu,{message:this.message,event:e})}},template:`\n\t\t<div class="bx-im-message-context-menu__container bx-im-message-context-menu__scope">\n\t\t\t<button\n\t\t\t\t:title="menuTitle"\n\t\t\t\t@click="onMenuClick"\n\t\t\t\t@contextmenu.prevent\n\t\t\t\t:class="{'--active': menuIsActiveForId === message.id}"\n\t\t\t\tclass="bx-im-message-context-menu__button"\n\t\t\t></button>\n\t\t</div>\n\t`};e.MessageStatus=p;e.MessageAttach=b;e.ReactionList=x;e.ReactionSelector=L;e.DefaultMessageContent=P;e.AuthorTitle=D;e.ContextMenu=X})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Im.V2.Lib,BX.Vue3,BX.UI,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Ui,BX,BX.Vue3.Components,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Component.Elements,BX.Event,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=registry.bundle.map.js