this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,a,n,r,o,m,g,l){"use strict";const d={name:"MediaComponent",components:{File:g.File,Image:g.Image,Audio:g.Audio,Video:g.Video},props:{item:{type:Object,required:true}},data(){return{}},computed:{FileType:()=>l.FileType,message(){return this.item},messageFiles(){const e=[];if(this.message.files.length===0){return e}this.message.files.forEach((t=>{const s=this.$store.getters["files/get"](t,true);e.push(s)}));return e},messageType(){return this.$store.getters["messages/getMessageType"](this.message.id)}},template:`\n\t\t<div v-for="file in messageFiles" :key="file.id" class="bx-im-message-base__media-wrap">\n\t\t\t<Image v-if="file.type === FileType.image" :item="file" />\n\t\t\t<Audio v-else-if="file.type === FileType.audio" :item="file" :messageType="messageType" />\n\t\t\t<Video v-else-if="file.type === FileType.video" :item="file" />\n\t\t\t<File v-else :item="file" />\n\t\t</div>\n\t`};const c={props:{item:{type:Object,required:true}},data(){return{}},computed:{message(){return this.item},messageStatus(){if(this.message.sending){return l.OwnMessageStatus.sending}if(this.message.viewedByOthers){return l.OwnMessageStatus.viewed}return l.OwnMessageStatus.sent}},template:`\n\t\t<div :class="'--' + messageStatus" class="bx-im-message-base__message-status"></div>\n\t`};const u={data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-base__deleted_container">\n\t\t\t<div class="bx-im-message-base__deleted_icon"></div>\n\t\t\t<div class="bx-im-message-base__deleted_text">{{ loc('IM_MESSENGER_MESSAGE_DELETED') }}</div>\n\t\t</div>\n\t`};const h={name:"BaseMessage",components:{Attach:g.Attach,Avatar:g.Avatar,ChatTitle:g.ChatTitle,Reactions:i.Reactions,Media:d,OwnMessageStatus:c,DeletedMessage:u,ReactionSelector:o.ReactionSelector,ReactionList:o.ReactionList},props:{item:{type:Object,required:true},withAvatar:{type:Boolean,required:true},withTitle:{type:Boolean,default:true},menuIsActiveForId:{type:Number,default:0},dialogId:{type:String,required:true}},emits:["contextMenuClick","quoteMessage"],data(){return{}},computed:{AvatarSize:()=>g.AvatarSize,message(){return this.item},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.message.authorId,true)},dialogColor(){return this.dialog.type!==l.DialogType.private?this.dialog.color:this.user.color},authorDialogId(){if(this.message.authorId){return this.message.authorId.toString()}return this.dialogId},isSystemMessage(){return this.message.authorId===0},isSelfMessage(){return this.message.authorId===a.Core.getUserId()},isOpponentMessage(){return!this.isSystemMessage&&!this.isSelfMessage},showTitle(){return this.withTitle&&!this.isSystemMessage&&!this.isSelfMessage},canSetReactions(){return t.Type.isNumber(this.message.id)},containerClasses(){return{"--system":this.isSystemMessage,"--self":this.isSelfMessage,"--opponent":this.isOpponentMessage,"--with-avatar":this.withAvatar}},formattedText(){return r.Parser.decodeMessage(this.message)},formattedDate(){return m.DateFormatter.formatByCode(this.message.date,m.DateCode.shortTimeFormat)},menuTitle(){return this.loc("IM_MESSENGER_MESSAGE_MENU_TITLE",{"#SHORTCUT#":n.Utils.platform.isMac()?"CMD":"CTRL"})}},methods:{setReaction(e,t){console.warn("setReaction",e,t)},openReactionList(e,t){console.warn("openReactionList",e,t)},onMenuClick(e){if(n.Utils.key.isCmdOrCtrl(e)){this.$emit("quoteMessage",{message:this.message});return}this.$emit("contextMenuClick",{message:this.message,$event:e})},onContainerClick(e){r.Parser.executeClickEvent(e)},onAuthorNameClick(){const e=Number.parseInt(this.authorDialogId,10);if(e===a.Core.getUserId()){return}s.EventEmitter.emit(l.EventType.textarea.insertMention,{mentionText:this.user.name,mentionReplacement:n.Utils.user.getMentionBbCode(this.user.id,this.user.name)})},loc(e,t={}){return this.$Bitrix.Loc.getMessage(e,t)}},template:`\n\t\t<div :class="containerClasses" :data-id="message.id" class="bx-im-message-base__scope bx-im-message-base__container" @click="onContainerClick">\n\t\t\t<div class="bx-im-message-base__body">\n\t\t\t\t<div @click="onAuthorNameClick" v-if="showTitle" class="bx-im-message-base__name">\n\t\t\t\t\t<ChatTitle :dialogId="authorDialogId" :onlyFirstName="true" :showItsYou="false" :withColor="true" :withLeftIcon="false" />\n\t\t\t\t</div>\n\t\t\t\t<Media :item="message" />\n\t\t\t\t<DeletedMessage v-if="message.isDeleted" />\n\t\t\t\t<div v-else class="bx-im-message-base__text" v-html="formattedText"></div>\n\t\t\t\t<div v-for="config in message.attach" :key="config.ID" class="bx-im-message-base__attach-wrap">\n\t\t\t\t\t<Attach :baseColor="dialogColor" :config="config"/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class="bx-im-message-base__bottom-container">\n\t\t\t\t\t<ReactionList v-if="canSetReactions" :messageId="message.id" />\n\t\t\t\t\t<div class="bx-im-message-base__bottom-container_right">\n\t\t\t\t\t\t<div v-if="message.isEdited && !message.isDeleted" class="bx-im-message-base__edit-mark">\n\t\t\t\t\t\t\t{{ loc('IM_MESSENGER_MESSAGE_EDITED') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-message-base__date">{{ formattedDate }}</div>\n\t\t\t\t\t\t<OwnMessageStatus v-if="isSelfMessage" :item="message" />\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-message-base__reactions-container">\n\t\t\t\t\t<ReactionSelector v-if="canSetReactions" :messageId="message.id" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-base__actions">\n\t\t\t\t<div :title="menuTitle" @click="onMenuClick" :class="{'--active': menuIsActiveForId === message.id}" class="bx-im-message-base__menu"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};e.BaseMessage=h})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX,BX.Event,BX.Vue3.Components,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Message,BX.Im.V2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const);
//# sourceMappingURL=base-message.bundle.map.js