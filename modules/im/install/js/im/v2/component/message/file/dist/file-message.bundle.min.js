this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,n,a,r,o,l,g,m,d,u,c,h){"use strict";const p={name:"ProgressBar",props:{item:{type:Object,required:true},messageId:{type:[String,Number],required:true}},computed:{file(){return this.item}},watch:{"file.status":function(){this.getProgressBarManager().update()},"file.progress":function(){this.getProgressBarManager().update()}},mounted(){this.initProgressBar()},beforeUnmount(){this.removeProgressBar()},methods:{initProgressBar(){if(this.file.progress===100){return}let e;if(this.file.progress<0||!this.isImage&&!this.isVideo){e=false}this.progressBarManager=new n.ProgressBarManager({container:this.$refs["progress-bar"],uploadState:this.file,customConfig:{blurElement:e,hasTitle:false}});this.progressBarManager.subscribe(n.ProgressBarManager.event.cancel,(()=>{console.warn("test");i.EventEmitter.emit(h.EventType.uploader.cancel,{tempFileId:this.file.id,tempMessageId:this.messageId})}));this.progressBarManager.subscribe(n.ProgressBarManager.event.destroy,(()=>{if(this.progressBar){this.progressBar=null}}));this.progressBarManager.start()},removeProgressBar(){if(!this.getProgressBarManager()){return}this.getProgressBarManager().destroy()},getProgressBarManager(){return this.progressBarManager}},template:`\n\t\t<div class="bx-im-progress-bar__container" ref="progress-bar"></div>\n\t`};const f=420;const v=340;const M=200;const I=100;const y={name:"ImageItem",directives:{lazyload:s.lazyload},components:{ProgressBar:p},props:{item:{type:Object,required:true},messageId:{type:[String,Number],required:true}},computed:{file(){return this.item},imageSize(){let e=this.file.image.width;let t=this.file.image.height;if(this.file.image.width>f||this.file.image.height>v){const s=this.file.image.width/this.file.image.height;if(this.file.image.width>f){e=f;t=Math.round(f/s)}if(t>v){e=Math.round(v*s);t=v}}const s={width:Math.max(e,M),height:Math.max(t,I)};return{width:`${s.width}px`,height:`${s.height}px`,"object-fit":s.width<100||s.height<100?"cover":"contain"}},viewerAttributes(){return g.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},canBeOpenedWithViewer(){var e;return this.file.viewerAttrs&&((e=BX.UI)==null?void 0:e.Viewer)},imageTitle(){const e=g.Utils.file.formatFileSize(this.file.size);return this.loc("IM_ELEMENTS_MEDIA_IMAGE_TITLE",{"#NAME#":this.file.name,"#SIZE#":e})},isLoaded(){return this.file.progress===100}},methods:{download(){var e;if(this.file.progress!==100||this.canBeOpenedWithViewer){return}const t=(e=this.file.urlDownload)!=null?e:this.file.urlShow;window.open(t,"_blank")},loc(e,t={}){return this.$Bitrix.Loc.getMessage(e,t)}},template:`\n\t\t<div \n\t\t\tv-bind="viewerAttributes" \n\t\t\tclass="bx-im-media-image__container" \n\t\t\t@click="download"\n\t\t\t:style="imageSize"\n\t\t>\n\t\t\t<img\n\t\t\t\tv-lazyload\n\t\t\t\tdata-lazyload-dont-hide\n\t\t\t\t:data-lazyload-src="file.urlShow"\n\t\t\t\t:title="imageTitle"\n\t\t\t\t:alt="file.name"\n\t\t\t\tclass="bx-im-media-image__source"\n\t\t\t/>\n\t\t\t<ProgressBar v-if="!isLoaded" :item="file" :messageId="messageId" />\n\t\t</div>\n\t`};const b={name:"ImageMessage",components:{ReactionList:d.ReactionList,BaseMessage:u.BaseMessage,MessageStatus:d.MessageStatus,DefaultMessageContent:d.DefaultMessageContent,ImageItem:y,ReactionSelector:d.ReactionSelector,ContextMenu:d.ContextMenu},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true},menuIsActiveForId:{type:[String,Number],default:0}},computed:{FileType:()=>h.FileType,message(){return this.item},onlyImage(){return this.message.text.length===0&&this.message.attach.length===0},onlyImageOrVideo(){return this.messageFile.type===h.FileType.image||this.messageFile.type===h.FileType.video},messageFile(){const e=this.message.files[0];return this.$store.getters["files/get"](e,true)},needBackground(){if(this.message.text.length>0){return true}return!this.onlyImageOrVideo},canSetReactions(){return m.Type.isNumber(this.message.id)}},template:`\n\t\t<BaseMessage \n\t\t\t:item="item" \n\t\t\t:dialogId="dialogId" \n\t\t\t:withBackground="needBackground" \n\t\t\t:withDefaultContextMenu="!onlyImage"\n\t\t>\n\t\t\t<div class="bx-im-message-image__container">\n\t\t\t\t<div class="bx-im-message-image__content-with-menu">\n\t\t\t\t\t<div class="bx-im-message-image__content">\n\t\t\t\t\t\t<ImageItem\n\t\t\t\t\t\t\t:key="messageFile.id"\n\t\t\t\t\t\t\t:item="messageFile"\n\t\t\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<template v-if="onlyImage">\n\t\t\t\t\t\t\t<div class="bx-im-message-image__message-status-container">\n\t\t\t\t\t\t\t\t<MessageStatus :item="message" :isOverlay="onlyImage" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ReactionSelector :messageId="message.id" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ContextMenu v-if="onlyImage" :message="message" :menuIsActiveForId="menuIsActiveForId" />\n\t\t\t\t</div>\n\t\t\t\t<div v-if="onlyImage" class="bx-im-message-image__reaction-list-container">\n\t\t\t\t\t<ReactionList :messageId="message.id" />\n\t\t\t\t</div>\n\t\t\t\t<div v-if="!onlyImage" class="bx-im-message-image__default-message-container">\n\t\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" />\n\t\t\t\t\t<ReactionSelector :messageId="message.id" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};var B=babelHelpers.classPrivateFieldLooseKey("getMessageFile");class w extends r.BaseMenu{constructor(){super();Object.defineProperty(this,B,{value:_});this.id=h.PopupType.messageBaseFileMenu;this.id="bx-im-message-file-context-menu";this.diskService=new a.DiskService}getMenuItems(){return[this.getDownloadFileItem(),this.getSaveToDisk()]}getDownloadFileItem(){const e=babelHelpers.classPrivateFieldLooseBase(this,B)[B]();if(!e){return null}return{html:g.Utils.file.createDownloadLink(m.Loc.getMessage("IM_MESSAGE_FILE_MENU_DOWNLOAD_FILE"),e.urlDownload,e.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveToDisk(){const e=babelHelpers.classPrivateFieldLooseBase(this,B)[B]();if(!e){return null}return{text:m.Loc.getMessage("IM_MESSAGE_FILE_MENU_SAVE_ON_DISK"),onclick:function(){void this.diskService.save(e.id).then((()=>{BX.UI.Notification.Center.notify({content:m.Loc.getMessage("IM_MESSAGE_FILE_MENU_SAVE_ON_DISK_SUCCESS")})}));this.menuInstance.close()}.bind(this)}}}function _(){if(this.context.files.length===0){return null}return this.store.getters["files/get"](this.context.files[0])}const S={name:"BaseFileItem",components:{ProgressBar:p},props:{item:{type:Object,required:true},messageId:{type:[String,Number],required:true}},computed:{file(){return this.item},fileShortName(){const e=40;return g.Utils.file.getShortFileName(this.file.name,e)},fileSize(){return g.Utils.file.formatFileSize(this.file.size)},iconClass(){const e=g.Utils.file.getIconTypeByFilename(this.file.name);return`ui-icon-file-${e}`},canBeOpenedWithViewer(){var e;return this.file.viewerAttrs&&((e=BX.UI)==null?void 0:e.Viewer)},viewerAttributes(){return g.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isLoaded(){return this.file.progress===100}},created(){this.contextMenu=new w},beforeUnmount(){this.contextMenu.destroy()},methods:{download(){var e;if(this.file.progress!==100||this.canBeOpenedWithViewer){return}const t=(e=this.file.urlDownload)!=null?e:this.file.urlShow;window.open(t,"_blank")},loc(e,t={}){return this.$Bitrix.Loc.getMessage(e,t)},openContextMenu(e){this.$emit("openContextMenu",e)}},template:`\n\t\t<div class="bx-im-base-file-item__container bx-im-base-file-item__scope">\n\t\t\t<div class="bx-im-base-file-item__icon-container" ref="loader-icon" v-bind="viewerAttributes" @click="download">\n\t\t\t\t<div v-if="isLoaded" :class="iconClass" class="bx-im-base-file-item__type-icon ui-icon"><i></i></div>\n\t\t\t\t<ProgressBar v-else :item="file" :messageId="messageId" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-base-file-item__content" v-bind="viewerAttributes" @click="download">\n\t\t\t\t<span :title="file.name" class="bx-im-base-file-item__title">\n\t\t\t\t\t{{ fileShortName }}\n\t\t\t\t</span>\n\t\t\t\t<div class="bx-im-base-file-item__size">{{ fileSize }}</div>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclass="bx-im-base-file-item__download-icon"\n\t\t\t\t:class="{'--not-active': !isLoaded}"\n\t\t\t\t@click="openContextMenu"\n\t\t\t></div>\n\t\t</div>\n\t`};const x={name:"BaseFileMessage",components:{BaseMessage:u.BaseMessage,DefaultMessageContent:d.DefaultMessageContent,BaseFileItem:S,ReactionSelector:d.ReactionSelector,AuthorTitle:d.AuthorTitle},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},computed:{FileType:()=>h.FileType,message(){return this.item},messageFile(){const e=this.message.files[0];return this.$store.getters["files/get"](e,true)},canSetReactions(){return m.Type.isNumber(this.message.id)}},created(){this.contextMenu=new w},beforeUnmount(){this.contextMenu.destroy()},methods:{onOpenContextMenu(e){const t={dialogId:this.dialogId,...this.message};this.contextMenu.openMenu(t,e.target)}},template:`\n\t\t<BaseMessage :item="item" :dialogId="dialogId">\n\t\t\t<div class="bx-im-message-base-file__container">\n\t\t\t\t<AuthorTitle v-if="withTitle" :item="item" class="bx-im-message-base-file__author-title" />\n\t\t\t\t<BaseFileItem\n\t\t\t\t\t:key="messageFile.id"\n\t\t\t\t\t:item="messageFile"\n\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t@openContextMenu="onOpenContextMenu"\n\t\t\t\t/>\n\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" />\n\t\t\t\t<ReactionSelector :messageId="message.id" />\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};const F=5e6;const C=420;const T=340;const A=200;const L=100;const V=320;const D=180;const P={name:"VideoItem",components:{SocialVideo:l.SocialVideo,ProgressBar:p},props:{item:{type:Object,required:true},messageId:{type:[String,Number],required:true}},computed:{file(){return this.item},autoplay(){return this.file.size<F},canBeOpenedWithViewer(){var e;return this.file.viewerAttrs&&((e=BX.UI)==null?void 0:e.Viewer)},viewerAttributes(){return g.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},imageSize(){let e=this.file.image.width;let t=this.file.image.height;if(!t||!e){return{width:`${V}px`,height:`${D}px`}}if(this.file.image.width>C||this.file.image.height>T){const s=this.file.image.width/this.file.image.height;if(this.file.image.width>C){e=C;t=Math.round(C/s)}if(t>T){e=Math.round(T*s);t=T}}const s={width:Math.max(e,A),height:Math.max(t,L)};return{width:`${s.width}px`,height:`${s.height}px`,"object-fit":s.width<100||s.height<100?"cover":"contain"}},isLoaded(){return this.file.progress===100}},methods:{download(){var e;if(this.file.progress!==100||this.canBeOpenedWithViewer){return}const t=(e=this.file.urlDownload)!=null?e:this.file.urlShow;window.open(t,"_blank")},getPlayCallback(){if(this.autoplay){return null}return()=>{}}},template:`\n\t\t<div @click="download" class="bx-im-video-item__container bx-im-video-item__scope">\n\t\t\t<ProgressBar v-if="!isLoaded" :item="file" :messageId="messageId" />\n\t\t\t<SocialVideo\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t\t:id="file.id"\n\t\t\t\t:src="file.urlShow"\n\t\t\t\t:preview="file.urlPreview"\n\t\t\t\t:elementStyle="imageSize"\n\t\t\t\t:autoplay="autoplay"\n\t\t\t\t:showControls="isLoaded"\n\t\t\t\t:playCallback="getPlayCallback()"\n\t\t\t/>\n\t\t</div>\n\t`};const E={name:"VideoMessage",components:{ReactionList:d.ReactionList,BaseMessage:u.BaseMessage,MessageStatus:d.MessageStatus,DefaultMessageContent:d.DefaultMessageContent,VideoItem:P,ReactionSelector:d.ReactionSelector,ContextMenu:d.ContextMenu},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},menuIsActiveForId:{type:[String,Number],default:0}},computed:{FileType:()=>h.FileType,message(){return this.item},onlyVideo(){return this.message.text.length===0&&this.message.attach.length===0},messageFile(){const e=this.message.files[0];return this.$store.getters["files/get"](e,true)},canSetReactions(){return m.Type.isNumber(this.message.id)}},template:`\n\t\t<BaseMessage \n\t\t\t:item="item" \n\t\t\t:dialogId="dialogId" \n\t\t\t:withBackground="!onlyVideo"\n\t\t\t:withDefaultContextMenu="!onlyVideo"\n\t\t>\n\t\t\t<div class="bx-im-message-video__container bx-im-message-video__scope">\n\t\t\t\t<div class="bx-im-message-video__content-with-menu">\n\t\t\t\t\t<div class="bx-im-message-video__content">\n\t\t\t\t\t\t<VideoItem\n\t\t\t\t\t\t\t:key="messageFile.id"\n\t\t\t\t\t\t\t:item="messageFile"\n\t\t\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<template v-if="onlyVideo">\n\t\t\t\t\t\t\t<div class="bx-im-message-video__message-status-container">\n\t\t\t\t\t\t\t\t<MessageStatus :item="message" :isOverlay="onlyVideo" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ReactionSelector :messageId="message.id" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ContextMenu v-if="onlyVideo" :message="message" :menuIsActiveForId="menuIsActiveForId" />\n\t\t\t\t</div>\n\t\t\t\t<div v-if="onlyVideo" class="bx-im-message-video__reaction-list-container">\n\t\t\t\t\t<ReactionList :messageId="message.id" />\n\t\t\t\t</div>\n\t\t\t\t<div v-if="!onlyVideo" class="bx-im-message-video__default-message-container">\n\t\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" />\n\t\t\t\t\t<ReactionSelector :messageId="message.id" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};const k={name:"AudioItem",components:{AudioPlayer:c.AudioPlayer,ProgressBar:p},props:{item:{type:Object,required:true},messageType:{type:String,required:true},messageId:{type:[String,Number],required:true}},computed:{file(){return this.item},playerBackgroundType(){return this.messageType===h.MessageType.self?"dark":"light"},isLoaded(){return this.file.progress===100}},template:`\n\t\t<div class="bx-im-media-audio__container">\n\t\t\t<ProgressBar v-if="!isLoaded" :item="file" :messageId="messageId" />\n\t\t\t<AudioPlayer\n\t\t\t\t:id="file.id"\n\t\t\t\t:src="file.urlShow"\n\t\t\t\t:file="file"\n\t\t\t\t:timelineType="Math.floor(Math.random() * 5)"\n\t\t\t\t:authorId="file.authorId"\n\t\t\t\t:withContextMenu="false"\n\t\t\t\t:withAvatar="false"\n\t\t\t/>\n\t\t</div>\n\t`};const O={name:"AudioMessage",components:{ReactionList:d.ReactionList,BaseMessage:u.BaseMessage,MessageStatus:d.MessageStatus,DefaultMessageContent:d.DefaultMessageContent,AudioItem:k,ReactionSelector:d.ReactionSelector},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{FileType:()=>h.FileType,message(){return this.item},messageFile(){const e=this.message.files[0];return this.$store.getters["files/get"](e,true)},canSetReactions(){return m.Type.isNumber(this.message.id)},messageType(){return this.$store.getters["messages/getMessageType"](this.message.id)}},template:`\n\t\t<BaseMessage :item="item" :dialogId="dialogId">\n\t\t\t<div class="bx-im-message-audio__container">\n\t\t\t\t<AudioItem\n\t\t\t\t\t:key="messageFile.id"\n\t\t\t\t\t:item="messageFile"\n\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t:messageType="messageType"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-audio__default-message-container">\n\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" />\n\t\t\t\t<ReactionSelector :messageId="message.id" />\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};const X=Object.freeze({image:"ImageMessage",audio:"AudioMessage",video:"VideoMessage",base:"BaseFileMessage",collection:"CollectionFileMessage"});const N={name:"FileMessage",components:{BaseFileMessage:x,ImageMessage:b,VideoMessage:E,AudioMessage:O,UnsupportedMessage:t.UnsupportedMessage},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true},menuIsActiveForId:{type:[String,Number],default:0}},computed:{FileType:()=>h.FileType,message(){return this.item},messageFiles(){const e=[];if(this.message.files.length===0){return e}this.message.files.forEach((t=>{const s=this.$store.getters["files/get"](t,true);e.push(s)}));return e},componentName(){const e=this.messageFiles[0];const t=Boolean(e.image);if(e.type===h.FileType.image&&t){return X.image}if(e.type===h.FileType.audio){return X.audio}const s=e.type===h.FileType.video||g.Utils.file.getFileExtension(e.name)==="mkv";if(s&&t){return X.video}return X.base}},template:`\n\t\t<component \n\t\t\t:is="componentName" \n\t\t\t:item="message" \n\t\t\t:dialogId="dialogId" \n\t\t\t:withTitle="withTitle" \n\t\t\t:menuIsActiveForId="menuIsActiveForId"\n\t\t/>\n\t`};e.FileMessage=N})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Messenger.v2.Component.Message,BX.Vue3.Directives,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX,BX.Vue3.Components,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const);
//# sourceMappingURL=file-message.bundle.map.js