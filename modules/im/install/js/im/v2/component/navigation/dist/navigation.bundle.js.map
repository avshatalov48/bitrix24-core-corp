{"version":3,"file":"navigation.bundle.js","sources":["../src/components/settings/button-panel.js","../src/classes/status-service.js","../src/components/status/user-status-content.js","../src/components/status/user-status-popup.js","../src/classes/version-service.js","../src/components/settings/user-settings-content.js","../src/components/settings/user-settings-popup.js","../src/components/user-settings.js","../src/components/market-apps.js","../src/navigation.js"],"sourcesContent":["import {Button, ButtonSize, ButtonColor} from 'im.v2.component.elements';\n\n// @vue/component\nexport const ButtonPanel = {\n\tcomponents: {Button},\n\temits: ['openProfile', 'logout'],\n\tdata()\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t}\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-user-settings-popup__button-panel\">\n\t\t\t<div class=\"bx-im-user-settings-popup__button-panel_button\">\n\t\t\t\t<Button\n\t\t\t\t\t:color=\"ButtonColor.PrimaryBorder\"\n\t\t\t\t\t:size=\"ButtonSize.M\"\n\t\t\t\t\t:isUppercase=\"false\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:text=\"loc('IM_USER_SETTINGS_OPEN_PROFILE')\"\n\t\t\t\t\t@click=\"$emit('openProfile')\"\n\t\t\t\t/>\n\t\t\t</div>\n<!--\t\t\t<div class=\"bx-im-user-settings-popup__button-panel_button\">-->\n<!--\t\t\t\t<Button-->\n<!--\t\t\t\t\t:color=\"ButtonColor.DangerBorder\"-->\n<!--\t\t\t\t\t:size=\"ButtonSize.M\"-->\n<!--\t\t\t\t\t:isUppercase=\"false\"-->\n<!--\t\t\t\t\t:isRounded=\"true\"-->\n<!--\t\t\t\t\t:text=\"loc('IM_USER_SETTINGS_LOGOUT')\"-->\n<!--\t\t\t\t\t@click=\"$emit('logout')\"-->\n<!--\t\t\t\t/>-->\n<!--\t\t\t</div>-->\n\t\t</div>\n\t`\n};","import {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod, UserStatus} from 'im.v2.const';\n\nexport class StatusService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t}\n\n\tchangeStatus(status: string): Promise\n\t{\n\t\tif (!UserStatus[status])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tLogger.warn(`StatusService: change current user status to ${status}`);\n\t\tthis.store.dispatch('users/setStatus', {status});\n\t\treturn this.restClient.callMethod(RestMethod.imUserStatusSet, {\n\t\t\t'STATUS': status\n\t\t}).catch(error => {\n\t\t\tconsole.error('StatusService: changeStatus error', error);\n\t\t});\n\t}\n}","import {UserStatus, UserStatusSize} from 'im.v2.component.elements';\nimport {UserStatus as UserStatusType} from 'im.v2.const';\nimport {Utils} from 'im.v2.lib.utils';\n\nimport {StatusService} from '../../classes/status-service';\n\n// @vue/component\nexport const UserStatusContent = {\n\tname: 'UserStatusContent',\n\tcomponents: {UserStatus},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tUserStatusSize: () => UserStatusSize,\n\t\tUserStatusType: () => UserStatusType,\n\t\tstatusList(): string[]\n\t\t{\n\t\t\treturn [UserStatusType.online, UserStatusType.break, UserStatusType.away, UserStatusType.dnd];\n\t\t}\n\t},\n\tmethods:\n\t{\n\t\tonStatusClick(statusName: string)\n\t\t{\n\t\t\tthis.getStatusService().changeStatus(statusName);\n\t\t\tthis.$emit('close');\n\t\t},\n\t\tgetStatusService(): StatusService\n\t\t{\n\t\t\tif (!this.statusService)\n\t\t\t{\n\t\t\t\tthis.statusService = new StatusService();\n\t\t\t}\n\n\t\t\treturn this.statusService;\n\t\t},\n\t\tgetStatusText(status: string): string\n\t\t{\n\t\t\treturn Utils.user.getStatusText(status);\n\t\t}\n\t},\n\ttemplate:\n\t`\n\t\t<div class=\"bx-im-user-status-popup__scope bx-im-user-status-popup__container\">\n\t\t\t<div\n\t\t\t\tv-for=\"status in statusList\"\n\t\t\t\t:key=\"status\"\n\t\t\t\t@click=\"onStatusClick(status)\"\n\t\t\t\tclass=\"bx-im-user-status-popup__item\"\n\t\t\t>\n\t\t\t\t<UserStatus :status=\"status\" :size=\"UserStatusSize.M\" />\n\t\t\t\t<div class=\"bx-im-user-status-popup__text\">{{ getStatusText(status) }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`\n};","import {MessengerPopup} from 'im.v2.component.elements';\n\nimport {UserStatusContent} from './user-status-content';\n\nconst POPUP_ID = 'im-user-status-popup';\n\n// @vue/component\nexport const UserStatusPopup = {\n\tname: 'UserStatusPopup',\n\tcomponents: {MessengerPopup, UserStatusContent},\n\tprops:\n\t{\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig()\n\t\t{\n\t\t\treturn {\n\t\t\t\twidth: 190,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\toffsetTop: 4,\n\t\t\t\tpadding: 0,\n\t\t\t};\n\t\t}\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\t:config=\"config\"\n\t\t\t@close=\"$emit('close')\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t>\n\t\t\t<UserStatusContent @close=\"$emit('close')\" />\n\t\t</MessengerPopup>\n\t`\n};","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { RestMethod } from 'im.v2.const';\n\nexport class VersionService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t}\n\n\tdisableBeta(): Promise\n\t{\n\t\tLogger.warn('VersionService: disable v2');\n\n\t\treturn runAction(RestMethod.imV2BetaDisable).catch((error) => {\n\t\t\tLogger.error('VersionService: disable v2 error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { Avatar, AvatarSize, UserStatus, UserStatusSize } from 'im.v2.component.elements';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Extension } from 'main.core';\n\nimport { ButtonPanel } from './button-panel';\nimport { UserStatusPopup } from '../status/user-status-popup';\nimport { VersionService } from '../../classes/version-service';\n\nimport 'ui.buttons';\nimport 'ui.feedback.form';\n\nimport type { ImModelUser } from 'im.v2.model';\nimport { UserStatus as UserStatusType } from 'im.v2.const';\n\n// @vue/component\nexport const UserSettingsContent = {\n\tname: 'UserSettingsContent',\n\tcomponents: { Avatar, UserStatus, ButtonPanel, UserStatusPopup },\n\temits: ['closePopup', 'enableAutoHide', 'disableAutoHide'],\n\tdata(): Object\n\t{\n\t\treturn {\n\t\t\tshowStatusPopup: false,\n\t\t\tisChangingVersion: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tUserStatusSize: () => UserStatusSize,\n\t\tcurrentUserId(): number\n\t\t{\n\t\t\treturn Core.getUserId();\n\t\t},\n\t\tcurrentUser(): ImModelUser\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](this.currentUserId, true);\n\t\t},\n\t\tcurrentUserPosition(): string\n\t\t{\n\t\t\treturn this.$store.getters['users/getPosition'](this.currentUserId);\n\t\t},\n\t\tuserStatus(): string\n\t\t{\n\t\t\tconst user = this.$store.getters['users/get'](this.currentUserId, true);\n\t\t\tif (user)\n\t\t\t{\n\t\t\t\treturn user.status;\n\t\t\t}\n\n\t\t\treturn UserStatusType.online;\n\t\t},\n\t\tcurrentHost(): string\n\t\t{\n\t\t\treturn location.hostname;\n\t\t},\n\t\tuserStatusText(): string\n\t\t{\n\t\t\treturn Utils.user.getStatusText(this.currentUser.status);\n\t\t},\n\t\tprofileUri(): string\n\t\t{\n\t\t\treturn Utils.user.getProfileLink(this.currentUserId);\n\t\t},\n\t\tshowOldChatButton(): boolean\n\t\t{\n\t\t\tconst settings = Extension.getSettings('im.v2.component.navigation');\n\n\t\t\treturn Boolean(settings.get('force_beta')) === false;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonBackToOldChatClick()\n\t\t{\n\t\t\tthis.isChangingVersion = true;\n\t\t\tthis.getVersionService().disableBeta().then(() => {\n\t\t\t\tif (DesktopManager.isDesktop())\n\t\t\t\t{\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twindow.location.replace('/online/');\n\t\t\t\t}\n\t\t\t}).catch((error) => {\n\t\t\t\tLogger.error('Error while switching version', error);\n\t\t\t});\n\t\t},\n\t\tonStatusClick()\n\t\t{\n\t\t\tthis.showStatusPopup = true;\n\t\t\tthis.$emit('disableAutoHide');\n\t\t},\n\t\tonStatusPopupClose()\n\t\t{\n\t\t\tthis.showStatusPopup = false;\n\t\t\tthis.$emit('enableAutoHide');\n\t\t},\n\t\tgetVersionService(): VersionService\n\t\t{\n\t\t\tif (!this.versionService)\n\t\t\t{\n\t\t\t\tthis.versionService = new VersionService();\n\t\t\t}\n\n\t\t\treturn this.versionService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-user-settings-popup__scope bx-im-user-settings-popup__container\">\n\t\t\t<div class=\"bx-im-user-settings-popup__header\">\n\t\t\t\t<div class=\"bx-im-user-settings-popup__header_left\">\n\t\t\t\t\t<Avatar :dialogId=\"currentUserId\" :size=\"AvatarSize.XL\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-user-settings-popup__header_right\">\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__domain\">{{ currentHost }}</div>\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__user_name\" :title=\"currentUser.name\">{{ currentUser.name }}</div>\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__user_title\" :title=\"currentUserPosition\">{{ currentUserPosition }}</div>\n\t\t\t\t\t<a :href=\"profileUri\" target=\"_blank\" class=\"bx-im-user-settings-popup__user_link\">\n\t\t\t\t\t\t<ButtonPanel @openProfile=\"$emit('closePopup')\" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-user-settings-popup__list\">\n\t\t\t\t<div class=\"bx-im-user-settings-popup__separator\"></div>\n\t\t\t\t<!-- Status select -->\n\t\t\t\t<div @click=\"onStatusClick\" class=\"bx-im-user-settings-popup__list-item --with-icon\">\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_left\">\n\t\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_status\">\n\t\t\t\t\t\t\t<UserStatus :status=\"userStatus\" :size=\"UserStatusSize.M\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_text\">{{ userStatusText }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_icon --chevron\" ref=\"status-select\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-user-settings-popup__separator\"></div>\n\t\t\t</div>\n\t\t\t<!-- Back to old chat -->\n\t\t\t<div v-if=\"showOldChatButton\" class=\"bx-im-user-settings-popup__old-chat\" :class=\"{'--loading': isChangingVersion}\" @click=\"onBackToOldChatClick\">\n\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_icon --arrow-left\"></div>\n\t\t\t\t<div class=\"bx-im-user-settings-popup__old-chat_text\">\n\t\t\t\t\t{{ loc('IM_USER_SETTINGS_OLD_CHAT') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<UserStatusPopup\n\t\t\tv-if=\"showStatusPopup\"\n\t\t\t:bindElement=\"$refs['status-select'] || {}\"\n\t\t\t@close=\"onStatusPopupClose\"\n\t\t/>\n\t`,\n};\n","import {MessengerPopup} from 'im.v2.component.elements';\n\nimport {UserSettingsContent} from './user-settings-content';\n\nconst POPUP_ID = 'im-user-settings-popup';\n\n// @vue/component\nexport const UserSettingsPopup = {\n\tname: 'UserSettingsPopup',\n\tcomponents: {MessengerPopup, UserSettingsContent},\n\tprops:\n\t{\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig()\n\t\t{\n\t\t\treturn {\n\t\t\t\twidth: 313,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\toffsetTop: 4,\n\t\t\t\tpadding: 0,\n\t\t\t};\n\t\t}\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\tv-slot=\"{enableAutoHide, disableAutoHide}\"\n\t\t\t:config=\"config\"\n\t\t\t@close=\"$emit('close')\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t>\n\t\t\t<UserSettingsContent @closePopup=\"$emit('close')\" @enableAutoHide=\"enableAutoHide\" @disableAutoHide=\"disableAutoHide\" />\n\t\t</MessengerPopup>\n\t`\n};","import { Core } from 'im.v2.application.core';\nimport { UserStatus as UserStatusType } from 'im.v2.const';\nimport { Avatar, AvatarSize } from 'im.v2.component.elements';\n\nimport { UserSettingsPopup } from './settings/user-settings-popup';\nimport { UserStatusPopup } from './status/user-status-popup';\n\nimport '../css/user-settings.css';\nimport '../css/user-status.css';\n\n// @vue/component\nexport const UserSettings = {\n\tname: 'UserSettings',\n\tcomponents: { UserSettingsPopup, UserStatusPopup, Avatar },\n\tdata(): Object\n\t{\n\t\treturn {\n\t\t\tshowSettingsPopup: false,\n\t\t\tshowStatusPopup: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tcurrentUserId(): number\n\t\t{\n\t\t\treturn Core.getUserId();\n\t\t},\n\t\tuserStatus(): string\n\t\t{\n\t\t\tconst user = this.$store.getters['users/get'](this.currentUserId, true);\n\t\t\tif (user)\n\t\t\t{\n\t\t\t\treturn user.status;\n\t\t\t}\n\n\t\t\treturn UserStatusType.online;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonAvatarClick()\n\t\t{\n\t\t\tthis.showSettingsPopup = true;\n\t\t},\n\t\tonStatusClick()\n\t\t{\n\t\t\tthis.showStatusPopup = true;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-navigation__user\">\n\t\t\t<div @click=\"onAvatarClick\" class=\"bx-im-navigation__user_avatar\" ref=\"avatar\">\n\t\t\t\t<Avatar :dialogId=\"currentUserId.toString()\" :size=\"AvatarSize.M\" />\n\t\t\t\t<div @click.stop=\"onStatusClick\" :class=\"'--' + userStatus\" class=\"bx-im-navigation__user_status\" ref=\"status\"></div>\n\t\t\t</div>\n\t\t\t<UserStatusPopup\n\t\t\t\tv-if=\"showStatusPopup\"\n\t\t\t\t:bindElement=\"$refs['status'] || {}\"\n\t\t\t\t@close=\"showStatusPopup = false\"\n\t\t\t/>\n\t\t\t<UserSettingsPopup\n\t\t\t\tv-if=\"showSettingsPopup\"\n\t\t\t\t:bindElement=\"$refs['avatar'] || {}\"\n\t\t\t\t@close=\"showSettingsPopup = false\" \n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import 'ui.fontawesome4';\n\nimport {Core} from 'im.v2.application.core';\nimport {Layout, PlacementType} from 'im.v2.const';\nimport {MarketManager} from 'im.v2.lib.market';\n\nimport type {ImModelMarketApplication, ImModelLayout} from 'im.v2.model';\n\nexport type MarketMenuItem = {\n\tid: string,\n\ttext: string,\n\tcounter: number,\n\tactive: boolean,\n\ticonName: string,\n\tloadConfiguration?: ImModelMarketApplication['loadConfiguration']\n};\n\n// @vue/component\nexport const MarketApps = {\n\tname: 'MarketApps',\n\temits: ['clickMarketItem'],\n\tcomputed:\n\t{\n\t\tmarketMenuItems(): MarketMenuItem[]\n\t\t{\n\t\t\tconst navigationApps = MarketManager.getInstance().getAvailablePlacementsByType(PlacementType.navigation);\n\n\t\t\treturn navigationApps.map((item: ImModelMarketApplication) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: item.id,\n\t\t\t\t\ttext: item.title,\n\t\t\t\t\tcounter: 0,\n\t\t\t\t\tactive: true,\n\t\t\t\t\ticonName: item.options.iconName ? item.options.iconName : '',\n\t\t\t\t\tloadConfiguration: item.loadConfiguration\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tcanShowMarket(): boolean\n\t\t{\n\t\t\treturn Core.isCloud();\n\t\t}\n\t},\n\tmethods:\n\t{\n\t\tonMarketClick()\n\t\t{\n\t\t\tMarketManager.openMarketplace();\n\t\t},\n\t\tonMarketItemClick(item: MarketMenuItem)\n\t\t{\n\t\t\tthis.$emit('clickMarketItem', {\n\t\t\t\tlayoutName: Layout.market.name,\n\t\t\t\tlayoutEntityId: item.id\n\t\t\t});\n\t\t},\n\t\tgetMenuItemClasses(item: MarketMenuItem)\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--selected': this.isItemSelected(item.id),\n\t\t\t\t'--active': item.active\n\t\t\t};\n\t\t},\n\t\tisItemSelected(itemId: string): boolean\n\t\t{\n\t\t\treturn this.layout.name === Layout.market.name && this.layout.entityId === itemId;\n\t\t},\n\t\tgetIconClassNames(item: MarketMenuItem): string\n\t\t{\n\t\t\treturn item.iconName.toString();\n\t\t}\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\tv-if=\"canShowMarket\"\n\t\t\t@click=\"onMarketClick\"\n\t\t\tclass=\"bx-im-navigation__item_container\"\n\t\t>\n\t\t\t<div class=\"bx-im-navigation__item --active\">\n\t\t\t\t<div class=\"bx-im-navigation__item_icon --market\"></div>\n\t\t\t\t<div class=\"bx-im-navigation__item_text\" :title=\"$Bitrix.Loc.getMessage('IM_NAVIGATION_MARKET_TITLE')\">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_NAVIGATION_MARKET_TITLE') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-for=\"item in marketMenuItems\"\n\t\t\t@click=\"onMarketItemClick(item)\"\n\t\t\tclass=\"bx-im-navigation__item_container\"\n\t\t>\n\t\t\t<div :class=\"getMenuItemClasses(item)\" class=\"bx-im-navigation__item\">\n\t\t\t\t<div class=\"bx-im-navigation__market-item_icon-container\">\n\t\t\t\t\t<i \n\t\t\t\t\t\tclass=\"bx-im-navigation__market-item_icon fa\" \n\t\t\t\t\t\t:class=\"getIconClassNames(item)\" \n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-navigation__item_text\" :title=\"item.text\">{{item.text}}</div>\n\t\t\t</div>\n\t\t</div>\n\t`\n};","import { Type } from 'main.core';\nimport { hint } from 'ui.vue3.directives.hint';\nimport { MessageBox, MessageBoxButtons } from 'ui.dialogs.messagebox';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { MessengerSlider } from 'im.v2.lib.slider';\nimport { CallManager } from 'im.v2.lib.call';\nimport { Layout } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { PhoneManager } from 'im.v2.lib.phone';\n\nimport { UserSettings } from './components/user-settings';\nimport { MarketApps } from './components/market-apps';\n\nimport './css/navigation.css';\n\ntype MenuItem = {\n\tid: string,\n\ttext: string,\n\tcounter: number,\n\tactive: boolean,\n\tclickHandler: Function,\n};\n\n// @vue/component\nexport const MessengerNavigation = {\n\tname: 'MessengerNavigation',\n\tdirectives: { hint },\n\tcomponents: { UserSettings, MarketApps },\n\tprops: {\n\t\tcurrentLayoutName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['navigationClick'],\n\tdata()\n\t{\n\t\treturn {\n\t\t\tneedTopShadow: false,\n\t\t\tneedBottomShadow: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tmenuItems(): MenuItem[]\n\t\t{\n\t\t\tconst menuItems = [\n\t\t\t\t{\n\t\t\t\t\tid: Layout.chat.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_CHATS'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['recent/getTotalChatCounter']),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.notification.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_NOTIFICATIONS'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['notifications/getCounter']),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.openlines.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_OPENLINES'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['recent/getTotalLinesCounter']),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tif (PhoneManager.getInstance().canCall())\n\t\t\t{\n\t\t\t\tmenuItems.push({\n\t\t\t\t\tid: Layout.call.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_CALLS'),\n\t\t\t\t\tactive: true,\n\t\t\t\t\tclickHandler: this.onCallClick,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmenuItems.push({\n\t\t\t\tid: Layout.settings.name,\n\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_SETTINGS'),\n\t\t\t\tactive: true,\n\t\t\t});\n\n\t\t\tif (this.isTimeManagerActive())\n\t\t\t{\n\t\t\t\tmenuItems.push({\n\t\t\t\t\tid: 'timemanager',\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_TIMEMANAGER'),\n\t\t\t\t\tcounter: 0,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tclickHandler: this.onTimeManagerClick,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn menuItems;\n\t\t},\n\t\tshowCloseIcon(): boolean\n\t\t{\n\t\t\treturn !DesktopApi.isChatTab();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tLogger.warn('Navigation created');\n\t},\n\tmounted()\n\t{\n\t\tconst container = this.$refs.navigation;\n\t\tthis.needBottomShadow = container.scrollTop + container.clientHeight !== container.scrollHeight;\n\t},\n\tmethods:\n\t{\n\t\tonMenuItemClick(item: MenuItem, event: PointerEvent)\n\t\t{\n\t\t\tif (!item.active)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Type.isFunction(item.clickHandler))\n\t\t\t{\n\t\t\t\titem.clickHandler(event.target);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$emit('navigationClick', { layoutName: item.id, layoutEntityId: '' });\n\t\t},\n\t\tonMarketMenuItemClick({ layoutName, layoutEntityId })\n\t\t{\n\t\t\tthis.$emit('navigationClick', {\n\t\t\t\tlayoutName,\n\t\t\t\tlayoutEntityId,\n\t\t\t});\n\t\t},\n\t\tcloseSlider()\n\t\t{\n\t\t\tconst hasCall = CallManager.getInstance().hasCurrentCall();\n\t\t\tif (hasCall)\n\t\t\t{\n\t\t\t\tthis.showExitConfirm();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tMessengerSlider.getInstance().getCurrent().close();\n\t\t},\n\t\tgetMenuItemClasses(item: MenuItem): Object<string, boolean>\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--selected': item.id === this.currentLayoutName,\n\t\t\t\t'--with-counter': item.counter && item.id !== this.currentLayoutName,\n\t\t\t\t'--active': item.active,\n\t\t\t};\n\t\t},\n\t\tformatCounter(counter: number): string\n\t\t{\n\t\t\tif (counter === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn counter > 99 ? '99+' : String(counter);\n\t\t},\n\t\tgetHintContent(item: MenuItem): ?{text: string, popupOptions: Object<string, any>}\n\t\t{\n\t\t\tif (item.active)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttext: this.loc('IM_MESSENGER_NOT_AVAILABLE'),\n\t\t\t\tpopupOptions: {\n\t\t\t\t\tangle: { position: 'left' },\n\t\t\t\t\ttargetContainer: document.body,\n\t\t\t\t\toffsetLeft: 80,\n\t\t\t\t\toffsetTop: -54,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tprepareNavigationText(phraseCode: string): string\n\t\t{\n\t\t\treturn this.loc(phraseCode, {\n\t\t\t\t'#BR#': '</br>',\n\t\t\t});\n\t\t},\n\t\tshowExitConfirm()\n\t\t{\n\t\t\tMessageBox.show({\n\t\t\t\tmessage: this.loc('IM_NAVIGATION_ACTIVE_CALL_CONFIRM'),\n\t\t\t\tmodal: true,\n\t\t\t\tbuttons: MessageBoxButtons.OK_CANCEL,\n\t\t\t\tonOk: (messageBox: MessageBox) => {\n\t\t\t\t\tCallManager.getInstance().leaveCurrentCall();\n\t\t\t\t\tMessengerSlider.getInstance().getCurrent().close();\n\t\t\t\t\tmessageBox.close();\n\t\t\t\t},\n\t\t\t\tonCancel: (messageBox: MessageBox) => {\n\t\t\t\t\tmessageBox.close();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t\tonScroll(event: Event)\n\t\t{\n\t\t\tconst scrollPosition = Math.round(event.target.scrollTop + event.target.clientHeight);\n\t\t\tthis.needBottomShadow = scrollPosition !== event.target.scrollHeight;\n\n\t\t\tif (event.target.scrollTop === 0)\n\t\t\t{\n\t\t\t\tthis.needTopShadow = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.needTopShadow = true;\n\t\t},\n\t\tonClickScrollDown()\n\t\t{\n\t\t\tthis.$refs.navigation.scrollTo({\n\t\t\t\ttop: this.$refs.navigation.scrollHeight,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t},\n\t\tonClickScrollUp()\n\t\t{\n\t\t\tthis.$refs.navigation.scrollTo({\n\t\t\t\ttop: 0,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t},\n\t\tonCallClick(clickTarget: HTMLElement)\n\t\t{\n\t\t\tconst MENU_ITEM_CLASS = 'bx-im-navigation__item';\n\t\t\tconst KEYPAD_OFFSET_TOP = -30;\n\t\t\tconst KEYPAD_OFFSET_LEFT = 64;\n\n\t\t\tPhoneManager.getInstance().openKeyPad({\n\t\t\t\tbindElement: clickTarget.closest(`.${MENU_ITEM_CLASS}`),\n\t\t\t\toffsetTop: KEYPAD_OFFSET_TOP,\n\t\t\t\toffsetLeft: KEYPAD_OFFSET_LEFT,\n\t\t\t});\n\t\t},\n\t\tisTimeManagerActive(): boolean\n\t\t{\n\t\t\treturn Boolean(BX.Timeman?.Monitor?.isEnabled());\n\t\t},\n\t\tasync onTimeManagerClick()\n\t\t{\n\t\t\tBX.Timeman?.Monitor?.openReport();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-navigation__scope bx-im-navigation__container\">\n\t\t\t<div v-if=\"needTopShadow\" class=\"bx-im-navigation__shadow --top\">\n\t\t\t\t<div class=\"bx-im-navigation__scroll-button\" @click=\"onClickScrollUp\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-navigation__top\" @scroll=\"onScroll\" ref=\"navigation\">\n\t\t\t\t<template v-if=\"showCloseIcon\">\n\t\t\t\t\t<!-- Close -->\n\t\t\t\t\t<div class=\"bx-im-navigation__close_container\" @click=\"closeSlider\">\n\t\t\t\t\t\t<div class=\"bx-im-navigation__close\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- Separator -->\n\t\t\t\t\t<div class=\"bx-im-navigation__separator_container\">\n\t\t\t\t\t\t<div class=\"bx-im-navigation__close_separator\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t\t<!-- Menu items -->\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"item in menuItems\"\n\t\t\t\t\tv-hint=\"getHintContent(item)\"\n\t\t\t\t\t@click=\"onMenuItemClick(item, $event)\"\n\t\t\t\t\tclass=\"bx-im-navigation__item_container\"\n\t\t\t\t>\n\t\t\t\t\t<div :class=\"getMenuItemClasses(item)\" class=\"bx-im-navigation__item\">\n\t\t\t\t\t\t<div :class=\"'--' + item.id\" class=\"bx-im-navigation__item_icon\"></div>\n\t\t\t\t\t\t<div class=\"bx-im-navigation__item_text\" :title=\"item.text\" v-html=\"item.text\"></div>\n\t\t\t\t\t\t<div v-if=\"item.active && item.counter\" class=\"bx-im-navigation__item_counter\">\n\t\t\t\t\t\t\t<div class=\"bx-im-navigation__item_counter-text\">\n\t\t\t\t\t\t\t\t{{ item.counter }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<MarketApps @clickMarketItem=\"onMarketMenuItemClick\"/>\n\t\t\t</div>\n\t\t\t<div v-if=\"needBottomShadow\" class=\"bx-im-navigation__shadow --bottom\">\n\t\t\t\t<div class=\"bx-im-navigation__scroll-button --bottom\" @click=\"onClickScrollDown\"></div>\n\t\t\t</div>\n\t\t\t<!-- Avatar -->\n\t\t\t<div class=\"bx-im-navigation__user_container\">\n\t\t\t\t<UserSettings />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n"],"names":["ButtonPanel","components","Button","emits","data","computed","ButtonSize","ButtonColor","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","StatusService","constructor","store","restClient","Core","getStore","getRestClient","changeStatus","status","UserStatus","Logger","warn","dispatch","callMethod","RestMethod","imUserStatusSet","catch","error","console","UserStatusContent","name","UserStatusSize","UserStatusType","statusList","online","break","away","dnd","onStatusClick","statusName","getStatusService","$emit","statusService","getStatusText","Utils","user","POPUP_ID","UserStatusPopup","MessengerPopup","props","bindElement","type","Object","required","config","width","offsetTop","padding","VersionService","disableBeta","runAction","imV2BetaDisable","UserSettingsContent","Avatar","showStatusPopup","isChangingVersion","AvatarSize","currentUserId","getUserId","currentUser","$store","getters","currentUserPosition","userStatus","currentHost","location","hostname","userStatusText","profileUri","getProfileLink","showOldChatButton","settings","Extension","getSettings","Boolean","get","onBackToOldChatClick","getVersionService","then","DesktopManager","isDesktop","window","reload","replace","onStatusPopupClose","versionService","UserSettingsPopup","UserSettings","showSettingsPopup","onAvatarClick","MarketApps","marketMenuItems","navigationApps","MarketManager","getInstance","getAvailablePlacementsByType","PlacementType","navigation","map","item","id","text","title","counter","active","iconName","options","loadConfiguration","layout","canShowMarket","isCloud","onMarketClick","openMarketplace","onMarketItemClick","layoutName","Layout","market","layoutEntityId","getMenuItemClasses","isItemSelected","itemId","entityId","getIconClassNames","toString","MessengerNavigation","directives","hint","currentLayoutName","String","needTopShadow","needBottomShadow","menuItems","chat","prepareNavigationText","formatCounter","notification","openlines","PhoneManager","canCall","push","call","clickHandler","onCallClick","isTimeManagerActive","onTimeManagerClick","showCloseIcon","DesktopApi","isChatTab","created","mounted","container","$refs","scrollTop","clientHeight","scrollHeight","onMenuItemClick","event","Type","isFunction","target","onMarketMenuItemClick","closeSlider","hasCall","CallManager","hasCurrentCall","showExitConfirm","MessengerSlider","getCurrent","close","getHintContent","popupOptions","angle","position","targetContainer","document","body","offsetLeft","MessageBox","show","message","modal","buttons","MessageBoxButtons","OK_CANCEL","onOk","messageBox","leaveCurrentCall","onCancel","replacements","onScroll","scrollPosition","Math","round","onClickScrollDown","scrollTo","top","behavior","onClickScrollUp","clickTarget","MENU_ITEM_CLASS","KEYPAD_OFFSET_TOP","KEYPAD_OFFSET_LEFT","openKeyPad","closest","BX","Timeman","Monitor","isEnabled","openReport"],"mappings":"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"}