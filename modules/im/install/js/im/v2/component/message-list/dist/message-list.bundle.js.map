{"version":3,"file":"message-list.bundle.js","sources":["../src/classes/user-servlce.js","../src/components/additional-users.js","../src/components/dialog-status.js","../src/components/dialog-loader.js","../src/classes/message-component-manager.js","../src/classes/avatar-menu.js","../src/classes/message-menu.js","../src/components/block/date-group-title.js","../src/components/block/date-group.js","../src/components/block/author-group.js","../src/components/block/new-messages.js","../src/components/block/marked-messages.js","../src/components/empty-state.js","../src/classes/collection-manager.js","../src/utils/message-components.js","../src/message-list.js"],"sourcesContent":["import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class UserService\n{\n\tasync loadReadUsers(messageId): Promise<number[]>\n\t{\n\t\tlet users = [];\n\t\tLogger.warn('Dialog: UserService: loadReadUsers', messageId);\n\t\tconst response = await Core.getRestClient().callMethod(RestMethod.imV2ChatMessageTailViewers, {\n\t\t\tid: messageId,\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: UserService: loadReadUsers error', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tusers = response.data().users;\n\t\tconst userManager = new UserManager();\n\t\tawait userManager.setUsersToModel(Object.values(users));\n\n\t\treturn users.map((user) => user.id);\n\t}\n}","import { Core } from 'im.v2.application.core';\nimport { UserListPopup } from 'im.v2.component.elements';\n\nimport { UserService } from '../classes/user-servlce';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const AdditionalUsers = {\n\tcomponents: { UserListPopup },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tshow: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowPopup: false,\n\t\t\tloadingAdditionalUsers: false,\n\t\t\tadditionalUsers: [],\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tshow(newValue, oldValue)\n\t\t{\n\t\t\tif (!oldValue && newValue)\n\t\t\t{\n\t\t\t\tthis.showPopup = true;\n\t\t\t\tthis.loadUsers();\n\t\t\t}\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tasync loadUsers()\n\t\t{\n\t\t\tthis.loadingAdditionalUsers = true;\n\t\t\tconst userIds = await this.getUserService().loadReadUsers(this.dialog.lastMessageId)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loadingAdditionalUsers = false;\n\t\t\t\t});\n\n\t\t\tthis.additionalUsers = this.prepareAdditionalUsers(userIds);\n\t\t\tthis.loadingAdditionalUsers = false;\n\t\t},\n\t\tonPopupClose()\n\t\t{\n\t\t\tthis.showPopup = false;\n\t\t\tthis.$emit('close');\n\t\t},\n\t\tprepareAdditionalUsers(userIds: number[]): number[]\n\t\t{\n\t\t\tconst firstViewerId = this.dialog.lastMessageViews.firstViewer.userId;\n\n\t\t\treturn userIds.filter((userId) => {\n\t\t\t\treturn userId !== Core.getUserId() && userId !== firstViewerId;\n\t\t\t});\n\t\t},\n\t\tgetUserService(): UserService\n\t\t{\n\t\t\tif (!this.userService)\n\t\t\t{\n\t\t\t\tthis.userService = new UserService();\n\t\t\t}\n\n\t\t\treturn this.userService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<UserListPopup\n\t\t\tid=\"bx-im-dialog-read-users\"\n\t\t\t:showPopup=\"showPopup\"\n\t\t\t:loading=\"loadingAdditionalUsers\"\n\t\t\t:userIds=\"additionalUsers\"\n\t\t\t:bindElement=\"bindElement || {}\"\n\t\t\t:withAngle=\"false\"\n\t\t\t:forceTop=\"true\"\n\t\t\t@close=\"onPopupClose\"\n\t\t/>\n\t`,\n};\n","import { Text, type JsonObject } from 'main.core';\n\nimport { ChatType } from 'im.v2.const';\nimport { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport { AdditionalUsers } from './additional-users';\n\nimport '../css/dialog-status.css';\n\nimport type { ImModelChat } from 'im.v2.model';\n\ntype LastMessageViews = {\n\tcountOfViewers: number,\n\tfirstViewer?: {\n\t\tuserId: number,\n\t\tuserName: string,\n\t\tdate: Date\n\t},\n\tmessageId: number\n};\n\nconst TYPING_USERS_COUNT = 3;\nconst MORE_USERS_CSS_CLASS = 'bx-im-dialog-chat-status__user-count';\n\n// @vue/component\nexport const DialogStatus = {\n\tcomponents: { AdditionalUsers },\n\tprops: {\n\t\tdialogId: {\n\t\t\trequired: true,\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowAdditionalUsers: false,\n\t\t\tadditionalUsersLinkElement: null,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tisChat(): boolean\n\t\t{\n\t\t\treturn !this.isUser;\n\t\t},\n\t\ttypingStatus(): string\n\t\t{\n\t\t\tif (!this.dialog.inited || this.dialog.writingList.length === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst firstTypingUsers = this.dialog.writingList.slice(0, TYPING_USERS_COUNT);\n\t\t\tconst text = firstTypingUsers.map((element) => element.userName).join(', ');\n\n\t\t\tconst remainingUsersCount = this.dialog.writingList.length - TYPING_USERS_COUNT;\n\t\t\tif (remainingUsersCount > 0)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_DIALOG_CHAT_STATUS_TYPING_PLURAL', {\n\t\t\t\t\t'#USER#': text,\n\t\t\t\t\t'#COUNT#': remainingUsersCount,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.loc('IM_DIALOG_CHAT_STATUS_TYPING', { '#USER#': text });\n\t\t},\n\t\treadStatus(): string\n\t\t{\n\t\t\tif (!this.dialog.inited)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (this.lastMessageViews.countOfViewers === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (this.isUser)\n\t\t\t{\n\t\t\t\treturn this.formatUserViewStatus();\n\t\t\t}\n\n\t\t\treturn this.formatChatViewStatus();\n\t\t},\n\t\tlastMessageViews(): LastMessageViews\n\t\t{\n\t\t\treturn this.dialog.lastMessageViews;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatUserViewStatus(): string\n\t\t{\n\t\t\tconst { date } = this.lastMessageViews.firstViewer;\n\n\t\t\treturn this.loc('IM_DIALOG_CHAT_STATUS_READ_USER', {\n\t\t\t\t'#DATE#': DateFormatter.formatByTemplate(date, DateTemplate.messageReadStatus),\n\t\t\t});\n\t\t},\n\t\tformatChatViewStatus(): string\n\t\t{\n\t\t\tconst { countOfViewers, firstViewer } = this.lastMessageViews;\n\t\t\tif (countOfViewers === 1)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_DIALOG_CHAT_STATUS_READ_CHAT', {\n\t\t\t\t\t'#USER#': firstViewer.userName,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.loc('IM_DIALOG_CHAT_STATUS_READ_CHAT_PLURAL', {\n\t\t\t\t'#USERS#': Text.encode(firstViewer.userName),\n\t\t\t\t'#LINK_START#': `<span class=\"${MORE_USERS_CSS_CLASS}\" ref=\"moreUsersLink\">`,\n\t\t\t\t'#COUNT#': countOfViewers - 1,\n\t\t\t\t'#LINK_END#': '</span>',\n\t\t\t});\n\t\t},\n\t\tonClick(event: PointerEvent)\n\t\t{\n\t\t\tif (!event.target.matches(`.${MORE_USERS_CSS_CLASS}`))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.onMoreUsersClick();\n\t\t},\n\t\tonMoreUsersClick()\n\t\t{\n\t\t\tthis.additionalUsersLinkElement = document.querySelector(`.${MORE_USERS_CSS_CLASS}`);\n\t\t\tthis.showAdditionalUsers = true;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div @click=\"onClick\" class=\"bx-im-dialog-chat-status__container\">\n\t\t\t<div v-if=\"typingStatus\" class=\"bx-im-dialog-chat-status__content\">\n\t\t\t\t<div class=\"bx-im-dialog-chat-status__icon --typing\"></div>\n\t\t\t\t<div class=\"bx-im-dialog-chat-status__text\">{{ typingStatus }}</div>\n\t\t\t</div>\n\t\t\t<div v-else-if=\"readStatus\" class=\"bx-im-dialog-chat-status__content\">\n\t\t\t\t<div class=\"bx-im-dialog-chat-status__icon --read\"></div>\n\t\t\t\t<div v-html=\"readStatus\" class=\"bx-im-dialog-chat-status__text\"></div>\n\t\t\t</div>\n\t\t\t<AdditionalUsers\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:show=\"showAdditionalUsers\"\n\t\t\t\t:bindElement=\"additionalUsersLinkElement || {}\"\n\t\t\t\t@close=\"showAdditionalUsers = false\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\nimport '../css/dialog-loader.css';\n\n// @vue/component\nexport const DialogLoader = {\n\tname: 'DialogLoader',\n\tprops:\n\t{\n\t\tfullHeight: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-dialog-loader__container\" :class=\"{'--full-height': fullHeight}\">\n\t\t\t<div class=\"bx-im-dialog-loader__spinner\"></div>\n\t\t\t<div class=\"bx-im-dialog-loader__text\">{{ loc('IM_DIALOG_CHAT_LOADER_TEXT') }}</div>\n\t\t</div>\n\t`,\n};\n","import { Utils } from 'im.v2.lib.utils';\nimport { Core } from 'im.v2.application.core';\nimport { MessageComponent } from 'im.v2.const';\nimport { SmileManager } from 'im.v2.lib.smile-manager';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { ImModelMessage } from 'im.v2.model';\n\nconst serverComponentList = new Set([\n\tMessageComponent.unsupported,\n\tMessageComponent.chatCreation,\n\tMessageComponent.ownChatCreation,\n\tMessageComponent.conferenceCreation,\n\tMessageComponent.callInvite,\n\tMessageComponent.copilotCreation,\n\tMessageComponent.copilotMessage,\n\tMessageComponent.supportVote,\n\tMessageComponent.supportSessionNumber,\n]);\n\nexport class MessageComponentManager\n{\n\t#message: ImModelMessage;\n\t#store: Store;\n\n\tconstructor(message: ImModelMessage)\n\t{\n\t\tthis.#message = message;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tgetName(): $Values<typeof MessageComponent>\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn MessageComponent.deleted;\n\t\t}\n\n\t\tif (this.#isServerComponent())\n\t\t{\n\t\t\treturn this.#message.componentId;\n\t\t}\n\n\t\tif (this.#isSystemMessage())\n\t\t{\n\t\t\treturn MessageComponent.system;\n\t\t}\n\n\t\tif (this.#hasFiles())\n\t\t{\n\t\t\treturn MessageComponent.file;\n\t\t}\n\n\t\tif (this.#isEmojiOnly() || this.#hasSmilesOnly())\n\t\t{\n\t\t\treturn MessageComponent.smile;\n\t\t}\n\n\t\treturn MessageComponent.default;\n\t}\n\n\t#isServerComponent(): boolean\n\t{\n\t\treturn serverComponentList.has(this.#message.componentId);\n\t}\n\n\t#hasFiles(): boolean\n\t{\n\t\treturn this.#message.files.length > 0;\n\t}\n\n\t#hasText(): boolean\n\t{\n\t\treturn this.#message.text.length > 0;\n\t}\n\n\t#hasAttach(): boolean\n\t{\n\t\treturn this.#message.attach.length > 0;\n\t}\n\n\t#isEmptyMessage(): boolean\n\t{\n\t\treturn !this.#hasText() && !this.#hasFiles() && !this.#hasAttach();\n\t}\n\n\t#isDeletedMessage(): boolean\n\t{\n\t\treturn this.#message.isDeleted || this.#isEmptyMessage();\n\t}\n\n\t#isSystemMessage(): boolean\n\t{\n\t\treturn this.#message.authorId === 0;\n\t}\n\n\t#isEmojiOnly(): boolean\n\t{\n\t\tif (this.#message.replyId > 0)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#isForward())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.#hasOnlyText())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Utils.text.isEmojiOnly(this.#message.text);\n\t}\n\n\t#hasSmilesOnly(): boolean\n\t{\n\t\tif (this.#message.replyId > 0)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#isForward())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.#hasOnlyText())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// todo: need to sync with getSmileRatio in lib/parser/src/functions/smile.js\n\t\tconst smileManager = SmileManager.getInstance();\n\t\tconst smiles = smileManager.smileList?.smiles ?? [];\n\t\tconst sortedSmiles = [...smiles].sort((a, b) => {\n\t\t\treturn b.typing.localeCompare(a.typing);\n\t\t});\n\t\tconst pattern = sortedSmiles.map((smile) => {\n\t\t\treturn Utils.text.escapeRegex(smile.typing);\n\t\t}).join('|');\n\n\t\tconst replacedText = this.#message.text.replaceAll(new RegExp(pattern, 'g'), '');\n\t\tconst hasOnlySmiles = replacedText.trim().length === 0;\n\n\t\tconst matchOnlySmiles = new RegExp(`(?:(?:${pattern})\\\\s*){4,}`);\n\n\t\treturn hasOnlySmiles && !matchOnlySmiles.test(this.#message.text);\n\t}\n\n\t#hasOnlyText(): boolean\n\t{\n\t\tif (!this.#hasText())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !this.#hasFiles() && !this.#hasAttach();\n\t}\n\n\t#isForward(): boolean\n\t{\n\t\treturn this.#store.getters['messages/isForward'](this.#message.id);\n\t}\n}\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Messenger } from 'im.public';\nimport { BaseMenu } from 'im.v2.lib.menu';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { EventType, ChatActionType, ChatType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { showKickUserConfirm } from 'im.v2.lib.confirm';\nimport { ChatService } from 'im.v2.provider.service';\n\nimport type { ImModelUser, ImModelChat } from 'im.v2.model';\nimport type { MenuItem } from 'im.v2.lib.menu';\n\ntype AvatarMenuContext = {\n\tuser: ImModelUser,\n\tdialog: ImModelChat\n};\n\nexport class AvatarMenu extends BaseMenu\n{\n\tcontext: AvatarMenuContext;\n\tpermissionManager: PermissionManager;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.id = 'bx-im-avatar-context-menu';\n\t\tthis.permissionManager = PermissionManager.getInstance();\n\t}\n\n\tgetMenuOptions(): Object\n\t{\n\t\treturn {\n\t\t\t...super.getMenuOptions(),\n\t\t\tclassName: this.getMenuClassName(),\n\t\t\tangle: true,\n\t\t\toffsetLeft: 21,\n\t\t};\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getMentionItem(),\n\t\t\tthis.getSendItem(),\n\t\t\tthis.getProfileItem(),\n\t\t\tthis.getKickItem(),\n\t\t];\n\t}\n\n\tgetMentionItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_MENTION_2'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.insertMention, {\n\t\t\t\t\tmentionText: this.context.user.name,\n\t\t\t\t\tmentionReplacement: Utils.text.getMentionBbCode(this.context.user.id, this.context.user.name),\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetSendItem(): ?MenuItem\n\t{\n\t\tif (this.context.dialog.type === ChatType.user)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_SEND_MESSAGE'),\n\t\t\tonclick: () => {\n\t\t\t\tMessenger.openChat(this.context.user.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetProfileItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_OPEN_PROFILE'),\n\t\t\thref: Utils.user.getProfileLink(this.context.user.id),\n\t\t\tonclick: () => {\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetKickItem(): ?MenuItem\n\t{\n\t\tconst canKick = this.permissionManager.canPerformAction(ChatActionType.kick, this.context.dialog.dialogId);\n\t\tif (!canKick)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_KICK'),\n\t\t\tonclick: async () => {\n\t\t\t\tthis.menuInstance.close();\n\t\t\t\tconst userChoice = await showKickUserConfirm();\n\t\t\t\tif (userChoice === true)\n\t\t\t\t{\n\t\t\t\t\tconst chatService = new ChatService();\n\t\t\t\t\tchatService.kickUserFromChat(this.context.dialog.dialogId, this.context.user.id);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n}\n","import { Loc, Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { BaseMenu } from 'im.v2.lib.menu';\nimport { Parser } from 'im.v2.lib.parser';\nimport { EntityCreator } from 'im.v2.lib.entity-creator';\nimport { MessageService, DiskService } from 'im.v2.provider.service';\nimport { EventType, PlacementType } from 'im.v2.const';\nimport { MarketManager } from 'im.v2.lib.market';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport '../css/message-menu.css';\n\nimport 'ui.notification';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\nimport type { ImModelMessage, ImModelChat, ImModelFile } from 'im.v2.model';\n\nexport class MessageMenu extends BaseMenu\n{\n\tcontext: ImModelMessage & {dialogId: string};\n\tdiskService: DiskService;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.id = 'bx-im-message-context-menu';\n\t\tthis.diskService = new DiskService();\n\t\tthis.marketManager = MarketManager.getInstance();\n\t}\n\n\tgetMenuOptions(): Object\n\t{\n\t\treturn {\n\t\t\t...super.getMenuOptions(),\n\t\t\tclassName: this.getMenuClassName(),\n\t\t\tangle: true,\n\t\t\toffsetLeft: 11,\n\t\t};\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\tthis.getPinItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getCreateItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDisk(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t];\n\t}\n\n\tgetReplyItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_REPLY'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.replyMessage, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetForwardItem(): ?MenuItem\n\t{\n\t\tif (this.#isDeletedMessage() || Type.isString(this.context.id))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_FORWARD'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.dialog.showForwardPopup, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyItem(): ?MenuItem\n\t{\n\t\tif (this.context.text.trim().length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY'),\n\t\t\tonclick: () => {\n\t\t\t\tconst textToCopy = Parser.prepareCopy(this.context);\n\t\t\t\tif (BX.clipboard?.copy(textToCopy))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyFileItem(): ?MenuItem\n\t{\n\t\tif (this.context.files.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_FILE'),\n\t\t\tonclick: () => {\n\t\t\t\tconst textToCopy = Parser.prepareCopyFile(this.context);\n\t\t\t\tif (BX.clipboard?.copy(textToCopy))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_FILE_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetPinItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isPinned = this.store.getters['messages/pin/isPinned']({\n\t\t\tchatId: this.context.chatId,\n\t\t\tmessageId: this.context.id,\n\t\t});\n\n\t\treturn {\n\t\t\ttext: isPinned ? Loc.getMessage('IM_DIALOG_CHAT_MENU_UNPIN') : Loc.getMessage('IM_DIALOG_CHAT_MENU_PIN'),\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tif (isPinned)\n\t\t\t\t{\n\t\t\t\t\tmessageService.unpinMessage(this.context.chatId, this.context.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmessageService.pinMessage(this.context.chatId, this.context.id);\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetFavoriteItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isInFavorite = this.store.getters['sidebar/favorites/isFavoriteMessage'](this.context.chatId, this.context.id);\n\n\t\tconst menuItemText = isInFavorite\n\t\t\t? Loc.getMessage('IM_DIALOG_CHAT_MENU_REMOVE_FROM_SAVED')\n\t\t\t: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE')\n\t\t;\n\n\t\treturn {\n\t\t\ttext: menuItemText,\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tif (isInFavorite)\n\t\t\t\t{\n\t\t\t\t\tmessageService.removeMessageFromFavorite(this.context.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmessageService.addMessageToFavorite(this.context.id);\n\t\t\t\t}\n\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMarkItem(): ?MenuItem\n\t{\n\t\tconst canUnread = this.context.viewed && !this.#isOwnMessage();\n\n\t\tconst dialog: ImModelChat = this.store.getters['chats/getByChatId'](this.context.chatId);\n\t\tconst isMarked = this.context.id === dialog.markedId;\n\t\tif (!canUnread || isMarked)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_MARK'),\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tmessageService.markMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCreateItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE'),\n\t\t\titems: [\n\t\t\t\tthis.getCreateTaskItem(),\n\t\t\t\tthis.getCreateMeetingItem(),\n\t\t\t\t...this.getMarketItems(),\n\t\t\t],\n\t\t};\n\t}\n\n\tgetCreateTaskItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE_TASK'),\n\t\t\tonclick: () => {\n\t\t\t\tconst entityCreator = new EntityCreator(this.context.chatId);\n\t\t\t\tvoid entityCreator.createTaskForMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCreateMeetingItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE_MEETING'),\n\t\t\tonclick: () => {\n\t\t\t\tconst entityCreator = new EntityCreator(this.context.chatId);\n\t\t\t\tvoid entityCreator.createMeetingForMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetEditItem(): ?MenuItem\n\t{\n\t\tif (!this.#isOwnMessage() || this.#isDeletedMessage() || this.#isForwardedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_EDIT'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.editMessage, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetDeleteItem(): ?MenuItem\n\t{\n\t\tif (!this.#isOwnMessage() || this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_DELETE'),\n\t\t\tclassName: 'menu-popup-no-icon bx-im-dialog-chat__message-menu_delete',\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tmessageService.deleteMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMarketItems(): MenuItem[]\n\t{\n\t\tconst { dialogId, id } = this.context;\n\t\tconst placements = this.marketManager.getAvailablePlacementsByType(PlacementType.contextMenu, dialogId);\n\t\tconst marketMenuItem = [];\n\t\tif (placements.length > 0)\n\t\t{\n\t\t\tmarketMenuItem.push(this.getDelimiter());\n\t\t}\n\n\t\tconst context = { messageId: id, dialogId };\n\n\t\tplacements.forEach((placement) => {\n\t\t\tmarketMenuItem.push({\n\t\t\t\ttext: placement.title,\n\t\t\t\tonclick: () => {\n\t\t\t\t\tMarketManager.openSlider(placement, context);\n\t\t\t\t\tthis.menuInstance.close();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\t// (10 items + 1 delimiter), because we don't want to show long context menu.\n\t\tconst itemLimit = 11;\n\n\t\treturn marketMenuItem.slice(0, itemLimit);\n\t}\n\n\tgetDownloadFileItem(): ?MenuItem\n\t{\n\t\tconst file = this.#getMessageFile();\n\t\tif (!file)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\thtml: Utils.file.createDownloadLink(\n\t\t\t\tLoc.getMessage('IM_DIALOG_CHAT_MENU_DOWNLOAD_FILE'),\n\t\t\t\tfile.urlDownload,\n\t\t\t\tfile.name,\n\t\t\t),\n\t\t\tonclick: function() {\n\t\t\t\tthis.menuInstance.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\tgetSaveToDisk(): ?MenuItem\n\t{\n\t\tconst file = this.#getMessageFile();\n\t\tif (!file)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ON_DISK'),\n\t\t\tonclick: function() {\n\t\t\t\tvoid this.diskService.save(file.id).then(() => {\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ON_DISK_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\tgetDelimiter(): MenuItem\n\t{\n\t\treturn {\n\t\t\tdelimiter: true,\n\t\t};\n\t}\n\n\t#isOwnMessage(): boolean\n\t{\n\t\treturn this.context.authorId === Core.getUserId();\n\t}\n\n\t#isDeletedMessage(): boolean\n\t{\n\t\treturn this.context.isDeleted;\n\t}\n\n\t#getMessageFile(): ?ImModelFile\n\t{\n\t\tif (this.context.files.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\t// for now, we have only one file in one message. In the future we need to change this logic.\n\t\treturn this.store.getters['files/get'](this.context.files[0]);\n\t}\n\n\t#isForwardedMessage(): boolean\n\t{\n\t\treturn Type.isStringFilled(this.context.forward.id);\n\t}\n}\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const DateGroupTitle = {\n\tprops:\n\t{\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-date-group-title__container\">\n\t\t\t<div class=\"bx-im-message-list-date-group-title__text\">{{ title }}</div>\n\t\t</div>\n\t`,\n};\n","import { DialogBlockType as BlockType } from 'im.v2.const';\n\nimport { DateGroupTitle } from './date-group-title';\n\nimport { type FormattedCollectionItem } from '../../classes/collection-manager';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const DateGroup = {\n\tname: 'DateGroup',\n\tcomponents: { DateGroupTitle },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tBlockType: () => BlockType,\n\t\tdateGroup(): FormattedCollectionItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-date-group__container\">\n\t\t\t<DateGroupTitle :title=\"dateGroup.date.title\" />\n\t\t\t<template v-for=\"dateGroupItem in dateGroup.items\" >\n\t\t\t\t<slot\n\t\t\t\t\tname=\"dateGroupItem\"\n\t\t\t\t\t:dateGroupItem=\"dateGroupItem\"\n\t\t\t\t\t:isMarkedBlock=\"dateGroupItem.type === BlockType.markedMessages\"\n\t\t\t\t\t:isNewMessagesBlock=\"dateGroupItem.type === BlockType.newMessages\"\n\t\t\t\t\t:isAuthorBlock=\"dateGroupItem.type === BlockType.authorGroup\"\n\t\t\t\t></slot>\n\t\t\t</template>\n\t\t</div>\n\t`,\n};\n","import { Avatar, AvatarSize } from 'im.v2.component.elements';\n\nimport type { JsonObject } from 'main.core';\n\nimport type { AuthorGroupItem } from '../../classes/collection-manager';\n\n// @vue/component\nexport const AuthorGroup = {\n\tname: 'AuthorGroup',\n\tcomponents: { Avatar },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['avatarClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tauthorGroup(): AuthorGroupItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonAvatarClick(event: PointerEvent): void\n\t\t{\n\t\t\tthis.$emit('avatarClick', {\n\t\t\t\tdialogId: this.authorGroup.avatar.avatarId,\n\t\t\t\t$event: event,\n\t\t\t});\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-author-group__container\" :class=\"'--' + authorGroup.messageType\">\n\t\t\t<div v-if=\"authorGroup.avatar.isNeeded\" class=\"bx-im-message-list-author-group__avatar\">\n\t\t\t\t<Avatar\n\t\t\t\t\t:dialogId=\"authorGroup.avatar.avatarId\"\n\t\t\t\t\t:size=\"AvatarSize.L\"\n\t\t\t\t\t:withStatus=\"false\"\n\t\t\t\t\t@click=\"onAvatarClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-message-list__content\">\n\t\t\t\t<template v-for=\"(message, index) in authorGroup.items\">\n\t\t\t\t\t<slot name=\"message\" :message=\"message\" :index=\"index\"></slot>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const NewMessagesBlock = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-new-message__container\">\n\t\t\t<div class=\"bx-im-message-list-new-message__text\">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_NEW_MESSAGES_2') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const MarkedMessagesBlock = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-new-message__container\">\n\t\t\t<div class=\"bx-im-message-list-new-message__text\">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_MARKED_MESSAGES') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nimport '../css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\n\nconst defaultMessages = [\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_1'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_2'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_3'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_4'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_5'),\n];\n\n// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdefaultMessages: () => defaultMessages,\n\t},\n\tmethods:\n\t{\n\t\tonMessageClick(text: string): void\n\t\t{\n\t\t\tEventEmitter.emit(EventType.textarea.insertText, { text });\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-empty-state__container\">\n\t\t\t<div class=\"bx-im-message-list-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__title\">{{ loc('IM_MESSAGE_LIST_EMPTY_STATE_TITLE') }}</div>\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__action-list\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for=\"(message, index) in defaultMessages\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t@click=\"onMessageClick(message)\"\n\t\t\t\t\t\tclass=\"bx-im-message-list-empty-state__action-list_item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ message }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { DialogBlockType as BlockType, MessageType, Settings, DialogAlignment } from 'im.v2.const';\nimport { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport type { ImModelMessage, ImModelChat } from 'im.v2.model';\n\nexport type FormattedCollectionItem = {\n\ttype: BlockType.dateGroup,\n\tdate: {\n\t\tid: string,\n\t\ttitle: string\n\t},\n\titems: Array<AuthorGroupItem | NewMessagesItem | MarkedMessageItem>\n};\n\nexport type AuthorGroupItem = {\n\ttype: BlockType.authorGroup,\n\tuserId: number,\n\tmessageType: MessageType.opponent | MessageType.self | MessageType.system,\n\tavatar: {\n\t\tisNeeded: boolean,\n\t\tavatarId: string\n\t},\n\titems: ImModelMessage[]\n};\n\nexport type NewMessagesItem = {\n\ttype: BlockType.newMessages\n};\n\nexport type MarkedMessageItem = {\n\ttype: BlockType.markedMessages\n};\n\nexport class CollectionManager\n{\n\tstore: Object;\n\tdialogId: number;\n\tfirstIteration: boolean = true;\n\tinitialLastReadMessage: boolean;\n\tinitialMarkedId: boolean;\n\tcachedDateGroups: {\n\t\tid: number,\n\t\ttitle: string\n\t} = {};\n\n\tconstructor(dialogId)\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.dialogId = dialogId;\n\t}\n\n\tformatMessageCollection(messageCollection: ImModelMessage[]): FormattedCollectionItem[]\n\t{\n\t\tconst dateGroups = {};\n\t\tconst collection = [];\n\t\tlet lastDateItems = null;\n\t\tlet lastAuthorId = null;\n\t\tlet lastAuthorItems = null;\n\n\t\tconst dialog: ImModelChat = this.store.getters['chats/get'](this.dialogId);\n\t\tconst { markedId, inited } = dialog;\n\t\tlet markInserted = false;\n\t\tconst lastReadId = this.store.getters['chats/getLastReadId'](this.dialogId);\n\n\t\tif (this.firstIteration)\n\t\t{\n\t\t\tthis.initialLastReadMessage = lastReadId;\n\t\t\tthis.initialMarkedId = markedId;\n\t\t}\n\n\t\tif (markedId !== this.initialMarkedId && markedId !== 0)\n\t\t{\n\t\t\tthis.initialMarkedId = markedId;\n\t\t\tthis.initialLastReadMessage = null;\n\t\t}\n\n\t\tmessageCollection.forEach((message: ImModelMessage, index) => {\n\t\t\tconst dateGroup = this.getDateGroup(message.date);\n\t\t\t// new date = new date group + new author group\n\t\t\tif (!dateGroups[dateGroup.title])\n\t\t\t{\n\t\t\t\tdateGroups[dateGroup.title] = dateGroup.id;\n\t\t\t\tlastDateItems = [];\n\t\t\t\tcollection.push({\n\t\t\t\t\ttype: BlockType.dateGroup,\n\t\t\t\t\tdate: dateGroup,\n\t\t\t\t\titems: lastDateItems\n\t\t\t\t});\n\t\t\t\tlastAuthorId = null;\n\t\t\t}\n\n\t\t\t// marked messages\n\t\t\tif (message.id === this.initialMarkedId)\n\t\t\t{\n\t\t\t\tlastDateItems.push({\n\t\t\t\t\ttype: BlockType.markedMessages\n\t\t\t\t});\n\t\t\t\tlastAuthorId = null;\n\t\t\t\tmarkInserted = true;\n\t\t\t}\n\n\t\t\t// new author = new author group\n\t\t\tif (message.authorId !== lastAuthorId)\n\t\t\t{\n\t\t\t\tlastAuthorId = message.authorId;\n\t\t\t\tlastAuthorItems = [];\n\n\t\t\t\tlastDateItems.push({\n\t\t\t\t\ttype: BlockType.authorGroup,\n\t\t\t\t\tuserId: message.authorId,\n\t\t\t\t\tavatar: this.getAvatarConfig(message),\n\t\t\t\t\tmessageType: this.getMessageType(message),\n\t\t\t\t\titems: lastAuthorItems\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// add current message to last active author group\n\t\t\tlastAuthorItems.push(message);\n\n\t\t\t// new messages block\n\t\t\tconst isLastMessage = index === messageCollection.length - 1;\n\t\t\tif (!markInserted && !isLastMessage && message.id === this.initialLastReadMessage)\n\t\t\t{\n\t\t\t\tlastDateItems.push({\n\t\t\t\t\ttype: BlockType.newMessages\n\t\t\t\t});\n\t\t\t\tlastAuthorId = null;\n\t\t\t}\n\t\t});\n\n\t\tif (inited)\n\t\t{\n\t\t\tthis.firstIteration = false;\n\t\t}\n\n\n\t\treturn collection;\n\t}\n\n\tgetDateGroup(date: Date): {id: number, title: string}\n\t{\n\t\tconst INDEX_BETWEEN_DATE_AND_TIME = 10;\n\t\t// 2022-10-25T14:58:44.000Z => 2022-10-25\n\t\tconst shortDate = date.toJSON().slice(0, INDEX_BETWEEN_DATE_AND_TIME);\n\t\tif (this.cachedDateGroups[shortDate])\n\t\t{\n\t\t\treturn this.cachedDateGroups[shortDate];\n\t\t}\n\n\t\tthis.cachedDateGroups[shortDate] = {\n\t\t\tid: shortDate,\n\t\t\ttitle: DateFormatter.formatByTemplate(date, DateTemplate.dateGroup)\n\t\t};\n\n\t\treturn this.cachedDateGroups[shortDate];\n\t}\n\n\tgetAvatarConfig(message: ImModelMessage): {isNeeded: boolean, avatarId: string}\n\t{\n\t\tconst messageType = this.getMessageType(message);\n\t\tconst isSystem = messageType === MessageType.system;\n\t\tconst isSelf = messageType === MessageType.self;\n\n\t\tconst alignment = this.store.getters['application/settings/get'](Settings.appearance.alignment);\n\t\tlet isNeeded = true;\n\t\tif (alignment === DialogAlignment.left)\n\t\t{\n\t\t\tisNeeded = !isSystem;\n\t\t}\n\t\telse if (alignment === DialogAlignment.center)\n\t\t{\n\t\t\tisNeeded = !isSelf && !isSystem;\n\t\t}\n\n\t\treturn {\n\t\t\tisNeeded,\n\t\t\tavatarId: message.authorId.toString(),\n\t\t};\n\t}\n\n\tgetMessageType(message: ImModelMessage): string\n\t{\n\t\tif (!message.authorId)\n\t\t{\n\t\t\treturn MessageType.system;\n\t\t}\n\n\t\tif (message.authorId === Core.getUserId())\n\t\t{\n\t\t\treturn MessageType.self;\n\t\t}\n\n\t\treturn MessageType.opponent;\n\t}\n}\n","import { FileMessage } from 'im.v2.component.message.file';\nimport { DefaultMessage } from 'im.v2.component.message.default';\nimport { CallInviteMessage } from 'im.v2.component.message.call-invite';\nimport { DeletedMessage } from 'im.v2.component.message.deleted';\nimport { UnsupportedMessage } from 'im.v2.component.message.unsupported';\nimport { SmileMessage } from 'im.v2.component.message.smile';\nimport { SystemMessage } from 'im.v2.component.message.system';\nimport { ChatCreationMessage } from 'im.v2.component.message.chat-creation';\nimport { ChatCopilotCreationMessage } from 'im.v2.component.message.copilot.creation';\nimport { CopilotMessage } from 'im.v2.component.message.copilot.answer';\nimport { SupportVoteMessage } from 'im.v2.component.message.support.vote';\nimport { SupportSessionNumberMessage } from 'im.v2.component.message.support.session-number';\nimport { ConferenceCreationMessage } from 'im.v2.component.message.conference-creation';\nimport { OwnChatCreationMessage } from 'im.v2.component.message.own-chat-creation';\n\nexport const messageComponents = {\n\tDefaultMessage,\n\tFileMessage,\n\tSmileMessage,\n\tCallInviteMessage,\n\tDeletedMessage,\n\tSystemMessage,\n\tUnsupportedMessage,\n\tChatCreationMessage,\n\tOwnChatCreationMessage,\n\tChatCopilotCreationMessage,\n\tCopilotMessage,\n\tSupportVoteMessage,\n\tSupportSessionNumberMessage,\n\tConferenceCreationMessage,\n};\n","import { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, EventType, MessageComponent } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DialogStatus } from './components/dialog-status';\nimport { DialogLoader } from './components/dialog-loader';\nimport { MessageComponentManager } from './classes/message-component-manager';\nimport { AvatarMenu } from './classes/avatar-menu';\nimport { MessageMenu } from './classes/message-menu';\n\nimport { DateGroup } from './components/block/date-group';\nimport { AuthorGroup } from './components/block/author-group';\nimport { NewMessagesBlock } from './components/block/new-messages';\nimport { MarkedMessagesBlock } from './components/block/marked-messages';\nimport { EmptyState } from './components/empty-state';\nimport { CollectionManager, type FormattedCollectionItem } from './classes/collection-manager';\nimport { messageComponents } from './utils/message-components';\n\nimport './css/message-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { BitrixVueComponentProps } from 'ui.vue3';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const MessageList = {\n\tname: 'MessageList',\n\tdirectives: {\n\t\t'message-observer': {\n\t\t\tmounted(element, binding)\n\t\t\t{\n\t\t\t\tbinding.instance.observer.observeMessage(element);\n\t\t\t},\n\t\t\tbeforeUnmount(element, binding)\n\t\t\t{\n\t\t\t\tbinding.instance.observer.unobserveMessage(element);\n\t\t\t},\n\t\t},\n\t},\n\tcomponents: {\n\t\tDateGroup,\n\t\tAuthorGroup,\n\t\tNewMessagesBlock,\n\t\tMarkedMessagesBlock,\n\t\tDialogStatus,\n\t\tDialogLoader,\n\t\tEmptyState,\n\t\t...messageComponents,\n\t},\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tmessages: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tobserver: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['showQuoteButton'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tmessageMenuIsActiveForId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tmessageCollection(): ImModelMessage[]\n\t\t{\n\t\t\treturn this.messages;\n\t\t},\n\t\tformattedCollection(): FormattedCollectionItem[]\n\t\t{\n\t\t\tif (!this.dialogInited && this.messageCollection.length === 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn this.getCollectionManager().formatMessageCollection(this.messageCollection);\n\t\t},\n\t\tnoMessages(): boolean\n\t\t{\n\t\t\treturn this.formattedCollection.length === 0;\n\t\t},\n\t\tshowDialogStatus(): boolean\n\t\t{\n\t\t\treturn this.messageCollection.some((message) => {\n\t\t\t\treturn message.id === this.dialog.lastMessageId;\n\t\t\t});\n\t\t},\n\t\tstatusComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\treturn DialogStatus;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.initContextMenu();\n\t\tthis.initCollectionManager();\n\t},\n\tmounted()\n\t{\n\t\tthis.subscribeToEvents();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.unsubscribeFromEvents();\n\t},\n\tmethods:\n\t{\n\t\tsubscribeToEvents(): void\n\t\t{\n\t\t\tEventEmitter.subscribe(EventType.dialog.onClickMessageContextMenu, this.onMessageContextMenuClick);\n\t\t},\n\t\tunsubscribeFromEvents(): void\n\t\t{\n\t\t\tEventEmitter.unsubscribe(EventType.dialog.onClickMessageContextMenu, this.onMessageContextMenuClick);\n\t\t},\n\t\tinitCollectionManager()\n\t\t{\n\t\t\tthis.getCollectionManager();\n\t\t},\n\t\tinitContextMenu()\n\t\t{\n\t\t\tthis.messageMenu = new MessageMenu();\n\t\t\tthis.messageMenu.subscribe(MessageMenu.events.onCloseMenu, () => {\n\t\t\t\tthis.messageMenuIsActiveForId = 0;\n\t\t\t});\n\n\t\t\tthis.avatarMenu = new AvatarMenu();\n\t\t},\n\t\tonAvatarClick(params: { dialogId: string, $event: PointerEvent })\n\t\t{\n\t\t\tconst { dialogId, $event: event } = params;\n\t\t\tconst user = this.$store.getters['users/get'](dialogId);\n\t\t\tconst userId = Number.parseInt(dialogId, 10);\n\t\t\tif (!user || Core.getUserId() === userId)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.key.isAltOrOption(event))\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.textarea.insertMention, {\n\t\t\t\t\tmentionText: user.name,\n\t\t\t\t\tmentionReplacement: Utils.text.getMentionBbCode(user.id, user.name),\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.avatarMenu.openMenu({ user, dialog: this.dialog }, event.currentTarget);\n\t\t},\n\t\tonMessageContextMenuClick(eventData: BaseEvent<{ message: ImModelMessage, event: PointerEvent }>)\n\t\t{\n\t\t\tconst { message, event } = eventData.getData();\n\n\t\t\tconst context = { dialogId: this.dialogId, ...message };\n\t\t\tthis.messageMenu.openMenu(context, event.currentTarget);\n\t\t\tthis.messageMenuIsActiveForId = message.id;\n\t\t},\n\t\tasync onMessageMouseUp(message: ImModelMessage, event: MouseEvent)\n\t\t{\n\t\t\tawait Utils.browser.waitForSelectionToUpdate();\n\t\t\tconst selection = window.getSelection().toString().trim();\n\t\t\tif (selection.length === 0 || this.isGuest)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$emit('showQuoteButton', message, event);\n\t\t},\n\t\tgetMessageComponentName(message: ImModelMessage): $Values<typeof MessageComponent>\n\t\t{\n\t\t\treturn (new MessageComponentManager(message)).getName();\n\t\t},\n\t\tgetCollectionManager(): CollectionManager\n\t\t{\n\t\t\tif (!this.collectionManager)\n\t\t\t{\n\t\t\t\tthis.collectionManager = new CollectionManager(this.dialogId);\n\t\t\t}\n\n\t\t\treturn this.collectionManager;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list__container\">\n\t\t\t<DialogLoader v-if=\"!dialogInited\" :fullHeight=\"noMessages\" />\n\t\t\t<EmptyState v-else-if=\"noMessages && isUser\" />\n\t\t\t<DateGroup v-for=\"dateGroup in formattedCollection\" :key=\"dateGroup.date.id\" :item=\"dateGroup\">\n\t\t\t\t<!-- Slot for every date group item -->\n\t\t\t\t<template #dateGroupItem=\"{ dateGroupItem, isMarkedBlock, isNewMessagesBlock, isAuthorBlock }\">\n\t\t\t\t\t<MarkedMessagesBlock v-if=\"isMarkedBlock\" data-id=\"newMessages\" />\n\t\t\t\t\t<NewMessagesBlock v-else-if=\"isNewMessagesBlock\" data-id=\"newMessages\" />\n\t\t\t\t\t<AuthorGroup v-else-if=\"isAuthorBlock\" :item=\"dateGroupItem\" @avatarClick=\"onAvatarClick\">\n\t\t\t\t\t\t<!-- Slot for every message -->\n\t\t\t\t\t\t<template #message=\"{ message, index }\">\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\tv-message-observer\n\t\t\t\t\t\t\t\t:is=\"getMessageComponentName(message)\"\n\t\t\t\t\t\t\t\t:withTitle=\"index === 0\"\n\t\t\t\t\t\t\t\t:item=\"message\"\n\t\t\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t\t\t:key=\"message.id\"\n\t\t\t\t\t\t\t\t:menuIsActiveForId=\"messageMenuIsActiveForId\"\n\t\t\t\t\t\t\t\t:data-viewed=\"message.viewed\"\n\t\t\t\t\t\t\t\t@mouseup=\"onMessageMouseUp(message, $event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</AuthorGroup>\n\t\t\t\t</template>\n\t\t\t</DateGroup>\n\t\t\t<component :is=\"statusComponent\" v-if=\"showDialogStatus\" :dialogId=\"dialogId\" />\n\t\t</div>\n\t`,\n};\n"],"names":["UserService","loadReadUsers","messageId","users","Logger","warn","response","Core","getRestClient","callMethod","RestMethod","imV2ChatMessageTailViewers","id","catch","error","console","Error","data","userManager","UserManager","setUsersToModel","Object","values","map","user","AdditionalUsers","components","UserListPopup","props","dialogId","type","String","required","show","Boolean","bindElement","emits","showPopup","loadingAdditionalUsers","additionalUsers","computed","dialog","$store","getters","watch","newValue","oldValue","loadUsers","methods","userIds","getUserService","lastMessageId","prepareAdditionalUsers","onPopupClose","$emit","firstViewerId","lastMessageViews","firstViewer","userId","filter","getUserId","userService","template","TYPING_USERS_COUNT","MORE_USERS_CSS_CLASS","DialogStatus","showAdditionalUsers","additionalUsersLinkElement","isUser","ChatType","isChat","typingStatus","inited","writingList","length","firstTypingUsers","slice","text","element","userName","join","remainingUsersCount","loc","readStatus","countOfViewers","formatUserViewStatus","formatChatViewStatus","date","DateFormatter","formatByTemplate","DateTemplate","messageReadStatus","Text","encode","onClick","event","target","matches","onMoreUsersClick","document","querySelector","phraseCode","replacements","$Bitrix","Loc","getMessage","DialogLoader","name","fullHeight","default","serverComponentList","Set","MessageComponent","unsupported","chatCreation","ownChatCreation","conferenceCreation","callInvite","copilotCreation","copilotMessage","supportVote","supportSessionNumber","MessageComponentManager","constructor","message","getStore","getName","deleted","componentId","system","file","smile","has","files","attach","isDeleted","authorId","replyId","Utils","isEmojiOnly","smileManager","SmileManager","getInstance","smiles","smileList","sortedSmiles","sort","a","b","typing","localeCompare","pattern","escapeRegex","replacedText","replaceAll","RegExp","hasOnlySmiles","trim","matchOnlySmiles","test","AvatarMenu","BaseMenu","permissionManager","PermissionManager","getMenuOptions","className","getMenuClassName","angle","offsetLeft","getMenuItems","getMentionItem","getSendItem","getProfileItem","getKickItem","onclick","EventEmitter","emit","EventType","textarea","insertMention","mentionText","context","mentionReplacement","getMentionBbCode","menuInstance","close","Messenger","openChat","href","getProfileLink","canKick","canPerformAction","ChatActionType","kick","userChoice","showKickUserConfirm","chatService","ChatService","kickUserFromChat","MessageMenu","diskService","DiskService","marketManager","MarketManager","getReplyItem","getCopyItem","getCopyFileItem","getPinItem","getForwardItem","getDelimiter","getMarkItem","getFavoriteItem","getCreateItem","getDownloadFileItem","getSaveToDisk","getEditItem","getDeleteItem","replyMessage","Type","isString","showForwardPopup","textToCopy","Parser","prepareCopy","BX","clipboard","copy","UI","Notification","Center","notify","content","prepareCopyFile","isPinned","store","chatId","messageService","MessageService","unpinMessage","pinMessage","isInFavorite","menuItemText","removeMessageFromFavorite","addMessageToFavorite","canUnread","viewed","isMarked","markedId","markMessage","items","getCreateTaskItem","getCreateMeetingItem","getMarketItems","entityCreator","EntityCreator","createTaskForMessage","createMeetingForMessage","editMessage","deleteMessage","placements","getAvailablePlacementsByType","PlacementType","contextMenu","marketMenuItem","push","forEach","placement","title","openSlider","itemLimit","html","createDownloadLink","urlDownload","bind","save","then","delimiter","isStringFilled","forward","DateGroupTitle","DateGroup","item","BlockType","dateGroup","AuthorGroup","Avatar","AvatarSize","authorGroup","onAvatarClick","avatar","avatarId","$event","NewMessagesBlock","MarkedMessagesBlock","defaultMessages","EmptyState","onMessageClick","insertText","CollectionManager","firstIteration","cachedDateGroups","formatMessageCollection","messageCollection","dateGroups","collection","lastDateItems","lastAuthorId","lastAuthorItems","markInserted","lastReadId","initialLastReadMessage","initialMarkedId","index","getDateGroup","markedMessages","getAvatarConfig","messageType","getMessageType","isLastMessage","newMessages","INDEX_BETWEEN_DATE_AND_TIME","shortDate","toJSON","isSystem","MessageType","isSelf","self","alignment","Settings","appearance","isNeeded","DialogAlignment","left","center","toString","opponent","messageComponents","DefaultMessage","FileMessage","SmileMessage","CallInviteMessage","DeletedMessage","SystemMessage","UnsupportedMessage","ChatCreationMessage","OwnChatCreationMessage","ChatCopilotCreationMessage","CopilotMessage","SupportVoteMessage","SupportSessionNumberMessage","ConferenceCreationMessage","MessageList","directives","mounted","binding","instance","observer","observeMessage","beforeUnmount","unobserveMessage","messages","Array","messageMenuIsActiveForId","dialogInited","formattedCollection","getCollectionManager","noMessages","showDialogStatus","some","statusComponent","created","initContextMenu","initCollectionManager","subscribeToEvents","unsubscribeFromEvents","subscribe","onClickMessageContextMenu","onMessageContextMenuClick","unsubscribe","messageMenu","events","onCloseMenu","avatarMenu","params","Number","parseInt","key","isAltOrOption","openMenu","currentTarget","eventData","getData","onMessageMouseUp","browser","waitForSelectionToUpdate","selection","window","getSelection","isGuest","getMessageComponentName","collectionManager"],"mappings":";;;;;;;CAKO,MAAMA,WAAW,CACxB;GACC,MAAMC,aAAa,CAACC,SAAS,EAC7B;KACC,IAAIC,KAAK,GAAG,EAAE;KACdC,uBAAM,CAACC,IAAI,CAAC,oCAAoC,EAAEH,SAAS,CAAC;KAC5D,MAAMI,QAAQ,GAAG,MAAMC,2BAAI,CAACC,aAAa,EAAE,CAACC,UAAU,CAACC,sBAAU,CAACC,0BAA0B,EAAE;OAC7FC,EAAE,EAAEV;MACJ,CAAC,CACAW,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;OAChE,MAAM,IAAIE,KAAK,CAACF,KAAK,CAAC;MACtB,CAAC;KACHX,KAAK,GAAGG,QAAQ,CAACW,IAAI,EAAE,CAACd,KAAK;KAC7B,MAAMe,WAAW,GAAG,IAAIC,0BAAW,EAAE;KACrC,MAAMD,WAAW,CAACE,eAAe,CAACC,MAAM,CAACC,MAAM,CAACnB,KAAK,CAAC,CAAC;KAEvD,OAAOA,KAAK,CAACoB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,CAAC;;CAErC;;CCjBA;AACA,CAAO,MAAMa,eAAe,GAAG;GAC9BC,UAAU,EAAE;oBAAEC;IAAe;GAC7BC,KAAK,EAAE;KACNC,QAAQ,EAAE;OACTC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;MACV;KACDC,IAAI,EAAE;OACLH,IAAI,EAAEI,OAAO;OACbF,QAAQ,EAAE;MACV;KACDG,WAAW,EAAE;OACZL,IAAI,EAAET,MAAM;OACZW,QAAQ,EAAE;;IAEX;GACDI,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBnB,IAAI,GACJ;KACC,OAAO;OACNoB,SAAS,EAAE,KAAK;OAChBC,sBAAsB,EAAE,KAAK;OAC7BC,eAAe,EAAE;MACjB;IACD;GACDC,QAAQ,EACR;KACCC,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACd,QAAQ,EAAE,IAAI,CAAC;;IAE7D;GACDe,KAAK,EACL;KACCX,IAAI,CAACY,QAAQ,EAAEC,QAAQ,EACvB;OACC,IAAI,CAACA,QAAQ,IAAID,QAAQ,EACzB;SACC,IAAI,CAACR,SAAS,GAAG,IAAI;SACrB,IAAI,CAACU,SAAS,EAAE;;;IAGlB;GACDC,OAAO,EACP;KACC,MAAMD,SAAS,GACf;OACC,IAAI,CAACT,sBAAsB,GAAG,IAAI;OAClC,MAAMW,OAAO,GAAG,MAAM,IAAI,CAACC,cAAc,EAAE,CAACjD,aAAa,CAAC,IAAI,CAACwC,MAAM,CAACU,aAAa,CAAC,CAClFtC,KAAK,CAAC,MAAM;SACZ,IAAI,CAACyB,sBAAsB,GAAG,KAAK;QACnC,CAAC;OAEH,IAAI,CAACC,eAAe,GAAG,IAAI,CAACa,sBAAsB,CAACH,OAAO,CAAC;OAC3D,IAAI,CAACX,sBAAsB,GAAG,KAAK;MACnC;KACDe,YAAY,GACZ;OACC,IAAI,CAAChB,SAAS,GAAG,KAAK;OACtB,IAAI,CAACiB,KAAK,CAAC,OAAO,CAAC;MACnB;KACDF,sBAAsB,CAACH,OAAiB,EACxC;OACC,MAAMM,aAAa,GAAG,IAAI,CAACd,MAAM,CAACe,gBAAgB,CAACC,WAAW,CAACC,MAAM;OAErE,OAAOT,OAAO,CAACU,MAAM,CAAED,MAAM,IAAK;SACjC,OAAOA,MAAM,KAAKnD,2BAAI,CAACqD,SAAS,EAAE,IAAIF,MAAM,KAAKH,aAAa;QAC9D,CAAC;MACF;KACDL,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACW,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAI7D,WAAW,EAAE;;OAGrC,OAAO,IAAI,CAAC6D,WAAW;;IAExB;GACDC,QAAQ,EAAG;;;;;;;;;;;;CAYZ,CAAC;;CC/ED,MAAMC,kBAAkB,GAAG,CAAC;CAC5B,MAAMC,oBAAoB,GAAG,sCAAsC;;CAEnE;AACA,CAAO,MAAMC,YAAY,GAAG;GAC3BvC,UAAU,EAAE;KAAED;IAAiB;GAC/BG,KAAK,EAAE;KACNC,QAAQ,EAAE;OACTG,QAAQ,EAAE,IAAI;OACdF,IAAI,EAAEC;;IAEP;GACDd,IAAI,GACJ;KACC,OAAO;OACNiD,mBAAmB,EAAE,KAAK;OAC1BC,0BAA0B,EAAE;MAC5B;IACD;GACD3B,QAAQ,EACR;KACCC,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACd,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDuC,MAAM,GACN;OACC,OAAO,IAAI,CAAC3B,MAAM,CAACX,IAAI,KAAKuC,oBAAQ,CAAC7C,IAAI;MACzC;KACD8C,MAAM,GACN;OACC,OAAO,CAAC,IAAI,CAACF,MAAM;MACnB;KACDG,YAAY,GACZ;OACC,IAAI,CAAC,IAAI,CAAC9B,MAAM,CAAC+B,MAAM,IAAI,IAAI,CAAC/B,MAAM,CAACgC,WAAW,CAACC,MAAM,KAAK,CAAC,EAC/D;SACC,OAAO,EAAE;;OAGV,MAAMC,gBAAgB,GAAG,IAAI,CAAClC,MAAM,CAACgC,WAAW,CAACG,KAAK,CAAC,CAAC,EAAEb,kBAAkB,CAAC;OAC7E,MAAMc,IAAI,GAAGF,gBAAgB,CAACpD,GAAG,CAAEuD,OAAO,IAAKA,OAAO,CAACC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;OAE3E,MAAMC,mBAAmB,GAAG,IAAI,CAACxC,MAAM,CAACgC,WAAW,CAACC,MAAM,GAAGX,kBAAkB;OAC/E,IAAIkB,mBAAmB,GAAG,CAAC,EAC3B;SACC,OAAO,IAAI,CAACC,GAAG,CAAC,qCAAqC,EAAE;WACtD,QAAQ,EAAEL,IAAI;WACd,SAAS,EAAEI;UACX,CAAC;;OAGH,OAAO,IAAI,CAACC,GAAG,CAAC,8BAA8B,EAAE;SAAE,QAAQ,EAAEL;QAAM,CAAC;MACnE;KACDM,UAAU,GACV;OACC,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAAC+B,MAAM,EACvB;SACC,OAAO,EAAE;;OAGV,IAAI,IAAI,CAAChB,gBAAgB,CAAC4B,cAAc,KAAK,CAAC,EAC9C;SACC,OAAO,EAAE;;OAGV,IAAI,IAAI,CAAChB,MAAM,EACf;SACC,OAAO,IAAI,CAACiB,oBAAoB,EAAE;;OAGnC,OAAO,IAAI,CAACC,oBAAoB,EAAE;MAClC;KACD9B,gBAAgB,GAChB;OACC,OAAO,IAAI,CAACf,MAAM,CAACe,gBAAgB;;IAEpC;GACDR,OAAO,EACP;KACCqC,oBAAoB,GACpB;OACC,MAAM;SAAEE;QAAM,GAAG,IAAI,CAAC/B,gBAAgB,CAACC,WAAW;OAElD,OAAO,IAAI,CAACyB,GAAG,CAAC,iCAAiC,EAAE;SAClD,QAAQ,EAAEM,qCAAa,CAACC,gBAAgB,CAACF,IAAI,EAAEG,oCAAY,CAACC,iBAAiB;QAC7E,CAAC;MACF;KACDL,oBAAoB,GACpB;OACC,MAAM;SAAEF,cAAc;SAAE3B;QAAa,GAAG,IAAI,CAACD,gBAAgB;OAC7D,IAAI4B,cAAc,KAAK,CAAC,EACxB;SACC,OAAO,IAAI,CAACF,GAAG,CAAC,iCAAiC,EAAE;WAClD,QAAQ,EAAEzB,WAAW,CAACsB;UACtB,CAAC;;OAGH,OAAO,IAAI,CAACG,GAAG,CAAC,wCAAwC,EAAE;SACzD,SAAS,EAAEU,cAAI,CAACC,MAAM,CAACpC,WAAW,CAACsB,QAAQ,CAAC;SAC5C,cAAc,EAAG,gBAAef,oBAAqB,wBAAuB;SAC5E,SAAS,EAAEoB,cAAc,GAAG,CAAC;SAC7B,YAAY,EAAE;QACd,CAAC;MACF;KACDU,OAAO,CAACC,KAAmB,EAC3B;OACC,IAAI,CAACA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAE,IAAGjC,oBAAqB,EAAC,CAAC,EACrD;SACC;;OAGD,IAAI,CAACkC,gBAAgB,EAAE;MACvB;KACDA,gBAAgB,GAChB;OACC,IAAI,CAAC/B,0BAA0B,GAAGgC,QAAQ,CAACC,aAAa,CAAE,IAAGpC,oBAAqB,EAAC,CAAC;OACpF,IAAI,CAACE,mBAAmB,GAAG,IAAI;MAC/B;KACDgB,GAAG,CAACmB,UAAkB,EAAEC,YAAgC,GAAG,EAAE,EAC7D;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACJ,UAAU,EAAEC,YAAY,CAAC;;IAE7D;GACDxC,QAAQ,EAAG;;;;;;;;;;;;;;;;;;CAkBZ,CAAC;;CC/JD;AACA,CAAO,MAAM4C,YAAY,GAAG;GAC3BC,IAAI,EAAE,cAAc;GACpB/E,KAAK,EACL;KACCgF,UAAU,EAAE;OACX9E,IAAI,EAAEI,OAAO;OACb2E,OAAO,EAAE;;IAEV;GACD5F,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACD+B,OAAO,EACP;KACCkC,GAAG,CAACmB,UAAkB,EACtB;OACC,OAAO,IAAI,CAACE,OAAO,CAACC,GAAG,CAACC,UAAU,CAACJ,UAAU,CAAC;;IAE/C;GACDvC,QAAQ,EAAG;;;;;;CAMZ,CAAC;;CCvBD,MAAMgD,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CACnCC,4BAAgB,CAACC,WAAW,EAC5BD,4BAAgB,CAACE,YAAY,EAC7BF,4BAAgB,CAACG,eAAe,EAChCH,4BAAgB,CAACI,kBAAkB,EACnCJ,4BAAgB,CAACK,UAAU,EAC3BL,4BAAgB,CAACM,eAAe,EAChCN,4BAAgB,CAACO,cAAc,EAC/BP,4BAAgB,CAACQ,WAAW,EAC5BR,4BAAgB,CAACS,oBAAoB,CACrC,CAAC;CAAC;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAEH,CAAO,MAAMC,uBAAuB,CACpC;GAICC,WAAW,CAACC,OAAuB,EACnC;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAYA,OAAO;KACvB,4CAAI,oBAAUrH,2BAAI,CAACsH,QAAQ,EAAE;;GAG9BC,OAAO,GACP;KACC,4CAAI,IAAI,2CACR;OACC,OAAOd,4BAAgB,CAACe,OAAO;;KAGhC,4CAAI,IAAI,6CACR;OACC,OAAO,4CAAI,sBAAUC,WAAW;;KAGjC,4CAAI,IAAI,yCACR;OACC,OAAOhB,4BAAgB,CAACiB,MAAM;;KAG/B,4CAAI,IAAI,2BACR;OACC,OAAOjB,4BAAgB,CAACkB,IAAI;;KAG7B,IAAI,4CAAI,2EAAmB,IAAI,mCAAiB,EAChD;OACC,OAAOlB,4BAAgB,CAACmB,KAAK;;KAG9B,OAAOnB,4BAAgB,CAACH,OAAO;;CA2GjC;CAAC,+BAvGA;GACC,OAAOC,mBAAmB,CAACsB,GAAG,CAAC,4CAAI,sBAAUJ,WAAW,CAAC;CAC1D;CAAC,sBAGD;GACC,OAAO,4CAAI,sBAAUK,KAAK,CAAC3D,MAAM,GAAG,CAAC;CACtC;CAAC,qBAGD;GACC,OAAO,4CAAI,sBAAUG,IAAI,CAACH,MAAM,GAAG,CAAC;CACrC;CAAC,uBAGD;GACC,OAAO,4CAAI,sBAAU4D,MAAM,CAAC5D,MAAM,GAAG,CAAC;CACvC;CAAC,4BAGD;GACC,OAAO,yCAAC,IAAI,uBAAW,IAAI,yCAAC,IAAI,yBAAY,IAAI,yCAAC,IAAI,2BAAa;CACnE;CAAC,8BAGD;GACC,OAAO,4CAAI,sBAAU6D,SAAS,4CAAI,IAAI,qCAAkB;CACzD;CAAC,6BAGD;GACC,OAAO,4CAAI,sBAAUC,QAAQ,KAAK,CAAC;CACpC;CAAC,yBAGD;GACC,IAAI,4CAAI,sBAAUC,OAAO,GAAG,CAAC,EAC7B;KACC,OAAO,KAAK;;GAGb,4CAAI,IAAI,6BACR;KACC,OAAO,KAAK;;GAGb,IAAI,yCAAC,IAAI,+BAAe,EACxB;KACC,OAAO,KAAK;;GAGb,OAAOC,qBAAK,CAAC7D,IAAI,CAAC8D,WAAW,CAAC,4CAAI,sBAAU9D,IAAI,CAAC;CAClD;CAAC,2BAGD;GAAA;GACC,IAAI,4CAAI,sBAAU4D,OAAO,GAAG,CAAC,EAC7B;KACC,OAAO,KAAK;;GAGb,4CAAI,IAAI,6BACR;KACC,OAAO,KAAK;;GAGb,IAAI,yCAAC,IAAI,+BAAe,EACxB;KACC,OAAO,KAAK;;;;GAIb,MAAMG,YAAY,GAAGC,mCAAY,CAACC,WAAW,EAAE;GAC/C,MAAMC,MAAM,sDAAGH,YAAY,CAACI,SAAS,qBAAtB,uBAAwBD,MAAM,oCAAI,EAAE;GACnD,MAAME,YAAY,GAAG,CAAC,GAAGF,MAAM,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;KAC/C,OAAOA,CAAC,CAACC,MAAM,CAACC,aAAa,CAACH,CAAC,CAACE,MAAM,CAAC;IACvC,CAAC;GACF,MAAME,OAAO,GAAGN,YAAY,CAAC1H,GAAG,CAAE4G,KAAK,IAAK;KAC3C,OAAOO,qBAAK,CAAC7D,IAAI,CAAC2E,WAAW,CAACrB,KAAK,CAACkB,MAAM,CAAC;IAC3C,CAAC,CAACrE,IAAI,CAAC,GAAG,CAAC;GAEZ,MAAMyE,YAAY,GAAG,4CAAI,sBAAU5E,IAAI,CAAC6E,UAAU,CAAC,IAAIC,MAAM,CAACJ,OAAO,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC;GAChF,MAAMK,aAAa,GAAGH,YAAY,CAACI,IAAI,EAAE,CAACnF,MAAM,KAAK,CAAC;GAEtD,MAAMoF,eAAe,GAAG,IAAIH,MAAM,CAAE,SAAQJ,OAAQ,YAAW,CAAC;GAEhE,OAAOK,aAAa,IAAI,CAACE,eAAe,CAACC,IAAI,CAAC,4CAAI,sBAAUlF,IAAI,CAAC;CAClE;CAAC,yBAGD;GACC,IAAI,yCAAC,IAAI,uBAAW,EACpB;KACC,OAAO,KAAK;;GAGb,OAAO,yCAAC,IAAI,yBAAY,IAAI,yCAAC,IAAI,2BAAa;CAC/C;CAAC,uBAGD;GACC,OAAO,4CAAI,kBAAQlC,OAAO,CAAC,oBAAoB,CAAC,CAAC,4CAAI,sBAAU/B,EAAE,CAAC;CACnE;;CCjJM,MAAMoJ,UAAU,SAASC,uBAAQ,CACxC;GAICtC,WAAW,GACX;KACC,KAAK,EAAE;KAEP,IAAI,CAAC/G,EAAE,GAAG,2BAA2B;KACrC,IAAI,CAACsJ,iBAAiB,GAAGC,sCAAiB,CAACrB,WAAW,EAAE;;GAGzDsB,cAAc,GACd;KACC,OAAO;OACN,GAAG,KAAK,CAACA,cAAc,EAAE;OACzBC,SAAS,EAAE,IAAI,CAACC,gBAAgB,EAAE;OAClCC,KAAK,EAAE,IAAI;OACXC,UAAU,EAAE;MACZ;;GAGFC,YAAY,GACZ;KACC,OAAO,CACN,IAAI,CAACC,cAAc,EAAE,EACrB,IAAI,CAACC,WAAW,EAAE,EAClB,IAAI,CAACC,cAAc,EAAE,EACrB,IAAI,CAACC,WAAW,EAAE,CAClB;;GAGFH,cAAc,GACd;KACC,OAAO;OACN7F,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,iCAAiC,CAAC;OACvDqE,OAAO,EAAE,MAAM;SACdC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,QAAQ,CAACC,aAAa,EAAE;WACnDC,WAAW,EAAE,IAAI,CAACC,OAAO,CAAC7J,IAAI,CAACmF,IAAI;WACnC2E,kBAAkB,EAAE5C,qBAAK,CAAC7D,IAAI,CAAC0G,gBAAgB,CAAC,IAAI,CAACF,OAAO,CAAC7J,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACyK,OAAO,CAAC7J,IAAI,CAACmF,IAAI;UAC5F,CAAC;SACF,IAAI,CAAC6E,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFd,WAAW,GACX;KACC,IAAI,IAAI,CAACU,OAAO,CAAC5I,MAAM,CAACX,IAAI,KAAKuC,oBAAQ,CAAC7C,IAAI,EAC9C;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNqD,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,oCAAoC,CAAC;OAC1DqE,OAAO,EAAE,MAAM;SACdY,mBAAS,CAACC,QAAQ,CAAC,IAAI,CAACN,OAAO,CAAC7J,IAAI,CAACZ,EAAE,CAAC;SACxC,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFb,cAAc,GACd;KACC,OAAO;OACN/F,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,oCAAoC,CAAC;OAC1DmF,IAAI,EAAElD,qBAAK,CAAClH,IAAI,CAACqK,cAAc,CAAC,IAAI,CAACR,OAAO,CAAC7J,IAAI,CAACZ,EAAE,CAAC;OACrDkK,OAAO,EAAE,MAAM;SACd,IAAI,CAACU,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFZ,WAAW,GACX;KACC,MAAMiB,OAAO,GAAG,IAAI,CAAC5B,iBAAiB,CAAC6B,gBAAgB,CAACC,0BAAc,CAACC,IAAI,EAAE,IAAI,CAACZ,OAAO,CAAC5I,MAAM,CAACZ,QAAQ,CAAC;KAC1G,IAAI,CAACiK,OAAO,EACZ;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNjH,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,4BAA4B,CAAC;OAClDqE,OAAO,EAAE,YAAY;SACpB,IAAI,CAACU,YAAY,CAACC,KAAK,EAAE;SACzB,MAAMS,UAAU,GAAG,MAAMC,qCAAmB,EAAE;SAC9C,IAAID,UAAU,KAAK,IAAI,EACvB;WACC,MAAME,WAAW,GAAG,IAAIC,kCAAW,EAAE;WACrCD,WAAW,CAACE,gBAAgB,CAAC,IAAI,CAACjB,OAAO,CAAC5I,MAAM,CAACZ,QAAQ,EAAE,IAAI,CAACwJ,OAAO,CAAC7J,IAAI,CAACZ,EAAE,CAAC;;;MAGlF;;CAEH;;CCpGyB;CAAA;CAAA;CAAA;AAKzB,CAAO,MAAM2L,WAAW,SAAStC,uBAAQ,CACzC;GAICtC,WAAW,GACX;KACC,KAAK,EAAE;KAAC;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAER,IAAI,CAAC/G,EAAE,GAAG,4BAA4B;KACtC,IAAI,CAAC4L,WAAW,GAAG,IAAIC,kCAAW,EAAE;KACpC,IAAI,CAACC,aAAa,GAAGC,8BAAa,CAAC7D,WAAW,EAAE;;GAGjDsB,cAAc,GACd;KACC,OAAO;OACN,GAAG,KAAK,CAACA,cAAc,EAAE;OACzBC,SAAS,EAAE,IAAI,CAACC,gBAAgB,EAAE;OAClCC,KAAK,EAAE,IAAI;OACXC,UAAU,EAAE;MACZ;;GAGFC,YAAY,GACZ;KACC,OAAO,CACN,IAAI,CAACmC,YAAY,EAAE,EACnB,IAAI,CAACC,WAAW,EAAE,EAClB,IAAI,CAACC,eAAe,EAAE,EACtB,IAAI,CAACC,UAAU,EAAE,EACjB,IAAI,CAACC,cAAc,EAAE,EACrB,IAAI,CAACC,YAAY,EAAE,EACnB,IAAI,CAACC,WAAW,EAAE,EAClB,IAAI,CAACC,eAAe,EAAE,EACtB,IAAI,CAACF,YAAY,EAAE,EACnB,IAAI,CAACG,aAAa,EAAE,EACpB,IAAI,CAACH,YAAY,EAAE,EACnB,IAAI,CAACI,mBAAmB,EAAE,EAC1B,IAAI,CAACC,aAAa,EAAE,EACpB,IAAI,CAACL,YAAY,EAAE,EACnB,IAAI,CAACM,WAAW,EAAE,EAClB,IAAI,CAACC,aAAa,EAAE,CACpB;;GAGFZ,YAAY,GACZ;KACC,OAAO;OACN/H,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,2BAA2B,CAAC;OACjDqE,OAAO,EAAE,MAAM;SACdC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,QAAQ,CAACuC,YAAY,EAAE;WAClDvN,SAAS,EAAE,IAAI,CAACmL,OAAO,CAACzK;UACxB,CAAC;SACF,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFuB,cAAc,GACd;KACC,IAAI,4CAAI,iDAAwBU,cAAI,CAACC,QAAQ,CAAC,IAAI,CAACtC,OAAO,CAACzK,EAAE,CAAC,EAC9D;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNiE,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,6BAA6B,CAAC;OACnDqE,OAAO,EAAE,MAAM;SACdC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACxI,MAAM,CAACmL,gBAAgB,EAAE;WACpD1N,SAAS,EAAE,IAAI,CAACmL,OAAO,CAACzK;UACxB,CAAC;SACF,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFoB,WAAW,GACX;KACC,IAAI,IAAI,CAACxB,OAAO,CAACxG,IAAI,CAACgF,IAAI,EAAE,CAACnF,MAAM,KAAK,CAAC,EACzC;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNG,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC;OAChDqE,OAAO,EAAE,MAAM;SAAA;SACd,MAAM+C,UAAU,GAAGC,uBAAM,CAACC,WAAW,CAAC,IAAI,CAAC1C,OAAO,CAAC;SACnD,qBAAI2C,EAAE,CAACC,SAAS,aAAZ,cAAcC,IAAI,CAACL,UAAU,CAAC,EAClC;WACCG,EAAE,CAACG,EAAE,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAAC;aAChCC,OAAO,EAAE/H,aAAG,CAACC,UAAU,CAAC,kCAAkC;YAC1D,CAAC;;SAEH,IAAI,CAAC+E,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFqB,eAAe,GACf;KACC,IAAI,IAAI,CAACzB,OAAO,CAAChD,KAAK,CAAC3D,MAAM,KAAK,CAAC,EACnC;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNG,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,+BAA+B,CAAC;OACrDqE,OAAO,EAAE,MAAM;SAAA;SACd,MAAM+C,UAAU,GAAGC,uBAAM,CAACU,eAAe,CAAC,IAAI,CAACnD,OAAO,CAAC;SACvD,sBAAI2C,EAAE,CAACC,SAAS,aAAZ,eAAcC,IAAI,CAACL,UAAU,CAAC,EAClC;WACCG,EAAE,CAACG,EAAE,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAAC;aAChCC,OAAO,EAAE/H,aAAG,CAACC,UAAU,CAAC,uCAAuC;YAC/D,CAAC;;SAEH,IAAI,CAAC+E,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFsB,UAAU,GACV;KACC,4CAAI,IAAI,+CACR;OACC,OAAO,IAAI;;KAGZ,MAAM0B,QAAQ,GAAG,IAAI,CAACC,KAAK,CAAC/L,OAAO,CAAC,uBAAuB,CAAC,CAAC;OAC5DgM,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACsD,MAAM;OAC3BzO,SAAS,EAAE,IAAI,CAACmL,OAAO,CAACzK;MACxB,CAAC;KAEF,OAAO;OACNiE,IAAI,EAAE4J,QAAQ,GAAGjI,aAAG,CAACC,UAAU,CAAC,2BAA2B,CAAC,GAAGD,aAAG,CAACC,UAAU,CAAC,yBAAyB,CAAC;OACxGqE,OAAO,EAAE,MAAM;SACd,MAAM8D,cAAc,GAAG,IAAIC,qCAAc,CAAC;WAAEF,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACsD;UAAQ,CAAC;SAC1E,IAAIF,QAAQ,EACZ;WACCG,cAAc,CAACE,YAAY,CAAC,IAAI,CAACzD,OAAO,CAACsD,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACzK,EAAE,CAAC;UACjE,MAED;WACCgO,cAAc,CAACG,UAAU,CAAC,IAAI,CAAC1D,OAAO,CAACsD,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACzK,EAAE,CAAC;;SAEhE,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGF0B,eAAe,GACf;KACC,4CAAI,IAAI,+CACR;OACC,OAAO,IAAI;;KAGZ,MAAM6B,YAAY,GAAG,IAAI,CAACN,KAAK,CAAC/L,OAAO,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC0I,OAAO,CAACsD,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACzK,EAAE,CAAC;KAEpH,MAAMqO,YAAY,GAAGD,YAAY,GAC9BxI,aAAG,CAACC,UAAU,CAAC,uCAAuC,CAAC,GACvDD,aAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC;KAG7C,OAAO;OACN5B,IAAI,EAAEoK,YAAY;OAClBnE,OAAO,EAAE,MAAM;SACd,MAAM8D,cAAc,GAAG,IAAIC,qCAAc,CAAC;WAAEF,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACsD;UAAQ,CAAC;SAC1E,IAAIK,YAAY,EAChB;WACCJ,cAAc,CAACM,yBAAyB,CAAC,IAAI,CAAC7D,OAAO,CAACzK,EAAE,CAAC;UACzD,MAED;WACCgO,cAAc,CAACO,oBAAoB,CAAC,IAAI,CAAC9D,OAAO,CAACzK,EAAE,CAAC;;SAGrD,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFyB,WAAW,GACX;KACC,MAAMkC,SAAS,GAAG,IAAI,CAAC/D,OAAO,CAACgE,MAAM,IAAI,yCAAC,IAAI,iCAAgB;KAE9D,MAAM5M,MAAmB,GAAG,IAAI,CAACiM,KAAK,CAAC/L,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC0I,OAAO,CAACsD,MAAM,CAAC;KACxF,MAAMW,QAAQ,GAAG,IAAI,CAACjE,OAAO,CAACzK,EAAE,KAAK6B,MAAM,CAAC8M,QAAQ;KACpD,IAAI,CAACH,SAAS,IAAIE,QAAQ,EAC1B;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNzK,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC;OAChDqE,OAAO,EAAE,MAAM;SACd,MAAM8D,cAAc,GAAG,IAAIC,qCAAc,CAAC;WAAEF,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACsD;UAAQ,CAAC;SAC1EC,cAAc,CAACY,WAAW,CAAC,IAAI,CAACnE,OAAO,CAACzK,EAAE,CAAC;SAC3C,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGF2B,aAAa,GACb;KACC,4CAAI,IAAI,+CACR;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNvI,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,4BAA4B,CAAC;OAClDgJ,KAAK,EAAE,CACN,IAAI,CAACC,iBAAiB,EAAE,EACxB,IAAI,CAACC,oBAAoB,EAAE,EAC3B,GAAG,IAAI,CAACC,cAAc,EAAE;MAEzB;;GAGFF,iBAAiB,GACjB;KACC,OAAO;OACN7K,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,iCAAiC,CAAC;OACvDqE,OAAO,EAAE,MAAM;SACd,MAAM+E,aAAa,GAAG,IAAIC,qCAAa,CAAC,IAAI,CAACzE,OAAO,CAACsD,MAAM,CAAC;SAC5D,KAAKkB,aAAa,CAACE,oBAAoB,CAAC,IAAI,CAAC1E,OAAO,CAACzK,EAAE,CAAC;SACxD,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFkE,oBAAoB,GACpB;KACC,OAAO;OACN9K,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,oCAAoC,CAAC;OAC1DqE,OAAO,EAAE,MAAM;SACd,MAAM+E,aAAa,GAAG,IAAIC,qCAAa,CAAC,IAAI,CAACzE,OAAO,CAACsD,MAAM,CAAC;SAC5D,KAAKkB,aAAa,CAACG,uBAAuB,CAAC,IAAI,CAAC3E,OAAO,CAACzK,EAAE,CAAC;SAC3D,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGF8B,WAAW,GACX;KACC,IAAI,yCAAC,IAAI,iCAAgB,4CAAI,IAAI,6CAAoB,4CAAI,IAAI,6CAAsB,EACnF;OACC,OAAO,IAAI;;KAGZ,OAAO;OACN1I,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC;OAChDqE,OAAO,EAAE,MAAM;SACdC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,QAAQ,CAAC+E,WAAW,EAAE;WACjD/P,SAAS,EAAE,IAAI,CAACmL,OAAO,CAACzK;UACxB,CAAC;SACF,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGF+B,aAAa,GACb;KACC,IAAI,yCAAC,IAAI,iCAAgB,4CAAI,IAAI,6CAAoB,EACrD;OACC,OAAO,IAAI;;KAGZ,OAAO;OACN3I,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,4BAA4B,CAAC;OAClD4D,SAAS,EAAE,2DAA2D;OACtES,OAAO,EAAE,MAAM;SACd,MAAM8D,cAAc,GAAG,IAAIC,qCAAc,CAAC;WAAEF,MAAM,EAAE,IAAI,CAACtD,OAAO,CAACsD;UAAQ,CAAC;SAC1EC,cAAc,CAACsB,aAAa,CAAC,IAAI,CAAC7E,OAAO,CAACzK,EAAE,CAAC;SAC7C,IAAI,CAAC4K,YAAY,CAACC,KAAK,EAAE;;MAE1B;;GAGFmE,cAAc,GACd;KACC,MAAM;OAAE/N,QAAQ;OAAEjB;MAAI,GAAG,IAAI,CAACyK,OAAO;KACrC,MAAM8E,UAAU,GAAG,IAAI,CAACzD,aAAa,CAAC0D,4BAA4B,CAACC,yBAAa,CAACC,WAAW,EAAEzO,QAAQ,CAAC;KACvG,MAAM0O,cAAc,GAAG,EAAE;KACzB,IAAIJ,UAAU,CAACzL,MAAM,GAAG,CAAC,EACzB;OACC6L,cAAc,CAACC,IAAI,CAAC,IAAI,CAACvD,YAAY,EAAE,CAAC;;KAGzC,MAAM5B,OAAO,GAAG;OAAEnL,SAAS,EAAEU,EAAE;OAAEiB;MAAU;KAE3CsO,UAAU,CAACM,OAAO,CAAEC,SAAS,IAAK;OACjCH,cAAc,CAACC,IAAI,CAAC;SACnB3L,IAAI,EAAE6L,SAAS,CAACC,KAAK;SACrB7F,OAAO,EAAE,MAAM;WACd6B,8BAAa,CAACiE,UAAU,CAACF,SAAS,EAAErF,OAAO,CAAC;WAC5C,IAAI,CAACG,YAAY,CAACC,KAAK,EAAE;;QAE1B,CAAC;MACF,CAAC;;;KAGF,MAAMoF,SAAS,GAAG,EAAE;KAEpB,OAAON,cAAc,CAAC3L,KAAK,CAAC,CAAC,EAAEiM,SAAS,CAAC;;GAG1CxD,mBAAmB,GACnB;KACC,MAAMnF,IAAI,2CAAG,IAAI,qCAAkB;KACnC,IAAI,CAACA,IAAI,EACT;OACC,OAAO,IAAI;;KAGZ,OAAO;OACN4I,IAAI,EAAEpI,qBAAK,CAACR,IAAI,CAAC6I,kBAAkB,CAClCvK,aAAG,CAACC,UAAU,CAAC,mCAAmC,CAAC,EACnDyB,IAAI,CAAC8I,WAAW,EAChB9I,IAAI,CAACvB,IAAI,CACT;OACDmE,OAAO,EAAE,YAAW;SACnB,IAAI,CAACU,YAAY,CAACC,KAAK,EAAE;QACzB,CAACwF,IAAI,CAAC,IAAI;MACX;;GAGF3D,aAAa,GACb;KACC,MAAMpF,IAAI,2CAAG,IAAI,qCAAkB;KACnC,IAAI,CAACA,IAAI,EACT;OACC,OAAO,IAAI;;KAGZ,OAAO;OACNrD,IAAI,EAAE2B,aAAG,CAACC,UAAU,CAAC,kCAAkC,CAAC;OACxDqE,OAAO,EAAE,YAAW;SACnB,KAAK,IAAI,CAAC0B,WAAW,CAAC0E,IAAI,CAAChJ,IAAI,CAACtH,EAAE,CAAC,CAACuQ,IAAI,CAAC,MAAM;WAC9CnD,EAAE,CAACG,EAAE,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAAC;aAChCC,OAAO,EAAE/H,aAAG,CAACC,UAAU,CAAC,0CAA0C;YAClE,CAAC;UACF,CAAC;SACF,IAAI,CAAC+E,YAAY,CAACC,KAAK,EAAE;QACzB,CAACwF,IAAI,CAAC,IAAI;MACX;;GAGFhE,YAAY,GACZ;KACC,OAAO;OACNmE,SAAS,EAAE;MACX;;CA4BH;CAAC,0BAxBA;GACC,OAAO,IAAI,CAAC/F,OAAO,CAAC7C,QAAQ,KAAKjI,2BAAI,CAACqD,SAAS,EAAE;CAClD;CAAC,gCAGD;GACC,OAAO,IAAI,CAACyH,OAAO,CAAC9C,SAAS;CAC9B;CAAC,4BAGD;GACC,IAAI,IAAI,CAAC8C,OAAO,CAAChD,KAAK,CAAC3D,MAAM,KAAK,CAAC,EACnC;KACC,OAAO,IAAI;;;;GAIZ,OAAO,IAAI,CAACgK,KAAK,CAAC/L,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC0I,OAAO,CAAChD,KAAK,CAAC,CAAC,CAAC,CAAC;CAC9D;CAAC,gCAGD;GACC,OAAOqF,cAAI,CAAC2D,cAAc,CAAC,IAAI,CAAChG,OAAO,CAACiG,OAAO,CAAC1Q,EAAE,CAAC;CACpD;;CC7YD;AACA,CAAO,MAAM2Q,cAAc,GAAG;GAC7B3P,KAAK,EACL;KACC+O,KAAK,EAAE;OACN7O,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;;IAEX;GACDf,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACD6C,QAAQ,EAAG;;;;;CAKZ,CAAC;;CCZD;AACA,CAAO,MAAM0N,SAAS,GAAG;GACxB7K,IAAI,EAAE,WAAW;GACjBjF,UAAU,EAAE;KAAE6P;IAAgB;GAC9B3P,KAAK,EACL;KACC6P,IAAI,EAAE;OACL3P,IAAI,EAAET,MAAM;OACZW,QAAQ,EAAE;;IAEX;GACDf,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACDuB,QAAQ,EACR;KACCkP,SAAS,EAAE,MAAMA,2BAAS;KAC1BC,SAAS,GACT;OACC,OAAO,IAAI,CAACF,IAAI;;IAEjB;GACD3N,QAAQ,EAAG;;;;;;;;;;;;;;CAcZ,CAAC;;CCvCD;AACA,CAAO,MAAM8N,WAAW,GAAG;GAC1BjL,IAAI,EAAE,aAAa;GACnBjF,UAAU,EAAE;aAAEmQ;IAAQ;GACtBjQ,KAAK,EACL;KACC6P,IAAI,EAAE;OACL3P,IAAI,EAAET,MAAM;OACZW,QAAQ,EAAE;;IAEX;GACDI,KAAK,EAAE,CAAC,aAAa,CAAC;GACtBnB,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACDuB,QAAQ,EACR;KACCsP,UAAU,EAAE,MAAMA,mCAAU;KAC5BC,WAAW,GACX;OACC,OAAO,IAAI,CAACN,IAAI;;IAEjB;GACDzO,OAAO,EACP;KACCgP,aAAa,CAACjM,KAAmB,EACjC;OACC,IAAI,CAACzC,KAAK,CAAC,aAAa,EAAE;SACzBzB,QAAQ,EAAE,IAAI,CAACkQ,WAAW,CAACE,MAAM,CAACC,QAAQ;SAC1CC,MAAM,EAAEpM;QACR,CAAC;;IAEH;GACDjC,QAAQ,EAAG;;;;;;;;;;;;;;;;;CAiBZ,CAAC;;CCvDD;AACA,CAAO,MAAMsO,gBAAgB,GAAG;GAC/BnR,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACD+B,OAAO,EACP;KACCkC,GAAG,CAACmB,UAAkB,EACtB;OACC,OAAO,IAAI,CAACE,OAAO,CAACC,GAAG,CAACC,UAAU,CAACJ,UAAU,CAAC;;IAE/C;GACDvC,QAAQ,EAAG;;;;;;;CAOZ,CAAC;;CCpBD;AACA,CAAO,MAAMuO,mBAAmB,GAAG;GAClCpR,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACD+B,OAAO,EACP;KACCkC,GAAG,CAACmB,UAAkB,EACtB;OACC,OAAO,IAAI,CAACE,OAAO,CAACC,GAAG,CAACC,UAAU,CAACJ,UAAU,CAAC;;IAE/C;GACDvC,QAAQ,EAAG;;;;;;;CAOZ,CAAC;;CCbD,MAAMwO,eAAe,GAAG,CACvB9L,aAAG,CAACC,UAAU,CAAC,+CAA+C,CAAC,EAC/DD,aAAG,CAACC,UAAU,CAAC,+CAA+C,CAAC,EAC/DD,aAAG,CAACC,UAAU,CAAC,+CAA+C,CAAC,EAC/DD,aAAG,CAACC,UAAU,CAAC,+CAA+C,CAAC,EAC/DD,aAAG,CAACC,UAAU,CAAC,+CAA+C,CAAC,CAC/D;;CAED;AACA,CAAO,MAAM8L,UAAU,GAAG;GACzB5L,IAAI,EAAE,YAAY;GAClB1F,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACDuB,QAAQ,EACR;KACC8P,eAAe,EAAE,MAAMA;IACvB;GACDtP,OAAO,EACP;KACCwP,cAAc,CAAC3N,IAAY,EAC3B;OACCkG,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,QAAQ,CAACuH,UAAU,EAAE;SAAE5N;QAAM,CAAC;MAC1D;KACDK,GAAG,CAACmB,UAAkB,EACtB;OACC,OAAO,IAAI,CAACE,OAAO,CAACC,GAAG,CAACC,UAAU,CAACJ,UAAU,CAAC;;IAE/C;GACDvC,QAAQ,EAAG;;;;;;;;;;;;;;;;;;CAkBZ,CAAC;;CCvBM,MAAM4O,iBAAiB,CAC9B;GAWC/K,WAAW,CAAC9F,QAAQ,EACpB;KAAA,KATA8Q,cAAc,GAAY,IAAI;KAAA,KAG9BC,gBAAgB,GAGZ,EAAE;KAIL,IAAI,CAAClE,KAAK,GAAGnO,2BAAI,CAACsH,QAAQ,EAAE;KAC5B,IAAI,CAAChG,QAAQ,GAAGA,QAAQ;;GAGzBgR,uBAAuB,CAACC,iBAAmC,EAC3D;KACC,MAAMC,UAAU,GAAG,EAAE;KACrB,MAAMC,UAAU,GAAG,EAAE;KACrB,IAAIC,aAAa,GAAG,IAAI;KACxB,IAAIC,YAAY,GAAG,IAAI;KACvB,IAAIC,eAAe,GAAG,IAAI;KAE1B,MAAM1Q,MAAmB,GAAG,IAAI,CAACiM,KAAK,CAAC/L,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACd,QAAQ,CAAC;KAC1E,MAAM;OAAE0N,QAAQ;OAAE/K;MAAQ,GAAG/B,MAAM;KACnC,IAAI2Q,YAAY,GAAG,KAAK;KACxB,MAAMC,UAAU,GAAG,IAAI,CAAC3E,KAAK,CAAC/L,OAAO,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAACd,QAAQ,CAAC;KAE3E,IAAI,IAAI,CAAC8Q,cAAc,EACvB;OACC,IAAI,CAACW,sBAAsB,GAAGD,UAAU;OACxC,IAAI,CAACE,eAAe,GAAGhE,QAAQ;;KAGhC,IAAIA,QAAQ,KAAK,IAAI,CAACgE,eAAe,IAAIhE,QAAQ,KAAK,CAAC,EACvD;OACC,IAAI,CAACgE,eAAe,GAAGhE,QAAQ;OAC/B,IAAI,CAAC+D,sBAAsB,GAAG,IAAI;;KAGnCR,iBAAiB,CAACrC,OAAO,CAAC,CAAC7I,OAAuB,EAAE4L,KAAK,KAAK;OAC7D,MAAM7B,SAAS,GAAG,IAAI,CAAC8B,YAAY,CAAC7L,OAAO,CAACrC,IAAI,CAAC;;OAEjD,IAAI,CAACwN,UAAU,CAACpB,SAAS,CAAChB,KAAK,CAAC,EAChC;SACCoC,UAAU,CAACpB,SAAS,CAAChB,KAAK,CAAC,GAAGgB,SAAS,CAAC/Q,EAAE;SAC1CqS,aAAa,GAAG,EAAE;SAClBD,UAAU,CAACxC,IAAI,CAAC;WACf1O,IAAI,EAAE4P,2BAAS,CAACC,SAAS;WACzBpM,IAAI,EAAEoM,SAAS;WACflC,KAAK,EAAEwD;UACP,CAAC;SACFC,YAAY,GAAG,IAAI;;;;OAIpB,IAAItL,OAAO,CAAChH,EAAE,KAAK,IAAI,CAAC2S,eAAe,EACvC;SACCN,aAAa,CAACzC,IAAI,CAAC;WAClB1O,IAAI,EAAE4P,2BAAS,CAACgC;UAChB,CAAC;SACFR,YAAY,GAAG,IAAI;SACnBE,YAAY,GAAG,IAAI;;;;OAIpB,IAAIxL,OAAO,CAACY,QAAQ,KAAK0K,YAAY,EACrC;SACCA,YAAY,GAAGtL,OAAO,CAACY,QAAQ;SAC/B2K,eAAe,GAAG,EAAE;SAEpBF,aAAa,CAACzC,IAAI,CAAC;WAClB1O,IAAI,EAAE4P,2BAAS,CAACK,WAAW;WAC3BrO,MAAM,EAAEkE,OAAO,CAACY,QAAQ;WACxByJ,MAAM,EAAE,IAAI,CAAC0B,eAAe,CAAC/L,OAAO,CAAC;WACrCgM,WAAW,EAAE,IAAI,CAACC,cAAc,CAACjM,OAAO,CAAC;WACzC6H,KAAK,EAAE0D;UACP,CAAC;;;;OAIHA,eAAe,CAAC3C,IAAI,CAAC5I,OAAO,CAAC;;;OAG7B,MAAMkM,aAAa,GAAGN,KAAK,KAAKV,iBAAiB,CAACpO,MAAM,GAAG,CAAC;OAC5D,IAAI,CAAC0O,YAAY,IAAI,CAACU,aAAa,IAAIlM,OAAO,CAAChH,EAAE,KAAK,IAAI,CAAC0S,sBAAsB,EACjF;SACCL,aAAa,CAACzC,IAAI,CAAC;WAClB1O,IAAI,EAAE4P,2BAAS,CAACqC;UAChB,CAAC;SACFb,YAAY,GAAG,IAAI;;MAEpB,CAAC;KAEF,IAAI1O,MAAM,EACV;OACC,IAAI,CAACmO,cAAc,GAAG,KAAK;;KAI5B,OAAOK,UAAU;;GAGlBS,YAAY,CAAClO,IAAU,EACvB;KACC,MAAMyO,2BAA2B,GAAG,EAAE;;KAEtC,MAAMC,SAAS,GAAG1O,IAAI,CAAC2O,MAAM,EAAE,CAACtP,KAAK,CAAC,CAAC,EAAEoP,2BAA2B,CAAC;KACrE,IAAI,IAAI,CAACpB,gBAAgB,CAACqB,SAAS,CAAC,EACpC;OACC,OAAO,IAAI,CAACrB,gBAAgB,CAACqB,SAAS,CAAC;;KAGxC,IAAI,CAACrB,gBAAgB,CAACqB,SAAS,CAAC,GAAG;OAClCrT,EAAE,EAAEqT,SAAS;OACbtD,KAAK,EAAEnL,qCAAa,CAACC,gBAAgB,CAACF,IAAI,EAAEG,oCAAY,CAACiM,SAAS;MAClE;KAED,OAAO,IAAI,CAACiB,gBAAgB,CAACqB,SAAS,CAAC;;GAGxCN,eAAe,CAAC/L,OAAuB,EACvC;KACC,MAAMgM,WAAW,GAAG,IAAI,CAACC,cAAc,CAACjM,OAAO,CAAC;KAChD,MAAMuM,QAAQ,GAAGP,WAAW,KAAKQ,uBAAW,CAACnM,MAAM;KACnD,MAAMoM,MAAM,GAAGT,WAAW,KAAKQ,uBAAW,CAACE,IAAI;KAE/C,MAAMC,SAAS,GAAG,IAAI,CAAC7F,KAAK,CAAC/L,OAAO,CAAC,0BAA0B,CAAC,CAAC6R,oBAAQ,CAACC,UAAU,CAACF,SAAS,CAAC;KAC/F,IAAIG,QAAQ,GAAG,IAAI;KACnB,IAAIH,SAAS,KAAKI,2BAAe,CAACC,IAAI,EACtC;OACCF,QAAQ,GAAG,CAACP,QAAQ;MACpB,MACI,IAAII,SAAS,KAAKI,2BAAe,CAACE,MAAM,EAC7C;OACCH,QAAQ,GAAG,CAACL,MAAM,IAAI,CAACF,QAAQ;;KAGhC,OAAO;OACNO,QAAQ;OACRxC,QAAQ,EAAEtK,OAAO,CAACY,QAAQ,CAACsM,QAAQ;MACnC;;GAGFjB,cAAc,CAACjM,OAAuB,EACtC;KACC,IAAI,CAACA,OAAO,CAACY,QAAQ,EACrB;OACC,OAAO4L,uBAAW,CAACnM,MAAM;;KAG1B,IAAIL,OAAO,CAACY,QAAQ,KAAKjI,2BAAI,CAACqD,SAAS,EAAE,EACzC;OACC,OAAOwQ,uBAAW,CAACE,IAAI;;KAGxB,OAAOF,uBAAW,CAACW,QAAQ;;CAE7B;;CCpLO,MAAMC,iBAAiB,GAAG;mBAChCC,8CAAc;gBACdC,wCAAW;iBACXC,0CAAY;sBACZC,oDAAiB;mBACjBC,8CAAc;kBACdC,4CAAa;uBACbC,sDAAkB;wBAClBC,wDAAmB;2BACnBC,8DAAsB;+BACtBC,mEAA0B;mBAC1BC,qDAAc;uBACdC,uDAAkB;gCAClBC,yEAA2B;8BAC3BC;CACD,CAAC;;CCLD;AACA,OAAaC,WAAW,GAAG;GAC1BpP,IAAI,EAAE,aAAa;GACnBqP,UAAU,EAAE;KACX,kBAAkB,EAAE;OACnBC,OAAO,CAACnR,OAAO,EAAEoR,OAAO,EACxB;SACCA,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACC,cAAc,CAACvR,OAAO,CAAC;QACjD;OACDwR,aAAa,CAACxR,OAAO,EAAEoR,OAAO,EAC9B;SACCA,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACG,gBAAgB,CAACzR,OAAO,CAAC;;;IAGrD;GACDpD,UAAU,EAAE;KACX8P,SAAS;KACTI,WAAW;KACXQ,gBAAgB;KAChBC,mBAAmB;KACnBpO,YAAY;KACZyC,YAAY;KACZ6L,UAAU;KACV,GAAGyC;IACH;GACDpT,KAAK,EACL;KACCC,QAAQ,EAAE;OACTC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;MACV;KACDwU,QAAQ,EAAE;OACT1U,IAAI,EAAE2U,KAAK;OACXzU,QAAQ,EAAE;MACV;KACDoU,QAAQ,EAAE;OACTtU,IAAI,EAAET,MAAM;OACZW,QAAQ,EAAE;;IAEX;GACDI,KAAK,EAAE,CAAC,iBAAiB,CAAC;GAC1BnB,IAAI,GACJ;KACC,OAAO;OACNyV,wBAAwB,EAAE;MAC1B;IACD;GACDlU,QAAQ,EACR;KACCC,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACd,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDuC,MAAM,GACN;OACC,OAAO,IAAI,CAAC3B,MAAM,CAACX,IAAI,KAAKuC,oBAAQ,CAAC7C,IAAI;MACzC;KACDmV,YAAY,GACZ;OACC,OAAO,IAAI,CAAClU,MAAM,CAAC+B,MAAM;MACzB;KACDsO,iBAAiB,GACjB;OACC,OAAO,IAAI,CAAC0D,QAAQ;MACpB;KACDI,mBAAmB,GACnB;OACC,IAAI,CAAC,IAAI,CAACD,YAAY,IAAI,IAAI,CAAC7D,iBAAiB,CAACpO,MAAM,KAAK,CAAC,EAC7D;SACC,OAAO,EAAE;;OAGV,OAAO,IAAI,CAACmS,oBAAoB,EAAE,CAAChE,uBAAuB,CAAC,IAAI,CAACC,iBAAiB,CAAC;MAClF;KACDgE,UAAU,GACV;OACC,OAAO,IAAI,CAACF,mBAAmB,CAAClS,MAAM,KAAK,CAAC;MAC5C;KACDqS,gBAAgB,GAChB;OACC,OAAO,IAAI,CAACjE,iBAAiB,CAACkE,IAAI,CAAEpP,OAAO,IAAK;SAC/C,OAAOA,OAAO,CAAChH,EAAE,KAAK,IAAI,CAAC6B,MAAM,CAACU,aAAa;QAC/C,CAAC;MACF;KACD8T,eAAe,GACf;OACC,OAAOhT,YAAY;;IAEpB;GACDiT,OAAO,GACP;KACC,IAAI,CAACC,eAAe,EAAE;KACtB,IAAI,CAACC,qBAAqB,EAAE;IAC5B;GACDnB,OAAO,GACP;KACC,IAAI,CAACoB,iBAAiB,EAAE;IACxB;GACDf,aAAa,GACb;KACC,IAAI,CAACgB,qBAAqB,EAAE;IAC5B;GACDtU,OAAO,EACP;KACCqU,iBAAiB,GACjB;OACCtM,6BAAY,CAACwM,SAAS,CAACtM,qBAAS,CAACxI,MAAM,CAAC+U,yBAAyB,EAAE,IAAI,CAACC,yBAAyB,CAAC;MAClG;KACDH,qBAAqB,GACrB;OACCvM,6BAAY,CAAC2M,WAAW,CAACzM,qBAAS,CAACxI,MAAM,CAAC+U,yBAAyB,EAAE,IAAI,CAACC,yBAAyB,CAAC;MACpG;KACDL,qBAAqB,GACrB;OACC,IAAI,CAACP,oBAAoB,EAAE;MAC3B;KACDM,eAAe,GACf;OACC,IAAI,CAACQ,WAAW,GAAG,IAAIpL,WAAW,EAAE;OACpC,IAAI,CAACoL,WAAW,CAACJ,SAAS,CAAChL,WAAW,CAACqL,MAAM,CAACC,WAAW,EAAE,MAAM;SAChE,IAAI,CAACnB,wBAAwB,GAAG,CAAC;QACjC,CAAC;OAEF,IAAI,CAACoB,UAAU,GAAG,IAAI9N,UAAU,EAAE;MAClC;KACDgI,aAAa,CAAC+F,MAAkD,EAChE;OACC,MAAM;SAAElW,QAAQ;SAAEsQ,MAAM,EAAEpM;QAAO,GAAGgS,MAAM;OAC1C,MAAMvW,IAAI,GAAG,IAAI,CAACkB,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAACd,QAAQ,CAAC;OACvD,MAAM6B,MAAM,GAAGsU,MAAM,CAACC,QAAQ,CAACpW,QAAQ,EAAE,EAAE,CAAC;OAC5C,IAAI,CAACL,IAAI,IAAIjB,2BAAI,CAACqD,SAAS,EAAE,KAAKF,MAAM,EACxC;SACC;;OAGD,IAAIgF,qBAAK,CAACwP,GAAG,CAACC,aAAa,CAACpS,KAAK,CAAC,EAClC;SACCgF,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,QAAQ,CAACC,aAAa,EAAE;WACnDC,WAAW,EAAE5J,IAAI,CAACmF,IAAI;WACtB2E,kBAAkB,EAAE5C,qBAAK,CAAC7D,IAAI,CAAC0G,gBAAgB,CAAC/J,IAAI,CAACZ,EAAE,EAAEY,IAAI,CAACmF,IAAI;UAClE,CAAC;SAEF;;OAGD,IAAI,CAACmR,UAAU,CAACM,QAAQ,CAAC;SAAE5W,IAAI;SAAEiB,MAAM,EAAE,IAAI,CAACA;QAAQ,EAAEsD,KAAK,CAACsS,aAAa,CAAC;MAC5E;KACDZ,yBAAyB,CAACa,SAAsE,EAChG;OACC,MAAM;SAAE1Q,OAAO;SAAE7B;QAAO,GAAGuS,SAAS,CAACC,OAAO,EAAE;OAE9C,MAAMlN,OAAO,GAAG;SAAExJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;SAAE,GAAG+F;QAAS;OACvD,IAAI,CAAC+P,WAAW,CAACS,QAAQ,CAAC/M,OAAO,EAAEtF,KAAK,CAACsS,aAAa,CAAC;OACvD,IAAI,CAAC3B,wBAAwB,GAAG9O,OAAO,CAAChH,EAAE;MAC1C;KACD,MAAM4X,gBAAgB,CAAC5Q,OAAuB,EAAE7B,KAAiB,EACjE;OACC,MAAM2C,qBAAK,CAAC+P,OAAO,CAACC,wBAAwB,EAAE;OAC9C,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,EAAE,CAAC/D,QAAQ,EAAE,CAACjL,IAAI,EAAE;OACzD,IAAI8O,SAAS,CAACjU,MAAM,KAAK,CAAC,IAAI,IAAI,CAACoU,OAAO,EAC1C;SACC;;OAGD,IAAI,CAACxV,KAAK,CAAC,iBAAiB,EAAEsE,OAAO,EAAE7B,KAAK,CAAC;MAC7C;KACDgT,uBAAuB,CAACnR,OAAuB,EAC/C;OACC,OAAQ,IAAIF,uBAAuB,CAACE,OAAO,CAAC,CAAEE,OAAO,EAAE;MACvD;KACD+O,oBAAoB,GACpB;OACC,IAAI,CAAC,IAAI,CAACmC,iBAAiB,EAC3B;SACC,IAAI,CAACA,iBAAiB,GAAG,IAAItG,iBAAiB,CAAC,IAAI,CAAC7Q,QAAQ,CAAC;;OAG9D,OAAO,IAAI,CAACmX,iBAAiB;;IAE9B;GACDlV,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+BZ,CAAC;;;;;;;;"}