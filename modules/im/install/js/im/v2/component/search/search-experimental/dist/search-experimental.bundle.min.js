this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,s,i,r,n,a,o,c,l,h,d,u,m,g,v){"use strict";class p extends c.RecentMenu{getMenuItems(){return[this.getOpenItem(),this.getCallItem(),this.getOpenProfileItem(),this.getChatsWithUserItem()]}}const I={name:"MyNotes",emits:["clickItem"],computed:{dialogId(){return l.Core.getUserId().toString()},name(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_MY_NOTES")}},created(){this.contextMenuManager=new p},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-search-my-notes__container bx-im-search-my-notes__scope"\n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent\n\t\t>\n\t\t\t<div class="bx-im-search-my-notes__avatar"></div>\n\t\t\t<div class="bx-im-search-my-notes__title" :title="name">\n\t\t\t\t{{ name }}\n\t\t\t</div>\n\t\t</div>\n\t`};const E={name:"CarouselUser",components:{Avatar:v.Avatar},props:{userId:{type:Number,required:true}},emits:["clickItem"],computed:{AvatarSize:()=>v.AvatarSize,dialogId(){return this.userId.toString()},user(){return this.$store.getters["users/get"](this.dialogId,true)},name(){var t;return(t=this.user.firstName)!=null?t:this.user.name},isExtranet(){return this.user.extranet}},created(){this.contextMenuManager=new p},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})},onRightClick(t){if(t.altKey&&t.shiftKey){return}const e={dialogId:this.dialogId};h.EventEmitter.emit(u.EventType.search.openContextMenu,{item:e,nativeEvent:t})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-carousel-user__container bx-im-carousel-user__scope"\n\t\t\t:class="{'--extranet': isExtranet}"\n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent="onRightClick"\n\t\t>\n\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t<div class="bx-im-carousel-user__title" :title="name">\n\t\t\t\t{{ name }}\n\t\t\t</div>\n\t\t</div>\n\t`};const y=6;const _={name:"RecentUsersCarousel",components:{CarouselUser:E,MyNotes:I},props:{withMyNotes:{type:Boolean,default:false}},emits:["clickItem"],computed:{users(){const t=[];this.$store.getters["recent/getSortedCollection"].forEach((e=>{if(this.isChat(e.dialogId)){return}const s=this.$store.getters["users/get"](e.dialogId,true);if(s.bot||s.id===l.Core.getUserId()){return}t.push(s)}));return t.map((t=>t.id))},items(){const t=this.withMyNotes?y-1:y;return this.users.slice(0,t)},currentUserId(){return l.Core.getUserId()}},methods:{isChat(t){return t.startsWith("chat")}},template:`\n\t\t<div class="bx-im-recent-users-carousel__container bx-im-recent-users-carousel__scope">\n\t\t\t<div class="bx-im-recent-users-carousel__title-container">\n\t\t\t\t<span class="bx-im-recent-users-carousel__section-title">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SEARCH_EXPERIMENTAL_SECTION_RECENT_CHATS') }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class="bx-im-recent-users-carousel__users-container">\n\t\t\t\t<MyNotes\n\t\t\t\t\tv-if="withMyNotes"\n\t\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t/>\n\t\t\t\t<CarouselUser\n\t\t\t\t\tv-for="userId in items"\n\t\t\t\t\t:key="userId"\n\t\t\t\t\t:userId="userId"\n\t\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const S={name:"SearchExperimentalItem",components:{Avatar:v.Avatar,ChatTitleWithHighlighting:v.ChatTitleWithHighlighting},props:{dialogId:{type:String,required:true},withDate:{type:Boolean,default:false},query:{type:String,default:""}},emits:["clickItem"],computed:{AvatarSize:()=>v.AvatarSize,user(){return this.$store.getters["users/get"](this.dialogId,true)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},recentItem(){return this.$store.getters["recent/get"](this.dialogId)},isChat(){return!this.isUser},isUser(){return this.dialog.type===u.ChatType.user},position(){if(!this.isUser){return""}return this.user.workPosition},userItemText(){if(!this.position){return this.loc("IM_SEARCH_EXPERIMENTAL_ITEM_USER_TYPE_GROUP_V2")}return g.highlightText(d.Text.encode(this.position),this.query)},chatItemText(){if(this.isFoundByUser){return`<span class="--highlight">${this.loc("IM_SEARCH_EXPERIMENTAL_ITEM_FOUND_BY_USER")}</span>`}return this.loc("IM_SEARCH_EXPERIMENTAL_ITEM_CHAT_TYPE_GROUP_V2")},chatItemTextForTitle(){if(this.isFoundByUser){return this.loc("IM_SEARCH_EXPERIMENTAL_ITEM_FOUND_BY_USER")}return this.loc("IM_SEARCH_EXPERIMENTAL_ITEM_CHAT_TYPE_GROUP_V2")},itemText(){return this.isUser?this.userItemText:this.chatItemText},itemTextForTitle(){return this.isUser?this.position:this.chatItemTextForTitle},formattedDate(){if(!this.recentItem.message.date){return""}return this.formatDate(this.recentItem.message.date)},isFoundByUser(){const t=this.$store.getters["recent/search/get"](this.dialogId);if(!t){return false}return Boolean(t.foundByUser)}},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})},onRightClick(t){if(t.altKey&&t.shiftKey){return}const e={dialogId:this.dialogId};h.EventEmitter.emit(u.EventType.search.openContextMenu,{item:e,nativeEvent:t})},formatDate(t){return m.DateFormatter.formatByTemplate(t,m.DateTemplate.recent)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div \n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent="onRightClick" \n\t\t\tclass="bx-im-search-experimental-item__container bx-im-search-experimental-item__scope"\n\t\t>\n\t\t\t<div class="bx-im-search-experimental-item__avatar-container">\n\t\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-search-experimental-item__content-container">\n\t\t\t\t<div class="bx-im-search-experimental-item__content_header">\n\t\t\t\t\t<ChatTitleWithHighlighting :dialogId="dialogId" :textToHighlight="query" />\n\t\t\t\t\t<div v-if="withDate && formattedDate.length > 0" class="bx-im-search-experimental-item__date">\n\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-search-experimental-item__item-text" :title="itemTextForTitle" v-html="itemText"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const x={name:"LatestSearchResult",components:{RecentUsersCarousel:_,SearchExperimentalItem:S,Loader:v.Loader},props:{dialogIds:{type:Array,default:()=>[]},isLoading:{type:Boolean,default:false},withMyNotes:{type:Boolean,default:false}},emits:["clickItem"],computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_SECTION_RECENT")}},template:`\n\t\t<div class="bx-im-latest-search-result__scope">\n\t\t\t<RecentUsersCarousel :withMyNotes="withMyNotes" @clickItem="$emit('clickItem', $event)" />\n\t\t\t<div class="bx-im-latest-search-result__title">{{ title }}</div>\n\t\t\t<SearchExperimentalItem\n\t\t\t\tv-for="dialogId in dialogIds"\n\t\t\t\t:key="dialogId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-latest-search-result__loader" />\n\t\t</div>\n\t`};const f={name:"EmptyState",computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_RESULT_NOT_FOUND")},subTitle(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_RESULT_NOT_FOUND_DESCRIPTION")}},template:`\n\t\t<div class="bx-im-search-experimental-empty-state__container bx-im-search-experimental-empty-state__scope">\n\t\t\t<div class="bx-im-search-experimental-empty-state__icon"></div>\n\t\t\t<div class="bx-im-search-experimental-empty-state__title">\n\t\t\t\t{{ title }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-search-experimental-empty-state__subtitle">\n\t\t\t\t{{ subTitle }}\n\t\t\t</div>\n\t\t</div>\n\t`};const M={name:"SearchExperimentalResult",components:{SearchExperimentalItem:S,EmptyState:f,Loader:v.Loader},props:{dialogIds:{type:Array,default:()=>[]},isLoading:{type:Boolean,default:false},query:{type:String,default:""}},emits:["clickItem"],computed:{isEmptyState(){return this.dialogIds.length===0}},template:`\n\t\t<div class="bx-im-search-experimental-result__scope">\n\t\t\t<SearchExperimentalItem\n\t\t\t\tv-for="dialogId in dialogIds"\n\t\t\t\t:key="dialogId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:withDate="true"\n\t\t\t\t:query="query"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t/>\n\t\t\t<EmptyState v-if="isEmptyState" />\n\t\t</div>\n\t`};const C={name:"SearchExperimental",components:{ScrollWithGradient:v.ScrollWithGradient,LatestSearchResult:x,SearchExperimentalResult:M},props:{searchQuery:{type:String,default:""},searchMode:{type:Boolean,required:true},handleClickItem:{type:Boolean,default:true},withMyNotes:{type:Boolean,default:false}},data(){return{isRecentLoading:false,isServerLoading:false,queryWasDeleted:false,currentServerQueries:0,result:{recent:[],usersAndChats:[]}}},computed:{cleanQuery(){return this.searchQuery.trim().toLowerCase()},showLatestSearchResult(){return this.cleanQuery.length===0}},watch:{cleanQuery(t,e){if(t.length>0){this.queryWasDeleted=false}if(t.length===0){this.searchService.clearSessionResult()}if(t===e){return}this.startSearch(t)},isServerLoading(t){this.$emit("loading",t)}},created(){this.initSettings();this.contextMenuManager=new p;this.findByParticipants=a.LocalStorageManager.getInstance().get(u.LocalStorageKey.findByParticipants,false);this.searchService=new o.SearchService({findByParticipants:this.findByParticipants});this.searchOnServerDelayed=d.Runtime.debounce(this.searchOnServer,400,this);h.EventEmitter.subscribe(u.EventType.search.openContextMenu,this.onOpenContextMenu);h.EventEmitter.subscribe(u.EventType.dialog.errors.accessDenied,this.onDelete);h.EventEmitter.subscribe(u.EventType.search.keyPressed,this.onKeyPressed);this.loadRecentSearchFromServer()},beforeUnmount(){this.contextMenuManager.destroy();h.EventEmitter.unsubscribe(u.EventType.search.openContextMenu,this.onOpenContextMenu);h.EventEmitter.unsubscribe(u.EventType.dialog.errors.accessDenied,this.onDelete);h.EventEmitter.unsubscribe(u.EventType.search.keyPressed,this.onKeyPressed)},methods:{loadRecentSearchFromServer(){this.isRecentLoading=true;this.searchService.loadLatestResults().then((t=>{this.result.recent=t;this.isRecentLoading=false})).catch((t=>{n.Logger.error("SearchExperimental: loadRecentSearchFromServer",t)}))},initSettings(){const t=d.Extension.getSettings("im.v2.component.search.search-result");const e=3;this.minTokenSize=t.get("minTokenSize",e)},startSearch(t){if(!this.findByParticipants&&t.length>0){this.searchService.searchLocal(t).then((e=>{if(t!==this.cleanQuery){return}this.result.usersAndChats=this.searchService.sortByDate(e)})).catch((t=>{n.Logger.error("SearchExperimental: startSearch",t)}))}if(t.length>=this.minTokenSize){this.isServerLoading=true;this.searchOnServerDelayed(t)}if(t.length===0){this.cleanSearchResult()}},cleanSearchResult(){this.result.usersAndChats=[]},searchOnServer(t){this.currentServerQueries++;this.searchService.searchOnServer(t).then((e=>{if(t!==this.cleanQuery){this.stopLoader();return}if(this.findByParticipants){this.result.usersAndChats=this.searchService.sortByDate(e)}else{const t=this.mergeResults(this.result.usersAndChats,e);this.result.usersAndChats=this.searchService.sortByDate(t)}})).catch((t=>{console.error(t)})).finally((()=>{this.currentServerQueries--;this.stopLoader()}))},stopLoader(){if(this.currentServerQueries>0){return}this.isServerLoading=false},onOpenContextMenu(t){const{item:e,nativeEvent:s}=t.getData();const i=this.$store.getters["recent/get"](e.dialogId);if(r.Utils.key.isAltOrOption(s)){return}this.contextMenuManager.openMenu(i,s.currentTarget)},onDelete({data:t}){const{dialogId:e}=t;this.result.recent=this.result.recent.filter((t=>t!==e));this.result.usersAndChats=this.result.usersAndChats.filter((t=>t!==e))},onScroll(t){this.$emit("scroll",t);this.contextMenuManager.destroy()},onClickItem(t){const{dialogId:e,nativeEvent:s}=t;if(!this.searchMode){return}this.searchService.addItemToRecent(e).then((()=>{this.loadRecentSearchFromServer()})).catch((t=>{n.Logger.error("SearchExperimental.onClickItem: addItemToRecent",t)}));i.Messenger.openChat(e);if(!this.handleClickItem){this.$emit("clickItem",t);return}if(!r.Utils.key.isAltOrOption(s)){h.EventEmitter.emit(u.EventType.search.close)}},onKeyPressed(t){const{keyboardEvent:e}=t.getData();if(r.Utils.key.isCombination(e,"Enter")){this.onPressEnterKey(t)}if(r.Utils.key.isCombination(e,"Backspace")){this.onPressBackspaceKey()}},onPressEnterKey(t){const e=this.getFirstItemFromSearchResults();if(!e){return}this.onClickItem({dialogId:e,nativeEvent:t})},onPressBackspaceKey(){if(this.searchQuery.length>0){this.queryWasDeleted=false;return}if(!this.queryWasDeleted){this.queryWasDeleted=true;return}if(this.queryWasDeleted){h.EventEmitter.emit(u.EventType.search.close)}},getFirstItemFromSearchResults(){if(this.showLatestSearchResult&&this.result.recent.length>0){return this.result.recent[0]}if(this.result.usersAndChats.length>0){return this.result.usersAndChats[0]}return null},mergeResults(t,e){e.forEach((e=>{if(!t.includes(e)){t.push(e)}}));return t}},template:`\n\t\t<ScrollWithGradient :gradientHeight="28" :withShadow="false" @scroll="onScroll"> \n\t\t\t<div class="bx-im-search-experimental__container bx-im-search-experimental__scope">\n\t\t\t\t<LatestSearchResult\n\t\t\t\t\tv-if="showLatestSearchResult"\n\t\t\t\t\t:dialogIds="result.recent"\n\t\t\t\t\t:isLoading="isRecentLoading"\n\t\t\t\t\t:withMyNotes="withMyNotes"\n\t\t\t\t\t@clickItem="onClickItem"\n\t\t\t\t/>\n\t\t\t\t<SearchExperimentalResult\n\t\t\t\t\tv-else\n\t\t\t\t\t:dialogIds="result.usersAndChats"\n\t\t\t\t\t:isLoading="isServerLoading"\n\t\t\t\t\t:query="cleanQuery"\n\t\t\t\t\t@clickItem="onClickItem"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</ScrollWithGradient> \n\t`};t.SearchExperimental=C})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Event,BX,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=search-experimental.bundle.map.js