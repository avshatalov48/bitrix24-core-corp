this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,s,r,i,n,a,c,o,l,h,d,u,m,g,v){"use strict";class p extends o.RecentMenu{getMenuItems(){return[this.getOpenItem(),this.getCallItem(),this.getOpenProfileItem()]}}const I={name:"CarouselUser",components:{Avatar:v.Avatar},props:{userId:{type:Number,required:true}},emits:["clickItem"],computed:{AvatarSize:()=>v.AvatarSize,dialogId(){return this.userId.toString()},user(){return this.$store.getters["users/get"](this.dialogId,true)},name(){var t;return(t=this.user.firstName)!=null?t:this.user.name},isExtranet(){return this.user.extranet}},created(){this.contextMenuManager=new p},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})},onRightClick(t){if(t.altKey&&t.shiftKey){return}const e={dialogId:this.dialogId};h.EventEmitter.emit(u.EventType.search.openContextMenu,{item:e,nativeEvent:t})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-carousel-user__container bx-im-carousel-user__scope"\n\t\t\t:class="{'--extranet': isExtranet}"\n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent="onRightClick"\n\t\t>\n\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t<div class="bx-im-carousel-user__title" :title="name">\n\t\t\t\t{{ name }}\n\t\t\t</div>\n\t\t</div>\n\t`};const E=6;const S={name:"RecentUsersCarousel",components:{CarouselUser:I},emits:["clickItem"],computed:{users(){const t=[];this.$store.getters["recent/getSortedCollection"].forEach((e=>{if(this.isChat(e.dialogId)){return}const s=this.$store.getters["users/get"](e.dialogId,true);t.push(s)}));return t.filter((t=>!t.bot&&t.id!==l.Core.getUserId())).slice(0,E)}},methods:{isChat(t){return t.startsWith("chat")}},template:`\n\t\t<div class="bx-im-recent-users-carousel__container bx-im-recent-users-carousel__scope">\n\t\t\t<div class="bx-im-recent-users-carousel__title-container">\n\t\t\t\t<span class="bx-im-recent-users-carousel__section-title">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SEARCH_EXPERIMENTAL_SECTION_RECENT_CHATS') }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class="bx-im-recent-users-carousel__users-container">\n\t\t\t\t<CarouselUser \n\t\t\t\t\tv-for="user in users"\n\t\t\t\t\t:key="user.id"\n\t\t\t\t\t:userId="user.id"\n\t\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const x={name:"SearchExperimentalItem",components:{Avatar:v.Avatar,ChatTitleWithHighlighting:v.ChatTitleWithHighlighting},props:{dialogId:{type:String,required:true},withDate:{type:Boolean,default:false},query:{type:String,default:""}},emits:["clickItem"],computed:{AvatarSize:()=>v.AvatarSize,user(){return this.$store.getters["users/get"](this.dialogId,true)},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},recentItem(){return this.$store.getters["recent/get"](this.dialogId)},isChat(){return!this.isUser},isUser(){return this.dialog.type===u.DialogType.user},position(){if(!this.isUser){return""}return this.user.workPosition},userItemText(){if(!this.position){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_ITEM_USER_TYPE_GROUP_V2")}return g.highlightText(d.Text.encode(this.position),this.query)},chatItemText(){if(this.isUser){return""}return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_ITEM_CHAT_TYPE_GROUP_V2")},itemText(){return this.isUser?this.userItemText:this.chatItemText},itemTextForTitle(){return this.isUser?this.position:this.chatItemText},formattedDate(){if(!this.recentItem.dateUpdate){return""}return this.formatDate(this.recentItem.dateUpdate)}},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})},onRightClick(t){if(t.altKey&&t.shiftKey){return}const e={dialogId:this.dialogId};h.EventEmitter.emit(u.EventType.search.openContextMenu,{item:e,nativeEvent:t})},formatDate(t){return m.DateFormatter.formatByTemplate(t,m.DateTemplate.recent)}},template:`\n\t\t<div \n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent="onRightClick" \n\t\t\tclass="bx-im-search-experimental-item__container bx-im-search-experimental-item__scope"\n\t\t>\n\t\t\t<div class="bx-im-search-experimental-item__avatar-container">\n\t\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-search-experimental-item__content-container">\n\t\t\t\t<div class="bx-im-search-experimental-item__content_header">\n\t\t\t\t\t<ChatTitleWithHighlighting :dialogId="dialogId" :textToHighlight="query" />\n\t\t\t\t\t<div v-if="withDate && formattedDate.length > 0" class="bx-im-search-experimental-item__date">\n\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-search-experimental-item__item-text" :title="itemTextForTitle" v-html="itemText"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const _={name:"LatestSearchResult",components:{RecentUsersCarousel:S,SearchExperimentalItem:x,Loader:v.Loader},props:{dialogIds:{type:Array,default:()=>[]},isLoading:{type:Boolean,default:false}},emits:["clickItem"],computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_SECTION_RECENT")}},template:`\n\t\t<div class="bx-im-latest-search-result__scope">\n\t\t\t<RecentUsersCarousel @clickItem="$emit('clickItem', $event)" />\n\t\t\t<div class="bx-im-latest-search-result__title">{{ title }}</div>\n\t\t\t<SearchExperimentalItem\n\t\t\t\tv-for="dialogId in dialogIds"\n\t\t\t\t:key="dialogId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-latest-search-result__loader" />\n\t\t</div>\n\t`};const y={name:"EmptyState",computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_RESULT_NOT_FOUND")},subTitle(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_EXPERIMENTAL_RESULT_NOT_FOUND_DESCRIPTION")}},template:`\n\t\t<div class="bx-im-search-experimental-empty-state__container bx-im-search-experimental-empty-state__scope">\n\t\t\t<div class="bx-im-search-experimental-empty-state__icon"></div>\n\t\t\t<div class="bx-im-search-experimental-empty-state__title">\n\t\t\t\t{{ title }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-search-experimental-empty-state__subtitle">\n\t\t\t\t{{ subTitle }}\n\t\t\t</div>\n\t\t</div>\n\t`};const f={name:"SearchExperimentalResult",components:{SearchExperimentalItem:x,EmptyState:y,Loader:v.Loader},props:{dialogIds:{type:Array,default:()=>[]},isLoading:{type:Boolean,default:false},query:{type:String,default:""}},emits:["clickItem"],computed:{isEmptyState(){if(this.isLoading){return false}return this.dialogIds.length===0}},template:`\n\t\t<div class="bx-im-search-experimental-result__scope">\n\t\t\t<SearchExperimentalItem\n\t\t\t\tv-for="dialogId in dialogIds"\n\t\t\t\t:key="dialogId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:withDate="true"\n\t\t\t\t:query="query"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t/>\n\t\t\t<EmptyState v-if="isEmptyState" />\n\t\t\t<Loader v-if="isLoading" class="bx-im-search-experimental-result__loader" />\n\t\t</div>\n\t`};const C={name:"SearchExperimental",components:{LatestSearchResult:_,SearchExperimentalResult:f},props:{searchQuery:{type:String,default:""},searchMode:{type:Boolean,required:true}},data(){return{isRecentLoading:false,isServerLoading:false,currentServerQueries:0,result:{recent:[],usersAndChats:[]}}},computed:{cleanQuery(){return this.searchQuery.trim().toLowerCase()},showLatestSearchResult(){return this.cleanQuery.length===0}},watch:{cleanQuery(t,e){if(t.length===0){this.searchService.clearSessionResult()}if(t===e){return}this.startSearch(t)}},created(){this.initSettings();this.contextMenuManager=new p;this.searchService=new c.SearchService;this.searchOnServerDelayed=d.Runtime.debounce(this.searchOnServer,400,this);h.EventEmitter.subscribe(u.EventType.search.openContextMenu,this.onOpenContextMenu);h.EventEmitter.subscribe(u.EventType.dialog.errors.accessDenied,this.onDelete);h.EventEmitter.subscribe(u.EventType.search.keyPressed,this.onPressEnterKey);this.loadRecentSearchFromServer()},beforeUnmount(){this.contextMenuManager.destroy();h.EventEmitter.unsubscribe(u.EventType.search.openContextMenu,this.onOpenContextMenu);h.EventEmitter.unsubscribe(u.EventType.dialog.errors.accessDenied,this.onDelete);h.EventEmitter.unsubscribe(u.EventType.search.keyPressed,this.onPressEnterKey)},methods:{loadRecentSearchFromServer(){this.isRecentLoading=true;this.searchService.loadLatestResults().then((t=>{this.result.recent=t;this.isRecentLoading=false})).catch((t=>{a.Logger.error("SearchExperimental: loadRecentSearchFromServer",t)}))},initSettings(){const t=d.Extension.getSettings("im.v2.component.search.search-result");const e=3;this.minTokenSize=t.get("minTokenSize",e)},startSearch(t){if(t.length>0){this.searchService.searchLocal(t).then((e=>{if(t!==this.cleanQuery){return}this.result.usersAndChats=this.searchService.sortByDate(e)})).catch((t=>{a.Logger.error("SearchExperimental: startSearch",t)}))}if(t.length>=this.minTokenSize){this.isServerLoading=true;this.searchOnServerDelayed(t)}if(t.length===0){this.cleanSearchResult()}},cleanSearchResult(){this.result.usersAndChats=[]},searchOnServer(t){this.currentServerQueries++;this.searchService.searchOnServer(t).then((e=>{if(t!==this.cleanQuery){this.stopLoader();return}const s=this.mergeResults(this.result.usersAndChats,e);this.result.usersAndChats=this.searchService.sortByDate(s)})).catch((t=>{console.error(t)})).finally((()=>{this.currentServerQueries--;this.stopLoader()}))},stopLoader(){if(this.currentServerQueries>0){return}this.isServerLoading=false},mergeResults(t,e){e.forEach((e=>{if(!t.includes(e)){t.push(e)}}));return t},onOpenContextMenu(t){const{item:e,nativeEvent:s}=t.getData();const r=this.$store.getters["recent/get"](e.dialogId);if(n.Utils.key.isAltOrOption(s)){return}this.contextMenuManager.openMenu(r,s.currentTarget)},onDelete({data:t}){const{dialogId:e}=t;this.result.recent=this.result.recent.filter((t=>t!==e));this.result.usersAndChats=this.result.usersAndChats.filter((t=>t!==e))},onScroll(t){this.$emit("scroll",t);this.contextMenuManager.destroy()},onClickItem(t){const{dialogId:e,nativeEvent:s}=t;if(!this.searchMode){return}this.searchService.addItemToRecent(e).then((()=>{this.loadRecentSearchFromServer()})).catch((t=>{a.Logger.error("SearchExperimental.onClickItem: addItemToRecent",t)}));if(n.Utils.key.isCmdOrCtrl(s)){i.MessengerSlider.getInstance().openNewTab(u.PathPlaceholder.dialog.replace("#DIALOG_ID#",e))}else{r.Messenger.openChat(e)}if(!n.Utils.key.isAltOrOption(s)){h.EventEmitter.emit(u.EventType.search.close)}},onPressEnterKey(t){const{keyboardEvent:e}=t.getData();if(!n.Utils.key.isCombination(e,"Enter")){return}const s=this.getFirstItemFromSearchResults();if(!s){return}this.onClickItem({dialogId:s,nativeEvent:e})},getFirstItemFromSearchResults(){if(this.showLatestSearchResult&&this.result.recent.length>0){return this.result.recent[0]}if(this.result.usersAndChats.length>0){return this.result.usersAndChats[0]}return null}},template:`\n\t\t<div class="bx-im-search-experimental__container bx-im-search-experimental__scope" @scroll="onScroll">\n\t\t\t<LatestSearchResult \n\t\t\t\tv-if="showLatestSearchResult" \n\t\t\t\t:dialogIds="result.recent" \n\t\t\t\t:isLoading="isRecentLoading" \n\t\t\t\t@clickItem="onClickItem" \n\t\t\t/>\n\t\t\t<SearchExperimentalResult \n\t\t\t\tv-else \n\t\t\t\t:dialogIds="result.usersAndChats" \n\t\t\t\t:isLoading="isServerLoading"\n\t\t\t\t:query="cleanQuery"\n\t\t\t\t@clickItem="onClickItem"\n\t\t\t/>\n\t\t</div>\n\t`};t.SearchExperimental=C})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Event,BX,BX.Messenger.v2.Const,BX.Im.V2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=search-experimental.bundle.map.js