this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,n,r){"use strict";const h={components:{OpenlineList:t.OpenlineList,SearchInput:s.SearchInput,SearchResult:n.SearchResult},emits:["selectEntity"],data(){return{searchMode:false,searchQuery:""}},created(){r.Logger.warn("List: Openline container created")},methods:{onChatClick(e){this.$emit("selectEntity",{layoutName:"openline",entityId:e})},onOpenSearch(){this.searchMode=true},onCloseSearch(){this.searchMode=false;this.searchQuery=""},onUpdateSearch(e){this.searchQuery=e}},template:`\n\t\t<SearchInput @openSearch="onOpenSearch" @closeSearch="onCloseSearch" @updateSearch="onUpdateSearch" />\n\t\t<SearchResult v-if="searchMode" :searchQuery="searchQuery" />\n\t\t<OpenlineList v-else @chatClick="onChatClick" />\n\t`};e.OpenlineListContainer=h})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Messenger.v2.Component.List,BX,BX,BX.Messenger.v2.Lib);
//# sourceMappingURL=openline-container.bundle.map.js