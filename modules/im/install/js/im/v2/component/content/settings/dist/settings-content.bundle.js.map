{"version":3,"file":"settings-content.bundle.js","sources":["../src/sections.js","../src/components/section-list.js","../src/components/blocks/background.js","../src/components/blocks/alignment.js","../src/components/sections/classes/demo-manager.js","../src/components/sections/appearance.js","../src/components/elements/checkbox.js","../src/components/sections/notification.js","../src/components/elements/radio.js","../src/components/sections/hotkey.js","../src/components/sections/recent.js","../src/components/sections/desktop.js","../src/components/section-content.js","../src/settings-content.js"],"sourcesContent":["import { Loc } from 'main.core';\n\nexport const SectionMetaData = {\n\tappearance: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_APPEARANCE'),\n\t\ticon: 'fa-solid fa-brush',\n\t},\n\tnotification: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_NOTIFICATION'),\n\t\ticon: 'fa-solid fa-bell',\n\t},\n\thotkey: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_HOTKEY'),\n\t\ticon: 'fa-solid fa-keyboard',\n\t},\n\tmessage: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_MESSAGE'),\n\t\ticon: 'fa-solid fa-message',\n\t},\n\trecent: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_RECENT'),\n\t\ticon: 'fa-solid fa-list-ul',\n\t},\n\tdesktop: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_DESKTOP'),\n\t\ticon: 'fa-solid fa-desktop',\n\t},\n\thelp: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_HELP'),\n\t\ticon: 'fa-solid fa-question',\n\t},\n\tfeedback: {\n\t\tname: Loc.getMessage('IM_CONTENT_SETTINGS_SECTION_LIST_FEEDBACK'),\n\t\ticon: 'fa-solid fa-comment',\n\t},\n};\n","import { Settings, SettingsSection } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nimport { SectionMetaData } from '../sections';\n\nimport 'ui.feedback.form';\nimport '../css/section-list.css';\n\nconst AdditionalSections = {\n\thelp: 'help',\n\tfeedback: 'feedback',\n};\n\n// @vue/component\nexport const SectionList = {\n\tname: 'SectionList',\n\tprops:\n\t{\n\t\tactiveSection: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['sectionClick'],\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tAdditionalSections: () => AdditionalSections,\n\t\tdisabledSections(): Set<string>\n\t\t{\n\t\t\tconst disabledSections = new Set([SettingsSection.message]);\n\t\t\tif (!DesktopApi.isDesktop())\n\t\t\t{\n\t\t\t\tdisabledSections.add(SettingsSection.desktop);\n\t\t\t}\n\n\t\t\treturn disabledSections;\n\t\t},\n\t\tsections(): string[]\n\t\t{\n\t\t\treturn Object.keys(Settings).filter((section) => {\n\t\t\t\treturn !this.disabledSections.has(section);\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tgetSectionName(section: string): string\n\t\t{\n\t\t\treturn SectionMetaData[section].name;\n\t\t},\n\t\tgetSectionIconClass(section: string): string\n\t\t{\n\t\t\treturn SectionMetaData[section].icon;\n\t\t},\n\t\tonHelpClick()\n\t\t{\n\t\t\tconst ARTICLE_CODE = '17373696';\n\t\t\tBX.Helper?.show(`redirect=detail&code=${ARTICLE_CODE}`);\n\t\t},\n\t\tonFeedbackClick()\n\t\t{\n\t\t\tBX.UI.Feedback.Form.open({\n\t\t\t\tid: 'im-v2-feedback',\n\t\t\t\tforms: [\n\t\t\t\t\t{ zones: ['ru'], id: 550, sec: '50my2x', lang: 'ru' },\n\t\t\t\t\t{ zones: ['en'], id: 560, sec: '621lbr', lang: 'ru' },\n\t\t\t\t],\n\t\t\t\tpresets: {\n\t\t\t\t\tsender_page: 'profile',\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-list__container\">\n\t\t\t<div class=\"bx-im-settings-section-list__title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_SECTION_LIST_TITLE') }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-for=\"section in sections\"\n\t\t\t\t:key=\"section\"\n\t\t\t\tclass=\"bx-im-settings-section-list__item\"\n\t\t\t\t:class=\"{'--active': section === activeSection}\"\n\t\t\t\t@click=\"$emit('sectionClick', section)\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_icon\">\n\t\t\t\t\t<i :class=\"getSectionIconClass(section)\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_title\">{{ getSectionName(section) }}</div>\n\t\t\t</div>\n\t\t\t<!-- Help -->\n\t\t\t<div\n\t\t\t\tclass=\"bx-im-settings-section-list__item\"\n\t\t\t\t@click=\"onHelpClick\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_icon\">\n\t\t\t\t\t<i :class=\"getSectionIconClass(AdditionalSections.help)\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_title\">{{ getSectionName(AdditionalSections.help) }}</div>\n\t\t\t</div>\n\t\t\t<!-- Feedback -->\n\t\t\t<div\n\t\t\t\tclass=\"bx-im-settings-section-list__item\"\n\t\t\t\t@click=\"onFeedbackClick\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_icon\">\n\t\t\t\t\t<i :class=\"getSectionIconClass(AdditionalSections.feedback)\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-list__item_title\">{{ getSectionName(AdditionalSections.feedback) }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { ThemeColorScheme, ThemeManager, type BackgroundStyle } from 'im.v2.lib.theme';\nimport { SettingsService } from 'im.v2.provider.service';\n\nimport './css/background.css';\n\n// @vue/component\nexport const ChatBackground = {\n\tname: 'ChatBackground',\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tcurrentBackgroundId(): string\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.appearance.background).toString();\n\t\t},\n\t\tbackgroundIdList(): string[]\n\t\t{\n\t\t\treturn Object.keys(ThemeColorScheme);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tgetBackgroundStyleById(backgroundId: string): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(backgroundId);\n\t\t},\n\t\tonBackgroundClick(backgroundId: string)\n\t\t{\n\t\t\tconst preparedBackgroundId = Number.parseInt(backgroundId, 10);\n\t\t\tconst settingsService = new SettingsService();\n\t\t\tsettingsService.changeSetting(Settings.appearance.background, preparedBackgroundId);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-background__container\">\n\t\t\t<div class=\"bx-im-settings-background__list\">\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"id in backgroundIdList\"\n\t\t\t\t\t:key=\"id\"\n\t\t\t\t\t:style=\"getBackgroundStyleById(id)\"\n\t\t\t\t\tclass=\"bx-im-background-select-popup__item bx-im-settings-background__item\"\n\t\t\t\t\t:class=\"{'--active': id === currentBackgroundId}\"\n\t\t\t\t\t@click=\"onBackgroundClick(id)\"\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Settings, DialogAlignment } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service';\nimport { ThemeManager, BackgroundStyle } from 'im.v2.lib.theme';\n\nimport './css/alignment.css';\n\ntype AlignmentItem = $Keys<typeof DialogAlignment>;\n\n// @vue/component\nexport const ChatAlignment = {\n\tname: 'ChatAlignment',\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tDialogAlignment: () => DialogAlignment,\n\t\tcurrentOptionId(): AlignmentItem\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.appearance.alignment);\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonOptionClick(optionId: AlignmentItem)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.appearance.alignment, optionId);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-alignment__container\">\n\t\t\t<div class=\"bx-im-settings-alignment__list\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx-im-settings-alignment__item --left\"\n\t\t\t\t\t:class=\"{'--active': currentOptionId === DialogAlignment.left}\"\n\t\t\t\t\t:style=\"backgroundStyle\"\n\t\t\t\t\t@click=\"onOptionClick(DialogAlignment.left)\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"bx-im-settings-alignment__item_content\"></div>\n\t\t\t\t\t<div v-if=\"currentOptionId === DialogAlignment.left\" class=\"bx-im-settings-alignment__item_checkmark\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bx-im-settings-alignment__item --center\"\n\t\t\t\t\t:class=\"{'--active': currentOptionId === DialogAlignment.center}\"\n\t\t\t\t\t:style=\"backgroundStyle\"\n\t\t\t\t\t@click=\"onOptionClick(DialogAlignment.center)\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"bx-im-settings-alignment__item_content\"></div>\n\t\t\t\t\t<div v-if=\"currentOptionId === DialogAlignment.center\" class=\"bx-im-settings-alignment__item_checkmark\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\nimport { DialogType, UserRole } from 'im.v2.const';\n\nconst DEMO_DIALOG_ID = 'settings';\nconst demoChat = {\n\tdialogId: DEMO_DIALOG_ID,\n\tchatId: -1,\n\ttype: DialogType.chat,\n\tinited: true,\n\trole: UserRole.guest,\n};\n\nconst demoUser = {\n\tid: -1,\n\tname: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_USER_NAME'),\n};\n\nconst demoMessage1 = {\n\tid: -3,\n\tchatId: demoChat.chatId,\n\tauthorId: demoUser.id,\n\ttext: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_MESSAGE_1'),\n\tviewedByOthers: true,\n};\nconst demoMessage2 = {\n\tid: -2,\n\tchatId: demoChat.chatId,\n\tauthorId: Core.getUserId(),\n\treplyId: demoMessage1.id,\n\ttext: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_MESSAGE_2'),\n\tviewedByOthers: true,\n};\nconst demoMessage3 = {\n\tid: -1,\n\tchatId: demoChat.chatId,\n\tauthorId: demoUser.id,\n\ttext: Loc.getMessage('IM_CONTENT_SETTINGS_DEMO_CHAT_MESSAGE_3'),\n\tviewedByOthers: true,\n};\n\nexport const DemoManager = {\n\tinitModels()\n\t{\n\t\tCore.getStore().dispatch('dialogues/set', demoChat);\n\n\t\tconst userManager = new UserManager();\n\t\tuserManager.addUsersToModel([demoUser]);\n\n\t\tconst messages = [demoMessage1, demoMessage2, demoMessage3];\n\t\tCore.getStore().dispatch('messages/setChatCollection', { messages });\n\t},\n};\n","import { ChatDialog } from 'im.v2.component.dialog.chat';\nimport { Settings } from 'im.v2.const';\nimport { ThemeManager } from 'im.v2.lib.theme';\n\nimport { ChatBackground } from '../blocks/background';\nimport { ChatAlignment } from '../blocks/alignment';\nimport { DemoManager } from './classes/demo-manager';\n\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\nimport './css/appearance.css';\n\n// @vue/component\nexport const AppearanceSection = {\n\tname: 'AppearanceSection',\n\tcomponents: { ChatDialog, ChatBackground, ChatAlignment },\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tcontainerClasses(): string[]\n\t\t{\n\t\t\tconst alignment = this.$store.getters['application/settings/get'](Settings.appearance.alignment);\n\n\t\t\treturn [`--${alignment}-align`];\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tDemoManager.initModels();\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-content-chat__container bx-im-settings-appearance__demo-chat_container\" :class=\"containerClasses\" :style=\"backgroundStyle\">\n\t\t\t\t<ChatDialog :dialogId=\"'settings'\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_APPEARANCE_BACKGROUND') }}\n\t\t\t</div>\n\t\t\t<ChatBackground />\n\t\t</div>\n\t\t<div class=\"bx-im-settings-section-content__separator\"></div>\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_APPEARANCE_ALIGNMENT') }}\n\t\t\t</div>\n\t\t\t<ChatAlignment />\n\t\t</div>\n\t`,\n};\n","import 'ui.forms';\n\nimport './css/checkbox.css';\n\n// @vue/component\nexport const CheckboxOption = {\n\tname: 'CheckboxOption',\n\tprops:\n\t{\n\t\tvalue: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['change'],\n\tdata()\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tonInput(event: Event)\n\t\t{\n\t\t\tthis.$emit('change', event.target.checked);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-checkbox__container bx-im-settings-section-content__block_option\">\n\t\t\t<label class=\"ui-ctl ui-ctl-checkbox\">\n\t\t\t\t<input type=\"checkbox\" :checked=\"value\" @input=\"onInput\" class=\"ui-ctl-element\">\n\t\t\t\t<div class=\"ui-ctl-label-text\">{{ text }}</div>\n\t\t\t</label>\n\t\t</div>\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service';\n\nimport { CheckboxOption } from '../elements/checkbox';\n\n// @vue/component\nexport const NotificationSection = {\n\tname: 'NotificationSection',\n\tcomponents: { CheckboxOption },\n\tdata()\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tenableSound(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.notification.enableSound);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonEnableSoundChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.notification.enableSound, newValue);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_BLOCK_SOUND') }}\n\t\t\t</div>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"enableSound\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_NOTIFICATION_ENABLE_SOUND')\"\n\t\t\t\t@change=\"onEnableSoundChange\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Text } from 'main.core';\n\nimport './css/radio.css';\n\nexport type RadioOptionItem = {\n\tvalue: OptionValue,\n\ttext: string,\n\tselected: boolean,\n\tsubtext?: string,\n\thtml?: boolean,\n};\n\ntype OptionValue = string | number | boolean;\n\n// @vue/component\nexport const RadioOption = {\n\tname: 'RadioOption',\n\tprops:\n\t{\n\t\titems: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['change'],\n\tdata(): { groupName: string }\n\t{\n\t\treturn {\n\t\t\tgroupName: Text.getRandom(),\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\toptions(): RadioOptionItem[]\n\t\t{\n\t\t\treturn this.items;\n\t\t},\n\t\tselectedValue(): OptionValue\n\t\t{\n\t\t\treturn this.options.find((option) => {\n\t\t\t\treturn option.selected === true;\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonInput(option: RadioOptionItem)\n\t\t{\n\t\t\tthis.$emit('change', option.value);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-radio__container bx-im-settings-section-content__block_option\">\n\t\t\t<label v-for=\"option in options\" class=\"ui-ctl ui-ctl-radio\">\n\t\t\t\t<input type=\"radio\" class=\"ui-ctl-element\" :name=\"groupName\" :checked=\"option.selected\" @input=\"onInput(option)\">\n\t\t\t\t<div class=\"bx-im-settings-radio__label ui-ctl-label-text\">\n\t\t\t\t\t<!-- Text -->\n\t\t\t\t\t<div v-if=\"option.html\" class=\"bx-im-settings-radio__label_title\" v-html=\"option.text\"></div>\n\t\t\t\t\t<div v-else class=\"bx-im-settings-radio__label_title\">{{ option.text }}</div>\n\t\t\t\t\t<!-- Subtext -->\n\t\t\t\t\t<template v-if=\"option.subtext\">\n\t\t\t\t\t\t<div v-if=\"option.html\" class=\"bx-im-settings-radio__label_subtitle\" v-html=\"option.subtext\"></div>\n\t\t\t\t\t\t<div v-else class=\"bx-im-settings-radio__label_subtitle\">{{ option.subtext }}</div>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t</div>\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { RadioOption, type RadioOptionItem } from '../elements/radio';\n\n// @vue/component\nexport const HotkeySection = {\n\tname: 'HotkeySection',\n\tcomponents: { RadioOption },\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tsendByEnter(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.hotkey.sendByEnter);\n\t\t},\n\t\tsendCombinationItems(): RadioOptionItem[]\n\t\t{\n\t\t\tconst ctrlKey = Utils.platform.isMac() ? '&#8984;' : 'Ctrl';\n\t\t\tconst enterSubtext = this.loc('IM_CONTENT_SETTINGS_OPTION_HOTKEY_NEW_LINE', {\n\t\t\t\t'#HOTKEY#': 'Shift + Enter',\n\t\t\t});\n\t\t\tconst ctrlEnterSubtext = this.loc('IM_CONTENT_SETTINGS_OPTION_HOTKEY_NEW_LINE', {\n\t\t\t\t'#HOTKEY#': 'Enter',\n\t\t\t});\n\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tvalue: true,\n\t\t\t\t\ttext: 'Enter',\n\t\t\t\t\tsubtext: enterSubtext,\n\t\t\t\t\tselected: this.sendByEnter === true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: false,\n\t\t\t\t\ttext: `${ctrlKey} + Enter`,\n\t\t\t\t\tsubtext: ctrlEnterSubtext,\n\t\t\t\t\thtml: true,\n\t\t\t\t\tselected: this.sendByEnter === false,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tisMac(): boolean\n\t\t{\n\t\t\treturn Utils.platform.isMac();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonSendByEnterChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.hotkey.sendByEnter, newValue);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_HOTKEY_SEND_COMBINATION') }}\n\t\t\t</div>\n\t\t\t<RadioOption\n\t\t\t\t:items=\"sendCombinationItems\"\n\t\t\t\t@change=\"onSendByEnterChange\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Settings } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service';\n\nimport { CheckboxOption } from '../elements/checkbox';\n\n// @vue/component\nexport const RecentSection = {\n\tname: 'RecentSection',\n\tcomponents: { CheckboxOption },\n\tdata()\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tshowBirthday(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showBirthday);\n\t\t},\n\t\tshowInvited(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showInvited);\n\t\t},\n\t\tshowLastMessage(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showLastMessage);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonShowBirthdayChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.recent.showBirthday, newValue);\n\t\t},\n\t\tonShowInvitedChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.recent.showInvited, newValue);\n\t\t},\n\t\tonShowLastMessageChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.recent.showLastMessage, newValue);\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"showBirthday\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_RECENT_SHOW_BIRTHDAY')\"\n\t\t\t\t@change=\"onShowBirthdayChange\"\n\t\t\t/>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"showInvited\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_RECENT_SHOW_INVITED')\"\n\t\t\t\t@change=\"onShowInvitedChange\"\n\t\t\t/>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"showLastMessage\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_RECENT_SHOW_TEXT')\"\n\t\t\t\t@change=\"onShowLastMessageChange\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { DesktopApi, DesktopFeature, DesktopSettingsKey } from 'im.v2.lib.desktop-api';\nimport { showDesktopConfirm, showDesktopRestartConfirm } from 'im.v2.lib.confirm';\nimport { Settings } from 'im.v2.const';\nimport { SettingsService } from 'im.v2.provider.service';\n\nimport { CheckboxOption } from '../elements/checkbox';\n\n// @vue/component\nexport const DesktopSection = {\n\tname: 'DesktopSection',\n\tcomponents: { CheckboxOption },\n\tdata(): {}\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\ttwoWindowMode(): boolean\n\t\t{\n\t\t\treturn DesktopApi.isTwoWindowMode();\n\t\t},\n\t\tautoStartDesktop(): boolean\n\t\t{\n\t\t\treturn DesktopApi.getAutostartStatus();\n\t\t},\n\t\topenChatInDesktop(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.desktop.enableRedirect);\n\t\t},\n\t\topenLinksInSlider(): boolean\n\t\t{\n\t\t\tconst sliderBindingStatus = DesktopApi.getCustomSetting(DesktopSettingsKey.sliderBindingsStatus, '1');\n\n\t\t\treturn sliderBindingStatus === '1';\n\t\t},\n\t\tsendTelemetry(): boolean\n\t\t{\n\t\t\treturn DesktopApi.getTelemetryStatus();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tasync onTwoWindowModeChange(newValue: boolean)\n\t\t{\n\t\t\tDesktopApi.setTwoWindowMode(newValue);\n\t\t\tif (!DesktopApi.isFeatureSupported(DesktopFeature.restart.id))\n\t\t\t{\n\t\t\t\tvoid showDesktopConfirm();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userChoice = await showDesktopRestartConfirm();\n\t\t\tif (userChoice === true)\n\t\t\t{\n\t\t\t\tDesktopApi.restart();\n\t\t\t}\n\t\t},\n\t\tonAutoStartDesktopChange(newValue: boolean)\n\t\t{\n\t\t\tDesktopApi.setAutostartStatus(newValue);\n\t\t},\n\t\tonOpenChatInDesktopChange(newValue: boolean)\n\t\t{\n\t\t\tthis.getSettingsService().changeSetting(Settings.desktop.enableRedirect, newValue);\n\t\t},\n\t\tonOpenLinksInSliderChange(newValue: boolean)\n\t\t{\n\t\t\tthis.setSliderBindingStatus(newValue);\n\t\t\tDesktopApi.setCustomSetting(DesktopSettingsKey.sliderBindingsStatus, newValue ? '1' : '0');\n\t\t},\n\t\tonSendTelemetryChange(newValue: boolean)\n\t\t{\n\t\t\tDesktopApi.setTelemetryStatus(newValue);\n\t\t},\n\t\tsetSliderBindingStatus(flag: boolean)\n\t\t{\n\t\t\tif (flag === true)\n\t\t\t{\n\t\t\t\tBX.SidePanel.Instance.enableAnchorBinding();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tBX.SidePanel.Instance.disableAnchorBinding();\n\t\t},\n\t\tgetSettingsService(): SettingsService\n\t\t{\n\t\t\tif (!this.settingsService)\n\t\t\t{\n\t\t\t\tthis.settingsService = new SettingsService();\n\t\t\t}\n\n\t\t\treturn this.settingsService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_BLOCK_STARTUP') }}\n\t\t\t</div>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"twoWindowMode\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_TWO_WINDOW_MODE')\"\n\t\t\t\t@change=\"onTwoWindowModeChange\"\n\t\t\t/>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"autoStartDesktop\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_AUTO_START')\"\n\t\t\t\t@change=\"onAutoStartDesktopChange\"\n\t\t\t/>\n\t\t</div>\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_BLOCK_LINKS') }}\n\t\t\t</div>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"openChatInDesktop\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_ALWAYS_OPEN_CHAT')\"\n\t\t\t\t@change=\"onOpenChatInDesktopChange\"\n\t\t\t/>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"openLinksInSlider\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_OPEN_LINKS_IN_SLIDER')\"\n\t\t\t\t@change=\"onOpenLinksInSliderChange\"\n\t\t\t/>\n\t\t</div>\n\t\t<div class=\"bx-im-settings-section-content__block\">\n\t\t\t<div class=\"bx-im-settings-section-content__block_title\">\n\t\t\t\t{{ loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_BLOCK_REST') }}\n\t\t\t</div>\n\t\t\t<CheckboxOption\n\t\t\t\t:value=\"sendTelemetry\"\n\t\t\t\t:text=\"loc('IM_CONTENT_SETTINGS_OPTION_DESKTOP_SEND_TELEMETRY')\"\n\t\t\t\t@change=\"onSendTelemetryChange\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { AppearanceSection } from './sections/appearance';\nimport { NotificationSection } from './sections/notification';\nimport { HotkeySection } from './sections/hotkey';\nimport { RecentSection } from './sections/recent';\nimport { DesktopSection } from './sections/desktop';\n\nimport { SectionMetaData } from '../sections';\n\nimport '../css/section-content.css';\n\n// @vue/component\nexport const SectionContent = {\n\tname: 'SectionContent',\n\tcomponents: { AppearanceSection, NotificationSection, HotkeySection, RecentSection, DesktopSection },\n\tprops:\n\t{\n\t\tactiveSection: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): Object<string, any>\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tsectionComponentName(): string\n\t\t{\n\t\t\tconst uppercaseSection = this.activeSection[0].toUpperCase() + this.activeSection.slice(1);\n\t\t\tconst COMPONENT_POSTFIX = 'Section';\n\n\t\t\treturn `${uppercaseSection}${COMPONENT_POSTFIX}`;\n\t\t},\n\t\tsectionName(): string\n\t\t{\n\t\t\treturn SectionMetaData[this.activeSection].name;\n\t\t},\n\t\tsectionIconClass(): string\n\t\t{\n\t\t\treturn SectionMetaData[this.activeSection].icon;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-settings-section-content__container\">\n\t\t\t<div class=\"bx-im-settings-section-content__header\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__header_icon\">\n\t\t\t\t\t<i :class=\"sectionIconClass\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-settings-section-content__header_title\">{{ sectionName }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-settings-section-content__background\">\n\t\t\t\t<div class=\"bx-im-settings-section-content__body\">\n\t\t\t\t\t<component :is=\"sectionComponentName\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Logger } from 'im.v2.lib.logger';\nimport { Settings } from 'im.v2.const';\n\nimport { SectionList } from './components/section-list';\nimport { SectionContent } from './components/section-content';\n\nimport './css/settings-content.css';\n\n// @vue/component\nexport const SettingsContent = {\n\tname: 'SettingsContent',\n\tcomponents: { SectionList, SectionContent },\n\tdata()\n\t{\n\t\treturn {\n\t\t\tactiveSection: '',\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tsections(): string[]\n\t\t{\n\t\t\treturn Object.keys(Settings);\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tLogger.warn('Content: Openlines created');\n\t\tthis.setInitialSection();\n\t},\n\tmethods:\n\t{\n\t\tsetInitialSection()\n\t\t{\n\t\t\tthis.activeSection = this.sections[0];\n\t\t},\n\t\tonSectionClick(sectionId: string)\n\t\t{\n\t\t\tthis.activeSection = sectionId;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-settings__container\">\n\t\t\t<SectionList :activeSection=\"activeSection\" @sectionClick=\"onSectionClick\" />\n\t\t\t<SectionContent :activeSection=\"activeSection\" />\n\t\t</div>\n\t`,\n};\n"],"names":["SectionMetaData","appearance","name","Loc","getMessage","icon","notification","hotkey","message","recent","desktop","help","feedback","AdditionalSections","SectionList","props","activeSection","type","String","required","emits","data","computed","disabledSections","Set","SettingsSection","DesktopApi","isDesktop","add","sections","Object","keys","Settings","filter","section","has","methods","getSectionName","getSectionIconClass","onHelpClick","ARTICLE_CODE","BX","Helper","show","onFeedbackClick","UI","Feedback","Form","open","id","forms","zones","sec","lang","presets","sender_page","loc","phraseCode","$Bitrix","template","ChatBackground","currentBackgroundId","$store","getters","background","toString","backgroundIdList","ThemeColorScheme","getBackgroundStyleById","backgroundId","ThemeManager","onBackgroundClick","preparedBackgroundId","Number","parseInt","settingsService","SettingsService","changeSetting","ChatAlignment","DialogAlignment","currentOptionId","alignment","backgroundStyle","getCurrentBackgroundStyle","onOptionClick","optionId","getSettingsService","DEMO_DIALOG_ID","demoChat","dialogId","chatId","DialogType","chat","inited","role","UserRole","guest","demoUser","demoMessage1","authorId","text","viewedByOthers","demoMessage2","Core","getUserId","replyId","demoMessage3","DemoManager","initModels","getStore","dispatch","userManager","UserManager","addUsersToModel","messages","AppearanceSection","components","ChatDialog","containerClasses","created","CheckboxOption","value","Boolean","onInput","event","$emit","target","checked","NotificationSection","enableSound","onEnableSoundChange","newValue","RadioOption","items","Array","groupName","Text","getRandom","options","selectedValue","find","option","selected","HotkeySection","sendByEnter","sendCombinationItems","ctrlKey","Utils","platform","isMac","enterSubtext","ctrlEnterSubtext","subtext","html","onSendByEnterChange","replacements","RecentSection","showBirthday","showInvited","showLastMessage","onShowBirthdayChange","onShowInvitedChange","onShowLastMessageChange","DesktopSection","twoWindowMode","isTwoWindowMode","autoStartDesktop","getAutostartStatus","openChatInDesktop","enableRedirect","openLinksInSlider","sliderBindingStatus","getCustomSetting","DesktopSettingsKey","sliderBindingsStatus","sendTelemetry","getTelemetryStatus","onTwoWindowModeChange","setTwoWindowMode","isFeatureSupported","DesktopFeature","restart","showDesktopConfirm","userChoice","showDesktopRestartConfirm","onAutoStartDesktopChange","setAutostartStatus","onOpenChatInDesktopChange","onOpenLinksInSliderChange","setSliderBindingStatus","setCustomSetting","onSendTelemetryChange","setTelemetryStatus","flag","SidePanel","Instance","enableAnchorBinding","disableAnchorBinding","SectionContent","sectionComponentName","uppercaseSection","toUpperCase","slice","COMPONENT_POSTFIX","sectionName","sectionIconClass","SettingsContent","Logger","warn","setInitialSection","onSectionClick","sectionId"],"mappings":"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"}