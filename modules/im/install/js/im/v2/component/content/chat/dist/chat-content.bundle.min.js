this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,i,a,n,s,r,o,l,d,h,c,g,u,b,v,p,C){"use strict";const m=5;const _={name:"EditableChatTitle",components:{ChatTitle:h.ChatTitle},props:{dialogId:{type:String,required:true}},emits:["newTitleSubmit"],data(){return{isEditing:false,inputWidth:0,showEditIcon:false,chatTitle:""}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},canBeRenamed(){if(this.dialog.extranet){return false}return this.$store.getters["dialogues/getChatOption"](this.dialog.type,c.ChatOption.rename)},inputStyle(){return{width:`calc(${this.inputWidth}ch + ${m}px)`}}},watch:{chatTitle(){this.inputWidth=this.chatTitle.length}},mounted(){this.chatTitle=this.dialog.name},methods:{onTitleClick(){if(!this.canBeRenamed){return}if(!this.chatTitle){this.chatTitle=this.dialog.name}this.isEditing=true;this.$nextTick().then((()=>{this.$refs["titleInput"].focus()}))},onNewTitleSubmit(){if(!this.isEditing){return}this.isEditing=false;const t=this.chatTitle===this.dialog.name;if(t||this.chatTitle===""){return}this.$emit("newTitleSubmit",this.chatTitle)},onEditCancel(){this.isEditing=false;this.chatTitle=this.dialog.name}},template:`\n\t\t<div\n\t\t\tv-if="!isEditing"\n\t\t\t@click="onTitleClick"\n\t\t\t@mouseover="showEditIcon = true"\n\t\t\t@mouseleave="showEditIcon = false"\n\t\t\tclass="bx-im-chat-header__title --chat"\n\t\t>\n\t\t\t<div class="bx-im-chat-header__title_container">\n\t\t\t\t<ChatTitle :dialogId="dialogId" :withMute="true" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-header__edit-icon_container">\n\t\t\t\t<div v-if="showEditIcon && canBeRenamed" class="bx-im-chat-header__edit-icon"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else class="bx-im-chat-header__title-input_container">\n\t\t\t<input\n\t\t\t\tv-model="chatTitle"\n\t\t\t\t:style="inputStyle"\n\t\t\t\t@focus="$event.target.select()"\n\t\t\t\t@blur="onNewTitleSubmit"\n\t\t\t\t@keyup.enter="onNewTitleSubmit"\n\t\t\t\t@keyup.esc="onEditCancel"\n\t\t\t\ttype="text"\n\t\t\t\tclass="bx-im-chat-header__title-input"\n\t\t\t\tref="titleInput"\n\t\t\t/>\n\t\t</div>\n\t`};var I=babelHelpers.classPrivateFieldLooseKey("getVideoCallItem");var S=babelHelpers.classPrivateFieldLooseKey("getAudioCallItem");var T=babelHelpers.classPrivateFieldLooseKey("getBetaCallItem");var f=babelHelpers.classPrivateFieldLooseKey("isCallBetaAvailable");class x extends u.BaseMenu{constructor(){super();Object.defineProperty(this,f,{value:B});Object.defineProperty(this,T,{value:M});Object.defineProperty(this,S,{value:E});Object.defineProperty(this,I,{value:y});this.id="bx-im-chat-header-call-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:true,offsetLeft:4,offsetTop:5}}getMenuItems(){return[babelHelpers.classPrivateFieldLooseBase(this,I)[I](),babelHelpers.classPrivateFieldLooseBase(this,S)[S](),babelHelpers.classPrivateFieldLooseBase(this,T)[T]()]}}function y(){return{text:p.Loc.getMessage("IM_CONTENT_CHAT_HEADER_VIDEOCALL_HD"),onclick:()=>{g.Messenger.startVideoCall(this.context.dialogId);this.menuInstance.close()}}}function E(){return{text:p.Loc.getMessage("IM_CONTENT_CHAT_HEADER_CALL_MENU_AUDIO"),onclick:()=>{g.Messenger.startVideoCall(this.context.dialogId,false);this.menuInstance.close()}}}function M(){if(!babelHelpers.classPrivateFieldLooseBase(this,f)[f]()){return null}return{text:p.Loc.getMessage("IM_CONTENT_CHAT_HEADER_CALL_MENU_BETA"),onclick:()=>{b.CallManager.getInstance().createBetaCallRoom(this.context.chatId);this.menuInstance.close()}}}function B(){const t=p.Extension.getSettings("im.v2.component.content.chat");return t.get("isCallBetaAvailable")}const L={props:{dialogId:{type:String,required:true}},emits:[],data(){return{}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isActive(){return b.CallManager.getInstance().chatCanBeCalled(this.dialogId)}},methods:{startVideoCall(){if(!this.isActive){return}g.Messenger.startVideoCall(this.dialogId)},getCallMenu(){if(!this.callMenu){this.callMenu=new x}return this.callMenu},onMenuClick(){this.getCallMenu().openMenu(this.dialog,this.$refs.menu)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-chat-header-call-button__container"\n\t\t\t:class="{'--disabled': !isActive}"\n\t\t\t@click="startVideoCall"\n\t\t>\n\t\t\t<div class="bx-im-chat-header-call-button__text">\n\t\t\t\t{{ loc('IM_CONTENT_CHAT_HEADER_VIDEOCALL_HD') }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-header-call-button__separator"></div>\n\t\t\t<div class="bx-im-chat-header-call-button__chevron_container" @click.stop="onMenuClick">\n\t\t\t\t<div class="bx-im-chat-header-call-button__chevron" ref="menu"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const A={name:"ChatHeader",components:{Avatar:h.Avatar,ChatTitle:h.ChatTitle,EditableChatTitle:_,AddToChat:l.AddToChat,CallButton:L},props:{dialogId:{type:String,default:""},sidebarOpened:{type:Boolean,required:true}},data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>h.AvatarSize,user(){return this.$store.getters["users/get"](this.dialogId,true)},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isInited(){return this.dialog.inited},isUser(){return this.dialog.type===c.DialogType.user},isChat(){return!this.isUser},avatarStyle(){return{backgroundImage:`url('${this.dialog.avatar}')`}},chatId(){return this.dialog.chatId},dialogDescription(){if(this.isUser){return this.$store.getters["users/getPosition"](this.dialogId)}return p.Loc.getMessagePlural("IM_CONTENT_CHAT_HEADER_USER_COUNT",this.dialog.userCounter,{"#COUNT#":this.dialog.userCounter})},userLink(){return d.Utils.user.getProfileLink(this.dialogId)},userLastOnline(){return this.$store.getters["users/getLastOnline"](this.dialogId)}},methods:{toggleRightPanel(){this.$emit("toggleRightPanel")},onMembersClick(){if(this.isUser||!this.isInited){return}C.EventEmitter.emit(c.EventType.sidebar.open,{detailBlock:c.SidebarDetailBlock.main})},onNewTitleSubmit(t){this.getChatService().renameChat(this.dialogId,t).catch((()=>{BX.UI.Notification.Center.notify({content:this.loc("IM_CONTENT_CHAT_HEADER_RENAME_ERROR")})}))},getChatService(){if(!this.chatService){this.chatService=new o.ChatService}return this.chatService},openInvitePopup(){this.showAddToChatPopup=true},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-chat-header__scope bx-im-chat-header__container">\n\t\t\t<div class="bx-im-chat-header__left">\n\t\t\t\t<div class="bx-im-chat-header__avatar">\n\t\t\t\t\t<Avatar v-if="isChat" :dialogId="dialogId" :size="AvatarSize.L" :withStatus="true" />\n\t\t\t\t\t<a v-else :href="userLink" target="_blank">\n\t\t\t\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.L" :withStatus="true" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="isChat" class="bx-im-chat-header__info">\n\t\t\t\t\t<EditableChatTitle :dialogId="dialogId" @newTitleSubmit="onNewTitleSubmit" />\n\t\t\t\t\t<div :title="loc('IM_CONTENT_CHAT_HEADER_OPEN_MEMBERS')" @click="onMembersClick" class="bx-im-chat-header__subtitle --click" >\n\t\t\t\t\t\t{{ dialogDescription }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else class="bx-im-chat-header__info">\n\t\t\t\t\t<div class="bx-im-chat-header__title --user">\n\t\t\t\t\t\t<a :href="userLink" target="_blank" class="bx-im-chat-header__title_container">\n\t\t\t\t\t\t\t<ChatTitle :dialogId="dialogId" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<span class="bx-im-chat-header__user-status">{{ userLastOnline }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-chat-header__subtitle">{{ dialogDescription }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-header__right">\n\t\t\t\t<CallButton :dialogId="dialogId" />\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-chat-header__icon --add-people"\n\t\t\t\t\t:class="{'--active': showAddToChatPopup}"\n\t\t\t\t\t@click="openInvitePopup" \n\t\t\t\t\tref="add-members"\n\t\t\t\t></div>\n\t\t\t\t\x3c!--<div class="bx-im-chat-header__icon --search"></div>--\x3e\n\t\t\t\t<div @click="toggleRightPanel" class="bx-im-chat-header__icon --panel" :class="{'--active': sidebarOpened}"></div>\n\t\t\t</div>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:chatId="chatId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 15, offsetLeft: -300}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const k={name:"SidebarWrapper",components:{ChatSidebar:v.ChatSidebar},props:{dialogId:{type:String,required:true},sidebarDetailBlock:{type:String,default:null}},emits:["back"],methods:{onClickBack(){this.$emit("back")}},template:`\n\t\t<div class="bx-im-sidebar-wrapper__scope bx-im-sidebar-wrapper__container">\n\t\t\t<ChatSidebar\n\t\t\t\t:dialogId="dialogId" \n\t\t\t\t:key="dialogId" \n\t\t\t\t:sidebarDetailBlock="sidebarDetailBlock"\n\t\t\t\t@back="onClickBack"\n\t\t\t/>\n\t\t</div>\n\t`};const O="BX.Messenger.v2.Content.Chat.ResizeManager";var D=babelHelpers.classPrivateFieldLooseKey("observer");var w=babelHelpers.classPrivateFieldLooseKey("textareaHeight");var H=babelHelpers.classPrivateFieldLooseKey("initObserver");class P extends C.EventEmitter{constructor(){super();Object.defineProperty(this,H,{value:N});Object.defineProperty(this,D,{writable:true,value:void 0});Object.defineProperty(this,w,{writable:true,value:void 0});this.setEventNamespace(O);babelHelpers.classPrivateFieldLooseBase(this,H)[H]()}observeTextarea(t){babelHelpers.classPrivateFieldLooseBase(this,D)[D].observe(t);babelHelpers.classPrivateFieldLooseBase(this,w)[w]=t.clientHeight}unobserveTextarea(t){babelHelpers.classPrivateFieldLooseBase(this,D)[D].unobserve(t);babelHelpers.classPrivateFieldLooseBase(this,w)[w]=0}}function N(){babelHelpers.classPrivateFieldLooseBase(this,D)[D]=new ResizeObserver((t=>{t.forEach((t=>{var e;const i=(e=t.borderBoxSize)==null?void 0:e[0].blockSize;if(p.Type.isNumber(i)&&i!==babelHelpers.classPrivateFieldLooseBase(this,w)[w]){this.emit(P.events.onHeightChange,{newHeight:i});babelHelpers.classPrivateFieldLooseBase(this,w)[w]=i}}))}))}P.events={onHeightChange:"onHeightChange"};const $={template:`\n\t\t<div class="bx-im-content-chat-drop-area__container bx-im-content-chat-drop-area__scope">\n\t\t\t<div class="bx-im-content-chat-drop-area__box">\n\t\t\t\t<span class="bx-im-content-chat-drop-area__icon"></span>\n\t\t\t\t<label class="bx-im-content-chat-drop-area__label-text">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_CONTENT_DROP_AREA') }}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t`};const R=64;const X={name:"ChatContent",components:{ChatHeader:A,ChatDialog:i.ChatDialog,ChatTextarea:a.ChatTextarea,SidebarWrapper:k,DropArea:$},directives:{"textarea-observer":{mounted(t,e){e.instance.textareaResizeManager.observeTextarea(t)},beforeUnmount(t,e){e.instance.textareaResizeManager.unobserveTextarea(t)}}},props:{entityId:{type:String,default:""},contextMessageId:{type:Number,default:0}},data(){return{needSidebarTransition:false,sidebarOpened:false,sidebarDetailBlock:null,textareaHeight:0,showDropArea:false,lastDropAreaEnterTarget:null}},computed:{layout(){return this.$store.getters["application/getLayout"]},dialog(){return this.$store.getters["dialogues/get"](this.entityId,true)},hasPinnedMessages(){return this.$store.getters["messages/pin/getPinned"](this.dialog.chatId).length>0},sidebarTransitionName(){return this.needSidebarTransition?"sidebar-transition":""},backgroundStyle(){return r.ThemeManager.getCurrentBackgroundStyle()},dialogContainerStyle(){return{height:`calc(100% - ${R}px - ${this.textareaHeight}px)`}},dropAreaStyles(){const t=53;const e=16+R;const i=this.hasPinnedMessages?t+e:e;return{top:`${i}px`}}},watch:{entityId(t,e){n.Logger.warn(`ChatContent: switching from ${e||"empty"} to ${t}`);if(t===""){this.sidebarOpened=false}this.onChatChange();this.resetSidebarDetailState()},sidebarOpened(t){this.saveSidebarOpenedState(t)}},created(){this.restoreSidebarOpenState();if(this.entityId){this.onChatChange()}this.initTextareaResizeManager()},mounted(){C.EventEmitter.subscribe(c.EventType.sidebar.open,this.onSidebarOpen);C.EventEmitter.subscribe(c.EventType.sidebar.close,this.onSidebarClose)},beforeUnmount(){C.EventEmitter.unsubscribe(c.EventType.sidebar.open,this.onSidebarOpen);C.EventEmitter.unsubscribe(c.EventType.sidebar.close,this.onSidebarClose)},methods:{async onChatChange(){if(this.entityId===""){return}if(d.Utils.dialog.isExternalId(this.entityId)){const t=await this.getChatService().prepareDialogId(this.entityId);this.$store.dispatch("application/setLayout",{layoutName:c.Layout.chat.name,entityId:t,contextId:this.layout.contextId});return}if(this.dialog.inited){n.Logger.warn(`ChatContent: chat ${this.entityId} is already loaded`);return}if(this.dialog.loading){n.Logger.warn(`ChatContent: chat ${this.entityId} is loading`);return}if(this.layout.contextId){this.loadChatWithContext();return}this.loadChat().then((()=>{this.needSidebarTransition=true}))},loadChatWithContext(){n.Logger.warn(`ChatContent: loading chat ${this.entityId} with context - ${this.layout.contextId}`);this.getChatService().loadChatWithContext(this.entityId,this.layout.contextId).then((()=>{n.Logger.warn(`ChatContent: chat ${this.entityId} is loaded with context of ${this.layout.contextId}`)})).catch((t=>{if(t.code==="ACCESS_ERROR"){this.showNotification(this.loc("IM_CONTENT_CHAT_ACCESS_ERROR"))}n.Logger.error(t);g.Messenger.openChat()}))},loadChat(){n.Logger.warn(`ChatContent: loading chat ${this.entityId}`);return this.getChatService().loadChatWithMessages(this.entityId).then((()=>{n.Logger.warn(`ChatContent: chat ${this.entityId} is loaded`)})).catch((()=>{g.Messenger.openChat()}))},toggleSidebar(){this.needSidebarTransition=true;this.sidebarOpened=!this.sidebarOpened;this.resetSidebarDetailState()},onClickBack(){this.resetSidebarDetailState()},onSidebarOpen({data:t}){this.sidebarOpened=true;if(t.detailBlock&&c.SidebarDetailBlock[t.detailBlock]){this.sidebarDetailBlock=t.detailBlock}},onSidebarClose(){this.sidebarOpened=false},resetSidebarDetailState(){this.sidebarDetailBlock=null},restoreSidebarOpenState(){const t=s.LocalStorageManager.getInstance().get(c.LocalStorageKey.sidebarOpened);this.sidebarOpened=Boolean(t)},saveSidebarOpenedState(t){const e=200;clearTimeout(this.saveSidebarStateTimeout);this.saveSidebarStateTimeout=setTimeout((()=>{s.LocalStorageManager.getInstance().set(c.LocalStorageKey.sidebarOpened,t)}),e)},initTextareaResizeManager(){this.textareaResizeManager=new P;this.textareaResizeManager.subscribe(P.events.onHeightChange,(t=>{const{newHeight:e}=t.getData();this.textareaHeight=e}))},showNotification(t){BX.UI.Notification.Center.notify({content:t})},loc(t){return this.$Bitrix.Loc.getMessage(t)},onDragEnter(t){e.hasDataTransferOnlyFiles(t.dataTransfer,false).then((e=>{if(e){this.lastDropAreaEnterTarget=t.target;this.showDropArea=true}}))},onDragLeave(t){if(this.lastDropAreaEnterTarget===t.target){this.showDropArea=false}},onDrop(t){e.getFilesFromDataTransfer(t.dataTransfer).then((t=>{this.getSendingService().sendFilesFromInput(t,this.entityId)}));this.showDropArea=false},getChatService(){if(!this.chatService){this.chatService=new o.ChatService}return this.chatService},getSendingService(){if(!this.sendingService){this.sendingService=o.SendingService.getInstance()}return this.sendingService}},template:`\n\t\t<div class="bx-im-content-chat__scope bx-im-content-chat__container" :style="backgroundStyle">\n\t\t\t<div \n\t\t\t\tclass="bx-im-content-chat__content"\n\t\t\t\t@drop.prevent="onDrop"\n\t\t\t\t@dragleave.stop.prevent="onDragLeave"\n\t\t\t\t@dragenter.stop.prevent="onDragEnter"\n\t\t\t\t@dragover.prevent\n\t\t\t>\n\t\t\t\t<template v-if="entityId">\n\t\t\t\t\t<ChatHeader \n\t\t\t\t\t\t:dialogId="entityId" \n\t\t\t\t\t\t:key="entityId" \n\t\t\t\t\t\t:sidebarOpened="sidebarOpened"\n\t\t\t\t\t\t@toggleRightPanel="toggleSidebar" \n\t\t\t\t\t/>\n\t\t\t\t\t<div :style="dialogContainerStyle" class="bx-im-content-chat__dialog_container">\n\t\t\t\t\t\t<div class="bx-im-content-chat__dialog_content">\n\t\t\t\t\t\t\t<ChatDialog :dialogId="entityId" :key="entityId" :textareaHeight="textareaHeight" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-textarea-observer class="bx-im-content-chat__textarea_container">\n\t\t\t\t\t\t<ChatTextarea :dialogId="entityId" :key="entityId" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Transition name="drop-area-fade">\n\t\t\t\t\t\t<DropArea v-if="showDropArea" :style="dropAreaStyles" />\n\t\t\t\t\t</Transition>\n\t\t\t\t</template>\n\t\t\t\t<div v-else class="bx-im-content-chat__start_message">\n\t\t\t\t\t<div class="bx-im-content-chat__start_message_icon"></div>\n\t\t\t\t\t<div class="bx-im-content-chat__start_message_text">\n\t\t\t\t\t  {{ loc('IM_CONTENT_CHAT_START_MESSAGE') }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<transition :name="sidebarTransitionName">\n\t\t\t\t<SidebarWrapper \n\t\t\t\t\tv-if="entityId && sidebarOpened"\n\t\t\t\t\t:dialogId="entityId" \n\t\t\t\t\t:sidebarDetailBlock="sidebarDetailBlock"\n\t\t\t\t\t@back="onClickBack"\n\t\t\t\t/>\n\t\t\t</transition>\n\t\t</div>\n\t`};t.ChatContent=X})(this.BX.Messenger.v2.Component.Content=this.BX.Messenger.v2.Component.Content||{},BX.UI.Uploader,BX.Messenger.v2.Component.Dialog,BX.Messenger.v2.Component,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Component.EntitySelector,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component,BX,BX.Event);
//# sourceMappingURL=chat-content.bundle.map.js