this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,i,a,n,s,r,o,l,c,d,h,g,u,v,p,b,C,m,_){"use strict";const S=5;const I={name:"EditableChatTitle",components:{ChatTitle:m.ChatTitle},props:{dialogId:{type:String,required:true}},emits:["newTitleSubmit"],data(){return{isEditing:false,inputWidth:0,showEditIcon:false,chatTitle:""}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},canBeRenamed(){return l.PermissionManager.getInstance().canPerformAction(C.ChatActionType.rename,this.dialogId)},inputStyle(){return{width:`calc(${this.inputWidth}ch + ${S}px)`}}},watch:{chatTitle(){this.inputWidth=this.chatTitle.length}},mounted(){this.chatTitle=this.dialog.name},methods:{onTitleClick(){if(!this.canBeRenamed){return}if(!this.chatTitle){this.chatTitle=this.dialog.name}this.isEditing=true;this.$nextTick().then((()=>{this.$refs.titleInput.focus()}))},onNewTitleSubmit(){if(!this.isEditing){return}this.isEditing=false;const t=this.chatTitle===this.dialog.name;if(t||this.chatTitle===""){return}this.$emit("newTitleSubmit",this.chatTitle)},onEditCancel(){this.isEditing=false;this.chatTitle=this.dialog.name}},template:`\n\t\t<div\n\t\t\tv-if="!isEditing"\n\t\t\t@click="onTitleClick"\n\t\t\t@mouseover="showEditIcon = true"\n\t\t\t@mouseleave="showEditIcon = false"\n\t\t\tclass="bx-im-chat-header__title --chat"\n\t\t\t:class="{'--can-rename': canBeRenamed}"\n\t\t>\n\t\t\t<div class="bx-im-chat-header__title_container">\n\t\t\t\t<ChatTitle :dialogId="dialogId" :withMute="true" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-header__edit-icon_container">\n\t\t\t\t<div v-if="showEditIcon && canBeRenamed" class="bx-im-chat-header__edit-icon"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-else class="bx-im-chat-header__title-input_container">\n\t\t\t<input\n\t\t\t\tv-model="chatTitle"\n\t\t\t\t:style="inputStyle"\n\t\t\t\t@focus="$event.target.select()"\n\t\t\t\t@blur="onNewTitleSubmit"\n\t\t\t\t@keyup.enter="onNewTitleSubmit"\n\t\t\t\t@keyup.esc="onEditCancel"\n\t\t\t\ttype="text"\n\t\t\t\tclass="bx-im-chat-header__title-input"\n\t\t\t\tref="titleInput"\n\t\t\t/>\n\t\t</div>\n\t`};const T={video:{id:"video",locCode:"IM_CONTENT_CHAT_HEADER_VIDEOCALL",start:t=>{h.Messenger.startVideoCall(t)}},audio:{id:"audio",locCode:"IM_CONTENT_CHAT_HEADER_CALL_MENU_AUDIO",start:t=>{h.Messenger.startVideoCall(t,false)}},beta:{id:"beta",locCode:"IM_CONTENT_CHAT_HEADER_CALL_MENU_BETA_2",start:t=>{const e=b.Core.getStore().getters["dialogues/get"](t);g.CallManager.getInstance().createBetaCallRoom(e.chatId)}}};var f=babelHelpers.classPrivateFieldLooseKey("getVideoCallItem");var B=babelHelpers.classPrivateFieldLooseKey("getAudioCallItem");var x=babelHelpers.classPrivateFieldLooseKey("getBetaCallItem");var M=babelHelpers.classPrivateFieldLooseKey("isCallBetaAvailable");class E extends d.BaseMenu{constructor(){super();Object.defineProperty(this,M,{value:L});Object.defineProperty(this,x,{value:k});Object.defineProperty(this,B,{value:A});Object.defineProperty(this,f,{value:y});this.id="bx-im-chat-header-call-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:true,offsetLeft:4,offsetTop:5}}getMenuItems(){return[babelHelpers.classPrivateFieldLooseBase(this,f)[f](),babelHelpers.classPrivateFieldLooseBase(this,B)[B](),babelHelpers.classPrivateFieldLooseBase(this,x)[x]()]}}function y(){const t=g.CallManager.getInstance().chatCanBeCalled(this.context.dialogId);return{text:v.Loc.getMessage("IM_CONTENT_CHAT_HEADER_VIDEOCALL"),onclick:()=>{if(!t){return}T.video.start(this.context.dialogId);this.emit(E.events.onMenuItemClick,T.video);this.menuInstance.close()},disabled:!t}}function A(){const t=g.CallManager.getInstance().chatCanBeCalled(this.context.dialogId);return{text:v.Loc.getMessage("IM_CONTENT_CHAT_HEADER_CALL_MENU_AUDIO"),onclick:()=>{if(!t){return}T.audio.start(this.context.dialogId);this.emit(E.events.onMenuItemClick,T.audio);this.menuInstance.close()},disabled:!t}}function k(){if(!babelHelpers.classPrivateFieldLooseBase(this,M)[M]()){return null}return{text:v.Loc.getMessage("IM_CONTENT_CHAT_HEADER_CALL_MENU_BETA_2"),onclick:()=>{if(!babelHelpers.classPrivateFieldLooseBase(this,M)[M]()){return}T.beta.start(this.context.dialogId);this.emit(E.events.onMenuItemClick,T.beta);this.menuInstance.close()}}}function L(){const t=v.Extension.getSettings("im.v2.component.content.chat");return t.get("isCallBetaAvailable")}E.events={onMenuItemClick:"onMenuItemClick"};const O={props:{dialogId:{type:String,required:true}},emits:[],data(){return{lastCallType:""}},computed:{dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isActive(){const t=g.CallManager.getInstance().chatCanBeCalled(this.dialogId);const e=l.PermissionManager.getInstance().canPerformAction(C.ChatActionType.call,this.dialogId);return t&&e},isConference(){return this.dialog.type===C.DialogType.videoconf},callButtonText(){const t=T[this.lastCallType].locCode;return this.loc(t)}},created(){this.lastCallType=this.getLastCallChoice();this.subscribeToMenuItemClick()},methods:{startVideoCall(){if(!this.isActive){return}h.Messenger.startVideoCall(this.dialogId)},subscribeToMenuItemClick(){this.getCallMenu().subscribe(E.events.onMenuItemClick,(t=>{const{id:e}=t.getData();this.saveLastCallChoice(e)}))},getCallMenu(){if(!this.callMenu){this.callMenu=new E}return this.callMenu},onButtonClick(){if(!this.isActive){return}T[this.lastCallType].start(this.dialogId)},onMenuClick(){if(!this.shouldShowMenu()){return}this.getCallMenu().openMenu(this.dialog,this.$refs.menu)},onStartConferenceClick(){h.Messenger.openConference({code:this.dialog.public.code})},getLastCallChoice(){return c.LocalStorageManager.getInstance().get(C.LocalStorageKey.lastCallType,T.video.id)},saveLastCallChoice(t){this.lastCallType=t;c.LocalStorageManager.getInstance().set(C.LocalStorageKey.lastCallType,t)},shouldShowMenu(){return this.isActive||this.isCallBetaAvailable()},isCallBetaAvailable(){const t=v.Extension.getSettings("im.v2.component.content.chat");return t.get("isCallBetaAvailable")},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div v-if="isConference" class="bx-im-chat-header-call-button__container --conference" @click="onStartConferenceClick">\n\t\t\t<div class="bx-im-chat-header-call-button__text">\n\t\t\t\t{{ loc('IM_CONTENT_CHAT_HEADER_START_CONFERENCE') }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-else\n\t\t\tclass="bx-im-chat-header-call-button__container"\n\t\t\t:class="{'--disabled': !isActive}"\n\t\t\t@click="onButtonClick"\n\t\t>\n\t\t\t<div class="bx-im-chat-header-call-button__text">\n\t\t\t\t{{ callButtonText }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-header-call-button__separator"></div>\n\t\t\t<div class="bx-im-chat-header-call-button__chevron_container" @click.stop="onMenuClick">\n\t\t\t\t<div class="bx-im-chat-header-call-button__chevron" ref="menu"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const P={name:"ChatHeader",components:{Avatar:m.Avatar,ChatTitle:m.ChatTitle,EditableChatTitle:I,AddToChat:r.AddToChat,CallButton:O},props:{dialogId:{type:String,default:""},sidebarOpened:{type:Boolean,required:true},sidebarSearchOpened:{type:Boolean,default:false}},emits:["toggleRightPanel","toggleSearchPanel","toggleMembersPanel"],data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>m.AvatarSize,user(){return this.$store.getters["users/get"](this.dialogId,true)},dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isInited(){return this.dialog.inited},isUser(){return this.dialog.type===C.DialogType.user},isChat(){return!this.isUser},isGuest(){return this.dialog.role===C.UserRole.guest},avatarStyle(){return{backgroundImage:`url('${this.dialog.avatar}')`}},chatId(){return this.dialog.chatId},dialogDescription(){if(this.isUser){return this.$store.getters["users/getPosition"](this.dialogId)}return v.Loc.getMessagePlural("IM_CONTENT_CHAT_HEADER_USER_COUNT",this.dialog.userCounter,{"#COUNT#":this.dialog.userCounter})},userLink(){return o.Utils.user.getProfileLink(this.dialogId)},userLastOnline(){return this.$store.getters["users/getLastOnline"](this.dialogId)},showInviteButton(){return l.PermissionManager.getInstance().canPerformAction(C.ChatActionType.extend,this.dialogId)},canChangeAvatar(){return l.PermissionManager.getInstance().canPerformAction(C.ChatActionType.avatar,this.dialogId)}},methods:{toggleRightPanel(){this.$emit("toggleRightPanel")},toggleSearchPanel(){this.$emit("toggleSearchPanel")},onMembersClick(){if(this.isUser||!this.isInited){return}this.$emit("toggleMembersPanel")},onNewTitleSubmit(t){this.getChatService().renameChat(this.dialogId,t).catch((()=>{BX.UI.Notification.Center.notify({content:this.loc("IM_CONTENT_CHAT_HEADER_RENAME_ERROR")})}))},getChatService(){if(!this.chatService){this.chatService=new _.ChatService}return this.chatService},openInvitePopup(){this.showAddToChatPopup=true},onAvatarClick(){if(!this.isChat||!this.canChangeAvatar){return}this.$refs.avatarInput.click()},async onAvatarSelect(t){const e=t.target;const i=e.files[0];if(!i){return}const a=await this.getChatService().prepareAvatar(i);if(!a){return}void this.getChatService().changeAvatar(this.dialog.chatId,a)},onContainerClick(t){if(this.isGuest){t.stopPropagation()}},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div @click.capture="onContainerClick" class="bx-im-chat-header__scope bx-im-chat-header__container">\n\t\t\t<div class="bx-im-chat-header__left">\n\t\t\t\t<div class="bx-im-chat-header__avatar" :class="{'--can-change': canChangeAvatar}" @click="onAvatarClick">\n\t\t\t\t\t<Avatar v-if="isChat" :dialogId="dialogId" :size="AvatarSize.L" :withStatus="true" />\n\t\t\t\t\t<a v-else :href="userLink" target="_blank">\n\t\t\t\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.L" :withStatus="true" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<input \n\t\t\t\t\ttype="file" \n\t\t\t\t\t@change="onAvatarSelect" \n\t\t\t\t\taccept="image/*" \n\t\t\t\t\tclass="bx-im-chat-header__avatar_input" \n\t\t\t\t\tref="avatarInput"\n\t\t\t\t>\n\t\t\t\t<div v-if="isChat" class="bx-im-chat-header__info">\n\t\t\t\t\t<EditableChatTitle :dialogId="dialogId" @newTitleSubmit="onNewTitleSubmit" />\n\t\t\t\t\t<div \n\t\t\t\t\t\t:title="loc('IM_CONTENT_CHAT_HEADER_OPEN_MEMBERS')" \n\t\t\t\t\t\t@click="onMembersClick" \n\t\t\t\t\t\tclass="bx-im-chat-header__subtitle --click"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ dialogDescription }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else class="bx-im-chat-header__info">\n\t\t\t\t\t<div class="bx-im-chat-header__title --user">\n\t\t\t\t\t\t<a :href="userLink" target="_blank" class="bx-im-chat-header__title_container">\n\t\t\t\t\t\t\t<ChatTitle :dialogId="dialogId" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<span class="bx-im-chat-header__user-status">{{ userLastOnline }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-chat-header__subtitle">{{ dialogDescription }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-header__right">\n\t\t\t\t<CallButton :dialogId="dialogId" />\n\t\t\t\t<div\n\t\t\t\t\tv-if="showInviteButton"\n\t\t\t\t\tclass="bx-im-chat-header__icon --add-people"\n\t\t\t\t\t:class="{'--active': showAddToChatPopup}"\n\t\t\t\t\t@click="openInvitePopup" \n\t\t\t\t\tref="add-members"\n\t\t\t\t></div>\n\t\t\t\t<div \n\t\t\t\t\t@click="toggleSearchPanel" \n\t\t\t\t\tclass="bx-im-chat-header__icon --search" \n\t\t\t\t\t:class="{'--active': sidebarSearchOpened}"\n\t\t\t\t></div>\n\t\t\t\t<div \n\t\t\t\t\t@click="toggleRightPanel" \n\t\t\t\t\tclass="bx-im-chat-header__icon --panel" \n\t\t\t\t\t:class="{'--active': sidebarOpened}"\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:chatId="chatId"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 15, offsetLeft: -300}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const D={name:"SidebarWrapper",components:{ChatSidebar:u.ChatSidebar},props:{dialogId:{type:String,required:true},sidebarDetailBlock:{type:String,default:null}},emits:["back"],methods:{onClickBack(){this.$emit("back")}},template:`\n\t\t<div class="bx-im-sidebar-wrapper__scope bx-im-sidebar-wrapper__container">\n\t\t\t<ChatSidebar\n\t\t\t\t:dialogId="dialogId" \n\t\t\t\t:key="dialogId" \n\t\t\t\t:sidebarDetailBlock="sidebarDetailBlock"\n\t\t\t\t@back="onClickBack"\n\t\t\t/>\n\t\t</div>\n\t`};const w="BX.Messenger.v2.Content.Chat.ResizeManager";var N=babelHelpers.classPrivateFieldLooseKey("observer");var H=babelHelpers.classPrivateFieldLooseKey("textareaHeight");var R=babelHelpers.classPrivateFieldLooseKey("initObserver");class $ extends p.EventEmitter{constructor(){super();Object.defineProperty(this,R,{value:X});Object.defineProperty(this,N,{writable:true,value:void 0});Object.defineProperty(this,H,{writable:true,value:void 0});this.setEventNamespace(w);babelHelpers.classPrivateFieldLooseBase(this,R)[R]()}observeTextarea(t){babelHelpers.classPrivateFieldLooseBase(this,N)[N].observe(t);babelHelpers.classPrivateFieldLooseBase(this,H)[H]=t.clientHeight}unobserveTextarea(t){babelHelpers.classPrivateFieldLooseBase(this,N)[N].unobserve(t);babelHelpers.classPrivateFieldLooseBase(this,H)[H]=0}}function X(){babelHelpers.classPrivateFieldLooseBase(this,N)[N]=new ResizeObserver((t=>{t.forEach((t=>{var e;const i=(e=t.borderBoxSize)==null?void 0:e[0].blockSize;if(v.Type.isNumber(i)&&i!==babelHelpers.classPrivateFieldLooseBase(this,H)[H]){this.emit($.events.onHeightChange,{newHeight:i});babelHelpers.classPrivateFieldLooseBase(this,H)[H]=i}}))}))}$.events={onHeightChange:"onHeightChange"};const F={props:{show:{type:Boolean,required:true}},template:`\n\t\t<Transition name="drop-area-fade">\n\t\t\t<div v-if="show" class="bx-im-content-chat-drop-area__container bx-im-content-chat-drop-area__scope">\n\t\t\t\t<div class="bx-im-content-chat-drop-area__box">\n\t\t\t\t\t<span class="bx-im-content-chat-drop-area__icon"></span>\n\t\t\t\t\t<label class="bx-im-content-chat-drop-area__label-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_CONTENT_DROP_AREA') }}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Transition>\n\t`};const U={data(){return{}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat__start_message">\n\t\t\t<div class="bx-im-content-chat__start_message_icon"></div>\n\t\t\t<div class="bx-im-content-chat__start_message_text">\n\t\t\t\t{{ loc('IM_CONTENT_CHAT_START_MESSAGE') }}\n\t\t\t</div>\n\t\t</div>\n\t`};const z="rgba(0, 0, 0, 0.1)";const K="rgba(0, 0, 0, 0.2)";const W="#fff";const j={components:{ChatButton:m.Button},props:{dialogId:{type:String,required:true}},data(){return{}},computed:{ButtonSize:()=>m.ButtonSize,dialog(){return this.$store.getters["dialogues/get"](this.dialogId,true)},isMuted(){return this.dialog.muteList.includes(b.Core.getUserId())},buttonText(){const t=this.loc("IM_CONTENT_BLOCKED_TEXTAREA_ENABLE_NOTIFICATIONS");const e=this.loc("IM_CONTENT_BLOCKED_TEXTAREA_DISABLE_NOTIFICATIONS");return this.isMuted?t:e},buttonColorScheme(){return{borderColor:C.Color.transparent,backgroundColor:z,iconColor:W,textColor:W,hoverColor:K}}},methods:{onButtonClick(){if(this.isMuted){this.getChatService().unmuteChat(this.dialogId);return}this.getChatService().muteChat(this.dialogId)},getChatService(){if(!this.chatService){this.chatService=new _.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat__textarea_placeholder">\n\t\t\t<ChatButton\n\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t:customColorScheme="buttonColorScheme"\n\t\t\t\t:text="buttonText"\n\t\t\t\t:isRounded="true"\n\t\t\t\t@click="onButtonClick"\n\t\t\t/>\n\t\t</div>\n\t`};const q={components:{ChatButton:m.Button},props:{dialogId:{type:String,required:true}},data(){return{}},computed:{ButtonSize:()=>m.ButtonSize,ButtonColor:()=>m.ButtonColor},methods:{onButtonClick(){this.getChatService().joinChat(this.dialogId)},getChatService(){if(!this.chatService){this.chatService=new _.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat__textarea_placeholder">\n\t\t\t<ChatButton\n\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t:color="ButtonColor.Primary"\n\t\t\t\t:text="loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHAT')"\n\t\t\t\t:isRounded="true"\n\t\t\t\t@click="onButtonClick"\n\t\t\t/>\n\t\t</div>\n\t`};const V=64;const G={name:"ChatContent",components:{ChatHeader:P,ChatDialog:i.ChatDialog,ChatTextarea:a.ChatTextarea,SidebarWrapper:D,DropArea:F,EmptyState:U,MutePanel:j,JoinPanel:q},directives:{"textarea-observer":{mounted(t,e){e.instance.textareaResizeManager.observeTextarea(t)},beforeUnmount(t,e){e.instance.textareaResizeManager.unobserveTextarea(t)}}},props:{entityId:{type:String,default:""},contextMessageId:{type:Number,default:0}},data(){return{needSidebarTransition:false,sidebarOpened:false,searchSidebarOpened:false,sidebarDetailBlock:null,textareaHeight:0,showDropArea:false,lastDropAreaEnterTarget:null}},computed:{layout(){return this.$store.getters["application/getLayout"]},dialog(){return this.$store.getters["dialogues/get"](this.entityId,true)},hasPinnedMessages(){return this.$store.getters["messages/pin/getPinned"](this.dialog.chatId).length>0},canPost(){return l.PermissionManager.getInstance().canPerformAction(C.ChatActionType.send,this.dialog.dialogId)},isGuest(){return this.dialog.role===C.UserRole.guest},sidebarTransitionName(){return this.needSidebarTransition?"sidebar-transition":""},containerClasses(){const t=this.$store.getters["application/settings/get"](C.Settings.appearance.alignment);return[`--${t}-align`]},backgroundStyle(){return s.ThemeManager.getCurrentBackgroundStyle()},dialogContainerStyle(){const t=50;let e=this.textareaHeight;if(!this.canPost){e=t}return{height:`calc(100% - ${V}px - ${e}px)`}},dropAreaStyles(){const t=53;const e=16+V;const i=this.hasPinnedMessages?t+e:e;return{top:`${i}px`}},isSearchSidebarOpened(){return this.sidebarDetailBlock===C.SidebarDetailBlock.messageSearch}},watch:{entityId(t,e){n.Logger.warn(`ChatContent: switching from ${e||"empty"} to ${t}`);if(t===""){this.sidebarOpened=false}this.onChatChange();this.resetSidebarDetailState()},sidebarOpened(t){this.saveSidebarOpenedState(t)}},created(){this.restoreSidebarOpenState();if(this.entityId){this.onChatChange()}this.initTextareaResizeManager()},mounted(){p.EventEmitter.subscribe(C.EventType.sidebar.open,this.onSidebarOpen);p.EventEmitter.subscribe(C.EventType.sidebar.close,this.onSidebarClose)},beforeUnmount(){p.EventEmitter.unsubscribe(C.EventType.sidebar.open,this.onSidebarOpen);p.EventEmitter.unsubscribe(C.EventType.sidebar.close,this.onSidebarClose)},methods:{async onChatChange(){if(this.entityId===""){return}if(o.Utils.dialog.isExternalId(this.entityId)){const t=await this.getChatService().prepareDialogId(this.entityId);this.$store.dispatch("application/setLayout",{layoutName:C.Layout.chat.name,entityId:t,contextId:this.layout.contextId});return}if(this.dialog.inited){n.Logger.warn(`ChatContent: chat ${this.entityId} is already loaded`);return}if(this.dialog.loading){n.Logger.warn(`ChatContent: chat ${this.entityId} is loading`);return}if(this.layout.contextId){await this.loadChatWithContext();return}await this.loadChat();this.needSidebarTransition=true},loadChatWithContext(){n.Logger.warn(`ChatContent: loading chat ${this.entityId} with context - ${this.layout.contextId}`);return this.getChatService().loadChatWithContext(this.entityId,this.layout.contextId).then((()=>{n.Logger.warn(`ChatContent: chat ${this.entityId} is loaded with context of ${this.layout.contextId}`)})).catch((t=>{if(t.code==="ACCESS_ERROR"){this.showNotification(this.loc("IM_CONTENT_CHAT_ACCESS_ERROR"))}n.Logger.error(t);h.Messenger.openChat()}))},loadChat(){n.Logger.warn(`ChatContent: loading chat ${this.entityId}`);return this.getChatService().loadChatWithMessages(this.entityId).then((()=>{n.Logger.warn(`ChatContent: chat ${this.entityId} is loaded`)})).catch((()=>{h.Messenger.openChat()}))},toggleSidebar(){this.needSidebarTransition=true;this.sidebarOpened=!this.sidebarOpened;this.resetSidebarDetailState()},toggleSearchPanel(){this.needSidebarTransition=true;if(this.sidebarDetailBlock===C.SidebarDetailBlock.messageSearch){this.sidebarDetailBlock=null;this.sidebarOpened=false}else{this.sidebarOpened=true;p.EventEmitter.emit(C.EventType.sidebar.open,{detailBlock:C.SidebarDetailBlock.messageSearch})}},toggleMembersPanel(){this.needSidebarTransition=true;if(this.sidebarDetailBlock===C.SidebarDetailBlock.main){this.sidebarDetailBlock=null;this.sidebarOpened=false}else{this.sidebarOpened=true;p.EventEmitter.emit(C.EventType.sidebar.open,{detailBlock:C.SidebarDetailBlock.main})}},onClickBack(){this.resetSidebarDetailState()},onSidebarOpen({data:t}){this.sidebarOpened=true;if(t.detailBlock&&C.SidebarDetailBlock[t.detailBlock]){this.sidebarDetailBlock=t.detailBlock}},onSidebarClose(){this.sidebarOpened=false},resetSidebarDetailState(){this.sidebarDetailBlock=null},restoreSidebarOpenState(){const t=c.LocalStorageManager.getInstance().get(C.LocalStorageKey.sidebarOpened);this.sidebarOpened=Boolean(t)},saveSidebarOpenedState(t){const e=200;clearTimeout(this.saveSidebarStateTimeout);this.saveSidebarStateTimeout=setTimeout((()=>{c.LocalStorageManager.getInstance().set(C.LocalStorageKey.sidebarOpened,t)}),e)},initTextareaResizeManager(){this.textareaResizeManager=new $;this.textareaResizeManager.subscribe($.events.onHeightChange,(t=>{const{newHeight:e}=t.getData();this.textareaHeight=e}))},showNotification(t){BX.UI.Notification.Center.notify({content:t})},loc(t){return this.$Bitrix.Loc.getMessage(t)},onDragEnter(t){void e.hasDataTransferOnlyFiles(t.dataTransfer,false).then((e=>{if(!e){return}this.lastDropAreaEnterTarget=t.target;this.showDropArea=true}))},onDragLeave(t){if(this.lastDropAreaEnterTarget===t.target){this.showDropArea=false}},onDrop(t){void e.getFilesFromDataTransfer(t.dataTransfer).then((t=>{this.getUploadingService().addFilesFromInput(t,this.entityId)}));this.showDropArea=false},getChatService(){if(!this.chatService){this.chatService=new _.ChatService}return this.chatService},getUploadingService(){if(!this.uploadingService){this.uploadingService=_.UploadingService.getInstance()}return this.uploadingService}},template:`\n\t\t<div class="bx-im-content-chat__scope bx-im-content-chat__container" :class="containerClasses" :style="backgroundStyle">\n\t\t\t<div \n\t\t\t\tclass="bx-im-content-chat__content"\n\t\t\t\t@drop.prevent="onDrop"\n\t\t\t\t@dragleave.stop.prevent="onDragLeave"\n\t\t\t\t@dragenter.stop.prevent="onDragEnter"\n\t\t\t\t@dragover.prevent\n\t\t\t>\n\t\t\t\t<template v-if="entityId">\n\t\t\t\t\t<ChatHeader \n\t\t\t\t\t\t:dialogId="entityId" \n\t\t\t\t\t\t:key="entityId" \n\t\t\t\t\t\t:sidebarOpened="sidebarOpened"\n\t\t\t\t\t\t:sidebarSearchOpened="isSearchSidebarOpened"\n\t\t\t\t\t\t@toggleRightPanel="toggleSidebar" \n\t\t\t\t\t\t@toggleSearchPanel="toggleSearchPanel" \n\t\t\t\t\t\t@toggleMembersPanel="toggleMembersPanel" \n\t\t\t\t\t/>\n\t\t\t\t\t<div :style="dialogContainerStyle" class="bx-im-content-chat__dialog_container">\n\t\t\t\t\t\t<div class="bx-im-content-chat__dialog_content">\n\t\t\t\t\t\t\t<ChatDialog :dialogId="entityId" :key="entityId" :textareaHeight="textareaHeight" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\x3c!-- Textarea --\x3e\n\t\t\t\t\t<div v-if="canPost" v-textarea-observer class="bx-im-content-chat__textarea_container">\n\t\t\t\t\t\t<ChatTextarea :dialogId="entityId" :key="entityId" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<JoinPanel v-else-if="isGuest" :dialogId="entityId" />\n\t\t\t\t\t<MutePanel v-else :dialogId="entityId" />\n\t\t\t\t\t\x3c!-- End textarea --\x3e\n\t\t\t\t\t<DropArea :show="showDropArea" :style="dropAreaStyles" />\n\t\t\t\t</template>\n\t\t\t\t<EmptyState v-else />\n\t\t\t</div>\n\t\t\t<transition :name="sidebarTransitionName">\n\t\t\t\t<SidebarWrapper \n\t\t\t\t\tv-if="entityId && sidebarOpened"\n\t\t\t\t\t:dialogId="entityId" \n\t\t\t\t\t:sidebarDetailBlock="sidebarDetailBlock"\n\t\t\t\t\t@back="onClickBack"\n\t\t\t\t/>\n\t\t\t</transition>\n\t\t</div>\n\t`};t.ChatContent=G})(this.BX.Messenger.v2.Component.Content=this.BX.Messenger.v2.Component.Content||{},BX.UI.Uploader,BX.Messenger.v2.Component.Dialog,BX.Messenger.v2.Component,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.EntitySelector,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component,BX,BX.Event,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Provider.Service);
//# sourceMappingURL=chat-content.bundle.map.js