this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,s,i,a,r){"use strict";const o="onImUpdateCounterNotify";const n="onImUpdateCounterMessage";var l=babelHelpers.classPrivateFieldLooseKey("store");var c=babelHelpers.classPrivateFieldLooseKey("prepareChatCounters");var u=babelHelpers.classPrivateFieldLooseKey("subscribeToCountersChange");var b=babelHelpers.classPrivateFieldLooseKey("sendNotificationCounterChangeEvent");var h=babelHelpers.classPrivateFieldLooseKey("sendChatCounterChangeEvent");var p=babelHelpers.classPrivateFieldLooseKey("onTotalCounterChange");var v=babelHelpers.classPrivateFieldLooseKey("updateBrowserTitleCounter");class d{static getInstance(){if(!this.instance){this.instance=new this}return this.instance}static init(e){d.getInstance().init(e)}constructor(){Object.defineProperty(this,v,{value:H});Object.defineProperty(this,p,{value:f});Object.defineProperty(this,h,{value:C});Object.defineProperty(this,b,{value:g});Object.defineProperty(this,u,{value:P});Object.defineProperty(this,c,{value:B});Object.defineProperty(this,l,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,l)[l]=a.Core.getStore()}init(e){babelHelpers.classPrivateFieldLooseBase(this,l)[l].dispatch("recent/setUnloadedChatCounters",babelHelpers.classPrivateFieldLooseBase(this,c)[c](e));babelHelpers.classPrivateFieldLooseBase(this,l)[l].dispatch("notifications/setCounter",e["TYPE"]["NOTIFY"]);babelHelpers.classPrivateFieldLooseBase(this,u)[u]();babelHelpers.classPrivateFieldLooseBase(this,b)[b](e["TYPE"]["NOTIFY"])}removeBrowserTitleCounter(){const e=/^(?<counterWithWhitespace>\(\d+\)\s).*/;const t=document.title.match(e);if(!(t!=null&&t.groups.counterWithWhitespace)){return}const s=t.groups.counterWithWhitespace;document.title=document.title.slice(s)}}function B(e){const s=t.Type.isArray(e["CHAT"])?{}:e["CHAT"];const i=e["CHAT_UNREAD"];i.forEach((e=>{const t=!!s[e];if(t){return}s[e]=1}));return s}function P(){babelHelpers.classPrivateFieldLooseBase(this,l)[l].watch(L,(e=>{babelHelpers.classPrivateFieldLooseBase(this,b)[b](e);babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}));babelHelpers.classPrivateFieldLooseBase(this,l)[l].watch(F,(e=>{babelHelpers.classPrivateFieldLooseBase(this,h)[h](e);babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}))}function g(e){const t=new s.BaseEvent({compatData:[e]});s.EventEmitter.emit(window,o,t)}function C(e){const t=new s.BaseEvent({compatData:[e]});s.EventEmitter.emit(window,n,t)}function f(){const e=babelHelpers.classPrivateFieldLooseBase(this,l)[l].getters["notifications/getCounter"];const t=babelHelpers.classPrivateFieldLooseBase(this,l)[l].getters["recent/getTotalCounter"];const s=e+t;if(r.DesktopManager.getInstance().isDesktopActive()){return}babelHelpers.classPrivateFieldLooseBase(this,v)[v](s)}function H(e){const t=/^\((?<currentCounter>\d+)\)\s(?<text>.*)+/;const s=document.title.match(t);if(s!=null&&s.groups.currentCounter){const t=Number.parseInt(s.groups.currentCounter,10);if(e!==t){const t=e>0?`(${e}) `:"";document.title=`${t}${s.groups.text}`}}else if(e>0){document.title=`(${e}) ${document.title}`}}const L=(e,t)=>t["notifications/getCounter"];const F=(e,t)=>t["recent/getTotalCounter"];e.CounterManager=d})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX,BX.Event,BX.Vue3.Vuex,BX.Messenger.v2.Application,BX.Messenger.v2.Lib);
//# sourceMappingURL=counter.bundle.map.js