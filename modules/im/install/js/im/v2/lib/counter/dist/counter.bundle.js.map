{"version":3,"file":"counter.bundle.js","sources":["../src/counter.js"],"sourcesContent":["import {Type} from 'main.core';\nimport {EventEmitter, BaseEvent} from 'main.core.events';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {DesktopManager} from 'im.v2.lib.desktop';\nimport {EventType} from 'im.v2.const';\n\ntype InitialCounters = {\n\tCHAT: {[chatId: string]: number},\n\tCHAT_MUTED: number[],\n\tCHAT_UNREAD: number[],\n\tTYPE: {\n\t\t'ALL': number,\n\t\t'NOTIFY': number,\n\t}\n};\n\nexport class CounterManager\n{\n\tstatic instance: CounterManager;\n\n\t#store: Store;\n\n\tstatic getInstance(): CounterManager\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tstatic init(counters: InitialCounters)\n\t{\n\t\tCounterManager.getInstance().init(counters);\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tinit(counters: InitialCounters)\n\t{\n\t\tthis.#store.dispatch('recent/setUnloadedChatCounters', this.#prepareChatCounters(counters));\n\t\tthis.#store.dispatch('notifications/setCounter', counters['TYPE']['NOTIFY']);\n\n\t\tthis.#subscribeToCountersChange();\n\t\tthis.#sendNotificationCounterChangeEvent(counters['TYPE']['NOTIFY']);\n\t}\n\n\tremoveBrowserTitleCounter()\n\t{\n\t\tconst regexp = /^(?<counterWithWhitespace>\\(\\d+\\)\\s).*/;\n\t\tconst matchResult: ?RegExpMatchArray = document.title.match(regexp);\n\t\tif (!matchResult?.groups.counterWithWhitespace)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst counterPrefixLength = matchResult.groups.counterWithWhitespace;\n\t\tdocument.title = document.title.slice(counterPrefixLength);\n\t}\n\n\t#prepareChatCounters(counters: InitialCounters): {[chatId: string]: number}\n\t{\n\t\tconst chatCounters = Type.isArray(counters['CHAT']) ? {} : counters['CHAT'];\n\t\tconst markedChats = counters['CHAT_UNREAD'];\n\t\tmarkedChats.forEach(markedChatId => {\n\t\t\tconst unreadChatHasCounter = !!chatCounters[markedChatId];\n\t\t\tif (unreadChatHasCounter)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchatCounters[markedChatId] = 1;\n\t\t});\n\n\t\treturn chatCounters;\n\t}\n\n\t#subscribeToCountersChange()\n\t{\n\t\tthis.#store.watch(notificationCounterWatch, (newValue: number) => {\n\t\t\tthis.#sendNotificationCounterChangeEvent(newValue);\n\t\t\tthis.#onTotalCounterChange();\n\t\t});\n\n\t\tthis.#store.watch(chatCounterWatch, (newValue: number) => {\n\t\t\tthis.#sendChatCounterChangeEvent(newValue);\n\t\t\tthis.#onTotalCounterChange();\n\t\t});\n\t}\n\n\t#sendNotificationCounterChangeEvent(notificationsCounter: number)\n\t{\n\t\tconst event = new BaseEvent({compatData: [notificationsCounter]});\n\t\tEventEmitter.emit(window, EventType.counter.onNotificationCounterChange, event);\n\t}\n\n\t#sendChatCounterChangeEvent(chatCounter: number)\n\t{\n\t\tconst event = new BaseEvent({compatData: [chatCounter]});\n\t\tEventEmitter.emit(window, EventType.counter.onChatCounterChange, event);\n\t}\n\n\t#onTotalCounterChange()\n\t{\n\t\tconst notificationCounter = this.#store.getters['notifications/getCounter'];\n\t\tconst chatCounter = this.#store.getters['recent/getTotalCounter'];\n\t\tconst totalCounter = notificationCounter + chatCounter;\n\n\t\tif (DesktopManager.getInstance().isDesktopActive())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateBrowserTitleCounter(totalCounter);\n\t}\n\n\t#updateBrowserTitleCounter(newCounter: number)\n\t{\n\t\tconst regexp = /^\\((?<currentCounter>\\d+)\\)\\s(?<text>.*)+/;\n\t\tconst matchResult: ?RegExpMatchArray = document.title.match(regexp);\n\t\tif (matchResult?.groups.currentCounter)\n\t\t{\n\t\t\tconst currentCounter = Number.parseInt(matchResult.groups.currentCounter, 10);\n\t\t\tif (newCounter !== currentCounter)\n\t\t\t{\n\t\t\t\tconst counterPrefix = newCounter > 0 ? `(${newCounter}) ` : '';\n\t\t\t\tdocument.title = `${counterPrefix}${matchResult.groups.text}`;\n\t\t\t}\n\t\t}\n\t\telse if (newCounter > 0)\n\t\t{\n\t\t\tdocument.title = `(${newCounter}) ${document.title}`;\n\t\t}\n\t}\n}\n\nconst notificationCounterWatch = (state, getters) => {\n\treturn getters['notifications/getCounter'];\n};\n\nconst chatCounterWatch = (state, getters) => {\n\treturn getters['recent/getTotalCounter'];\n};"],"names":["CounterManager","getInstance","instance","init","counters","constructor","Core","getStore","dispatch","removeBrowserTitleCounter","regexp","matchResult","document","title","match","groups","counterWithWhitespace","counterPrefixLength","slice","chatCounters","Type","isArray","markedChats","forEach","markedChatId","unreadChatHasCounter","watch","notificationCounterWatch","newValue","chatCounterWatch","notificationsCounter","event","BaseEvent","compatData","EventEmitter","emit","window","EventType","counter","onNotificationCounterChange","chatCounter","onChatCounterChange","notificationCounter","getters","totalCounter","DesktopManager","isDesktopActive","newCounter","currentCounter","Number","parseInt","counterPrefix","text","state"],"mappings":"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"}