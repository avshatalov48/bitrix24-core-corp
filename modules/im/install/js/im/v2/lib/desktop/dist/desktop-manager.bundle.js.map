{"version":3,"file":"desktop-manager.bundle.js","sources":["../src/classes/checker.js","../src/classes/event-handlers/bx-link.js","../src/classes/event-handlers/auth.js","../src/classes/event-handlers/status.js","../src/classes/event-handlers/counter.js","../src/classes/event-handlers/hotkey.js","../src/classes/desktop.js","../src/desktop-manager.js"],"sourcesContent":["import {Dom} from 'main.core';\n\nconst IMAGE_CHECK_URL = 'http://127.0.0.1:20141';\nconst IMAGE_CHECK_TIMEOUT = 500;\nconst IMAGE_CLASS = 'bx-im-messenger__out-of-view';\n\nconst INTERNET_CHECK_URL = '//www.bitrixsoft.com/200.ok';\n\nconst checkTimeoutList = {};\n\nexport const Checker = {\n\ttestImageUpload(successCallback, failureCallback)\n\t{\n\t\tconst dateCheck = Date.now();\n\t\tlet failureCallbackCalled = false;\n\n\t\tconst imageForCheck = Dom.create({\n\t\t\ttag: 'img',\n\t\t\tattrs: {\n\t\t\t\tsrc: `${IMAGE_CHECK_URL}/icon.png?${dateCheck}`,\n\t\t\t\t'data-id': dateCheck,\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tclassName: IMAGE_CLASS,\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\terror: function() {\n\t\t\t\t\tif (failureCallbackCalled)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst checkId = this.dataset.id;\n\t\t\t\t\tfailureCallback(false, checkId);\n\n\t\t\t\t\tclearTimeout(checkTimeoutList[checkId]);\n\t\t\t\t\tDom.remove(this);\n\t\t\t\t},\n\t\t\t\tload: function() {\n\t\t\t\t\tconst checkId = this.dataset.id;\n\t\t\t\t\tsuccessCallback(true, checkId);\n\n\t\t\t\t\tclearTimeout(checkTimeoutList[checkId]);\n\t\t\t\t\tDom.remove(this);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdocument.body.append(imageForCheck);\n\n\t\tcheckTimeoutList[dateCheck] = setTimeout(() => {\n\t\t\tfailureCallbackCalled = true;\n\n\t\t\tfailureCallback(false, dateCheck);\n\t\t\tDom.remove(imageForCheck);\n\t\t}, IMAGE_CHECK_TIMEOUT);\n\t},\n\n\ttestInternetConnection(): Promise\n\t{\n\t\tconst currentTimestamp = Date.now();\n\t\treturn new Promise((resolve) => {\n\t\t\tfetch(`${INTERNET_CHECK_URL}.${currentTimestamp}`)\n\t\t\t\t.then((response: Response) => {\n\t\t\t\t\tif (response.status === 200)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(true);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(false);\n\t\t\t\t});\n\t\t});\n\t}\n};","import { Monitor } from 'timeman.monitor';\n\nimport { Messenger } from 'im.public';\nimport { EventType, DesktopBxLink } from 'im.v2.const';\n\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport class BxLinkHandler\n{\n\tstatic init(): BxLinkHandler\n\t{\n\t\treturn new BxLinkHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToBxProtocolEvent();\n\t}\n\n\t#subscribeToBxProtocolEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onBxLink, (command: $Keys<typeof DesktopBxLink>, rawParams) => {\n\t\t\tconst params = rawParams ?? {};\n\n\t\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\t\tparams[key] = decodeURIComponent(value);\n\t\t\t});\n\n\t\t\tDesktopApi.showWindow();\n\t\t\tif (command === DesktopBxLink.chat)\n\t\t\t{\n\t\t\t\tMessenger.openChat(params.dialogId);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.call)\n\t\t\t{\n\t\t\t\tMessenger.startVideoCall(params.dialogId);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.notifications)\n\t\t\t{\n\t\t\t\tMessenger.openNotifications();\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.recentSearch)\n\t\t\t{\n\t\t\t\tMessenger.openRecentSearch();\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.timeManager)\n\t\t\t{\n\t\t\t\tDesktopApi.showWindow();\n\t\t\t\tMonitor?.openReport();\n\t\t\t}\n\t\t});\n\t}\n}\n","import {EventType, RestMethod} from 'im.v2.const';\nimport {runAction} from 'im.v2.lib.rest';\n\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\n\nexport class AuthHandler\n{\n\tstatic init(): AuthHandler\n\t{\n\t\treturn new AuthHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToLogoutEvent();\n\t}\n\n\t#subscribeToLogoutEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onExit, this.#onExit.bind(this));\n\t}\n\n\t#onExit()\n\t{\n\t\trunAction(RestMethod.imV2DesktopLogout)\n\t\t\t.finally(() => {\n\t\t\t\tDesktopApi.exit();\n\t\t\t});\n\t}\n}","import {Core} from 'im.v2.application.core';\nimport {Utils} from 'im.v2.lib.utils';\nimport {EventType, RestMethod} from 'im.v2.const';\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\n\nimport {Checker} from '../checker';\n\nimport type {ImModelUser} from 'im.v2.model';\n\nexport class StatusHandler\n{\n\t#initDate: Date;\n\n\tstatic init(): StatusHandler\n\t{\n\t\treturn new StatusHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDate = new Date();\n\t\tthis.#subscribeToWakeUpEvent();\n\t\tthis.#subscribeToAwayEvent();\n\n\t\tthis.#setInitialStatus();\n\t\tthis.#subscribeToStatusChange();\n\t}\n\n\t// wake up\n\t#subscribeToWakeUpEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onWakeUp, this.#onWakeUp.bind(this));\n\t}\n\n\tasync #onWakeUp()\n\t{\n\t\tconst hasConnection = await Checker.testInternetConnection();\n\t\tif (!hasConnection)\n\t\t{\n\t\t\tconsole.error('NO INTERNET CONNECTION!');\n\t\t\treturn;\n\t\t}\n\n\t\tif (Utils.date.isSameDay(new Date(), this.#initDate))\n\t\t{\n\t\t\tCore.getPullClient().restart();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDesktopApi.reloadWindow();\n\t\t}\n\t}\n\t// end wake up\n\n\t// away\n\t#subscribeToAwayEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onUserAway, this.#onUserAway.bind(this));\n\t}\n\n\t#onUserAway(away: boolean)\n\t{\n\t\tconst method = away ? RestMethod.imUserStatusIdleStart : RestMethod.imUserStatusIdleEnd;\n\t\tCore.getRestClient().callMethod(method)\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(`Desktop: error in ${method}  - ${error}`);\n\t\t\t});\n\t}\n\t// end away\n\n\t// user status\n\t#setInitialStatus()\n\t{\n\t\tconst userId = Core.getUserId();\n\t\tconst user: ImModelUser = Core.getStore().getters['users/get'](userId);\n\t\tif (!user)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tDesktopApi.setIconStatus(user.status);\n\t}\n\n\t#subscribeToStatusChange()\n\t{\n\t\tconst statusWatcher = (state, getters) => {\n\t\t\tconst userId = Core.getUserId();\n\t\t\tconst user: ImModelUser = getters['users/get'](userId);\n\n\t\t\treturn user?.status;\n\t\t};\n\t\tCore.getStore().watch(statusWatcher, (newStatus: string) => {\n\t\t\tDesktopApi.setIconStatus(newStatus);\n\t\t});\n\t}\n\t// user status\n}","import {Core} from 'im.v2.application.core';\nimport {EventType} from 'im.v2.const';\n\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\nimport {EventEmitter} from 'main.core.events';\n\nimport type {Store} from 'ui.vue3.vuex';\n\nexport class CounterHandler\n{\n\t#store: Store;\n\n\tstatic init(): CounterHandler\n\t{\n\t\treturn new CounterHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\n\t\tthis.#subscribeToCountersChange();\n\t}\n\n\t#subscribeToCountersChange()\n\t{\n\t\tEventEmitter.subscribe(EventType.counter.onNotificationCounterChange, this.#onCounterChange.bind(this));\n\t\tEventEmitter.subscribe(EventType.counter.onChatCounterChange, this.#onCounterChange.bind(this));\n\t}\n\n\t#onCounterChange()\n\t{\n\t\tconst chatCounter = this.#store.getters['recent/getTotalCounter'];\n\t\tconst notificationCounter = this.#store.getters['notifications/getCounter'];\n\n\t\tconst isImportant = chatCounter > 0;\n\t\tDesktopApi.setCounter(chatCounter + notificationCounter, isImportant);\n\t}\n}","import {Event} from 'main.core';\n\nimport {Utils} from 'im.v2.lib.utils';\n\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\n\nexport class HotkeyHandler\n{\n\tstatic init(): HotkeyHandler\n\t{\n\t\treturn new HotkeyHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#bindHotkeys();\n\t}\n\n\t#bindHotkeys()\n\t{\n\t\tEvent.bind(window, 'keydown', (event) => {\n\t\t\tconst reloadCombination = Utils.key.isCombination(event, 'Ctrl+R');\n\t\t\tif (reloadCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.reloadWindow();\n\t\t\t}\n\t\t});\n\t}\n}","import { Core } from 'im.v2.application.core';\nimport { EventType } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nimport { BxLinkHandler } from './event-handlers/bx-link';\nimport { AuthHandler } from './event-handlers/auth';\nimport { StatusHandler } from './event-handlers/status';\nimport { CounterHandler } from './event-handlers/counter';\nimport { HotkeyHandler } from './event-handlers/hotkey';\n\nexport class Desktop\n{\n\tstatic init(): Desktop\n\t{\n\t\treturn new Desktop();\n\t}\n\n\tconstructor()\n\t{\n\t\tStatusHandler.init();\n\t\tAuthHandler.init();\n\t\tBxLinkHandler.init();\n\t\tCounterHandler.init();\n\t\tHotkeyHandler.init();\n\n\t\tthis.#sendInitEvent();\n\t}\n\n\t#sendInitEvent()\n\t{\n\t\tconst { currentUser } = Core.getApplicationData();\n\t\tDesktopApi.emit(EventType.desktop.onInit, [{\n\t\t\tuserInfo: currentUser ?? {},\n\t\t}]);\n\t}\n}\n","import {Extension} from 'main.core';\nimport {EventEmitter, BaseEvent} from 'main.core.events';\n\nimport {DesktopBxLink} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\n\nimport {Checker} from './classes/checker';\nimport {Desktop} from './classes/desktop';\n\nconst DESKTOP_PROTOCOL_VERSION = 2;\nconst LOCATION_RESET_TIMEOUT = 1000;\n\nexport class DesktopManager\n{\n\tstatic instance: DesktopManager;\n\n\t#desktopIsActive: boolean;\n\t#locationChangedToBx = false;\n\n\tstatic getInstance(): DesktopManager\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tDesktopManager.getInstance();\n\t}\n\n\tstatic isDesktop(): boolean\n\t{\n\t\treturn DesktopApi.isDesktop();\n\t}\n\n\tstatic isChatWindow(): boolean\n\t{\n\t\treturn DesktopApi.isChatWindow();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDesktopStatus();\n\t\tif (DesktopManager.isDesktop() && DesktopApi.isChatWindow())\n\t\t{\n\t\t\tDesktop.init();\n\t\t}\n\t}\n\n\tisDesktopActive(): boolean\n\t{\n\t\tif (DesktopManager.isDesktop())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.#desktopIsActive;\n\t}\n\n\tsetDesktopActive(flag: boolean)\n\t{\n\t\tthis.#desktopIsActive = flag;\n\t}\n\n\tisLocationChangedToBx(): boolean\n\t{\n\t\treturn this.#locationChangedToBx;\n\t}\n\n\topenChat(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: openChat', dialogId);\n\t\tthis.#goToBx(`bx://${DesktopBxLink.chat}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\topenNotifications(): Promise\n\t{\n\t\tLogger.warn('Desktop: openNotifications');\n\t\tthis.#goToBx(`bx://${DesktopBxLink.notifications}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\topenRecentSearch()\n\t{\n\t\tLogger.warn('Desktop: openRecentSearch');\n\t\tthis.#goToBx(`bx://${DesktopBxLink.recentSearch}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstartVideoCall(dialogId: string = '', withVideo: boolean = true): Promise\n\t{\n\t\tLogger.warn('Desktop: startVideoCall', dialogId, withVideo);\n\t\tthis.#goToBx(`bx://${DesktopBxLink.call}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tcheckStatusInDifferentContext(): Promise\n\t{\n\t\tif (!this.#desktopIsActive)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tif (DesktopManager.isDesktop() && DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tChecker.testImageUpload(\n\t\t\t\t() => { resolve(true); },\n\t\t\t\t() => { resolve(false); }\n\t\t\t);\n\t\t});\n\t}\n\n\t#goToBx(rawUrl: string)\n\t{\n\t\tconst preparedUrl = this.#prepareBxUrl(rawUrl);\n\n\t\tthis.#locationChangedToBx = true;\n\t\tsetTimeout(() => {\n\t\t\tconst event = new BaseEvent({compatData: []});\n\t\t\tEventEmitter.emit(window, 'BXLinkOpened', event);\n\t\t\tthis.#locationChangedToBx = false;\n\t\t}, LOCATION_RESET_TIMEOUT);\n\n\t\tlocation.href = preparedUrl;\n\t}\n\n\t#prepareBxUrl(url: string): string\n\t{\n\t\tif (/^bx:\\/\\/v(\\d)\\//.test(url))\n\t\t{\n\t\t\treturn url;\n\t\t}\n\n\t\treturn url.replace('bx://', `bx://v${DESKTOP_PROTOCOL_VERSION}/${location.hostname}/`);\n\t}\n\n\t#initDesktopStatus()\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.desktop');\n\t\tthis.setDesktopActive(settings.get('desktopIsActive'));\n\t}\n}"],"names":["IMAGE_CHECK_URL","IMAGE_CHECK_TIMEOUT","IMAGE_CLASS","INTERNET_CHECK_URL","checkTimeoutList","Checker","testImageUpload","successCallback","failureCallback","dateCheck","Date","now","failureCallbackCalled","imageForCheck","Dom","create","tag","attrs","src","props","className","events","error","checkId","dataset","id","clearTimeout","remove","load","document","body","append","setTimeout","testInternetConnection","currentTimestamp","Promise","resolve","fetch","then","response","status","catch","BxLinkHandler","init","constructor","DesktopApi","subscribe","EventType","desktop","onBxLink","command","rawParams","params","Object","entries","forEach","key","value","decodeURIComponent","showWindow","DesktopBxLink","chat","Messenger","openChat","dialogId","call","startVideoCall","notifications","openNotifications","recentSearch","openRecentSearch","timeManager","Monitor","openReport","AuthHandler","onExit","bind","runAction","RestMethod","imV2DesktopLogout","finally","exit","StatusHandler","onWakeUp","hasConnection","console","Utils","date","isSameDay","Core","getPullClient","restart","reloadWindow","onUserAway","away","method","imUserStatusIdleStart","imUserStatusIdleEnd","getRestClient","callMethod","userId","getUserId","user","getStore","getters","setIconStatus","statusWatcher","state","watch","newStatus","CounterHandler","EventEmitter","counter","onNotificationCounterChange","onChatCounterChange","chatCounter","notificationCounter","isImportant","setCounter","HotkeyHandler","Event","window","event","reloadCombination","isCombination","Desktop","currentUser","getApplicationData","emit","onInit","userInfo","DESKTOP_PROTOCOL_VERSION","LOCATION_RESET_TIMEOUT","DesktopManager","getInstance","instance","isDesktop","isChatWindow","isDesktopActive","setDesktopActive","flag","isLocationChangedToBx","Logger","warn","withVideo","checkStatusInDifferentContext","rawUrl","preparedUrl","BaseEvent","compatData","location","href","url","test","replace","hostname","settings","Extension","getSettings","get"],"mappings":"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"}