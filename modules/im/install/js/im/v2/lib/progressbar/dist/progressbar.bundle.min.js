this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,t,r,a){"use strict";const i="BX.Messenger.v2.CallBackground.ProgressBar";const o=1024*1024*2;const l=240;const n=54;const c=5;var g=babelHelpers.classPrivateFieldLooseKey("getProgressBarParams");var p=babelHelpers.classPrivateFieldLooseKey("adjustProgressBarTitleVisibility");var h=babelHelpers.classPrivateFieldLooseKey("isSmallSizeFile");var B=babelHelpers.classPrivateFieldLooseKey("isSmallContainer");class L extends s.EventEmitter{constructor(e){super();Object.defineProperty(this,B,{value:u});Object.defineProperty(this,h,{value:_});Object.defineProperty(this,p,{value:P});Object.defineProperty(this,g,{value:d});this.setEventNamespace(i);const{container:s,uploadState:t,customConfig:a={}}=e;this.container=s;this.uploadState=t;this.progressBar=new r.Uploader({...babelHelpers.classPrivateFieldLooseBase(this,g)[g](a),container:s});babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}start(){this.progressBar.start();this.update()}update(){if(this.uploadState.status===a.FileStatus.error){this.progressBar.setProgress(0);this.progressBar.setCancelDisable(false);this.progressBar.setIcon(r.Uploader.icon.error);this.progressBar.setProgressTitle(t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_ERROR"))}else if(this.uploadState.status===a.FileStatus.wait){this.progressBar.setProgress(this.uploadState.progress>c?this.uploadState.progress:c);this.progressBar.setCancelDisable(true);this.progressBar.setIcon(r.Uploader.icon.cloud);this.progressBar.setProgressTitle(t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_SAVING"))}else if(this.uploadState.progress===100){this.progressBar.setProgress(100)}else if(this.uploadState.progress===-1){this.progressBar.setProgress(10);this.progressBar.setProgressTitle(t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_WAITING"))}else{if(this.uploadState.progress===0){this.progressBar.setIcon(r.Uploader.icon.cancel)}const e=this.uploadState.progress>c?this.uploadState.progress:c;this.progressBar.setProgress(e);if(babelHelpers.classPrivateFieldLooseBase(this,h)[h]()){this.progressBar.setProgressTitle(t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_LOADING"))}else{const e=this.uploadState.size/100*this.uploadState.progress;this.progressBar.setByteSent(e,this.uploadState.size)}}}destroy(){this.progressBar.destroy(false)}}function d(e){const s={sizes:{circle:this.container.offsetHeight>n?54:38,progress:this.container.offsetHeight>n?4:8},labels:{loading:t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_LOADING"),completed:t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_COMPLETED"),canceled:t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_CANCELED"),cancelTitle:t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_UPLOAD_CANCEL_TITLE"),megabyte:t.Loc.getMessage("IM_LIB_PROGRESSBAR_FILE_SIZE_MB")},cancelCallback:()=>{this.emit(L.event.cancel)},destroyCallback:()=>{this.emit(L.event.destroy)}};return{...s,...e}}function P(){if(babelHelpers.classPrivateFieldLooseBase(this,h)[h]()||babelHelpers.classPrivateFieldLooseBase(this,B)[B]()){this.progressBar.setProgressTitleVisibility(false)}}function _(){return this.uploadState.size<o}function u(){return this.container.offsetHeight<=n&&this.container.offsetWidth<l}L.event={cancel:"cancel",destroy:"destroy"};e.ProgressBarManager=L})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX.Event,BX,BX.ProgressBarJs,BX.Messenger.v2.Const);
//# sourceMappingURL=progressbar.bundle.map.js