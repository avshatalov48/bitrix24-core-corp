{"version":3,"file":"user.bundle.js","sources":["../src/user.js"],"sourcesContent":["import { Type, type JsonObject } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole } from 'im.v2.const';\n\nexport class UserManager\n{\n\tstore: Object = null;\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t}\n\n\tstatic getDialogForUser(user: JsonObject): JsonObject\n\t{\n\t\treturn {\n\t\t\tdialogId: UserManager.getUserId(user),\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\tstatic getUserId(user: JsonObject): number | string\n\t{\n\t\treturn user.id ?? user.networkId ?? 0;\n\t}\n\n\tsetUsersToModel(rawUsers: JsonObject | JsonObject[]): Promise\n\t{\n\t\tconst { users, chats } = this.#prepareUsersForStore(rawUsers);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst chatsPromise = this.store.dispatch('chats/set', chats);\n\n\t\treturn Promise.all([usersPromise, chatsPromise]);\n\t}\n\n\taddUsersToModel(rawUsers: JsonObject | JsonObject[]): Promise\n\t{\n\t\tconst { users, chats } = this.#prepareUsersForStore(rawUsers);\n\n\t\tconst usersPromise = this.store.dispatch('users/add', users);\n\t\tconst chatsPromise = this.store.dispatch('chats/add', chats);\n\n\t\treturn Promise.all([usersPromise, chatsPromise]);\n\t}\n\n\t#prepareUsersForStore(rawUsers: JsonObject | JsonObject[]): { chats: JsonObject[], users: JsonObject[] }\n\t{\n\t\tlet users = rawUsers;\n\t\tif (Type.isPlainObject(users))\n\t\t{\n\t\t\tusers = [users];\n\t\t}\n\n\t\tconst chats = [];\n\t\tusers.forEach((user) => {\n\t\t\tchats.push(UserManager.getDialogForUser(user));\n\t\t});\n\n\t\treturn { users, chats };\n\t}\n}\n"],"names":["UserManager","constructor","store","Core","getStore","getDialogForUser","user","dialogId","getUserId","avatar","color","name","type","ChatType","role","UserRole","member","id","networkId","setUsersToModel","rawUsers","users","chats","usersPromise","dispatch","chatsPromise","Promise","all","addUsersToModel","Type","isPlainObject","forEach","push"],"mappings":";;;;;;;CAGiD;AAEjD,CAAO,MAAMA,WAAW,CACxB;GAGCC,WAAW,GACX;KAAA;OAAA;;KAAA,KAHAC,KAAK,GAAW,IAAI;KAInB,IAAI,CAACA,KAAK,GAAGC,2BAAI,CAACC,QAAQ,EAAE;;GAG7B,OAAOC,gBAAgB,CAACC,IAAgB,EACxC;KACC,OAAO;OACNC,QAAQ,EAAEP,WAAW,CAACQ,SAAS,CAACF,IAAI,CAAC;OACrCG,MAAM,EAAEH,IAAI,CAACG,MAAM;OACnBC,KAAK,EAAEJ,IAAI,CAACI,KAAK;OACjBC,IAAI,EAAEL,IAAI,CAACK,IAAI;OACfC,IAAI,EAAEC,oBAAQ,CAACP,IAAI;OACnBQ,IAAI,EAAEC,oBAAQ,CAACC;MACf;;GAGF,OAAOR,SAAS,CAACF,IAAgB,EACjC;KAAA;KACC,2BAAOA,IAAI,CAACW,EAAE,uBAAIX,IAAI,CAACY,SAAS,mBAAI,CAAC;;GAGtCC,eAAe,CAACC,QAAmC,EACnD;KACC,MAAM;OAAEC,KAAK;OAAEC;MAAO,2CAAG,IAAI,gDAAuBF,QAAQ,CAAC;KAE7D,MAAMG,YAAY,GAAG,IAAI,CAACrB,KAAK,CAACsB,QAAQ,CAAC,WAAW,EAAEH,KAAK,CAAC;KAC5D,MAAMI,YAAY,GAAG,IAAI,CAACvB,KAAK,CAACsB,QAAQ,CAAC,WAAW,EAAEF,KAAK,CAAC;KAE5D,OAAOI,OAAO,CAACC,GAAG,CAAC,CAACJ,YAAY,EAAEE,YAAY,CAAC,CAAC;;GAGjDG,eAAe,CAACR,QAAmC,EACnD;KACC,MAAM;OAAEC,KAAK;OAAEC;MAAO,2CAAG,IAAI,gDAAuBF,QAAQ,CAAC;KAE7D,MAAMG,YAAY,GAAG,IAAI,CAACrB,KAAK,CAACsB,QAAQ,CAAC,WAAW,EAAEH,KAAK,CAAC;KAC5D,MAAMI,YAAY,GAAG,IAAI,CAACvB,KAAK,CAACsB,QAAQ,CAAC,WAAW,EAAEF,KAAK,CAAC;KAE5D,OAAOI,OAAO,CAACC,GAAG,CAAC,CAACJ,YAAY,EAAEE,YAAY,CAAC,CAAC;;CAkBlD;CAAC,gCAfsBL,QAAmC,EACzD;GACC,IAAIC,KAAK,GAAGD,QAAQ;GACpB,IAAIS,cAAI,CAACC,aAAa,CAACT,KAAK,CAAC,EAC7B;KACCA,KAAK,GAAG,CAACA,KAAK,CAAC;;GAGhB,MAAMC,KAAK,GAAG,EAAE;GAChBD,KAAK,CAACU,OAAO,CAAEzB,IAAI,IAAK;KACvBgB,KAAK,CAACU,IAAI,CAAChC,WAAW,CAACK,gBAAgB,CAACC,IAAI,CAAC,CAAC;IAC9C,CAAC;GAEF,OAAO;KAAEe,KAAK;KAAEC;IAAO;CACxB;;;;;;;;"}