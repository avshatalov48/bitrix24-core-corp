this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,t,r){"use strict";var a=babelHelpers.classPrivateFieldLooseKey("prepareUsersForStore");class o{constructor(){Object.defineProperty(this,a,{value:i});this.store=null;this.store=t.Core.getStore()}static getDialogForUser(e){return{dialogId:o.getUserId(e),avatar:e.avatar,color:e.color,name:e.name,type:r.ChatType.user,role:r.UserRole.member}}static getUserId(e){var s,t;return(s=(t=e.id)!=null?t:e.networkId)!=null?s:0}setUsersToModel(e){const{users:s,chats:t}=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);const r=this.store.dispatch("users/set",s);const o=this.store.dispatch("chats/set",t);return Promise.all([r,o])}addUsersToModel(e){const{users:s,chats:t}=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);const r=this.store.dispatch("users/add",s);const o=this.store.dispatch("chats/add",t);return Promise.all([r,o])}}function i(e){let t=e;if(s.Type.isPlainObject(t)){t=[t]}const r=[];t.forEach((e=>{r.push(o.getDialogForUser(e))}));return{users:t,chats:r}}e.UserManager=o})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX,BX.Messenger.v2.Application,BX.Messenger.v2.Const);
//# sourceMappingURL=user.bundle.map.js