{"version":3,"file":"entity-creator.bundle.js","sources":["../src/entity-creator.js"],"sourcesContent":["import {BaseEvent, EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Picker} from 'ai.picker';\nimport 'calendar.sliderloader';\n\nimport {Core} from 'im.v2.application.core';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nconst REQUEST_METHODS = Object.freeze({\n\ttask: RestMethod.imChatTaskPrepare,\n\tmeeting: RestMethod.imChatCalendarPrepare,\n});\n\nconst CALENDAR_ON_ENTRY_SAVE_EVENT = 'BX.Calendar:onEntrySave';\n\nexport class EntityCreator\n{\n\t#chatId: number = 0;\n\t#restClient: RestClient;\n\n\t#onCalendarEntrySaveHandler: ?Function;\n\t#calendarSliderId: ?number = null;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#chatId = chatId;\n\t}\n\n\tcreateAiTextForChat(startMessage): void\n\t{\n\t\tthis.#createAiText(startMessage);\n\t}\n\n\tcreateTaskForChat(): Promise\n\t{\n\t\treturn this.#createTask();\n\t}\n\n\tcreateTaskForMessage(messageId: number): Promise\n\t{\n\t\treturn this.#createTask(messageId);\n\t}\n\n\tcreateMeetingForChat(): Promise\n\t{\n\t\treturn this.#createMeeting();\n\t}\n\n\tcreateMeetingForMessage(messageId: number): Promise\n\t{\n\t\treturn this.#createMeeting(messageId);\n\t}\n\n\t#createMeeting(messageId?: number): Promise\n\t{\n\t\tconst queryParams = {CHAT_ID: this.#chatId};\n\t\tif (messageId)\n\t\t{\n\t\t\tqueryParams['MESSAGE_ID'] = messageId;\n\t\t}\n\n\t\treturn this.#requestPreparedParams(REQUEST_METHODS.meeting, queryParams).then(sliderParams => {\n\t\t\tconst {params} = sliderParams;\n\n\t\t\tthis.#onCalendarEntrySaveHandler = this.#onCalendarEntrySave.bind(this, params.sliderId, messageId);\n\t\t\tEventEmitter.subscribeOnce(CALENDAR_ON_ENTRY_SAVE_EVENT, this.#onCalendarEntrySaveHandler);\n\n\t\t\treturn this.#openCalendarSlider(params);\n\t\t});\n\t}\n\n\t#createAiText(startMessage: ''): Promise\n\t{\n\t\tconst picker = new Picker({\n\t\t\tstartMessage: startMessage,\n\t\t\tmoduleId: 'im',\n\t\t\tcontextId: 'im_menu_plus',\n\t\t\thistory: true,\n\t\t\tonSelect: (item) => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.insertText, {\n\t\t\t\t\ttext: item.data,\n\t\t\t\t\treplace: true,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t\tpicker\n\t\t\t.setLangSpace(Picker.LangSpace.text)\n\t\t\t.text()\n\t\t;\n\t}\n\n\t#createTask(messageId?: number): Promise\n\t{\n\t\tconst queryParams = {CHAT_ID: this.#chatId};\n\t\tif (messageId)\n\t\t{\n\t\t\tqueryParams['MESSAGE_ID'] = messageId;\n\t\t}\n\n\t\treturn this.#requestPreparedParams(REQUEST_METHODS.task, queryParams).then(sliderParams => {\n\t\t\tconst {link, params} = sliderParams;\n\n\t\t\treturn this.#openTaskSlider(link, params);\n\t\t});\n\t}\n\n\t#requestPreparedParams(requestMethod: string, query: Object): Promise\n\t{\n\t\treturn this.#restClient.callMethod(requestMethod, query).then(result => {\n\t\t\treturn result.data();\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}\n\n\t#openTaskSlider(sliderUri: string, sliderParams: Object)\n\t{\n\t\tBX.SidePanel.Instance.open(sliderUri, {\n\t\t\trequestMethod: 'post',\n\t\t\trequestParams: sliderParams,\n\t\t\tcacheable: false,\n\t\t});\n\t}\n\n\t#openCalendarSlider(sliderParams: Object)\n\t{\n\t\tnew (window.top.BX || window.BX).Calendar.SliderLoader(0, sliderParams).show();\n\t}\n\n\t#onCalendarEntrySave(sliderId: string, messageId: ?number, event: BaseEvent)\n\t{\n\t\tconst eventData = event.getData();\n\t\tif (eventData.sliderId !== sliderId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst queryParams = {\n\t\t\tCALENDAR_ID: eventData.responseData.entryId,\n\t\t\tCHAT_ID: this.#chatId\n\t\t};\n\n\t\tif (messageId)\n\t\t{\n\t\t\tqueryParams['MESSAGE_ID'] = messageId;\n\t\t}\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatCalendarAdd, queryParams).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}\n}"],"names":["REQUEST_METHODS","Object","freeze","task","RestMethod","imChatTaskPrepare","meeting","imChatCalendarPrepare","CALENDAR_ON_ENTRY_SAVE_EVENT","EntityCreator","constructor","chatId","Core","getRestClient","createAiTextForChat","startMessage","createTaskForChat","createTaskForMessage","messageId","createMeetingForChat","createMeetingForMessage","queryParams","CHAT_ID","then","sliderParams","params","bind","sliderId","EventEmitter","subscribeOnce","picker","Picker","moduleId","contextId","history","onSelect","item","emit","EventType","textarea","insertText","text","data","replace","setLangSpace","LangSpace","link","requestMethod","query","callMethod","result","catch","error","console","sliderUri","BX","SidePanel","Instance","open","requestParams","cacheable","window","top","Calendar","SliderLoader","show","event","eventData","getData","CALENDAR_ID","responseData","entryId","imChatCalendarAdd"],"mappings":"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"}