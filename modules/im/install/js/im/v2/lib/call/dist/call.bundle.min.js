this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,t,a,l,i,r,n,o,c,d,b,u,v){"use strict";class h{static createRoom(e){o.runAction(c.RestMethod.imCallBetaCreateRoom,{data:{chatId:e}})}}let p=e=>e,C;const g=e=>{const s=()=>{const s=a.getSelectedItems();const t=L(s);t.forEach((s=>{e.onSelect({user:s})}))};const t=()=>{a.hide()};const a=new b.Dialog({targetNode:e.bindElement,width:400,enableSearch:true,dropdownMode:true,context:"IM_CHAT_SEARCH",entities:[{id:"user",dynamicLoad:true,itemOptions:{default:{linkTitle:"",link:""}},options:{inviteEmployeeLink:false,"!userId":v.Core.getUserId()},filters:[{id:"im.userDataFilter"}]}],footer:B(s,t)});a.show();return Promise.resolve({close:()=>{a.hide()}})};const L=e=>e.map((e=>({id:e.id,name:e.title.text,avatar:e.avatar,avatar_hr:e.avatar,gender:e.customData.get("imUser").GENDER})));const B=(e,s)=>{const t=d.Loc.getMessage("IM_LIB_CALL_ADD_BUTTON");const a=d.Loc.getMessage("IM_LIB_CALL_CANCEL_BUTTON");return d.Tag.render(C||(C=p`
		<button class="ui-btn ui-btn-xs ui-btn-primary" onclick="${0}">${0}</button>
		<button class="ui-btn ui-btn-xs ui-btn-light-border" onclick="${0}">${0}</button>
	`),e,t,s,a)};var P=babelHelpers.classPrivateFieldLooseKey("controller");var f=babelHelpers.classPrivateFieldLooseKey("store");var F=babelHelpers.classPrivateFieldLooseKey("getController");var H=babelHelpers.classPrivateFieldLooseKey("subscribeToEvents");var y=babelHelpers.classPrivateFieldLooseKey("onCallCreated");var I=babelHelpers.classPrivateFieldLooseKey("onCallJoin");var M=babelHelpers.classPrivateFieldLooseKey("onCallLeave");var m=babelHelpers.classPrivateFieldLooseKey("onCallDestroy");var E=babelHelpers.classPrivateFieldLooseKey("onOpenChat");var S=babelHelpers.classPrivateFieldLooseKey("checkCallSupport");var X=babelHelpers.classPrivateFieldLooseKey("checkUserCallSupport");var O=babelHelpers.classPrivateFieldLooseKey("checkChatCallSupport");var A=babelHelpers.classPrivateFieldLooseKey("pushServerIsActive");var j=babelHelpers.classPrivateFieldLooseKey("getCurrentDialogId");class D{static getInstance(){if(!this.instance){this.instance=new this}return this.instance}static init(){D.getInstance()}constructor(){Object.defineProperty(this,j,{value:q});Object.defineProperty(this,A,{value:$});Object.defineProperty(this,O,{value:V});Object.defineProperty(this,X,{value:x});Object.defineProperty(this,S,{value:N});Object.defineProperty(this,E,{value:k});Object.defineProperty(this,m,{value:U});Object.defineProperty(this,M,{value:R});Object.defineProperty(this,I,{value:_});Object.defineProperty(this,y,{value:T});Object.defineProperty(this,H,{value:K});Object.defineProperty(this,F,{value:w});Object.defineProperty(this,P,{writable:true,value:void 0});Object.defineProperty(this,f,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,f)[f]=v.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,P)[P]=babelHelpers.classPrivateFieldLooseBase(this,F)[F]();babelHelpers.classPrivateFieldLooseBase(this,H)[H]()}createBetaCallRoom(e){h.createRoom(e)}startCall(e,s=true){r.Logger.warn("CallManager: startCall",e,s);babelHelpers.classPrivateFieldLooseBase(this,P)[P].startCall(e,s)}joinCall(e,s=true){r.Logger.warn("CallManager: joinCall",e,s);babelHelpers.classPrivateFieldLooseBase(this,P)[P].joinCall(e,s)}leaveCurrentCall(){r.Logger.warn("CallManager: leaveCurrentCall");babelHelpers.classPrivateFieldLooseBase(this,P)[P].leaveCurrentCall()}foldCurrentCall(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasActiveCall()||!babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasVisibleCall()){return}babelHelpers.classPrivateFieldLooseBase(this,P)[P].fold()}unfoldCurrentCall(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasActiveCall()){return}babelHelpers.classPrivateFieldLooseBase(this,P)[P].unfold()}getCurrentCallDialogId(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasActiveCall()){return""}return babelHelpers.classPrivateFieldLooseBase(this,P)[P].currentCall.associatedEntity.id}hasCurrentCall(){return babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasActiveCall()}hasCurrentScreenSharing(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasActiveCall()){return false}return babelHelpers.classPrivateFieldLooseBase(this,P)[P].currentCall.isScreenSharingStarted()}hasVisibleCall(){if(!babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasActiveCall()){return false}return babelHelpers.classPrivateFieldLooseBase(this,P)[P].hasVisibleCall()}startTest(){babelHelpers.classPrivateFieldLooseBase(this,P)[P].test()}chatCanBeCalled(e){const s=babelHelpers.classPrivateFieldLooseBase(this,S)[S](e);const t=this.hasCurrentCall();return s&&!t}}function w(){return new a.Controller({init:true,language:v.Core.getLanguageId(),messengerFacade:{getDefaultZIndex:()=>i.MessengerSlider.getInstance().getZIndex(),isMessengerOpen:()=>i.MessengerSlider.getInstance().isOpened(),isSliderFocused:()=>i.MessengerSlider.getInstance().isFocused(),isThemeDark:()=>false,openMessenger:e=>l.Messenger.openChat(e),openHistory:e=>l.Messenger.openChat(e),openSettings:()=>{},openHelpArticle:()=>{},getContainer:()=>document.querySelector(`.${D.viewContainerClass}`),getMessageCount:()=>babelHelpers.classPrivateFieldLooseBase(this,f)[f].getters["recent/getTotalChatCounter"],getCurrentDialogId:()=>babelHelpers.classPrivateFieldLooseBase(this,j)[j](),isPromoRequired:()=>false,repeatSound:(e,s,t)=>{n.SoundNotificationManager.getInstance().playLoop(e,s,t)},stopRepeatSound:e=>{n.SoundNotificationManager.getInstance().stop(e)},showUserSelector:g},events:{[a.Controller.Events.onOpenVideoConference]:e=>{const s=e.getData();const t=s.dialogId;const a="";return l.Messenger.openConference({code:a})}}})}function K(){s.EventEmitter.subscribe(c.EventType.layout.onOpenChat,babelHelpers.classPrivateFieldLooseBase(this,E)[E].bind(this));s.EventEmitter.subscribe(c.EventType.layout.onOpenNotifications,this.foldCurrentCall.bind(this));s.EventEmitter.subscribe("CallEvents::callCreated",babelHelpers.classPrivateFieldLooseBase(this,y)[y].bind(this))}function T(e){const{call:s}=e.getData()[0];s.addEventListener(BX.Call.Event.onJoin,babelHelpers.classPrivateFieldLooseBase(this,I)[I].bind(this));s.addEventListener(BX.Call.Event.onLeave,babelHelpers.classPrivateFieldLooseBase(this,M)[M].bind(this));s.addEventListener(BX.Call.Event.onDestroy,babelHelpers.classPrivateFieldLooseBase(this,m)[m].bind(this));babelHelpers.classPrivateFieldLooseBase(this,f)[f].dispatch("recent/calls/addActiveCall",{dialogId:s.associatedEntity.id,name:s.associatedEntity.name,call:s,state:c.RecentCallStatus.waiting})}function _(e){babelHelpers.classPrivateFieldLooseBase(this,f)[f].dispatch("recent/calls/updateActiveCall",{dialogId:e.call.associatedEntity.id,fields:{state:c.RecentCallStatus.joined}})}function R(e){babelHelpers.classPrivateFieldLooseBase(this,f)[f].dispatch("recent/calls/updateActiveCall",{dialogId:e.call.associatedEntity.id,fields:{state:c.RecentCallStatus.waiting}})}function U(e){babelHelpers.classPrivateFieldLooseBase(this,f)[f].dispatch("recent/calls/deleteActiveCall",{dialogId:e.call.associatedEntity.id})}function k(e){const s=this.getCurrentCallDialogId();const t=e.getData().dialogId;if(s===t){return}this.foldCurrentCall()}function N(e){if(!babelHelpers.classPrivateFieldLooseBase(this,A)[A]()||!BX.Call.Util.isWebRTCSupported()){return false}const s=Number.parseInt(e,10);return s>0?babelHelpers.classPrivateFieldLooseBase(this,X)[X](s):babelHelpers.classPrivateFieldLooseBase(this,O)[O](e)}function x(e){const s=babelHelpers.classPrivateFieldLooseBase(this,f)[f].getters["users/get"](e);return s&&s.status!=="guest"&&!s.bot&&!s.network&&s.id!==v.Core.getUserId()&&!!s.lastActivityDate}function V(e){const s=babelHelpers.classPrivateFieldLooseBase(this,f)[f].getters["dialogues/get"](e);if(!s){return false}const{userCounter:t}=s;return t>1&&t<=BX.Call.Util.getUserLimit()}function $(){return true}function q(){const e=babelHelpers.classPrivateFieldLooseBase(this,f)[f].getters["application/getLayout"];if(e.name!==c.Layout.chat.name){return""}return e.entityId}D.viewContainerClass="bx-im-messenger__call_container";e.CallManager=D})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX.Event,BX.Vue3.Vuex,BX.Call,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX,BX.UI.EntitySelector,BX.UI,BX.Messenger.v2.Application);
//# sourceMappingURL=call.bundle.map.js