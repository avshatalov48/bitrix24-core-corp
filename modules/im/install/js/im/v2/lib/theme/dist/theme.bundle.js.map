{"version":3,"file":"theme.bundle.js","sources":["../src/color-scheme.js","../src/theme.js"],"sourcesContent":["export const ThemeType = Object.freeze({\n\tlight: 'light',\n\tdark: 'dark',\n});\n\nexport const ThemeFontColor = Object.freeze({\n\twhite: '#fff',\n\tgray: 'gray',\n});\n\nexport const ThemeColorScheme = Object.freeze({\n\t// dark ones\n\t1: {\n\t\tcolor: '#9fcfff',\n\t\ttype: ThemeType.dark,\n\t},\n\t2: {\n\t\tcolor: '#81d8bf',\n\t\ttype: ThemeType.dark,\n\t},\n\t3: {\n\t\tcolor: '#7fadd1',\n\t\ttype: ThemeType.dark,\n\t},\n\t4: {\n\t\tcolor: '#7a90b6',\n\t\ttype: ThemeType.dark,\n\t},\n\t5: {\n\t\tcolor: '#5f9498',\n\t\ttype: ThemeType.dark,\n\t},\n\t6: {\n\t\tcolor: '#799fe1',\n\t\ttype: ThemeType.dark,\n\t},\n\t// light ones\n\t7: {\n\t\tcolor: '#cfeefa',\n\t\ttype: ThemeType.light,\n\t},\n\t9: {\n\t\tcolor: '#efded3',\n\t\ttype: ThemeType.light,\n\t},\n\t11: {\n\t\tcolor: '#eff4f6',\n\t\ttype: ThemeType.light,\n\t},\n});\n\nexport type ThemeItem = {\n\tcolor: string,\n\ttype: $Values<typeof ThemeType>\n};","import { Core } from 'im.v2.application.core';\nimport { Settings } from 'im.v2.const';\nimport { ThemeColorScheme, ThemeType } from './color-scheme';\n\nimport type { ThemeItem } from './color-scheme';\nexport type { ThemeItem } from './color-scheme';\n\nconst IMAGE_FOLDER_PATH = '/bitrix/js/im/images/chat-v2-background';\n\nexport type BackgroundStyle = {\n\tbackgroundColor: string,\n\tbackgroundImage: string,\n\tbackgroundRepeat: string,\n\tbackgroundSize: string\n};\n\nconst BackgroundPatternColor = Object.freeze({\n\twhite: 'white',\n\tgray: 'gray',\n});\n\nconst ThemeManager = {\n\tisLightTheme(): boolean\n\t{\n\t\tconst selectedBackgroundId = Core.getStore().getters['application/settings/get'](Settings.dialog.background);\n\t\tconst selectedColorScheme: ThemeItem = ThemeColorScheme[selectedBackgroundId];\n\n\t\treturn selectedColorScheme?.type === ThemeType.light;\n\t},\n\n\tisDarkTheme(): boolean\n\t{\n\t\tconst selectedBackgroundId = Core.getStore().getters['application/settings/get'](Settings.dialog.background);\n\t\tconst selectedColorScheme: ThemeItem = ThemeColorScheme[selectedBackgroundId];\n\n\t\treturn selectedColorScheme?.type === ThemeType.dark;\n\t},\n\n\tgetCurrentBackgroundStyle(): BackgroundStyle\n\t{\n\t\tconst selectedBackgroundId = Core.getStore().getters['application/settings/get'](Settings.dialog.background);\n\n\t\treturn this.getBackgroundStyleById(selectedBackgroundId);\n\t},\n\n\tgetBackgroundStyleById(backgroundId: string | number): BackgroundStyle\n\t{\n\t\tconst colorScheme: ThemeItem = ThemeColorScheme[backgroundId];\n\t\tif (!colorScheme)\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst patternColor = colorScheme.type === ThemeType.light\n\t\t\t? BackgroundPatternColor.gray\n\t\t\t: BackgroundPatternColor.white\n\t\t;\n\t\tconst patternImage = `url('${IMAGE_FOLDER_PATH}/pattern-${patternColor}.svg')`;\n\t\tconst highlightImage = `url('${IMAGE_FOLDER_PATH}/${backgroundId}.png')`;\n\n\t\treturn {\n\t\t\tbackgroundColor: colorScheme.color,\n\t\t\tbackgroundImage: `${patternImage}, ${highlightImage}`,\n\t\t\tbackgroundPosition: 'top right, center',\n\t\t\tbackgroundRepeat: 'repeat, no-repeat',\n\t\t\tbackgroundSize: 'auto, cover',\n\t\t};\n\t},\n};\n\nexport { ThemeColorScheme, ThemeType, ThemeManager };\n"],"names":["ThemeType","Object","freeze","light","dark","ThemeFontColor","white","gray","ThemeColorScheme","color","type","IMAGE_FOLDER_PATH","BackgroundPatternColor","ThemeManager","isLightTheme","selectedBackgroundId","Core","getStore","getters","Settings","dialog","background","selectedColorScheme","isDarkTheme","getCurrentBackgroundStyle","getBackgroundStyleById","backgroundId","colorScheme","patternColor","patternImage","highlightImage","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize"],"mappings":"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"}