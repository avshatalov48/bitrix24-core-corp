{"version":3,"file":"notifier.bundle.js","sources":["../src/notifier.js"],"sourcesContent":["import {Notifier, NotificationOptions} from 'ui.notification-manager';\nimport {Store} from 'ui.vue3.vuex';\nimport {Loc} from 'main.core';\nimport {BaseEvent} from 'main.core.events';\n\nimport {Core} from 'im.v2.application.core';\nimport {Parser} from 'im.v2.lib.parser';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport {Messenger} from 'im.public';\nimport {NotificationTypesCodes} from 'im.v2.const';\nimport {NotificationService} from 'im.v2.provider.service';\n\nimport type {\n\tImModelUser,\n\tImModelDialog,\n\tImModelMessage,\n\tImModelNotification,\n\tImModelNotificationButton\n} from 'im.v2.model';\n\ntype NotifierClickParams = {\n\tid: string // 'im-notify-2558' | 'im-chat-1-2565'\n};\n\ntype NotifierActionParams = {\n\taction: string, // 'button_1'\n\tid: string, // 'im-notify-2561'\n\tuserInput?: string\n};\n\nconst CHAT_MESSAGE_PREFIX = 'im-chat';\nconst LINES_MESSAGE_PREFIX = 'im-lines';\nconst NOTIFICATION_PREFIX = 'im-notify';\nconst ACTION_BUTTON_PREFIX = 'button_';\nconst ButtonNumber = {\n\tfirst: '1',\n\tsecond: '2'\n};\n\nconst DIALOG_TYPE_USER = 'user';\n\nexport class NotifierManager\n{\n\tstatic #instance: NotifierManager;\n\n\t#store: Store;\n\t#notificationService: NotificationService;\n\n\tstatic getInstance(): NotifierManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new this();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tNotifierManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#notificationService = new NotificationService();\n\n\t\tthis.#subscribeToNotifierEvents();\n\t}\n\n\tshowMessage(params: {message: ImModelMessage, dialog: ImModelDialog, user?: ImModelUser, lines: boolean})\n\t{\n\t\tconst { message, dialog, user, lines } = params;\n\t\tlet text = '';\n\t\tif (user && dialog.type !== DIALOG_TYPE_USER)\n\t\t{\n\t\t\ttext += `${user.name}: `;\n\t\t}\n\n\t\ttext += Parser.purifyMessage(message);\n\n\t\tlet id = `im-chat-${dialog.dialogId}-${message.id}`;\n\t\tif (lines)\n\t\t{\n\t\t\tid = `im-lines-${dialog.dialogId}-${message.id}`;\n\t\t}\n\t\tconst notificationOptions = {\n\t\t\tid,\n\t\t\ttitle: dialog.name,\n\t\t\ticon: dialog.avatar || user?.avatar,\n\t\t\ttext,\n\t\t};\n\n\t\tconst isDesktopFocused: boolean = DesktopManager.isChatWindow() && document.hasFocus();\n\t\tif (isDesktopFocused)\n\t\t{\n\t\t\tNotifier.notifyViaBrowserProvider(notificationOptions);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tNotifier.notify(notificationOptions);\n\t\t}\n\t}\n\n\tshowNotification(notification: ImModelNotification, user?: ImModelUser)\n\t{\n\t\tlet title;\n\t\tif (notification.title)\n\t\t{\n\t\t\ttitle = notification.title;\n\t\t}\n\t\telse if (user)\n\t\t{\n\t\t\ttitle = user.name;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttitle = Loc.getMessage('IM_LIB_NOTIFIER_NOTIFY_SYSTEM_TITLE');\n\t\t}\n\n\t\tconst notificationOptions = this.#prepareNotificationOptions(title, notification, user);\n\n\t\tconst isDesktopFocused: boolean = DesktopManager.isChatWindow() && document.hasFocus();\n\t\tif (isDesktopFocused)\n\t\t{\n\t\t\tNotifier.notifyViaBrowserProvider(notificationOptions);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tNotifier.notify(notificationOptions);\n\t\t}\n\t}\n\n\t#prepareNotificationOptions(\n\t\ttitle: string,\n\t\tnotification: ImModelNotification,\n\t\tuser?: ImModelUser\n\t): NotificationOptions\n\t{\n\t\tconst notificationOptions = {\n\t\t\tid: `im-notify-${notification.id}`,\n\t\t\ttitle,\n\t\t\ticon: user? user.avatar: '',\n\t\t\ttext: Parser.purifyNotification(notification),\n\t\t};\n\n\t\tif (notification.sectionCode === NotificationTypesCodes.confirm)\n\t\t{\n\t\t\tconst [firstButton, secondButton] = notification.notifyButtons;\n\t\t\tnotificationOptions.button1Text = firstButton.TEXT;\n\t\t\tnotificationOptions.button2Text = secondButton.TEXT;\n\t\t}\n\t\telse if (notification.params?.CAN_ANSWER === 'Y')\n\t\t{\n\t\t\tnotificationOptions.inputPlaceholderText = Loc.getMessage('IM_LIB_NOTIFIER_NOTIFY_REPLY_PLACEHOLDER');\n\t\t}\n\n\t\treturn notificationOptions;\n\t}\n\n\t#subscribeToNotifierEvents()\n\t{\n\t\tNotifier.subscribe('click', (event: BaseEvent<NotifierClickParams>) => {\n\t\t\tthis.#onNotifierClick(event.getData());\n\t\t});\n\n\t\tNotifier.subscribe('action', (event: BaseEvent<NotifierActionParams>) => {\n\t\t\tthis.#onNotifierAction(event.getData());\n\t\t});\n\t}\n\n\t#onNotifierClick(params: NotifierClickParams)\n\t{\n\t\tconst {id} = params;\n\t\tif (this.#isChatMessage(id))\n\t\t{\n\t\t\tconst dialogId = this.#extractDialogId(id);\n\t\t\tMessenger.openChat(dialogId);\n\t\t}\n\t\telse if (this.#isLinesMessage(id))\n\t\t{\n\t\t\tconst dialogId = this.#extractDialogId(id);\n\t\t\tMessenger.openLines(dialogId);\n\t\t}\n\t\telse if (this.#isNotification(id))\n\t\t{\n\t\t\tMessenger.openNotifications();\n\t\t}\n\t}\n\n\t#onNotifierAction(params: NotifierActionParams)\n\t{\n\t\tconst {id, action, userInput} = params;\n\t\tif (!this.#isNotification(id))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst notificationId = this.#extractNotificationId(id);\n\t\tconst notification = this.#store.getters['notifications/getById'](notificationId);\n\t\tif (userInput)\n\t\t{\n\t\t\tthis.#onNotifierQuickAnswer(notification, userInput);\n\t\t}\n\t\telse if (this.#isConfirmButtonAction(action, notification))\n\t\t{\n\t\t\tthis.#onNotifierButtonClick(action, notification);\n\t\t}\n\t}\n\n\t#onNotifierQuickAnswer(notification: ImModelNotification, text: string)\n\t{\n\t\tthis.#notificationService.sendQuickAnswer({\n\t\t\tid: notification.id,\n\t\t\ttext: text,\n\t\t});\n\t}\n\n\t#onNotifierButtonClick(action: string, notification: ImModelNotification)\n\t{\n\t\tconst [firstButton, secondButton] = notification.notifyButtons;\n\t\tconst actionButtonNumber = this.#extractButtonNumber(action);\n\t\tif (actionButtonNumber === ButtonNumber.first)\n\t\t{\n\t\t\tthis.#sendButtonAction(notification, firstButton);\n\t\t}\n\t\telse if (actionButtonNumber === ButtonNumber.second)\n\t\t{\n\t\t\tthis.#sendButtonAction(notification, secondButton);\n\t\t}\n\t}\n\n\t#sendButtonAction(notification: ImModelNotification, button: ImModelNotificationButton)\n\t{\n\t\tconst [notificationId, value] = this.#extractButtonParams(button);\n\n\t\tthis.#notificationService.sendConfirmAction(notificationId, value);\n\t}\n\n\t#isChatMessage(id: string): boolean\n\t{\n\t\treturn id.startsWith(CHAT_MESSAGE_PREFIX);\n\t}\n\n\t#isLinesMessage(id: string): boolean\n\t{\n\t\treturn id.startsWith(LINES_MESSAGE_PREFIX);\n\t}\n\n\t#isNotification(id: string): boolean\n\t{\n\t\treturn id.startsWith(NOTIFICATION_PREFIX);\n\t}\n\n\t#isConfirmButtonAction(action: string, notification: ImModelNotification): boolean\n\t{\n\t\tconst notificationType = notification.sectionCode;\n\n\t\treturn action.startsWith(ACTION_BUTTON_PREFIX) && notificationType === NotificationTypesCodes.confirm;\n\t}\n\n\t#extractDialogId(id: string): string\n\t{\n\t\t// 'im-chat-1-2565'\n\t\treturn id.split('-')[2];\n\t}\n\n\t#extractNotificationId(id: string): string\n\t{\n\t\t// 'im-notify-2558'\n\t\treturn id.split('-')[2];\n\t}\n\n\t#extractButtonNumber(action: string): string\n\t{\n\t\t// 'button_1'\n\t\treturn action.split('_')[1];\n\t}\n\n\t#extractButtonParams(button: ImModelNotificationButton): string[]\n\t{\n\t\t// '2568|Y'\n\t\treturn button.COMMAND_PARAMS.split('|');\n\t}\n}\n"],"names":["CHAT_MESSAGE_PREFIX","LINES_MESSAGE_PREFIX","NOTIFICATION_PREFIX","ACTION_BUTTON_PREFIX","ButtonNumber","first","second","DIALOG_TYPE_USER","NotifierManager","getInstance","init","constructor","Core","getStore","NotificationService","showMessage","params","message","dialog","user","lines","text","type","name","Parser","purifyMessage","id","dialogId","notificationOptions","title","icon","avatar","isDesktopFocused","DesktopManager","isChatWindow","document","hasFocus","Notifier","notifyViaBrowserProvider","notify","showNotification","notification","Loc","getMessage","purifyNotification","sectionCode","NotificationTypesCodes","confirm","firstButton","secondButton","notifyButtons","button1Text","TEXT","button2Text","CAN_ANSWER","inputPlaceholderText","subscribe","event","getData","Messenger","openChat","openLines","openNotifications","action","userInput","notificationId","getters","sendQuickAnswer","actionButtonNumber","button","value","sendConfirmAction","startsWith","notificationType","split","COMMAND_PARAMS"],"mappings":"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"}