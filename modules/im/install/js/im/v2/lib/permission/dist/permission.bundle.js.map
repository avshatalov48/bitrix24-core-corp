{"version":3,"file":"permission.bundle.js","sources":["../src/permission.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatType, ChatActionType, ChatActionGroup, UserRole } from 'im.v2.const';\n\nimport type { ImModelChat } from 'im.v2.model';\n\ntype ChatTypeItem = $Keys<typeof ChatType>;\ntype ActionTypeItem = $Keys<typeof ChatActionType>;\ntype ActionGroupItem = $Keys<typeof ChatActionGroup>;\ntype ActionGroup = ActionTypeItem[];\ntype RoleItem = $Keys<typeof UserRole>;\n\ntype RawPermissions = {\n\tbyChatType: PermissionsByChatType,\n\tactionGroups: {},\n\tactionGroupsDefaults: {},\n};\n\ntype PermissionsByChatType = {\n\t[chatType: ChatTypeItem]: {\n\t\t[operation: ActionTypeItem]: RoleItem,\n\t}\n};\n\nconst DEFAULT_TYPE = 'default';\n\nexport class PermissionManager\n{\n\tstatic #instance: PermissionManager;\n\n\t#chatTypePermissions: PermissionsByChatType;\n\t#actionGroups: Object<ActionGroupItem, ActionGroup>;\n\t#actionGroupsDefaultRoles: Object<ActionGroupItem, RoleItem>;\n\n\tstatic getInstance(): PermissionManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new this();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tPermissionManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tconst { permissions } = Core.getApplicationData();\n\t\tLogger.warn('PermissionManager: permission from server', permissions);\n\t\tthis.#init(permissions);\n\t}\n\n\tcanPerformAction(actionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\treturn this.#canPerformActionByChatType(actionType, dialogId)\n\t\t\t&& this.#canPerformActionByChatSettings(actionType, dialogId);\n\t}\n\n\tgetDefaultRolesForActionGroups(): Object<ActionGroupItem, RoleItem>\n\t{\n\t\treturn this.#actionGroupsDefaultRoles;\n\t}\n\n\t#init(rawPermissions: RawPermissions)\n\t{\n\t\tconst { byChatType, actionGroups, actionGroupsDefaults } = rawPermissions;\n\t\tthis.#chatTypePermissions = this.#prepareChatTypePermissions(byChatType);\n\t\tthis.#actionGroups = actionGroups;\n\t\tthis.#actionGroupsDefaultRoles = actionGroupsDefaults;\n\t}\n\n\t#canPerformActionByChatType(rawActionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\tlet actionType = rawActionType;\n\t\tconst dialog: ImModelChat = this.#getDialog(dialogId);\n\t\tconst { role: userRole, owner: chatOwner } = dialog;\n\t\tlet { type: chatType } = dialog;\n\n\t\tif (Type.isUndefined(this.#chatTypePermissions[chatType]))\n\t\t{\n\t\t\tchatType = DEFAULT_TYPE;\n\t\t}\n\n\t\t// for kick check if users can leave this type of chat\n\t\tif (actionType === ChatActionType.kick)\n\t\t{\n\t\t\tactionType = ChatActionType.leave;\n\t\t}\n\n\t\tconst isOwner = chatOwner === Core.getUserId();\n\t\tif (actionType === ChatActionType.leave && isOwner)\n\t\t{\n\t\t\tactionType = ChatActionType.leaveOwner;\n\t\t}\n\n\t\tif (Type.isUndefined(this.#chatTypePermissions[chatType][actionType]))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst minimalRole = this.#chatTypePermissions[chatType][actionType];\n\n\t\treturn this.#checkMinimalRole(minimalRole, userRole);\n\t}\n\n\t#canPerformActionByChatSettings(actionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\tconst { role: userRole, type: chatType, permissions: chatPermissions } = this.#getDialog(dialogId);\n\t\tif (chatType === ChatType.user)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (actionType === ChatActionType.send)\n\t\t{\n\t\t\treturn this.#checkMinimalRole(chatPermissions.canPost, userRole);\n\t\t}\n\n\t\tconst actionGroup = this.#getGroupByAction(actionType);\n\t\tif (!actionGroup)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet minimalRoleForGroup = chatPermissions[actionGroup];\n\t\tif (!minimalRoleForGroup)\n\t\t{\n\t\t\tminimalRoleForGroup = UserRole.member;\n\t\t}\n\n\t\treturn this.#checkMinimalRole(minimalRoleForGroup, userRole);\n\t}\n\n\t#getGroupByAction(actionType: ActionTypeItem): ?ActionGroupItem\n\t{\n\t\tconst searchResult = Object.entries(this.#actionGroups).find(([_, groupActions]) => {\n\t\t\treturn groupActions.includes(actionType);\n\t\t});\n\n\t\tif (!searchResult)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [groupName] = searchResult;\n\n\t\treturn groupName;\n\t}\n\n\t#prepareChatTypePermissions(permissionsByChatType: PermissionsByChatType): PermissionsByChatType\n\t{\n\t\tconst preparedPermissions = { ...permissionsByChatType };\n\n\t\tpreparedPermissions[ChatType.user] = {\n\t\t\t[ChatActionType.avatar]: UserRole.none,\n\t\t\t[ChatActionType.call]: UserRole.member,\n\t\t\t[ChatActionType.extend]: UserRole.member,\n\t\t\t[ChatActionType.leave]: UserRole.none,\n\t\t\t[ChatActionType.leaveOwner]: UserRole.none,\n\t\t\t[ChatActionType.mute]: UserRole.none,\n\t\t\t[ChatActionType.rename]: UserRole.none,\n\t\t\t[ChatActionType.send]: UserRole.member,\n\t\t};\n\n\t\treturn preparedPermissions;\n\t}\n\n\t#checkMinimalRole(minimalRole: RoleItem, roleToCheck: RoleItem): boolean\n\t{\n\t\tif (minimalRole === UserRole.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst roleWeights = {};\n\t\tObject.values(UserRole).forEach((role, index) => {\n\t\t\troleWeights[role] = index;\n\t\t});\n\n\t\treturn roleWeights[roleToCheck] >= roleWeights[minimalRole];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn Core.getStore().getters['chats/get'](dialogId, true);\n\t}\n}\n"],"names":["DEFAULT_TYPE","PermissionManager","getInstance","init","constructor","permissions","Core","getApplicationData","Logger","warn","canPerformAction","actionType","dialogId","getDefaultRolesForActionGroups","rawPermissions","byChatType","actionGroups","actionGroupsDefaults","rawActionType","dialog","role","userRole","owner","chatOwner","type","chatType","Type","isUndefined","ChatActionType","kick","leave","isOwner","getUserId","leaveOwner","minimalRole","chatPermissions","ChatType","user","send","canPost","actionGroup","minimalRoleForGroup","UserRole","member","searchResult","Object","entries","find","_","groupActions","includes","groupName","permissionsByChatType","preparedPermissions","avatar","none","call","extend","mute","rename","roleToCheck","roleWeights","values","forEach","index","getStore","getters"],"mappings":";;;;;;;CA0BA,MAAMA,YAAY,GAAG,SAAS;CAAC;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAE/B,CAAO,MAAMC,iBAAiB,CAC9B;GAOC,OAAOC,WAAW,GAClB;KACC,IAAI,yCAAC,IAAI,uBAAU,EACnB;OACC,4CAAI,0BAAa,IAAI,IAAI,EAAE;;KAG5B,+CAAO,IAAI;;GAGZ,OAAOC,IAAI,GACX;KACCF,iBAAiB,CAACC,WAAW,EAAE;;GAGhCE,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,MAAM;OAAEC;MAAa,GAAGC,2BAAI,CAACC,kBAAkB,EAAE;KACjDC,uBAAM,CAACC,IAAI,CAAC,2CAA2C,EAAEJ,WAAW,CAAC;KACrE,4CAAI,gBAAOA,WAAW;;GAGvBK,gBAAgB,CAACC,UAA0B,EAAEC,QAAgB,EAC7D;KACC,OAAO,4CAAI,4DAA6BD,UAAU,EAAEC,QAAQ,6CACxD,IAAI,oEAAiCD,UAAU,EAAEC,QAAQ,CAAC;;GAG/DC,8BAA8B,GAC9B;KACC,+CAAO,IAAI;;CA8Hb;CAAC,gBA3HMC,cAA8B,EACpC;GACC,MAAM;KAAEC,UAAU;KAAEC,YAAY;KAAEC;IAAsB,GAAGH,cAAc;GACzE,4CAAI,wFAAwB,IAAI,4DAA6BC,UAAU,CAAC;GACxE,4CAAI,kCAAiBC,YAAY;GACjC,4CAAI,0DAA6BC,oBAAoB;CACtD;CAAC,sCAE2BC,aAA6B,EAAEN,QAAgB,EAC3E;GACC,IAAID,UAAU,GAAGO,aAAa;GAC9B,MAAMC,MAAmB,2CAAG,IAAI,0BAAYP,QAAQ,CAAC;GACrD,MAAM;KAAEQ,IAAI,EAAEC,QAAQ;KAAEC,KAAK,EAAEC;IAAW,GAAGJ,MAAM;GACnD,IAAI;KAAEK,IAAI,EAAEC;IAAU,GAAGN,MAAM;GAE/B,IAAIO,cAAI,CAACC,WAAW,CAAC,4CAAI,8CAAsBF,QAAQ,CAAC,CAAC,EACzD;KACCA,QAAQ,GAAGzB,YAAY;;;;GAIxB,IAAIW,UAAU,KAAKiB,0BAAc,CAACC,IAAI,EACtC;KACClB,UAAU,GAAGiB,0BAAc,CAACE,KAAK;;GAGlC,MAAMC,OAAO,GAAGR,SAAS,KAAKjB,2BAAI,CAAC0B,SAAS,EAAE;GAC9C,IAAIrB,UAAU,KAAKiB,0BAAc,CAACE,KAAK,IAAIC,OAAO,EAClD;KACCpB,UAAU,GAAGiB,0BAAc,CAACK,UAAU;;GAGvC,IAAIP,cAAI,CAACC,WAAW,CAAC,4CAAI,8CAAsBF,QAAQ,CAAC,CAACd,UAAU,CAAC,CAAC,EACrE;KACC,OAAO,IAAI;;GAGZ,MAAMuB,WAAW,GAAG,4CAAI,8CAAsBT,QAAQ,CAAC,CAACd,UAAU,CAAC;GAEnE,+CAAO,IAAI,wCAAmBuB,WAAW,EAAEb,QAAQ;CACpD;CAAC,0CAE+BV,UAA0B,EAAEC,QAAgB,EAC5E;GACC,MAAM;KAAEQ,IAAI,EAAEC,QAAQ;KAAEG,IAAI,EAAEC,QAAQ;KAAEpB,WAAW,EAAE8B;IAAiB,2CAAG,IAAI,0BAAYvB,QAAQ,CAAC;GAClG,IAAIa,QAAQ,KAAKW,oBAAQ,CAACC,IAAI,EAC9B;KACC,OAAO,IAAI;;GAGZ,IAAI1B,UAAU,KAAKiB,0BAAc,CAACU,IAAI,EACtC;KACC,+CAAO,IAAI,wCAAmBH,eAAe,CAACI,OAAO,EAAElB,QAAQ;;GAGhE,MAAMmB,WAAW,2CAAG,IAAI,wCAAmB7B,UAAU,CAAC;GACtD,IAAI,CAAC6B,WAAW,EAChB;KACC,OAAO,IAAI;;GAGZ,IAAIC,mBAAmB,GAAGN,eAAe,CAACK,WAAW,CAAC;GACtD,IAAI,CAACC,mBAAmB,EACxB;KACCA,mBAAmB,GAAGC,oBAAQ,CAACC,MAAM;;GAGtC,+CAAO,IAAI,wCAAmBF,mBAAmB,EAAEpB,QAAQ;CAC5D;CAAC,4BAEiBV,UAA0B,EAC5C;GACC,MAAMiC,YAAY,GAAGC,MAAM,CAACC,OAAO,yCAAC,IAAI,gCAAe,CAACC,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,YAAY,CAAC,KAAK;KACnF,OAAOA,YAAY,CAACC,QAAQ,CAACvC,UAAU,CAAC;IACxC,CAAC;GAEF,IAAI,CAACiC,YAAY,EACjB;KACC,OAAO,IAAI;;GAGZ,MAAM,CAACO,SAAS,CAAC,GAAGP,YAAY;GAEhC,OAAOO,SAAS;CACjB;CAAC,sCAE2BC,qBAA4C,EACxE;GACC,MAAMC,mBAAmB,GAAG;KAAE,GAAGD;IAAuB;GAExDC,mBAAmB,CAACjB,oBAAQ,CAACC,IAAI,CAAC,GAAG;KACpC,CAACT,0BAAc,CAAC0B,MAAM,GAAGZ,oBAAQ,CAACa,IAAI;KACtC,CAAC3B,0BAAc,CAAC4B,IAAI,GAAGd,oBAAQ,CAACC,MAAM;KACtC,CAACf,0BAAc,CAAC6B,MAAM,GAAGf,oBAAQ,CAACC,MAAM;KACxC,CAACf,0BAAc,CAACE,KAAK,GAAGY,oBAAQ,CAACa,IAAI;KACrC,CAAC3B,0BAAc,CAACK,UAAU,GAAGS,oBAAQ,CAACa,IAAI;KAC1C,CAAC3B,0BAAc,CAAC8B,IAAI,GAAGhB,oBAAQ,CAACa,IAAI;KACpC,CAAC3B,0BAAc,CAAC+B,MAAM,GAAGjB,oBAAQ,CAACa,IAAI;KACtC,CAAC3B,0BAAc,CAACU,IAAI,GAAGI,oBAAQ,CAACC;IAChC;GAED,OAAOU,mBAAmB;CAC3B;CAAC,4BAEiBnB,WAAqB,EAAE0B,WAAqB,EAC9D;GACC,IAAI1B,WAAW,KAAKQ,oBAAQ,CAACa,IAAI,EACjC;KACC,OAAO,KAAK;;GAGb,MAAMM,WAAW,GAAG,EAAE;GACtBhB,MAAM,CAACiB,MAAM,CAACpB,oBAAQ,CAAC,CAACqB,OAAO,CAAC,CAAC3C,IAAI,EAAE4C,KAAK,KAAK;KAChDH,WAAW,CAACzC,IAAI,CAAC,GAAG4C,KAAK;IACzB,CAAC;GAEF,OAAOH,WAAW,CAACD,WAAW,CAAC,IAAIC,WAAW,CAAC3B,WAAW,CAAC;CAC5D;CAAC,qBAEUtB,QAAgB,EAC3B;GACC,OAAON,2BAAI,CAAC2D,QAAQ,EAAE,CAACC,OAAO,CAAC,WAAW,CAAC,CAACtD,QAAQ,EAAE,IAAI,CAAC;CAC5D;CAAC,sBAnKWX,iBAAiB;GAAA;GAAA;CAAA;;;;;;;;"}