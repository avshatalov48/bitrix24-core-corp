{"version":3,"file":"permission.bundle.js","sources":["../src/permission.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { DialogType, ChatActionType, ChatActionGroup, UserRole } from 'im.v2.const';\n\nimport type { ImModelDialog } from 'im.v2.model';\n\ntype ChatTypeItem = $Keys<typeof DialogType>;\ntype ActionTypeItem = $Keys<typeof ChatActionType>;\ntype ActionGroupItem = $Keys<typeof ChatActionGroup>;\ntype ActionGroup = ActionTypeItem[];\ntype RoleItem = $Keys<typeof UserRole>;\n\ntype RawPermissions = {\n\tbyChatType: PermissionsByChatType,\n\tactionGroups: {},\n\tactionGroupsDefaults: {},\n};\n\ntype PermissionsByChatType = {\n\t[chatType: ChatTypeItem]: {\n\t\t[operation: ActionTypeItem]: RoleItem,\n\t}\n};\n\nconst DEFAULT_TYPE = 'default';\n\nexport class PermissionManager\n{\n\tstatic #instance: PermissionManager;\n\n\t#chatTypePermissions: PermissionsByChatType;\n\t#actionGroups: Object<ActionGroupItem, ActionGroup>;\n\t#actionGroupsDefaultRoles: Object<ActionGroupItem, RoleItem>;\n\n\tstatic getInstance(): PermissionManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new this();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tPermissionManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tconst { permissions } = Core.getApplicationData();\n\t\tLogger.warn('PermissionManager: permission from server', permissions);\n\t\tthis.#init(permissions);\n\t}\n\n\tcanPerformAction(actionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\treturn this.#canPerformActionByChatType(actionType, dialogId)\n\t\t\t&& this.#canPerformActionByChatSettings(actionType, dialogId);\n\t}\n\n\tcanPerformKick(dialogId: string, userId: string | number): boolean\n\t{\n\t\treturn this.#canPerformActionByChatType(ChatActionType.kick, dialogId)\n\t\t\t&& this.#canPerformActionByChatSettings(ChatActionType.kick, dialogId)\n\t\t\t&& this.#canPerformKickByHierarchy(dialogId, userId);\n\t}\n\n\tgetDefaultRolesForActionGroups(): Object<ActionGroupItem, RoleItem>\n\t{\n\t\treturn this.#actionGroupsDefaultRoles;\n\t}\n\n\t#init(rawPermissions: RawPermissions)\n\t{\n\t\tconst { byChatType, actionGroups, actionGroupsDefaults } = rawPermissions;\n\t\tthis.#chatTypePermissions = this.#prepareChatTypePermissions(byChatType);\n\t\tthis.#actionGroups = actionGroups;\n\t\tthis.#actionGroupsDefaultRoles = actionGroupsDefaults;\n\t}\n\n\t#canPerformActionByChatType(rawActionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\tlet actionType = rawActionType;\n\t\tconst dialog: ImModelDialog = this.#getDialog(dialogId);\n\t\tconst { role: userRole, owner: chatOwner } = dialog;\n\t\tlet { type: chatType } = dialog;\n\n\t\tif (Type.isUndefined(this.#chatTypePermissions[chatType]))\n\t\t{\n\t\t\tchatType = DEFAULT_TYPE;\n\t\t}\n\n\t\t// for kick check if users can leave this type of chat\n\t\tif (actionType === ChatActionType.kick)\n\t\t{\n\t\t\tactionType = ChatActionType.leave;\n\t\t}\n\n\t\tconst isOwner = chatOwner === Core.getUserId();\n\t\tif (actionType === ChatActionType.leave && isOwner)\n\t\t{\n\t\t\tactionType = ChatActionType.leaveOwner;\n\t\t}\n\n\t\tif (Type.isUndefined(this.#chatTypePermissions[chatType][actionType]))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst minimalRole = this.#chatTypePermissions[chatType][actionType];\n\n\t\treturn this.#checkMinimalRole(minimalRole, userRole);\n\t}\n\n\t#canPerformActionByChatSettings(actionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\tconst { role: userRole, type: chatType, permissions: chatPermissions } = this.#getDialog(dialogId);\n\t\tif (chatType === DialogType.user)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (actionType === ChatActionType.send)\n\t\t{\n\t\t\treturn this.#checkMinimalRole(chatPermissions.canPost, userRole);\n\t\t}\n\n\t\tconst actionGroup = this.#getGroupByAction(actionType);\n\t\tif (!actionGroup)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet minimalRoleForGroup = chatPermissions[actionGroup];\n\t\tif (!minimalRoleForGroup)\n\t\t{\n\t\t\tminimalRoleForGroup = UserRole.member;\n\t\t}\n\n\t\treturn this.#checkMinimalRole(minimalRoleForGroup, userRole);\n\t}\n\n\t#getGroupByAction(actionType: ActionTypeItem): ?ActionGroupItem\n\t{\n\t\tconst searchResult = Object.entries(this.#actionGroups).find(([_, groupActions]) => {\n\t\t\treturn groupActions.includes(actionType);\n\t\t});\n\n\t\tif (!searchResult)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [groupName] = searchResult;\n\n\t\treturn groupName;\n\t}\n\n\t#prepareChatTypePermissions(permissionsByChatType: PermissionsByChatType): PermissionsByChatType\n\t{\n\t\tconst preparedPermissions = { ...permissionsByChatType };\n\n\t\tpreparedPermissions[DialogType.user] = {\n\t\t\t[ChatActionType.avatar]: UserRole.none,\n\t\t\t[ChatActionType.call]: UserRole.member,\n\t\t\t[ChatActionType.extend]: UserRole.member,\n\t\t\t[ChatActionType.leave]: UserRole.none,\n\t\t\t[ChatActionType.leaveOwner]: UserRole.none,\n\t\t\t[ChatActionType.mute]: UserRole.none,\n\t\t\t[ChatActionType.rename]: UserRole.none,\n\t\t\t[ChatActionType.send]: UserRole.member,\n\t\t};\n\n\t\treturn preparedPermissions;\n\t}\n\n\t#checkMinimalRole(minimalRole: RoleItem, roleToCheck: RoleItem): boolean\n\t{\n\t\tif (minimalRole === UserRole.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst roleWeights = {};\n\t\tObject.values(UserRole).forEach((role, index) => {\n\t\t\troleWeights[role] = index;\n\t\t});\n\n\t\treturn roleWeights[roleToCheck] >= roleWeights[minimalRole];\n\t}\n\n\t#canPerformKickByHierarchy(dialogId: string, userId: string | number): boolean\n\t{\n\t\tconst preparedUserId = Number.parseInt(userId, 10);\n\t\tconst { role: userRole } = this.#getDialog(dialogId);\n\t\tconst targetUserRole = this.#getUserRole(dialogId, preparedUserId);\n\n\t\treturn this.#checkMinimalRole(targetUserRole, userRole);\n\t}\n\n\t#getDialog(dialogId: string): ImModelDialog\n\t{\n\t\treturn Core.getStore().getters['dialogues/get'](dialogId, true);\n\t}\n\n\t#getUserRole(dialogId: string, userId: number): RoleItem\n\t{\n\t\tconst { owner, managerList } = this.#getDialog(dialogId);\n\t\tif (userId === owner)\n\t\t{\n\t\t\treturn UserRole.owner;\n\t\t}\n\n\t\tif (managerList.includes(userId))\n\t\t{\n\t\t\treturn UserRole.manager;\n\t\t}\n\n\t\treturn UserRole.member;\n\t}\n}\n"],"names":["DEFAULT_TYPE","PermissionManager","getInstance","init","constructor","permissions","Core","getApplicationData","Logger","warn","canPerformAction","actionType","dialogId","canPerformKick","userId","ChatActionType","kick","getDefaultRolesForActionGroups","rawPermissions","byChatType","actionGroups","actionGroupsDefaults","rawActionType","dialog","role","userRole","owner","chatOwner","type","chatType","Type","isUndefined","leave","isOwner","getUserId","leaveOwner","minimalRole","chatPermissions","DialogType","user","send","canPost","actionGroup","minimalRoleForGroup","UserRole","member","searchResult","Object","entries","find","_","groupActions","includes","groupName","permissionsByChatType","preparedPermissions","avatar","none","call","extend","mute","rename","roleToCheck","roleWeights","values","forEach","index","preparedUserId","Number","parseInt","targetUserRole","getStore","getters","managerList","manager"],"mappings":"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"}