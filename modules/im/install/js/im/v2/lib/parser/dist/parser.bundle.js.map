{"version":3,"file":"parser.bundle.js","sources":["../src/functions/slash-command.js","../src/utils/core-proxy.js","../src/utils/utils.js","../src/functions/icon.js","../src/functions/quote.js","../src/functions/image.js","../src/functions/smile.js","../src/functions/url.js","../src/functions/font.js","../src/functions/lines.js","../src/functions/action.js","../src/functions/call.js","../src/functions/mention.js","../src/functions/common.js","../src/utils/recursion-prevention.js","../src/functions/replace.js","../src/functions/disk.js","../src/parser.js"],"sourcesContent":["export const ParserSlashCommand = {\n\n\tdecode(text): string\n\t{\n\t\tif (text.startsWith('/me'))\n\t\t{\n\t\t\treturn `[i]${text.substr(4)}[/i]`;\n\t\t}\n\n\t\tif (text.startsWith('/loud'))\n\t\t{\n\t\t\treturn `[size=20]${text.substr(6)}[/size]`;\n\t\t}\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\tif (text.startsWith('/me'))\n\t\t{\n\t\t\treturn  text.substr(4);\n\t\t}\n\n\t\tif (text.startsWith('/loud'))\n\t\t{\n\t\t\treturn  text.substr(6);\n\t\t}\n\n\t\treturn text;\n\t}\n}","import {Extension, Type} from 'main.core';\n\n// const isDesktop = Type.isObject(window.BXDesktopSystem);\nconst settings = Extension.getSettings('im.v2.lib.parser');\nconst v2 = settings.get('v2');\n\nconst getCore = () => {\n\treturn v2 ? BX.Messenger.v2.Application.Core : BX.Messenger.Embedding.Application.Core;\n};\nconst getUtils = () => {\n\treturn v2 ? BX.Messenger.v2.Lib.Utils : BX.Messenger.Embedding.Lib.Utils;\n};\nconst getLogger = () => {\n\treturn v2 ? BX.Messenger.v2.Lib.Logger : BX.Messenger.Embedding.Lib.Logger;\n};\nconst getConst = () => {\n\treturn v2 ? BX.Messenger.v2.Const : BX.Messenger.Embedding.Const;\n};\nconst getSmileManager = () => {\n\treturn v2 ? BX.Messenger.v2.Lib.SmileManager : BX.Messenger.Embedding.Lib.SmileManager;\n};\nconst getBigSmileOption = () => {\n\tif (v2)\n\t{\n\t\tconst settingName = BX.Messenger.v2.Const.Settings.dialog.bigSmiles;\n\t\treturn getCore().getStore().getters['application/settings/get'](settingName);\n\t}\n\n\treturn getCore().getStore().getters['application/getOption']('bigSmileEnable');\n};\n\nexport {getCore, getUtils, getLogger, getConst, getSmileManager, getBigSmileOption};\n\nexport type Smile = {\n\tid: string;\n\tsetId: string;\n\tname: string;\n\timage: string;\n\ttyping: string;\n\talternative: boolean;\n\twidth: number;\n\theight: number;\n\tdefinition: string;\n};","import {Type} from 'main.core';\n\nimport {getCore} from './core-proxy';\n\nconst RECURSIVE_LIMIT = 10;\nexport const ParserUtils = {\n\n\trecursiveReplace(text, pattern, replacement): string\n\t{\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet count = 0;\n\t\tlet deep = true;\n\t\tdo\n\t\t{\n\t\t\tdeep = false;\n\t\t\tcount++;\n\t\t\ttext = text.replace(pattern, (...params) => {\n\t\t\t\tdeep = true;\n\t\t\t\treturn replacement(...params);\n\t\t\t});\n\t\t}\n\t\twhile (deep && count <= RECURSIVE_LIMIT);\n\n\t\treturn text;\n\t},\n\n\tgetFinalContextTag(contextTag)\n\t{\n\t\tconst match = contextTag.match(/(chat\\d+|(\\d+):(\\d+))\\/(\\d+)/i);\n\t\tif (!match)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet [, dialogId, user1, user2, messageId] = match;\n\t\tif (dialogId.toString().startsWith('chat'))\n\t\t{\n\t\t\tif (dialogId === 'chat0')\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn contextTag;\n\t\t}\n\n\t\tuser1 = Number.parseInt(user1, 10);\n\t\tuser2 = Number.parseInt(user2, 10);\n\t\tif (getCore().getUserId() === user1)\n\t\t{\n\t\t\treturn `${user2}/${messageId}}`;\n\t\t}\n\t\tif (getCore().getUserId() === user2)\n\t\t{\n\t\t\treturn `${user1}/${messageId}}`;\n\t\t}\n\n\t\treturn '';\n\t},\n};","import {Dom, Loc, Type} from 'main.core';\n\nimport {getConst} from '../utils/core-proxy';\nimport {Parser} from '../parser';\n\nconst {FileType, FileIconType, AttachDescription} = getConst();\n\n\nexport const ParserIcon = {\n\tgetIcon(icon: $Values<typeof FileIconType>, fallbackText: string = ''): string\n\t{\n\t\treturn fallbackText;\n\t\t/*\n\t\tif (!FileIconType[icon])\n\t\t{\n\t\t\treturn fallbackText;\n\t\t}\n\n\t\treturn Dom.create({\n\t\t\ttag: 'span',\n\t\t\tattrs: {\n\t\t\t\tclassName: `bx-im-icon --${icon}`,\n\t\t\t},\n\t\t}).outerHTML;\n\t\t */\n\t},\n\n\taddIconToShortText(config: {\n\t\ttext: string,\n\t\tattach: boolean | string | Array,\n\t\tfiles: boolean | Array\n\t}): string\n\t{\n\t\tlet {text} = config;\n\t\tconst {attach, files} = config;\n\n\t\tif (Type.isArrayFilled(files) || files === true)\n\t\t{\n\t\t\ttext = this.getTextForFile(text, files);\n\t\t}\n\t\telse if (\n\t\t\tattach === true\n\t\t\t|| Type.isArrayFilled(attach)\n\t\t\t|| Type.isStringFilled(attach)\n\t\t)\n\t\t{\n\t\t\ttext = this.getTextForAttach(text, attach);\n\t\t}\n\n\t\treturn text.trim();\n\t},\n\n\tgetQuoteBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.quote);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_QUOTE')}]`;\n\t},\n\n\tgetCodeBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.code);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_CODE')}]`;\n\t},\n\n\tgetImageBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.image);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_IMAGE')}]`;\n\t},\n\n\tgetFileBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.file);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}]`;\n\t},\n\n\tgetTextForFile(rawText: string, files: boolean | Array): string\n\t{\n\t\tlet preparedText = rawText;\n\t\tif (Type.isArray(files) && files.length > 0)\n\t\t{\n\t\t\tconst [firstFile] = files;\n\t\t\tpreparedText = this.getIconTextForFile(rawText, firstFile);\n\t\t}\n\t\telse if (files === true)\n\t\t{\n\t\t\tpreparedText = this.getIconTextForFileType(rawText, FileIconType.file);\n\t\t}\n\n\t\treturn preparedText;\n\t},\n\n\tgetTextForAttach(text: string, attach: boolean | string | Array): string\n\t{\n\t\tlet attachDescription = '';\n\t\tif (Type.isArray(attach) && attach.length > 0)\n\t\t{\n\t\t\tconst [firstAttach] = attach;\n\t\t\tif (Type.isStringFilled(firstAttach.DESCRIPTION))\n\t\t\t{\n\t\t\t\tattachDescription = firstAttach.DESCRIPTION;\n\t\t\t}\n\t\t}\n\t\telse if (Type.isStringFilled(attach))\n\t\t{\n\t\t\tattachDescription = attach;\n\t\t}\n\n\t\tif (Type.isStringFilled(attachDescription))\n\t\t{\n\t\t\tif (attachDescription === AttachDescription.SKIP_MESSAGE)\n\t\t\t{\n\t\t\t\tattachDescription = '';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tattachDescription = Parser.purifyText(attachDescription, {showPhraseMessageWasDeleted: false});\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst icon = this.getIcon(FileIconType.attach);\n\t\t\tif (icon)\n\t\t\t{\n\t\t\t\tattachDescription = `${icon} ${Loc.getMessage('IM_PARSER_ICON_TYPE_ATTACH')}`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tattachDescription = `[${Loc.getMessage('IM_PARSER_ICON_TYPE_ATTACH')}]`;\n\t\t\t}\n\t\t}\n\n\t\treturn `${text} ${attachDescription}`.trim();\n\t},\n\n\tgetIconTextForFileType(text: string, type: $Values<typeof FileIconType> = FileIconType.file): string\n\t{\n\t\tlet result = text;\n\t\tconst icon = this.getIcon(type);\n\t\tconst iconText = Loc.getMessage(`IM_PARSER_ICON_TYPE_${type.toUpperCase()}`);\n\t\tif (icon)\n\t\t{\n\t\t\tconst withText = text.replace(/(\\s|\\n)/gi, '').length > 0;\n\t\t\tconst textDescription = withText? text: iconText;\n\t\t\tresult = `${icon} ${textDescription}`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = `[${iconText}] ${text}`;\n\t\t}\n\n\t\treturn result.trim();\n\t},\n\n\tgetIconTextForFile(text: string, file: Object): string\n\t{\n\t\tconst withText = text.replace(/(\\s|\\n)/gi, '').length > 0;\n\n\t\t// todo: remove this hack after fix receiving messages with files on P&P\n\t\tif (!file || !file.type)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tif (file.type === FileType.image)\n\t\t{\n\t\t\treturn this.getIconTextForFileType(text, FileIconType.image);\n\t\t}\n\t\telse if (file.type === FileType.audio)\n\t\t{\n\t\t\treturn this.getIconTextForFileType(text, FileIconType.audio);\n\t\t}\n\t\telse if (file.type === FileType.video)\n\t\t{\n\t\t\treturn this.getIconTextForFileType(text, FileIconType.video);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst icon = this.getIcon(FileIconType.file);\n\t\t\tif (icon)\n\t\t\t{\n\t\t\t\tconst textDescription = withText? text: '';\n\t\t\t\ttext = `${icon} ${file.name} ${textDescription}`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttext = `${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}: ${file.name} ${text}`;\n\t\t\t}\n\n\t\t\treturn text.trim();\n\t\t}\n\t}\n};","import {Dom, Tag} from 'main.core';\nimport {EventEmitter} from 'main.core.events';\n\nimport {ParserUtils} from '../utils/utils';\nimport {getUtils, getConst} from '../utils/core-proxy';\nimport {ParserIcon} from './icon';\n\nconst {EventType} = getConst();\n\nconst QUOTE_SIGN = '&gt;&gt;';\n\nexport const ParserQuote = {\n\n\tdecodeArrowQuote(text: string): string\n\t{\n\t\tif (!text.includes(QUOTE_SIGN))\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet isProcessed = false;\n\n\t\tconst textLines = text.split('<br />');\n\t\tfor (let i = 0; i < textLines.length; i++)\n\t\t{\n\t\t\tif (!textLines[i].startsWith(QUOTE_SIGN))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst quoteStartIndex = i;\n\n\t\t\tconst outerContainerStart = '<div class=\"bx-im-message-quote --inline\">';\n\t\t\tconst innerContainerStart = '<div class=\"bx-im-message-quote__wrap\">';\n\t\t\tconst containerEnd = '</div>';\n\t\t\ttextLines[quoteStartIndex] = textLines[quoteStartIndex].replace(QUOTE_SIGN, `${outerContainerStart}${innerContainerStart}`);\n\t\t\t// remove >> from all next lines\n\t\t\twhile (++i < textLines.length && textLines[i].startsWith(QUOTE_SIGN))\n\t\t\t{\n\t\t\t\ttextLines[i] = textLines[i].replace(QUOTE_SIGN, '');\n\t\t\t}\n\t\t\tconst quoteEndIndex = i - 1;\n\t\t\ttextLines[quoteEndIndex] += `${containerEnd}${containerEnd}`;\n\t\t\tisProcessed = true;\n\t\t}\n\n\t\tif (!isProcessed)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\treturn textLines.join('<br />');\n\t},\n\n\tpurifyArrowQuote(text, spaceLetter = ' '): string\n\t{\n\t\ttext = text.replace(\n\t\t\tnew RegExp(`^(${QUOTE_SIGN}(.*))`, 'gim'),\n\t\t\tParserIcon.getQuoteBlock() + spaceLetter\n\t\t);\n\n\t\treturn text;\n\t},\n\n\tdecodeQuote(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/-{54}(<br \\/>(.*?)\\[(.*?)]( #(?:chat\\d+|\\d+:\\d+)\\/\\d+)?)?<br \\/>(.*?)-{54}(<br \\/>)?/gs,\n\t\t\t(whole, userBlock, userName, timeTag, contextTag, text): string => {\n\t\t\t\tconst skipUserBlock = !userName || !timeTag;\n\t\t\t\tif (skipUserBlock && !text) // greedy date detector :(\n\t\t\t\t{\n\t\t\t\t\ttext = `${timeTag}`;\n\t\t\t\t}\n\n\t\t\t\tlet userContainer = '';\n\t\t\t\tif (!skipUserBlock)\n\t\t\t\t{\n\t\t\t\t\tuserContainer = Tag.render`\n\t\t\t\t\t\t<div class='bx-im-message-quote__name'>\n\t\t\t\t\t\t\t<div class=\"bx-im-message-quote__name-text\">${userName}</div>\n\t\t\t\t\t\t\t<div class=\"bx-im-message-quote__name-time\">${timeTag}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\t\t\t\t}\n\n\t\t\t\tlet quoteBaseClass = 'bx-im-message-quote';\n\t\t\t\tif (contextTag)\n\t\t\t\t{\n\t\t\t\t\tcontextTag = contextTag.trim().slice(1);\n\t\t\t\t\tcontextTag = ParserUtils.getFinalContextTag(contextTag);\n\t\t\t\t}\n\t\t\t\tif (contextTag)\n\t\t\t\t{\n\t\t\t\t\tquoteBaseClass += ' --with-context';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontextTag = 'none';\n\t\t\t\t}\n\n\t\t\t\tconst layout = Tag.render`\n\t\t\t\t\t<div class='${quoteBaseClass}' data-context='${contextTag}'>\n\t\t\t\t\t\t<div class='bx-im-message-quote__wrap'>\n\t\t\t\t\t\t\t${userContainer}\n\t\t\t\t\t\t\t<div class='bx-im-message-quote__text'>${text}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\n\t\t\t\treturn layout.outerHTML;\n\t\t\t}\n\t\t);\n\n\t\treturn text;\n\t},\n\n\tpurifyQuote(text: string, spaceLetter: string = ' '): string\n\t{\n\t\treturn text.replace(/-{54}(.*?)-{54}/gims, ParserIcon.getQuoteBlock() + spaceLetter);\n\t},\n\n\tdecodeCode(text: string): string\n\t{\n\t\treturn text.replace(/\\[code](<br \\/>)?([\\0-\\uFFFF]*?)\\[\\/code](<br \\/>)?/gis, (whole, br, code) => {\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'div',\n\t\t\t\tattrs: {className: 'bx-im-message-content-code'},\n\t\t\t\thtml: code\n\t\t\t}).outerHTML;\n\t\t});\n\t},\n\n\tpurifyCode(text: string, spaceLetter: string = ' '): string\n\t{\n\t\treturn text.replace(/\\[code](<br \\/>)?([\\0-\\uFFFF]*?)\\[\\/code]/gis, ParserIcon.getCodeBlock() + spaceLetter);\n\t},\n\n\texecuteClickEvent(event: PointerEvent)\n\t{\n\t\tif (\n\t\t\t!event.target.className.startsWith('bx-im-message-quote')\n\t\t\t&& !(\n\t\t\t\tevent.target.parentNode\n\t\t\t\t&& event.target.parentNode.className.startsWith('bx-im-message-quote')\n\t\t\t)\n\t\t)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = getUtils().dom.recursiveBackwardNodeSearch(event.target, '--with-context');\n\t\tif (!target || target.dataset.context === 'none')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst [dialogId, messageId] = target.dataset.context.split('/');\n\t\tEventEmitter.emit(EventType.dialog.goToMessageContext, {\n\t\t\tmessageId: Number.parseInt(messageId, 10),\n\t\t\tdialogId: dialogId.toString(),\n\t\t});\n\t},\n};","import {Dom, Loc, Text} from 'main.core';\n\nimport {getCore, getUtils, getBigSmileOption} from '../utils/core-proxy';\nimport {ParserIcon} from './icon';\n\nexport const ParserImage = {\n\n\tdecodeLink(text): string\n\t{\n\t\tlet changed = false;\n\t\ttext = text.replace(/(.)?((https|http):\\/\\/(\\S+)\\.(jpg|jpeg|png|gif|webp)(\\?\\S+)?)/gi, function(whole, letter, url): string\n\t\t{\n\t\t\turl = Text.decode(url);\n\n\t\t\tif(\n\t\t\t\tletter && !(['>', ']'].includes(letter))\n\t\t\t\t|| !url.match(/(\\.(jpg|jpeg|png|gif|webp)\\?|\\.(jpg|jpeg|png|gif|webp)$)/i)\n\t\t\t\t|| url.toLowerCase().indexOf(\"/docs/pub/\") > 0\n\t\t\t\t|| url.toLowerCase().indexOf(\"logout=yes\") > 0\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\t\t\treturn (letter? letter: '') + Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-message-image',\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\tDom.create({\n\t\t\t\t\t\ttag: 'img',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclassName: 'bx-im-message-image-source',\n\t\t\t\t\t\t\tsrc: url,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\terror: () => { ParserImage._hideErrorImage(this) }\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyLink(text): string\n\t{\n\t\ttext = text.replace(/(.)?((https|http):\\/\\/(\\S+)\\.(jpg|jpeg|png|gif|webp)(\\?\\S+)?)/gi, function(whole, letter, url): string\n\t\t{\n\t\t\tif(\n\t\t\t\tletter && !(['>', ']', ' '].includes(letter))\n\t\t\t\t|| !url.match(/(\\.(jpg|jpeg|png|gif|webp)\\?|\\.(jpg|jpeg|png|gif|webp)$)/i)\n\t\t\t\t|| url.toLowerCase().indexOf(\"/docs/pub/\") > 0\n\t\t\t\t|| url.toLowerCase().indexOf(\"logout=yes\") > 0\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn (letter? letter: '') + ParserIcon.getImageBlock();\n\t\t\t}\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tdecodeIcon(text): string\n\t{\n\t\tlet textElementSize = 0;\n\n\t\tconst enableBigSmile = getBigSmileOption();\n\t\tif (enableBigSmile)\n\t\t{\n\t\t\ttextElementSize = text.replace(/\\[icon=([^\\]]*)]/gi, '').trim().length;\n\t\t}\n\n\t\ttext = text.replace(/\\[icon=([^\\]]*)]/gi, (whole) =>\n\t\t{\n\t\t\tlet url = whole.match(/icon=(\\S+[^\\s.,> )\\];'\"!?])/i);\n\t\t\tif (url && url[1])\n\t\t\t{\n\t\t\t\turl = url[1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\n\t\t\tconst attrs = {'src': url, 'border': 0};\n\n\t\t\tconst size = whole.match(/size=(\\d+)/i);\n\t\t\tif (size && size[1])\n\t\t\t{\n\t\t\t\tattrs['width'] = size[1];\n\t\t\t\tattrs['height'] = size[1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst width = whole.match(/width=(\\d+)/i);\n\t\t\t\tif (width && width[1])\n\t\t\t\t{\n\t\t\t\t\tattrs['width'] = width[1];\n\t\t\t\t}\n\n\t\t\t\tconst height = whole.match(/height=(\\d+)/i);\n\t\t\t\tif (height && height[1])\n\t\t\t\t{\n\t\t\t\t\tattrs['height'] = height[1];\n\t\t\t\t}\n\n\t\t\t\tif (attrs['width'] && !attrs['height'])\n\t\t\t\t{\n\t\t\t\t\tattrs['height'] = attrs['width'];\n\t\t\t\t}\n\t\t\t\telse if (attrs['height'] && !attrs['width'])\n\t\t\t\t{\n\t\t\t\t\tattrs['width'] = attrs['height'];\n\t\t\t\t}\n\t\t\t\telse if (attrs['height'] && attrs['width'])\n\t\t\t\t{}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tattrs['width'] = 20;\n\t\t\t\t\tattrs['height'] = 20;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tattrs['width'] = attrs['width']>100? 100: attrs['width'];\n\t\t\tattrs['height'] = attrs['height']>100? 100: attrs['height'];\n\n\t\t\tif (enableBigSmile && textElementSize === 0 && attrs['width'] === attrs['height'] && attrs['width'] === 20)\n\t\t\t{\n\t\t\t\tattrs['width'] = 40;\n\t\t\t\tattrs['height'] = 40;\n\t\t\t}\n\n\t\t\tlet title = whole.match(/title=(.*[^\\s\\]])/i);\n\t\t\tif (title && title[1])\n\t\t\t{\n\t\t\t\ttitle = title[1];\n\t\t\t\tif (title.indexOf('width=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('width='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('height=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('height='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('size=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('size='))\n\t\t\t\t}\n\t\t\t\tif (title)\n\t\t\t\t{\n\t\t\t\t\tattrs['title'] = Text.decode(title).trim();\n\t\t\t\t\tattrs['alt'] = attrs['title'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'img',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-smile bx-icon',\n\t\t\t\t\t...attrs\n\t\t\t\t},\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyIcon(text): string\n\t{\n\t\ttext = text.replace(/\\[icon=([^\\]]*)]/gi, (whole) =>\n\t\t{\n\t\t\tlet title = whole.match(/title=(.*[^\\s\\]])/i);\n\t\t\tif (title && title[1])\n\t\t\t{\n\t\t\t\ttitle = title[1];\n\t\t\t\tif (title.indexOf('width=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('width='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('height=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('height='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('size=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('size='))\n\t\t\t\t}\n\t\t\t\tif (title)\n\t\t\t\t{\n\t\t\t\t\ttitle = '('+title.trim()+')';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttitle = '('+Loc.getMessage('IM_PARSER_IMAGE_ICON')+')';\n\t\t\t}\n\t\t\treturn title;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\t_hideErrorImage(element)\n\t{\n\t\tif (element.parentNode)\n\t\t{\n\t\t\telement.parentNode.innerHTML = '<a href=\"'+encodeURI(element.src)+'\" target=\"_blank\">'+element.src+'</a>';\n\t\t}\n\t}\n}\n\n","import {Dom, Tag, Type} from 'main.core';\n\nimport {getCore, getUtils, getSmileManager, getBigSmileOption} from '../utils/core-proxy';\n\nimport type {Smile} from '../utils/core-proxy';\n\nexport const RatioConfig = Object.freeze({\n\tDefault: 1,\n\tBig: 1.6,\n});\nconst getSmileRatio = (text: string, pattern: string, config = RatioConfig): number =>\n{\n\tconst replacedText = text.replaceAll(new RegExp(pattern, 'g'), '');\n\tconst hasOnlySmiles = replacedText.trim().length === 0;\n\n\tconst matchOnlySmiles = new RegExp(`(?:(?:${pattern})\\\\s*){3,}`);\n\tif (hasOnlySmiles && !matchOnlySmiles.test(text))\n\t{\n\t\treturn config.Big;\n\t}\n\n\treturn config.Default;\n};\nconst mapTypings = (smiles: Array<Smile>): {[string]: HTMLElement} =>\n{\n\tconst typings = smiles.reduce((acc, smile) => {\n\t\tconst {\n\t\t\timage,\n\t\t\ttyping,\n\t\t\tdefinition,\n\t\t\tname,\n\t\t\twidth,\n\t\t\theight\n\t\t} = smile;\n\t\tconst smileImg = Tag.render`\n\t\t\t<img\n\t\t\t\tsrc=\"${image}\"\n\t\t\t\tdata-code=\"${typing}\"\n\t\t\t\tdata-definition=\"${definition}\"\n\t\t\t\ttitle=\"${name ?? typing}\"\n\t\t\t\talt=\"${typing}\"\n\t\t\t\tclass=\"bx-smile bx-im-message-base__text_smile\"\n\t\t\t\tstyle=\"width: ${width}px; height: ${height}px;\"\n\t\t\t/>\n\t\t`;\n\n\t\treturn {...acc, [typing]: smileImg};\n\t}, {});\n\n\treturn typings;\n};\nconst lookBehind = function (text, match, offset): string\n{\n\tconst substring = text.slice(0, offset + match.length);\n\tconst escaped = getUtils().text.escapeRegex(match);\n\tconst regExp = new RegExp(`(?:^|&quot;|>|(?:${this.pattern})|\\\\s|<)(?:${escaped})$`);\n\n\treturn substring.match(regExp);\n};\n\nexport const ParserSmile = {\n\ttypings: null,\n\tpattern: '',\n\n\tloadSmilePatterns()\n\t{\n\t\tconst smileManager = getSmileManager().getInstance();\n\t\tconst smiles = smileManager.smileList?.smiles ?? [];\n\t\tconst sortedSmiles = [...smiles].sort((a, b) => {\n\t\t\treturn b.typing.localeCompare(a.typing);\n\t\t});\n\t\tthis.pattern = sortedSmiles.map((smile) => {\n\t\t\treturn getUtils().text.escapeRegex(smile.typing);\n\t\t}).join('|');\n\t\tthis.typings = mapTypings(sortedSmiles);\n\t},\n\n\tdecodeSmile(text: string, options = {}): string // TODO add options types\n\t{\n\t\tif (!this.typings)\n\t\t{\n\t\t\tthis.loadSmilePatterns();\n\t\t}\n\t\tif (!this.pattern)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet enableBigSmile;\n\t\tif (Type.isBoolean(options.enableBigSmile))\n\t\t{\n\t\t\tenableBigSmile = options.enableBigSmile;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tenableBigSmile = getBigSmileOption();\n\t\t}\n\n\t\tconst ratioConfig = Type.isObjectLike(options.ratioConfig) ? options.ratioConfig : RatioConfig;\n\t\tconst ratio = enableBigSmile? getSmileRatio(text, this.pattern, ratioConfig): ratioConfig.Default;\n\n\t\tconst pattern = `(?:(?:${this.pattern})(?=(?:(?:${this.pattern})|\\\\s|&quot;|<|$)))`;\n\t\tconst regExp = new RegExp(pattern, 'g');\n\t\tconst replacedText = text.replaceAll(regExp, (match, offset) => {\n\t\t\tconst behindMatching = lookBehind.call(this, text, match, offset);\n\t\t\tif (!behindMatching)\n\t\t\t{\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tconst image = this.typings[match].cloneNode();\n\t\t\tconst {width, height} = image.style;\n\t\t\tDom.style(image, 'width', `${Number.parseInt(width, 10) * ratio}px`);\n\t\t\tDom.style(image, 'height', `${Number.parseInt(height, 10) * ratio}px`);\n\n\t\t\treturn image.outerHTML;\n\t\t});\n\n\t\treturn replacedText;\n\t}\n};","import {Dom, Text} from 'main.core';\n\nimport {getUtils} from '../utils/core-proxy';\n\nexport const ParserUrl = {\n\n\tdecode(text, config = {}): string\n\t{\n\t\tconst {\n\t\t\turlTarget = \"_blank\",\n\t\t\tremoveLinks = false\n\t\t} = config;\n\n\t\t// base pattern for urls\n\t\ttext = text.replace(/\\[url(?:=([^[\\]]+))?](.*?)\\[\\/url]/gis, (whole, link, text) =>\n\t\t{\n\t\t\tconst url = Text.decode(link || text);\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'a',\n\t\t\t\tattrs: {\n\t\t\t\t\thref: url,\n\t\t\t\t\ttarget: urlTarget\n\t\t\t\t},\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\t// url like https://bitrix24.com/?params[1]=\"test\"\n\t\ttext = text.replace(/\\[url(?:=(.+?[^[\\]]))?](.*?)\\[\\/url]/gis, (whole, link, text) =>\n\t\t{\n\t\t\tlet url = Text.decode(link || text);\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\tif (!url.slice(url.lastIndexOf('[')).includes(']'))\n\t\t\t{\n\t\t\t\tif (text.startsWith(']'))\n\t\t\t\t{\n\t\t\t\t\turl = `${url}]`;\n\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t}\n\t\t\t\telse if (text.startsWith('='))\n\t\t\t\t{\n\t\t\t\t\tconst urlPart = Text.decode(text.slice(1, text.lastIndexOf(']')));\n\t\t\t\t\turl = `${url}]=${urlPart}`;\n\t\t\t\t\ttext = text.slice(text.lastIndexOf(']')+1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'a',\n\t\t\t\tattrs: {\n\t\t\t\t\thref: url,\n\t\t\t\t\ttarget: urlTarget\n\t\t\t\t},\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\tif (removeLinks)\n\t\t{\n\t\t\ttext = text.replace(/<a.*?href=\"([^\"]*)\".*?>(.*?)<\\/a>/gi, '$2');\n\t\t}\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(/\\[url(?:=([^\\[\\]]+))?](.*?)\\[\\/url]/gis, (whole, link, text) => {\n\t\t\treturn text? text: link;\n\t\t});\n\n\t\ttext = text.replace(/\\[url(?:=(.+))?](.*?)\\[\\/url]/gis, (whole, link, text) => {\n\t\t\treturn text? text: link;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tremoveSimpleUrlTag(text): string\n\t{\n\t\ttext = text.replace(/\\[url](.*?)\\[\\/url]/gis, (whole, link) => link);\n\t\treturn text;\n\t},\n\n};\n","import {Dom} from 'main.core';\n\nimport {ParserUtils} from '../utils/utils';\n\nexport const ParserFont = {\n\n\tdecode(text): string\n\t{\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[b]([^[]*(?:\\[(?!b]|\\/b])[^[]*)*)\\[\\/b]/gi, (whole, text) => '<b>'+text+'</b>');\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[u]([^[]*(?:\\[(?!u]|\\/u])[^[]*)*)\\[\\/u]/gi, (whole, text) => '<u>'+text+'</u>');\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[i]([^[]*(?:\\[(?!i]|\\/i])[^[]*)*)\\[\\/i]/gi, (whole, text) => '<i>'+text+'</i>');\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[s]([^[]*(?:\\[(?!s]|\\/s])[^[]*)*)\\[\\/s]/gi, (whole, text) => '<s>'+text+'</s>');\n\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[size=(\\d+)(?:pt|px)?](.*?)\\[\\/size]/gis, (whole, number, text) => {\n\t\t\tnumber = Number.parseInt(number, 10);\n\t\t\tif (number <= 8)\n\t\t\t{\n\t\t\t\tnumber = 8;\n\t\t\t}\n\t\t\telse if (number >= 30)\n\t\t\t{\n\t\t\t\tnumber = 30;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tstyle: {fontSize: `${number}px`},\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[color=#([0-9a-f]{3}|[0-9a-f]{6})](.*?)\\[\\/color]/gis, (whole, hex, text) => {\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tstyle: { color: '#'+ hex },\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurify(text, removeStrike = true): string\n\t{\n\t\tif (removeStrike)\n\t\t{\n\t\t\ttext = ParserUtils.recursiveReplace(text, /\\[s]([^[]*(?:\\[(?!s]|\\/s])[^[]*)*)\\[\\/s]/gi, () => ' ');\n\t\t}\n\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[b]([^[]*(?:\\[(?!b]|\\/b])[^[]*)*)\\[\\/b]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[u]([^[]*(?:\\[(?!u]|\\/u])[^[]*)*)\\[\\/u]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[i]([^[]*(?:\\[(?!i]|\\/i])[^[]*)*)\\[\\/i]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[s]([^[]*(?:\\[(?!s]|\\/s])[^[]*)*)\\[\\/s]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[size=(\\d+)(?:pt|px)?](.*?)\\[\\/size]/gis, (whole, number, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[color=#([0-9a-f]{3}|[0-9a-f]{6})](.*?)\\[\\/color]/gis, (whole, hex, text) => text);\n\n\t\treturn text;\n\t}\n}\n\n","import {Loc} from 'main.core';\n\nexport const ParserLines = {\n\n\tdecode(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/\\[LIKE]/gi,\n\t\t\t`<span style=\"color: #004d00\">${Loc.getMessage('IM_PARSER_LINES_RATING_LIKE')}</span>`\n\t\t);\n\n\t\ttext = text.replace(\n\t\t\t/\\[DISLIKE]/gi,\n\t\t\t`<span style=\"color: #cc0000\">${Loc.getMessage('IM_PARSER_LINES_RATING_DISLIKE')}</span>`\n\t\t);\n\n\t\ttext = text.replace(/\\[RATING=([1-5])]/gi, (rating, group) => {\n\t\t\trating = parseInt(group);\n\t\t\treturn `<span class=\"bx-smile bx-im-smile-rating bx-im-smile-rating-'+rating+'\">${Loc.getMessage('IM_PARSER_LINES_RATING')} - ${rating}</span>`;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/\\[LIKE]/gi,\n\t\t\tLoc.getMessage('IM_PARSER_LINES_RATING_LIKE')\n\t\t);\n\n\t\ttext = text.replace(\n\t\t\t/\\[DISLIKE]/gi,\n\t\t\tLoc.getMessage('IM_PARSER_LINES_RATING_DISLIKE')\n\t\t);\n\n\t\ttext = text.replace(/\\[RATING=([1-5])]/gi, () => {\n\t\t\treturn '['+Loc.getMessage('IM_PARSER_LINES_RATING')+'] ';\n\t\t});\n\n\t\treturn text;\n\t}\n}\n\n","import {Dom, Text} from 'main.core';\n\nimport {getUtils} from '../utils/core-proxy';\n\nconst atomRegExpPart = '\\\\d{4}-\\\\d{2}-\\\\d{2}T[0-2]\\\\d:[0-5]\\\\d:[0-5]\\\\d[+-][0-2]\\\\d:[0-5]\\\\d';\n\nexport const ParserAction = {\n\n\tdecodePut(text): string\n\t{\n\t\ttext = text.replace(/\\[PUT(?:=(?:.+?))?](?:.+?)?\\[\\/PUT]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[PUT(?:=(.+))?](.+?)?\\[\\/PUT]/gi, (whole, command, text) =>\n\t\t\t{\n\t\t\t\ttext = text? text: command;\n\t\t\t\tcommand = command? command: text;\n\n\t\t\t\ttext = Text.decode(text);\n\t\t\t\tcommand = Text.decode(command).replace('<br />', '\\n');\n\n\t\t\t\tif (!text.trim())\n\t\t\t\t{\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\ttext = text.replace(/<(\\w+)[^>]*>(.*?)<\\/\\1>/i, \"$2\", text);\n\t\t\t\ttext = text.replace(/\\[(\\w+)[^\\]]*](.*?)\\[\\/\\1]/i, \"$2\", text);\n\n\t\t\t\treturn this._getHtmlForAction('put', text, command);\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyPut(text): string\n\t{\n\t\ttext = text.replace(/\\[PUT(?:=(?:.+?))?](?:.+?)?\\[\\/PUT]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[PUT(?:=(.+))?](.+?)?\\[\\/PUT]/gi, (whole, command, text) => {\n\t\t\t\treturn text? text: command;\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tdecodeSend(text): string\n\t{\n\t\ttext = text.replace(/\\[SEND(?:=(?:.+?))?](?:.+?)?\\[\\/SEND]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[SEND(?:=(.+))?](.+?)?\\[\\/SEND]/gi, (whole, command, text) =>\n\t\t\t{\n\t\t\t\ttext = text? text: command;\n\t\t\t\tcommand = command? command: text;\n\n\t\t\t\ttext = Text.decode(text);\n\t\t\t\tcommand = Text.decode(command).replace('<br />', '\\n');\n\n\t\t\t\tif (!text.trim())\n\t\t\t\t{\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\ttext = text.replace(/<(\\w+)[^>]*>(.*?)<\\\\1>/i, \"$2\", text);\n\t\t\t\ttext = text.replace(/\\[(\\w+)[^\\]]*](.*?)\\[\\/\\1]/i, \"$2\", text);\n\n\t\t\t\tcommand = command.split('####REPLACEMENT_PUT_').join('####REPLACEMENT_SP_');\n\n\t\t\t\treturn this._getHtmlForAction('send', text, command);\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifySend(text): string\n\t{\n\t\ttext = text.replace(/\\[SEND(?:=(?:.+?))?](?:.+?)?\\[\\/SEND]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[SEND(?:=(.+))?](.+?)?\\[\\/SEND]/gi, (whole, command, text) => {\n\t\t\t\treturn text? text: command;\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tdecodeDate(text): string\n\t{\n\t\ttext = text.replace(RegExp('\\\\[DATE=('+atomRegExpPart+')](.+?)\\\\[\\\\/DATE]', 'ig'), (whole, date, text) => {\n\t\t\ttext = text.replace(/<(\\w+)[^>]*>(.*?)<\\\\1>/i, \"$2\", text);\n\t\t\ttext = text.replace(/\\[(\\w+)[^\\]]*](.*?)\\[\\/\\1]/i, \"$2\", text);\n\n\t\t\treturn this._getHtmlForAction('date', text, date);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyDate(text): string\n\t{\n\t\tconst atomRegexp = getUtils().date.atomRegexpString;\n\t\ttext = text.replace(RegExp('\\[DATE=('+atomRegexp+')](.+?)\\[\\/DATE]', 'ig'), (whole, date, text) => {\n\t\t\treturn text;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\t_getHtmlForAction(method, text, data)\n\t{\n\t\treturn Dom.create({\n\t\t\ttag: 'span',\n\t\t\tattrs: { className: 'bx-im-message-command-wrap' },\n\t\t\tchildren: [\n\t\t\t\tDom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'bx-im-message-command',\n\t\t\t\t\t\t'data-entity': method,\n\t\t\t\t\t},\n\t\t\t\t\ttext\n\t\t\t\t}),\n\t\t\t\tDom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: { className: 'bx-im-message-command-data' },\n\t\t\t\t\ttext: data\n\t\t\t\t}),\n\t\t\t]\n\t\t}).outerHTML;\n\t}\n}\n\n","import {Dom, Text} from 'main.core';\n\nexport const ParserCall = {\n\n\tdecode(text): string\n\t{\n\t\ttext = text.replace(/\\[CALL(?:=([-+\\d()./# ]+))?](.+?)\\[\\/CALL]/gi, (whole, number, text) => {\n\n\t\t\tif (!text)\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\t\t\tif (!number)\n\t\t\t{\n\t\t\t\tif (text.match(/^([-+\\d()./# ]+)$/))\n\t\t\t\t{\n\t\t\t\t\tnumber = text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn whole;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext = Text.decode(text);\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'CALL',\n\t\t\t\t\t'data-value': number,\n\t\t\t\t},\n\t\t\t\ttext\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = text.replace(\n\t\t\t/\\[PCH=([0-9]+)](.*?)\\[\\/PCH]/gi, (whole, historyId, text) => text\n\t\t);\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/\\[CALL(?:=([-+\\d()./# ]+))?](.+?)\\[\\/CALL]/gi,\n\t\t\t(whole, number, text) => text? text: number\n\t\t);\n\n\t\ttext = text.replace(\n\t\t\t/\\[PCH=([0-9]+)](.*?)\\[\\/PCH]/gi,\n\t\t\t(whole, historyId, text) => text\n\t\t);\n\n\t\treturn text;\n\t}\n}\n\n","import {Loc, Dom, Text, Type} from 'main.core';\nimport {EventEmitter} from 'main.core.events';\n\nimport {Parser} from '../parser';\nimport {ParserUtils} from '../utils/utils';\nimport {getCore, getConst} from '../utils/core-proxy';\n\nconst {EventType, MessageMentionType} = getConst();\n\nexport const ParserMention = {\n\n\tdecode(text): string\n\t{\n\t\ttext = text.replace(/\\[USER=([0-9]+)( REPLACE)?](.*?)\\[\\/USER]/gi, (whole, userId, replace, userName) => {\n\t\t\tuserId = Number.parseInt(userId, 10);\n\n\t\t\tif (!Type.isNumber(userId) || userId === 0)\n\t\t\t{\n\t\t\t\treturn userName;\n\t\t\t}\n\n\t\t\tif (replace || !userName)\n\t\t\t{\n\t\t\t\tconst user = getCore().getStore().getters['users/get'](userId);\n\t\t\t\tif (user)\n\t\t\t\t{\n\t\t\t\t\tuserName = user.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuserName = Text.decode(userName);\n\t\t\t}\n\n\t\t\tif (!userName)\n\t\t\t{\n\t\t\t\tuserName = `User ${userId}`;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'USER',\n\t\t\t\t\t'data-value': userId,\n\t\t\t\t},\n\t\t\t\ttext: userName\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = text.replace(/\\[chat=(imol\\|)?(\\d+)](.*?)\\[\\/chat]/gi, (whole, openlines, chatId, chatName) => {\n\t\t\tchatId = Number.parseInt(chatId, 10);\n\n\t\t\tif (!Type.isNumber(chatId) || chatId === 0 || openlines)\n\t\t\t{\n\t\t\t\treturn chatName;\n\t\t\t}\n\n\t\t\tif (chatName)\n\t\t\t{\n\t\t\t\tchatName = Text.decode(chatName);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst dialog = getCore().store.getters['dialogues/get']('chat'+chatId);\n\t\t\t\tchatName = dialog? dialog.name: 'Chat '+chatId;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'CHAT',\n\t\t\t\t\t'data-value': 'chat' + chatId,\n\t\t\t\t},\n\t\t\t\ttext: chatName\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = text.replace(/\\[context=((?:chat\\d+|\\d+:\\d+)\\/(\\d+))](.*?)\\[\\/context]/gis, (whole, contextTag, messageId, text) =>\n\t\t{\n\t\t\tif (!text)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\ttext = Text.decode(text);\n\t\t\tcontextTag = ParserUtils.getFinalContextTag(contextTag);\n\t\t\tif (!contextTag)\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\tconst dialogId = contextTag.split('/')[0];\n\n\t\t\tlet title = '';\n\t\t\tmessageId = Number.parseInt(messageId, 10);\n\t\t\tif (Type.isNumber(messageId) && messageId > 0)\n\t\t\t{\n\t\t\t\tconst message = getCore().store.getters['messages/getById'](messageId);\n\t\t\t\tif (message)\n\t\t\t\t{\n\t\t\t\t\ttitle = Parser.purifyMessage(message);\n\t\t\t\t\tconst user = getCore().store.getters['users/get'](message.authorId);\n\t\t\t\t\tif (user)\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle = `${user.name}: ${title}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Type.isStringFilled(title))\n\t\t\t{\n\t\t\t\ttitle = Loc.getMessage('IM_PARSER_MENTION_DIALOG');\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'CONTEXT',\n\t\t\t\t\t'data-dialog-id': dialogId,\n\t\t\t\t\t'data-message-id': messageId,\n\t\t\t\t\ttitle,\n\t\t\t\t},\n\t\t\t\ttext\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(/\\[USER=([0-9]+)( REPLACE)?](.*?)\\[\\/USER]/gi, (whole, userId, replace, userName) => {\n\t\t\tuserId = Number.parseInt(userId, 10);\n\n\t\t\tif (!Type.isNumber(userId) || userId === 0)\n\t\t\t{\n\t\t\t\treturn userName;\n\t\t\t}\n\n\t\t\tif (replace || !userName)\n\t\t\t{\n\t\t\t\tconst user = getCore().getStore().getters['users/get'](userId);\n\t\t\t\tif (user)\n\t\t\t\t{\n\t\t\t\t\tuserName = user.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuserName = Text.decode(userName);\n\t\t\t}\n\n\t\t\tif (!userName)\n\t\t\t{\n\t\t\t\tuserName = `User ${userId}`;\n\t\t\t}\n\n\t\t\treturn userName;\n\t\t});\n\n\t\ttext = text.replace(/\\[CHAT=(imol\\|)?(\\d+)](.*?)\\[\\/CHAT]/gi, (whole, openlines, chatId, chatName) => {\n\t\t\tchatId = Number.parseInt(chatId, 10);\n\n\t\t\tif (!chatName)\n\t\t\t{\n\t\t\t\tconst dialog = getCore().store.getters['dialogues/get']('chat'+chatId);\n\t\t\t\tchatName = dialog? dialog.name: 'Chat '+chatId;\n\t\t\t}\n\n\t\t\treturn chatName;\n\t\t});\n\n\t\ttext = text.replace(/\\[context=(chat\\d+|\\d+:\\d+)\\/(\\d+)](.*?)\\[\\/context]/gis, (whole, dialogId, messageId, text) => {\n\t\t\tif (!text)\n\t\t\t{\n\t\t\t\tconst dialog = getCore().store.getters['dialogues/get'](dialogId);\n\t\t\t\ttext = dialog? dialog.name: 'Dialog '+dialogId;\n\t\t\t}\n\n\t\t\treturn text;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\texecuteClickEvent(event: PointerEvent)\n\t{\n\t\tif (!Dom.hasClass(event.target, 'bx-im-mention'))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tevent.target.dataset.type === MessageMentionType.user\n\t\t\t|| event.target.dataset.type === MessageMentionType.chat\n\t\t)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.mention.openChatInfo, {\n\t\t\t\tevent,\n\t\t\t\tdialogId: event.target.dataset.value\n\t\t\t});\n\t\t}\n\t\telse if (event.target.dataset.type === MessageMentionType.context)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.goToMessageContext, {\n\t\t\t\tmessageId: Number.parseInt(event.target.dataset.messageId, 10),\n\t\t\t\tdialogId: event.target.dataset.dialogId.toString(),\n\t\t\t});\n\t\t}\n\t},\n}\n\n","export const ParserCommon = {\n\n\tdecodeNewLine(text): string\n\t{\n\t\ttext = text.replace(/\\n/gi, '<br />');\n\t\ttext = text.replace(/\\[BR]/gi, '<br />');\n\n\t\treturn text;\n\t},\n\n\tpurifyNewLine(text, replaceSymbol = ' '): string\n\t{\n\t\tif (replaceSymbol !== \"\\n\")\n\t\t{\n\t\t\ttext = text.replace(/\\n/gi, replaceSymbol);\n\t\t}\n\t\ttext = text.replace(/\\[BR]/gi, replaceSymbol);\n\n\t\treturn text;\n\t},\n\n\tpurifyBreakLine(text, replaceLetter = ' '): string\n\t{\n\t\ttext = text.replace(/<br><br \\/>/gi, '<br />');\n\t\ttext = text.replace(/<br \\/><br>/gi, '<br />');\n\t\ttext = text.replace(/\\[BR]/gi, '<br />');\n\t\ttext = text.replace(/<br \\/>/gi, replaceLetter);\n\n\t\t// text = text.replace(/<\\/?[^>]+>/gi, '');\n\n\t\treturn text;\n\t},\n\n\tdecodeTabulation(text): string\n\t{\n\t\ttext = text.replace(/( ){4}/gi, '\\t');\n\t\ttext = text.replace(/\\t/gi, '&nbsp;&nbsp;&nbsp;&nbsp;');\n\n\t\treturn text;\n\t},\n\n\tpurifyTabulation(text): string\n\t{\n\t\ttext = text.replace(/&nbsp;&nbsp;&nbsp;&nbsp;/gi, \" \");\n\n\t\treturn text;\n\t},\n\n\tpurifyNbsp(text): string\n\t{\n\t\ttext = text.replace(/&nbsp;/gi, \" \");\n\n\t\treturn text;\n\t},\n\n\tremoveDuplicateTags(text): string\n\t{\n\t\tif (text.substr(-6) === '<br />')\n\t\t{\n\t\t\ttext = text.substr(0, text.length - 6);\n\t\t}\n\n\t\ttext = text.replace(/<br><br \\/>/gi, '<br />');\n\t\ttext = text.replace(/<br \\/><br>/gi, '<br />');\n\n\t\treturn text;\n\t},\n}\n\n","export const ParserRecursionPrevention = {\n\n\t_startTagReplacement: [],\n\t_putReplacement: [],\n\t_sendReplacement: [],\n\t_codeReplacement: [],\n\n\tclean()\n\t{\n\t\tthis._startTagReplacement = [];\n\t\tthis._putReplacement = [];\n\t\tthis._sendReplacement = [];\n\t\tthis._codeReplacement = [];\n\t},\n\n\tcutStartTag(text): string\n\t{\n\t\ttext = text.replace(/\\[(.+?)]/gi, (tag) => {\n\t\t\tif (tag.startsWith('/'))\n\t\t\t{\n\t\t\t\treturn tag;\n\t\t\t}\n\t\t\tconst id = this._startTagReplacement.length;\n\t\t\tthis._startTagReplacement.push(tag);\n\t\t\treturn '####REPLACEMENT_TAG_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverStartTag(text): string\n\t{\n\t\tthis._startTagReplacement.forEach((tag, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_TAG_'+index+'####', tag);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tcutPutTag(text): string\n\t{\n\t\ttext = text.replace(/\\[PUT(?:=(.+?))?](.+?)?\\[\\/PUT]/gi, (whole) => {\n\t\t\tconst id = this._putReplacement.length;\n\t\t\tthis._putReplacement.push(whole);\n\t\t\treturn '####REPLACEMENT_PUT_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverPutTag(text): string\n\t{\n\t\tthis._putReplacement.forEach((value, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_PUT_'+index+'####', value);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tcutSendTag(text): string\n\t{\n\t\ttext = text.replace(/\\[SEND(?:=(.+?))?](.+?)?\\[\\/SEND]/gi, (whole) => {\n\t\t\tconst id = this._sendReplacement.length;\n\t\t\tthis._sendReplacement.push(whole);\n\t\t\treturn '####REPLACEMENT_SEND_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverSendTag(text): string\n\t{\n\t\tthis._sendReplacement.forEach((value, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_SEND_'+index+'####', value);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tcutCodeTag(text): string\n\t{\n\t\ttext = text.replace(/\\[CODE](<br \\/>)?(.*?)\\[\\/CODE]/sig, (whole) => {\n\t\t\tconst id = this._codeReplacement.length;\n\t\t\tthis._codeReplacement.push(whole);\n\t\t\treturn '####REPLACEMENT_CODE_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverCodeTag(text): string\n\t{\n\t\tthis._codeReplacement.forEach((value, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_CODE_'+index+'####', value)\n\t\t});\n\n\t\tif (this._sendReplacement.length > 0)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tthis._sendReplacement.forEach((value, index) => {\n\t\t\t\t\ttext = text.replace('####REPLACEMENT_SEND_'+index+'####', value);\n\t\t\t\t});\n\t\t\t}\n\t\t\twhile (text.includes('####REPLACEMENT_SEND_'));\n\t\t}\n\n\t\treturn text;\n\t},\n\n\trecoverRecursionTag(text): string\n\t{\n\t\tif (this._sendReplacement.length > 0)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tthis._sendReplacement.forEach((value, index) => {\n\t\t\t\t\ttext = text.replace('####REPLACEMENT_SEND_'+index+'####', value);\n\t\t\t\t});\n\t\t\t}\n\t\t\twhile (text.includes('####REPLACEMENT_SEND_'));\n\t\t}\n\n\t\ttext = text.split('####REPLACEMENT_SP_').join('####REPLACEMENT_PUT_');\n\n\t\tif (this._putReplacement.length > 0)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tthis._putReplacement.forEach((value, index) => {\n\t\t\t\t\ttext = text.replace('####REPLACEMENT_PUT_'+index+'####', value);\n\t\t\t\t});\n\t\t\t}\n\t\t\twhile (text.includes('####REPLACEMENT_PUT_'));\n\t\t}\n\n\t\treturn text;\n\t},\n}\n\n","export const ParserReplace = {\n\tdecode(text, replace = []): string\n\t{\n\t\tif (replace.length === 0)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tconst replacedText = replace.reduce((replacedText, item) => {\n\t\t\treturn this.replaceDate(replacedText, item);\n\t\t}, text);\n\n\t\treturn replacedText;\n\t},\n\n\treplaceDate(text, item): string\n\t{\n\t\tconst originalText = text.substring(item.start, item.end);\n\t\tif (originalText !== item.text)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tconst left = text.substring(0, item.start);\n\t\tconst right = text.substring(item.end);\n\n\t\treturn left + '[DATE='+item.value+']'+originalText+'[/DATE]' + right;\n\t}\n}","import {Loc} from 'main.core';\n\nimport {getConst} from '../utils/core-proxy';\nimport {ParserIcon} from './icon';\n\nconst {FileIconType} = getConst();\n\nexport const ParserDisk = {\n\n\tdecode(text): string\n\t{\n\t\tconst icon = ParserIcon.getIcon(FileIconType.file);\n\n\t\tlet diskText;\n\t\tif (icon)\n\t\t{\n\t\t\tdiskText = `${icon} ${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiskText = `[${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}]`;\n\t\t}\n\n\t\ttext = text.replace(/\\[disk=\\d+]/gi, diskText);\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\treturn this.decode(text);\n\t},\n};\n","import { Type, Text, Loc } from 'main.core';\n\nimport { ParserSlashCommand } from './functions/slash-command';\nimport { ParserQuote } from './functions/quote';\nimport { ParserImage } from './functions/image';\nimport { ParserSmile } from './functions/smile';\nimport { ParserUrl } from './functions/url';\nimport { ParserFont } from './functions/font';\nimport { ParserLines } from './functions/lines';\nimport { ParserAction } from './functions/action';\nimport { ParserCall } from './functions/call';\nimport { ParserMention } from './functions/mention';\nimport { ParserCommon } from './functions/common';\nimport { ParserIcon } from './functions/icon';\nimport { ParserRecursionPrevention } from './utils/recursion-prevention';\nimport { ParserReplace } from './functions/replace';\nimport { ParserDisk } from './functions/disk';\n\nimport { getCore, getLogger } from './utils/core-proxy';\n\nimport './parser.css';\n\nimport type { ImModelMessage, ImModelNotification, ImModelRecentItem } from 'im.v2.model';\nimport type { ParserConfig } from './types/parser-config';\n\ntype ResultRecentConfig = {\n\tfiles: boolean | Object[],\n\tattach: boolean | string | Object[]\n};\n\nexport const Parser = {\n\tdecodeMessage(message: ImModelMessage): string\n\t{\n\t\tconst messageFiles = getCore().store.getters['messages/getMessageFiles'](message.id);\n\n\t\treturn this.decode({\n\t\t\ttext: message.text,\n\t\t\tattach: message.attach,\n\t\t\tfiles: messageFiles,\n\t\t\treplaces: message.replaces,\n\t\t\tshowIconIfEmptyText: false,\n\t\t});\n\t},\n\n\tdecodeNotification(notification: ImModelNotification): string\n\t{\n\t\treturn this.decode({\n\t\t\ttext: notification.text,\n\t\t\tattach: notification.params.ATTACH ?? false,\n\t\t\treplaces: notification.replaces,\n\t\t\tshowIconIfEmptyText: false,\n\t\t\tshowImageFromLink: false,\n\t\t\turlTarget: '_self',\n\t\t});\n\t},\n\n\tdecodeText(text: string): string\n\t{\n\t\treturn this.decode({ text });\n\t},\n\n\tdecodeHtml(text: string): string\n\t{\n\t\treturn this.decode({ text });\n\t},\n\n\tdecodeSmileForLegacyCore(text: string, options: {}): string\n\t{\n\t\tconst legacyConfig = { ...options };\n\t\tlegacyConfig.ratioConfig = Object.freeze({\n\t\t\tDefault: 1,\n\t\t\tBig: 1.6,\n\t\t});\n\n\t\treturn ParserSmile.decodeSmile(text, legacyConfig);\n\t},\n\n\tdecode(config: ParserConfig): string\n\t{\n\t\tif (!Type.isPlainObject(config))\n\t\t{\n\t\t\tgetLogger().error('Parser.decode: the first parameter must be object', config);\n\n\t\t\treturn '<b style=\"color:red\">Parser.decode: the first parameter must be a parameter object</b';\n\t\t}\n\n\t\tlet { text } = config;\n\t\tconst {\n\t\t\tattach = false,\n\t\t\tfiles = false,\n\t\t\treplaces = [],\n\t\t\tremoveLinks = false,\n\t\t\tshowIconIfEmptyText = true,\n\t\t\tshowImageFromLink = true,\n\t\t\turlTarget = '_blank',\n\t\t} = config;\n\n\t\tif (!Type.isString(text))\n\t\t{\n\t\t\tif (Type.isNumber(text))\n\t\t\t{\n\t\t\t\treturn text.toString();\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\n\t\tif (!text)\n\t\t{\n\t\t\tif (showIconIfEmptyText)\n\t\t\t{\n\t\t\t\ttext = ParserIcon.addIconToShortText({ text, attach, files });\n\t\t\t}\n\n\t\t\treturn text.trim();\n\t\t}\n\n\t\ttext = ParserReplace.decode(text, replaces);\n\t\ttext = Text.encode(text.trim());\n\n\t\ttext = ParserCommon.decodeNewLine(text);\n\t\ttext = ParserCommon.decodeTabulation(text);\n\n\t\ttext = ParserRecursionPrevention.cutPutTag(text);\n\t\ttext = ParserRecursionPrevention.cutSendTag(text);\n\t\ttext = ParserRecursionPrevention.cutCodeTag(text);\n\n\t\ttext = ParserSmile.decodeSmile(text);\n\t\ttext = ParserSlashCommand.decode(text);\n\t\ttext = ParserQuote.decodeArrowQuote(text);\n\t\ttext = ParserQuote.decodeQuote(text);\n\t\ttext = ParserUrl.decode(text, { urlTarget, removeLinks });\n\t\ttext = ParserFont.decode(text);\n\t\ttext = ParserLines.decode(text);\n\t\ttext = ParserMention.decode(text);\n\t\ttext = ParserCall.decode(text);\n\t\ttext = ParserImage.decodeIcon(text);\n\t\tif (showImageFromLink)\n\t\t{\n\t\t\ttext = ParserImage.decodeLink(text);\n\t\t}\n\t\ttext = ParserDisk.decode(text);\n\t\ttext = ParserAction.decodeDate(text);\n\t\ttext = ParserRecursionPrevention.cutStartTag(text);\n\n\t\ttext = ParserRecursionPrevention.recoverStartTag(text);\n\t\ttext = ParserRecursionPrevention.recoverSendTag(text);\n\t\ttext = ParserAction.decodeSend(text);\n\n\t\ttext = ParserRecursionPrevention.recoverPutTag(text);\n\t\ttext = ParserAction.decodePut(text);\n\n\t\ttext = ParserRecursionPrevention.recoverCodeTag(text);\n\t\ttext = ParserQuote.decodeCode(text);\n\n\t\ttext = ParserRecursionPrevention.recoverRecursionTag(text);\n\n\t\ttext = ParserCommon.removeDuplicateTags(text);\n\n\t\tParserRecursionPrevention.clean();\n\n\t\treturn text;\n\t},\n\n\tpurifyMessage(message: ImModelMessage): string\n\t{\n\t\tconst messageFiles = getCore().store.getters['messages/getMessageFiles'](message.id);\n\n\t\treturn this.purify({\n\t\t\ttext: message.text,\n\t\t\tattach: message.attach,\n\t\t\tfiles: messageFiles,\n\t\t});\n\t},\n\n\tpurifyNotification(notification: ImModelNotification): string\n\t{\n\t\tconst messageFiles = getCore().store.getters['messages/getMessageFiles'](notification.id);\n\n\t\treturn this.purify({\n\t\t\ttext: notification.text,\n\t\t\tattach: notification.params.ATTACH ?? false,\n\t\t\tfiles: messageFiles,\n\t\t});\n\t},\n\n\tpurifyRecent(recentMessage: ImModelRecentItem): string\n\t{\n\t\tconst { files, attach } = this.prepareConfigForRecent(recentMessage);\n\n\t\treturn this.purify({\n\t\t\ttext: recentMessage.message.text,\n\t\t\tattach,\n\t\t\tfiles,\n\t\t\tshowPhraseMessageWasDeleted: recentMessage.message.id !== 0,\n\t\t});\n\t},\n\n\tpurifyText(text: string): string\n\t{\n\t\treturn this.purify({ text });\n\t},\n\n\tpurify(config: ParserConfig): string\n\t{\n\t\tif (!Type.isPlainObject(config))\n\t\t{\n\t\t\tgetLogger().error('Parser.purify: the first parameter must be a object', config);\n\n\t\t\treturn 'Parser.purify: the first parameter must be a parameter object';\n\t\t}\n\n\t\tlet { text } = config;\n\t\tconst {\n\t\t\tattach = false,\n\t\t\tfiles = false,\n\t\t\tshowPhraseMessageWasDeleted = true,\n\t\t} = config;\n\n\t\tif (!Type.isString(text))\n\t\t{\n\t\t\ttext = Type.isNumber(text) ? text.toString() : '';\n\t\t}\n\n\t\tif (!text)\n\t\t{\n\t\t\ttext = ParserIcon.addIconToShortText({ text, attach, files });\n\n\t\t\treturn text.trim();\n\t\t}\n\n\t\ttext = Text.encode(text.trim());\n\n\t\ttext = ParserCommon.purifyNewLine(text, '\\n');\n\t\ttext = ParserSlashCommand.purify(text);\n\t\ttext = ParserQuote.purifyArrowQuote(text);\n\t\ttext = ParserQuote.purifyQuote(text);\n\t\ttext = ParserQuote.purifyCode(text);\n\t\ttext = ParserAction.purifyPut(text);\n\t\ttext = ParserAction.purifySend(text);\n\t\ttext = ParserMention.purify(text);\n\t\ttext = ParserFont.purify(text);\n\t\ttext = ParserLines.purify(text);\n\t\ttext = ParserCall.purify(text);\n\t\ttext = ParserImage.purifyLink(text);\n\t\ttext = ParserImage.purifyIcon(text);\n\t\ttext = ParserUrl.purify(text);\n\t\ttext = ParserDisk.purify(text);\n\t\ttext = ParserCommon.purifyNewLine(text);\n\t\ttext = ParserIcon.addIconToShortText({ text, attach, files });\n\n\t\tif (text.length > 0)\n\t\t{\n\t\t\ttext = Text.decode(text);\n\t\t}\n\t\telse if (showPhraseMessageWasDeleted)\n\t\t{\n\t\t\ttext = Loc.getMessage('IM_PARSER_MESSAGE_DELETED');\n\t\t}\n\n\t\treturn text.trim();\n\t},\n\n\tprepareQuote(message: ImModelMessage): string\n\t{\n\t\tconst { id, attach } = message;\n\t\tlet { text } = message;\n\n\t\tconst files = getCore().store.getters['messages/getMessageFiles'](id);\n\n\t\ttext = Text.encode(text.trim());\n\n\t\ttext = ParserMention.purify(text);\n\t\ttext = ParserCall.purify(text);\n\t\ttext = ParserLines.purify(text);\n\t\ttext = ParserCommon.purifyBreakLine(text, '\\n');\n\t\ttext = ParserCommon.purifyNbsp(text);\n\t\ttext = ParserUrl.removeSimpleUrlTag(text);\n\t\ttext = ParserQuote.purifyCode(text, ' ');\n\t\ttext = ParserQuote.purifyQuote(text, ' ');\n\t\ttext = ParserQuote.purifyArrowQuote(text, ' ');\n\t\ttext = ParserIcon.addIconToShortText({ text, attach, files });\n\n\t\ttext = text.length > 0 ? Text.decode(text) : Loc.getMessage('IM_PARSER_MESSAGE_DELETED');\n\n\t\treturn text.trim();\n\t},\n\n\tprepareEdit(message: ImModelMessage): string\n\t{\n\t\tlet { text } = message;\n\n\t\ttext = ParserUrl.removeSimpleUrlTag(text);\n\n\t\treturn text.trim();\n\t},\n\n\tprepareCopy(message: ImModelMessage): string\n\t{\n\t\tconst { id } = message;\n\t\tlet { text } = message;\n\n\t\tconst files = getCore().store.getters['messages/getMessageFiles'](id).map((file) => {\n\t\t\treturn `[DISK=${file.id}]\\n`;\n\t\t});\n\n\t\ttext = files.join('\\n') + text;\n\n\t\treturn text.trim();\n\t},\n\n\tprepareConfigForRecent(recentMessage: ImModelRecentItem): ResultRecentConfig\n\t{\n\t\tlet files = false;\n\t\tconst fileField = recentMessage.message.params.withFile;\n\t\tif (Type.isBoolean(fileField))\n\t\t{\n\t\t\tfiles = fileField;\n\t\t}\n\t\telse if (Type.isPlainObject(fileField))\n\t\t{\n\t\t\tfiles = [fileField];\n\t\t}\n\n\t\tlet attach = false;\n\t\tconst attachField = recentMessage.message.params.withAttach;\n\t\tif (\n\t\t\tType.isBoolean(attachField)\n\t\t\t|| Type.isStringFilled(attachField)\n\t\t\t|| Type.isArray(attachField)\n\t\t)\n\t\t{\n\t\t\tattach = attachField;\n\t\t}\n\t\telse if (Type.isPlainObject(attachField))\n\t\t{\n\t\t\tattach = [attachField];\n\t\t}\n\n\t\treturn { files, attach };\n\t},\n\n\texecuteClickEvent(event: PointerEvent)\n\t{\n\t\tParserMention.executeClickEvent(event);\n\t\tParserQuote.executeClickEvent(event);\n\t},\n};\n"],"names":["ParserSlashCommand","decode","text","startsWith","substr","purify","settings","Extension","getSettings","v2","get","getCore","BX","Messenger","Application","Core","Embedding","getUtils","Lib","Utils","getLogger","Logger","getConst","Const","getSmileManager","SmileManager","getBigSmileOption","settingName","Settings","dialog","bigSmiles","getStore","getters","RECURSIVE_LIMIT","ParserUtils","recursiveReplace","pattern","replacement","Type","isStringFilled","count","deep","replace","params","getFinalContextTag","contextTag","match","dialogId","user1","user2","messageId","toString","Number","parseInt","getUserId","FileType","FileIconType","AttachDescription","ParserIcon","getIcon","icon","fallbackText","addIconToShortText","config","attach","files","isArrayFilled","getTextForFile","getTextForAttach","trim","getQuoteBlock","quote","Loc","getMessage","getCodeBlock","code","getImageBlock","image","getFileBlock","file","rawText","preparedText","isArray","length","firstFile","getIconTextForFile","getIconTextForFileType","attachDescription","firstAttach","DESCRIPTION","SKIP_MESSAGE","Parser","purifyText","showPhraseMessageWasDeleted","type","result","iconText","toUpperCase","withText","textDescription","audio","video","name","EventType","QUOTE_SIGN","ParserQuote","decodeArrowQuote","includes","isProcessed","textLines","split","i","quoteStartIndex","outerContainerStart","innerContainerStart","containerEnd","quoteEndIndex","join","purifyArrowQuote","spaceLetter","RegExp","decodeQuote","whole","userBlock","userName","timeTag","skipUserBlock","userContainer","Tag","render","quoteBaseClass","slice","layout","outerHTML","purifyQuote","decodeCode","br","Dom","create","tag","attrs","className","html","purifyCode","executeClickEvent","event","target","parentNode","dom","recursiveBackwardNodeSearch","dataset","context","EventEmitter","emit","goToMessageContext","ParserImage","decodeLink","letter","url","Text","toLowerCase","indexOf","checkUrl","children","src","events","error","_hideErrorImage","purifyLink","decodeIcon","textElementSize","enableBigSmile","size","width","height","title","purifyIcon","element","innerHTML","encodeURI","RatioConfig","Object","freeze","Default","Big","getSmileRatio","replacedText","replaceAll","hasOnlySmiles","matchOnlySmiles","test","mapTypings","smiles","typings","reduce","acc","smile","typing","definition","smileImg","lookBehind","offset","substring","escaped","escapeRegex","regExp","ParserSmile","loadSmilePatterns","smileManager","getInstance","smileList","sortedSmiles","sort","a","b","localeCompare","map","decodeSmile","options","isBoolean","ratioConfig","isObjectLike","ratio","behindMatching","call","cloneNode","style","ParserUrl","urlTarget","removeLinks","link","href","lastIndexOf","urlPart","removeSimpleUrlTag","ParserFont","number","fontSize","hex","color","removeStrike","ParserLines","rating","group","atomRegExpPart","ParserAction","decodePut","command","_getHtmlForAction","purifyPut","decodeSend","purifySend","decodeDate","date","purifyDate","atomRegexp","atomRegexpString","method","data","ParserCall","historyId","MessageMentionType","ParserMention","userId","isNumber","user","openlines","chatId","chatName","store","message","purifyMessage","authorId","hasClass","chat","mention","openChatInfo","value","ParserCommon","decodeNewLine","purifyNewLine","replaceSymbol","purifyBreakLine","replaceLetter","decodeTabulation","purifyTabulation","purifyNbsp","removeDuplicateTags","ParserRecursionPrevention","_startTagReplacement","_putReplacement","_sendReplacement","_codeReplacement","clean","cutStartTag","id","push","recoverStartTag","forEach","index","cutPutTag","recoverPutTag","cutSendTag","recoverSendTag","cutCodeTag","recoverCodeTag","recoverRecursionTag","ParserReplace","item","replaceDate","originalText","start","end","left","right","ParserDisk","diskText","decodeMessage","messageFiles","replaces","showIconIfEmptyText","decodeNotification","notification","ATTACH","showImageFromLink","decodeText","decodeHtml","decodeSmileForLegacyCore","legacyConfig","isPlainObject","isString","encode","purifyNotification","purifyRecent","recentMessage","prepareConfigForRecent","prepareQuote","prepareEdit","prepareCopy","fileField","withFile","attachField","withAttach"],"mappings":"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"}