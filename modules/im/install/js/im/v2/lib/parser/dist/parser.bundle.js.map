{"version":3,"file":"parser.bundle.js","sources":["../src/functions/slash-command.js","../src/utils/core-proxy.js","../src/utils/utils.js","../src/functions/icon.js","../src/functions/quote.js","../src/functions/image.js","../src/functions/smile.js","../src/functions/url.js","../src/functions/font.js","../src/functions/lines.js","../src/functions/action.js","../src/functions/call.js","../src/functions/mention.js","../src/functions/common.js","../src/utils/recursion-prevention.js","../src/functions/replace.js","../src/functions/disk.js","../src/parser.js"],"sourcesContent":["export const ParserSlashCommand = {\n\n\tdecode(text): string\n\t{\n\t\tif (text.startsWith('/me'))\n\t\t{\n\t\t\treturn `[i]${text.substr(4)}[/i]`;\n\t\t}\n\n\t\tif (text.startsWith('/loud'))\n\t\t{\n\t\t\treturn `[size=20]${text.substr(6)}[/size]`;\n\t\t}\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\tif (text.startsWith('/me'))\n\t\t{\n\t\t\treturn  text.substr(4);\n\t\t}\n\n\t\tif (text.startsWith('/loud'))\n\t\t{\n\t\t\treturn  text.substr(6);\n\t\t}\n\n\t\treturn text;\n\t}\n}","import {Extension, Type} from 'main.core';\n\nconst isDesktop = Type.isObject(window.BXDesktopSystem);\nconst settings = Extension.getSettings('im.v2.lib.parser');\nconst v2 = settings.get('v2') && !isDesktop;\n\nconst getCore = () => {\n\treturn v2 ? BX.Messenger.v2.Application.Core : BX.Messenger.Embedding.Application.Core;\n};\nconst getUtils = () => {\n\treturn v2 ? BX.Messenger.v2.Lib.Utils : BX.Messenger.Embedding.Lib.Utils;\n};\nconst getLogger = () => {\n\treturn v2 ? BX.Messenger.v2.Lib.Logger : BX.Messenger.Embedding.Lib.Logger;\n};\nconst getConst = () => {\n\treturn v2 ? BX.Messenger.v2.Const : BX.Messenger.Embedding.Const;\n};\nconst getSmileManager = () => {\n\treturn v2 ? BX.Messenger.v2.Lib.SmileManager : BX.Messenger.Embedding.Lib.SmileManager;\n};\nconst getBigSmileOption = () => {\n\tif (v2)\n\t{\n\t\tconst settingName = BX.Messenger.v2.Const.Settings.dialog.bigSmiles;\n\t\treturn getCore().getStore().getters['application/settings/get'](settingName);\n\t}\n\n\treturn getCore().getStore().getters['application/getOption']('bigSmileEnable');\n};\n\nexport {getCore, getUtils, getLogger, getConst, getSmileManager, getBigSmileOption};\n\nexport type Smile = {\n\tid: string;\n\tsetId: string;\n\tname: string;\n\timage: string;\n\ttyping: string;\n\talternative: boolean;\n\twidth: number;\n\theight: number;\n\tdefinition: string;\n};","import {Type} from 'main.core';\n\nimport {getCore} from './core-proxy';\n\nconst RECURSIVE_LIMIT = 10;\nexport const ParserUtils = {\n\n\trecursiveReplace(text, pattern, replacement): string\n\t{\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet count = 0;\n\t\tlet deep = true;\n\t\tdo\n\t\t{\n\t\t\tdeep = false;\n\t\t\tcount++;\n\t\t\ttext = text.replace(pattern, (...params) => {\n\t\t\t\tdeep = true;\n\t\t\t\treturn replacement(...params);\n\t\t\t});\n\t\t}\n\t\twhile (deep && count <= RECURSIVE_LIMIT);\n\n\t\treturn text;\n\t},\n\n\tgetFinalContextTag(contextTag)\n\t{\n\t\tconst match = contextTag.match(/(chat\\d+|(\\d+):(\\d+))\\/(\\d+)/i);\n\t\tif (!match)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet [, dialogId, user1, user2, messageId] = match;\n\t\tif (dialogId.toString().startsWith('chat'))\n\t\t{\n\t\t\tif (dialogId === 'chat0')\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn contextTag;\n\t\t}\n\n\t\tuser1 = Number.parseInt(user1, 10);\n\t\tuser2 = Number.parseInt(user2, 10);\n\t\tif (getCore().getUserId() === user1)\n\t\t{\n\t\t\treturn `${user2}/${messageId}}`;\n\t\t}\n\t\tif (getCore().getUserId() === user2)\n\t\t{\n\t\t\treturn `${user1}/${messageId}}`;\n\t\t}\n\n\t\treturn '';\n\t},\n};","import {Dom, Loc, Type} from 'main.core';\n\nimport {getConst} from '../utils/core-proxy';\nimport {Parser} from '../parser';\n\nconst {FileType, FileIconType, AttachDescription} = getConst();\n\n\nexport const ParserIcon = {\n\tgetIcon(icon: $Values<typeof FileIconType>, fallbackText: string = ''): string\n\t{\n\t\treturn fallbackText;\n\t\t/*\n\t\tif (!FileIconType[icon])\n\t\t{\n\t\t\treturn fallbackText;\n\t\t}\n\n\t\treturn Dom.create({\n\t\t\ttag: 'span',\n\t\t\tattrs: {\n\t\t\t\tclassName: `bx-im-icon --${icon}`,\n\t\t\t},\n\t\t}).outerHTML;\n\t\t */\n\t},\n\n\taddIconToShortText(config: {\n\t\ttext: string,\n\t\tattach: boolean | string | Array,\n\t\tfiles: boolean | Array\n\t}): string\n\t{\n\t\tlet {text} = config;\n\t\tconst {attach, files} = config;\n\n\t\tif (Type.isArray(files) && files.length > 0)\n\t\t{\n\t\t\ttext = this.getTextForFile(text, files);\n\t\t}\n\t\telse if (\n\t\t\tattach === true\n\t\t\t|| (Type.isArray(attach) && attach.length > 0)\n\t\t\t|| Type.isStringFilled(attach)\n\t\t)\n\t\t{\n\t\t\ttext = this.getTextForAttach(text, attach);\n\t\t}\n\n\t\treturn text.trim();\n\t},\n\n\tgetQuoteBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.quote);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_QUOTE')}]`;\n\t},\n\n\tgetCodeBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.code);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_CODE')}]`;\n\t},\n\n\tgetImageBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.image);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_IMAGE')}]`;\n\t},\n\n\tgetFileBlock(): string\n\t{\n\t\tconst icon = this.getIcon(FileIconType.file);\n\t\tif (icon)\n\t\t{\n\t\t\treturn icon;\n\t\t}\n\n\t\treturn `[${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}]`;\n\t},\n\n\tgetTextForFile(text: string, files: boolean | Array): string\n\t{\n\t\tif (Type.isArray(files) && files.length > 0)\n\t\t{\n\t\t\tconst [firstFile] = files;\n\t\t\ttext = this.getIconTextForFile(text, firstFile);\n\t\t}\n\t\telse if (files === true)\n\t\t{\n\t\t\ttext = this.getIconTextForFileType(text, FileIconType.file);\n\t\t}\n\n\t\treturn text;\n\t},\n\n\tgetTextForAttach(text: string, attach: boolean | string | Array): string\n\t{\n\t\tlet attachDescription = '';\n\t\tif (Type.isArray(attach) && attach.length > 0)\n\t\t{\n\t\t\tconst [firstAttach] = attach;\n\t\t\tif (Type.isStringFilled(firstAttach.DESCRIPTION))\n\t\t\t{\n\t\t\t\tattachDescription = firstAttach.DESCRIPTION;\n\t\t\t}\n\t\t}\n\t\telse if (Type.isStringFilled(attach))\n\t\t{\n\t\t\tattachDescription = attach;\n\t\t}\n\n\t\tif (Type.isStringFilled(attachDescription))\n\t\t{\n\t\t\tif (attachDescription === AttachDescription.SKIP_MESSAGE)\n\t\t\t{\n\t\t\t\tattachDescription = '';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tattachDescription = Parser.purifyText(attachDescription, {showPhraseMessageWasDeleted: false});\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst icon = this.getIcon(FileIconType.attach);\n\t\t\tif (icon)\n\t\t\t{\n\t\t\t\tattachDescription = `${icon} ${Loc.getMessage('IM_PARSER_ICON_TYPE_ATTACH')}`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tattachDescription = `[${Loc.getMessage('IM_PARSER_ICON_TYPE_ATTACH')}]`;\n\t\t\t}\n\t\t}\n\n\t\treturn `${text} ${attachDescription}`.trim();\n\t},\n\n\tgetIconTextForFileType(text: string, type: $Values<typeof FileIconType> = FileIconType.file): string\n\t{\n\t\tlet result = text;\n\t\tconst icon = this.getIcon(type);\n\t\tconst iconText = Loc.getMessage(`IM_PARSER_ICON_TYPE_${type.toUpperCase()}`);\n\t\tif (icon)\n\t\t{\n\t\t\tconst withText = text.replace(/(\\s|\\n)/gi, '').length > 0;\n\t\t\tconst textDescription = withText? text: iconText;\n\t\t\tresult = `${icon} ${textDescription}`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = `[${iconText}] ${text}`;\n\t\t}\n\n\t\treturn result.trim();\n\t},\n\n\tgetIconTextForFile(text: string, file: Object): string\n\t{\n\t\tconst withText = text.replace(/(\\s|\\n)/gi, '').length > 0;\n\n\t\t// todo: remove this hack after fix receiving messages with files on P&P\n\t\tif (!file || !file.type)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tif (file.type === FileType.image)\n\t\t{\n\t\t\treturn this.getIconTextForFileType(text, FileIconType.image);\n\t\t}\n\t\telse if (file.type === FileType.audio)\n\t\t{\n\t\t\treturn this.getIconTextForFileType(text, FileIconType.audio);\n\t\t}\n\t\telse if (file.type === FileType.video)\n\t\t{\n\t\t\treturn this.getIconTextForFileType(text, FileIconType.video);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst icon = this.getIcon(FileIconType.file);\n\t\t\tif (icon)\n\t\t\t{\n\t\t\t\tconst textDescription = withText? text: '';\n\t\t\t\ttext = `${icon} ${file.name} ${textDescription}`;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttext = `${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}: ${file.name} ${text}`;\n\t\t\t}\n\n\t\t\treturn text.trim();\n\t\t}\n\t}\n};","import {Dom, Tag} from 'main.core';\nimport {EventEmitter} from 'main.core.events';\n\nimport {ParserUtils} from '../utils/utils';\nimport {getUtils, getConst} from '../utils/core-proxy';\nimport {ParserIcon} from './icon';\n\nconst {EventType} = getConst();\n\nconst QUOTE_SIGN = '&gt;&gt;';\n\nexport const ParserQuote = {\n\n\tdecodeArrowQuote(text: string): string\n\t{\n\t\tif (!text.includes(QUOTE_SIGN))\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet isProcessed = false;\n\n\t\tconst textLines = text.split('<br />');\n\t\tfor (let i = 0; i < textLines.length; i++)\n\t\t{\n\t\t\tif (!textLines[i].startsWith(QUOTE_SIGN))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst quoteStartIndex = i;\n\n\t\t\tconst outerContainerStart = '<div class=\"bx-im-message-quote --inline\">';\n\t\t\tconst innerContainerStart = '<div class=\"bx-im-message-quote__wrap\">';\n\t\t\tconst containerEnd = '</div>';\n\t\t\ttextLines[quoteStartIndex] = textLines[quoteStartIndex].replace(QUOTE_SIGN, `${outerContainerStart}${innerContainerStart}`);\n\t\t\t// remove >> from all next lines\n\t\t\twhile (++i < textLines.length && textLines[i].startsWith(QUOTE_SIGN))\n\t\t\t{\n\t\t\t\ttextLines[i] = textLines[i].replace(QUOTE_SIGN, '');\n\t\t\t}\n\t\t\tconst quoteEndIndex = i - 1;\n\t\t\ttextLines[quoteEndIndex] += `${containerEnd}${containerEnd}`;\n\t\t\tisProcessed = true;\n\t\t}\n\n\t\tif (!isProcessed)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\treturn textLines.join('<br />');\n\t},\n\n\tpurifyArrowQuote(text, spaceLetter = ' '): string\n\t{\n\t\ttext = text.replace(\n\t\t\tnew RegExp(`^(${QUOTE_SIGN}(.*))`, 'gim'),\n\t\t\tParserIcon.getQuoteBlock() + spaceLetter\n\t\t);\n\n\t\treturn text;\n\t},\n\n\tdecodeQuote(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/-{54}(<br \\/>(.*?)\\[(.*?)]( #(?:chat\\d+|\\d+:\\d+)\\/\\d+)?)?<br \\/>(.*?)-{54}(<br \\/>)?/gs,\n\t\t\t(whole, userBlock, userName, timeTag, contextTag, text): string => {\n\t\t\t\tconst skipUserBlock = !userName || !timeTag;\n\t\t\t\tif (skipUserBlock && !text) // greedy date detector :(\n\t\t\t\t{\n\t\t\t\t\ttext = `${timeTag}`;\n\t\t\t\t}\n\n\t\t\t\tlet userContainer = '';\n\t\t\t\tif (!skipUserBlock)\n\t\t\t\t{\n\t\t\t\t\tuserContainer = Tag.render`\n\t\t\t\t\t\t<div class='bx-im-message-quote__name'>\n\t\t\t\t\t\t\t<div class=\"bx-im-message-quote__name-text\">${userName}</div>\n\t\t\t\t\t\t\t<div class=\"bx-im-message-quote__name-time\">${timeTag}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\t\t\t\t}\n\n\t\t\t\tlet quoteBaseClass = 'bx-im-message-quote';\n\t\t\t\tif (contextTag)\n\t\t\t\t{\n\t\t\t\t\tcontextTag = contextTag.trim().slice(1);\n\t\t\t\t\tcontextTag = ParserUtils.getFinalContextTag(contextTag);\n\t\t\t\t}\n\t\t\t\tif (contextTag)\n\t\t\t\t{\n\t\t\t\t\tquoteBaseClass += ' --with-context';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcontextTag = 'none';\n\t\t\t\t}\n\n\t\t\t\tconst layout = Tag.render`\n\t\t\t\t\t<div class='${quoteBaseClass}' data-context='${contextTag}'>\n\t\t\t\t\t\t<div class='bx-im-message-quote__wrap'>\n\t\t\t\t\t\t\t${userContainer}\n\t\t\t\t\t\t\t<div class='bx-im-message-quote__text'>${text}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\n\t\t\t\treturn layout.outerHTML;\n\t\t\t}\n\t\t);\n\n\t\treturn text;\n\t},\n\n\tpurifyQuote(text: string, spaceLetter: string = ' '): string\n\t{\n\t\treturn text.replace(/-{54}(.*?)-{54}/gims, ParserIcon.getQuoteBlock() + spaceLetter);\n\t},\n\n\tdecodeCode(text: string): string\n\t{\n\t\treturn text.replace(/\\[code](<br \\/>)?([\\0-\\uFFFF]*?)\\[\\/code](<br \\/>)?/gis, (whole, br, code) => {\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'div',\n\t\t\t\tattrs: {className: 'bx-im-message-content-code'},\n\t\t\t\thtml: code\n\t\t\t}).outerHTML;\n\t\t});\n\t},\n\n\tpurifyCode(text: string, spaceLetter: string = ' '): string\n\t{\n\t\treturn text.replace(/\\[code](<br \\/>)?([\\0-\\uFFFF]*?)\\[\\/code]/gis, ParserIcon.getCodeBlock() + spaceLetter);\n\t},\n\n\texecuteClickEvent(event: PointerEvent)\n\t{\n\t\tif (\n\t\t\t!event.target.className.startsWith('bx-im-message-quote')\n\t\t\t&& !(\n\t\t\t\tevent.target.parentNode\n\t\t\t\t&& event.target.parentNode.className.startsWith('bx-im-message-quote')\n\t\t\t)\n\t\t)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = getUtils().dom.recursiveBackwardNodeSearch(event.target, '--with-context');\n\t\tif (!target || target.dataset.context === 'none')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst [dialogId, messageId] = target.dataset.context.split('/');\n\t\tEventEmitter.emit(EventType.dialog.goToMessageContext, {\n\t\t\tmessageId: Number.parseInt(messageId, 10),\n\t\t\tdialogId: dialogId.toString(),\n\t\t});\n\t},\n};","import {Dom, Loc, Text} from 'main.core';\n\nimport {getCore, getUtils, getBigSmileOption} from '../utils/core-proxy';\nimport {ParserIcon} from './icon';\n\nexport const ParserImage = {\n\n\tdecodeLink(text): string\n\t{\n\t\tlet changed = false;\n\t\ttext = text.replace(/(.)?((https|http):\\/\\/(\\S+)\\.(jpg|jpeg|png|gif|webp)(\\?\\S+)?)/gi, function(whole, letter, url): string\n\t\t{\n\t\t\turl = Text.decode(url);\n\n\t\t\tif(\n\t\t\t\tletter && !(['>', ']'].includes(letter))\n\t\t\t\t|| !url.match(/(\\.(jpg|jpeg|png|gif|webp)\\?|\\.(jpg|jpeg|png|gif|webp)$)/i)\n\t\t\t\t|| url.toLowerCase().indexOf(\"/docs/pub/\") > 0\n\t\t\t\t|| url.toLowerCase().indexOf(\"logout=yes\") > 0\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\t\t\treturn (letter? letter: '') + Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-message-image',\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\tDom.create({\n\t\t\t\t\t\ttag: 'img',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclassName: 'bx-im-message-image-source',\n\t\t\t\t\t\t\tsrc: url,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\terror: () => { ParserImage._hideErrorImage(this) }\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyLink(text): string\n\t{\n\t\ttext = text.replace(/(.)?((https|http):\\/\\/(\\S+)\\.(jpg|jpeg|png|gif|webp)(\\?\\S+)?)/gi, function(whole, letter, url): string\n\t\t{\n\t\t\tif(\n\t\t\t\tletter && !(['>', ']', ' '].includes(letter))\n\t\t\t\t|| !url.match(/(\\.(jpg|jpeg|png|gif|webp)\\?|\\.(jpg|jpeg|png|gif|webp)$)/i)\n\t\t\t\t|| url.toLowerCase().indexOf(\"/docs/pub/\") > 0\n\t\t\t\t|| url.toLowerCase().indexOf(\"logout=yes\") > 0\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn (letter? letter: '') + ParserIcon.getImageBlock();\n\t\t\t}\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tdecodeIcon(text): string\n\t{\n\t\tlet textElementSize = 0;\n\n\t\tconst enableBigSmile = getBigSmileOption();\n\t\tif (enableBigSmile)\n\t\t{\n\t\t\ttextElementSize = text.replace(/\\[icon=([^\\]]*)]/gi, '').trim().length;\n\t\t}\n\n\t\ttext = text.replace(/\\[icon=([^\\]]*)]/gi, (whole) =>\n\t\t{\n\t\t\tlet url = whole.match(/icon=(\\S+[^\\s.,> )\\];'\"!?])/i);\n\t\t\tif (url && url[1])\n\t\t\t{\n\t\t\t\turl = url[1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\n\t\t\tconst attrs = {'src': url, 'border': 0};\n\n\t\t\tconst size = whole.match(/size=(\\d+)/i);\n\t\t\tif (size && size[1])\n\t\t\t{\n\t\t\t\tattrs['width'] = size[1];\n\t\t\t\tattrs['height'] = size[1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst width = whole.match(/width=(\\d+)/i);\n\t\t\t\tif (width && width[1])\n\t\t\t\t{\n\t\t\t\t\tattrs['width'] = width[1];\n\t\t\t\t}\n\n\t\t\t\tconst height = whole.match(/height=(\\d+)/i);\n\t\t\t\tif (height && height[1])\n\t\t\t\t{\n\t\t\t\t\tattrs['height'] = height[1];\n\t\t\t\t}\n\n\t\t\t\tif (attrs['width'] && !attrs['height'])\n\t\t\t\t{\n\t\t\t\t\tattrs['height'] = attrs['width'];\n\t\t\t\t}\n\t\t\t\telse if (attrs['height'] && !attrs['width'])\n\t\t\t\t{\n\t\t\t\t\tattrs['width'] = attrs['height'];\n\t\t\t\t}\n\t\t\t\telse if (attrs['height'] && attrs['width'])\n\t\t\t\t{}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tattrs['width'] = 20;\n\t\t\t\t\tattrs['height'] = 20;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tattrs['width'] = attrs['width']>100? 100: attrs['width'];\n\t\t\tattrs['height'] = attrs['height']>100? 100: attrs['height'];\n\n\t\t\tif (enableBigSmile && textElementSize === 0 && attrs['width'] === attrs['height'] && attrs['width'] === 20)\n\t\t\t{\n\t\t\t\tattrs['width'] = 40;\n\t\t\t\tattrs['height'] = 40;\n\t\t\t}\n\n\t\t\tlet title = whole.match(/title=(.*[^\\s\\]])/i);\n\t\t\tif (title && title[1])\n\t\t\t{\n\t\t\t\ttitle = title[1];\n\t\t\t\tif (title.indexOf('width=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('width='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('height=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('height='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('size=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('size='))\n\t\t\t\t}\n\t\t\t\tif (title)\n\t\t\t\t{\n\t\t\t\t\tattrs['title'] = Text.decode(title).trim();\n\t\t\t\t\tattrs['alt'] = attrs['title'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'img',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-smile bx-icon',\n\t\t\t\t\t...attrs\n\t\t\t\t},\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyIcon(text): string\n\t{\n\t\ttext = text.replace(/\\[icon=([^\\]]*)]/gi, (whole) =>\n\t\t{\n\t\t\tlet title = whole.match(/title=(.*[^\\s\\]])/i);\n\t\t\tif (title && title[1])\n\t\t\t{\n\t\t\t\ttitle = title[1];\n\t\t\t\tif (title.indexOf('width=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('width='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('height=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('height='))\n\t\t\t\t}\n\t\t\t\tif (title.indexOf('size=') > -1)\n\t\t\t\t{\n\t\t\t\t\ttitle = title.substr(0, title.indexOf('size='))\n\t\t\t\t}\n\t\t\t\tif (title)\n\t\t\t\t{\n\t\t\t\t\ttitle = '('+title.trim()+')';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttitle = '('+Loc.getMessage('IM_PARSER_IMAGE_ICON')+')';\n\t\t\t}\n\t\t\treturn title;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\t_hideErrorImage(element)\n\t{\n\t\tif (element.parentNode)\n\t\t{\n\t\t\telement.parentNode.innerHTML = '<a href=\"'+encodeURI(element.src)+'\" target=\"_blank\">'+element.src+'</a>';\n\t\t}\n\t}\n}\n\n","import {Dom, Tag, Type} from 'main.core';\n\nimport {getCore, getUtils, getSmileManager, getBigSmileOption} from '../utils/core-proxy';\n\nimport type {Smile} from '../utils/core-proxy';\n\nexport const RatioConfig = Object.freeze({\n\tDefault: 1,\n\tBig: 1.6,\n});\nconst getSmileRatio = (text: string, pattern: string, config = RatioConfig): number =>\n{\n\tconst replacedText = text.replaceAll(new RegExp(pattern, 'g'), '');\n\tconst hasOnlySmiles = replacedText.trim().length === 0;\n\n\tconst matchOnlySmiles = new RegExp(`(?:(?:${pattern})\\\\s*){3,}`);\n\tif (hasOnlySmiles && !matchOnlySmiles.test(text))\n\t{\n\t\treturn config.Big;\n\t}\n\n\treturn config.Default;\n};\nconst mapTypings = (smiles: Array<Smile>): {[string]: HTMLElement} =>\n{\n\tconst typings = smiles.reduce((acc, smile) => {\n\t\tconst {\n\t\t\timage,\n\t\t\ttyping,\n\t\t\tdefinition,\n\t\t\tname,\n\t\t\twidth,\n\t\t\theight\n\t\t} = smile;\n\t\tconst smileImg = Tag.render`\n\t\t\t<img\n\t\t\t\tsrc=\"${image}\"\n\t\t\t\tdata-code=\"${typing}\"\n\t\t\t\tdata-definition=\"${definition}\"\n\t\t\t\ttitle=\"${name ?? typing}\"\n\t\t\t\talt=\"${typing}\"\n\t\t\t\tclass=\"bx-smile bx-im-message-base__text_smile\"\n\t\t\t\tstyle=\"width: ${width}px; height: ${height}px;\"\n\t\t\t/>\n\t\t`;\n\n\t\treturn {...acc, [typing]: smileImg};\n\t}, {});\n\n\treturn typings;\n};\nconst lookBehind = function (text, match, offset): string\n{\n\tconst substring = text.slice(0, offset + match.length);\n\tconst escaped = getUtils().text.escapeRegex(match);\n\tconst regExp = new RegExp(`(?:^|&quot;|>|(?:${this.pattern})|\\\\s|<)(?:${escaped})$`);\n\n\treturn substring.match(regExp);\n};\n\nexport const ParserSmile = {\n\ttypings: null,\n\tpattern: '',\n\n\tloadSmilePatterns()\n\t{\n\t\tconst smileManager = getSmileManager().getInstance();\n\t\tconst smiles = smileManager.smileList?.smiles ?? [];\n\t\tconst sortedSmiles = [...smiles].sort((a, b) => {\n\t\t\treturn b.typing.localeCompare(a.typing);\n\t\t});\n\t\tthis.pattern = sortedSmiles.map((smile) => {\n\t\t\treturn getUtils().text.escapeRegex(smile.typing);\n\t\t}).join('|');\n\t\tthis.typings = mapTypings(sortedSmiles);\n\t},\n\n\tdecodeSmile(text: string, options = {}): string // TODO add options types\n\t{\n\t\tif (!this.typings)\n\t\t{\n\t\t\tthis.loadSmilePatterns();\n\t\t}\n\t\tif (!this.pattern)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tlet enableBigSmile;\n\t\tif (Type.isBoolean(options.enableBigSmile))\n\t\t{\n\t\t\tenableBigSmile = options.enableBigSmile;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tenableBigSmile = getBigSmileOption();\n\t\t}\n\n\t\tconst ratioConfig = Type.isObjectLike(options.ratioConfig) ? options.ratioConfig : RatioConfig;\n\t\tconst ratio = enableBigSmile? getSmileRatio(text, this.pattern, ratioConfig): ratioConfig.Default;\n\n\t\tconst pattern = `(?:(?:${this.pattern})(?=(?:(?:${this.pattern})|\\\\s|&quot;|<|$)))`;\n\t\tconst regExp = new RegExp(pattern, 'g');\n\t\tconst replacedText = text.replaceAll(regExp, (match, offset) => {\n\t\t\tconst behindMatching = lookBehind.call(this, text, match, offset);\n\t\t\tif (!behindMatching)\n\t\t\t{\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tconst image = this.typings[match].cloneNode();\n\t\t\tconst {width, height} = image.style;\n\t\t\tDom.style(image, 'width', `${Number.parseInt(width, 10) * ratio}px`);\n\t\t\tDom.style(image, 'height', `${Number.parseInt(height, 10) * ratio}px`);\n\n\t\t\treturn image.outerHTML;\n\t\t});\n\n\t\treturn replacedText;\n\t}\n};","import {Dom, Text} from 'main.core';\n\nimport {getUtils} from '../utils/core-proxy';\n\nexport const ParserUrl = {\n\n\tdecode(text, config = {}): string\n\t{\n\t\tconst {\n\t\t\turlTarget = \"_blank\",\n\t\t\tremoveLinks = false\n\t\t} = config;\n\n\t\t// base pattern for urls\n\t\ttext = text.replace(/\\[url(?:=([^[\\]]+))?](.*?)\\[\\/url]/gis, (whole, link, text) =>\n\t\t{\n\t\t\tconst url = Text.decode(link || text);\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'a',\n\t\t\t\tattrs: {\n\t\t\t\t\thref: url,\n\t\t\t\t\ttarget: urlTarget\n\t\t\t\t},\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\t// url like https://bitrix24.com/?params[1]=\"test\"\n\t\ttext = text.replace(/\\[url(?:=(.+?[^[\\]]))?](.*?)\\[\\/url]/gis, (whole, link, text) =>\n\t\t{\n\t\t\tlet url = Text.decode(link || text);\n\t\t\tif (!getUtils().text.checkUrl(url))\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\tif (!url.slice(url.lastIndexOf('[')).includes(']'))\n\t\t\t{\n\t\t\t\tif (text.startsWith(']'))\n\t\t\t\t{\n\t\t\t\t\turl = `${url}]`;\n\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t}\n\t\t\t\telse if (text.startsWith('='))\n\t\t\t\t{\n\t\t\t\t\tconst urlPart = Text.decode(text.slice(1, text.lastIndexOf(']')));\n\t\t\t\t\turl = `${url}]=${urlPart}`;\n\t\t\t\t\ttext = text.slice(text.lastIndexOf(']')+1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'a',\n\t\t\t\tattrs: {\n\t\t\t\t\thref: url,\n\t\t\t\t\ttarget: urlTarget\n\t\t\t\t},\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\tif (removeLinks)\n\t\t{\n\t\t\ttext = text.replace(/<a.*?href=\"([^\"]*)\".*?>(.*?)<\\/a>/gi, '$2');\n\t\t}\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(/\\[url(?:=([^\\[\\]]+))?](.*?)\\[\\/url]/gis, (whole, link, text) => {\n\t\t\treturn text? text: link;\n\t\t});\n\n\t\ttext = text.replace(/\\[url(?:=(.+))?](.*?)\\[\\/url]/gis, (whole, link, text) => {\n\t\t\treturn text? text: link;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tremoveSimpleUrlTag(text): string\n\t{\n\t\ttext = text.replace(/\\[url](.*?)\\[\\/url]/gis, (whole, link) => link);\n\t\treturn text;\n\t},\n\n};\n","import {Dom} from 'main.core';\n\nimport {ParserUtils} from '../utils/utils';\n\nexport const ParserFont = {\n\n\tdecode(text): string\n\t{\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[b]([^[]*(?:\\[(?!b]|\\/b])[^[]*)*)\\[\\/b]/gi, (whole, text) => '<b>'+text+'</b>');\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[u]([^[]*(?:\\[(?!u]|\\/u])[^[]*)*)\\[\\/u]/gi, (whole, text) => '<u>'+text+'</u>');\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[i]([^[]*(?:\\[(?!i]|\\/i])[^[]*)*)\\[\\/i]/gi, (whole, text) => '<i>'+text+'</i>');\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[s]([^[]*(?:\\[(?!s]|\\/s])[^[]*)*)\\[\\/s]/gi, (whole, text) => '<s>'+text+'</s>');\n\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[size=(\\d+)(?:pt|px)?](.*?)\\[\\/size]/gis, (whole, number, text) => {\n\t\t\tnumber = Number.parseInt(number, 10);\n\t\t\tif (number <= 8)\n\t\t\t{\n\t\t\t\tnumber = 8;\n\t\t\t}\n\t\t\telse if (number >= 30)\n\t\t\t{\n\t\t\t\tnumber = 30;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tstyle: {fontSize: `${number}px`},\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[color=#([0-9a-f]{3}|[0-9a-f]{6})](.*?)\\[\\/color]/gis, (whole, hex, text) => {\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tstyle: { color: '#'+ hex },\n\t\t\t\thtml: text\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurify(text, removeStrike = true): string\n\t{\n\t\tif (removeStrike)\n\t\t{\n\t\t\ttext = ParserUtils.recursiveReplace(text, /\\[s]([^[]*(?:\\[(?!s]|\\/s])[^[]*)*)\\[\\/s]/gi, () => ' ');\n\t\t}\n\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[b]([^[]*(?:\\[(?!b]|\\/b])[^[]*)*)\\[\\/b]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[u]([^[]*(?:\\[(?!u]|\\/u])[^[]*)*)\\[\\/u]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[i]([^[]*(?:\\[(?!i]|\\/i])[^[]*)*)\\[\\/i]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[s]([^[]*(?:\\[(?!s]|\\/s])[^[]*)*)\\[\\/s]/gi, (whole, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[size=(\\d+)(?:pt|px)?](.*?)\\[\\/size]/gis, (whole, number, text) => text);\n\t\ttext = ParserUtils.recursiveReplace(text, /\\[color=#([0-9a-f]{3}|[0-9a-f]{6})](.*?)\\[\\/color]/gis, (whole, hex, text) => text);\n\n\t\treturn text;\n\t}\n}\n\n","import {Loc} from 'main.core';\n\nexport const ParserLines = {\n\n\tdecode(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/\\[LIKE]/gi,\n\t\t\t`<span style=\"color: #004d00\">${Loc.getMessage('IM_PARSER_LINES_RATING_LIKE')}</span>`\n\t\t);\n\n\t\ttext = text.replace(\n\t\t\t/\\[DISLIKE]/gi,\n\t\t\t`<span style=\"color: #cc0000\">${Loc.getMessage('IM_PARSER_LINES_RATING_DISLIKE')}</span>`\n\t\t);\n\n\t\ttext = text.replace(/\\[RATING=([1-5])]/gi, (rating, group) => {\n\t\t\trating = parseInt(group);\n\t\t\treturn `<span class=\"bx-smile bx-im-smile-rating bx-im-smile-rating-'+rating+'\">${Loc.getMessage('IM_PARSER_LINES_RATING')} - ${rating}</span>`;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/\\[LIKE]/gi,\n\t\t\tLoc.getMessage('IM_PARSER_LINES_RATING_LIKE')\n\t\t);\n\n\t\ttext = text.replace(\n\t\t\t/\\[DISLIKE]/gi,\n\t\t\tLoc.getMessage('IM_PARSER_LINES_RATING_DISLIKE')\n\t\t);\n\n\t\ttext = text.replace(/\\[RATING=([1-5])]/gi, () => {\n\t\t\treturn '['+Loc.getMessage('IM_PARSER_LINES_RATING')+'] ';\n\t\t});\n\n\t\treturn text;\n\t}\n}\n\n","import {Dom, Text} from 'main.core';\n\nimport {getUtils} from '../utils/core-proxy';\n\nconst atomRegExpPart = '\\\\d{4}-\\\\d{2}-\\\\d{2}T[0-2]\\\\d:[0-5]\\\\d:[0-5]\\\\d[+-][0-2]\\\\d:[0-5]\\\\d';\n\nexport const ParserAction = {\n\n\tdecodePut(text): string\n\t{\n\t\ttext = text.replace(/\\[PUT(?:=(?:.+?))?](?:.+?)?\\[\\/PUT]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[PUT(?:=(.+))?](.+?)?\\[\\/PUT]/gi, (whole, command, text) =>\n\t\t\t{\n\t\t\t\ttext = text? text: command;\n\t\t\t\tcommand = command? command: text;\n\n\t\t\t\ttext = Text.decode(text);\n\t\t\t\tcommand = Text.decode(command).replace('<br />', '\\n');\n\n\t\t\t\tif (!text.trim())\n\t\t\t\t{\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\ttext = text.replace(/<(\\w+)[^>]*>(.*?)<\\/\\1>/i, \"$2\", text);\n\t\t\t\ttext = text.replace(/\\[(\\w+)[^\\]]*](.*?)\\[\\/\\1]/i, \"$2\", text);\n\n\t\t\t\treturn this._getHtmlForAction('put', text, command);\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyPut(text): string\n\t{\n\t\ttext = text.replace(/\\[PUT(?:=(?:.+?))?](?:.+?)?\\[\\/PUT]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[PUT(?:=(.+))?](.+?)?\\[\\/PUT]/gi, (whole, command, text) => {\n\t\t\t\treturn text? text: command;\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tdecodeSend(text): string\n\t{\n\t\ttext = text.replace(/\\[SEND(?:=(?:.+?))?](?:.+?)?\\[\\/SEND]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[SEND(?:=(.+))?](.+?)?\\[\\/SEND]/gi, (whole, command, text) =>\n\t\t\t{\n\t\t\t\ttext = text? text: command;\n\t\t\t\tcommand = command? command: text;\n\n\t\t\t\ttext = Text.decode(text);\n\t\t\t\tcommand = Text.decode(command).replace('<br />', '\\n');\n\n\t\t\t\tif (!text.trim())\n\t\t\t\t{\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\ttext = text.replace(/<(\\w+)[^>]*>(.*?)<\\\\1>/i, \"$2\", text);\n\t\t\t\ttext = text.replace(/\\[(\\w+)[^\\]]*](.*?)\\[\\/\\1]/i, \"$2\", text);\n\n\t\t\t\tcommand = command.split('####REPLACEMENT_PUT_').join('####REPLACEMENT_SP_');\n\n\t\t\t\treturn this._getHtmlForAction('send', text, command);\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifySend(text): string\n\t{\n\t\ttext = text.replace(/\\[SEND(?:=(?:.+?))?](?:.+?)?\\[\\/SEND]/gi, (match) =>\n\t\t{\n\t\t\treturn match.replace(/\\[SEND(?:=(.+))?](.+?)?\\[\\/SEND]/gi, (whole, command, text) => {\n\t\t\t\treturn text? text: command;\n\t\t\t});\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tdecodeDate(text): string\n\t{\n\t\ttext = text.replace(RegExp('\\\\[DATE=('+atomRegExpPart+')](.+?)\\\\[\\\\/DATE]', 'ig'), (whole, date, text) => {\n\t\t\ttext = text.replace(/<(\\w+)[^>]*>(.*?)<\\\\1>/i, \"$2\", text);\n\t\t\ttext = text.replace(/\\[(\\w+)[^\\]]*](.*?)\\[\\/\\1]/i, \"$2\", text);\n\n\t\t\treturn this._getHtmlForAction('date', text, date);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurifyDate(text): string\n\t{\n\t\tconst atomRegexp = getUtils().date.atomRegexpString;\n\t\ttext = text.replace(RegExp('\\[DATE=('+atomRegexp+')](.+?)\\[\\/DATE]', 'ig'), (whole, date, text) => {\n\t\t\treturn text;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\t_getHtmlForAction(method, text, data)\n\t{\n\t\treturn Dom.create({\n\t\t\ttag: 'span',\n\t\t\tattrs: { className: 'bx-im-message-command-wrap' },\n\t\t\tchildren: [\n\t\t\t\tDom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'bx-im-message-command',\n\t\t\t\t\t\t'data-entity': method,\n\t\t\t\t\t},\n\t\t\t\t\ttext\n\t\t\t\t}),\n\t\t\t\tDom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: { className: 'bx-im-message-command-data' },\n\t\t\t\t\ttext: data\n\t\t\t\t}),\n\t\t\t]\n\t\t}).outerHTML;\n\t}\n}\n\n","import {Dom, Text} from 'main.core';\n\nexport const ParserCall = {\n\n\tdecode(text): string\n\t{\n\t\ttext = text.replace(/\\[CALL(?:=([-+\\d()./# ]+))?](.+?)\\[\\/CALL]/gi, (whole, number, text) => {\n\n\t\t\tif (!text)\n\t\t\t{\n\t\t\t\treturn whole;\n\t\t\t}\n\n\t\t\tif (!number)\n\t\t\t{\n\t\t\t\tif (text.match(/^([-+\\d()./# ]+)$/))\n\t\t\t\t{\n\t\t\t\t\tnumber = text;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn whole;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext = Text.decode(text);\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'CALL',\n\t\t\t\t\t'data-value': number,\n\t\t\t\t},\n\t\t\t\ttext\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = text.replace(\n\t\t\t/\\[PCH=([0-9]+)](.*?)\\[\\/PCH]/gi, (whole, historyId, text) => text\n\t\t);\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(\n\t\t\t/\\[CALL(?:=([-+\\d()./# ]+))?](.+?)\\[\\/CALL]/gi,\n\t\t\t(whole, number, text) => text? text: number\n\t\t);\n\n\t\ttext = text.replace(\n\t\t\t/\\[PCH=([0-9]+)](.*?)\\[\\/PCH]/gi,\n\t\t\t(whole, historyId, text) => text\n\t\t);\n\n\t\treturn text;\n\t}\n}\n\n","import {Loc, Dom, Text, Type} from 'main.core';\nimport {EventEmitter} from 'main.core.events';\n\nimport {Parser} from '../parser';\nimport {ParserUtils} from '../utils/utils';\nimport {getCore, getConst} from '../utils/core-proxy';\n\nconst {EventType, MessageMentionType} = getConst();\n\nexport const ParserMention = {\n\n\tdecode(text): string\n\t{\n\t\ttext = text.replace(/\\[USER=([0-9]+)( REPLACE)?](.*?)\\[\\/USER]/gi, (whole, userId, replace, userName) => {\n\t\t\tuserId = Number.parseInt(userId, 10);\n\n\t\t\tif (!Type.isNumber(userId) || userId === 0)\n\t\t\t{\n\t\t\t\treturn userName;\n\t\t\t}\n\n\t\t\tif (replace || !userName)\n\t\t\t{\n\t\t\t\tconst user = getCore().getStore().getters['users/get'](userId);\n\t\t\t\tif (user)\n\t\t\t\t{\n\t\t\t\t\tuserName = user.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuserName = Text.decode(userName);\n\t\t\t}\n\n\t\t\tif (!userName)\n\t\t\t{\n\t\t\t\tuserName = `User ${userId}`;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'USER',\n\t\t\t\t\t'data-value': userId,\n\t\t\t\t},\n\t\t\t\ttext: userName\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = text.replace(/\\[chat=(imol\\|)?(\\d+)](.*?)\\[\\/chat]/gi, (whole, openlines, chatId, chatName) => {\n\t\t\tchatId = Number.parseInt(chatId, 10);\n\n\t\t\tif (!Type.isNumber(chatId) || chatId === 0 || openlines)\n\t\t\t{\n\t\t\t\treturn chatName;\n\t\t\t}\n\n\t\t\tif (chatName)\n\t\t\t{\n\t\t\t\tchatName = Text.decode(chatName);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst dialog = getCore().store.getters['dialogues/get']('chat'+chatId);\n\t\t\t\tchatName = dialog? dialog.name: 'Chat '+chatId;\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'CHAT',\n\t\t\t\t\t'data-value': 'chat' + chatId,\n\t\t\t\t},\n\t\t\t\ttext: chatName\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\ttext = text.replace(/\\[context=((?:chat\\d+|\\d+:\\d+)\\/(\\d+))](.*?)\\[\\/context]/gis, (whole, contextTag, messageId, text) =>\n\t\t{\n\t\t\tif (!text)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\ttext = Text.decode(text);\n\t\t\tcontextTag = ParserUtils.getFinalContextTag(contextTag);\n\t\t\tif (!contextTag)\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\tconst dialogId = contextTag.split('/')[0];\n\n\t\t\tlet title = '';\n\t\t\tmessageId = Number.parseInt(messageId, 10);\n\t\t\tif (Type.isNumber(messageId) && messageId > 0)\n\t\t\t{\n\t\t\t\tconst message = getCore().store.getters['messages/getById'](messageId);\n\t\t\t\tif (message)\n\t\t\t\t{\n\t\t\t\t\ttitle = Parser.purifyMessage(message);\n\t\t\t\t\tconst user = getCore().store.getters['users/get'](message.authorId);\n\t\t\t\t\tif (user)\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle = `${user.name}: ${title}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Type.isStringFilled(title))\n\t\t\t{\n\t\t\t\ttitle = Loc.getMessage('IM_PARSER_MENTION_DIALOG');\n\t\t\t}\n\n\t\t\treturn Dom.create({\n\t\t\t\ttag: 'span',\n\t\t\t\tattrs: {\n\t\t\t\t\tclassName: 'bx-im-mention',\n\t\t\t\t\t'data-type': 'CONTEXT',\n\t\t\t\t\t'data-dialog-id': dialogId,\n\t\t\t\t\t'data-message-id': messageId,\n\t\t\t\t\ttitle,\n\t\t\t\t},\n\t\t\t\ttext\n\t\t\t}).outerHTML;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\ttext = text.replace(/\\[USER=([0-9]+)( REPLACE)?](.*?)\\[\\/USER]/gi, (whole, userId, replace, userName) => {\n\t\t\tuserId = Number.parseInt(userId, 10);\n\n\t\t\tif (!Type.isNumber(userId) || userId === 0)\n\t\t\t{\n\t\t\t\treturn userName;\n\t\t\t}\n\n\t\t\tif (replace || !userName)\n\t\t\t{\n\t\t\t\tconst user = getCore().getStore().getters['users/get'](userId);\n\t\t\t\tif (user)\n\t\t\t\t{\n\t\t\t\t\tuserName = user.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuserName = Text.decode(userName);\n\t\t\t}\n\n\t\t\tif (!userName)\n\t\t\t{\n\t\t\t\tuserName = `User ${userId}`;\n\t\t\t}\n\n\t\t\treturn userName;\n\t\t});\n\n\t\ttext = text.replace(/\\[CHAT=(imol\\|)?(\\d+)](.*?)\\[\\/CHAT]/gi, (whole, openlines, chatId, chatName) => {\n\t\t\tchatId = Number.parseInt(chatId, 10);\n\n\t\t\tif (!chatName)\n\t\t\t{\n\t\t\t\tconst dialog = getCore().store.getters['dialogues/get']('chat'+chatId);\n\t\t\t\tchatName = dialog? dialog.name: 'Chat '+chatId;\n\t\t\t}\n\n\t\t\treturn chatName;\n\t\t});\n\n\t\ttext = text.replace(/\\[context=(chat\\d+|\\d+:\\d+)\\/(\\d+)](.*?)\\[\\/context]/gis, (whole, dialogId, messageId, text) => {\n\t\t\tif (!text)\n\t\t\t{\n\t\t\t\tconst dialog = getCore().store.getters['dialogues/get'](dialogId);\n\t\t\t\ttext = dialog? dialog.name: 'Dialog '+dialogId;\n\t\t\t}\n\n\t\t\treturn text;\n\t\t});\n\n\t\treturn text;\n\t},\n\n\texecuteClickEvent(event: PointerEvent)\n\t{\n\t\tif (!Dom.hasClass(event.target, 'bx-im-mention'))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tevent.target.dataset.type === MessageMentionType.user\n\t\t\t|| event.target.dataset.type === MessageMentionType.chat\n\t\t)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.mention.openChatInfo, {\n\t\t\t\tevent,\n\t\t\t\tdialogId: event.target.dataset.value\n\t\t\t});\n\t\t}\n\t\telse if (event.target.dataset.type === MessageMentionType.context)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.goToMessageContext, {\n\t\t\t\tmessageId: Number.parseInt(event.target.dataset.messageId, 10),\n\t\t\t\tdialogId: event.target.dataset.dialogId.toString(),\n\t\t\t});\n\t\t}\n\t},\n}\n\n","export const ParserCommon = {\n\n\tdecodeNewLine(text): string\n\t{\n\t\ttext = text.replace(/\\n/gi, '<br />');\n\t\ttext = text.replace(/\\[BR]/gi, '<br />');\n\n\t\treturn text;\n\t},\n\n\tpurifyNewLine(text, replaceSymbol = ' '): string\n\t{\n\t\tif (replaceSymbol !== \"\\n\")\n\t\t{\n\t\t\ttext = text.replace(/\\n/gi, replaceSymbol);\n\t\t}\n\t\ttext = text.replace(/\\[BR]/gi, replaceSymbol);\n\n\t\treturn text;\n\t},\n\n\tpurifyBreakLine(text, replaceLetter = ' '): string\n\t{\n\t\ttext = text.replace(/<br><br \\/>/gi, '<br />');\n\t\ttext = text.replace(/<br \\/><br>/gi, '<br />');\n\t\ttext = text.replace(/\\[BR]/gi, '<br />');\n\t\ttext = text.replace(/<br \\/>/gi, replaceLetter);\n\n\t\t// text = text.replace(/<\\/?[^>]+>/gi, '');\n\n\t\treturn text;\n\t},\n\n\tdecodeTabulation(text): string\n\t{\n\t\ttext = text.replace(/( ){4}/gi, '\\t');\n\t\ttext = text.replace(/\\t/gi, '&nbsp;&nbsp;&nbsp;&nbsp;');\n\n\t\treturn text;\n\t},\n\n\tpurifyTabulation(text): string\n\t{\n\t\ttext = text.replace(/&nbsp;&nbsp;&nbsp;&nbsp;/gi, \" \");\n\n\t\treturn text;\n\t},\n\n\tpurifyNbsp(text): string\n\t{\n\t\ttext = text.replace(/&nbsp;/gi, \" \");\n\n\t\treturn text;\n\t},\n\n\tremoveDuplicateTags(text): string\n\t{\n\t\tif (text.substr(-6) === '<br />')\n\t\t{\n\t\t\ttext = text.substr(0, text.length - 6);\n\t\t}\n\n\t\ttext = text.replace(/<br><br \\/>/gi, '<br />');\n\t\ttext = text.replace(/<br \\/><br>/gi, '<br />');\n\n\t\treturn text;\n\t},\n}\n\n","export const ParserRecursionPrevention = {\n\n\t_startTagReplacement: [],\n\t_putReplacement: [],\n\t_sendReplacement: [],\n\t_codeReplacement: [],\n\n\tclean()\n\t{\n\t\tthis._startTagReplacement = [];\n\t\tthis._putReplacement = [];\n\t\tthis._sendReplacement = [];\n\t\tthis._codeReplacement = [];\n\t},\n\n\tcutStartTag(text): string\n\t{\n\t\ttext = text.replace(/\\[(.+?)]/gi, (tag) => {\n\t\t\tif (tag.startsWith('/'))\n\t\t\t{\n\t\t\t\treturn tag;\n\t\t\t}\n\t\t\tconst id = this._startTagReplacement.length;\n\t\t\tthis._startTagReplacement.push(tag);\n\t\t\treturn '####REPLACEMENT_TAG_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverStartTag(text): string\n\t{\n\t\tthis._startTagReplacement.forEach((tag, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_TAG_'+index+'####', tag);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tcutPutTag(text): string\n\t{\n\t\ttext = text.replace(/\\[PUT(?:=(.+?))?](.+?)?\\[\\/PUT]/gi, (whole) => {\n\t\t\tconst id = this._putReplacement.length;\n\t\t\tthis._putReplacement.push(whole);\n\t\t\treturn '####REPLACEMENT_PUT_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverPutTag(text): string\n\t{\n\t\tthis._putReplacement.forEach((value, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_PUT_'+index+'####', value);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tcutSendTag(text): string\n\t{\n\t\ttext = text.replace(/\\[SEND(?:=(.+?))?](.+?)?\\[\\/SEND]/gi, (whole) => {\n\t\t\tconst id = this._sendReplacement.length;\n\t\t\tthis._sendReplacement.push(whole);\n\t\t\treturn '####REPLACEMENT_SEND_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverSendTag(text): string\n\t{\n\t\tthis._sendReplacement.forEach((value, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_SEND_'+index+'####', value);\n\t\t});\n\n\t\treturn text;\n\t},\n\n\tcutCodeTag(text): string\n\t{\n\t\ttext = text.replace(/\\[CODE](<br \\/>)?(.*?)\\[\\/CODE]/sig, (whole) => {\n\t\t\tconst id = this._codeReplacement.length;\n\t\t\tthis._codeReplacement.push(whole);\n\t\t\treturn '####REPLACEMENT_CODE_'+id+'####';\n\t\t});\n\n\t\treturn text;\n\t},\n\n\trecoverCodeTag(text): string\n\t{\n\t\tthis._codeReplacement.forEach((value, index) => {\n\t\t\ttext = text.replace('####REPLACEMENT_CODE_'+index+'####', value)\n\t\t});\n\n\t\tif (this._sendReplacement.length > 0)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tthis._sendReplacement.forEach((value, index) => {\n\t\t\t\t\ttext = text.replace('####REPLACEMENT_SEND_'+index+'####', value);\n\t\t\t\t});\n\t\t\t}\n\t\t\twhile (text.includes('####REPLACEMENT_SEND_'));\n\t\t}\n\n\t\treturn text;\n\t},\n\n\trecoverRecursionTag(text): string\n\t{\n\t\tif (this._sendReplacement.length > 0)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tthis._sendReplacement.forEach((value, index) => {\n\t\t\t\t\ttext = text.replace('####REPLACEMENT_SEND_'+index+'####', value);\n\t\t\t\t});\n\t\t\t}\n\t\t\twhile (text.includes('####REPLACEMENT_SEND_'));\n\t\t}\n\n\t\ttext = text.split('####REPLACEMENT_SP_').join('####REPLACEMENT_PUT_');\n\n\t\tif (this._putReplacement.length > 0)\n\t\t{\n\t\t\tdo\n\t\t\t{\n\t\t\t\tthis._putReplacement.forEach((value, index) => {\n\t\t\t\t\ttext = text.replace('####REPLACEMENT_PUT_'+index+'####', value);\n\t\t\t\t});\n\t\t\t}\n\t\t\twhile (text.includes('####REPLACEMENT_PUT_'));\n\t\t}\n\n\t\treturn text;\n\t},\n}\n\n","export const ParserReplace = {\n\tdecode(text, replace = []): string\n\t{\n\t\tif (replace.length === 0)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tconst replacedText = replace.reduce((replacedText, item) => {\n\t\t\treturn this.replaceDate(replacedText, item);\n\t\t}, text);\n\n\t\treturn replacedText;\n\t},\n\n\treplaceDate(text, item): string\n\t{\n\t\tconst originalText = text.substring(item.start, item.end);\n\t\tif (originalText !== item.text)\n\t\t{\n\t\t\treturn text;\n\t\t}\n\n\t\tconst left = text.substring(0, item.start);\n\t\tconst right = text.substring(item.end);\n\n\t\treturn left + '[DATE='+item.value+']'+originalText+'[/DATE]' + right;\n\t}\n}","import {Loc} from 'main.core';\n\nimport {getConst} from '../utils/core-proxy';\nimport {ParserIcon} from './icon';\n\nconst {FileIconType} = getConst();\n\nexport const ParserDisk = {\n\n\tdecode(text): string\n\t{\n\t\tconst icon = ParserIcon.getIcon(FileIconType.file);\n\n\t\tlet diskText;\n\t\tif (icon)\n\t\t{\n\t\t\tdiskText = `${icon} ${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiskText = `[${Loc.getMessage('IM_PARSER_ICON_TYPE_FILE')}]`;\n\t\t}\n\n\t\ttext = text.replace(/\\[disk=\\d+]/gi, diskText);\n\n\t\treturn text;\n\t},\n\n\tpurify(text): string\n\t{\n\t\treturn this.decode(text);\n\t},\n};\n","import {Type, Text, Loc} from 'main.core';\n\nimport {ParserSlashCommand} from './functions/slash-command';\nimport {ParserQuote} from './functions/quote';\nimport {ParserImage} from './functions/image';\nimport {ParserSmile} from './functions/smile';\nimport {ParserUrl} from './functions/url';\nimport {ParserFont} from './functions/font';\nimport {ParserLines} from './functions/lines';\nimport {ParserAction} from './functions/action';\nimport {ParserCall} from './functions/call';\nimport {ParserMention} from './functions/mention';\nimport {ParserCommon} from './functions/common';\nimport {ParserIcon} from './functions/icon';\nimport {ParserRecursionPrevention} from './utils/recursion-prevention';\nimport {ParserReplace} from './functions/replace';\nimport {ParserDisk} from './functions/disk';\n\nimport {getCore, getLogger} from './utils/core-proxy';\n\nimport './parser.css';\n\nimport type {ImModelMessage, ImModelNotification, ImModelRecentItem} from 'im.v2.model';\nimport type {ParserConfig} from './types/parser-config';\n\nexport const Parser = {\n\tdecodeMessage(message: ImModelMessage): string\n\t{\n\t\tconst messageFiles = getCore().store.getters['messages/getMessageFiles'](message.id);\n\n\t\treturn this.decode({\n\t\t\ttext: message.text,\n\t\t\tattach: message.attach,\n\t\t\tfiles: messageFiles,\n\t\t\treplaces: message.replaces,\n\t\t\tshowIconIfEmptyText: false\n\t\t});\n\t},\n\n\tdecodeNotification(notification: ImModelNotification): string\n\t{\n\t\treturn this.decode({\n\t\t\ttext: notification.text,\n\t\t\tattach: notification.params.ATTACH ?? false,\n\t\t\treplaces: notification.replaces,\n\t\t\tshowIconIfEmptyText: false,\n\t\t\tshowImageFromLink: false,\n\t\t\turlTarget: '_self',\n\t\t});\n\t},\n\n\tdecodeText(text: string): string\n\t{\n\t\treturn this.decode({text});\n\t},\n\n\tdecodeHtml(text: string): string\n\t{\n\t\treturn this.decode({text});\n\t},\n\n\tdecodeSmileForLegacyCore(text: string, options: {})\n\t{\n\t\toptions.ratioConfig = Object.freeze({\n\t\t\tDefault: 1,\n\t\t\tBig: 1.6,\n\t\t});\n\t\treturn ParserSmile.decodeSmile(text, options);\n\t},\n\n\tdecode(config: ParserConfig): string\n\t{\n\t\tif (!Type.isPlainObject(config))\n\t\t{\n\t\t\tgetLogger().error('Parser.decode: the first parameter must be object', config);\n\t\t\treturn '<b style=\"color:red\">Parser.decode: the first parameter must be a parameter object</b';\n\t\t}\n\n\t\tlet {text} = config;\n\t\tconst {\n\t\t\tattach = false,\n\t\t\tfiles = false,\n\t\t\treplaces = [],\n\t\t\tremoveLinks = false,\n\t\t\tshowIconIfEmptyText = true,\n\t\t\tshowImageFromLink = true,\n\t\t\turlTarget = '_blank',\n\t\t} = config;\n\n\t\tif (!Type.isString(text))\n\t\t{\n\t\t\tif (Type.isNumber(text))\n\t\t\t{\n\t\t\t\treturn text.toString();\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t\tif (!text)\n\t\t{\n\t\t\tif (showIconIfEmptyText)\n\t\t\t{\n\t\t\t\ttext = ParserIcon.addIconToShortText({text, attach, files});\n\t\t\t}\n\t\t\treturn text.trim();\n\t\t}\n\n\t\ttext = ParserReplace.decode(text, replaces);\n\t\ttext = Text.encode(text.trim());\n\n\t\ttext = ParserCommon.decodeNewLine(text);\n\t\ttext = ParserCommon.decodeTabulation(text);\n\n\t\ttext = ParserRecursionPrevention.cutPutTag(text);\n\t\ttext = ParserRecursionPrevention.cutSendTag(text);\n\t\ttext = ParserRecursionPrevention.cutCodeTag(text);\n\n\t\ttext = ParserSmile.decodeSmile(text);\n\t\ttext = ParserSlashCommand.decode(text);\n\t\ttext = ParserQuote.decodeArrowQuote(text);\n\t\ttext = ParserQuote.decodeQuote(text);\n\t\ttext = ParserUrl.decode(text, {urlTarget, removeLinks});\n\t\ttext = ParserFont.decode(text);\n\t\ttext = ParserLines.decode(text);\n\t\ttext = ParserMention.decode(text);\n\t\ttext = ParserCall.decode(text);\n\t\ttext = ParserImage.decodeIcon(text);\n\t\tif (showImageFromLink)\n\t\t{\n\t\t\ttext = ParserImage.decodeLink(text);\n\t\t}\n\t\ttext = ParserDisk.decode(text);\n\t\ttext = ParserAction.decodeDate(text);\n\t\ttext = ParserRecursionPrevention.cutStartTag(text);\n\n\t\ttext = ParserRecursionPrevention.recoverStartTag(text);\n\t\ttext = ParserRecursionPrevention.recoverSendTag(text);\n\t\ttext = ParserAction.decodeSend(text);\n\n\t\ttext = ParserRecursionPrevention.recoverPutTag(text);\n\t\ttext = ParserAction.decodePut(text);\n\n\t\ttext = ParserRecursionPrevention.recoverCodeTag(text);\n\t\ttext = ParserQuote.decodeCode(text);\n\n\t\ttext = ParserRecursionPrevention.recoverRecursionTag(text);\n\n\t\ttext = ParserCommon.removeDuplicateTags(text);\n\n\t\tParserRecursionPrevention.clean();\n\n\t\treturn text;\n\t},\n\n\tpurifyMessage(message: ImModelMessage): string\n\t{\n\t\tconst messageFiles = getCore().store.getters['messages/getMessageFiles'](message.id);\n\n\t\treturn this.purify({\n\t\t\ttext: message.text,\n\t\t\tattach: message.attach,\n\t\t\tfiles: messageFiles\n\t\t});\n\t},\n\n\tpurifyNotification(notification: ImModelNotification): string\n\t{\n\t\tconst messageFiles = getCore().store.getters['messages/getMessageFiles'](notification.id);\n\n\t\treturn this.purify({\n\t\t\ttext: notification.text,\n\t\t\tattach: notification.params.ATTACH ?? false,\n\t\t\tfiles: messageFiles\n\t\t});\n\t},\n\n\tpurifyRecent(recentMessage: ImModelRecentItem): string\n\t{\n\t\tconst {files, attach} = this.prepareConfigForRecent(recentMessage);\n\n\t\treturn this.purify({\n\t\t\ttext: recentMessage.message.text,\n\t\t\tattach,\n\t\t\tfiles,\n\t\t\tshowPhraseMessageWasDeleted: recentMessage.message.id !== 0\n\t\t});\n\t},\n\n\tpurifyText(text: string): string\n\t{\n\t\treturn this.purify({text});\n\t},\n\n\tpurify(config: ParserConfig): string\n\t{\n\t\tif (!Type.isPlainObject(config))\n\t\t{\n\t\t\tgetLogger().error('Parser.purify: the first parameter must be a object', config);\n\t\t\treturn 'Parser.purify: the first parameter must be a parameter object';\n\t\t}\n\n\t\tlet {text} = config;\n\t\tconst {\n\t\t\tattach = false,\n\t\t\tfiles = false,\n\t\t\treplaces = [],\n\t\t\tshowIconIfEmptyText = true,\n\t\t\tshowPhraseMessageWasDeleted = true,\n\t\t} = config;\n\n\t\tif (!Type.isString(text))\n\t\t{\n\t\t\ttext = Type.isNumber(text) ? text.toString() : '';\n\t\t}\n\n\t\tif (!text)\n\t\t{\n\t\t\ttext = ParserIcon.addIconToShortText({text, attach, files});\n\t\t\treturn text.trim();\n\t\t}\n\n\t\ttext = Text.encode(text.trim());\n\n\t\ttext = ParserCommon.purifyNewLine(text, '\\n');\n\t\ttext = ParserSlashCommand.purify(text);\n\t\ttext = ParserQuote.purifyArrowQuote(text);\n\t\ttext = ParserQuote.purifyQuote(text);\n\t\ttext = ParserQuote.purifyCode(text);\n\t\ttext = ParserAction.purifyPut(text);\n\t\ttext = ParserAction.purifySend(text);\n\t\ttext = ParserMention.purify(text);\n\t\ttext = ParserFont.purify(text);\n\t\ttext = ParserLines.purify(text);\n\t\ttext = ParserCall.purify(text);\n\t\ttext = ParserImage.purifyLink(text);\n\t\ttext = ParserImage.purifyIcon(text);\n\t\ttext = ParserUrl.purify(text);\n\t\ttext = ParserDisk.purify(text);\n\t\ttext = ParserCommon.purifyNewLine(text);\n\t\ttext = ParserIcon.addIconToShortText({text, attach, files});\n\n\t\tif (text.length > 0)\n\t\t{\n\t\t\ttext = Text.decode(text);\n\t\t}\n\t\telse if (showPhraseMessageWasDeleted)\n\t\t{\n\t\t\ttext = Loc.getMessage('IM_PARSER_MESSAGE_DELETED');\n\t\t}\n\n\t\treturn text.trim();\n\t},\n\n\tprepareQuote(message: ImModelMessage): string\n\t{\n\t\tconst {id, attach} = message;\n\t\tlet {text} = message;\n\n\t\tconst files = getCore().store.getters['messages/getMessageFiles'](id);\n\n\t\ttext = Text.encode(text.trim());\n\n\t\ttext = ParserMention.purify(text);\n\t\ttext = ParserCall.purify(text);\n\t\ttext = ParserLines.purify(text);\n\t\ttext = ParserCommon.purifyBreakLine(text, '\\n');\n\t\ttext = ParserCommon.purifyNbsp(text);\n\t\ttext = ParserUrl.removeSimpleUrlTag(text);\n\t\ttext = ParserQuote.purifyCode(text, ' ');\n\t\ttext = ParserQuote.purifyQuote(text, ' ');\n\t\ttext = ParserQuote.purifyArrowQuote(text, ' ');\n\t\ttext = ParserIcon.addIconToShortText({text, attach, files});\n\n\t\tif (text.length > 0)\n\t\t{\n\t\t\ttext = Text.decode(text);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttext = Loc.getMessage('IM_PARSER_MESSAGE_DELETED');\n\t\t}\n\n\t\treturn text.trim();\n\t},\n\n\tprepareEdit(message: ImModelMessage): string\n\t{\n\t\tlet {text} = message;\n\n\t\ttext = ParserUrl.removeSimpleUrlTag(text);\n\n\t\treturn text.trim();\n\t},\n\n\tprepareCopy(message: ImModelMessage): string\n\t{\n\t\tconst {id} = message;\n\t\tlet {text} = message;\n\n\t\tconst files = getCore().store.getters['messages/getMessageFiles'](id).map(file => {\n\t\t\treturn `[DISK=${file.id}]\\n`;\n\t\t});\n\n\t\ttext = files.join('\\n') + text;\n\n\t\treturn text.trim();\n\t},\n\n\tprepareConfigForRecent(recentMessage: ImModelRecentItem): {files: boolean | Object[], attach: boolean | string | Object[]}\n\t{\n\t\tlet files = false;\n\t\tconst fileField = recentMessage.message.params.withFile;\n\t\tif (Type.isBoolean(fileField))\n\t\t{\n\t\t\tfiles = fileField;\n\t\t}\n\t\telse if (Type.isPlainObject(fileField))\n\t\t{\n\t\t\tfiles = [fileField];\n\t\t}\n\n\t\tlet attach = false;\n\t\tconst attachField = recentMessage.message.params.withAttach;\n\t\tif (\n\t\t\tType.isBoolean(attachField)\n\t\t\t|| Type.isStringFilled(attachField)\n\t\t\t|| Type.isArray(attachField)\n\t\t)\n\t\t{\n\t\t\tattach = attachField;\n\t\t}\n\t\telse if (Type.isPlainObject(attachField))\n\t\t{\n\t\t\tattach = [attachField];\n\t\t}\n\n\t\treturn {files, attach};\n\t},\n\n\texecuteClickEvent(event: PointerEvent)\n\t{\n\t\tParserMention.executeClickEvent(event);\n\t\tParserQuote.executeClickEvent(event);\n\t},\n};"],"names":["ParserSlashCommand","decode","text","startsWith","substr","purify","isDesktop","Type","isObject","window","BXDesktopSystem","settings","Extension","getSettings","v2","get","getCore","BX","Messenger","Application","Core","Embedding","getUtils","Lib","Utils","getLogger","Logger","getConst","Const","getSmileManager","SmileManager","getBigSmileOption","settingName","Settings","dialog","bigSmiles","getStore","getters","RECURSIVE_LIMIT","ParserUtils","recursiveReplace","pattern","replacement","isStringFilled","count","deep","replace","params","getFinalContextTag","contextTag","match","dialogId","user1","user2","messageId","toString","Number","parseInt","getUserId","FileType","FileIconType","AttachDescription","ParserIcon","getIcon","icon","fallbackText","addIconToShortText","config","attach","files","isArray","length","getTextForFile","getTextForAttach","trim","getQuoteBlock","quote","Loc","getMessage","getCodeBlock","code","getImageBlock","image","getFileBlock","file","firstFile","getIconTextForFile","getIconTextForFileType","attachDescription","firstAttach","DESCRIPTION","SKIP_MESSAGE","Parser","purifyText","showPhraseMessageWasDeleted","type","result","iconText","toUpperCase","withText","textDescription","audio","video","name","EventType","QUOTE_SIGN","ParserQuote","decodeArrowQuote","includes","isProcessed","textLines","split","i","quoteStartIndex","outerContainerStart","innerContainerStart","containerEnd","quoteEndIndex","join","purifyArrowQuote","spaceLetter","RegExp","decodeQuote","whole","userBlock","userName","timeTag","skipUserBlock","userContainer","Tag","render","quoteBaseClass","slice","layout","outerHTML","purifyQuote","decodeCode","br","Dom","create","tag","attrs","className","html","purifyCode","executeClickEvent","event","target","parentNode","dom","recursiveBackwardNodeSearch","dataset","context","EventEmitter","emit","goToMessageContext","ParserImage","decodeLink","letter","url","Text","toLowerCase","indexOf","checkUrl","children","src","events","error","_hideErrorImage","purifyLink","decodeIcon","textElementSize","enableBigSmile","size","width","height","title","purifyIcon","element","innerHTML","encodeURI","RatioConfig","Object","freeze","Default","Big","getSmileRatio","replacedText","replaceAll","hasOnlySmiles","matchOnlySmiles","test","mapTypings","smiles","typings","reduce","acc","smile","typing","definition","smileImg","lookBehind","offset","substring","escaped","escapeRegex","regExp","ParserSmile","loadSmilePatterns","smileManager","getInstance","smileList","sortedSmiles","sort","a","b","localeCompare","map","decodeSmile","options","isBoolean","ratioConfig","isObjectLike","ratio","behindMatching","call","cloneNode","style","ParserUrl","urlTarget","removeLinks","link","href","lastIndexOf","urlPart","removeSimpleUrlTag","ParserFont","number","fontSize","hex","color","removeStrike","ParserLines","rating","group","atomRegExpPart","ParserAction","decodePut","command","_getHtmlForAction","purifyPut","decodeSend","purifySend","decodeDate","date","purifyDate","atomRegexp","atomRegexpString","method","data","ParserCall","historyId","MessageMentionType","ParserMention","userId","isNumber","user","openlines","chatId","chatName","store","message","purifyMessage","authorId","hasClass","chat","mention","openChatInfo","value","ParserCommon","decodeNewLine","purifyNewLine","replaceSymbol","purifyBreakLine","replaceLetter","decodeTabulation","purifyTabulation","purifyNbsp","removeDuplicateTags","ParserRecursionPrevention","_startTagReplacement","_putReplacement","_sendReplacement","_codeReplacement","clean","cutStartTag","id","push","recoverStartTag","forEach","index","cutPutTag","recoverPutTag","cutSendTag","recoverSendTag","cutCodeTag","recoverCodeTag","recoverRecursionTag","ParserReplace","item","replaceDate","originalText","start","end","left","right","ParserDisk","diskText","decodeMessage","messageFiles","replaces","showIconIfEmptyText","decodeNotification","notification","ATTACH","showImageFromLink","decodeText","decodeHtml","decodeSmileForLegacyCore","isPlainObject","isString","encode","purifyNotification","purifyRecent","recentMessage","prepareConfigForRecent","prepareQuote","prepareEdit","prepareCopy","fileField","withFile","attachField","withAttach"],"mappings":"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"}