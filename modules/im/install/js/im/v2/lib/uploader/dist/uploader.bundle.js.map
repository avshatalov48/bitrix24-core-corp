{"version":3,"file":"uploader.bundle.js","sources":["../src/file-sender.js","../src/classes/preview-manager.js","../src/uploader.js"],"sourcesContent":["import {Uploader} from './uploader';\nimport type {UploaderTask} from './types/uploader-task';\n\nconst SENDER_STATUSES: {[string]: number } = {\n\tPENDING: 0,\n\tPROGRESS: 1,\n\tDONE: 2,\n\tCANCELLED: 3,\n\tFAILED: 4,\n};\n\nexport class FileSender\n{\n\t#uploaderTask: UploaderTask;\n\t#status: number = SENDER_STATUSES.PENDING;\n\t#listener: Function;\n\n\t#requestToDelete: boolean = false;\n\n\t#token: string = null;\n\t#nextDataChunkToSend: number;\n\t#readOffset: number = 0;\n\n\tstatic UPLOAD_CHUNK_DEFAULT_ACTION = 'disk.api.content.upload';\n\tstatic COMMIT_FILE_DEFAULT_ACTION = 'disk.api.file.createByContent';\n\tstatic ROLLBACK_UPLOAD_DEFAULT_ACTION = 'disk.api.content.rollbackUpload';\n\n\tconstructor(task: UploaderTask)\n\t{\n\t\tthis.#uploaderTask = task;\n\t\tthis.#listener = task.listener;\n\t\tthis.abortController = new AbortController();\n\t\tthis.#init();\n\t}\n\n\t#init()\n\t{\n\t\tthis.#uploaderTask.progress = 0;\n\n\t\tthis.#listener(Uploader.EVENTS.startUpload, {\n\t\t\ttask: this.#uploaderTask,\n\t\t});\n\t}\n\n\tuploadContent(): void\n\t{\n\t\tif (this.#status === SENDER_STATUSES.CANCELLED)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#status = SENDER_STATUSES.PROGRESS;\n\t\tthis.#readNext();\n\t\tthis.#updateProgress();\n\n\t\tconst url = this.#getUploadContentEndpoint();\n\t\tconst headers = {\n\t\t\t'Content-Type': this.#uploaderTask.fileData.type,\n\t\t\t'Content-Range': this.#getContentRangeHeader(),\n\t\t\t'X-Bitrix-Csrf-Token': this.#getBitrixSessid(),\n\t\t};\n\n\t\tconst requestParams = {\n\t\t\turl,\n\t\t\theaders,\n\t\t\tbody: this.#nextDataChunkToSend,\n\t\t\tsignal: this.abortController.signal\n\t\t};\n\n\t\tthis.#sendPostRequest(requestParams).then(response => {\n\t\t\tif (response.errors.length > 0)\n\t\t\t{\n\t\t\t\tthis.#status = SENDER_STATUSES.FAILED;\n\t\t\t\tthis.#listener(Uploader.EVENTS.uploadFileError, {\n\t\t\t\t\ttask: this.#uploaderTask,\n\t\t\t\t\tresult: response\n\t\t\t\t});\n\t\t\t\tconsole.error(response.errors[0].message);\n\t\t\t}\n\t\t\telse if (response.data.token)\n\t\t\t{\n\t\t\t\tthis.#token = response.data.token;\n\t\t\t\tthis.#readOffset += this.#uploaderTask.chunkSize;\n\t\t\t\tif (!this.#isEndOfFile())\n\t\t\t\t{\n\t\t\t\t\tthis.uploadContent();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.#createFileFromUploadedChunks();\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\tconsole.warn('error', error);\n\t\t\tthis.#status = SENDER_STATUSES.FAILED;\n\t\t\tthis.#listener(Uploader.EVENTS.uploadFileError, {\n\t\t\t\ttask: this.#uploaderTask,\n\t\t\t\tresult: error\n\t\t\t});\n\t\t});\n\t}\n\n\tdeleteContent(): void\n\t{\n\t\tthis.abortController.abort();\n\t\tthis.#status = SENDER_STATUSES.CANCELLED;\n\t\tthis.#requestToDelete = true;\n\n\t\tif (!this.#token)\n\t\t{\n\t\t\tconsole.error('Empty token.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = this.#getDeleteContentEndpoint();\n\t\tconst headers = {\n\t\t\t'X-Bitrix-Csrf-Token': this.#getBitrixSessid()\n\t\t};\n\n\t\tthis.#sendPostRequest({url, headers}).catch(error => console.error(error));\n\t}\n\n\t#createFileFromUploadedChunks(): void\n\t{\n\t\tif (!this.#token)\n\t\t{\n\t\t\tconsole.error('Empty token.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#requestToDelete)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = this.#getCreateFileEndpoint();\n\t\tconst headers = {\n\t\t\t'X-Upload-Content-Type': this.#uploaderTask.fileData.type,\n\t\t\t'X-Bitrix-Csrf-Token': this.#getBitrixSessid()\n\t\t};\n\n\t\tconst body = new FormData();\n\t\tif (this.#uploaderTask.previewBlob)\n\t\t{\n\t\t\tbody.append('previewFile', this.#uploaderTask.previewBlob, `preview_${this.#getFileName()}.jpg`);\n\t\t}\n\n\t\tthis.#sendPostRequest({url, headers, body}).then(response => {\n\t\t\tif (response.errors.length > 0)\n\t\t\t{\n\t\t\t\tthis.#status = SENDER_STATUSES.FAILED;\n\t\t\t\tthis.#listener(Uploader.EVENTS.createFileError, {\n\t\t\t\t\ttask: this.#uploaderTask,\n\t\t\t\t\tresult: response\n\t\t\t\t});\n\n\t\t\t\tconsole.error(response.errors[0].message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.#updateProgress();\n\t\t\t\tthis.#status = SENDER_STATUSES.DONE;\n\t\t\t\tthis.#listener(Uploader.EVENTS.complete, {\n\t\t\t\t\ttask: this.#uploaderTask,\n\t\t\t\t\tresult: response\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\tthis.#status = SENDER_STATUSES.FAILED;\n\t\t\tthis.#listener(Uploader.EVENTS.createFileError, {\n\t\t\t\ttask: this.#uploaderTask,\n\t\t\t\tresult: error\n\t\t\t});\n\t\t});\n\t}\n\n\t#updateProgress(): void\n\t{\n\t\tthis.#uploaderTask.progress = Math.round((this.#readOffset * 100) / this.#uploaderTask.fileData.size);\n\n\t\tthis.#listener(Uploader.EVENTS.progressUpdate, {\n\t\t\ttask: this.#uploaderTask,\n\t\t});\n\t}\n\n\t#readNext(): void\n\t{\n\t\tif ((this.#readOffset + this.#uploaderTask.chunkSize) > this.#uploaderTask.fileData.size)\n\t\t{\n\t\t\tthis.#uploaderTask.chunkSize = this.#uploaderTask.fileData.size - this.#readOffset;\n\t\t}\n\n\t\tthis.#nextDataChunkToSend = this.#uploaderTask.fileData.slice(\n\t\t\tthis.#readOffset,\n\t\t\tthis.#readOffset + this.#uploaderTask.chunkSize\n\t\t);\n\t}\n\n\t#isEndOfFile(): boolean\n\t{\n\t\treturn this.#readOffset >= this.#uploaderTask.fileData.size;\n\t}\n\n\t#getUploadContentEndpoint(): string\n\t{\n\t\tconst token = this.#token ? `&token=${this.#token}` : '';\n\n\t\treturn `\n\t\t\t${this.#getBaseEndpoint(FileSender.UPLOAD_CHUNK_DEFAULT_ACTION)}\n\t\t\t&filename=${this.#getFileName()}\n\t\t\t${token}\n\t\t`;\n\t}\n\n\t#getCreateFileEndpoint(): string\n\t{\n\t\tconst generateUniqueName = this.#uploaderTask.generateUniqueName ? '&generateUniqueName=true' : '';\n\n\t\treturn `\n\t\t\t${this.#getBaseEndpoint(FileSender.COMMIT_FILE_DEFAULT_ACTION)}\n\t\t\t&filename=${this.#getFileName()}\n\t\t\t&folderId=${this.#uploaderTask.diskFolderId}\n\t\t\t&contentId=${this.#token}\n\t\t\t${generateUniqueName}\n\t\t`;\n\t}\n\n\t#getDeleteContentEndpoint(): string\n\t{\n\t\treturn `${this.#getBaseEndpoint(FileSender.ROLLBACK_UPLOAD_DEFAULT_ACTION)}&token=${this.#token}`;\n\t}\n\n\t#getBaseEndpoint(action: string): string\n\t{\n\t\treturn `/bitrix/services/main/ajax.php?action=${action}`;\n\t}\n\n\t#getFileName(): string\n\t{\n\t\treturn encodeURIComponent(this.#uploaderTask.fileName || this.#uploaderTask.fileData.name);\n\t}\n\n\t#sendPostRequest(request: {url: string, headers: Object, body: Object, signal: ?AbortSignal}): Promise\n\t{\n\t\tconst {url, headers, body, signal} = request;\n\n\t\tconst requestPrams = {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\theaders: headers,\n\t\t};\n\n\t\tif (signal)\n\t\t{\n\t\t\trequestPrams.signal = this.abortController.signal;\n\t\t}\n\n\t\tif (body)\n\t\t{\n\t\t\trequestPrams.body = body;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(url, requestPrams).then(response => resolve(response.json())).catch(error => reject(error));\n\t\t});\n\t}\n\n\t#getContentRangeHeader(): string\n\t{\n\t\tconst range = this.#readOffset + this.#uploaderTask.chunkSize - 1;\n\n\t\treturn `bytes ${this.#readOffset}-${range}/${this.#uploaderTask.fileData.size}`;\n\t}\n\n\t#getBitrixSessid(): string\n\t{\n\t\t// eslint-disable-next-line bitrix-rules/no-bx\n\t\treturn BX.bitrix_sessid();\n\t}\n\n\tisPending(): boolean\n\t{\n\t\treturn this.#status === SENDER_STATUSES.PENDING;\n\t}\n\n\tgetTaskId(): string\n\t{\n\t\treturn this.#uploaderTask.taskId;\n\t}\n}","import {Event} from 'main.core';\n\ntype Preview = {\n\tblob?: Blob,\n\twidth?: number,\n\theight?: number\n};\n\nexport const PreviewManager = {\n\tget(file: File): Promise<Preview>\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tif (file instanceof File)\n\t\t\t{\n\t\t\t\tif (file.type.startsWith('video'))\n\t\t\t\t{\n\t\t\t\t\tPreviewManager.getVideoPreviewBlob(file)\n\t\t\t\t\t\t.then(blob => PreviewManager.getImageDimensions(blob))\n\t\t\t\t\t\t.then(result => resolve(result))\n\t\t\t\t\t\t.catch(error => reject(error));\n\t\t\t\t}\n\t\t\t\telse if (file.type.startsWith('image'))\n\t\t\t\t{\n\t\t\t\t\tconst blob = new Blob([file], {type: file.type});\n\t\t\t\t\tPreviewManager.getImageDimensions(blob)\n\t\t\t\t\t\t.then(result => resolve(result))\n\t\t\t\t\t\t.catch(error => reject(error));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresolve({});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new Error('Parameter \"file\" is not instance of \"File\"'));\n\t\t\t}\n\t\t});\n\t},\n\n\tgetImageDimensions(fileBlob: Blob): Promise<Preview>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!fileBlob)\n\t\t\t{\n\t\t\t\treject(new Error('getImageDimensions: fileBlob can\\'t be empty'));\n\t\t\t}\n\n\t\t\tconst image: HTMLImageElement = new Image();\n\t\t\tEvent.bind(image, 'load', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tblob: fileBlob,\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tEvent.bind(image, 'error', () => {\n\t\t\t\treject();\n\t\t\t});\n\n\t\t\timage.src = URL.createObjectURL(fileBlob);\n\t\t});\n\t},\n\n\tgetVideoPreviewBlob(blob: Blob, seekTime: number = 10): Promise<Blob>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst video: HTMLVideoElement = document.createElement('video');\n\t\t\tvideo.setAttribute('src', URL.createObjectURL(blob));\n\t\t\tvideo.load();\n\n\t\t\tEvent.bind(video, 'error', (error) => {\n\t\t\t\treject(new Error(`Error while loading video file: ${error}`));\n\t\t\t});\n\n\t\t\tEvent.bind(video, 'loadedmetadata', () => {\n\t\t\t\tif (video.duration < seekTime)\n\t\t\t\t{\n\t\t\t\t\tseekTime = 0;\n\t\t\t\t}\n\n\t\t\t\tvideo.currentTime = seekTime;\n\n\t\t\t\tEvent.bind(video, 'seeked', () => {\n\t\t\t\t\tconst canvas = document.createElement('canvas');\n\t\t\t\t\tcanvas.width = video.videoWidth;\n\t\t\t\t\tcanvas.height = video.videoHeight;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(video, 0, 0, canvas.width, canvas.height);\n\t\t\t\t\tcontext.canvas.toBlob(\n\t\t\t\t\t\tresultBlob => resolve(resultBlob),\n\t\t\t\t\t\t'image/jpeg',\n\t\t\t\t\t\t1\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t},\n};","import {EventEmitter} from 'main.core.events';\nimport {Type, Extension} from 'main.core';\nimport {FileSender} from './file-sender';\n\nimport type {UploaderTask} from './types/uploader-task';\nimport type {UploaderOptions} from './types/uploader-options';\n\nexport class Uploader extends EventEmitter\n{\n\t#queue: UploaderTask[] = [];\n\t#inputNode: HTMLElement | HTMLElement[];\n\t#dropNode: HTMLElement | HTMLElement[];\n\t#fileMaxSize: number = 0;\n\n\t#isCloud: boolean;\n\t#phpUploadMaxFilesize: number;\n\t#phpPostMaxSize: number;\n\n\tstatic EVENTS: {[string]: string } = {\n\t\tstartUpload: 'startUpload',\n\t\tprogressUpdate: 'progressUpdate',\n\t\tcomplete: 'complete',\n\t\tfileMaxSizeExceeded: 'fileMaxSizeExceeded',\n\t\tcreateFileError: 'createFileError',\n\t\tuploadFileError: 'uploadFileError',\n\t};\n\n\tstatic BOX_MIN_CHUNK_SIZE = 1024 * 1024; //1Mb\n\tstatic CLOUD_MIN_CHUNK_SIZE = 1024 * 1024 * 5; //5Mb\n\tstatic CLOUD_MAX_CHUNK_SIZE = 1024 * 1024 * 100; //100Mb\n\n\tconstructor(options: UploaderOptions = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.Messenger.V2.Lib.Uploader');\n\n\t\tthis.#handleUploaderOptions(options);\n\t\tthis.#initSettings();\n\t}\n\n\taddTask(task: UploaderTask): void\n\t{\n\t\tif (!this.checkTaskParams(task))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\ttask.chunkSize = this.#calculateChunkSize(task.chunkSize);\n\t\ttask.listener = (eventName, data) => this.onUploadEvent(eventName, data);\n\n\t\tthis.#queue.push(new FileSender(task));\n\t\tthis.checkUploadQueue();\n\t}\n\n\tdeleteTask(taskId: string): void\n\t{\n\t\tif (!taskId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#queue = this.#queue.filter((queueItem: FileSender) => {\n\t\t\tif (queueItem.getTaskId() === taskId)\n\t\t\t{\n\t\t\t\tqueueItem.deleteContent();\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tgetTask(taskId: string): ?UploaderTask\n\t{\n\t\tconst task = this.queue.find(queueItem => queueItem.taskId === taskId);\n\n\t\treturn task || null;\n\t}\n\n\tcheckUploadQueue(): void\n\t{\n\t\tif (this.#queue.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst inProgressTasks = this.#queue.filter((queueTask: FileSender) => queueTask.isPending());\n\t\tif (inProgressTasks.length > 0)\n\t\t{\n\t\t\tinProgressTasks[0].uploadContent();\n\t\t}\n\t}\n\n\tonUploadEvent(eventName: string, event: Object)\n\t{\n\t\tthis.emit(eventName, event);\n\t\tthis.checkUploadQueue();\n\t}\n\n\tcheckTaskParams(task: UploaderTask): boolean\n\t{\n\t\tif (!task.taskId)\n\t\t{\n\t\t\tconsole.error('Empty TaskId.');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!task.fileData)\n\t\t{\n\t\t\tconsole.error('Empty file data.');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!task.diskFolderId)\n\t\t{\n\t\t\tconsole.error('Empty disk folder id.');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#fileMaxSize && this.#fileMaxSize < task.fileData.size)\n\t\t{\n\t\t\tthis.emit(Uploader.EVENTS.fileMaxSizeExceeded, {\n\t\t\t\tmaxFileSizeLimit: this.#fileMaxSize,\n\t\t\t\ttask: task,\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#calculateChunkSize(chunk = 0): number\n\t{\n\t\tconst maxAvailableBoxChinkSize = Math.min(this.#phpPostMaxSize, this.#phpUploadMaxFilesize);\n\n\t\tconst minChunkSize = this.#isCloud ? Uploader.CLOUD_MIN_CHUNK_SIZE : Uploader.BOX_MIN_CHUNK_SIZE;\n\t\tconst maxChunkSize = this.#isCloud ? Uploader.CLOUD_MAX_CHUNK_SIZE : maxAvailableBoxChinkSize;\n\n\t\treturn Math.min(Math.max(chunk, minChunkSize), maxChunkSize);\n\t}\n\n\t#handleUploaderOptions(options: UploaderOptions)\n\t{\n\t\tif (options.inputNode instanceof HTMLInputElement || Type.isArrayFilled(options.inputNode))\n\t\t{\n\t\t\tthis.#inputNode = options.inputNode;\n\t\t}\n\n\t\tif (options.dropNode instanceof HTMLElement || Type.isArrayFilled(options.dropNode))\n\t\t{\n\t\t\tthis.#dropNode = options.dropNode;\n\t\t}\n\t}\n\n\t#initSettings()\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.uploader');\n\n\t\tthis.#isCloud = settings.get('isCloud');\n\t\tthis.#phpUploadMaxFilesize = settings.get('phpUploadMaxFilesize');\n\t\tthis.#phpPostMaxSize = settings.get('phpPostMaxSize');\n\t}\n}\n\nexport {PreviewManager} from './classes/preview-manager';"],"names":["SENDER_STATUSES","PENDING","PROGRESS","DONE","CANCELLED","FAILED","FileSender","constructor","task","listener","abortController","AbortController","uploadContent","url","headers","fileData","type","requestParams","body","signal","then","response","errors","length","Uploader","EVENTS","uploadFileError","result","console","error","message","data","token","chunkSize","catch","warn","deleteContent","abort","isPending","getTaskId","taskId","progress","startUpload","FormData","previewBlob","append","createFileError","complete","Math","round","size","progressUpdate","slice","UPLOAD_CHUNK_DEFAULT_ACTION","generateUniqueName","COMMIT_FILE_DEFAULT_ACTION","diskFolderId","ROLLBACK_UPLOAD_DEFAULT_ACTION","action","encodeURIComponent","fileName","name","request","requestPrams","method","credentials","Promise","resolve","reject","fetch","json","range","BX","bitrix_sessid","PreviewManager","get","file","File","startsWith","getVideoPreviewBlob","blob","getImageDimensions","Blob","Error","fileBlob","image","Image","Event","bind","width","height","src","URL","createObjectURL","seekTime","video","document","createElement","setAttribute","load","duration","currentTime","canvas","videoWidth","videoHeight","context","getContext","drawImage","toBlob","resultBlob","EventEmitter","options","setEventNamespace","addTask","checkTaskParams","eventName","onUploadEvent","push","checkUploadQueue","deleteTask","filter","queueItem","getTask","queue","find","inProgressTasks","queueTask","event","emit","fileMaxSizeExceeded","maxFileSizeLimit","chunk","maxAvailableBoxChinkSize","min","minChunkSize","CLOUD_MIN_CHUNK_SIZE","BOX_MIN_CHUNK_SIZE","maxChunkSize","CLOUD_MAX_CHUNK_SIZE","max","inputNode","HTMLInputElement","Type","isArrayFilled","dropNode","HTMLElement","settings","Extension","getSettings"],"mappings":"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"}