{"version":3,"file":"desktop-api.bundle.js","sources":["../src/functions/lifecycle.js","../src/features.js","../src/functions/version.js","../src/functions/event.js","../src/functions/window.js","../src/functions/icon.js","../src/functions/settings.js","../src/functions/common.js","../src/functions/legacy.js","../src/functions/notifications.js","../src/functions/logger.js","../src/functions/call/mask.js","../src/functions/call/background.js","../src/desktop-api.js"],"sourcesContent":["import { Type } from 'main.core';\nexport const lifecycleFunctions = {\n\tisDesktop(): boolean\n\t{\n\t\treturn Type.isObject(window.BXDesktopSystem);\n\t},\n\trestart()\n\t{\n\t\tif (this.getApiVersion() < 74)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tBXDesktopSystem?.Restart();\n\t},\n\tshutdown()\n\t{\n\t\tBXDesktopSystem?.Shutdown();\n\t},\n};\n","export const DesktopFeature = {\n\tmask: {\n\t\tid: 'mask',\n\t\tversion: 72,\n\t},\n\trestart: {\n\t\tid: 'restart',\n\t\tversion: 74,\n\t},\n};\n","import { DesktopFeature } from '../features';\n\ntype DesktopFeatureItem = $Keys<typeof DesktopFeature>;\n\nexport const versionFunctions = {\n\tgetApiVersion(): number\n\t{\n\t\tif (!this.isDesktop())\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst [majorVersion, minorVersion, buildVersion, apiVersion] = window.BXDesktopSystem.GetProperty('versionParts');\n\n\t\treturn apiVersion;\n\t},\n\tisFeatureEnabled(code: string): boolean\n\t{\n\t\treturn Boolean(window.BXDesktopSystem?.FeatureEnabled(code));\n\t},\n\tisFeatureSupported(code: DesktopFeatureItem): boolean\n\t{\n\t\tif (!DesktopFeature[code])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.getApiVersion() >= DesktopFeature[code].version;\n\t},\n};\n","import { Event, Type } from 'main.core';\n\nconst eventHandlers = {};\n\nexport const eventFunctions = {\n\tsubscribe(eventName: string, handler: Function)\n\t{\n\t\tif (!this.isDesktop())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst preparedHandler = (event) => {\n\t\t\tconst params = event.detail ?? [];\n\t\t\thandler.apply(window, params);\n\t\t};\n\n\t\tif (!eventHandlers[eventName])\n\t\t{\n\t\t\teventHandlers[eventName] = [];\n\t\t}\n\t\teventHandlers[eventName].push(preparedHandler);\n\n\t\tEvent.bind(window, eventName, preparedHandler);\n\t},\n\tunsubscribe(eventName: string, handler: Function)\n\t{\n\t\tif (!Type.isFunction(handler))\n\t\t{\n\t\t\tif (!Type.isArrayFilled(eventHandlers[eventName]))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teventHandlers[eventName].forEach((eventHandler) => {\n\t\t\t\tEvent.unbind(window, eventName, eventHandler);\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tEvent.unbind(window, eventName, handler);\n\t},\n\temit(eventName: string, params: any[] = [])\n\t{\n\t\tconst mainWindow = opener || top;\n\t\tconst allWindows: Object[] = mainWindow.BXWindows;\n\t\tallWindows.forEach((window) => {\n\t\t\tif (!window || window.name === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twindow?.BXDesktopWindow?.DispatchCustomEvent(eventName, params);\n\t\t});\n\n\t\tthis.emitToMainWindow(eventName, params);\n\t},\n\temitToMainWindow(eventName: string, params: any[] = [])\n\t{\n\t\tconst mainWindow = opener || top;\n\t\tmainWindow.BXDesktopSystem?.GetMainWindow()?.DispatchCustomEvent(eventName, params);\n\t},\n};\n","import { Type, Event, Dom, Extension } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\nimport { EventType } from 'im.v2.const';\n\nexport const windowFunctions = {\n\tisTwoWindowMode(): boolean\n\t{\n\t\treturn Boolean(BXDesktopSystem?.IsTwoWindowsMode());\n\t},\n\tisChatWindow(): boolean\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.desktop-api');\n\n\t\treturn (\n\t\t\tthis.isDesktop()\n\t\t\t&& settings.get('isChatWindow')\n\t\t);\n\t},\n\tisChatTab(): boolean\n\t{\n\t\treturn (\n\t\t\tthis.isChatWindow()\n\t\t\t|| (\n\t\t\t\tthis.isDesktop()\n\t\t\t\t&& location.href.includes('&IM_TAB=Y')\n\t\t\t)\n\t\t);\n\t},\n\tsetActiveTab(target = window)\n\t{\n\t\tif (!Type.isObject(target))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\ttarget.BXDesktopSystem?.SetActiveTab();\n\t},\n\tshowWindow(target = window)\n\t{\n\t\tif (!Type.isObject(target))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\ttarget.BXDesktopWindow?.ExecuteCommand('show');\n\t},\n\tactivateWindow(target = window)\n\t{\n\t\tthis.setActiveTab(target);\n\t\tthis.showWindow(target);\n\t},\n\thideWindow(target = window)\n\t{\n\t\tif (!Type.isObject(target))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\ttarget.BXDesktopWindow?.ExecuteCommand('hide');\n\t},\n\tcloseWindow(target = window)\n\t{\n\t\tif (!Type.isObject(target))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\ttarget.BXDesktopWindow?.ExecuteCommand('close');\n\t},\n\thideLoader()\n\t{\n\t\tDom.remove(document.getElementById('bx-desktop-loader'));\n\t},\n\treloadWindow()\n\t{\n\t\tconst event = new BaseEvent();\n\t\tEventEmitter.emit(window, EventType.desktop.onReload, event);\n\t\tlocation.reload();\n\t},\n\tfindWindow(name: string = ''): ?Window\n\t{\n\t\tconst mainWindow = opener || top;\n\n\t\treturn mainWindow.BXWindows.find((window) => window?.name === name);\n\t},\n\tcreateTab(path: string): void\n\t{\n\t\tconst preparedPath = Dom.create({ tag: 'a', attrs: { href: path } }).href;\n\n\t\tBXDesktopSystem.CreateTab(preparedPath);\n\t},\n\tcreateImTab(path: string): void\n\t{\n\t\tconst preparedPath = Dom.create({ tag: 'a', attrs: { href: path } }).href;\n\n\t\tBXDesktopSystem.CreateImTab(preparedPath);\n\t},\n\tcreateWindow(name: string, callback: Function)\n\t{\n\t\tBXDesktopSystem.GetWindow(name, callback);\n\t},\n\tcreateTopmostWindow(htmlContent: string): boolean\n\t{\n\t\treturn BXDesktopSystem.ExecuteCommand('topmost.show.html', htmlContent);\n\t},\n\tsetWindowPosition(rawParams: {x?: number, y?: number, width?: number, height?: number})\n\t{\n\t\tconst preparedParams = {};\n\t\tObject.entries(rawParams).forEach(([key, value]) => {\n\t\t\tconst preparedKey = key[0].toUpperCase() + key.slice(1);\n\t\t\tpreparedParams[preparedKey] = value;\n\t\t});\n\t\tBXDesktopWindow?.SetProperty('position', preparedParams);\n\t},\n\tprepareHtml(html: string | HTMLElement, js: string | HTMLElement): string\n\t{\n\t\tif (Type.isDomNode(html))\n\t\t{\n\t\t\thtml = html.outerHTML;\n\t\t}\n\n\t\tif (Type.isDomNode(js))\n\t\t{\n\t\t\tjs = js.outerHTML;\n\t\t}\n\n\t\tEvent.ready();\n\n\t\tif (Type.isStringFilled(js))\n\t\t{\n\t\t\tjs = `\n\t\t\t\t<script type=\"text/javascript\">\n\t\t\t\t\tBX.ready(() => {\n\t\t\t\t\t\t${js}\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t`;\n\t\t}\n\n\t\tconst head = document.head.outerHTML.replaceAll(/BX\\.PULL\\.start\\([^)]*\\);/g, '');\n\n\t\treturn `\n\t\t\t<!DOCTYPE html>\n\t\t\t<html>\n\t\t\t\t${head}\n\t\t\t\t<body class=\"im-desktop im-desktop-popup\">\n\t\t\t\t\t${html}${js}\n\t\t\t\t</body>\n\t\t\t</html>\n\t\t`;\n\t},\n\tsetWindowSize(width: number, height: number)\n\t{\n\t\tBXDesktopWindow.SetProperty(\"clientSize\", { Width: width, Height: height });\n\t},\n\tsetMinimumWindowSize(width: number, height: number)\n\t{\n\t\tBXDesktopWindow.SetProperty(\"minClientSize\", { Width: width, Height: height });\n\t},\n};\n","import { Browser } from 'main.core';\n\nexport const iconFunctions = {\n\tsetCounter(counter: number, important: boolean = false)\n\t{\n\t\tconst preparedCounter = counter.toString();\n\t\tBXDesktopSystem?.SetIconBadge(preparedCounter, important);\n\t\tBXDesktopSystem?.SetTabBadge(0, preparedCounter);\n\t},\n\tsetBrowserIconBadge(counter: string | number)\n\t{\n\t\tBXDesktopSystem?.SetBrowserIconBadge(counter.toString());\n\t},\n\tsetIconStatus(status: string)\n\t{\n\t\tBXDesktopSystem?.SetIconStatus(status);\n\t},\n\tsetOfflineIcon()\n\t{\n\t\tBXDesktopSystem?.SetIconStatus('offline');\n\t},\n\tflashIcon()\n\t{\n\t\tif (!Browser.isWin())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tBXDesktopSystem?.FlashIcon();\n\t},\n};\n","export const DesktopSettingsKey = {\n\tsmoothing: 'bxd_camera_smoothing',\n\ttelemetry: 'bxd_telemetry',\n\tsliderBindingsStatus: 'sliderBindingsStatus',\n};\n\nexport const settingsFunctions = {\n\tgetCameraSmoothingStatus(): boolean\n\t{\n\t\treturn this.getCustomSetting(DesktopSettingsKey.smoothing, '0') === '1';\n\t},\n\tsetCameraSmoothingStatus(status: boolean)\n\t{\n\t\tconst preparedStatus = status === true ? '1' : '0';\n\t\tthis.setCustomSetting(DesktopSettingsKey.smoothing, preparedStatus);\n\t},\n\tisTwoWindowMode(): boolean\n\t{\n\t\treturn Boolean(BXDesktopSystem?.IsTwoWindowsMode());\n\t},\n\tsetTwoWindowMode(flag: boolean)\n\t{\n\t\tif (flag === true)\n\t\t{\n\t\t\tBXDesktopSystem?.V10();\n\n\t\t\treturn;\n\t\t}\n\n\t\tBXDesktopSystem?.V8();\n\t},\n\tgetAutostartStatus(): boolean\n\t{\n\t\treturn BXDesktopSystem?.GetProperty('autostart');\n\t},\n\tsetAutostartStatus(flag: boolean)\n\t{\n\t\tBXDesktopSystem?.SetProperty('autostart', flag);\n\t},\n\tgetTelemetryStatus(): boolean\n\t{\n\t\treturn this.getCustomSetting(DesktopSettingsKey.telemetry, '1') === '1';\n\t},\n\tsetTelemetryStatus(flag: boolean)\n\t{\n\t\tthis.setCustomSetting(DesktopSettingsKey.telemetry, flag ? '1' : '0');\n\t},\n\tsetCustomSetting(name: string, value: string)\n\t{\n\t\tBXDesktopSystem?.StoreSettings(name, value);\n\t},\n\tgetCustomSetting(name: string, defaultValue: string): string\n\t{\n\t\treturn BXDesktopSystem?.QuerySettings(name, defaultValue);\n\t},\n};\n","export const commonFunctions = {\n\tprepareResourcePath(source: string): string\n\t{\n\t\tlet result = '';\n\n\t\ttry\n\t\t{\n\t\t\tconst url = new URL(source, location.origin);\n\t\t\tresult = url.href;\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\t// empty\n\t\t}\n\n\t\treturn result;\n\t},\n};\n","import {Extension} from 'main.core';\n\nexport const legacyFunctions = {\n\tchangeTab(tabId: string)\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.desktop-api');\n\t\tconst v2 = settings.get('v2');\n\t\tif (v2)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tBX.desktop.changeTab(tabId);\n\t}\n};","export const notificationFunctions = {\n\tremoveNativeNotifications()\n\t{\n\t\tif (this.getApiVersion() < 74)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tBXDesktopSystem?.NotificationRemoveAll();\n\t},\n};\n","import { Type, Browser, Loc } from 'main.core';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport const loggerFunctions = {\n\twriteToLogFile(filename: string, text: any)\n\t{\n\t\tif (!Type.isStringFilled(filename))\n\t\t{\n\t\t\tconsole.error('Desktop logger: filename is not defined');\n\t\t\treturn;\n\t\t}\n\n\t\tlet textPrepared = '';\n\t\tif (Type.isString(text))\n\t\t{\n\t\t\ttextPrepared = text;\n\t\t}\n\t\telse if (Type.isNumber(text))\n\t\t{\n\t\t\ttextPrepared = text.toString();\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttextPrepared = JSON.stringify(text);\n\t\t}\n\n\t\tBXDesktopSystem?.Log(filename, textPrepared);\n\t},\n\tprintWelcomePrompt()\n\t{\n\t\tconst version = BXDesktopSystem.GetProperty('versionParts').join('.');\n\t\tlet osName = 'unknown';\n\t\tif (Browser.isMac())\n\t\t{\n\t\t\tosName = 'MacOS';\n\t\t}\n\t\telse if (Browser.isWin())\n\t\t{\n\t\t\tosName = 'Windows';\n\t\t}\n\t\telse if (Browser.isLinux())\n\t\t{\n\t\t\tosName = 'Linux';\n\t\t}\n\n\t\tconst promptMessage = Loc.getMessage('IM_LIB_DESKTOP_API_WELCOME_PROMPT', { '#VERSION#': version, '#OS#': osName });\n\t\tLogger.desktop(promptMessage);\n\t},\n};\n","export const callMaskFunctions = {\n\tgetCallMask()\n\t{\n\t\tif (!this.isDesktop())\n\t\t{\n\t\t\treturn { id: '' };\n\t\t}\n\n\t\treturn {\n\t\t\tid: BXDesktopSystem.QuerySettings('bxd_camera_3dbackground_id') || '',\n\t\t};\n\t},\n\tsetCallMaskLoadHandlers(callback: function)\n\t{\n\t\tthis.subscribe('BX3dAvatarReady', callback);\n\t\tthis.subscribe('BX3dAvatarError', callback);\n\t},\n\tsetCallMask(id, maskUrl, backgroundUrl): boolean\n\t{\n\t\tif (this.getApiVersion() < 72)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!id)\n\t\t{\n\t\t\tBXDesktopSystem.Set3dAvatar('', '');\n\t\t\tBXDesktopSystem.StoreSettings('bxd_camera_3dbackground_id', '');\n\t\t\treturn true;\n\t\t}\n\n\t\tmaskUrl = this.prepareResourcePath(maskUrl);\n\t\tbackgroundUrl = this.prepareResourcePath(backgroundUrl);\n\n\t\tBXDesktopSystem.Set3dAvatar(maskUrl, backgroundUrl);\n\t\tBXDesktopSystem.StoreSettings('bxd_camera_3dbackground_id', id);\n\n\t\treturn true;\n\t},\n};\n","export const callBackgroundFunctions = {\n\tgetBackgroundImage(): Object\n\t{\n\t\tif (!this.isDesktop())\n\t\t{\n\t\t\treturn { id: 'none', source: '' };\n\t\t}\n\n\t\tconst id = BXDesktopSystem.QuerySettings(\"bxd_camera_background_id\") || 'none';\n\n\t\treturn { id };\n\t},\n\tsetCallBackground(id, source)\n\t{\n\t\tif (source === 'none' || source === '')\n\t\t{\n\t\t\tsource = '';\n\t\t}\n\t\telse if (source === 'blur')\n\t\t{\n\t\t\t// empty\n\t\t}\n\t\telse if (source === 'gaussianBlur')\n\t\t{\n\t\t\tsource = 'GaussianBlur';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsource = this.prepareResourcePath(source);\n\t\t}\n\n\t\tvar promise = new BX.Promise();\n\n\t\tsetTimeout(() => {\n\t\t\tthis.setCallMask(false);\n\t\t\tBXDesktopSystem.StoreSettings('bxd_camera_background_id', id);\n\t\t\tBXDesktopSystem.StoreSettings('bxd_camera_background', source);\n\t\t\tpromise.resolve();\n\t\t}, 100);\n\n\t\treturn promise;\n\t},\n};\n","import { lifecycleFunctions } from './functions/lifecycle';\nimport { versionFunctions } from './functions/version';\nimport { eventFunctions } from './functions/event';\nimport { windowFunctions } from './functions/window';\nimport { iconFunctions } from './functions/icon';\nimport { settingsFunctions } from './functions/settings';\nimport { commonFunctions } from './functions/common';\nimport { legacyFunctions } from './functions/legacy';\nimport { notificationFunctions } from './functions/notifications';\nimport { loggerFunctions } from './functions/logger';\nimport { callMaskFunctions } from './functions/call/mask';\nimport { callBackgroundFunctions } from './functions/call/background';\n\nexport { DesktopFeature } from './features';\nexport { DesktopSettingsKey } from './functions/settings';\n\nexport const DesktopApi = {\n\t...lifecycleFunctions,\n\t...commonFunctions,\n\t...versionFunctions,\n\t...eventFunctions,\n\t...windowFunctions,\n\t...iconFunctions,\n\t...notificationFunctions,\n\t...settingsFunctions,\n\t...legacyFunctions,\n\t...callBackgroundFunctions,\n\t...callMaskFunctions,\n\t...loggerFunctions,\n};\n"],"names":["lifecycleFunctions","isDesktop","Type","isObject","window","BXDesktopSystem","restart","getApiVersion","Restart","shutdown","Shutdown","DesktopFeature","mask","id","version","versionFunctions","majorVersion","minorVersion","buildVersion","apiVersion","GetProperty","isFeatureEnabled","code","Boolean","FeatureEnabled","isFeatureSupported","eventHandlers","eventFunctions","subscribe","eventName","handler","preparedHandler","event","params","detail","apply","push","Event","bind","unsubscribe","isFunction","isArrayFilled","forEach","eventHandler","unbind","emit","mainWindow","opener","top","allWindows","BXWindows","name","BXDesktopWindow","DispatchCustomEvent","emitToMainWindow","GetMainWindow","windowFunctions","isTwoWindowMode","IsTwoWindowsMode","isChatWindow","settings","Extension","getSettings","get","isChatTab","location","href","includes","setActiveTab","target","SetActiveTab","showWindow","ExecuteCommand","activateWindow","hideWindow","closeWindow","hideLoader","Dom","remove","document","getElementById","reloadWindow","BaseEvent","EventEmitter","EventType","desktop","onReload","reload","findWindow","find","createTab","path","preparedPath","create","tag","attrs","CreateTab","createImTab","CreateImTab","createWindow","callback","GetWindow","createTopmostWindow","htmlContent","setWindowPosition","rawParams","preparedParams","Object","entries","key","value","preparedKey","toUpperCase","slice","SetProperty","prepareHtml","html","js","isDomNode","outerHTML","ready","isStringFilled","head","replaceAll","setWindowSize","width","height","Width","Height","setMinimumWindowSize","iconFunctions","setCounter","counter","important","preparedCounter","toString","SetIconBadge","SetTabBadge","setBrowserIconBadge","SetBrowserIconBadge","setIconStatus","status","SetIconStatus","setOfflineIcon","flashIcon","Browser","isWin","FlashIcon","DesktopSettingsKey","smoothing","telemetry","sliderBindingsStatus","settingsFunctions","getCameraSmoothingStatus","getCustomSetting","setCameraSmoothingStatus","preparedStatus","setCustomSetting","setTwoWindowMode","flag","V10","V8","getAutostartStatus","setAutostartStatus","getTelemetryStatus","setTelemetryStatus","StoreSettings","defaultValue","QuerySettings","commonFunctions","prepareResourcePath","source","result","url","URL","origin","legacyFunctions","changeTab","tabId","v2","BX","notificationFunctions","removeNativeNotifications","NotificationRemoveAll","loggerFunctions","writeToLogFile","filename","text","console","error","textPrepared","isString","isNumber","JSON","stringify","Log","printWelcomePrompt","join","osName","isMac","isLinux","promptMessage","Loc","getMessage","Logger","callMaskFunctions","getCallMask","setCallMaskLoadHandlers","setCallMask","maskUrl","backgroundUrl","Set3dAvatar","callBackgroundFunctions","getBackgroundImage","setCallBackground","promise","Promise","setTimeout","resolve","DesktopApi"],"mappings":"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"}