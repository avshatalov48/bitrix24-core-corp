this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,s,i,n,r){"use strict";class g{static init(){}constructor(){this.store=i.Core.getStore();this.initSettings()}initSettings(){this.initGeneralSettings();this.initRecentSettings()}initGeneralSettings(){const t={};Object.entries(n.SettingsMap).forEach((([e,s])=>{t[s]=BX.MessengerProxy.getOption(e)}));this.store.dispatch("application/setOptions",t)}initRecentSettings(){const t={};Object.entries(n.RecentSettingsMap).forEach((([e,s])=>{t[s]=BX.MessengerProxy.getOption(e)}));this.store.dispatch("recent/setOptions",t)}onSettingsChange({data:t}){r.Logger.warn("Im.RecentList: SettingsChange",t);const e={};const s={};Object.entries(t).forEach((([t,i])=>{if(Object.keys(n.RecentSettingsMap).includes(t)){s[n.RecentSettingsMap[t]]=i}if(Object.keys(n.SettingsMap).includes(t)){e[n.SettingsMap[t]]=i}}));this.store.dispatch("application/setOptions",e);this.store.dispatch("recent/setOptions",s)}destroy(){e.EventEmitter.unsubscribe(n.EventType.dialog.settingsChange,this.onSettingsChangeHandler)}}t.SettingsManager=g})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX.Event,BX.Vue3.Vuex,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib);
//# sourceMappingURL=settings.bundle.map.js