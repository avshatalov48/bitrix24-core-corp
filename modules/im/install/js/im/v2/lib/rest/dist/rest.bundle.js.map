{"version":3,"file":"rest.bundle.js","sources":["../src/rest.js"],"sourcesContent":["import {ajax} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\n\ntype RunActionConfig = {\n\tdata?: any,\n\tanalyticsLabel?: Object\n};\n\ntype RunActionResult = {\n\tstatus: 'success' | 'error',\n\tdata: any,\n\terrors: RunActionError[]\n};\n\ntype RunActionError = {\n\tcode: number | string,\n\tcustomData: any,\n\tmessage: string\n};\n\ntype BatchQuery = {\n\t[method: string]: {[param: string]: any}\n}\n\nexport const runAction = (action: string, config: RunActionConfig = {}): Promise<RunActionResult> => {\n\treturn new Promise((resolve, reject) => {\n\t\tajax.runAction(action, config).then((response: RunActionResult) => {\n\t\t\treturn resolve(response.data);\n\t\t}).catch((response: RunActionResult) => {\n\t\t\treturn reject(response.errors);\n\t\t});\n\t});\n};\n\nexport const callBatch = (query: BatchQuery): Promise<{[method: string]: any}> => {\n\tconst preparedQuery = {};\n\tconst methodsToCall = new Set();\n\tObject.entries(query).forEach(([method, params]) => {\n\t\tmethodsToCall.add(method);\n\t\tpreparedQuery[method] = [method, params];\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tCore.getRestClient().callBatch(preparedQuery, (result) => {\n\t\t\tconst data = {};\n\t\t\tfor (const method of methodsToCall)\n\t\t\t{\n\t\t\t\tconst methodResult: RestResult = result[method];\n\t\t\t\tif (methodResult.error())\n\t\t\t\t{\n\t\t\t\t\tconst {error: code, error_description: description} = methodResult.error().ex;\n\t\t\t\t\treject({code, description});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdata[method] = methodResult.data();\n\t\t\t}\n\n\t\t\treturn resolve(data);\n\t\t});\n\t});\n};"],"names":["runAction","action","config","Promise","resolve","reject","ajax","then","response","data","catch","errors","callBatch","query","preparedQuery","methodsToCall","Set","Object","entries","forEach","method","params","add","Core","getRestClient","result","methodResult","error","code","error_description","description","ex"],"mappings":";;;;;;;OAyBaA,SAAS,GAAG,CAACC,MAAc,EAAEC,MAAuB,GAAG,EAAE,KAA+B;GACpG,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;KACvCC,cAAI,CAACN,SAAS,CAACC,MAAM,EAAEC,MAAM,CAAC,CAACK,IAAI,CAAEC,QAAyB,IAAK;OAClE,OAAOJ,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC7B,CAAC,CAACC,KAAK,CAAEF,QAAyB,IAAK;OACvC,OAAOH,MAAM,CAACG,QAAQ,CAACG,MAAM,CAAC;MAC9B,CAAC;IACF,CAAC;CACH,CAAC;AAED,OAAaC,SAAS,GAAIC,KAAiB,IAAuC;GACjF,MAAMC,aAAa,GAAG,EAAE;GACxB,MAAMC,aAAa,GAAG,IAAIC,GAAG,EAAE;GAC/BC,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,KAAK;KACnDN,aAAa,CAACO,GAAG,CAACF,MAAM,CAAC;KACzBN,aAAa,CAACM,MAAM,CAAC,GAAG,CAACA,MAAM,EAAEC,MAAM,CAAC;IACxC,CAAC;GAEF,OAAO,IAAIlB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;KACvCkB,2BAAI,CAACC,aAAa,EAAE,CAACZ,SAAS,CAACE,aAAa,EAAGW,MAAM,IAAK;OACzD,MAAMhB,IAAI,GAAG,EAAE;OACf,KAAK,MAAMW,MAAM,IAAIL,aAAa,EAClC;SACC,MAAMW,YAAwB,GAAGD,MAAM,CAACL,MAAM,CAAC;SAC/C,IAAIM,YAAY,CAACC,KAAK,EAAE,EACxB;WACC,MAAM;aAACA,KAAK,EAAEC,IAAI;aAAEC,iBAAiB,EAAEC;YAAY,GAAGJ,YAAY,CAACC,KAAK,EAAE,CAACI,EAAE;WAC7E1B,MAAM,CAAC;aAACuB,IAAI;aAAEE;YAAY,CAAC;WAC3B;;SAEDrB,IAAI,CAACW,MAAM,CAAC,GAAGM,YAAY,CAACjB,IAAI,EAAE;;OAGnC,OAAOL,OAAO,CAACK,IAAI,CAAC;MACpB,CAAC;IACF,CAAC;CACH,CAAC;;;;;;;;;"}