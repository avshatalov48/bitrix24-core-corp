{"version":3,"file":"registry.bundle.js","sources":["../src/recent.js","../src/classes/chat-data-extractor.js","../src/classes/chat/load.js","../src/classes/chat/create.js","../src/classes/chat/rename.js","../src/classes/chat/mute.js","../src/classes/chat/pin.js","../src/classes/chat/read.js","../src/classes/chat/user.js","../src/chat.js","../src/classes/message/load.js","../src/classes/message/pin.js","../src/classes/message/edit.js","../src/classes/message/delete.js","../src/classes/message/mark.js","../src/classes/message/favorite.js","../src/message.js","../src/sending.js","../src/notification.js","../src/disk.js","../src/classes/recent/unread-recent.js","../src/classes/uploading/uploader-wrapper.js","../src/uploading.js"],"sourcesContent":["import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\n\nimport {Messenger} from 'im.public';\nimport {Core} from 'im.v2.application.core';\nimport {DialogType, EventType, Layout, RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tstore: Object = null;\n\trestClient: RestClient = null;\n\n\tdataIsPreloaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\n\t\tthis.onUpdateStateHandler = this.onUpdateState.bind(this);\n\t\tEventEmitter.subscribe(EventType.recent.updateState, this.onUpdateStateHandler);\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getRecentCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn(`Im.RecentList: first page was preloaded`);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn(`Im.RecentList: setting preloaded data`, params);\n\t\tconst {items, hasMore} = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId)\n\t{\n\t\tLogger.warn(`Im.RecentList: hide chat`, dialogId);\n\t\tconst recentItem = this.store.getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.store.dispatch('recent/delete', {\n\t\t\tid: dialogId\n\t\t});\n\n\t\tconst chatIsOpened = this.store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tthis.restClient.callMethod(RestMethod.imRecentHide, {'DIALOG_ID': dialogId}).catch(error => {\n\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t});\n\t}\n\t// endregion public\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\treturn this.restClient.callMethod(this.getQueryMethod(), queryParams).then((result) => {\n\t\t\tthis.pagesLoaded++;\n\t\t\tLogger.warn(`Im.RecentList: ${firstPage? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\t\tconst {items, hasMore} = result.data();\n\n\t\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\t\tif (!hasMore)\n\t\t\t{\n\t\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t\t}\n\n\t\t\treturn this.updateModels(result.data()).then(() => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t});\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): Object\n\t{\n\t\treturn {\n\t\t\t'SKIP_OPENLINES': 'Y',\n\t\t\t'LIMIT': this.itemsPerPage,\n\t\t\t'LAST_MESSAGE_DATE': firstPage? null : this.lastMessageDate,\n\t\t\t'GET_ORIGINAL_TEXT': 'Y'\n\t\t};\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tif (rawData.botList)\n\t\t{\n\t\t\tthis.store.dispatch('users/setBotList', rawData.botList);\n\t\t}\n\t\tconst dialoguesPromise = this.store.dispatch('dialogues/set', dialogues);\n\t\tconst recentPromise = this.store.dispatch('recent/setRecent', recent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\tLogger.warn(`Im.RecentList: setting UpdateState data`, data);\n\t\tthis.updateModels(data);\n\t}\n\n\tprepareDataForModels({items, birthdayList = []}): {users: Array, dialogues: Array, recent: Array}\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tdialogues: [],\n\t\t\trecent: []\n\t\t};\n\n\t\titems.forEach(item => {\n\t\t\t// user\n\t\t\tif (item.user && item.user.id && !this.isAddedAlready(result, 'users', item.user.id))\n\t\t\t{\n\t\t\t\tresult.users.push(item.user);\n\t\t\t}\n\n\t\t\t// chat\n\t\t\tif (item.chat)\n\t\t\t{\n\t\t\t\tresult.dialogues.push(this.prepareGroupChat(item));\n\n\t\t\t\tif (item.user.id && !this.isAddedAlready(result, 'dialogues', item.user.id))\n\t\t\t\t{\n\t\t\t\t\tresult.dialogues.push(this.prepareChatForAdditionalUser(item.user));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (item.user.id)\n\t\t\t{\n\t\t\t\tconst existingRecentItem = this.store.getters['recent/get'](item.user.id);\n\t\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t\t{\n\t\t\t\t\tresult.dialogues.push(this.prepareChatForUser(item));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recent\n\t\t\tresult.recent.push({...item});\n\t\t});\n\n\t\tbirthdayList.forEach(item => {\n\t\t\tif (!this.isAddedAlready(result, 'users', item.id))\n\t\t\t{\n\t\t\t\tresult.users.push(item);\n\t\t\t\tresult.dialogues.push(this.prepareChatForAdditionalUser(item));\n\t\t\t}\n\n\t\t\tif (!this.isAddedAlready(result, 'recent', item.id))\n\t\t\t{\n\t\t\t\tresult.recent.push(this.getBirthdayPlaceholder(item));\n\t\t\t}\n\t\t});\n\n\t\tLogger.warn(`Im.RecentList: prepared data for models`, result);\n\n\t\treturn result;\n\t}\n\n\tisAddedAlready(result: Object, type: 'users' | 'dialogues' | 'recent', id: string | number): boolean\n\t{\n\t\tif (type === 'users')\n\t\t{\n\t\t\treturn result.users.some(user => user.id === id);\n\t\t}\n\t\telse if (type === 'dialogues')\n\t\t{\n\t\t\treturn result.dialogues.some(chat => chat.dialogId === id);\n\t\t}\n\t\telse if (type === 'recent')\n\t\t{\n\t\t\treturn result.recent.some(item => item.id === id);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprepareGroupChat(item)\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id\n\t\t};\n\t}\n\n\tprepareChatForUser(item)\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: DialogType.user,\n\t\t\tcounter: item.counter\n\t\t};\n\t}\n\n\tprepareChatForAdditionalUser(user)\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: DialogType.user\n\t\t};\n\t}\n\n\tgetBirthdayPlaceholder(item: Object): Object\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\toptions: {\n\t\t\t\tbirthdayPlaceholder: true\n\t\t\t}\n\t\t};\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n}","import { DialogType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawPin,\n\tRawReaction,\n} from '../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === DialogType.lines;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { ChatDataExtractor } from '../chat-data-extractor';\n\nimport type { ChatLoadRestResult } from '../../types/rest';\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\t#requestChat(actionName: string, params: Object<string, any>): Promise\n\t{\n\t\tconst { dialogId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\treturn runAction(actionName, { data: params })\n\t\t\t.then((result: ChatLoadRestResult) => {\n\t\t\t\treturn this.#updateModels(result);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.#markDialogAsLoaded(dialogId);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string)\n\t{\n\t\treturn this.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateModels(restResult: ChatLoadRestResult): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\t\tif (extractor.isOpenlinesChat())\n\t\t{\n\t\t\treturn Promise.reject(new Error('OL chats are not supported'));\n\t\t}\n\n\t\tconst dialoguesPromise = this.#store.dispatch('dialogues/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t]);\n\n\t\treturn Promise.all([\n\t\t\tdialoguesPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t]);\n\t}\n}\n","import {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\ntype ChatConfig = {\n\ttitle: string,\n\tmembers: number[],\n\townerId: number,\n\tmanageType: string,\n\tisAvailableInSearch: boolean,\n\tdescription: string\n};\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tcreateChat(chatConfig: ChatConfig): Promise\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: {\n\t\t\t\ttitle: chatConfig.title,\n\t\t\t\tdescription: chatConfig.description,\n\t\t\t\tusers: chatConfig.members,\n\t\t\t\townerId: chatConfig.ownerId,\n\t\t\t\tsearchable: chatConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\t}\n\t\t}).then(result => {\n\t\t\tconst {chatId: newChatId} = result.data();\n\t\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\t\tconst newDialogId = `chat${newChatId}`;\n\t\t\tthis.#addChatToModel(newDialogId, chatConfig);\n\n\t\t\treturn newDialogId;\n\t\t}).catch(error => {\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: ChatConfig)\n\t{\n\t\tconst chatType = chatConfig.isAvailableInSearch ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tthis.#store.dispatch('dialogues/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.members.length\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['dialogues/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName\n\t\t}).then(result => {\n\t\t\tLogger.warn('ChatService: renameChat result', result.data());\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: title\n\t\t\t}\n\t\t});\n\t}\n}","import {Runtime} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport {ChatService} from '../../chat';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, ChatService.DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('dialogues/mute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'Y'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('dialogues/unmute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'N'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst {dialog_id: dialogId, action} = queryParams;\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch(error => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\t\t\tconst actionType = action === 'Y' ? 'dialogues/unmute' : 'dialogues/mute';\n\t\t\tthis.#store.dispatch(actionType, {dialogId});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'Y'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'N'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelDialog, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<messageId>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('dialogues/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll).catch(error => {\n\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: false});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {counter: 0}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {dialogId}).catch(error => {\n\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: true});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, {dialogId}).catch(error => {\n\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([queueChatId, messageIds]) => {\n\t\t\t\tqueueChatId = +queueChatId;\n\t\t\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\t\t\tif (messageIds.size === 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst copiedMessageIds = [...messageIds];\n\t\t\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\t\t\tthis.#readMessageOnClient(queueChatId, copiedMessageIds).then((readMessagesCount: number) => {\n\t\t\t\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\t\t\t\treturn this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\t\t\t\t}).then(() => {\n\t\t\t\t\treturn this.#readMessageOnServer(queueChatId, copiedMessageIds);\n\t\t\t\t}).then((readResult: ReadResult) => {\n\t\t\t\t\tthis.#checkChatCounter(readResult);\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t\t});\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && recentItem && !recentItem.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: true,\n\t\t}).catch(error => {\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds\n\t\t});\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\treturn this.#store.dispatch('dialogues/decreaseCounter', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tcount: readMessagesCount\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid()\n\t\t\t}\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst {chatId, counter} = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: {counter}\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['dialogues/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/getByChatId'](chatId);\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Messenger} from 'im.public';\nimport {Core} from 'im.v2.application.core';\nimport {Layout, RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst chatId = dialogId.slice(4);\n\t\tconst queryParams = {user_id: userId, chat_id: chatId};\n\t\tthis.#restClient.callMethod(RestMethod.imChatUserDelete, queryParams).catch(error => {\n\t\t\tconsole.error('Im.Lib.Menu: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n}","import {LoadService} from './classes/chat/load';\nimport {CreateService} from './classes/chat/create';\nimport {RenameService} from './classes/chat/rename';\nimport {MuteService} from './classes/chat/mute';\nimport {PinService} from './classes/chat/pin';\nimport {ReadService} from './classes/chat/read';\nimport {UserService} from './classes/chat/user';\n\nexport class ChatService\n{\n\tstatic DEBOUNCE_TIME = 500;\n\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {callBatch, runAction} from 'im.v2.lib.rest';\nimport {UserManager} from 'im.v2.lib.user';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport type {ImModelDialog} from 'im.v2.model';\nimport type {ImRestMessageResult, ImRestMessage} from '../../types/message';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: ImRestMessage[] = [];\n\t#preparedUnreadMessages: ImRestMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC'\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, {data: query}).then(result => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC'\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, {data: query}).then(result => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = {...result, hasPrevPage, hasNextPage: null};\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId]\n\t\t\t}\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\t\treturn callBatch(query).then(data => {\n\t\t\tLogger.warn('MessageService: loadContext result', data);\n\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t}).finally(() => {\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId).then(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages().then(() => {\n\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t});\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatMessageList, {\n\t\t\tchatId: this.#chatId,\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT\n\t\t}).then((result) => {\n\t\t\tLogger.warn('MessageService: loadInitialMessages result', result.data());\n\t\t\treturn this.#handleLoadedMessages(result.data());\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst {messages} = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: ImRestMessageResult): Promise\n\t{\n\t\tconst {files, users, usersShort, reactions, hasPrevPage, hasNextPage} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort)\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise, filesPromise, usersPromise, reactionsPromise\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields\n\t\t});\n\t}\n\n\t#getDialog(): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t}\n}","import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\t// EventEmitter.emit(EventType.dialog.scrollToBottom, {chatId});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport type { ImModelDialog } from 'im.v2.model';\n\nexport class EditService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited: true,\n\t\t\t},\n\t\t});\n\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tif (messageId === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: { text },\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imMessageUpdate, {\n\t\t\tID: messageId,\n\t\t\tMESSAGE: text,\n\t\t}).catch((error) => {\n\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelDialog, ImModelMessage } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tdeleteMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (message.viewedByOthers)\n\t\t{\n\t\t\tthis.#shallowMessageDelete(message);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#completeMessageDelete(message);\n\t\t}\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tparams: { IS_DELETED: 'Y', FILE_ID: [] },\n\t\t\t},\n\t\t});\n\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: { text: '' },\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.#deleteMessageOnServer(message.id);\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage)\n\t{\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId: message.id,\n\t\t\tchatId: dialog.chatId,\n\t\t});\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tlet updatedMessage = { text: '' };\n\t\t\tif (previousMessage)\n\t\t\t{\n\t\t\t\tupdatedMessage = previousMessage;\n\t\t\t}\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: updatedMessage,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst newLastId = previousMessage ? previousMessage.id : 0;\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tlastMessageId: newLastId,\n\t\t\t\t\tlastId: newLastId,\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.#store.dispatch('dialogues/clearLastMessageViews', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\tthis.#deleteMessageOnServer(message.id);\n\t}\n\n\t#deleteMessageOnServer(messageId: number)\n\t{\n\t\trunAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst {dialogId} = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: messageId\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}","import {Loc} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS')\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId: messageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}","import {LoadService} from './classes/message/load';\nimport {PinService} from './classes/message/pin';\nimport {EditService} from './classes/message/edit';\nimport {DeleteService} from './classes/message/delete';\nimport {MarkService} from './classes/message/mark';\nimport {FavoriteService} from './classes/message/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst {chatId} = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService(chatId);\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number)\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { EventType, MessageStatus, RestMethod, DialogScrollThreshold } from 'im.v2.const';\nimport { UploadingService, MessageService } from './registry';\n\nimport type { ImModelDialog } from 'im.v2.model';\nimport type { FileFromDisk, MessageWithFile } from './uploading';\n\ntype Message = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\ttext: string,\n\tparams: Object,\n\twithFile: boolean,\n\tunread: boolean,\n\tsending: boolean\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\t#uploadingService: UploadingService;\n\n\tstatic instance = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\n\t\tthis.#uploadingService = UploadingService.getInstance();\n\t}\n\n\tsendMessage(params: {text: string, fileId: string, tempMessageId: string, dialogId: string}): Promise\n\t{\n\t\tconst { text = '', fileId = '', tempMessageId, dialogId } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isStringFilled(fileId))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: sendMessage', params);\n\n\t\tconst message = this.#prepareMessage({ text, fileId, tempMessageId, dialogId });\n\n\t\treturn this.#handlePagination(dialogId)\n\t\t\t.then(() => {\n\t\t\t\treturn this.#addMessageToModels(message);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\t\t\treturn this.#sendMessageToServer(message);\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tif (message.withFile)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tLogger.warn('SendingService: sendMessage result -', result.data());\n\t\t\t\tthis.#updateModels({\n\t\t\t\t\toldId: message.temporaryId,\n\t\t\t\t\tnewId: result.data(),\n\t\t\t\t\tdialogId: message.dialogId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tconsole.error('SendingService: sendMessage error -', error);\n\t\t\t});\n\t}\n\n\tsendFilesFromInput(files: File[], dialogId: string)\n\t{\n\t\tif (files.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploadingService.uploadFiles({ files, dialogId, autoUpload: true }).then(({ files: uploaderFiles }) => {\n\t\t\tuploaderFiles.forEach((file) => {\n\t\t\t\tthis.sendMessage({\n\t\t\t\t\tfileId: file.getId(),\n\t\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\t\tdialogId: file.getCustomData('dialogId'),\n\t\t\t\t});\n\t\t\t});\n\t\t}).catch((error) => {\n\t\t\tLogger.error('SendingService: sendFilesFromInput error', error);\n\t\t});\n\t}\n\n\tsendFilesFromClipboard(files, dialogId): Promise\n\t{\n\t\treturn this.#uploadingService.uploadFiles({ files, dialogId, autoUpload: false });\n\t}\n\n\tsendFilesFromDisk(files: {[string]: FileFromDisk}, dialogId: string)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#uploadingService.uploadFileFromDisk(messageWithFile).then(() => {\n\t\t\t\treturn this.sendMessage({\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileId: messageWithFile.tempFileId,\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t});\n\t\t\t}).then(() => {\n\t\t\t\tthis.#uploadingService.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\tsendMessagesWithFiles(params: {groupFiles: boolean, text: string, uploaderId: string, dialogId: string, sendAsFile: boolean})\n\t{\n\t\tconst { groupFiles, text, uploaderId, dialogId, sendAsFile } = params;\n\n\t\tif (groupFiles)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst messagesToSend = [];\n\n\t\tconst files = this.#uploadingService.getFiles(uploaderId);\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.push({ dialogId, text });\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tif (sendAsFile)\n\t\t\t{\n\t\t\t\tfile.setCustomData('sendAsFile', true);\n\t\t\t}\n\n\t\t\tmessagesToSend.push({\n\t\t\t\tfileId: file.getId(),\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId: file.getCustomData('dialogId'),\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\tmessagesToSend.forEach((message) => {\n\t\t\tthis.sendMessage(message);\n\t\t});\n\n\t\tthis.#uploadingService.start(uploaderId);\n\t}\n\n\t#prepareMessage(params: {text: string, fileId: string, tempMessageId: string, dialogId: string}): Message\n\t{\n\t\tconst { text, fileId, tempMessageId, dialogId } = params;\n\n\t\tconst messageParams = {};\n\t\tif (fileId)\n\t\t{\n\t\t\tmessageParams.FILE_ID = [fileId];\n\t\t}\n\n\t\tconst temporaryId = tempMessageId || Utils.text.getUuidV4();\n\n\t\treturn {\n\t\t\ttemporaryId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tdialogId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\ttext,\n\t\t\tparams: messageParams,\n\t\t\twithFile: Boolean(fileId),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: Message): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tthis.#store.dispatch('dialogues/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: Message)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: {\n\t\t\t\t\tid: message.temporaryId,\n\t\t\t\t\ttext: message.text,\n\t\t\t\t\tauthorId: message.authorId,\n\t\t\t\t\tstatus: MessageStatus.received,\n\t\t\t\t\tsending: true,\n\t\t\t\t\tparams: { withFile: false, withAttach: false },\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendMessageToServer(element: Message): Promise\n\t{\n\t\tif (element.withFile)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst query = {\n\t\t\ttemplate_id: element.temporaryId,\n\t\t\tdialog_id: element.dialogId,\n\t\t};\n\t\tif (element.text)\n\t\t{\n\t\t\tquery.message = element.text;\n\t\t}\n\n\t\treturn Core.getRestClient().callMethod(RestMethod.imMessageAdd, query);\n\t}\n\n\t#updateModels(params: {oldId: string, newId: number, dialogId: string})\n\t{\n\t\tconst { oldId, newId, dialogId } = params;\n\t\tthis.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: {\n\t\t\t\tid: newId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: { sending: false },\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/get'](dialogId, true);\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploadingService.destroy();\n\t}\n}\n","import {Runtime, Type} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {NotificationTypesCodes, RestMethod, RestMethodHandler} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\ntype NotificationItemRest = {\n\tid: number,\n\tchat_id: number,\n\tauthor_id: number,\n\tdate: string,\n\tnotify_type: number,\n\tnotify_module: string,\n\tnotify_event: string,\n\tnotify_tag: string,\n\tnotify_sub_tag: string,\n\tnotify_title?: string,\n\tnotify_read: string,\n\tsetting_name: string,\n\ttext: string,\n\tnotify_buttons: string,\n\tparams?: Object\n};\n\ntype NotificationGetRestResult = {\n\tchat_id: number,\n\tnotifications: NotificationItemRest[],\n\ttotal_count: number,\n\ttotal_unread_count: number,\n\tusers: [],\n};\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\t'NOTIFY_ID': notificationId,\n\t\t\t'NOTIFY_VALUE': value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams).then(response => {\n\t\t\tLogger.warn(`NotificationService: sendConfirmAction: success`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\t}\n\n\tsendQuickAnswer(params)\n\t{\n\t\tconst {id, text, callbackSuccess = () => {}, callbackError = () => {}} = params;\n\n\t\tthis.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\tnotify_id: id,\n\t\t\tanswer_text: text\n\t\t}).then(response => {\n\t\t\tcallbackSuccess(response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t});\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', {id: idsToDelete}).then(response => {\n\t\t\tLogger.warn(`NotificationService: deleteRequest: success for ids: ${idsToDelete}`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\t'LIMIT': this.limitPerPage,\n\t\t\t'CONVERT_TEXT': 'Y'\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethodHandler.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams]\n\t\t};\n\n\t\tif (!firstPage)\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbatchQueryParams[RestMethodHandler.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethodHandler.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethodHandler.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethodHandler.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications) || notifications.length < this.limitPerPage)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}","import {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({chatId, fileId}): Promise\n\t{\n\t\tconst queryParams = {chat_id: chatId, file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = {file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}","import {RecentService} from '../../recent';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class UnreadRecentService extends RecentService\n{\n\tstatic instance = null;\n\n\tstatic getInstance(): UnreadRecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getUnreadCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('dialogues/set', dialogues);\n\n\t\tconst fakeRecent = this.getFakeData(recent);\n\t\tconst recentPromise = this.store.dispatch('recent/setUnread', fakeRecent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetFakeData(itemsForModel: Object[]): Object[]\n\t{\n\t\titemsForModel = itemsForModel.slice(-4);\n\t\titemsForModel.forEach(item => {\n\t\t\tthis.store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: item.id,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: 7\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn itemsForModel;\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\t//\n\t}\n}","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../../uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => !file.getCustomData('sendAsFile'),\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 400,\n\t\t\timagePreviewWidth: 400,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: () => {\n\t\t\t\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst addedFiles = [];\n\t\ttasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploading/uploader-wrapper';\n\nimport type { ImModelDialog, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile } from 'ui.uploader.core';\n\nexport type FileFromDisk = {\n\tid: string;\n\tname: string;\n\ttype: string;\n\tsize: string;\n\tsizeInt: string;\n\tmodifyBy: string;\n\tmodifyDate: string;\n\tmodifyDateInt: number;\n\text: string;\n\tfileType: string;\n};\n\nexport type MessageWithFile = {\n\ttempMessageId?: string,\n\ttempFileId: string,\n\tfile: FileFromDisk | File,\n\tdialogId: string,\n\tchatId?: number,\n\tuploaderId: string\n}\n\ntype FileCommitParams = {\n\ttemporaryFileId: string,\n\ttempMessageId: string,\n\tchatId: number,\n\trealFileId: number,\n\tfromDisk: boolean,\n\tsendAsFile: boolean,\n\tmessageText: string\n}\n\ntype UploadFilesParams = {\n\tfiles: File[],\n\tdialogId: string,\n\tautoUpload: boolean\n}\n\nexport class UploadingService\n{\n\t#store;\n\t#restClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#initUploader();\n\t}\n\n\tuploadFiles(params: UploadFilesParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst messageWithFile = this.#prepareMessageWithFile(file, dialogId, uploaderId);\n\t\t\t\tfilesForUploader.push(messageWithFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\n\t\t\treturn {\n\t\t\t\tfiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#addFileFromDiskToModel(messageWithFile);\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { file }: {file: UploaderFile} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\t\t\tthis.#uploadPreview(file);\n\n\t\t\tthis.commitFile({\n\t\t\t\trealFileId: file.getServerFileId(),\n\t\t\t\ttemporaryFileId: file.getId(),\n\t\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tmessageText: file.getCustomData('messageText') ?? '',\n\t\t\t\tsendAsFile: file.getCustomData('sendAsFile'),\n\t\t\t\tfromDisk: false,\n\t\t\t});\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tLogger.error('FilesService: upload error', error);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('dialogues/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\t#uploadPreview(file: UploaderFile)\n\t{\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\trunAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareMessageWithFile(file: File, dialogId: string, uploaderId): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tthis.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tthis.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\ttype: this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n"],"names":["RecentService","getInstance","instance","constructor","store","restClient","dataIsPreloaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","Core","getStore","getRestClient","onUpdateStateHandler","onUpdateState","bind","EventEmitter","subscribe","EventType","recent","updateState","getCollection","getters","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","requestItems","firstPage","loadNextPage","setPreloadedData","params","items","hasMore","getLastMessageDate","updateModels","hideChat","dialogId","recentItem","dispatch","id","chatIsOpened","Messenger","openChat","callMethod","RestMethod","imRecentHide","catch","error","console","queryParams","getQueryParams","getQueryMethod","then","result","data","imRecentList","rawData","users","dialogues","prepareDataForModels","usersPromise","botList","dialoguesPromise","recentPromise","all","birthdayList","forEach","item","user","isAddedAlready","push","chat","prepareGroupChat","prepareChatForAdditionalUser","existingRecentItem","options","default_user_record","prepareChatForUser","getBirthdayPlaceholder","type","some","counter","chatId","chat_id","avatar","color","name","DialogType","birthdayPlaceholder","length","slice","message","date","ChatDataExtractor","restResult","getChatId","isOpenlinesChat","lines","getChats","mainChat","hasPrevPage","hasNextPage","chats","UserManager","getDialogForUser","Object","values","getFiles","files","getUsers","getAdditionalUsers","usersShort","getMessages","messages","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","messageId","getReactions","reactions","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","actionName","fields","loading","inited","extractor","reject","Error","filesPromise","userManager","addUsersToModel","messagesPromise","clearCollection","pinnedMessages","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","imV2ChatAdd","title","description","members","ownerId","searchable","isAvailableInSearch","newChatId","newDialogId","chatType","toLowerCase","userCounter","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","Runtime","debounce","ChatService","DEBOUNCE_TIME","muteChat","unmuteChat","action","imChatMute","actionText","actionType","PinService","pinChat","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","Set","add","clearTimeout","readTimeout","setTimeout","entries","queueChatId","messageIds","size","copiedMessageIds","readMessagesCount","readResult","clearDialogMark","markedId","unread","onlyRecent","maxMessageId","Math","max","lastReadId","lastId","count","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","user_id","imChatUserDelete","leaveChat","getUserId","loadUnread","lastUnreadMessageId","query","filter","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","reloadMessageList","targetMessageId","savedPositionMessageId","wasInitedBefore","loadInitialMessages","imV2ChatMessageList","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","isEdited","lastMessageId","imMessageUpdate","ID","MESSAGE","DeleteService","deleteMessage","viewedByOthers","IS_DELETED","FILE_ID","previousMessage","updatedMessage","newLastId","imV2ChatMessageDelete","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","UploadingService","sendMessage","fileId","tempMessageId","Type","isStringFilled","force","withFile","oldId","temporaryId","newId","sendFilesFromInput","uploadFiles","autoUpload","uploaderFiles","file","getId","getCustomData","sendFilesFromClipboard","sendFilesFromDisk","messageWithFile","uploadFileFromDisk","tempFileId","commitFile","temporaryFileId","realFileId","fromDisk","sendMessagesWithFiles","groupFiles","uploaderId","sendAsFile","messagesToSend","hasText","getError","getUuidV4","setCustomData","start","destroy","messageParams","authorId","Boolean","sending","messageService","status","MessageStatus","received","withAttach","element","template_id","imMessageAdd","emit","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","NotificationService","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","value","requestParams","response","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","batchQueryParams","RestMethodHandler","imNotifyGet","LAST_ID","LAST_TYPE","imNotifySchemaGet","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","isArrayFilled","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","UnreadRecentService","fakeRecent","getFakeData","itemsForModel","UploaderWrapper","setEventNamespace","eventNamespace","uploader","cancel","createUploader","diskFolderId","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","removeFilesFromServer","setAutoUpload","addFiles","tasks","addedFiles","task","unsubscribe","addFile","customData","getData","onFileUploadCancel","uploaderList","getFile","remove","checkDiskFolderId","filesForUploader","messageText","fileIdParams","disk_id","upload_id","toString","imDiskFileCommit","file_template_id","as_file","getFileTypeByExtension","ext","extension","sizeInt","FileStatus","wait","progress","authorName","getProgress","upload","getServerFileId","imDiskFolderGet","commit","previewFile","getClientPreview","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","getBinary","previewData","isFailed","getSize","preview","blob","getPreviewUrl","width","getPreviewWidth","height","getPreviewHeight","image","urlPreview","fileType","FileType","startsWith","video","split","splice"],"mappings":"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"}