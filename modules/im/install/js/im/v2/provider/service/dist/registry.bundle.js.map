{"version":3,"file":"registry.bundle.js","sources":["../src/recent.js","../src/classes/chat-data-extractor.js","../src/classes/chat/load.js","../src/classes/chat/create.js","../src/classes/chat/rename.js","../src/classes/chat/mute.js","../src/classes/chat/pin.js","../src/classes/chat/read.js","../src/classes/chat/user.js","../src/chat.js","../src/classes/message/load.js","../src/classes/message/pin.js","../src/classes/message/edit.js","../src/classes/message/delete.js","../src/classes/message/mark.js","../src/classes/message/favorite.js","../src/message.js","../src/classes/sending/upload-manager.js","../src/classes/sending/file.js","../src/sending.js","../src/notification.js","../src/classes/recent/unread-recent.js"],"sourcesContent":["import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\n\nimport {Messenger} from 'im.public';\nimport {Core} from 'im.v2.application.core';\nimport {DialogType, EventType, Layout, RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tstore: Object = null;\n\trestClient: RestClient = null;\n\n\tdataIsPreloaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\n\t\tthis.onUpdateStateHandler = this.onUpdateState.bind(this);\n\t\tEventEmitter.subscribe(EventType.recent.updateState, this.onUpdateStateHandler);\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getRecentCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn(`Im.RecentList: first page was preloaded`);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn(`Im.RecentList: setting preloaded data`, params);\n\t\tconst {items, hasMore} = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId)\n\t{\n\t\tLogger.warn(`Im.RecentList: hide chat`, dialogId);\n\t\tconst recentItem = this.store.getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.store.dispatch('recent/delete', {\n\t\t\tid: dialogId\n\t\t});\n\n\t\tconst chatIsOpened = this.store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tthis.restClient.callMethod(RestMethod.imRecentHide, {'DIALOG_ID': dialogId}).catch(error => {\n\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t});\n\t}\n\t// endregion public\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\treturn this.restClient.callMethod(this.getQueryMethod(), queryParams).then((result) => {\n\t\t\tthis.pagesLoaded++;\n\t\t\tLogger.warn(`Im.RecentList: ${firstPage? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\t\tconst {items, hasMore} = result.data();\n\n\t\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\t\tif (!hasMore)\n\t\t\t{\n\t\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t\t}\n\n\t\t\treturn this.updateModels(result.data()).then(() => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t});\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): Object\n\t{\n\t\treturn {\n\t\t\t'SKIP_OPENLINES': 'Y',\n\t\t\t'LIMIT': this.itemsPerPage,\n\t\t\t'LAST_MESSAGE_DATE': firstPage? null : this.lastMessageDate,\n\t\t\t'GET_ORIGINAL_TEXT': 'Y'\n\t\t};\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tif (rawData.botList)\n\t\t{\n\t\t\tthis.store.dispatch('users/setBotList', rawData.botList);\n\t\t}\n\t\tconst dialoguesPromise = this.store.dispatch('dialogues/set', dialogues);\n\t\tconst recentPromise = this.store.dispatch('recent/setRecent', recent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\tLogger.warn(`Im.RecentList: setting UpdateState data`, data);\n\t\tthis.updateModels(data);\n\t}\n\n\tprepareDataForModels({items, birthdayList = []}): {users: Array, dialogues: Array, recent: Array}\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tdialogues: [],\n\t\t\trecent: []\n\t\t};\n\n\t\titems.forEach(item => {\n\t\t\t// user\n\t\t\tif (item.user && item.user.id && !this.isAddedAlready(result, 'users', item.user.id))\n\t\t\t{\n\t\t\t\tresult.users.push(item.user);\n\t\t\t}\n\n\t\t\t// chat\n\t\t\tif (item.chat)\n\t\t\t{\n\t\t\t\tresult.dialogues.push(this.prepareGroupChat(item));\n\n\t\t\t\tif (item.user.id && !this.isAddedAlready(result, 'dialogues', item.user.id))\n\t\t\t\t{\n\t\t\t\t\tresult.dialogues.push(this.prepareChatForAdditionalUser(item.user));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (item.user.id)\n\t\t\t{\n\t\t\t\tconst existingRecentItem = this.store.getters['recent/get'](item.user.id);\n\t\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t\t{\n\t\t\t\t\tresult.dialogues.push(this.prepareChatForUser(item));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recent\n\t\t\tresult.recent.push({...item});\n\t\t});\n\n\t\tbirthdayList.forEach(item => {\n\t\t\tif (!this.isAddedAlready(result, 'users', item.id))\n\t\t\t{\n\t\t\t\tresult.users.push(item);\n\t\t\t\tresult.dialogues.push(this.prepareChatForAdditionalUser(item));\n\t\t\t}\n\n\t\t\tif (!this.isAddedAlready(result, 'recent', item.id))\n\t\t\t{\n\t\t\t\tresult.recent.push(this.getBirthdayPlaceholder(item));\n\t\t\t}\n\t\t});\n\n\t\tLogger.warn(`Im.RecentList: prepared data for models`, result);\n\n\t\treturn result;\n\t}\n\n\tisAddedAlready(result: Object, type: 'users' | 'dialogues' | 'recent', id: string | number): boolean\n\t{\n\t\tif (type === 'users')\n\t\t{\n\t\t\treturn result.users.some(user => user.id === id);\n\t\t}\n\t\telse if (type === 'dialogues')\n\t\t{\n\t\t\treturn result.dialogues.some(chat => chat.dialogId === id);\n\t\t}\n\t\telse if (type === 'recent')\n\t\t{\n\t\t\treturn result.recent.some(item => item.id === id);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprepareGroupChat(item)\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id\n\t\t};\n\t}\n\n\tprepareChatForUser(item)\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: DialogType.user,\n\t\t\tcounter: item.counter\n\t\t};\n\t}\n\n\tprepareChatForAdditionalUser(user)\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: DialogType.user\n\t\t};\n\t}\n\n\tgetBirthdayPlaceholder(item: Object): Object\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\toptions: {\n\t\t\t\tbirthdayPlaceholder: true\n\t\t\t}\n\t\t};\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n}","import {RestMethod, DialogType} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\nexport class ChatDataExtractor\n{\n\tresponse: Object = {};\n\tchatId: number = 0;\n\tdialogId: string = '';\n\n\trawUsers: Array = [];\n\n\tusers: Object = {};\n\tdialogues: Object = {};\n\tfiles: Object = {};\n\tmessages: Object = {};\n\treactions: Object[] = [];\n\tadditionalUsers: Object[] = [];\n\tmessagesToStore: Object = {};\n\tpinnedMessageIds: number[] = [];\n\n\tconstructor(response: Object)\n\t{\n\t\tthis.response = response;\n\t}\n\n\textractData()\n\t{\n\t\tthis.extractChatResult();\n\t\tthis.extractUserResult();\n\t\tthis.extractMessageListResult();\n\t\tthis.extractContextResult();\n\t\tthis.extractPinnedMessagesResult();\n\n\t\tthis.fillChatsForUsers();\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\tconst chat = this.dialogues[this.dialogId];\n\t\tif (!chat)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn chat.type === DialogType.lines;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.chatId;\n\t}\n\n\tgetUsers(): Array\n\t{\n\t\treturn this.rawUsers;\n\t}\n\n\tgetDialogues(): Array\n\t{\n\t\treturn Object.values(this.dialogues);\n\t}\n\n\tgetMessages(): Array\n\t{\n\t\treturn Object.values(this.messages);\n\t}\n\n\tgetMessagesToStore(): Array\n\t{\n\t\treturn Object.values(this.messagesToStore);\n\t}\n\n\tgetFiles(): Array\n\t{\n\t\treturn Object.values(this.files);\n\t}\n\n\tgetPinnedMessages(): number[]\n\t{\n\t\treturn this.pinnedMessageIds;\n\t}\n\n\tgetReactions(): Object[]\n\t{\n\t\treturn this.reactions;\n\t}\n\n\tgetAdditionalUsers(): Object[]\n\t{\n\t\treturn this.additionalUsers;\n\t}\n\n\textractChatResult()\n\t{\n\t\tconst chat = this.response[RestMethod.imChatGet];\n\t\tthis.chatId = chat.id;\n\t\tthis.dialogId = chat.dialog_id;\n\t\tif (!this.dialogues[chat.dialog_id])\n\t\t{\n\t\t\tthis.dialogues[chat.dialog_id] = chat;\n\t\t}\n\t}\n\n\textractUserResult()\n\t{\n\t\t// solo user for group chats\n\t\tconst soloUser = this.response[RestMethod.imUserGet];\n\t\tif (soloUser)\n\t\t{\n\t\t\tthis.rawUsers = [soloUser];\n\t\t\treturn;\n\t\t}\n\n\t\t// two users for 1v1\n\t\tconst userList = this.response[RestMethod.imUserListGet];\n\t\tif (userList)\n\t\t{\n\t\t\tthis.rawUsers = Object.values(userList);\n\t\t}\n\t}\n\n\textractMessageListResult()\n\t{\n\t\tconst messageList = this.response[RestMethod.imV2ChatMessageList];\n\t\tif (!messageList)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.extractPaginationFlags(messageList);\n\t\tthis.extractMessages(messageList);\n\t\tthis.extractReactions(messageList);\n\t\tthis.extractAdditionalUsers(messageList);\n\t}\n\n\textractPaginationFlags(data: {hasNextPage: boolean, hasPrevPage: boolean})\n\t{\n\t\tconst {hasPrevPage, hasNextPage} = data;\n\t\tthis.dialogues[this.dialogId] = {...this.dialogues[this.dialogId], hasPrevPage, hasNextPage};\n\t}\n\n\textractContextResult()\n\t{\n\t\tconst contextMessageList = this.response[RestMethod.imV2ChatMessageGetContext];\n\t\tif (!contextMessageList)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.extractPaginationFlags(contextMessageList);\n\t\tthis.extractMessages(contextMessageList);\n\t\tthis.extractReactions(contextMessageList);\n\t\tthis.extractAdditionalUsers(contextMessageList);\n\t}\n\n\textractReactions(data: {reactions: Object[]})\n\t{\n\t\tconst {reactions} = data;\n\t\tthis.reactions = reactions;\n\t}\n\n\textractAdditionalUsers(data: {usersShort: Object[]})\n\t{\n\t\tconst {usersShort} = data;\n\t\tthis.additionalUsers = usersShort;\n\t}\n\n\textractPinnedMessagesResult()\n\t{\n\t\tconst pinMessageList = this.response[RestMethod.imV2ChatPinTail];\n\t\tif (!pinMessageList)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst {list = [], users: pinnedUsers = [], files: pinnedFiles = []} = pinMessageList;\n\t\tthis.rawUsers = [...this.rawUsers, ...pinnedUsers];\n\t\tpinnedFiles.forEach(file => {\n\t\t\tthis.files[file.id] = file;\n\t\t});\n\t\tlist.forEach(pinnedItem => {\n\t\t\tthis.pinnedMessageIds.push(pinnedItem.messageId);\n\t\t\tthis.messagesToStore[pinnedItem.message.id] = pinnedItem.message;\n\t\t});\n\t}\n\n\textractMessages(data: {messages: Object[], users: Object[], files: Object[]})\n\t{\n\t\tconst {messages, users, files} = data;\n\t\tfiles.forEach(file => {\n\t\t\tthis.files[file.id] = file;\n\t\t});\n\t\tmessages.forEach(message => {\n\t\t\tthis.messages[message.id] = message;\n\t\t});\n\n\t\tthis.rawUsers = [...this.rawUsers, ...users];\n\t}\n\n\tfillChatsForUsers()\n\t{\n\t\tthis.rawUsers.forEach(user => {\n\t\t\tif (!this.dialogues[user.id])\n\t\t\t{\n\t\t\t\tthis.dialogues[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dialogues[user.id] = {...this.dialogues[user.id], ...UserManager.getDialogForUser(user)};\n\t\t\t}\n\t\t});\n\t}\n}","import {Type} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {callBatch} from 'im.v2.lib.rest';\nimport {MessageService} from 'im.v2.provider.service';\nimport {UserManager} from 'im.v2.lib.user';\n\nimport {ChatDataExtractor} from '../chat-data-extractor';\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tif (!Type.isStringFilled(dialogId))\n\t\t{\n\t\t\treturn Promise.reject(new Error('ChatService: loadChat: dialogId is not provided'));\n\t\t}\n\n\t\tconst query = this.#prepareLoadChatQuery(dialogId);\n\n\t\treturn this.#loadChatRequest(dialogId, query);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tif (!Type.isStringFilled(dialogId))\n\t\t{\n\t\t\treturn Promise.reject(new Error('ChatService: loadChatWithMessages: dialogId is not provided'));\n\t\t}\n\n\t\tconst query = this.#prepareLoadChatWithMessagesQuery(dialogId);\n\n\t\treturn this.#loadChatRequest(dialogId, query);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tif (!Type.isStringFilled(dialogId))\n\t\t{\n\t\t\treturn Promise.reject(new Error('ChatService: loadChatWithContext: dialogId is not provided'));\n\t\t}\n\n\t\tif (!messageId || !Type.isNumber(messageId))\n\t\t{\n\t\t\treturn Promise.reject(new Error('ChatService: loadChatWithContext: messageId is not provided'));\n\t\t}\n\n\t\tconst query = this.#prepareLoadChatWithContextQuery(dialogId, messageId);\n\n\t\treturn this.#loadChatRequest(dialogId, query);\n\t}\n\n\t#loadChatRequest(dialogId: string, query: Object): Promise\n\t{\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: dialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true\n\t\t\t}\n\t\t});\n\n\t\treturn callBatch(query).then(data => {\n\t\t\treturn this.#updateModels(data);\n\t\t}).then(() => {\n\t\t\treturn this.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tinited: true,\n\t\t\t\t\tloading: false\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t#updateModels(response: Object): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(response);\n\t\textractor.extractData();\n\n\t\tif (extractor.isOpenlinesChat())\n\t\t{\n\t\t\treturn Promise.reject('OL chats are not supported');\n\t\t}\n\n\t\tconst dialoguesPromise = this.#store.dispatch('dialogues/set', extractor.getDialogues());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = [\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers())\n\t\t];\n\n\t\tconst messagesPromise = [\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessages()\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions())\n\t\t];\n\n\t\treturn Promise.all([\n\t\t\tdialoguesPromise,\n\t\t\tfilesPromise,\n\t\t\tPromise.all(usersPromise),\n\t\t\tPromise.all(messagesPromise)\n\t\t]);\n\t}\n\n\t#prepareLoadChatQuery(dialogId: string): Object\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imChatGet]: {dialog_id: dialogId}\n\t\t};\n\t\tconst isChat = dialogId.toString().startsWith('chat');\n\t\tif (isChat)\n\t\t{\n\t\t\tquery[RestMethod.imUserGet] = {};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tquery[RestMethod.imUserListGet] = {id: [Core.getUserId(), dialogId]};\n\t\t}\n\n\t\treturn query;\n\t}\n\n\t#prepareLoadChatWithMessagesQuery(dialogId: string): Object\n\t{\n\t\tconst query = this.#prepareLoadChatQuery(dialogId);\n\n\t\tquery[RestMethod.imV2ChatMessageList] = {\n\t\t\tdialogId,\n\t\t\tlimit: MessageService.getMessageRequestLimit()\n\t\t};\n\t\tquery[RestMethod.imV2ChatPinTail] = {\n\t\t\tchatId: `$result[${RestMethod.imChatGet}][id]`\n\t\t};\n\n\t\treturn query;\n\t}\n\n\t#prepareLoadChatWithContextQuery(dialogId: string, messageId: number): Object\n\t{\n\t\tconst query = this.#prepareLoadChatQuery(dialogId);\n\n\t\tquery[RestMethod.imV2ChatMessageGetContext] = {\n\t\t\tid: messageId,\n\t\t\trange: MessageService.getMessageRequestLimit()\n\t\t};\n\t\tquery[RestMethod.imV2ChatMessageRead] = {\n\t\t\tdialogId,\n\t\t\tids: [messageId]\n\t\t};\n\n\t\treturn query;\n\t}\n}","import {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\ntype ChatConfig = {\n\ttitle: string,\n\tmembers: number[],\n\townerId: number,\n\tmanageType: string,\n\tisAvailableInSearch: boolean,\n\tdescription: string\n};\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tcreateChat(chatConfig: ChatConfig): Promise\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: {\n\t\t\t\ttitle: chatConfig.title,\n\t\t\t\tdescription: chatConfig.description,\n\t\t\t\tusers: chatConfig.members,\n\t\t\t\townerId: chatConfig.ownerId,\n\t\t\t\tsearchable: chatConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\t}\n\t\t}).then(result => {\n\t\t\tconst {chatId: newChatId} = result.data();\n\t\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\t\tconst newDialogId = `chat${newChatId}`;\n\t\t\tthis.#addChatToModel(newDialogId, chatConfig);\n\n\t\t\treturn newDialogId;\n\t\t}).catch(error => {\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: ChatConfig)\n\t{\n\t\tconst chatType = chatConfig.isAvailableInSearch ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tthis.#store.dispatch('dialogues/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.members.length\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['dialogues/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName\n\t\t}).then(result => {\n\t\t\tLogger.warn('ChatService: renameChat result', result.data());\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: title\n\t\t\t}\n\t\t});\n\t}\n}","import {Runtime} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport {ChatService} from '../../chat';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, ChatService.DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('dialogues/mute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'Y'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('dialogues/unmute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'N'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst {dialog_id: dialogId, action} = queryParams;\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch(error => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\t\t\tconst actionType = action === 'Y' ? 'dialogues/unmute' : 'dialogues/mute';\n\t\t\tthis.#store.dispatch(actionType, {dialogId});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'Y'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'N'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\nimport {UuidManager} from 'im.v2.lib.uuid';\nimport {runAction} from 'im.v2.lib.rest';\n\nimport type {ImModelDialog} from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<messageId>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('dialogues/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll).catch(error => {\n\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: false});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {counter: 0}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {dialogId}).catch(error => {\n\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: true});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, {dialogId}).catch(error => {\n\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([queueChatId, messageIds]) => {\n\t\t\t\tqueueChatId = +queueChatId;\n\t\t\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\t\t\tif (messageIds.size === 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst copiedMessageIds = [...messageIds];\n\t\t\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\t\t\tthis.#readMessageOnClient(queueChatId, copiedMessageIds).then((readMessagesCount: number) => {\n\t\t\t\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\t\t\t\treturn this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\t\t\t\t}).then(() => {\n\t\t\t\t\treturn this.#readMessageOnServer(queueChatId, copiedMessageIds);\n\t\t\t\t}).then((readResult: ReadResult) => {\n\t\t\t\t\tthis.#checkChatCounter(readResult);\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t\t});\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: true\n\t\t}).catch(error => {\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds\n\t\t});\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\treturn this.#store.dispatch('dialogues/decreaseCounter', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tcount: readMessagesCount\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid()\n\t\t\t}\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst {chatId, counter} = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: {counter}\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['dialogues/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/getByChatId'](chatId);\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Messenger} from 'im.public';\nimport {Core} from 'im.v2.application.core';\nimport {Layout, RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst chatId = dialogId.slice(4);\n\t\tconst queryParams = {user_id: userId, chat_id: chatId};\n\t\tthis.#restClient.callMethod(RestMethod.imChatUserDelete, queryParams).catch(error => {\n\t\t\tconsole.error('Im.Lib.Menu: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n}","import {LoadService} from './classes/chat/load';\nimport {CreateService} from './classes/chat/create';\nimport {RenameService} from './classes/chat/rename';\nimport {MuteService} from './classes/chat/mute';\nimport {PinService} from './classes/chat/pin';\nimport {ReadService} from './classes/chat/read';\nimport {UserService} from './classes/chat/user';\n\nexport class ChatService\n{\n\tstatic DEBOUNCE_TIME = 500;\n\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {callBatch, runAction} from 'im.v2.lib.rest';\nimport {UserManager} from 'im.v2.lib.user';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport type {ImModelDialog} from 'im.v2.model';\nimport type {ImRestMessageResult, ImRestMessage} from '../../types/message';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: ImRestMessage[] = [];\n\t#preparedUnreadMessages: ImRestMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC'\n\t\t\t}\n\t\t};\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, {data: query}).then(result => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC'\n\t\t\t}\n\t\t};\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, {data: query}).then(result => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = {...result, hasPrevPage, hasNextPage: null};\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId]\n\t\t\t}\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\t\treturn callBatch(query).then(data => {\n\t\t\tLogger.warn('MessageService: loadContext result', data);\n\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t}).finally(() => {\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId).then(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages().then(() => {\n\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t});\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatMessageList, {\n\t\t\tchatId: this.#chatId,\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT\n\t\t}).then((result) => {\n\t\t\tLogger.warn('MessageService: loadInitialMessages result', result.data());\n\t\t\treturn this.#handleLoadedMessages(result.data());\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst {messages} = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: ImRestMessageResult): Promise\n\t{\n\t\tconst {files, users, usersShort, reactions, hasPrevPage, hasNextPage} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort)\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise, filesPromise, usersPromise, reactionsPromise\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields\n\t\t});\n\t}\n\n\t#getDialog(): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t}\n}","import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\t// EventEmitter.emit(EventType.dialog.scrollToBottom, {chatId});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport type {ImModelDialog} from 'im.v2.model';\n\nexport class EditService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited: true\n\t\t\t}\n\t\t});\n\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tif (messageId === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: {text}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imMessageUpdate, {\n\t\t\t'ID': messageId,\n\t\t\t'MESSAGE': text\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: editMessageText error:', error);\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport type {ImModelDialog} from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdeleteMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tparams: {'IS_DELETED': 'Y', 'FILE_ID': []}\n\t\t\t},\n\t\t});\n\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tif (messageId === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: {text: ''}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imMessageDelete, {\n\t\t\t'ID': messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst {dialogId} = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: messageId\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}","import {Loc} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_SAVE_MESSAGE_SUCCESS')\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId: messageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}","import {LoadService} from './classes/message/load';\nimport {PinService} from './classes/message/pin';\nimport {EditService} from './classes/message/edit';\nimport {DeleteService} from './classes/message/delete';\nimport {MarkService} from './classes/message/mark';\nimport {FavoriteService} from './classes/message/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst {chatId} = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService(chatId);\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number)\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}","import {BaseEvent, EventEmitter} from 'main.core.events';\nimport {Uploader, PreviewManager} from 'im.v2.lib.uploader';\nimport {EventType} from 'im.v2.const';\nimport {Core} from 'im.v2.application.core';\n\nexport class UploadManager extends EventEmitter\n{\n\t#uploader: Uploader;\n\t#store: Object;\n\t#restClient: Object;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Textarea.UploadManager';\n\n\tstatic events = {\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.setEventNamespace(UploadManager.eventNamespace);\n\n\t\tthis.onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.onUploadCancelHandler);\n\n\t\tthis.initUploader();\n\t}\n\n\t#getFilePreview(file: File): Promise<{preview?: Object}>\n\t{\n\t\treturn PreviewManager.get(file).then((preview: {blob: Blob, width: number, height: number}) => {\n\t\t\treturn {preview};\n\t\t}).catch(error => {\n\t\t\tconsole.warn(`Couldn't get preview for file ${file.name}. Error: ${error}`);\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tinitUploader()\n\t{\n\t\tthis.#uploader = new Uploader();\n\n\t\tthis.#uploader.subscribe(Uploader.EVENTS.startUpload, this.#onStartUpload.bind(this));\n\t\tthis.#uploader.subscribe(Uploader.EVENTS.progressUpdate, this.#onProgress.bind(this));\n\t\tthis.#uploader.subscribe(Uploader.EVENTS.complete, this.#onComplete.bind(this));\n\t\tthis.#uploader.subscribe(Uploader.EVENTS.fileMaxSizeExceeded, this.#onUploadError.bind(this));\n\t\tthis.#uploader.subscribe(Uploader.EVENTS.uploadFileError, this.#onUploadError.bind(this));\n\t\tthis.#uploader.subscribe(Uploader.EVENTS.createFileError, this.#onUploadError.bind(this));\n\t}\n\n\t#onStartUpload(event: BaseEvent)\n\t{\n\t\tthis.emit(UploadManager.events.onFileUploadProgress, event);\n\t}\n\n\t#onProgress(event: BaseEvent)\n\t{\n\t\tthis.emit(UploadManager.events.onFileUploadProgress, event);\n\t}\n\n\t#onComplete(event: BaseEvent)\n\t{\n\t\tthis.emit(UploadManager.events.onFileUploadComplete, event);\n\t}\n\n\t#onUploadError(event: BaseEvent)\n\t{\n\t\tthis.emit(UploadManager.events.onFileUploadError, event);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tthis.emit(UploadManager.events.onFileUploadCancel, event);\n\t}\n\n\taddUploadTask(temporaryFileId: string, file: File, diskFolderId: number): Promise\n\t{\n\t\treturn this.#getFilePreview(file).then(({preview}) => {\n\t\t\tconst previewBlob = preview ? {previewBlob: preview.blob} : {};\n\n\t\t\tthis.#uploader.addTask({\n\t\t\t\ttaskId: temporaryFileId,\n\t\t\t\tfileData: file,\n\t\t\t\tfileName: file.name,\n\t\t\t\tdiskFolderId: diskFolderId,\n\t\t\t\tgenerateUniqueName: true,\n\t\t\t\t...previewBlob\n\t\t\t});\n\n\t\t\treturn {taskId: temporaryFileId, file: file, preview: preview};\n\t\t});\n\t}\n\n\tcancel(taskId: string)\n\t{\n\t\tthis.#uploader.deleteTask(taskId);\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.onUploadCancelHandler);\n\t}\n}","import {BaseEvent, EventEmitter} from 'main.core.events';\nimport {Core} from 'im.v2.application.core';\nimport {FileStatus, FileType, RestMethod} from 'im.v2.const';\nimport {Utils} from 'im.v2.lib.utils';\nimport {UploadManager} from './upload-manager';\nimport type {ImModelDialog, ImModelUser} from 'im.v2.model';\n\nexport type FileFromDisk = {\n\tid: string;\n\tname: string;\n\ttype: string;\n\tsize: string;\n\tsizeInt: string;\n\tmodifyBy: string;\n\tmodifyDate: string;\n\tmodifyDateInt: number;\n\text: string;\n\tfileType: string;\n};\n\nexport type MessageWithFile = {\n\ttemporaryMessageId?: string,\n\ttemporaryFileId: string,\n\trawFile: FileFromDisk | File,\n\tdiskFolderId?: number,\n\tdialogId: string,\n\tchatId?: number\n}\n\nexport class FileService extends EventEmitter\n{\n\t#store;\n\t#restClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: {[string]: Promise} = {};\n\t#uploadManager: UploadManager;\n\t#uploadRegistry: {[string]: {dialogId: string, chatId: string}} = {};\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Textarea.UploadingService';\n\n\tstatic events = {\n\t\tsendMessageWithFile: 'sendMessageWithFile',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(FileService.eventNamespace);\n\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#uploadManager = new UploadManager();\n\n\t\tthis.#initUploadManager();\n\t}\n\n\tuploadFile(messageWithFile: MessageWithFile): Promise\n\t{\n\t\tconst {temporaryFileId, rawFile, diskFolderId} = messageWithFile;\n\n\t\tthis.#addFileToUploadRegistry(temporaryFileId, messageWithFile);\n\n\t\treturn this.#uploadManager.addUploadTask(temporaryFileId, rawFile, diskFolderId).then(uploadTask => {\n\t\t\treturn this.#addFileToModel(uploadTask);\n\t\t});\n\t}\n\n\tuploadFileFromDisk(messageWithFile: MessageWithFile): Promise\n\t{\n\t\tconst {temporaryFileId, rawFile} = messageWithFile;\n\n\t\tthis.#addFileToUploadRegistry(temporaryFileId, messageWithFile);\n\n\t\treturn this.#addFileFromDiskToModel(temporaryFileId, rawFile);\n\t}\n\n\t#addFileFromDiskToModel(id: string, file: FileFromDisk): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: id,\n\t\t\tchatId: this.getMessageWithFile(id).chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(file.ext),\n\t\t\textension: file.ext,\n\t\t\tsize: file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploadManager()\n\t{\n\t\tthis.#uploadManager = new UploadManager();\n\t\tthis.#uploadManager.subscribe(UploadManager.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst {task} = event.getData();\n\t\t\tthis.#updateFileProgress(task.taskId, task.progress, FileStatus.upload);\n\t\t});\n\t\tthis.#uploadManager.subscribe(UploadManager.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst {task, result} = event.getData();\n\t\t\tthis.#updateFileProgress(task.taskId, task.progress, FileStatus.wait);\n\n\t\t\tthis.commitFile({\n\t\t\t\ttemporaryFileId: task.taskId,\n\t\t\t\trealFileId: result.data.file.id,\n\t\t\t\tfromDisk: false,\n\t\t\t});\n\t\t});\n\t\tthis.#uploadManager.subscribe(UploadManager.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst {task} = event.getData();\n\t\t\tthis.#updateFileProgress(task.taskId, 0, FileStatus.error);\n\t\t});\n\t\tthis.#uploadManager.subscribe(UploadManager.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst {taskId} = event.getData();\n\t\t\tthis.#cancelUpload(taskId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, {chat_id: this.#getChatId(dialogId)}).then(response => {\n\t\t\t\tconst {ID: diskFolderId} = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('dialogues/update', {\n\t\t\t\t\tdialogId: dialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId: diskFolderId,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch(error => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: {temporaryFileId: string, realFileId: number, fromDisk: boolean})\n\t{\n\t\tconst {temporaryFileId, realFileId, fromDisk} = params;\n\n\t\tconst messageWithFile = this.getMessageWithFile(temporaryFileId);\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId;\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: messageWithFile.chatId,\n\t\t\tmessage: '', // we don't have feature to send files with text right now\n\t\t\ttemplate_id: messageWithFile.temporaryMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\t...fileIdParams\n\t\t}).catch(error => {\n\t\t\tconsole.error('fileCommit error', error);\n\t\t});\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: id,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus: status,\n\t\t\t}\n\t\t});\n\t}\n\n\t#cancelUpload(taskId: string)\n\t{\n\t\tconst messageId = this.getMessageWithFile(taskId).temporaryMessageId;\n\n\t\tthis.#store.dispatch('messages/delete', {id: messageId});\n\t\tthis.#uploadManager.cancel(taskId);\n\t}\n\n\t#addFileToModel(fileToUpload: {taskId: string, file: File, preview: {height: string, width: string, blob: Blob}}): Promise\n\t{\n\t\tconst {taskId, file, preview} = fileToUpload;\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = URL.createObjectURL(preview.blob);\n\t\t}\n\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: this.getMessageWithFile(taskId).chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: file.name,\n\t\t\ttype: this.#getFileType(file),\n\t\t\textension: this.#getFileExtension(file),\n\t\t\tsize: file.size,\n\t\t\tstatus: FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData\n\t\t});\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#addFileToUploadRegistry(fileId: string, fileToUpload: MessageWithFile)\n\t{\n\t\tthis.#uploadRegistry[fileId] = {\n\t\t\tchatId: this.#getChatId(fileToUpload.dialogId),\n\t\t\t...fileToUpload\n\t\t};\n\t}\n\n\tgetMessageWithFile(taskId: string): MessageWithFile\n\t{\n\t\treturn this.#uploadRegistry[taskId];\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploadManager.destroy();\n\t}\n}","import {Type} from 'main.core';\nimport {EventEmitter} from 'main.core.events';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {Utils} from 'im.v2.lib.utils';\nimport {callBatch} from 'im.v2.lib.rest';\nimport {EventType, MessageStatus, RestMethod, DialogScrollThreshold} from 'im.v2.const';\nimport {MessageService} from 'im.v2.provider.service';\n\nimport {FileService} from './classes/sending/file';\n\nimport type {FileFromDisk} from './classes/sending/file';\nimport type {ImModelDialog} from 'im.v2.model';\n\ntype Message = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\ttext: string,\n\tparams: Object,\n\twithFile: boolean,\n\tunread: boolean,\n\tsending: boolean\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\t#fileService: FileService;\n\n\tstatic instance = null;\n\n\tstatic getInstance()\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#fileService = new FileService();\n\t}\n\n\tsendMessage(params: {text: string, fileId: string, temporaryMessageId: string, dialogId: string}): Promise\n\t{\n\t\tconst {text = '', fileId = '', temporaryMessageId, dialogId} = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isStringFilled(fileId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tLogger.warn(`SendingService: sendMessage`, params);\n\n\t\tconst message = this.#prepareMessage({text, fileId, temporaryMessageId, dialogId});\n\n\t\treturn this.#handlePagination(dialogId).then(() => {\n\t\t\treturn this.#addMessageToModels(message);\n\t\t}).then(() => {\n\t\t\tthis.#sendScrollEvent({force: true, dialogId});\n\t\t\tthis.#sendMessageToServer(message);\n\t\t});\n\t}\n\n\tsendFilesFromInput(files: File[], dialogId: string)\n\t{\n\t\tif (files.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#fileService.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tfiles.forEach((rawFile: File) => {\n\t\t\t\tconst temporaryMessageId = Utils.text.getUuidV4();\n\t\t\t\tconst temporaryFileId = Utils.text.getUuidV4();\n\n\t\t\t\tconst fileToUpload = {temporaryMessageId, temporaryFileId, rawFile, diskFolderId, dialogId};\n\n\t\t\t\tthis.#fileService.uploadFile(fileToUpload).then(() => {\n\t\t\t\t\tthis.sendMessage({\n\t\t\t\t\t\ttemporaryMessageId: temporaryMessageId,\n\t\t\t\t\t\tfileId: temporaryFileId,\n\t\t\t\t\t\tdialogId: dialogId\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tsendFilesFromDisk(files: {[string]: FileFromDisk}, dialogId)\n\t{\n\t\tObject.values(files).forEach(file => {\n\t\t\tconst temporaryMessageId = Utils.text.getUuidV4();\n\t\t\tconst realFileId = file.id.slice(1); //'n123' => '123'\n\t\t\tconst temporaryFileId = `${temporaryMessageId}|${realFileId}`;\n\n\t\t\tthis.#fileService.uploadFileFromDisk({temporaryMessageId, temporaryFileId, dialogId, rawFile: file}).then(() => {\n\t\t\t\treturn this.sendMessage({temporaryMessageId, fileId: temporaryFileId, dialogId});\n\t\t\t}).then(() => {\n\t\t\t\tthis.#fileService.commitFile({\n\t\t\t\t\ttemporaryFileId: temporaryFileId,\n\t\t\t\t\trealFileId: realFileId,\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#fileService.destroy();\n\t}\n\n\t#prepareMessage(params: {text: string, fileId: string, temporaryMessageId: string, dialogId: string}): Message\n\t{\n\t\tconst {text, fileId, temporaryMessageId, dialogId} = params;\n\n\t\tconst messageParams = {};\n\t\tif (fileId)\n\t\t{\n\t\t\tmessageParams.FILE_ID = [fileId];\n\t\t}\n\n\t\tconst temporaryId = temporaryMessageId || Utils.text.getUuidV4();\n\n\t\treturn {\n\t\t\ttemporaryId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tdialogId: dialogId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\ttext,\n\t\t\tparams: messageParams,\n\t\t\twithFile: !!fileId,\n\t\t\tunread: false,\n\t\t\tsending: true\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({chatId: this.#getDialog(dialogId).chatId});\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({dialogId});\n\t\t}).catch(error => {\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: Message): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tthis.#store.dispatch('dialogues/clearLastMessageViews', {dialogId: message.dialogId});\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: Message)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: {\n\t\t\t\t\tid: message.temporaryId,\n\t\t\t\t\ttext: message.text,\n\t\t\t\t\tauthorId: message.authorId,\n\t\t\t\t\tstatus: MessageStatus.received,\n\t\t\t\t\tsending: true,\n\t\t\t\t\tparams: {withFile: false, withAttach: false}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t#sendMessageToServer(element: Message)\n\t{\n\t\tif (element.withFile)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst query = {\n\t\t\t[RestMethod.imMessageAdd]: {\n\t\t\t\ttemplate_id: element.temporaryId,\n\t\t\t\tdialog_id: element.dialogId\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatRead]: {\n\t\t\t\tdialogId: element.dialogId,\n\t\t\t\tonlyRecent: true\n\t\t\t}\n\t\t};\n\t\tif (element.text)\n\t\t{\n\t\t\tquery[RestMethod.imMessageAdd].message = element.text;\n\t\t}\n\n\t\tcallBatch(query).then(result => {\n\t\t\tLogger.warn('SendingService: sendMessage result -', result[RestMethod.imMessageAdd]);\n\t\t\tthis.#updateMessageId({\n\t\t\t\toldId: element.temporaryId,\n\t\t\t\tnewId: result[RestMethod.imMessageAdd],\n\t\t\t\tdialogId: element.dialogId\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tthis.#updateMessageError(element.temporaryId);\n\t\t\tconsole.error('SendingService: sendMessage error -', error);\n\t\t});\n\t}\n\n\t#updateMessageId(params: {oldId: string, newId: number, dialogId: string})\n\t{\n\t\tconst {oldId, newId, dialogId} = params;\n\t\tthis.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: {\n\t\t\t\tid: newId\n\t\t\t}\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: dialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId\n\t\t\t}\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\terror: true\n\t\t\t}\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst {force = false, dialogId} = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ?ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/get'](dialogId);\n\t}\n}","import {Runtime, Type} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {NotificationTypesCodes, RestMethod, RestMethodHandler} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\ntype NotificationItemRest = {\n\tid: number,\n\tchat_id: number,\n\tauthor_id: number,\n\tdate: string,\n\tnotify_type: number,\n\tnotify_module: string,\n\tnotify_event: string,\n\tnotify_tag: string,\n\tnotify_sub_tag: string,\n\tnotify_title?: string,\n\tnotify_read: string,\n\tsetting_name: string,\n\ttext: string,\n\tnotify_buttons: string,\n\tparams?: Object\n};\n\ntype NotificationGetRestResult = {\n\tchat_id: number,\n\tnotifications: NotificationItemRest[],\n\ttotal_count: number,\n\ttotal_unread_count: number,\n\tusers: [],\n};\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\t'NOTIFY_ID': notificationId,\n\t\t\t'NOTIFY_VALUE': value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams).then(response => {\n\t\t\tLogger.warn(`NotificationService: sendConfirmAction: success`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\t}\n\n\tsendQuickAnswer(params)\n\t{\n\t\tconst {id, text, callbackSuccess = () => {}, callbackError = () => {}} = params;\n\n\t\tthis.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\tnotify_id: id,\n\t\t\tanswer_text: text\n\t\t}).then(response => {\n\t\t\tcallbackSuccess(response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t});\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', {id: idsToDelete}).then(response => {\n\t\t\tLogger.warn(`NotificationService: deleteRequest: success for ids: ${idsToDelete}`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\t'LIMIT': this.limitPerPage,\n\t\t\t'CONVERT_TEXT': 'Y'\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethodHandler.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams]\n\t\t};\n\n\t\tif (!firstPage)\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbatchQueryParams[RestMethodHandler.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethodHandler.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethodHandler.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethodHandler.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications) || notifications.length < this.limitPerPage)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}","import {RecentService} from '../../recent';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class UnreadRecentService extends RecentService\n{\n\tstatic instance = null;\n\n\tstatic getInstance(): UnreadRecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getUnreadCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('dialogues/set', dialogues);\n\n\t\tconst fakeRecent = this.getFakeData(recent);\n\t\tconst recentPromise = this.store.dispatch('recent/setUnread', fakeRecent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetFakeData(itemsForModel: Object[]): Object[]\n\t{\n\t\titemsForModel = itemsForModel.slice(-4);\n\t\titemsForModel.forEach(item => {\n\t\t\tthis.store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: item.id,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: 7\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn itemsForModel;\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\t//\n\t}\n}"],"names":["RecentService","getInstance","instance","constructor","store","restClient","dataIsPreloaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","Core","getStore","getRestClient","onUpdateStateHandler","onUpdateState","bind","EventEmitter","subscribe","EventType","recent","updateState","getCollection","getters","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","requestItems","firstPage","loadNextPage","setPreloadedData","params","items","hasMore","getLastMessageDate","updateModels","hideChat","dialogId","recentItem","dispatch","id","chatIsOpened","Messenger","openChat","callMethod","RestMethod","imRecentHide","catch","error","console","queryParams","getQueryParams","getQueryMethod","then","result","data","imRecentList","rawData","users","dialogues","prepareDataForModels","usersPromise","botList","dialoguesPromise","recentPromise","all","birthdayList","forEach","item","user","isAddedAlready","push","chat","prepareGroupChat","prepareChatForAdditionalUser","existingRecentItem","options","default_user_record","prepareChatForUser","getBirthdayPlaceholder","type","some","counter","chatId","chat_id","avatar","color","name","DialogType","birthdayPlaceholder","length","slice","message","date","ChatDataExtractor","response","rawUsers","files","messages","reactions","additionalUsers","messagesToStore","pinnedMessageIds","extractData","extractChatResult","extractUserResult","extractMessageListResult","extractContextResult","extractPinnedMessagesResult","fillChatsForUsers","isOpenlinesChat","lines","getChatId","getUsers","getDialogues","Object","values","getMessages","getMessagesToStore","getFiles","getPinnedMessages","getReactions","getAdditionalUsers","imChatGet","dialog_id","soloUser","imUserGet","userList","imUserListGet","messageList","imV2ChatMessageList","extractPaginationFlags","extractMessages","extractReactions","extractAdditionalUsers","hasPrevPage","hasNextPage","contextMessageList","imV2ChatMessageGetContext","usersShort","pinMessageList","imV2ChatPinTail","list","pinnedUsers","pinnedFiles","file","pinnedItem","messageId","UserManager","getDialogForUser","LoadService","loadChat","Type","isStringFilled","reject","Error","query","loadChatWithMessages","loadChatWithContext","isNumber","fields","loading","callBatch","inited","extractor","filesPromise","userManager","addUsersToModel","messagesPromise","clearCollection","pinnedMessages","isChat","toString","startsWith","getUserId","limit","MessageService","getMessageRequestLimit","range","imV2ChatMessageRead","ids","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","imV2ChatAdd","title","description","members","ownerId","searchable","isAvailableInSearch","newChatId","newDialogId","chatType","toLowerCase","userCounter","RenameService","renameChat","newName","dialog","oldName","imChatUpdateTitle","MuteService","Runtime","debounce","ChatService","DEBOUNCE_TIME","muteChat","unmuteChat","action","imChatMute","actionText","actionType","PinService","pinChat","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","Set","add","clearTimeout","readTimeout","setTimeout","entries","queueChatId","messageIds","size","copiedMessageIds","readMessagesCount","readResult","clearDialogMark","markedId","onlyRecent","maxMessageId","Math","max","lastReadId","lastId","count","runAction","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","user_id","imChatUserDelete","leaveChat","loadUnread","lastUnreadMessageId","filter","order","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","MESSAGE_REQUEST_LIMIT","finally","reloadMessageList","targetMessageId","savedPositionMessageId","wasInitedBefore","loadInitialMessages","restResult","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","isEdited","lastMessageId","imMessageUpdate","DeleteService","deleteMessage","imMessageDelete","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","UploadManager","setEventNamespace","eventNamespace","onUploadCancelHandler","uploader","cancel","initUploader","Uploader","EVENTS","startUpload","progressUpdate","complete","fileMaxSizeExceeded","uploadFileError","createFileError","addUploadTask","temporaryFileId","diskFolderId","preview","previewBlob","blob","addTask","taskId","fileData","fileName","generateUniqueName","deleteTask","destroy","unsubscribe","PreviewManager","get","event","emit","events","onFileUploadProgress","onFileUploadComplete","onFileUploadError","onFileUploadCancel","FileService","uploadFile","messageWithFile","rawFile","uploadTask","uploadFileFromDisk","checkDiskFolderId","commitFile","realFileId","fromDisk","getMessageWithFile","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","temporaryMessageId","file_template_id","authorId","Utils","getFileTypeByExtension","ext","extension","sizeInt","status","FileStatus","wait","progress","authorName","task","getData","upload","imDiskFolderGet","ID","commit","fileToUpload","previewData","image","width","height","urlPreview","URL","createObjectURL","fileType","FileType","video","split","splice","fileId","sendMessageWithFile","SendingService","sendMessage","force","sendFilesFromInput","getUuidV4","sendFilesFromDisk","messageParams","FILE_ID","temporaryId","withFile","unread","sending","messageService","MessageStatus","received","withAttach","element","imMessageAdd","oldId","newId","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","NotificationService","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","value","requestParams","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","batchQueryParams","RestMethodHandler","imNotifyGet","LAST_ID","LAST_TYPE","imNotifySchemaGet","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","isArrayFilled","UnreadRecentService","fakeRecent","getFakeData","itemsForModel"],"mappings":"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"}