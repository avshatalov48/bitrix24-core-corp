{"version":3,"file":"registry.bundle.js","sources":["../src/classes/recent-data-extractor.js","../src/recent.js","../src/classes/chat-data-extractor.js","../src/classes/chat/load.js","../src/classes/chat/create.js","../src/classes/chat/update.js","../src/classes/chat/rename.js","../src/classes/chat/mute.js","../src/classes/chat/pin.js","../src/classes/chat/read.js","../src/classes/chat/user.js","../src/chat.js","../src/classes/message/load.js","../src/classes/message/pin.js","../src/classes/message/edit.js","../src/classes/message/delete.js","../src/classes/message/mark.js","../src/classes/message/favorite.js","../src/message.js","../src/sending.js","../src/notification.js","../src/disk.js","../src/classes/recent/unread-recent.js","../src/classes/uploading/uploader-wrapper.js","../src/uploading.js","../src/settings.js","../src/lines.js","../src/search/recent-state-search.js","../src/search/search-item.js","../src/search/helpers/get-search-config.js","../src/search/store-updater.js","../src/search/base-server-search.js","../src/search/chat-participants.js","../src/search.js","../src/copilot.js"],"sourcesContent":["import { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole } from 'im.v2.const';\n\nimport type { JsonObject } from 'main.core';\nimport type { RecentRestResult, RawUser, RawChat, RawRecentItem } from '../types/rest';\n\nexport class RecentDataExtractor\n{\n\t#restResult: RecentRestResult;\n\t#withBirthdays: boolean;\n\n\t#users: RawUser[] = {};\n\t#chats: RawChat[] = {};\n\t#recentItems: RawRecentItem[] = {};\n\n\tconstructor(params: { rawData: RecentRestResult, withBirthdays?: boolean  })\n\t{\n\t\tconst { rawData, withBirthdays = true } = params;\n\t\tthis.#withBirthdays = withBirthdays;\n\t\tthis.#restResult = rawData;\n\t}\n\n\tgetItems(): { users: RawUser[], chats: RawChat[], recentItems: RawRecentItem[] }\n\t{\n\t\tconst { items = [] } = this.#restResult;\n\t\titems.forEach((item) => {\n\t\t\tthis.#extractUser(item);\n\t\t\tthis.#extractChat(item);\n\t\t\tthis.#recentItems[item.id] = item;\n\t\t});\n\n\t\tthis.#extractBirthdayItems();\n\n\t\treturn {\n\t\t\tusers: Object.values(this.#users),\n\t\t\tchats: Object.values(this.#chats),\n\t\t\trecentItems: Object.values(this.#recentItems),\n\t\t};\n\t}\n\n\t#extractUser(item: RawRecentItem)\n\t{\n\t\tif (item.user?.id && !this.#users[item.user.id])\n\t\t{\n\t\t\tthis.#users[item.user.id] = item.user;\n\t\t}\n\t}\n\n\t#extractChat(item: RawRecentItem)\n\t{\n\t\tif (item.chat)\n\t\t{\n\t\t\tthis.#chats[item.id] = this.#prepareGroupChat(item);\n\n\t\t\tif (item.user.id && !this.#chats[item.user.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForAdditionalUser(item.user);\n\t\t\t}\n\t\t}\n\t\telse if (item.user.id)\n\t\t{\n\t\t\tconst existingRecentItem = Core.getStore().getters['recent/get'](item.user.id);\n\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForUser(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t#extractBirthdayItems()\n\t{\n\t\tif (!this.#withBirthdays)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { birthdayList = [] } = this.#restResult;\n\t\tbirthdayList.forEach((item) => {\n\t\t\tif (!this.#users[item.id])\n\t\t\t{\n\t\t\t\tthis.#users[item.id] = item;\n\t\t\t}\n\n\t\t\tif (!this.#chats[item.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.id] = this.#prepareChatForAdditionalUser(item);\n\t\t\t}\n\n\t\t\tif (!this.#recentItems[item.id])\n\t\t\t{\n\t\t\t\tthis.#recentItems[item.id] = this.#getBirthdayPlaceholder(item);\n\t\t\t}\n\t\t});\n\t}\n\n\t#prepareGroupChat(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id\n\t\t};\n\t}\n\n\t#prepareChatForUser(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: ChatType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#prepareChatForAdditionalUser(user: RawUser): RawChat\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#getBirthdayPlaceholder(item: RawRecentItem): { id: string, options: { birthdayPlaceholder: true } }\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\toptions: {\n\t\t\t\tbirthdayPlaceholder: true,\n\t\t\t},\n\t\t};\n\t}\n}\n","import { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { RecentDataExtractor } from './classes/recent-data-extractor';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tstore: Object = null;\n\trestClient: RestClient = null;\n\n\tdataIsPreloaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getRecentCollection'];\n\t}\n\n\tloadFirstPage({ ignorePreloadedItems = false } = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn('Im.RecentList: first page was preloaded');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({ firstPage: true });\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn('Im.RecentList: setting preloaded data', params);\n\t\tconst { items, hasMore } = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId)\n\t{\n\t\tLogger.warn('Im.RecentList: hide chat', dialogId);\n\t\tconst recentItem = this.store.getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.store.dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = this.store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tthis.restClient.callMethod(RestMethod.imRecentHide, { DIALOG_ID: dialogId }).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t});\n\t}\n\t// endregion public\n\n\trequestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\treturn this.restClient.callMethod(this.getQueryMethod(), queryParams)\n\t\t\t.then((result) => {\n\t\t\t\tthis.pagesLoaded++;\n\t\t\t\tLogger.warn(`Im.RecentList: ${firstPage ? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\t\t\tconst { items, hasMore } = result.data();\n\n\t\t\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\t\t\tif (!hasMore)\n\t\t\t\t{\n\t\t\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t\t\t}\n\n\t\t\t\treturn this.updateModels(result.data());\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.isLoading = false;\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t\t});\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): JsonObject\n\t{\n\t\treturn {\n\t\t\tSKIP_OPENLINES: 'Y',\n\t\t\tLIMIT: this.itemsPerPage,\n\t\t\tLAST_MESSAGE_DATE: firstPage ? null : this.lastMessageDate,\n\t\t\tGET_ORIGINAL_TEXT: 'Y',\n\t\t};\n\t}\n\n\tgetModelSaveMethod(): string\n\t{\n\t\treturn 'recent/setRecent';\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst extractor = new RecentDataExtractor({ rawData, ...this.getExtractorOptions() });\n\t\tconst extractedItems = extractor.getItems();\n\t\tconst { users, chats, recentItems } = extractedItems;\n\t\tLogger.warn('RecentService: prepared data for models', extractedItems);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('chats/set', chats);\n\t\tconst recentPromise = this.store.dispatch(this.getModelSaveMethod(), recentItems);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n\n\tgetExtractorOptions(): { withBirthdays?: boolean }\n\t{\n\t\treturn {};\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawPin,\n\tRawReaction,\n} from '../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.lines;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n}\n","import { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { ChatDataExtractor } from '../chat-data-extractor';\n\nimport type { ChatLoadRestResult } from '../../types/rest';\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\tasync #requestChat(actionName: string, params: Object<string, any>): Promise\n\t{\n\t\tconst { dialogId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\tconst actionResult = await runAction(actionName, { data: params })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthis.#markDialogAsNotLoaded(dialogId);\n\t\t\t\tthrow error;\n\t\t\t});\n\t\tconst updateModelResult = await this.#updateModels(actionResult);\n\t\tif (Type.isStringFilled(updateModelResult?.linesDialogId))\n\t\t{\n\t\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.chat.name, '');\n\n\t\t\treturn Messenger.openLines(updateModelResult.linesDialogId);\n\t\t}\n\n\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t{\n\t\t\treturn this.#markDialogAsLoaded(dialogId);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsNotLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\t#updateModels(restResult: ChatLoadRestResult): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\t\tif (extractor.isOpenlinesChat())\n\t\t{\n\t\t\treturn Promise.resolve({ linesDialogId: extractor.getDialogId() });\n\t\t}\n\n\t\tconst chatsPromise = this.#store.dispatch('chats/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t]);\n\n\t\treturn Promise.all([\n\t\t\tchatsPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t]);\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ChatConfig, RestChatConfig } from '../../types/chat';\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<string>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\n\t\treturn newDialogId;\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tpreparedConfig.members = preparedConfig.members ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers];\n\t\tif (preparedConfig.ownerId)\n\t\t{\n\t\t\tallMembers.push(preparedConfig.ownerId);\n\t\t}\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\treturn {\n\t\t\ttype: preparedConfig.type?.toUpperCase() ?? null,\n\t\t\tentityType: preparedConfig.entityType?.toUpperCase() ?? null,\n\t\t\ttitle: preparedConfig.title ?? null,\n\t\t\tavatar: preparedConfig.avatar ?? null,\n\t\t\tdescription: preparedConfig.description ?? null,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId ?? null,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsersAdd: preparedConfig.manageUsersAdd ?? null,\n\t\t\tmanageUsersDelete: preparedConfig.manageUsersDelete ?? null,\n\t\t\tmanageUi: preparedConfig.manageUi ?? null,\n\t\t\tmanageSettings: preparedConfig.manageSettings ?? null,\n\t\t\tcanPost: preparedConfig.canPost ?? null,\n\t\t\tconferencePassword: preparedConfig.conferencePassword ?? null,\n\t\t};\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig)\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tif (Type.isStringFilled(chatConfig.type))\n\t\t{\n\t\t\tchatType = chatConfig.type.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tcanPost: chatConfig.canPost,\n\t\t});\n\t}\n}\n","import { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\n\nconst MAX_AVATAR_SIZE = 180;\n\nexport class UpdateService\n{\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: { avatar: avatarInBase64 },\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName\n\t\t}).then(result => {\n\t\t\tLogger.warn('ChatService: renameChat result', result.data());\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: title\n\t\t\t}\n\t\t});\n\t}\n}","import {Runtime} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport {ChatService} from '../../chat';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, ChatService.DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('chats/mute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'Y'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('chats/unmute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'N'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst {dialog_id: dialogId, action} = queryParams;\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch(error => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\t\t\tconst actionType = action === 'Y' ? 'chats/unmute' : 'chats/mute';\n\t\t\tthis.#store.dispatch(actionType, {dialogId});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'Y'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'N'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<number>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { counter: 0 },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\t\tthis.#store.dispatch('recent/unread', { id: dialogId, action: false });\n\t\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([rawChatId, messageIds]) => {\n\t\t\t\tthis.#readMessagesForChat(rawChatId, messageIds);\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tasync #readMessagesForChat(rawChatId: string, messageIds: Set<number>)\n\t{\n\t\tconst queueChatId = Number.parseInt(rawChatId, 10);\n\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\tif (messageIds.size === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copiedMessageIds = [...messageIds];\n\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\tconst readMessagesCount = await this.#readMessageOnClient(queueChatId, copiedMessageIds);\n\n\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\tawait this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\n\t\tconst readResult = await this.#readMessageOnServer(queueChatId, copiedMessageIds)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t});\n\n\t\tthis.#checkChatCounter(readResult);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds,\n\t\t});\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tfields: { counter: newCounter },\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst { chatId, counter } = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: { counter },\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst queryParams = { dialogId, userId };\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: false,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n}\n","import { LoadService } from './classes/chat/load';\nimport { CreateService } from './classes/chat/create';\nimport { UpdateService } from './classes/chat/update';\nimport { RenameService } from './classes/chat/rename';\nimport { MuteService } from './classes/chat/mute';\nimport { PinService } from './classes/chat/pin';\nimport { ReadService } from './classes/chat/read';\nimport { UserService } from './classes/chat/user';\n\nexport class ChatService\n{\n\tstatic DEBOUNCE_TIME = 500;\n\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<string>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\t// endregion 'update'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { PaginationRestResult } from '../../types/message';\nimport type { RawMessage } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query)\n\t\t\t.then((data) => {\n\t\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadContext error:', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId)\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages()\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t}\n\n\tasync loadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageList, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages result', restResult);\n\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tthis.#isLoading = false;\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/get'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise, filesPromise, usersPromise, reactionsPromise, additionalMessagesPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\t// EventEmitter.emit(EventType.dialog.scrollToBottom, {chatId});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n}","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\nexport class EditService\n{\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t}\n\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tconst message = this.#getMessage(messageId);\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateMessageModel(messageId, text);\n\t\tthis.#updateRecentModel(messageId, text);\n\n\t\trunAction(RestMethod.imV2ChatMessageUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: messageId,\n\t\t\t\tfields: { message: text },\n\t\t\t},\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t\t});\n\t}\n\n\t#updateMessageModel(messageId: number, text: string): void\n\t{\n\t\tconst message = this.#getMessage(messageId);\n\t\tconst isEdited = message.viewedByOthers;\n\n\t\tCore.getStore().dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateRecentModel(messageId: number, text: string): void\n\t{\n\t\tconst dialog = this.#getChat();\n\t\tif (messageId !== dialog.lastMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/update', {\n\t\t\tid: dialog.dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: {\n\t\t\t\t\ttext,\n\t\t\t\t},\n\t\t\t\tdateUpdate: new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#getChat(): ImModelChat | null\n\t{\n\t\treturn Core.getStore().getters['chats/getByChatId'](this.#chatId);\n\t}\n\n\t#getMessage(messageId: number): ImModelMessage | null\n\t{\n\t\treturn Core.getStore().getters['messages/getById'](messageId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { ImModelChat, ImModelMessage, ImModelRecentItem } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tdeleteMessage(messageId: number | string)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\n\t\tif (Utils.text.isUuidV4(messageId))\n\t\t{\n\t\t\tthis.#deleteTemporaryMessage(messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (message.viewedByOthers)\n\t\t{\n\t\t\tthis.#shallowMessageDelete(message);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#completeMessageDelete(message);\n\t\t}\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: { text: '' },\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.#deleteMessageOnServer(message.id);\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage)\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId: message.id,\n\t\t\tchatId: dialog.chatId,\n\t\t});\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#updateLastMessageInRecent(message.id, dialog.dialogId);\n\n\t\t\tconst newLastId = previousMessage ? previousMessage.id : 0;\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tlastMessageId: newLastId,\n\t\t\t\t\tlastId: newLastId,\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\tthis.#deleteMessageOnServer(message.id);\n\t}\n\n\t#deleteMessageOnServer(messageId: number)\n\t{\n\t\trunAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n\n\t#deleteTemporaryMessage(messageId: string)\n\t{\n\t\tconst chat: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](chat.dialogId);\n\t\tif (recentItem.message.id === messageId)\n\t\t{\n\t\t\tthis.#updateLastMessageInRecent(messageId, chat.dialogId);\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: messageId,\n\t\t});\n\t}\n\n\t#updateLastMessageInRecent(messageId: number | string, dialogId: string)\n\t{\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId,\n\t\t\tchatId: this.#chatId,\n\t\t});\n\t\tlet updatedMessage = { text: '' };\n\t\tif (previousMessage)\n\t\t{\n\t\t\tupdatedMessage = previousMessage;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: updatedMessage,\n\t\t\t\tdateUpdate: new Date(),\n\t\t\t},\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst {dialogId} = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: messageId\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}","import {Loc} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS')\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId: messageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}","import { LoadService } from './classes/message/load';\nimport { PinService } from './classes/message/pin';\nimport { EditService } from './classes/message/edit';\nimport { DeleteService } from './classes/message/delete';\nimport { MarkService } from './classes/message/mark';\nimport { FavoriteService } from './classes/message/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst { chatId } = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService(chatId);\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number | string)\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\nimport { EventType, MessageStatus, RestMethod, DialogScrollThreshold, BotType } from 'im.v2.const';\n\nimport { MessageService } from './registry';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { ImModelChat, ImModelBot, ImModelMessage } from 'im.v2.model';\n\ntype SendingMessageParams = {\n\ttempMessageId?: string,\n\tdialogId: string,\n\treplyId?: number,\n\ttext: string,\n\tfileId?: string,\n\tforwardIds?: number[],\n};\n\ntype PreparedMessage = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\tforwardIds: {[string]: number},\n\ttext: string,\n\tparams: Object,\n\twithFile: boolean,\n\tunread: boolean,\n\tsending: boolean,\n\tstatus: $Keys<typeof MessageStatus>,\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance: SendingService = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tsendMessage(params: SendingMessageParams): Promise\n\t{\n\t\tconst { text = '', fileId = '', dialogId } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isStringFilled(fileId))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage', params);\n\t\tconst message = this.#prepareMessage(params);\n\n\t\treturn this.#handlePagination(dialogId)\n\t\t\t.then(() => {\n\t\t\t\treturn this.#addMessageToModels(message);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\t\t\treturn this.#sendMessageToServer(message);\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tif (message.withFile)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tLogger.warn('SendingService: sendMessage result -', result);\n\t\t\t\tconst { id } = result;\n\t\t\t\tif (!id)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.#updateModels({\n\t\t\t\t\toldId: message.temporaryId,\n\t\t\t\t\tnewId: id,\n\t\t\t\t\tdialogId: message.dialogId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((errors) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(`SendingService: sendMessage error: code: ${error.code} message: ${error.message}`);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tasync forwardMessages(params: SendingMessageParams): Promise\n\t{\n\t\tLogger.warn('SendingService: forwardMessages', params);\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (!Type.isArrayFilled(forwardIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tawait this.#handlePagination(dialogId);\n\n\t\tconst commentMessage = this.#prepareForwardCommentForModel(params);\n\t\tif (commentMessage)\n\t\t{\n\t\t\tawait this.#addMessageToModels(commentMessage);\n\t\t}\n\n\t\tconst forwardUuidMap = this.#getForwardUuidMap(forwardIds);\n\t\tconst forwardedMessages = this.#prepareForwardForModel(params, forwardUuidMap);\n\n\t\tawait this.#addForwardsToModels(forwardedMessages);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\ttry\n\t\t{\n\t\t\tconst requestParams = this.#prepareSendForwardRequest({ forwardUuidMap, commentMessage, dialogId });\n\t\t\tconst response = await this.#sendMessageToServer(requestParams);\n\t\t\tLogger.warn('SendingService: forwardMessage result -', response);\n\t\t\tthis.#handleForwardMessageResponse({ response, dialogId, commentMessage });\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tthis.#handleForwardMessageError({ commentMessage, forwardUuidMap });\n\t\t\terrors.forEach((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(`SendingService: forwardMessage error: code: ${error.code} message: ${error.message}`);\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tretrySendMessage(params: { tempMessageId: string, dialogId: string }): Promise\n\t{\n\t\tconst { tempMessageId, dialogId } = params;\n\n\t\tconst unsentMessage: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (!unsentMessage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\tsending: true,\n\t\t\t\terror: false,\n\t\t\t},\n\t\t});\n\n\t\tconst message = this.#prepareMessage({\n\t\t\ttext: unsentMessage.text,\n\t\t\ttempMessageId: unsentMessage.id,\n\t\t\tdialogId,\n\t\t\treplyId: unsentMessage.replyId,\n\t\t});\n\n\t\treturn this.#sendMessageToServer(message).then((result) => {\n\t\t\tif (message.withFile)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tLogger.warn('SendingService: retrySendMessage result -', result.data());\n\t\t\tconst { id } = result.data();\n\t\t\tif (!id)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: message.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId: message.dialogId,\n\t\t\t});\n\t\t}).catch((errors) => {\n\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\terrors.forEach((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(`SendingService: retrySendMessage error: code: ${error.code} message: ${error.message}`);\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareMessage(params: SendingMessageParams): PreparedMessage\n\t{\n\t\tconst { text, fileId, tempMessageId, dialogId, replyId, forwardIds } = params;\n\t\tconst messageParams = {};\n\t\tif (fileId)\n\t\t{\n\t\t\tmessageParams.FILE_ID = [fileId];\n\t\t}\n\n\t\tconst temporaryId = tempMessageId || Utils.text.getUuidV4();\n\n\t\treturn {\n\t\t\ttemporaryId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tdialogId,\n\t\t\treplyId,\n\t\t\tforwardIds,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\ttext,\n\t\t\tparams: messageParams,\n\t\t\twithFile: Boolean(fileId),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t\tviewedByOthers: this.#needToSetAsViewed(dialogId),\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: PreparedMessage): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: PreparedMessage)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: {\n\t\t\t\t\tid: message.temporaryId,\n\t\t\t\t\tdate: new Date(),\n\t\t\t\t\ttext: message.text,\n\t\t\t\t\tauthorId: message.authorId,\n\t\t\t\t\treplyId: message.replyId,\n\t\t\t\t\tstatus: MessageStatus.received,\n\t\t\t\t\tsending: true,\n\t\t\t\t\tparams: { withFile: false, withAttach: false },\n\t\t\t\t},\n\t\t\t\tdateUpdate: new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendMessageToServer(element: PreparedMessage): Promise\n\t{\n\t\tif (element.withFile)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst fields = {};\n\n\t\tif (element.replyId)\n\t\t{\n\t\t\tfields.replyId = element.replyId;\n\t\t}\n\n\t\tif (element.forwardIds)\n\t\t{\n\t\t\tfields.forwardIds = element.forwardIds;\n\t\t}\n\n\t\tif (element.text)\n\t\t{\n\t\t\tfields.message = element.text;\n\t\t\tfields.templateId = element.temporaryId;\n\t\t}\n\n\t\tconst queryData = {\n\t\t\tdialogId: element.dialogId.toString(),\n\t\t\tfields,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageSend, { data: queryData });\n\t}\n\n\t#updateModels(params: {oldId: string, newId: number, dialogId: string, replyId: number})\n\t{\n\t\tconst { oldId, newId, dialogId, replyId } = params;\n\t\tthis.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: {\n\t\t\t\tid: newId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: newId,\n\t\t\tfields: {\n\t\t\t\treplyId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: { sending: false, date: new Date() },\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, true);\n\t}\n\n\t#getDialogByChatId(chatId: number): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId, true);\n\t}\n\n\t#needToSetAsViewed(dialogId: string): boolean\n\t{\n\t\tconst bot: ImModelBot = this.#store.getters['users/bots/getByUserId'](dialogId);\n\n\t\treturn bot?.type === BotType.network;\n\t}\n\n\t#handleForwardMessageResponse(params: { response: Object, dialogId: string, commentMessage: PreparedMessage })\n\t{\n\t\tconst { response, dialogId, commentMessage } = params;\n\t\tconst { id, uuidMap } = response;\n\n\t\tif (id)\n\t\t{\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: commentMessage.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t\tObject.entries(uuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: uuid,\n\t\t\t\tnewId: messageId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t});\n\t}\n\n\t#handleForwardMessageError({ commentMessage, forwardUuidMap })\n\t{\n\t\tif (commentMessage)\n\t\t{\n\t\t\tthis.#store.dispatch('messages/update', {\n\t\t\t\tid: commentMessage.temporaryId,\n\t\t\t\tfields: {\n\t\t\t\t\terror: true,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(forwardUuidMap).forEach((uuid: string) => {\n\t\t\tthis.#store.dispatch('messages/update', {\n\t\t\t\tid: uuid,\n\t\t\t\tfields: {\n\t\t\t\t\terror: true,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareForwardForModel(params: SendingMessageParams, forwardUuidMap: {[string]: number}): PreparedMessage[]\n\t{\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (forwardIds.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst preparedMessages = [];\n\t\tObject.entries(forwardUuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\t\tif (!message)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isForward = this.#store.getters['messages/isForward'](messageId);\n\n\t\t\tpreparedMessages.push({\n\t\t\t\tattach: message.attach,\n\t\t\t\ttemporaryId: uuid,\n\t\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\t\tauthorId: Core.getUserId(),\n\t\t\t\ttext: message.text,\n\t\t\t\tisDeleted: message.isDeleted,\n\t\t\t\tforward: {\n\t\t\t\t\tid: this.#buildForwardContextId(message.chatId, messageId),\n\t\t\t\t\tuserId: isForward ? message.forward.userId : message.authorId,\n\t\t\t\t},\n\t\t\t\tfiles: message.files,\n\t\t\t\tunread: false,\n\t\t\t\tsending: true,\n\t\t\t});\n\t\t});\n\n\t\treturn preparedMessages;\n\t}\n\n\t#prepareSendForwardRequest(params: {\n\t\tforwardUuidMap: { [string]: number },\n\t\tcommentMessage: ?PreparedMessage,\n\t\tdialogId: string\n\t}): { withFile: boolean, dialogId: string, forwardIds: { [string]: number }, text?: string, temporaryId?: string }\n\t{\n\t\tconst { dialogId, forwardUuidMap, commentMessage } = params;\n\n\t\tconst requestPrams = {\n\t\t\twithFile: false,\n\t\t\tdialogId,\n\t\t\tforwardIds: forwardUuidMap,\n\t\t};\n\n\t\tif (commentMessage)\n\t\t{\n\t\t\trequestPrams.text = commentMessage.text;\n\t\t\trequestPrams.temporaryId = commentMessage.temporaryId;\n\t\t}\n\n\t\treturn requestPrams;\n\t}\n\n\t#addForwardsToModels(forwardedMessages: PreparedMessage[]): Promise\n\t{\n\t\tconst addPromises = [];\n\t\tforwardedMessages.forEach((message) => {\n\t\t\taddPromises.push(this.#addMessageToModels(message));\n\t\t});\n\n\t\treturn Promise.all(addPromises);\n\t}\n\n\t#prepareForwardCommentForModel(params: SendingMessageParams): ?PreparedMessage\n\t{\n\t\tif (!Type.isStringFilled(params.text))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttemporaryId: Utils.text.getUuidV4(),\n\t\t\tchatId: this.#getDialog(params.dialogId).chatId,\n\t\t\tdialogId: params.dialogId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\ttext: params.text,\n\t\t\twithFile: false,\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t\tstatus: this.#needToSetAsViewed(params.dialogId),\n\t\t};\n\t}\n\n\t#getForwardUuidMap(forwardIds: number[]): {[string]: number}\n\t{\n\t\tconst uuidMap = {};\n\t\tforwardIds.forEach((id) => {\n\t\t\tuuidMap[Utils.text.getUuidV4()] = id;\n\t\t});\n\n\t\treturn uuidMap;\n\t}\n\n\t#buildForwardContextId(chatId: number, messageId: number): string\n\t{\n\t\tconst dialogId = this.#getDialogByChatId(chatId).dialogId;\n\t\tif (dialogId.startsWith('chat'))\n\t\t{\n\t\t\treturn `${dialogId}/${messageId}`;\n\t\t}\n\n\t\tconst currentUser = Core.getUserId();\n\n\t\treturn `${dialogId}:${currentUser}/${messageId}`;\n\t}\n}\n","import {Runtime, Type} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {NotificationTypesCodes, RestMethod} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\ntype NotificationItemRest = {\n\tid: number,\n\tchat_id: number,\n\tauthor_id: number,\n\tdate: string,\n\tnotify_type: number,\n\tnotify_module: string,\n\tnotify_event: string,\n\tnotify_tag: string,\n\tnotify_sub_tag: string,\n\tnotify_title?: string,\n\tnotify_read: string,\n\tsetting_name: string,\n\ttext: string,\n\tnotify_buttons: string,\n\tparams?: Object\n};\n\ntype NotificationGetRestResult = {\n\tchat_id: number,\n\tnotifications: NotificationItemRest[],\n\ttotal_count: number,\n\ttotal_unread_count: number,\n\tusers: [],\n};\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\t'NOTIFY_ID': notificationId,\n\t\t\t'NOTIFY_VALUE': value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams).then(response => {\n\t\t\tLogger.warn(`NotificationService: sendConfirmAction: success`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\t}\n\n\tsendQuickAnswer(params)\n\t{\n\t\tconst {id, text, callbackSuccess = () => {}, callbackError = () => {}} = params;\n\n\t\tthis.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\tnotify_id: id,\n\t\t\tanswer_text: text\n\t\t}).then(response => {\n\t\t\tcallbackSuccess(response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t});\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', {id: idsToDelete}).then(response => {\n\t\t\tLogger.warn(`NotificationService: deleteRequest: success for ids: ${idsToDelete}`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\t'LIMIT': this.limitPerPage,\n\t\t\t'CONVERT_TEXT': 'Y'\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams]\n\t\t};\n\n\t\tif (!firstPage)\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications) || notifications.length < this.limitPerPage)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}","import {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({chatId, fileId}): Promise\n\t{\n\t\tconst queryParams = {chat_id: chatId, file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = {file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}","import {RecentService} from '../../recent';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class UnreadRecentService extends RecentService\n{\n\tstatic instance = null;\n\n\tstatic getInstance(): UnreadRecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getUnreadCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('chats/set', dialogues);\n\n\t\tconst fakeRecent = this.getFakeData(recent);\n\t\tconst recentPromise = this.store.dispatch('recent/setUnread', fakeRecent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetFakeData(itemsForModel: Object[]): Object[]\n\t{\n\t\titemsForModel = itemsForModel.slice(-4);\n\t\titemsForModel.forEach(item => {\n\t\t\tthis.store.dispatch('chats/update', {\n\t\t\t\tdialogId: item.id,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: 7\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn itemsForModel;\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\t//\n\t}\n}","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../../uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tmaxFileSize: null,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: () => {\n\t\t\t\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst addedFiles = [];\n\t\ttasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploading/uploader-wrapper';\nimport { SendingService } from './registry';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\n\nexport type FileFromDisk = {\n\tid: string;\n\tname: string;\n\ttype: string;\n\tsize: string;\n\tsizeInt: string;\n\tmodifyBy: string;\n\tmodifyDate: string;\n\tmodifyDateInt: number;\n\text: string;\n\tfileType: string;\n};\n\nexport type MessageWithFile = {\n\ttempMessageId?: string,\n\ttempFileId: string,\n\tfile: FileFromDisk | File,\n\tdialogId: string,\n\tchatId?: number,\n\tuploaderId: string,\n\tsendAsFile: boolean,\n}\n\ntype FileCommitParams = {\n\ttemporaryFileId: string,\n\ttempMessageId: string,\n\tchatId: number,\n\trealFileId: number,\n\tfromDisk: boolean,\n\tsendAsFile: boolean,\n\tmessageText: string\n}\n\ntype UploadFilesParams = {\n\tfiles: File[],\n\tdialogId: string,\n\tautoUpload: boolean,\n\tsendAsFile: boolean\n}\n\ntype UploaderId = string;\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\tfilesPreviewStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\taddFilesFromClipboard(clipboardData: DataTransfer, dialogId): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\treturn getFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\tconst imagesOnly = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tfiles: [],\n\t\t\t\t\tuploaderId: '',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this.addFiles({\n\t\t\t\tfiles: imagesOnly,\n\t\t\t\tdialogId,\n\t\t\t\tautoUpload: false,\n\t\t\t});\n\t\t});\n\t}\n\n\taddFilesFromInput(files: File[], dialogId: string, sendAsFile: boolean)\n\t{\n\t\tif (files.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addFiles({ files, dialogId, autoUpload: true, sendAsFile }).then(({ uploaderId }) => {\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t}).catch((error) => {\n\t\t\tLogger.error('SendingService: sendFilesFromInput error', error);\n\t\t});\n\t}\n\n\taddFiles(params: UploadFilesParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst messageWithFile = this.#prepareMessageWithFile(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(messageWithFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tfiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileId: messageWithFile.tempFileId,\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessage(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setReadyFilePreview(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { file }: {file: UploaderFile} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\t\t\tthis.#uploadPreview(file).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\trealFileId: file.getServerFileId(),\n\t\t\t\t\ttemporaryFileId: file.getId(),\n\t\t\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\t\tmessageText: file.getCustomData('messageText') ?? '',\n\t\t\t\t\tsendAsFile: file.getCustomData('sendAsFile'),\n\t\t\t\t\tfromDisk: false,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tLogger.warn('UploadingService: upload preview error', error);\n\t\t\t});\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#setMessageError(file.getCustomData('tempMessageId'));\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('chats/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tthis.#setMessageError(tempMessageId);\n\t\t\tthis.#updateFileProgress(temporaryFileId, 0, FileStatus.error);\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\t#uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareMessageWithFile(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile: sendAsFile && this.#getFileType(file) !== FileType.file,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tthis.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tthis.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\ttype: this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tfilesPreviewStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].filesPreviewStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setReadyFilePreview(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): []\n\t{\n\t\tconst messagesToSend = [];\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.push({ dialogId, text });\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.push({\n\t\t\t\tfileId: file.getId(),\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { filesPreviewStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(filesPreviewStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst messagesToSend = this.#createMessagesFromFiles(uploaderId);\n\t\tmessagesToSend.forEach((message) => {\n\t\t\tthis.#sendingService.sendMessage(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t#setMessageError(tempMessageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue: value,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tgetDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\treturn Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).then((result) => {\n\t\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\t\treturn dialogId;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ImModelUser, ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\nexport type RecentItem = {\n\tdialogId: string,\n\tdialog: ImModelChat,\n\tuser?: ImModelUser,\n}\ntype RecentCollection = Map<string, RecentItem>;\n\nconst collator = new Intl.Collator(undefined, { sensitivity: 'base' });\n\nexport class RecentStateSearch\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tsearch(originalLayoutQuery: string): string[]\n\t{\n\t\tconst recentCollection = this.#getItemsFromRecentListByQuery(originalLayoutQuery);\n\n\t\treturn this.#getDialogIds(recentCollection);\n\t}\n\n\t#getItemsFromRecentListByQuery(query: string): RecentCollection\n\t{\n\t\tconst queryWords = Utils.text.getWordsFromString(query);\n\n\t\treturn this.#getFromStore(queryWords);\n\t}\n\n\t#getFromStore(queryWords: string[]): RecentCollection\n\t{\n\t\tconst recentItems = this.#getAllRecentItems();\n\n\t\tconst foundItems: RecentCollection = new Map();\n\t\trecentItems.forEach((recentItem) => {\n\t\t\tif (this.#searchByQueryWords(recentItem, queryWords))\n\t\t\t{\n\t\t\t\tfoundItems.set(recentItem.dialogId, recentItem);\n\t\t\t}\n\t\t});\n\n\t\treturn foundItems;\n\t}\n\n\t#getRecentListItems(): RecentItem[]\n\t{\n\t\treturn this.#store.getters['recent/getRecentCollection'].map((item: ImModelRecentItem) => {\n\t\t\treturn this.#prepareRecentItem(item);\n\t\t});\n\t}\n\n\t#getSearchSessionListItems(): RecentItem[]\n\t{\n\t\treturn this.#store.getters['recent/search/getDialogIds'].map((dialogId: string) => {\n\t\t\tconst item = this.#store.getters['recent/get'](dialogId);\n\n\t\t\treturn this.#prepareRecentItem(item);\n\t\t});\n\t}\n\n\t#prepareRecentItem(item: ImModelRecentItem): RecentItem[]\n\t{\n\t\tconst dialog = this.#store.getters['chats/get'](item.dialogId, true);\n\t\tconst isUser = dialog.type === ChatType.user;\n\n\t\tconst recentItem = {\n\t\t\tdialogId: item.dialogId,\n\t\t\tdialog,\n\t\t};\n\n\t\tif (isUser)\n\t\t{\n\t\t\trecentItem.user = this.#store.getters['users/get'](item.dialogId, true);\n\t\t}\n\n\t\treturn recentItem;\n\t}\n\n\t#searchByQueryWords(recentItem: RecentItem, queryWords: string[]): boolean\n\t{\n\t\tif (recentItem.user)\n\t\t{\n\t\t\treturn this.#searchByUserFields(recentItem, queryWords);\n\t\t}\n\n\t\treturn this.#searchByDialogFields(recentItem, queryWords);\n\t}\n\n\t#searchByDialogFields(recentItem: RecentItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (recentItem.dialog.name)\n\t\t{\n\t\t\tconst dialogNameWords = Utils.text.getWordsFromString(recentItem.dialog.name.toLowerCase());\n\t\t\tsearchField.push(...dialogNameWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#searchByUserFields(recentItem: RecentItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (recentItem.user.name)\n\t\t{\n\t\t\tconst userNameWords = Utils.text.getWordsFromString(recentItem.user.name.toLowerCase());\n\t\t\tsearchField.push(...userNameWords);\n\t\t}\n\n\t\tif (recentItem.user.workPosition)\n\t\t{\n\t\t\tconst workPositionWords = Utils.text.getWordsFromString(recentItem.user.workPosition.toLowerCase());\n\t\t\tsearchField.push(...workPositionWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#doesItemMatchQuery(fieldsForSearch: string[], queryWords: string[]): boolean\n\t{\n\t\tlet found = 0;\n\t\tqueryWords.forEach((queryWord) => {\n\t\t\tlet queryWordsMatchCount = 0;\n\t\t\tfieldsForSearch.forEach((field) => {\n\t\t\t\tconst word = field.slice(0, queryWord.length);\n\t\t\t\tif (collator.compare(queryWord, word) === 0)\n\t\t\t\t{\n\t\t\t\t\tqueryWordsMatchCount++;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (queryWordsMatchCount > 0)\n\t\t\t{\n\t\t\t\tfound++;\n\t\t\t}\n\t\t});\n\n\t\treturn found >= queryWords.length;\n\t}\n\n\t#getDialogIds(items: RecentCollection): string[]\n\t{\n\t\treturn [...items.values()].map((item) => {\n\t\t\treturn item.dialogId;\n\t\t});\n\t}\n\n\t#getAllRecentItems(): RecentItem[]\n\t{\n\t\tconst recentItems = this.#getRecentListItems();\n\t\tconst searchSessionItems = this.#getSearchSessionListItems();\n\n\t\tconst itemsMap = new Map();\n\t\tconst mergedArray = [...recentItems, ...searchSessionItems];\n\n\t\tfor (const recentItem of mergedArray)\n\t\t{\n\t\t\tif (!itemsMap.has(recentItem.dialogId))\n\t\t\t{\n\t\t\t\titemsMap.set(recentItem.dialogId, recentItem);\n\t\t\t}\n\t\t}\n\n\t\treturn [...itemsMap.values()];\n\t}\n}\n","import { SearchEntityIdTypes } from 'im.v2.const';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImRecentProviderItem } from './types/recent-provider-item';\n\nexport class SearchItem\n{\n\t#itemOptions: ImRecentProviderItem;\n\n\tconstructor(itemOptions: ImRecentProviderItem)\n\t{\n\t\tthis.#itemOptions = itemOptions;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#itemOptions.id;\n\t}\n\n\tgetEntityId(): string\n\t{\n\t\treturn this.#itemOptions.entityId;\n\t}\n\n\tgetEntityType(): string\n\t{\n\t\treturn this.#itemOptions.entityType;\n\t}\n\n\tgetTitle(): string\n\t{\n\t\treturn this.#itemOptions.title;\n\t}\n\n\tgetAvatar(): string\n\t{\n\t\treturn this.#itemOptions.avatar;\n\t}\n\n\tisUser(): boolean\n\t{\n\t\treturn this.getEntityType() === SearchEntityIdTypes.imUser;\n\t}\n\n\tisChat(): boolean\n\t{\n\t\treturn this.getEntityType() === SearchEntityIdTypes.chat;\n\t}\n\n\tgetCustomData(): JsonObject\n\t{\n\t\treturn this.#itemOptions.customData;\n\t}\n\n\tgetDate(): ?string\n\t{\n\t\treturn this.#itemOptions.customData.dateMessage;\n\t}\n\n\tisFoundByUser(): boolean\n\t{\n\t\treturn Boolean(this.#itemOptions.customData?.byUser);\n\t}\n}\n","type EntitySelectorProviderEntity = {\n\tid: string,\n\toptions: Object,\n\tdynamicLoad: boolean,\n\tdynamicSearch: boolean,\n};\n\ntype EntitySelectorRequestConfig = {\n\tdialog: {\n\t\tentities: EntitySelectorProviderEntity[],\n\t\tpreselectedItems: [],\n\t\tclearUnavailableItems: boolean,\n\t\tcontext: string,\n\t\tid: string,\n\t}\n};\n\nexport const EntityId = 'im-recent-v2';\nconst ContextId = 'IM_CHAT_SEARCH';\nconst SearchDialogId = 'search-experimental';\n\nexport const getSearchConfig = (findByParticipants: boolean = false): EntitySelectorRequestConfig => {\n\tconst entity = {\n\t\tid: EntityId,\n\t\tdynamicLoad: true,\n\t\tdynamicSearch: true,\n\t\toptions: {\n\t\t\twithChatByUsers: findByParticipants,\n\t\t},\n\t};\n\n\treturn {\n\t\tdialog: {\n\t\t\tentities: [\n\t\t\t\tentity,\n\t\t\t],\n\t\t\tpreselectedItems: [],\n\t\t\tclearUnavailableItems: false,\n\t\t\tcontext: ContextId,\n\t\t\tid: SearchDialogId,\n\t\t},\n\t};\n};\n","import { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { SearchItem } from './search-item';\n\nexport class StoreUpdater\n{\n\t#store: Object;\n\t#userManager: UserManager;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\t}\n\n\tupdate(items: Map<string, SearchItem>): Promise\n\t{\n\t\tconst { users, dialogues, recentItems } = this.#prepareDataForModels(items);\n\n\t\treturn Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#setDialoguesToModel(dialogues),\n\t\t\tthis.#setRecentItems(recentItems),\n\t\t]);\n\t}\n\n\tupdateSearchSession(items: Map<string, SearchItem>): Promise\n\t{\n\t\tconst recentSearchItems = this.#prepareSearchDataForModels(items);\n\n\t\treturn this.#setRecentSearchItems(recentSearchItems);\n\t}\n\n\t#setRecentItems(items): Promise\n\t{\n\t\treturn this.#store.dispatch('recent/store', items);\n\t}\n\n\t#setRecentSearchItems(items): Promise\n\t{\n\t\treturn this.#store.dispatch('recent/search/set', items);\n\t}\n\n\t#setDialoguesToModel(dialogues): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/set', dialogues);\n\t}\n\n\t#prepareDataForModels(items: Map<string, SearchItem>): { users: Array<Object>, dialogues: Array<Object> }\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tdialogues: [],\n\t\t\trecentItems: [],\n\t\t};\n\n\t\t[...items.values()].forEach((item) => {\n\t\t\tconst itemData = item.getCustomData();\n\n\t\t\tresult.recentItems.push({\n\t\t\t\tdialogId: item.getDialogId(),\n\t\t\t\tmessage: {\n\t\t\t\t\tdate: item.getDate(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (item.isUser())\n\t\t\t{\n\t\t\t\tresult.users.push(itemData);\n\t\t\t}\n\n\t\t\tif (item.isChat())\n\t\t\t{\n\t\t\t\tresult.dialogues.push({\n\t\t\t\t\t...itemData,\n\t\t\t\t\tdialogId: item.getDialogId(),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#prepareSearchDataForModels(items: Map<string, SearchItem>): { recentItems: Array<Object> }\n\t{\n\t\tconst recentSearchItems = [];\n\n\t\t[...items.values()].forEach((item) => {\n\t\t\trecentSearchItems.push({\n\t\t\t\tdialogId: item.getDialogId(),\n\t\t\t\tbyUser: item.isFoundByUser(),\n\t\t\t});\n\t\t});\n\n\t\treturn recentSearchItems;\n\t}\n\n\tclearSessionSearch(): Promise\n\t{\n\t\treturn this.#store.dispatch('recent/search/clear');\n\t}\n}\n","import { ajax as Ajax } from 'main.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { SearchItem } from './search-item';\nimport { EntityId, getSearchConfig } from './helpers/get-search-config';\nimport { StoreUpdater } from './store-updater';\n\nimport type { ImRecentProviderItem } from './types/recent-provider-item';\n\ntype SearchItemMap = Map<string, SearchItem>;\n\nconst SEARCH_REQUEST_ENDPOINT = 'ui.entityselector.doSearch';\nconst LOAD_LATEST_RESULTS_ENDPOINT = 'ui.entityselector.load';\nconst SAVE_ITEM_ENDPOINT = 'ui.entityselector.saveRecentItems';\n\nexport class BaseServerSearch\n{\n\t#storeUpdater: StoreUpdater;\n\t#findByParticipants: boolean;\n\n\tconstructor(options: {findByParticipants: boolean} = {})\n\t{\n\t\tthis.#findByParticipants = options.findByParticipants;\n\t\tthis.#storeUpdater = new StoreUpdater();\n\t}\n\n\tsearch(query: string): Promise<string[]>\n\t{\n\t\treturn this.searchRequest(query).then((items) => {\n\t\t\tconst itemsCollection = this.#createItemMap(items);\n\n\t\t\treturn this.#processSearchResponse(itemsCollection);\n\t\t}).then((items: SearchItemMap) => {\n\t\t\treturn this.#getDialogIds(items);\n\t\t});\n\t}\n\n\tsearchRequest(query: string): Promise<ImRecentProviderItem[]>\n\t{\n\t\tconst config = {\n\t\t\tjson: getSearchConfig(this.#findByParticipants),\n\t\t};\n\n\t\tconfig.json.searchQuery = {\n\t\t\tqueryWords: Utils.text.getWordsFromString(query),\n\t\t\tquery,\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction(SEARCH_REQUEST_ENDPOINT, config).then((response) => {\n\t\t\t\tLogger.warn('Im.SearchLight: Search request result', response);\n\t\t\t\tresolve(response.data.dialog.items);\n\t\t\t}).catch((error) => reject(error));\n\t\t});\n\t}\n\n\tloadLatestResults(): Promise<string[]>\n\t{\n\t\treturn this.loadLatestResultsRequest().then((responseFromServer) => {\n\t\t\tconst { items, recentItems } = responseFromServer;\n\t\t\tif (items.length === 0 || recentItems.length === 0)\n\t\t\t{\n\t\t\t\treturn new Map();\n\t\t\t}\n\n\t\t\tconst itemMap = this.#createItemMap(items);\n\t\t\tconst itemsFromRecentItems = this.#getItemsFromRecentItems(recentItems, itemMap);\n\n\t\t\treturn this.#processLatestSearchResponse(itemsFromRecentItems);\n\t\t}).then((processedItems) => {\n\t\t\treturn this.#getDialogIds(processedItems);\n\t\t});\n\t}\n\n\tloadLatestResultsRequest(): Promise<ImRecentProviderItem[]>\n\t{\n\t\tconst config = {\n\t\t\tjson: getSearchConfig(),\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction(LOAD_LATEST_RESULTS_ENDPOINT, config).then((response) => {\n\t\t\t\tLogger.warn('Im.SearchLight: Recent search request result', response);\n\t\t\t\tresolve(response.data.dialog);\n\t\t\t}).catch((error) => reject(error));\n\t\t});\n\t}\n\n\taddItemsToRecentSearchResults(dialogId: string): Promise\n\t{\n\t\tconst recentItems = [{ id: dialogId, entityId: EntityId }];\n\n\t\tconst config = {\n\t\t\tjson: {\n\t\t\t\t...getSearchConfig(),\n\t\t\t\trecentItems,\n\t\t\t},\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction(SAVE_ITEM_ENDPOINT, config).then(() => {\n\t\t\t\tresolve();\n\t\t\t}).catch((error) => reject(error));\n\t\t});\n\t}\n\n\t#processLatestSearchResponse(items: SearchItemMap): Promise<SearchItemMap>\n\t{\n\t\treturn this.#storeUpdater.update(items).then(() => {\n\t\t\treturn items;\n\t\t});\n\t}\n\n\t#processSearchResponse(items: SearchItemMap): Promise<SearchItemMap>\n\t{\n\t\treturn this.#storeUpdater.update(items).then(() => {\n\t\t\treturn this.#storeUpdater.updateSearchSession(items);\n\t\t}).then(() => {\n\t\t\treturn items;\n\t\t});\n\t}\n\n\t#getDialogIds(items: SearchItemMap): string[]\n\t{\n\t\treturn [...items.values()].map((item: SearchItem) => {\n\t\t\treturn item.getDialogId();\n\t\t});\n\t}\n\n\t#getItemsFromRecentItems(recentItems: [string, string | number][], items: SearchItemMap): SearchItemMap\n\t{\n\t\tconst filledRecentItems: SearchItemMap = new Map();\n\t\trecentItems.forEach((recentItem) => {\n\t\t\tconst [, dialogId] = recentItem;\n\t\t\tconst itemFromMap = items.get(dialogId.toString());\n\t\t\tif (itemFromMap)\n\t\t\t{\n\t\t\t\tfilledRecentItems.set(itemFromMap.getDialogId(), itemFromMap);\n\t\t\t}\n\t\t});\n\n\t\treturn filledRecentItems;\n\t}\n\n\t#createItemMap(items: ImRecentProviderItem[]): SearchItemMap\n\t{\n\t\tconst map: SearchItemMap = new Map();\n\n\t\titems.forEach((item) => {\n\t\t\tconst mapItem = new SearchItem(item);\n\t\t\tmap.set(mapItem.getDialogId(), mapItem);\n\t\t});\n\n\t\treturn map;\n\t}\n\n\tclearSessionSearch()\n\t{\n\t\tvoid this.#storeUpdater.clearSessionSearch();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { RestClient } from 'rest.client';\n\nexport class ChatParticipants\n{\n\t#restClient: RestClient;\n\t#userManager: UserManager;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\t}\n\n\tload(dialogId: string): Promise<string[]>\n\t{\n\t\treturn this.#restClient.callMethod(RestMethod.imDialogUsersList, {\n\t\t\tDIALOG_ID: dialogId,\n\t\t}).then((response) => {\n\t\t\tconst users = response.data();\n\n\t\t\tthis.#userManager.setUsersToModel(users);\n\n\t\t\treturn users.map((user) => user.id.toString());\n\t\t}).catch((error) => {\n\t\t\tconsole.error('MentionService: error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\n\nimport { ChatType } from 'im.v2.const';\nimport { RecentStateSearch } from './search/recent-state-search';\nimport { BaseServerSearch } from './search/base-server-search';\nimport { ChatParticipants } from './search/chat-participants';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { ImModelUser, ImModelChat } from 'im.v2.model';\n\nexport class SearchService\n{\n\t#store: Store;\n\t#recentStateSearch: RecentStateSearch;\n\t#baseServerSearch: BaseServerSearch;\n\t#chatParticipants: ChatParticipants;\n\n\tconstructor(options: {findByParticipants: boolean})\n\t{\n\t\tthis.#recentStateSearch = new RecentStateSearch();\n\t\tthis.#baseServerSearch = new BaseServerSearch(options);\n\t\tthis.#chatParticipants = new ChatParticipants();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadLatestResults(): Promise<string[]>\n\t{\n\t\treturn this.#baseServerSearch.loadLatestResults();\n\t}\n\n\tloadChatParticipants(dialogId: string): Promise<string[]>\n\t{\n\t\treturn this.#chatParticipants.load(dialogId).then((dialogIds) => {\n\t\t\tif (this.#isSelfDialogId(dialogId))\n\t\t\t{\n\t\t\t\treturn dialogIds;\n\t\t\t}\n\n\t\t\treturn dialogIds.filter((element) => !this.#isSelfDialogId(element));\n\t\t});\n\t}\n\n\tsearchLocal(query: string): Promise<string[]>\n\t{\n\t\treturn Promise.resolve(this.#recentStateSearch.search(query));\n\t}\n\n\tsearchOnServer(query: string): Promise<string[]>\n\t{\n\t\treturn this.#baseServerSearch.search(query);\n\t}\n\n\taddItemToRecent(dialogId: string): Promise\n\t{\n\t\treturn this.#baseServerSearch.addItemsToRecentSearchResults(dialogId);\n\t}\n\n\tclearSessionResult()\n\t{\n\t\tthis.#baseServerSearch.clearSessionSearch();\n\t}\n\n\tsortByDate(items: string[]): string[]\n\t{\n\t\titems.sort((firstItem, secondItem) => {\n\t\t\tconst messageDate1 = this.#store.getters['recent/get'](firstItem, true).message?.date;\n\t\t\tconst messageDate2 = this.#store.getters['recent/get'](secondItem, true).message?.date;\n\n\t\t\tif (!messageDate1 || !messageDate2)\n\t\t\t{\n\t\t\t\tif (!messageDate1 && !messageDate2)\n\t\t\t\t{\n\t\t\t\t\tif (this.#isExtranet(firstItem))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.#isExtranet(secondItem))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn messageDate1 ? -1 : 1;\n\t\t\t}\n\n\t\t\treturn messageDate2 - messageDate1;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\t#isExtranet(dialogId: string): boolean\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (dialog.type === ChatType.user)\n\t\t{\n\t\t\tconst user: ImModelUser = this.#store.getters['users/get'](dialogId);\n\n\t\t\treturn user && user.extranet;\n\t\t}\n\n\t\treturn dialog.extranet;\n\t}\n\n\t#isSelfDialogId(dialogId: string): boolean\n\t{\n\t\treturn dialogId === Core.getUserId().toString();\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { ChatService } from './chat';\n\nexport class CopilotService\n{\n\tasync createChat(): Promise<string>\n\t{\n\t\tconst chatService = new ChatService();\n\t\tconst newDialogId = await chatService.createChat({ type: ChatType.copilot })\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\tawait chatService.loadChatWithMessages(newDialogId)\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\treturn newDialogId;\n\t}\n\n\t#onCreateError(error: Error)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Copilot chat create error', error);\n\t\tthrow new Error('Copilot chat create error');\n\t}\n}\n"],"names":["RecentDataExtractor","constructor","params","rawData","withBirthdays","getItems","items","forEach","item","id","users","Object","values","chats","recentItems","user","chat","existingRecentItem","Core","getStore","getters","options","default_user_record","birthdayList","counter","dialogId","chatId","chat_id","avatar","color","name","type","ChatType","role","UserRole","member","birthdayPlaceholder","RecentService","getInstance","instance","store","restClient","dataIsPreloaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","getRestClient","getCollection","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","requestItems","firstPage","loadNextPage","setPreloadedData","hasMore","getLastMessageDate","updateModels","hideChat","recentItem","dispatch","chatIsOpened","Messenger","openChat","callMethod","RestMethod","imRecentHide","DIALOG_ID","catch","error","console","queryParams","getQueryParams","getQueryMethod","then","result","data","imRecentList","SKIP_OPENLINES","LIMIT","LAST_MESSAGE_DATE","GET_ORIGINAL_TEXT","getModelSaveMethod","extractor","getExtractorOptions","extractedItems","usersPromise","dialoguesPromise","recentPromise","all","length","slice","message","date","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","getChats","mainChat","hasPrevPage","hasNextPage","UserManager","getDialogForUser","getFiles","files","getUsers","getAdditionalUsers","usersShort","getMessages","messages","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","push","messageId","getReactions","reactions","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","actionName","actionResult","updateModelResult","Type","isStringFilled","linesDialogId","LayoutManager","setLastOpenedElement","Layout","openLines","fields","loading","inited","chatsPromise","filesPromise","userManager","addUsersToModel","messagesPromise","clearCollection","pinnedMessages","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","Error","newChatId","newDialogId","preparedConfig","file","getBase64","managers","members","allMembers","ownerId","Set","toUpperCase","entityType","title","description","searchable","isAvailableInSearch","manageUsersAdd","manageUsersDelete","manageUi","manageSettings","canPost","conferencePassword","chatType","toLowerCase","userCounter","owner","MAX_AVATAR_SIZE","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdate","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","Runtime","debounce","ChatService","DEBOUNCE_TIME","muteChat","unmuteChat","action","imChatMute","actionText","actionType","PinService","pinChat","dateUpdate","Date","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","entries","rawChatId","messageIds","clearDialogMark","markedId","unread","onlyRecent","queueChatId","Number","parseInt","size","copiedMessageIds","readMessagesCount","readResult","maxMessageId","Math","max","lastReadId","lastId","newCounter","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","leaveChat","getUserId","joinChat","imV2ChatJoin","loadUnread","lastUnreadMessageId","query","filter","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","reloadMessageList","targetMessageId","savedPositionMessageId","wasInitedBefore","loadInitialMessages","payload","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","map","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","imV2ChatMessageUpdate","isEdited","viewedByOthers","DeleteService","deleteMessage","isUuidV4","isDeleted","attach","replyId","previousMessage","newLastId","imV2ChatMessageDelete","updatedMessage","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","fileId","force","withFile","oldId","temporaryId","newId","errors","code","forwardMessages","forwardIds","isArrayFilled","commentMessage","forwardUuidMap","forwardedMessages","requestParams","response","retrySendMessage","tempMessageId","unsentMessage","sending","messageParams","FILE_ID","getUuidV4","authorId","Boolean","messageService","status","MessageStatus","received","withAttach","element","templateId","queryData","toString","imV2ChatMessageSend","EventEmitter","emit","EventType","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","bot","BotType","network","uuidMap","uuid","keys","preparedMessages","isForward","forward","requestPrams","addPromises","startsWith","currentUser","NotificationService","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","value","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","batchQueryParams","imNotifyGet","LAST_ID","LAST_TYPE","imNotifySchemaGet","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","destroy","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","UnreadRecentService","dialogues","recent","prepareDataForModels","fakeRecent","getFakeData","itemsForModel","onUpdateState","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","maxFileSize","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","removeFilesFromServer","start","setAutoUpload","addFiles","tasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","addFilesFromClipboard","clipboardData","getFilesFromDataTransfer","imagesOnly","isImage","addFilesFromInput","filesForUploader","messageWithFile","uploadFileFromDisk","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","file_template_id","as_file","FileStatus","sendSeparateMessagesWithFiles","getFileTypeByExtension","ext","extension","sizeInt","wait","progress","authorName","getId","getProgress","upload","getServerFileId","imDiskFolderGet","ID","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","isFailed","getSize","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","video","split","splice","filesPreviewStatus","autoUploadFlag","messagesToSend","hasText","getError","wasSent","every","getCode","getDescription","SettingsService","changeSetting","settingName","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","collator","Intl","Collator","undefined","sensitivity","RecentStateSearch","search","originalLayoutQuery","recentCollection","queryWords","getWordsFromString","foundItems","Map","set","isUser","searchField","dialogNameWords","userNameWords","workPosition","workPositionWords","fieldsForSearch","found","queryWord","queryWordsMatchCount","field","word","compare","searchSessionItems","itemsMap","mergedArray","has","SearchItem","itemOptions","getEntityId","entityId","getEntityType","getTitle","getAvatar","SearchEntityIdTypes","imUser","isChat","getDate","dateMessage","isFoundByUser","byUser","EntityId","ContextId","SearchDialogId","getSearchConfig","findByParticipants","entity","dynamicLoad","dynamicSearch","withChatByUsers","entities","preselectedItems","clearUnavailableItems","context","StoreUpdater","update","updateSearchSession","recentSearchItems","clearSessionSearch","itemData","SEARCH_REQUEST_ENDPOINT","LOAD_LATEST_RESULTS_ENDPOINT","SAVE_ITEM_ENDPOINT","BaseServerSearch","searchRequest","itemsCollection","config","json","searchQuery","Ajax","loadLatestResults","loadLatestResultsRequest","responseFromServer","itemMap","itemsFromRecentItems","processedItems","addItemsToRecentSearchResults","filledRecentItems","itemFromMap","get","mapItem","ChatParticipants","load","imDialogUsersList","SearchService","loadChatParticipants","dialogIds","searchLocal","searchOnServer","addItemToRecent","clearSessionResult","sortByDate","sort","firstItem","secondItem","messageDate1","messageDate2","extranet","CopilotService","chatService","copilot"],"mappings":"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"}