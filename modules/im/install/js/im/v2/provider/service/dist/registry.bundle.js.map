{"version":3,"file":"registry.bundle.js","sources":["../src/recent.js","../src/classes/chat-data-extractor.js","../src/classes/chat/load.js","../src/classes/chat/create.js","../src/classes/chat/update.js","../src/classes/chat/rename.js","../src/classes/chat/mute.js","../src/classes/chat/pin.js","../src/classes/chat/read.js","../src/classes/chat/user.js","../src/chat.js","../src/classes/message/load.js","../src/classes/message/pin.js","../src/classes/message/edit.js","../src/classes/message/delete.js","../src/classes/message/mark.js","../src/classes/message/favorite.js","../src/message.js","../src/sending.js","../src/notification.js","../src/disk.js","../src/classes/recent/unread-recent.js","../src/classes/uploading/uploader-wrapper.js","../src/uploading.js","../src/settings.js","../src/lines.js","../src/search/recent-state-search.js","../src/search/search-item.js","../src/search/helpers/get-search-config.js","../src/search/store-updater.js","../src/search/base-server-search.js","../src/search/chat-participants.js","../src/search.js"],"sourcesContent":["import {RestClient} from 'rest.client';\n\nimport {Messenger} from 'im.public';\nimport {Core} from 'im.v2.application.core';\nimport {DialogType, RestMethod, UserRole} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tstore: Object = null;\n\trestClient: RestClient = null;\n\n\tdataIsPreloaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getRecentCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn(`Im.RecentList: first page was preloaded`);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn(`Im.RecentList: setting preloaded data`, params);\n\t\tconst {items, hasMore} = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId)\n\t{\n\t\tLogger.warn(`Im.RecentList: hide chat`, dialogId);\n\t\tconst recentItem = this.store.getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.store.dispatch('recent/delete', {\n\t\t\tid: dialogId\n\t\t});\n\n\t\tconst chatIsOpened = this.store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tthis.restClient.callMethod(RestMethod.imRecentHide, {'DIALOG_ID': dialogId}).catch(error => {\n\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t});\n\t}\n\t// endregion public\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\treturn this.restClient.callMethod(this.getQueryMethod(), queryParams).then((result) => {\n\t\t\tthis.pagesLoaded++;\n\t\t\tLogger.warn(`Im.RecentList: ${firstPage? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\t\tconst {items, hasMore} = result.data();\n\n\t\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\t\tif (!hasMore)\n\t\t\t{\n\t\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t\t}\n\n\t\t\treturn this.updateModels(result.data()).then(() => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t});\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): Object\n\t{\n\t\treturn {\n\t\t\t'SKIP_OPENLINES': 'Y',\n\t\t\t'LIMIT': this.itemsPerPage,\n\t\t\t'LAST_MESSAGE_DATE': firstPage? null : this.lastMessageDate,\n\t\t\t'GET_ORIGINAL_TEXT': 'Y'\n\t\t};\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tif (rawData.botList)\n\t\t{\n\t\t\tthis.store.dispatch('users/setBotList', rawData.botList);\n\t\t}\n\t\tconst dialoguesPromise = this.store.dispatch('dialogues/set', dialogues);\n\t\tconst recentPromise = this.store.dispatch('recent/setRecent', recent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tprepareDataForModels({items, birthdayList = []}): {users: Array, dialogues: Array, recent: Array}\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tdialogues: [],\n\t\t\trecent: []\n\t\t};\n\n\t\titems.forEach(item => {\n\t\t\t// user\n\t\t\tif (item.user && item.user.id && !this.isAddedAlready(result, 'users', item.user.id))\n\t\t\t{\n\t\t\t\tresult.users.push(item.user);\n\t\t\t}\n\n\t\t\t// chat\n\t\t\tif (item.chat)\n\t\t\t{\n\t\t\t\tresult.dialogues.push(this.prepareGroupChat(item));\n\n\t\t\t\tif (item.user.id && !this.isAddedAlready(result, 'dialogues', item.user.id))\n\t\t\t\t{\n\t\t\t\t\tresult.dialogues.push(this.prepareChatForAdditionalUser(item.user));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (item.user.id)\n\t\t\t{\n\t\t\t\tconst existingRecentItem = this.store.getters['recent/get'](item.user.id);\n\t\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t\t{\n\t\t\t\t\tresult.dialogues.push(this.prepareChatForUser(item));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recent\n\t\t\tresult.recent.push({...item});\n\t\t});\n\n\t\tbirthdayList.forEach(item => {\n\t\t\tif (!this.isAddedAlready(result, 'users', item.id))\n\t\t\t{\n\t\t\t\tresult.users.push(item);\n\t\t\t\tresult.dialogues.push(this.prepareChatForAdditionalUser(item));\n\t\t\t}\n\n\t\t\tif (!this.isAddedAlready(result, 'recent', item.id))\n\t\t\t{\n\t\t\t\tresult.recent.push(this.getBirthdayPlaceholder(item));\n\t\t\t}\n\t\t});\n\n\t\tLogger.warn(`Im.RecentList: prepared data for models`, result);\n\n\t\treturn result;\n\t}\n\n\tisAddedAlready(result: Object, type: 'users' | 'dialogues' | 'recent', id: string | number): boolean\n\t{\n\t\tif (type === 'users')\n\t\t{\n\t\t\treturn result.users.some(user => user.id === id);\n\t\t}\n\t\telse if (type === 'dialogues')\n\t\t{\n\t\t\treturn result.dialogues.some(chat => chat.dialogId === id);\n\t\t}\n\t\telse if (type === 'recent')\n\t\t{\n\t\t\treturn result.recent.some(item => item.id === id);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprepareGroupChat(item)\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id\n\t\t};\n\t}\n\n\tprepareChatForUser(item)\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: DialogType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\tprepareChatForAdditionalUser(user)\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: DialogType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\tgetBirthdayPlaceholder(item: Object): Object\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\toptions: {\n\t\t\t\tbirthdayPlaceholder: true\n\t\t\t}\n\t\t};\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n}","import { DialogType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawPin,\n\tRawReaction,\n} from '../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === DialogType.lines;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n}\n","import { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { ChatDataExtractor } from '../chat-data-extractor';\n\nimport type { ChatLoadRestResult } from '../../types/rest';\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\t#requestChat(actionName: string, params: Object<string, any>): Promise\n\t{\n\t\tconst { dialogId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\treturn runAction(actionName, { data: params })\n\t\t\t.then((result: ChatLoadRestResult) => {\n\t\t\t\treturn this.#updateModels(result);\n\t\t\t})\n\t\t\t.then((result?: { linesDialogId: string }) => {\n\t\t\t\tif (Type.isStringFilled(result?.linesDialogId))\n\t\t\t\t{\n\t\t\t\t\tMessenger.openLines(result.linesDialogId);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t\t\t{\n\t\t\t\t\tthis.#markDialogAsLoaded(dialogId);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\t#updateModels(restResult: ChatLoadRestResult): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\t\tif (extractor.isOpenlinesChat())\n\t\t{\n\t\t\treturn Promise.resolve({ linesDialogId: extractor.getDialogId() });\n\t\t}\n\n\t\tconst dialoguesPromise = this.#store.dispatch('dialogues/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t]);\n\n\t\treturn Promise.all([\n\t\t\tdialoguesPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t]);\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ChatConfig, RestChatConfig } from '../../types/chat';\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<string>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\n\t\treturn newDialogId;\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers, preparedConfig.ownerId];\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\treturn {\n\t\t\tentityType: preparedConfig.type?.toUpperCase() ?? null,\n\t\t\ttitle: preparedConfig.title,\n\t\t\tavatar: preparedConfig.avatar,\n\t\t\tdescription: preparedConfig.description,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsers: preparedConfig.manageUsers,\n\t\t\tmanageUi: preparedConfig.manageUi,\n\t\t\tmanageSettings: preparedConfig.manageSettings,\n\t\t\tcanPost: preparedConfig.canPost,\n\t\t\tconferencePassword: preparedConfig.conferencePassword ?? null,\n\t\t};\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig)\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('dialogues/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tcanPost: chatConfig.canPost,\n\t\t});\n\t}\n}\n","import { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\n\nconst MAX_AVATAR_SIZE = 180;\n\nexport class UpdateService\n{\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: { avatar: avatarInBase64 },\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['dialogues/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName\n\t\t}).then(result => {\n\t\t\tLogger.warn('ChatService: renameChat result', result.data());\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: title\n\t\t\t}\n\t\t});\n\t}\n}","import {Runtime} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport {ChatService} from '../../chat';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, ChatService.DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('dialogues/mute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'Y'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('dialogues/unmute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'N'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst {dialog_id: dialogId, action} = queryParams;\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch(error => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\t\t\tconst actionType = action === 'Y' ? 'dialogues/unmute' : 'dialogues/mute';\n\t\t\tthis.#store.dispatch(actionType, {dialogId});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'Y'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'N'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelDialog, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<messageId>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('dialogues/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll).catch(error => {\n\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {counter: 0}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {dialogId}).catch(error => {\n\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, {dialogId}).catch(error => {\n\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\tthis.#store.dispatch('recent/unread', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([queueChatId, messageIds]) => {\n\t\t\t\tqueueChatId = +queueChatId;\n\t\t\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\t\t\tif (messageIds.size === 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst copiedMessageIds = [...messageIds];\n\t\t\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\t\t\tthis.#readMessageOnClient(queueChatId, copiedMessageIds).then((readMessagesCount: number) => {\n\t\t\t\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\t\t\t\treturn this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\t\t\t\t}).then(() => {\n\t\t\t\t\treturn this.#readMessageOnServer(queueChatId, copiedMessageIds);\n\t\t\t\t}).then((readResult: ReadResult) => {\n\t\t\t\t\tthis.#checkChatCounter(readResult);\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t\t});\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch(error => {\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds\n\t\t});\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\treturn this.#store.dispatch('dialogues/decreaseCounter', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tcount: readMessagesCount\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid()\n\t\t\t}\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst {chatId, counter} = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: {counter}\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['dialogues/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/getByChatId'](chatId);\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst queryParams = { dialogId, userId };\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: false,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n}\n","import { LoadService } from './classes/chat/load';\nimport { CreateService } from './classes/chat/create';\nimport { UpdateService } from './classes/chat/update';\nimport { RenameService } from './classes/chat/rename';\nimport { MuteService } from './classes/chat/mute';\nimport { PinService } from './classes/chat/pin';\nimport { ReadService } from './classes/chat/read';\nimport { UserService } from './classes/chat/user';\n\nexport class ChatService\n{\n\tstatic DEBOUNCE_TIME = 500;\n\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<string>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\t// endregion 'update'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelDialog, ImModelMessage } from 'im.v2.model';\nimport type { PaginationRestResult } from '../../types/message';\nimport type { RawMessage } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query).then((data) => {\n\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t}).finally(() => {\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId).then(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages().then(() => {\n\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t});\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatMessageList, {\n\t\t\tchatId: this.#chatId,\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t}).then((result) => {\n\t\t\tLogger.warn('MessageService: loadInitialMessages result', result.data());\n\n\t\t\tconst restResult = result.data();\n\t\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\t\treturn this.#handleLoadedMessages(result.data());\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/get'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise, filesPromise, usersPromise, reactionsPromise, additionalMessagesPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#getDialog(): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t}\n}\n","import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\t// EventEmitter.emit(EventType.dialog.scrollToBottom, {chatId});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport type { ImModelDialog } from 'im.v2.model';\n\nexport class EditService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited: true,\n\t\t\t},\n\t\t});\n\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tif (messageId === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: { text },\n\t\t\t\t\tdateUpdate: new Date(),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imMessageUpdate, {\n\t\t\tID: messageId,\n\t\t\tMESSAGE: text,\n\t\t}).catch((error) => {\n\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelDialog, ImModelMessage } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tdeleteMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (message.viewedByOthers)\n\t\t{\n\t\t\tthis.#shallowMessageDelete(message);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#completeMessageDelete(message);\n\t\t}\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: { text: '' },\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.#deleteMessageOnServer(message.id);\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage)\n\t{\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId: message.id,\n\t\t\tchatId: dialog.chatId,\n\t\t});\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tlet updatedMessage = { text: '' };\n\t\t\tif (previousMessage)\n\t\t\t{\n\t\t\t\tupdatedMessage = previousMessage;\n\t\t\t}\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tmessage: updatedMessage,\n\t\t\t\t\tdateUpdate: new Date(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst newLastId = previousMessage ? previousMessage.id : 0;\n\t\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tlastMessageId: newLastId,\n\t\t\t\t\tlastId: newLastId,\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.#store.dispatch('dialogues/clearLastMessageViews', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\tthis.#deleteMessageOnServer(message.id);\n\t}\n\n\t#deleteMessageOnServer(messageId: number)\n\t{\n\t\trunAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst {dialogId} = this.#store.getters['dialogues/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t\tdateUpdate: new Date(),\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: messageId\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}","import {Loc} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS')\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId: messageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}","import {LoadService} from './classes/message/load';\nimport {PinService} from './classes/message/pin';\nimport {EditService} from './classes/message/edit';\nimport {DeleteService} from './classes/message/delete';\nimport {MarkService} from './classes/message/mark';\nimport {FavoriteService} from './classes/message/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst {chatId} = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService(chatId);\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number)\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { EventType, MessageStatus, RestMethod, DialogScrollThreshold } from 'im.v2.const';\nimport { MessageService } from './registry';\n\nimport type { ImModelDialog } from 'im.v2.model';\n\ntype Message = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\ttext: string,\n\tparams: Object,\n\twithFile: boolean,\n\tunread: boolean,\n\tsending: boolean\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tsendMessage(params: {text: string, fileId: string, tempMessageId: string, dialogId: string, replyId: number}): Promise\n\t{\n\t\tconst { text = '', fileId = '', tempMessageId, dialogId, replyId } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isStringFilled(fileId))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: sendMessage', params);\n\n\t\tconst message = this.#prepareMessage({ text, fileId, tempMessageId, dialogId, replyId });\n\n\t\treturn this.#handlePagination(dialogId)\n\t\t\t.then(() => {\n\t\t\t\treturn this.#addMessageToModels(message);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\t\t\treturn this.#sendMessageToServer(message);\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tif (message.withFile)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tLogger.warn('SendingService: sendMessage result -', result.data());\n\t\t\t\tthis.#updateModels({\n\t\t\t\t\toldId: message.temporaryId,\n\t\t\t\t\tnewId: result.data(),\n\t\t\t\t\tdialogId: message.dialogId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tconsole.error('SendingService: sendMessage error -', error);\n\t\t\t});\n\t}\n\n\t#prepareMessage(params: {text: string, fileId: string, tempMessageId: string, dialogId: string}): Message\n\t{\n\t\tconst { text, fileId, tempMessageId, dialogId, replyId } = params;\n\t\tconst messageParams = {};\n\t\tif (fileId)\n\t\t{\n\t\t\tmessageParams.FILE_ID = [fileId];\n\t\t}\n\n\t\tconst temporaryId = tempMessageId || Utils.text.getUuidV4();\n\n\t\treturn {\n\t\t\ttemporaryId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tdialogId,\n\t\t\treplyId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\ttext,\n\t\t\tparams: messageParams,\n\t\t\twithFile: Boolean(fileId),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: Message): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tthis.#store.dispatch('dialogues/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: Message)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: {\n\t\t\t\t\tid: message.temporaryId,\n\t\t\t\t\ttext: message.text,\n\t\t\t\t\tauthorId: message.authorId,\n\t\t\t\t\treplyId: message.replyId,\n\t\t\t\t\tstatus: MessageStatus.received,\n\t\t\t\t\tsending: true,\n\t\t\t\t\tparams: { withFile: false, withAttach: false },\n\t\t\t\t},\n\t\t\t\tdateUpdate: new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendMessageToServer(element: Message): Promise\n\t{\n\t\tif (element.withFile)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst query = {\n\t\t\ttemplate_id: element.temporaryId,\n\t\t\tdialog_id: element.dialogId,\n\t\t};\n\n\t\tif (element.replyId !== 0)\n\t\t{\n\t\t\tquery.reply_id = element.replyId;\n\t\t}\n\n\t\tif (element.text)\n\t\t{\n\t\t\tquery.message = element.text;\n\t\t}\n\n\t\treturn Core.getRestClient().callMethod(RestMethod.imMessageAdd, query);\n\t}\n\n\t#updateModels(params: {oldId: string, newId: number, dialogId: string, replyId: number})\n\t{\n\t\tconst { oldId, newId, dialogId, replyId } = params;\n\t\tthis.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: {\n\t\t\t\tid: newId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: newId,\n\t\t\tfields: {\n\t\t\t\treplyId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('dialogues/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: {\n\t\t\t\tmessage: { sending: false },\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/get'](dialogId, true);\n\t}\n}\n","import {Runtime, Type} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {NotificationTypesCodes, RestMethod} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\ntype NotificationItemRest = {\n\tid: number,\n\tchat_id: number,\n\tauthor_id: number,\n\tdate: string,\n\tnotify_type: number,\n\tnotify_module: string,\n\tnotify_event: string,\n\tnotify_tag: string,\n\tnotify_sub_tag: string,\n\tnotify_title?: string,\n\tnotify_read: string,\n\tsetting_name: string,\n\ttext: string,\n\tnotify_buttons: string,\n\tparams?: Object\n};\n\ntype NotificationGetRestResult = {\n\tchat_id: number,\n\tnotifications: NotificationItemRest[],\n\ttotal_count: number,\n\ttotal_unread_count: number,\n\tusers: [],\n};\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\t'NOTIFY_ID': notificationId,\n\t\t\t'NOTIFY_VALUE': value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams).then(response => {\n\t\t\tLogger.warn(`NotificationService: sendConfirmAction: success`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\t}\n\n\tsendQuickAnswer(params)\n\t{\n\t\tconst {id, text, callbackSuccess = () => {}, callbackError = () => {}} = params;\n\n\t\tthis.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\tnotify_id: id,\n\t\t\tanswer_text: text\n\t\t}).then(response => {\n\t\t\tcallbackSuccess(response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t});\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', {id: idsToDelete}).then(response => {\n\t\t\tLogger.warn(`NotificationService: deleteRequest: success for ids: ${idsToDelete}`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\t'LIMIT': this.limitPerPage,\n\t\t\t'CONVERT_TEXT': 'Y'\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams]\n\t\t};\n\n\t\tif (!firstPage)\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications) || notifications.length < this.limitPerPage)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}","import {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({chatId, fileId}): Promise\n\t{\n\t\tconst queryParams = {chat_id: chatId, file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = {file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}","import {RecentService} from '../../recent';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class UnreadRecentService extends RecentService\n{\n\tstatic instance = null;\n\n\tstatic getInstance(): UnreadRecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getUnreadCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('dialogues/set', dialogues);\n\n\t\tconst fakeRecent = this.getFakeData(recent);\n\t\tconst recentPromise = this.store.dispatch('recent/setUnread', fakeRecent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetFakeData(itemsForModel: Object[]): Object[]\n\t{\n\t\titemsForModel = itemsForModel.slice(-4);\n\t\titemsForModel.forEach(item => {\n\t\t\tthis.store.dispatch('dialogues/update', {\n\t\t\t\tdialogId: item.id,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: 7\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn itemsForModel;\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\t//\n\t}\n}","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../../uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: () => {\n\t\t\t\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst addedFiles = [];\n\t\ttasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploading/uploader-wrapper';\nimport { SendingService } from './registry';\n\nimport type { ImModelDialog, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\n\nexport type FileFromDisk = {\n\tid: string;\n\tname: string;\n\ttype: string;\n\tsize: string;\n\tsizeInt: string;\n\tmodifyBy: string;\n\tmodifyDate: string;\n\tmodifyDateInt: number;\n\text: string;\n\tfileType: string;\n};\n\nexport type MessageWithFile = {\n\ttempMessageId?: string,\n\ttempFileId: string,\n\tfile: FileFromDisk | File,\n\tdialogId: string,\n\tchatId?: number,\n\tuploaderId: string,\n\tsendAsFile: boolean,\n}\n\ntype FileCommitParams = {\n\ttemporaryFileId: string,\n\ttempMessageId: string,\n\tchatId: number,\n\trealFileId: number,\n\tfromDisk: boolean,\n\tsendAsFile: boolean,\n\tmessageText: string\n}\n\ntype UploadFilesParams = {\n\tfiles: File[],\n\tdialogId: string,\n\tautoUpload: boolean,\n\tsendAsFile: boolean\n}\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\tfilesPreviewStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\taddFilesFromClipboard(clipboardData: DataTransfer, dialogId): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\treturn getFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\tconst imagesOnly = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tfiles: [],\n\t\t\t\t\tuploaderId: '',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this.addFiles({\n\t\t\t\tfiles: imagesOnly,\n\t\t\t\tdialogId,\n\t\t\t\tautoUpload: false,\n\t\t\t});\n\t\t});\n\t}\n\n\taddFilesFromInput(files: File[], dialogId: string, sendAsFile: boolean)\n\t{\n\t\tif (files.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addFiles({ files, dialogId, autoUpload: true, sendAsFile }).then(({ uploaderId }) => {\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t}).catch((error) => {\n\t\t\tLogger.error('SendingService: sendFilesFromInput error', error);\n\t\t});\n\t}\n\n\taddFiles(params: UploadFilesParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst messageWithFile = this.#prepareMessageWithFile(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(messageWithFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tfiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileId: messageWithFile.tempFileId,\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessage(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setReadyFilePreview(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { file }: {file: UploaderFile} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\t\t\tthis.#uploadPreview(file).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\trealFileId: file.getServerFileId(),\n\t\t\t\t\ttemporaryFileId: file.getId(),\n\t\t\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\t\tmessageText: file.getCustomData('messageText') ?? '',\n\t\t\t\t\tsendAsFile: file.getCustomData('sendAsFile'),\n\t\t\t\t\tfromDisk: false,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tLogger.warn('UploadingService: upload preview error', error);\n\t\t\t});\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('dialogues/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\t#uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareMessageWithFile(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile: sendAsFile && this.#getFileType(file) !== FileType.file,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tthis.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tthis.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\ttype: this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelDialog\n\t{\n\t\treturn this.#store.getters['dialogues/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tfilesPreviewStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].filesPreviewStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setReadyFilePreview(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): []\n\t{\n\t\tconst messagesToSend = [];\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.push({ dialogId, text });\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.push({\n\t\t\t\tfileId: file.getId(),\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { filesPreviewStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(filesPreviewStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst messagesToSend = this.#createMessagesFromFiles(uploaderId);\n\t\tmessagesToSend.forEach((message) => {\n\t\t\tthis.#sendingService.sendMessage(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\tlet preparedValue = value;\n\t\tif (Type.isBoolean(preparedValue))\n\t\t{\n\t\t\tpreparedValue = preparedValue === true ? 'Y' : 'N';\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue: preparedValue,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tgetDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\treturn Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).then((result) => {\n\t\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\t\treturn dialogId;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { DialogType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ImModelUser, ImModelDialog, ImModelRecentItem } from 'im.v2.model';\n\nexport type RecentItem = {\n\tdialogId: string,\n\tdialog: ImModelDialog,\n\tuser?: ImModelUser,\n\tdateUpdate: string,\n}\ntype RecentCollection = Map<string, RecentItem>;\n\nconst collator = new Intl.Collator(undefined, { sensitivity: 'base' });\n\nexport class RecentStateSearch\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tsearch(originalLayoutQuery: string): string[]\n\t{\n\t\tconst recentCollection = this.#getItemsFromRecentListByQuery(originalLayoutQuery);\n\n\t\treturn this.#getDialogIds(recentCollection);\n\t}\n\n\t#getItemsFromRecentListByQuery(query: string): RecentCollection\n\t{\n\t\tconst queryWords = Utils.text.getWordsFromString(query);\n\n\t\treturn this.#getFromStore(queryWords);\n\t}\n\n\t#getFromStore(queryWords: string[]): RecentCollection\n\t{\n\t\tconst recentItems = this.#getAllRecentItems();\n\n\t\tconst foundItems: RecentCollection = new Map();\n\t\trecentItems.forEach((recentItem) => {\n\t\t\tif (this.#searchByQueryWords(recentItem, queryWords))\n\t\t\t{\n\t\t\t\tfoundItems.set(recentItem.dialogId, recentItem);\n\t\t\t}\n\t\t});\n\n\t\treturn foundItems;\n\t}\n\n\t#getRecentListItems(): RecentItem[]\n\t{\n\t\treturn this.#store.getters['recent/getRecentCollection'].map((item: ImModelRecentItem) => {\n\t\t\treturn this.#prepareRecentItem(item);\n\t\t});\n\t}\n\n\t#getSearchSessionListItems(): RecentItem[]\n\t{\n\t\treturn this.#store.getters['recent/search/getCollection'].map((item: ImModelRecentItem) => {\n\t\t\treturn this.#prepareRecentItem(item);\n\t\t});\n\t}\n\n\t#prepareRecentItem(item: ImModelRecentItem): RecentItem[]\n\t{\n\t\tconst dialog = this.#store.getters['dialogues/get'](item.dialogId, true);\n\t\tconst isUser = dialog.type === DialogType.user;\n\n\t\tconst recentItem = {\n\t\t\tdialogId: item.dialogId,\n\t\t\tdialog,\n\t\t\tdateUpdate: item.dateUpdate,\n\t\t};\n\n\t\tif (isUser)\n\t\t{\n\t\t\trecentItem.user = this.#store.getters['users/get'](item.dialogId, true);\n\t\t}\n\n\t\treturn recentItem;\n\t}\n\n\t#searchByQueryWords(recentItem: RecentItem, queryWords: string[]): boolean\n\t{\n\t\tif (recentItem.user)\n\t\t{\n\t\t\treturn this.#searchByUserFields(recentItem, queryWords);\n\t\t}\n\n\t\treturn this.#searchByDialogFields(recentItem, queryWords);\n\t}\n\n\t#searchByDialogFields(recentItem: RecentItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (recentItem.dialog.name)\n\t\t{\n\t\t\tconst dialogNameWords = Utils.text.getWordsFromString(recentItem.dialog.name.toLowerCase());\n\t\t\tsearchField.push(...dialogNameWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#searchByUserFields(recentItem: RecentItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (recentItem.user.name)\n\t\t{\n\t\t\tconst userNameWords = Utils.text.getWordsFromString(recentItem.user.name.toLowerCase());\n\t\t\tsearchField.push(...userNameWords);\n\t\t}\n\n\t\tif (recentItem.user.workPosition)\n\t\t{\n\t\t\tconst workPositionWords = Utils.text.getWordsFromString(recentItem.user.workPosition.toLowerCase());\n\t\t\tsearchField.push(...workPositionWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#doesItemMatchQuery(fieldsForSearch: string[], queryWords: string[]): boolean\n\t{\n\t\tlet found = 0;\n\t\tqueryWords.forEach((queryWord) => {\n\t\t\tlet queryWordsMatchCount = 0;\n\t\t\tfieldsForSearch.forEach((field) => {\n\t\t\t\tconst word = field.slice(0, queryWord.length);\n\t\t\t\tif (collator.compare(queryWord, word) === 0)\n\t\t\t\t{\n\t\t\t\t\tqueryWordsMatchCount++;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (queryWordsMatchCount > 0)\n\t\t\t{\n\t\t\t\tfound++;\n\t\t\t}\n\t\t});\n\n\t\treturn found >= queryWords.length;\n\t}\n\n\t#getDialogIds(items: RecentCollection): string[]\n\t{\n\t\treturn [...items.values()].map((item) => {\n\t\t\treturn item.dialogId;\n\t\t});\n\t}\n\n\t#getAllRecentItems(): RecentItem[]\n\t{\n\t\tconst recentItems = this.#getRecentListItems();\n\t\tconst searchSessionItems = this.#getSearchSessionListItems();\n\n\t\tconst itemsMap = new Map();\n\t\tconst mergedArray = [...recentItems, ...searchSessionItems];\n\n\t\tfor (const recentItem of mergedArray)\n\t\t{\n\t\t\tif (!itemsMap.has(recentItem.dialogId))\n\t\t\t{\n\t\t\t\titemsMap.set(recentItem.dialogId, recentItem);\n\t\t\t}\n\t\t}\n\n\t\treturn [...itemsMap.values()];\n\t}\n}\n","import { SearchEntityIdTypes } from 'im.v2.const';\n\nimport type { ImRecentProviderItem } from './types/recent-provider-item';\n\nexport class SearchItem\n{\n\t#itemOptions: ImRecentProviderItem;\n\n\tconstructor(itemOptions: ImRecentProviderItem)\n\t{\n\t\tthis.#itemOptions = itemOptions;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#itemOptions.id;\n\t}\n\n\tgetEntityId(): string\n\t{\n\t\treturn this.#itemOptions.entityId;\n\t}\n\n\tgetEntityType(): string\n\t{\n\t\treturn this.#itemOptions.entityType;\n\t}\n\n\tgetTitle(): string\n\t{\n\t\treturn this.#itemOptions.title;\n\t}\n\n\tgetAvatar(): string\n\t{\n\t\treturn this.#itemOptions.avatar;\n\t}\n\n\tisUser(): boolean\n\t{\n\t\treturn this.getEntityType() === SearchEntityIdTypes.imUser;\n\t}\n\n\tisChat(): boolean\n\t{\n\t\treturn this.getEntityType() === SearchEntityIdTypes.chat;\n\t}\n\n\tgetCustomData(): {[key: string]: any}\n\t{\n\t\treturn this.#itemOptions.customData;\n\t}\n\n\tgetDateUpdate(): string\n\t{\n\t\treturn this.#itemOptions.customData.dateUpdate;\n\t}\n}\n","type EntitySelectorProviderEntity = {\n\tid: string,\n\toptions: Object,\n\tdynamicLoad: boolean,\n\tdynamicSearch: boolean,\n};\n\ntype EntitySelectorRequestConfig = {\n\tdialog: {\n\t\tentities: EntitySelectorProviderEntity[],\n\t\tpreselectedItems: [],\n\t\tclearUnavailableItems: boolean,\n\t\tcontext: string,\n\t\tid: string,\n\t}\n};\n\nexport const EntityId = 'im-recent-v2';\nconst ContextId = 'IM_CHAT_SEARCH';\nconst SearchDialogId = 'search-experimental';\n\nexport const getSearchConfig = (): EntitySelectorRequestConfig => {\n\treturn {\n\t\tdialog: {\n\t\t\tentities: [\n\t\t\t\t{\n\t\t\t\t\tid: EntityId,\n\t\t\t\t\tdynamicLoad: true,\n\t\t\t\t\tdynamicSearch: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tpreselectedItems: [],\n\t\t\tclearUnavailableItems: false,\n\t\t\tcontext: ContextId,\n\t\t\tid: SearchDialogId,\n\t\t},\n\t};\n};\n","import { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { SearchItem } from './search-item';\n\nexport class StoreUpdater\n{\n\t#store: Object;\n\t#userManager: UserManager;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\t}\n\n\tupdate(items: Map<string, SearchItem>): Promise\n\t{\n\t\tconst { users, dialogues, recentItems } = this.#prepareDataForModels(items);\n\n\t\treturn Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#setDialoguesToModel(dialogues),\n\t\t\tthis.#setRecentItems(recentItems),\n\t\t]);\n\t}\n\n\tupdateSearchSession(items: Map<string, SearchItem>): Promise\n\t{\n\t\tconst { recentItems } = this.#prepareDataForModels(items);\n\n\t\treturn this.#setRecentSearchItems(recentItems);\n\t}\n\n\t#setRecentItems(items): Promise\n\t{\n\t\treturn this.#store.dispatch('recent/store', items);\n\t}\n\n\t#setRecentSearchItems(items): Promise\n\t{\n\t\treturn this.#store.dispatch('recent/search/set', items);\n\t}\n\n\t#setDialoguesToModel(dialogues): Promise\n\t{\n\t\treturn this.#store.dispatch('dialogues/set', dialogues);\n\t}\n\n\t#prepareDataForModels(items: Map<string, SearchItem>): { users: Array<Object>, dialogues: Array<Object> }\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tdialogues: [],\n\t\t\trecentItems: [],\n\t\t};\n\n\t\t[...items.values()].forEach((item) => {\n\t\t\tconst itemData = item.getCustomData();\n\n\t\t\tresult.recentItems.push({\n\t\t\t\tdialogId: item.getDialogId(),\n\t\t\t\tdate_update: item.getDateUpdate(),\n\t\t\t});\n\n\t\t\tif (item.isUser())\n\t\t\t{\n\t\t\t\tresult.users.push(itemData);\n\t\t\t}\n\n\t\t\tif (item.isChat())\n\t\t\t{\n\t\t\t\tresult.dialogues.push({\n\t\t\t\t\t...itemData,\n\t\t\t\t\tdialogId: item.getDialogId(),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tclearSessionSearch(): Promise\n\t{\n\t\treturn this.#store.dispatch('recent/search/clear');\n\t}\n}\n","import { ajax as Ajax } from 'main.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { SearchItem } from './search-item';\nimport { EntityId, getSearchConfig } from './helpers/get-search-config';\nimport { StoreUpdater } from './store-updater';\n\nimport type { ImRecentProviderItem } from './types/recent-provider-item';\n\ntype SearchItemMap = Map<string, SearchItem>;\n\nconst SEARCH_REQUEST_ENDPOINT = 'ui.entityselector.doSearch';\nconst LOAD_LATEST_RESULTS_ENDPOINT = 'ui.entityselector.load';\nconst SAVE_ITEM_ENDPOINT = 'ui.entityselector.saveRecentItems';\n\nexport class BaseServerSearch\n{\n\t#storeUpdater: StoreUpdater;\n\n\tconstructor()\n\t{\n\t\tthis.#storeUpdater = new StoreUpdater();\n\t}\n\n\tsearch(query: string): Promise<string[]>\n\t{\n\t\treturn this.searchRequest(query).then((items) => {\n\t\t\tconst itemsCollection = this.#createItemMap(items);\n\n\t\t\treturn this.#processSearchResponse(itemsCollection);\n\t\t}).then((items: SearchItemMap) => {\n\t\t\treturn this.#getDialogIds(items);\n\t\t});\n\t}\n\n\tsearchRequest(query: string): Promise<ImRecentProviderItem[]>\n\t{\n\t\tconst config = {\n\t\t\tjson: getSearchConfig(),\n\t\t};\n\n\t\tconfig.json.searchQuery = {\n\t\t\tqueryWords: Utils.text.getWordsFromString(query),\n\t\t\tquery,\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction(SEARCH_REQUEST_ENDPOINT, config).then((response) => {\n\t\t\t\tLogger.warn('Im.SearchLight: Search request result', response);\n\t\t\t\tresolve(response.data.dialog.items);\n\t\t\t}).catch((error) => reject(error));\n\t\t});\n\t}\n\n\tloadLatestResults(): Promise<string[]>\n\t{\n\t\treturn this.loadLatestResultsRequest().then((responseFromServer) => {\n\t\t\tconst { items, recentItems } = responseFromServer;\n\t\t\tif (items.length === 0 || recentItems.length === 0)\n\t\t\t{\n\t\t\t\treturn new Map();\n\t\t\t}\n\n\t\t\tconst itemMap = this.#createItemMap(items);\n\t\t\tconst itemsFromRecentItems = this.#getItemsFromRecentItems(recentItems, itemMap);\n\n\t\t\treturn this.#processLatestSearchResponse(itemsFromRecentItems);\n\t\t}).then((processedItems) => {\n\t\t\treturn this.#getDialogIds(processedItems);\n\t\t});\n\t}\n\n\tloadLatestResultsRequest(): Promise<ImRecentProviderItem[]>\n\t{\n\t\tconst config = {\n\t\t\tjson: getSearchConfig(),\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction(LOAD_LATEST_RESULTS_ENDPOINT, config).then((response) => {\n\t\t\t\tLogger.warn('Im.SearchLight: Recent search request result', response);\n\t\t\t\tresolve(response.data.dialog);\n\t\t\t}).catch((error) => reject(error));\n\t\t});\n\t}\n\n\taddItemsToRecentSearchResults(dialogId: string): Promise\n\t{\n\t\tconst recentItems = [{ id: dialogId, entityId: EntityId }];\n\n\t\tconst config = {\n\t\t\tjson: {\n\t\t\t\t...getSearchConfig(),\n\t\t\t\trecentItems,\n\t\t\t},\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction(SAVE_ITEM_ENDPOINT, config).then(() => {\n\t\t\t\tresolve();\n\t\t\t}).catch((error) => reject(error));\n\t\t});\n\t}\n\n\t#processLatestSearchResponse(items: SearchItemMap): Promise<SearchItemMap>\n\t{\n\t\treturn this.#storeUpdater.update(items).then(() => {\n\t\t\treturn items;\n\t\t});\n\t}\n\n\t#processSearchResponse(items: SearchItemMap): Promise<SearchItemMap>\n\t{\n\t\treturn this.#storeUpdater.update(items).then(() => {\n\t\t\treturn this.#storeUpdater.updateSearchSession(items);\n\t\t}).then(() => {\n\t\t\treturn items;\n\t\t});\n\t}\n\n\t#getDialogIds(items: SearchItemMap): string[]\n\t{\n\t\treturn [...items.values()].map((item: SearchItem) => {\n\t\t\treturn item.getDialogId();\n\t\t});\n\t}\n\n\t#getItemsFromRecentItems(recentItems: [string, string | number][], items: SearchItemMap): SearchItemMap\n\t{\n\t\tconst filledRecentItems: SearchItemMap = new Map();\n\t\trecentItems.forEach((recentItem) => {\n\t\t\tconst [, dialogId] = recentItem;\n\t\t\tconst itemFromMap = items.get(dialogId.toString());\n\t\t\tif (itemFromMap)\n\t\t\t{\n\t\t\t\tfilledRecentItems.set(itemFromMap.getDialogId(), itemFromMap);\n\t\t\t}\n\t\t});\n\n\t\treturn filledRecentItems;\n\t}\n\n\t#createItemMap(items: ImRecentProviderItem[]): SearchItemMap\n\t{\n\t\tconst map: SearchItemMap = new Map();\n\n\t\titems.forEach((item) => {\n\t\t\tconst mapItem = new SearchItem(item);\n\t\t\tmap.set(mapItem.getDialogId(), mapItem);\n\t\t});\n\n\t\treturn map;\n\t}\n\n\tclearSessionSearch()\n\t{\n\t\tvoid this.#storeUpdater.clearSessionSearch();\n\t}\n}\n","import { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nexport class ChatParticipants\n{\n\t#restClient: RestClient;\n\t#userManager: UserManager;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\t}\n\n\tload(dialogId: string): Promise<string[]>\n\t{\n\t\treturn this.#restClient.callMethod(RestMethod.imDialogUsersList, {\n\t\t\tDIALOG_ID: dialogId,\n\t\t}).then((response) => {\n\t\t\tconst users = response.data();\n\n\t\t\tthis.#userManager.setUsersToModel(users);\n\n\t\t\treturn users.map((user) => user.id.toString());\n\t\t}).catch((error) => {\n\t\t\tconsole.error('MentionService: error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\n\nimport { DialogType } from 'im.v2.const';\nimport { RecentStateSearch } from './search/recent-state-search';\nimport { BaseServerSearch } from './search/base-server-search';\nimport { ChatParticipants } from './search/chat-participants';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { ImModelUser, ImModelDialog } from 'im.v2.model';\n\nexport class SearchService\n{\n\t#store: Store;\n\t#recentStateSearch: RecentStateSearch;\n\t#baseServerSearch: BaseServerSearch;\n\t#chatParticipants: ChatParticipants;\n\n\tconstructor()\n\t{\n\t\tthis.#recentStateSearch = new RecentStateSearch();\n\t\tthis.#baseServerSearch = new BaseServerSearch();\n\t\tthis.#chatParticipants = new ChatParticipants();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadLatestResults(): Promise<string[]>\n\t{\n\t\treturn this.#baseServerSearch.loadLatestResults();\n\t}\n\n\tloadChatParticipants(dialogId: string): Promise<string[]>\n\t{\n\t\treturn this.#chatParticipants.load(dialogId).then((dialogIds) => {\n\t\t\tif (this.#isSelfDialogId(dialogId))\n\t\t\t{\n\t\t\t\treturn dialogIds;\n\t\t\t}\n\n\t\t\treturn dialogIds.filter((element) => !this.#isSelfDialogId(element));\n\t\t});\n\t}\n\n\tsearchLocal(query: string): Promise<string[]>\n\t{\n\t\treturn Promise.resolve(this.#recentStateSearch.search(query));\n\t}\n\n\tsearchOnServer(query: string): Promise<string[]>\n\t{\n\t\treturn this.#baseServerSearch.search(query);\n\t}\n\n\taddItemToRecent(dialogId: string): Promise\n\t{\n\t\treturn this.#baseServerSearch.addItemsToRecentSearchResults(dialogId);\n\t}\n\n\tclearSessionResult()\n\t{\n\t\tthis.#baseServerSearch.clearSessionSearch();\n\t}\n\n\tsortByDate(items: string[]): string[]\n\t{\n\t\titems.sort((firstItem, secondItem) => {\n\t\t\tconst dateUpdate1 = this.#store.getters['recent/get'](firstItem).dateUpdate;\n\t\t\tconst dateUpdate2 = this.#store.getters['recent/get'](secondItem).dateUpdate;\n\n\t\t\tif (!dateUpdate1 || !dateUpdate2)\n\t\t\t{\n\t\t\t\tif (!dateUpdate1 && !dateUpdate2)\n\t\t\t\t{\n\t\t\t\t\tif (this.#isExtranet(firstItem))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.#isExtranet(secondItem))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn dateUpdate1 ? -1 : 1;\n\t\t\t}\n\n\t\t\treturn dateUpdate2 - dateUpdate1;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\t#isExtranet(dialogId: string): boolean\n\t{\n\t\tconst dialog: ImModelDialog = this.#store.getters['dialogues/get'](dialogId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (dialog.type === DialogType.user)\n\t\t{\n\t\t\tconst user: ImModelUser = this.#store.getters['users/get'](dialogId);\n\n\t\t\treturn user && user.extranet;\n\t\t}\n\n\t\treturn dialog.extranet;\n\t}\n\n\t#isSelfDialogId(dialogId: string): boolean\n\t{\n\t\treturn dialogId === Core.getUserId().toString();\n\t}\n}\n"],"names":["RecentService","getInstance","instance","constructor","store","restClient","dataIsPreloaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","Core","getStore","getRestClient","getCollection","getters","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","requestItems","firstPage","loadNextPage","setPreloadedData","params","items","hasMore","getLastMessageDate","updateModels","hideChat","dialogId","recentItem","dispatch","id","chatIsOpened","Messenger","openChat","callMethod","RestMethod","imRecentHide","catch","error","console","queryParams","getQueryParams","getQueryMethod","then","result","data","imRecentList","rawData","users","dialogues","recent","prepareDataForModels","usersPromise","botList","dialoguesPromise","recentPromise","all","birthdayList","forEach","item","user","isAddedAlready","push","chat","prepareGroupChat","prepareChatForAdditionalUser","existingRecentItem","options","default_user_record","prepareChatForUser","getBirthdayPlaceholder","type","some","counter","chatId","chat_id","avatar","color","name","DialogType","role","UserRole","member","birthdayPlaceholder","length","slice","message","date","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","getChats","mainChat","hasPrevPage","hasNextPage","chats","UserManager","getDialogForUser","Object","values","getFiles","files","getUsers","getAdditionalUsers","usersShort","getMessages","messages","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","messageId","getReactions","reactions","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","actionName","Type","isStringFilled","linesDialogId","openLines","fields","loading","inited","extractor","filesPromise","userManager","addUsersToModel","messagesPromise","clearCollection","pinnedMessages","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","Error","newChatId","newDialogId","preparedConfig","file","getBase64","managers","allMembers","members","ownerId","Set","entityType","toUpperCase","title","description","searchable","isAvailableInSearch","manageUsers","manageUi","manageSettings","canPost","conferencePassword","chatType","toLowerCase","userCounter","owner","MAX_AVATAR_SIZE","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdate","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","Runtime","debounce","ChatService","DEBOUNCE_TIME","muteChat","unmuteChat","action","imChatMute","actionText","actionType","PinService","pinChat","dateUpdate","Date","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","entries","queueChatId","messageIds","size","copiedMessageIds","readMessagesCount","readResult","clearDialogMark","markedId","unread","onlyRecent","maxMessageId","Math","max","lastReadId","lastId","count","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","leaveChat","getUserId","joinChat","imV2ChatJoin","loadUnread","lastUnreadMessageId","query","filter","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","reloadMessageList","targetMessageId","savedPositionMessageId","wasInitedBefore","loadInitialMessages","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","map","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","isEdited","imMessageUpdate","ID","MESSAGE","DeleteService","deleteMessage","viewedByOthers","isDeleted","attach","replyId","previousMessage","updatedMessage","newLastId","imV2ChatMessageDelete","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","fileId","tempMessageId","force","withFile","oldId","temporaryId","newId","messageParams","FILE_ID","getUuidV4","authorId","Boolean","sending","messageService","status","MessageStatus","received","withAttach","element","template_id","reply_id","imMessageAdd","EventEmitter","emit","EventType","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","NotificationService","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","value","requestParams","response","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","batchQueryParams","imNotifyGet","LAST_ID","LAST_TYPE","imNotifySchemaGet","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","isArrayFilled","destroy","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","UnreadRecentService","fakeRecent","getFakeData","itemsForModel","onUpdateState","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","removeFilesFromServer","start","setAutoUpload","addFiles","tasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","addFilesFromClipboard","clipboardData","getFilesFromDataTransfer","imagesOnly","isImage","addFilesFromInput","filesForUploader","messageWithFile","uploadFileFromDisk","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","toString","imDiskFileCommit","file_template_id","as_file","sendSeparateMessagesWithFiles","getFileTypeByExtension","ext","extension","sizeInt","FileStatus","wait","progress","authorName","getId","getProgress","upload","getServerFileId","imDiskFolderGet","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","isFailed","getSize","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","startsWith","video","split","splice","filesPreviewStatus","autoUploadFlag","messagesToSend","hasText","getError","wasSent","every","getCode","getDescription","SettingsService","changeSetting","settingName","preparedValue","isBoolean","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","collator","Intl","Collator","undefined","sensitivity","RecentStateSearch","search","originalLayoutQuery","recentCollection","queryWords","getWordsFromString","recentItems","foundItems","Map","set","isUser","searchField","dialogNameWords","userNameWords","workPosition","workPositionWords","fieldsForSearch","found","queryWord","queryWordsMatchCount","field","word","compare","searchSessionItems","itemsMap","mergedArray","has","SearchItem","itemOptions","getEntityId","entityId","getEntityType","getTitle","getAvatar","SearchEntityIdTypes","imUser","isChat","getDateUpdate","EntityId","ContextId","SearchDialogId","getSearchConfig","entities","dynamicLoad","dynamicSearch","preselectedItems","clearUnavailableItems","context","StoreUpdater","update","updateSearchSession","clearSessionSearch","itemData","date_update","SEARCH_REQUEST_ENDPOINT","LOAD_LATEST_RESULTS_ENDPOINT","SAVE_ITEM_ENDPOINT","BaseServerSearch","searchRequest","itemsCollection","config","json","searchQuery","Ajax","loadLatestResults","loadLatestResultsRequest","responseFromServer","itemMap","itemsFromRecentItems","processedItems","addItemsToRecentSearchResults","filledRecentItems","itemFromMap","get","mapItem","ChatParticipants","load","imDialogUsersList","DIALOG_ID","SearchService","loadChatParticipants","dialogIds","searchLocal","searchOnServer","addItemToRecent","clearSessionResult","sortByDate","sort","firstItem","secondItem","dateUpdate1","dateUpdate2","extranet"],"mappings":"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"}