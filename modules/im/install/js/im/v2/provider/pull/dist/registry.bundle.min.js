this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Provider=this.BX.Messenger.v2.Provider||{};(function(e,s,a,t,i,l,r,d,n,o,h,c,g,u,p,b,v){"use strict";var I=babelHelpers.classPrivateFieldLooseKey("store");var f=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var P=babelHelpers.classPrivateFieldLooseKey("setUsers");var L=babelHelpers.classPrivateFieldLooseKey("setFiles");var M=babelHelpers.classPrivateFieldLooseKey("handleAddingMessageToModel");var H=babelHelpers.classPrivateFieldLooseKey("addMessageToModel");var C=babelHelpers.classPrivateFieldLooseKey("updateDialog");var m=babelHelpers.classPrivateFieldLooseKey("updateMessageViewedByOthers");var F=babelHelpers.classPrivateFieldLooseKey("updateChatLastMessageViews");var B=babelHelpers.classPrivateFieldLooseKey("sendScrollEvent");var U=babelHelpers.classPrivateFieldLooseKey("getDialog");class y{constructor(){Object.defineProperty(this,U,{value:j});Object.defineProperty(this,B,{value:N});Object.defineProperty(this,F,{value:T});Object.defineProperty(this,m,{value:A});Object.defineProperty(this,C,{value:R});Object.defineProperty(this,H,{value:S});Object.defineProperty(this,M,{value:D});Object.defineProperty(this,L,{value:k});Object.defineProperty(this,P,{value:O});Object.defineProperty(this,f,{value:w});Object.defineProperty(this,I,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,I)[I]=b.Core.getStore()}handleMessageAdd(e){v.Logger.warn("MessagePullHandler: handleMessageAdd",e);babelHelpers.classPrivateFieldLooseBase(this,f)[f](e);babelHelpers.classPrivateFieldLooseBase(this,P)[P](e);babelHelpers.classPrivateFieldLooseBase(this,L)[L](e);const s=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["messages/isInChatCollection"]({messageId:e.message.templateId});const a=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["messages/isInChatCollection"]({messageId:e.message.id});if(a){v.Logger.warn("New message pull handler: we already have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.message.id,fields:e.message});babelHelpers.classPrivateFieldLooseBase(this,B)[B](e.chatId)}else if(!a&&s){v.Logger.warn("New message pull handler: we already have the TEMPORARY message",e.message);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/updateWithId",{id:e.message.templateId,fields:e.message})}else if(!a&&!s){v.Logger.warn("New message pull handler: we dont have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,M)[M](e)}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.message.senderId});babelHelpers.classPrivateFieldLooseBase(this,C)[C](e)}handleMessageUpdate(e){v.Logger.warn("MessagePullHandler: handleMessageUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.id,fields:{text:e.text,params:e.params}});babelHelpers.classPrivateFieldLooseBase(this,B)[B](e.chatId)}handleMessageDelete(e){v.Logger.warn("MessagePullHandler: handleMessageDelete",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.id,fields:{text:"",isDeleted:true,files:[],attach:[],replyId:0}})}handleMessageDeleteComplete(e){v.Logger.warn("MessagePullHandler: handleMessageDeleteComplete",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/delete",{id:e.id});const s={counter:e.counter};const a=Boolean(e.newLastMessage);if(a){s.lastMessageId=e.newLastMessage.id;s.lastMessageViews=e.lastMessageViews}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/update",{dialogId:e.dialogId,fields:s})}handleAddReaction(e){v.Logger.warn("MessagePullHandler: handleAddReaction",e);const{actualReactions:{reaction:s,usersShort:a},userId:t,reaction:i}=e;if(b.Core.getUserId()===t){s.ownReactions=[i]}const l=new d.UserManager;l.addUsersToModel(a);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/reactions/set",[s])}handleDeleteReaction(e){v.Logger.warn("MessagePullHandler: handleDeleteReaction",e);const{actualReactions:{reaction:s}}=e;babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/reactions/set",[s])}handleMessageParamsUpdate(e){v.Logger.warn("MessagePullHandler: handleMessageParamsUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.id,chatId:e.chatId,fields:{params:e.params}})}handleReadMessage(e,s){v.Logger.warn("MessagePullHandler: handleReadMessage",e);const t=a.UuidManager.getInstance();if(t.hasActionUuid(s.action_uuid)){v.Logger.warn("MessagePullHandler: handleReadMessage: we have this uuid, skip");t.removeActionUuid(s.action_uuid);return}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/readMessages",{chatId:e.chatId,messageIds:e.viewedMessages}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{counter:e.counter,lastId:e.lastId}})})).catch((e=>{console.error("MessagePullHandler: error handling readMessage",e)}))}handleReadMessageOpponent(e){v.Logger.warn("MessagePullHandler: handleReadMessageOpponent",e);babelHelpers.classPrivateFieldLooseBase(this,m)[m](e);babelHelpers.classPrivateFieldLooseBase(this,F)[F](e)}handlePinAdd(e){v.Logger.warn("MessagePullHandler: handlePinAdd",e);babelHelpers.classPrivateFieldLooseBase(this,L)[L](e);babelHelpers.classPrivateFieldLooseBase(this,P)[P](e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/store",e.additionalMessages);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/pin/add",{chatId:e.pin.chatId,messageId:e.pin.messageId});if(b.Core.getUserId()!==e.pin.authorId);}handlePinDelete(e){v.Logger.warn("MessagePullHandler: handlePinDelete",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/pin/delete",{chatId:e.chatId,messageId:e.messageId})}}function w(e){var s,a;if(!(e!=null&&e.chat[e.chatId])){return}const t={...e.chat[e.chatId],dialogId:e.dialogId};const i=Boolean(babelHelpers.classPrivateFieldLooseBase(this,U)[U](e.dialogId));const l=!e.notify||((s=e.message)==null?void 0:(a=s.params)==null?void 0:a.NOTIFY)==="N";if(!i&&!l&&!t.role){t.role=o.UserRole.member}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/set",t)}function O(e){if(!e.users){return}const s=new d.UserManager;s.setUsersToModel(Object.values(e.users))}function k(e){if(!e.files){return}const s=Object.values(e.files);s.forEach((s=>{var a;const t=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["files/isInCollection"]({fileId:(a=e.message)==null?void 0:a.templateFileId});if(t){var i;babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("files/updateWithId",{id:(i=e.message)==null?void 0:i.templateFileId,fields:s})}else{babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("files/set",s)}}))}function D(e){const s=babelHelpers.classPrivateFieldLooseBase(this,U)[U](e.dialogId,true);if(s.inited&&s.hasNextPage){return}const a=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["application/isChatOpen"](e.dialogId);const i=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["messages/getChatUnreadMessages"](e.chatId);if(!a&&i.length>t.MessageService.getMessageRequestLimit()){const s=new t.MessageService({chatId:e.chatId});s.reloadMessageList();return}babelHelpers.classPrivateFieldLooseBase(this,H)[H](e.message);babelHelpers.classPrivateFieldLooseBase(this,B)[B](e.chatId)}function S(e){const s={...e};if(e.senderId===b.Core.getUserId()){s.unread=false}else{s.unread=true;s.viewed=false}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/setChatCollection",{messages:[s]})}function R(e){const s=babelHelpers.classPrivateFieldLooseBase(this,U)[U](e.dialogId,true);const a={};if(e.message.id>s.lastMessageId){a.lastMessageId=e.message.id}if(e.message.senderId===b.Core.getUserId()&&e.message.id>s.lastReadId){a.lastId=e.message.id}a.counter=e.counter;babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/update",{dialogId:e.dialogId,fields:a});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/clearLastMessageViews",{dialogId:e.dialogId})}function A(e){babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/setViewedByOthers",{ids:e.viewedMessages})}function T(e){const s=babelHelpers.classPrivateFieldLooseBase(this,U)[U](e.dialogId);if(!s){return}const a=e.viewedMessages.includes(s.lastMessageId);if(!a){return}const t=Boolean(s.lastMessageViews.firstViewer);if(t){babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/incrementLastMessageViews",{dialogId:e.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/setLastMessageViews",{dialogId:e.dialogId,fields:{userId:e.userId,userName:e.userName,date:e.date,messageId:s.lastMessageId}})}function N(e){s.EventEmitter.emit(o.EventType.dialog.scrollToBottom,{chatId:e,threshold:o.DialogScrollThreshold.nearTheBottom})}function j(e,s=false){return babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["dialogues/get"](e,s)}var K=babelHelpers.classPrivateFieldLooseKey("store");var X=babelHelpers.classPrivateFieldLooseKey("updateChatUsers");class E{constructor(){Object.defineProperty(this,X,{value:W});Object.defineProperty(this,K,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,K)[K]=b.Core.getStore()}handleChatOwner(e){v.Logger.warn("ChatPullHandler: handleChatOwner",e);babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{ownerId:e.userId}})}handleChatManagers(e){v.Logger.warn("ChatPullHandler: handleChatManagers",e);babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{managerList:e.list}})}handleChatUserAdd(e){v.Logger.warn("ChatPullHandler: handleChatUserAdd",e);babelHelpers.classPrivateFieldLooseBase(this,X)[X](e)}handleChatUserLeave(e){v.Logger.warn("ChatPullHandler: handleChatUserLeave",e);const s=e.userId===b.Core.getUserId();if(s){babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{inited:false}});babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("messages/clearChatCollection",{chatId:e.chatId})}const a=babelHelpers.classPrivateFieldLooseBase(this,K)[K].getters["application/isChatOpen"](e.dialogId);if(s&&a){i.Messenger.openChat()}const t=g.CallManager.getInstance().getCurrentCallDialogId()===e.dialogId;if(s&&t){g.CallManager.getInstance().leaveCurrentCall()}babelHelpers.classPrivateFieldLooseBase(this,X)[X](e)}handleStartWriting(e){v.Logger.warn("ChatPullHandler: handleStartWriting",e);const{dialogId:s,userId:a,userName:t}=e;babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/startWriting",{dialogId:s,userId:a,userName:t})}handleChatUnread(e){v.Logger.warn("ChatPullHandler: handleChatUnread",e);let s=0;if(e.active===true){s=e.markedId}babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{markedId:s}})}handleChatMuteNotify(e){if(e.muted){babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/mute",{dialogId:e.dialogId});return true}babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/unmute",{dialogId:e.dialogId})}handleChatRename(e){const s=babelHelpers.classPrivateFieldLooseBase(this,K)[K].getters["dialogues/getByChatId"](e.chatId);if(!s){return false}babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:s.dialogId,fields:{name:e.name}})}handleChatAvatar(e){const s=babelHelpers.classPrivateFieldLooseBase(this,K)[K].getters["dialogues/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:s.dialogId,fields:{avatar:e.avatar}})}handleReadAllChats(){v.Logger.warn("ChatPullHandler: handleReadAllChats");babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/clearCounters");babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("recent/clearUnread")}}function W(e){if(e.users){const s=new d.UserManager;s.setUsersToModel(Object.values(e.users))}babelHelpers.classPrivateFieldLooseBase(this,K)[K].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{userCounter:e.userCount}})}var V=babelHelpers.classPrivateFieldLooseKey("store");class x{constructor(){Object.defineProperty(this,V,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,V)[V]=b.Core.getStore()}handleUserInvite(e){if(e.invited){return}babelHelpers.classPrivateFieldLooseBase(this,V)[V].dispatch("users/update",{id:e.userId,fields:e.user})}}class _{handleDesktopOnline(e){v.Logger.warn("DesktopPullHandler: handleDesktopOnline",e);const s=c.DesktopManager.getInstance();s.setDesktopActive(true);r.CounterManager.getInstance().removeBrowserTitleCounter()}handleDesktopOffline(){v.Logger.warn("DesktopPullHandler: handleDesktopOffline");c.DesktopManager.getInstance().setDesktopActive(false)}}class Y{handleSettingsUpdate(e){v.Logger.warn("SettingsPullHandler: handleSettingsUpdate",e);Object.entries(e).forEach((([e,s])=>{b.Core.getStore().dispatch("application/settings/set",{[e]:s})}))}}var q=babelHelpers.classPrivateFieldLooseKey("messageHandler");var G=babelHelpers.classPrivateFieldLooseKey("chatHandler");var z=babelHelpers.classPrivateFieldLooseKey("userHandler");var J=babelHelpers.classPrivateFieldLooseKey("desktopHandler");var Q=babelHelpers.classPrivateFieldLooseKey("settingsHandler");class Z{constructor(){Object.defineProperty(this,q,{writable:true,value:void 0});Object.defineProperty(this,G,{writable:true,value:void 0});Object.defineProperty(this,z,{writable:true,value:void 0});Object.defineProperty(this,J,{writable:true,value:void 0});Object.defineProperty(this,Q,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,q)[q]=new y;babelHelpers.classPrivateFieldLooseBase(this,G)[G]=new E;babelHelpers.classPrivateFieldLooseBase(this,z)[z]=new x;babelHelpers.classPrivateFieldLooseBase(this,J)[J]=new _;babelHelpers.classPrivateFieldLooseBase(this,Q)[Q]=new Y}getModuleId(){return"im"}handleMessage(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleMessageAdd(e)}handleMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleMessageAdd(e)}handleMessageUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleMessageUpdate(e)}handleMessageDelete(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleMessageDelete(e)}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleMessageDeleteComplete(e)}handleAddReaction(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleAddReaction(e)}handleDeleteReaction(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleDeleteReaction(e)}handleMessageParamsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleMessageParamsUpdate(e)}handleReadMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleReadMessage(e,s)}handleReadMessageChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleReadMessage(e,s)}handleReadMessageOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleReadMessageOpponent(e)}handleReadMessageChatOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleReadMessageOpponent(e)}handlePinAdd(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handlePinAdd(e)}handlePinDelete(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handlePinDelete(e)}handleChatOwner(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatOwner(e)}handleChatManagers(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatManagers(e)}handleChatUserAdd(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatUserAdd(e)}handleChatUserLeave(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatUserLeave(e)}handleStartWriting(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleStartWriting(e)}handleChatUnread(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatUnread(e)}handleReadAllChats(){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleReadAllChats()}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatMuteNotify(e)}handleChatRename(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatRename(e)}handleChatAvatar(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleChatAvatar(e)}handleUserInvite(e){babelHelpers.classPrivateFieldLooseBase(this,z)[z].handleUserInvite(e)}handleDesktopOnline(e){babelHelpers.classPrivateFieldLooseBase(this,J)[J].handleDesktopOnline(e)}handleDesktopOffline(){babelHelpers.classPrivateFieldLooseBase(this,J)[J].handleDesktopOffline()}handleSettingsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,Q)[Q].handleSettingsUpdate(e)}}class ${constructor(){this.store=b.Core.getStore();this.userManager=new d.UserManager}getModuleId(){return"im"}handleMessage(e){this.handleMessageAdd(e)}handleMessageChat(e){this.handleMessageAdd(e)}handleMessageAdd(e){if(e.lines){return}const s=b.Core.getUserId();if(s&&e.userInChat[e.chatId]&&!e.userInChat[e.chatId].includes(s)){return}let a=false;if(p.Type.isArray(e.message.params["ATTACH"])){a=e.message.params["ATTACH"]}let t=false;if(p.Type.isArray(e.message.params["FILE_ID"])){t=e.files[e.message.params["FILE_ID"][0]]}v.Logger.warn("RecentPullHandler: handleMessageAdd",e);const i={id:e.dialogId,message:{id:e.message.id,text:e.message.text,date:e.message.date,senderId:e.message.senderId,sending:false,status:o.MessageStatus.received,attach:a,file:t},dateUpdate:new Date};const l=this.store.getters["recent/get"](e.dialogId);if(l){i.options={birthdayPlaceholder:false};this.store.dispatch("recent/like",{id:e.dialogId,liked:false})}const{senderId:r}=e.message;const d=this.store.state.users;if(d!=null&&d.botList[r]&&d.botList[r].type==="human"){const{text:s}=e.message;setTimeout((()=>{this.store.dispatch("recent/setRecent",i)}),this.getWaitTimeForHumanBot(s));return}this.store.dispatch("recent/setRecent",i)}handleMessageUpdate(e,s,a){const t=this.store.getters["recent/get"](e.dialogId);if(!t||t.message.id!==e.id){return}v.Logger.warn("RecentPullHandler: handleMessageUpdate",e,a);let i=e.text;if(a==="messageDelete"){i=p.Loc.getMessage("IM_PULL_RECENT_MESSAGE_DELETED")}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{id:e.id,text:i,date:t.message.date,status:t.message.status,senderId:e.senderId,params:{withFile:false,withAttach:false}},dateUpdate:new Date}})}handleMessageDelete(e,s,a){this.handleMessageUpdate(e,s,a)}handleMessageDeleteComplete(e){const s=Boolean(e.newLastMessage);if(s){this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:e.newLastMessage,dateUpdate:new Date}})}this.updateUnloadedChatCounter(e)}handleReadMessage(e){this.updateUnloadedChatCounter(e)}handleReadMessageChat(e){if(e.lines){return}this.updateUnloadedChatCounter(e)}handleUnreadMessage(e){this.updateUnloadedChatCounter(e)}handleUnreadMessageChat(e){this.updateUnloadedChatCounter(e)}handleChatMuteNotify(e){this.updateUnloadedChatCounter(e)}handleChatUnread(e){v.Logger.warn("RecentPullHandler: handleChatUnread",e);this.updateUnloadedChatCounter({dialogId:e.dialogId,chatId:e.chatId,counter:e.counter,muted:e.muted,unread:e.active});this.store.dispatch("recent/unread",{id:e.dialogId,action:e.active,dateUpdate:new Date})}handleReadMessageOpponent(e){v.Logger.warn("RecentPullHandler: handleReadMessageOpponent",e);const s=this.store.getters["recent/get"](e.dialogId);const a=Number.parseInt(e.lastId,10);if(!s||s.message.id!==a){return}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{...s.message,status:o.MessageStatus.delivered}}})}handleReadMessageChatOpponent(e){this.handleReadMessageOpponent(e)}handleUnreadMessageOpponent(e){v.Logger.warn("RecentPullHandler: handleUnreadMessageOpponent",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{...s.message,status:o.MessageStatus.received}}})}handleUnreadMessageChatOpponent(e){v.Logger.warn("RecentPullHandler: handleUnreadMessageChatOpponent",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{...s.message,status:e.chatMessageStatus}}})}handleAddReaction(e){v.Logger.warn("RecentPullHandler: handleAddReaction",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}const a=this.store.getters["application/isChatOpen"](e.dialogId);if(a){return}const t=b.Core.getUserId()===e.userId;const i=b.Core.getUserId()===s.message.senderId;if(t||!i){return}this.store.dispatch("recent/like",{id:e.dialogId,messageId:e.actualReactions.reaction.messageId,liked:true})}handleDeleteReaction(e){}handleChatPin(e){v.Logger.warn("RecentPullHandler: handleChatPin",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/pin",{id:e.dialogId,action:e.active,dateUpdate:new Date})}handleChatHide(e){v.Logger.warn("RecentPullHandler: handleChatHide",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/delete",{id:e.dialogId})}handleChatUserLeave(e){v.Logger.warn("RecentPullHandler: handleChatUserLeave",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}if(e.userId!==b.Core.getUserId()){return}this.store.dispatch("recent/delete",{id:e.dialogId})}handleUserInvite(e){var s;v.Logger.warn("RecentPullHandler: handleUserInvite",e);this.store.dispatch("recent/setRecent",{id:e.user.id,invited:(s=e.invited)!=null?s:false});this.userManager.setUsersToModel([e.user])}getWaitTimeForHumanBot(e){const s=1e3;const a=300;const t=5e3;let i=e.split(" ").length*a+s;if(i>t){i=t}return i}updateUnloadedChatCounter(e){const{dialogId:s,chatId:a,counter:t,muted:i,unread:l}=e;const r=this.store.getters["recent/get"](s);if(r){return}v.Logger.warn("RecentPullHandler: updateUnloadedChatCounter:",{dialogId:s,chatId:a,counter:t,muted:i,unread:l});let d=0;if(i){d=0}else if(l&&t===0){d=1}else if(l&&t>0){d=t}else if(!l){d=t}this.store.dispatch("recent/setUnloadedChatCounters",{[a]:d})}}class ee{constructor(){this.store=b.Core.getStore();this.userManager=new d.UserManager;this.updateCounterDebounced=p.Runtime.debounce(this.updateCounter,1500,this)}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleNotifyAdd(e){if(e.onlyFlash===true){return false}this.userManager.setUsersToModel(e.users);this.store.dispatch("notifications/set",e);this.updateCounterDebounced(e.counter)}handleNotifyConfirm(e){this.store.dispatch("notifications/delete",{id:e.id});this.updateCounterDebounced(e.counter)}handleNotifyRead(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:true})}));this.updateCounterDebounced(e.counter)}handleNotifyUnread(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:false})}));this.updateCounterDebounced(e.counter)}handleNotifyDelete(e){const s=Object.keys(e.id).map((e=>Number.parseInt(e,10)));s.forEach((e=>{this.store.dispatch("notifications/delete",{id:e})}));this.updateCounterDebounced(e.counter)}updateCounter(e){this.store.dispatch("notifications/setCounter",e)}}class se{constructor(){this.store=b.Core.getStore();this.userManager=new d.UserManager}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleChatUserAdd(e){if(!this.isSidebarInited(e.chatId)){return}this.userManager.setUsersToModel(Object.values(e.users));this.store.dispatch("sidebar/members/set",{chatId:e.chatId,users:e.newUsers})}handleChatUserLeave(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/members/delete",{chatId:e.chatId,userId:e.userId})}handleTaskAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("sidebar/tasks/set",{chatId:e.link.chatId,tasks:[e.link]})}handleTaskUpdate(e,s){this.handleTaskAdd(e,s)}handleTaskDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/tasks/delete",{chatId:e.chatId,id:e.linkId})}handleCalendarAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("sidebar/meetings/set",{chatId:e.link.chatId,meetings:[e.link]})}handleCalendarUpdate(e,s){this.handleCalendarAdd(e,s)}handleCalendarDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/meetings/delete",{chatId:e.chatId,id:e.linkId})}handleUrlAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("sidebar/links/set",{chatId:e.link.chatId,links:[e.link]});const s=this.store.getters["sidebar/links/getCounter"](e.link.chatId);this.store.dispatch("sidebar/links/setCounter",{chatId:e.link.chatId,counter:s+1})}handleUrlDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/links/delete",{chatId:e.chatId,id:e.linkId})}handleMessageFavoriteAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("files/set",e.files);this.store.dispatch("messages/store",[e.link.message]);this.store.dispatch("sidebar/favorites/set",{chatId:e.link.chatId,favorites:[e.link]});const s=this.store.getters["sidebar/favorites/getCounter"](e.link.chatId);this.store.dispatch("sidebar/favorites/setCounter",{chatId:e.link.chatId,counter:s+1})}handleMessageFavoriteDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/favorites/delete",{chatId:e.chatId,id:e.linkId})}handleFileAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("files/set",e.files);if(!e.link.subType){e.link.subType=o.SidebarDetailBlock.fileUnsorted}this.store.dispatch("sidebar/files/set",{chatId:e.link.chatId,files:[e.link]})}handleFileDelete(e){const s=p.Type.isNumber(e.chatId)?e.chatId:Number.parseInt(e.chatId,10);if(!this.isSidebarInited(s)){return}const a=e.linkId?e.linkId:e.fileId;this.store.dispatch("sidebar/files/delete",{chatId:s,id:a})}handleMessage(e){if(!this.isSidebarInited(e.chatId)||this.isFilesMigrated()){return}this.userManager.setUsersToModel(Object.values(e.users));this.store.dispatch("files/set",Object.values(e.files));Object.values(e.files).forEach((e=>{e.subType=o.SidebarDetailBlock.fileUnsorted;this.store.dispatch("sidebar/files/set",{chatId:e.chatId,files:[e]})}))}isSidebarInited(e){return this.store.getters["sidebar/isInited"](e)}isFilesMigrated(){return this.store.state.sidebar.isFilesMigrated}}var ae=babelHelpers.classPrivateFieldLooseKey("shouldShowNotification");var te=babelHelpers.classPrivateFieldLooseKey("shouldShowLinesNotification");var ie=babelHelpers.classPrivateFieldLooseKey("isChatOpened");var le=babelHelpers.classPrivateFieldLooseKey("isLinesChatOpened");var re=babelHelpers.classPrivateFieldLooseKey("isImportantMessage");var de=babelHelpers.classPrivateFieldLooseKey("shouldShowToUser");var ne=babelHelpers.classPrivateFieldLooseKey("isUserDnd");var oe=babelHelpers.classPrivateFieldLooseKey("desktopWillShowNotification");var he=babelHelpers.classPrivateFieldLooseKey("flashDesktopIcon");var ce=babelHelpers.classPrivateFieldLooseKey("playOpenedChatMessageSound");var ge=babelHelpers.classPrivateFieldLooseKey("playMessageSound");class ue{constructor(){Object.defineProperty(this,ge,{value:me});Object.defineProperty(this,ce,{value:Ce});Object.defineProperty(this,he,{value:He});Object.defineProperty(this,oe,{value:Me});Object.defineProperty(this,ne,{value:Le});Object.defineProperty(this,de,{value:Pe});Object.defineProperty(this,re,{value:fe});Object.defineProperty(this,le,{value:Ie});Object.defineProperty(this,ie,{value:ve});Object.defineProperty(this,te,{value:be});Object.defineProperty(this,ae,{value:pe});this.store=b.Core.getStore()}getModuleId(){return"im"}handleMessage(e){this.handleMessageAdd(e)}handleMessageChat(e){this.handleMessageAdd(e)}handleMessageAdd(e){if(!babelHelpers.classPrivateFieldLooseBase(this,ae)[ae](e)){return}if(babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](e.dialogId)){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce](e);return}babelHelpers.classPrivateFieldLooseBase(this,ge)[ge](e);babelHelpers.classPrivateFieldLooseBase(this,he)[he]();const s=this.store.getters["messages/getById"](e.message.id);const a=this.store.getters["dialogues/get"](e.dialogId,true);const t=this.store.getters["users/get"](s.authorId);h.NotifierManager.getInstance().showMessage({message:s,dialog:a,user:t,lines:Boolean(e.lines)})}handleNotifyAdd(e){if(e.onlyFlash===true||babelHelpers.classPrivateFieldLooseBase(this,ne)[ne]()||babelHelpers.classPrivateFieldLooseBase(this,oe)[oe]()||g.CallManager.getInstance().hasCurrentCall()){return}if(document.hasFocus()){const e=this.store.getters["application/areNotificationsOpen"];if(e){return}}const s=this.store.getters["notifications/getById"](e.id);const a=this.store.getters["users/get"](e.userId);if(e.silent!=="Y"){u.SoundNotificationManager.getInstance().playOnce(o.SoundType.reminder)}babelHelpers.classPrivateFieldLooseBase(this,he)[he]();h.NotifierManager.getInstance().showNotification(s,a)}}function pe(e){var s,a;if(b.Core.getUserId()===e.message.senderId){return false}if(e.lines&&!babelHelpers.classPrivateFieldLooseBase(this,te)[te](e)){return false}const t=!e.notify||((s=e.message)==null?void 0:(a=s.params)==null?void 0:a.NOTIFY)==="N";if(t||!babelHelpers.classPrivateFieldLooseBase(this,de)[de](e)||babelHelpers.classPrivateFieldLooseBase(this,oe)[oe]()){return false}const i=g.CallManager.getInstance().hasCurrentCall();if(i&&g.CallManager.getInstance().getCurrentCallDialogId()!==e.dialogId.toString()){return false}const l=g.CallManager.getInstance().hasCurrentScreenSharing();if(l){return false}return true}function be(e){if(babelHelpers.classPrivateFieldLooseBase(this,le)[le](e.dialogId)){return false}const s=e.message.senderId;if(s>0&&e.users[s].extranet===false){return true}const a=this.store.getters["recent/getSpecificLinesCounter"](e.chatId);return a===0}function ve(e){const s=this.store.getters["application/isChatOpen"](e);return Boolean(document.hasFocus()&&s)}function Ie(e){const s=this.store.getters["application/isLinesChatOpen"](e);return Boolean(document.hasFocus()&&s)}function fe(e){const{message:s}=e;return s.isImportant||s.importantFor.includes(b.Core.getUserId())}function Pe(e){if(babelHelpers.classPrivateFieldLooseBase(this,re)[re](e)){return true}const s=this.store.getters["dialogues/get"](e.dialogId,true);const a=s.muteList.includes(b.Core.getUserId());return!babelHelpers.classPrivateFieldLooseBase(this,ne)[ne]()&&!a}function Le(){const e=this.store.getters["users/get"](b.Core.getUserId(),true);return e.status===o.UserStatus.dnd}function Me(){const e=c.DesktopManager.isChatWindow();return!e&&c.DesktopManager.getInstance().isDesktopActive()}function He(){if(!c.DesktopManager.isDesktop()){return}n.DesktopApi.flashIcon()}function Ce(e){if(babelHelpers.classPrivateFieldLooseBase(this,re)[re](e)){u.SoundNotificationManager.getInstance().forcePlayOnce(o.SoundType.newMessage2);return}u.SoundNotificationManager.getInstance().playOnce(o.SoundType.newMessage2)}function me(e){if(babelHelpers.classPrivateFieldLooseBase(this,re)[re](e)){u.SoundNotificationManager.getInstance().forcePlayOnce(o.SoundType.newMessage1);return}u.SoundNotificationManager.getInstance().playOnce(o.SoundType.newMessage1)}class Fe{constructor(){this.store=b.Core.getStore()}getModuleId(){return"im"}handleMessageChat(e){this.updateUnloadedLinesCounter(e)}handleReadMessageChat(e){this.updateUnloadedLinesCounter(e)}handleUnreadMessageChat(e){this.updateUnloadedLinesCounter(e)}updateUnloadedLinesCounter(e){const{dialogId:s,chatId:a,counter:t,lines:i}=e;if(!i||p.Type.isUndefined(t)){return}v.Logger.warn("LinesPullHandler: updateUnloadedLinesCounter:",{dialogId:s,chatId:a,counter:t});this.store.dispatch("recent/setUnloadedLinesCounters",{[a]:t})}}e.BasePullHandler=Z;e.RecentPullHandler=$;e.NotificationPullHandler=ee;e.SidebarPullHandler=se;e.NotifierPullHandler=ue;e.LinesPullHandler=Fe})(this.BX.Messenger.v2.Provider.Pull=this.BX.Messenger.v2.Provider.Pull||{},BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Application,BX.Messenger.v2.Lib);
//# sourceMappingURL=registry.bundle.map.js