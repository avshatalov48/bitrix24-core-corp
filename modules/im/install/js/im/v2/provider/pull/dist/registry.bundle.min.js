this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Provider=this.BX.Messenger.v2.Provider||{};(function(e,s,a,t,i,l,d,r,n,o,h,c,g,u,p,b){"use strict";var I=babelHelpers.classPrivateFieldLooseKey("store");var v=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var f=babelHelpers.classPrivateFieldLooseKey("setUsers");var P=babelHelpers.classPrivateFieldLooseKey("setFiles");var L=babelHelpers.classPrivateFieldLooseKey("handleAddingMessageToModel");var M=babelHelpers.classPrivateFieldLooseKey("addMessageToModel");var H=babelHelpers.classPrivateFieldLooseKey("updateDialog");var m=babelHelpers.classPrivateFieldLooseKey("updateMessageViewedByOthers");var C=babelHelpers.classPrivateFieldLooseKey("updateChatLastMessageViews");var F=babelHelpers.classPrivateFieldLooseKey("sendScrollEvent");var B=babelHelpers.classPrivateFieldLooseKey("getDialog");class U{constructor(){Object.defineProperty(this,B,{value:N});Object.defineProperty(this,F,{value:T});Object.defineProperty(this,C,{value:S});Object.defineProperty(this,m,{value:A});Object.defineProperty(this,H,{value:D});Object.defineProperty(this,M,{value:R});Object.defineProperty(this,L,{value:O});Object.defineProperty(this,P,{value:k});Object.defineProperty(this,f,{value:y});Object.defineProperty(this,v,{value:w});Object.defineProperty(this,I,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,I)[I]=h.Core.getStore()}handleMessageAdd(e){r.Logger.warn("MessagePullHandler: handleMessageAdd",e);babelHelpers.classPrivateFieldLooseBase(this,v)[v](e);babelHelpers.classPrivateFieldLooseBase(this,f)[f](e);babelHelpers.classPrivateFieldLooseBase(this,P)[P](e);const s=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["messages/isInChatCollection"]({messageId:e.message.templateId});const a=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["messages/isInChatCollection"]({messageId:e.message.id});if(a){r.Logger.warn("New message pull handler: we already have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.message.id,fields:e.message});babelHelpers.classPrivateFieldLooseBase(this,F)[F](e.chatId)}else if(!a&&s){r.Logger.warn("New message pull handler: we already have the TEMPORARY message",e.message);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/updateWithId",{id:e.message.templateId,fields:e.message})}else if(!a&&!s){r.Logger.warn("New message pull handler: we dont have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,L)[L](e)}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.message.senderId});babelHelpers.classPrivateFieldLooseBase(this,H)[H](e)}handleMessageUpdate(e){r.Logger.warn("MessagePullHandler: handleMessageUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.id,fields:{text:e.text,params:e.params}});babelHelpers.classPrivateFieldLooseBase(this,F)[F](e.chatId)}handleMessageDelete(e){r.Logger.warn("MessagePullHandler: handleMessageDelete",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.id,fields:{params:e.params}})}handleMessageDeleteComplete(e){r.Logger.warn("MessagePullHandler: handleMessageDeleteComplete",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/stopWriting",{dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/delete",{id:e.id});const s={counter:e.counter};const a=Boolean(e.newLastMessage);if(a){s.lastMessageId=e.newLastMessage.id;s.lastMessageViews=e.lastMessageViews}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/update",{dialogId:e.dialogId,fields:s})}handleAddReaction(e){r.Logger.warn("MessagePullHandler: handleAddReaction",e);const{actualReactions:{reaction:s,usersShort:a},userId:t,reaction:i}=e;if(h.Core.getUserId()===t){s.ownReactions=[i]}const l=new o.UserManager;l.addUsersToModel(a);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/reactions/set",[s])}handleDeleteReaction(e){r.Logger.warn("MessagePullHandler: handleDeleteReaction",e);const{actualReactions:{reaction:s}}=e;babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/reactions/set",[s])}handleMessageParamsUpdate(e){r.Logger.warn("MessagePullHandler: handleMessageParamsUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/update",{id:e.id,chatId:e.chatId,fields:{params:e.params}})}handleReadMessage(e,s){r.Logger.warn("MessagePullHandler: handleReadMessage",e);const t=a.UuidManager.getInstance();if(t.hasActionUuid(s.action_uuid)){r.Logger.warn("MessagePullHandler: handleReadMessage: we have this uuid, skip");t.removeActionUuid(s.action_uuid);return}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/readMessages",{chatId:e.chatId,messageIds:e.viewedMessages}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{counter:e.counter,lastId:e.lastId}})}))}handleReadMessageOpponent(e){r.Logger.warn("MessagePullHandler: handleReadMessageOpponent",e);babelHelpers.classPrivateFieldLooseBase(this,m)[m](e);babelHelpers.classPrivateFieldLooseBase(this,C)[C](e)}handlePinAdd(e){r.Logger.warn("MessagePullHandler: handlePinAdd",e);babelHelpers.classPrivateFieldLooseBase(this,P)[P](e);babelHelpers.classPrivateFieldLooseBase(this,f)[f](e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/store",e.pin.message);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/pin/add",{chatId:e.pin.chatId,messageId:e.pin.messageId});if(h.Core.getUserId()!==e.pin.authorId);}handlePinDelete(e){r.Logger.warn("MessagePullHandler: handlePinDelete",e);babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/pin/delete",{chatId:e.chatId,messageId:e.messageId})}}function w(e){if(!(e!=null&&e.chat[e.chatId])){return}const s={...e.chat[e.chatId],dialogId:e.dialogId};babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/set",s)}function y(e){if(!e.users){return}const s=new o.UserManager;s.setUsersToModel(Object.values(e.users))}function k(e){if(!e.files){return}const s=Object.values(e.files);s.forEach((s=>{var a;const t=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["files/isInCollection"]({fileId:(a=e.message)==null?void 0:a.templateFileId});if(t){var i;babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("files/updateWithId",{id:(i=e.message)==null?void 0:i.templateFileId,fields:s})}else{babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("files/set",s)}}))}function O(e){const s=babelHelpers.classPrivateFieldLooseBase(this,B)[B](e.dialogId,true);if(s.inited&&s.hasNextPage){return}const a=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["application/isChatOpen"](e.dialogId);const i=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["messages/getChatUnreadMessages"](e.chatId);if(!a&&i.length>t.MessageService.getMessageRequestLimit()){const s=new t.MessageService({chatId:e.chatId});s.reloadMessageList();return}babelHelpers.classPrivateFieldLooseBase(this,M)[M](e.message);babelHelpers.classPrivateFieldLooseBase(this,F)[F](e.chatId)}function R(e){const s={...e};if(e.senderId!==h.Core.getUserId()){s.unread=true;s.viewed=false}else{s.unread=false}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/setChatCollection",{messages:[s]})}function D(e){const s=babelHelpers.classPrivateFieldLooseBase(this,B)[B](e.dialogId,true);const a={};if(e.message.id>s.lastMessageId){a.lastMessageId=e.message.id}if(e.message.senderId===h.Core.getUserId()&&e.message.id>s.lastReadId){a.lastId=e.message.id}else{a.counter=e.counter}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/update",{dialogId:e.dialogId,fields:a});babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/clearLastMessageViews",{dialogId:e.dialogId})}function A(e){babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("messages/setViewedByOthers",{ids:e.viewedMessages})}function S(e){const s=babelHelpers.classPrivateFieldLooseBase(this,B)[B](e.dialogId);if(!s){return}const a=e.viewedMessages.includes(s.lastMessageId);if(!a){return}const t=!!s.lastMessageViews.firstViewer;if(t){babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/incrementLastMessageViews",{dialogId:e.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,I)[I].dispatch("dialogues/setLastMessageViews",{dialogId:e.dialogId,fields:{userId:e.userId,userName:e.userName,date:e.date,messageId:s.lastMessageId}})}function T(e){s.EventEmitter.emit(c.EventType.dialog.scrollToBottom,{chatId:e,threshold:c.DialogScrollThreshold.nearTheBottom})}function N(e,s=false){return babelHelpers.classPrivateFieldLooseBase(this,I)[I].getters["dialogues/get"](e,s)}var j=babelHelpers.classPrivateFieldLooseKey("store");var X=babelHelpers.classPrivateFieldLooseKey("updateChatUsers");class K{constructor(){Object.defineProperty(this,X,{value:E});Object.defineProperty(this,j,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,j)[j]=h.Core.getStore()}handleChatOwner(e){r.Logger.warn("ChatPullHandler: handleChatOwner",e);babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{ownerId:e.userId}})}handleChatManagers(e){r.Logger.warn("ChatPullHandler: handleChatManagers",e);babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{managerList:e.list}})}handleChatUserAdd(e){r.Logger.warn("ChatPullHandler: handleChatUserAdd",e);babelHelpers.classPrivateFieldLooseBase(this,X)[X](e)}handleChatUserLeave(e){r.Logger.warn("ChatPullHandler: handleChatUserLeave",e);const s=e.userId===h.Core.getUserId();if(s){babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{inited:false}});babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("messages/clearChatCollection",{chatId:e.chatId})}const a=babelHelpers.classPrivateFieldLooseBase(this,j)[j].getters["application/isChatOpen"](e.dialogId);if(s&&a){i.Messenger.openChat()}const t=p.CallManager.getInstance().getCurrentCallDialogId()===e.dialogId;if(s&&t){p.CallManager.getInstance().leaveCurrentCall()}babelHelpers.classPrivateFieldLooseBase(this,X)[X](e)}handleStartWriting(e){r.Logger.warn("ChatPullHandler: handleStartWriting",e);const{dialogId:s,userId:a,userName:t}=e;babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/startWriting",{dialogId:s,userId:a,userName:t})}handleChatUnread(e){r.Logger.warn("ChatPullHandler: handleChatUnread",e);let s=0;if(e.active===true){s=e.markedId}babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{markedId:s}})}handleChatMuteNotify(e){if(e.muted){babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/mute",{dialogId:e.dialogId});return true}babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/unmute",{dialogId:e.dialogId})}handleChatRename(e){const s=babelHelpers.classPrivateFieldLooseBase(this,j)[j].getters["dialogues/getByChatId"](e.chatId);if(!s){return false}babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:s.dialogId,fields:{name:e.name}})}handleChatAvatar(e){const s=babelHelpers.classPrivateFieldLooseBase(this,j)[j].getters["dialogues/getByChatId"](e.chatId);if(!s){return false}babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:s.dialogId,fields:{avatar:e.avatar}})}handleReadAllChats(){r.Logger.warn("ChatPullHandler: handleReadAllChats");babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/clearCounters");babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("recent/clearUnread")}}function E(e){if(e.users){const s=new o.UserManager;s.setUsersToModel(e.users)}babelHelpers.classPrivateFieldLooseBase(this,j)[j].dispatch("dialogues/update",{dialogId:e.dialogId,fields:{userCounter:e.userCount}})}var W=babelHelpers.classPrivateFieldLooseKey("store");class V{constructor(){Object.defineProperty(this,W,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,W)[W]=h.Core.getStore()}handleUserInvite(e){if(e.invited){return}babelHelpers.classPrivateFieldLooseBase(this,W)[W].dispatch("users/update",{id:e.userId,fields:e.user})}}class x{handleDesktopOnline(e){r.Logger.warn("DesktopPullHandler: handleDesktopOnline",e);const s=u.DesktopManager.getInstance();s.setDesktopActive(true);d.CounterManager.getInstance().removeBrowserTitleCounter()}handleDesktopOffline(){r.Logger.warn("DesktopPullHandler: handleDesktopOffline");u.DesktopManager.getInstance().setDesktopActive(false)}}var _=babelHelpers.classPrivateFieldLooseKey("messageHandler");var Y=babelHelpers.classPrivateFieldLooseKey("chatHandler");var q=babelHelpers.classPrivateFieldLooseKey("userHandler");var G=babelHelpers.classPrivateFieldLooseKey("desktopHandler");class z{constructor(){Object.defineProperty(this,_,{writable:true,value:void 0});Object.defineProperty(this,Y,{writable:true,value:void 0});Object.defineProperty(this,q,{writable:true,value:void 0});Object.defineProperty(this,G,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,_)[_]=new U;babelHelpers.classPrivateFieldLooseBase(this,Y)[Y]=new K;babelHelpers.classPrivateFieldLooseBase(this,q)[q]=new V;babelHelpers.classPrivateFieldLooseBase(this,G)[G]=new x}getModuleId(){return"im"}handleMessage(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleMessageAdd(e)}handleMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleMessageAdd(e)}handleMessageUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleMessageUpdate(e)}handleMessageDelete(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleMessageDelete(e)}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleMessageDeleteComplete(e)}handleAddReaction(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleAddReaction(e)}handleDeleteReaction(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleDeleteReaction(e)}handleMessageParamsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleMessageParamsUpdate(e)}handleReadMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleReadMessage(e,s)}handleReadMessageChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleReadMessage(e,s)}handleReadMessageOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleReadMessageOpponent(e)}handleReadMessageChatOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handleReadMessageOpponent(e)}handlePinAdd(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handlePinAdd(e)}handlePinDelete(e){babelHelpers.classPrivateFieldLooseBase(this,_)[_].handlePinDelete(e)}handleChatOwner(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatOwner(e)}handleChatManagers(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatManagers(e)}handleChatUserAdd(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatUserAdd(e)}handleChatUserLeave(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatUserLeave(e)}handleStartWriting(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleStartWriting(e)}handleChatUnread(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatUnread(e)}handleReadAllChats(){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleReadAllChats()}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatMuteNotify(e)}handleChatRename(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatRename(e)}handleChatAvatar(e){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y].handleChatAvatar(e)}handleUserInvite(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q].handleUserInvite(e)}handleDesktopOnline(e){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleDesktopOnline(e)}handleDesktopOffline(){babelHelpers.classPrivateFieldLooseBase(this,G)[G].handleDesktopOffline()}}class J{constructor(){this.store=h.Core.getStore();this.userManager=new o.UserManager}getModuleId(){return"im"}handleMessage(e){this.handleMessageAdd(e)}handleMessageChat(e){this.handleMessageAdd(e)}handleMessageAdd(e){if(e.lines){return}const s=h.Core.getUserId();if(s&&e.userInChat[e.chatId]&&!e.userInChat[e.chatId].includes(s)){return}let a=false;if(n.Type.isArray(e.message.params["ATTACH"])){a=e.message.params["ATTACH"]}let t=false;if(n.Type.isArray(e.message.params["FILE_ID"])){t=e.files[e.message.params["FILE_ID"][0]]}r.Logger.warn("RecentPullHandler: handleMessageAdd",e);const i={id:e.dialogId,message:{id:e.message.id,text:e.message.text,date:e.message.date,senderId:e.message.senderId,sending:false,attach:a,file:t}};const l=this.store.getters["recent/get"](e.dialogId);if(l){i.options={birthdayPlaceholder:false};this.store.dispatch("recent/like",{id:e.dialogId,liked:false})}const{senderId:d}=e.message;const o=this.store.state.users;if(o!=null&&o.botList[d]&&o.botList[d].type==="human"){const{text:s}=e.message;setTimeout((()=>{this.store.dispatch("recent/setRecent",i)}),this.getWaitTimeForHumanBot(s));return}this.store.dispatch("recent/setRecent",i)}handleMessageUpdate(e,s,a){const t=this.store.getters["recent/get"](e.dialogId);if(!t||t.message.id!==e.id){return}r.Logger.warn("RecentPullHandler: handleMessageUpdate",e,a);let i=e.text;if(a==="messageDelete"){i=n.Loc.getMessage("IM_PULL_RECENT_MESSAGE_DELETED")}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{id:e.id,text:i,date:t.message.date,status:t.message.status,senderId:e.senderId,params:{withFile:false,withAttach:false}}}})}handleMessageDelete(e,s,a){this.handleMessageUpdate(e,s,a)}handleMessageDeleteComplete(e){const s=Boolean(e.newLastMessage);if(s){this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:e.newLastMessage}})}this.updateUnloadedChatCounter(e)}handleReadMessage(e){this.updateUnloadedChatCounter(e)}handleReadMessageChat(e){this.updateUnloadedChatCounter(e)}handleUnreadMessage(e){this.updateUnloadedChatCounter(e)}handleUnreadMessageChat(e){this.updateUnloadedChatCounter(e)}handleChatMuteNotify(e){this.updateUnloadedChatCounter(e)}handleChatUnread(e){r.Logger.warn("RecentPullHandler: handleChatUnread",e);this.updateUnloadedChatCounter({dialogId:e.dialogId,chatId:e.chatId,counter:e.counter,muted:e.muted,unread:e.active});this.store.dispatch("recent/unread",{id:e.dialogId,action:e.active})}handleReadMessageOpponent(e){r.Logger.warn("RecentPullHandler: handleReadMessageOpponent",e);const s=this.store.getters["recent/get"](e.dialogId);const a=Number.parseInt(e.lastId,10);if(!s||s.message.id!==a){return}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{...s.message,status:c.MessageStatus.delivered}}})}handleReadMessageChatOpponent(e){this.handleReadMessageOpponent(e)}handleUnreadMessageOpponent(e){r.Logger.warn("RecentPullHandler: handleUnreadMessageOpponent",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{...s.message,status:c.MessageStatus.received}}})}handleUnreadMessageChatOpponent(e){r.Logger.warn("RecentPullHandler: handleUnreadMessageChatOpponent",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/update",{id:e.dialogId,fields:{message:{...s.message,status:e.chatMessageStatus}}})}handleAddReaction(e){r.Logger.warn("RecentPullHandler: handleAddReaction",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}const a=this.store.getters["application/isChatOpen"](e.dialogId);if(a){return}const t=h.Core.getUserId()===e.userId;const i=h.Core.getUserId()===s.message.senderId;if(t||!i){return}this.store.dispatch("recent/like",{id:e.dialogId,messageId:e.actualReactions.reaction.messageId,liked:true})}handleDeleteReaction(e){}handleChatPin(e){r.Logger.warn("RecentPullHandler: handleChatPin",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/pin",{id:e.dialogId,action:e.active})}handleChatHide(e){r.Logger.warn("RecentPullHandler: handleChatHide",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}this.store.dispatch("recent/delete",{id:e.dialogId})}handleChatUserLeave(e){r.Logger.warn("RecentPullHandler: handleChatUserLeave",e);const s=this.store.getters["recent/get"](e.dialogId);if(!s){return}if(e.userId!==h.Core.getUserId()){return}this.store.dispatch("recent/delete",{id:e.dialogId})}handleUserInvite(e){var s;r.Logger.warn("RecentPullHandler: handleUserInvite",e);this.store.dispatch("recent/setRecent",{id:e.user.id,invited:(s=e.invited)!=null?s:false});this.userManager.setUsersToModel([e.user])}getWaitTimeForHumanBot(e){const s=1e3;const a=300;const t=5e3;let i=e.split(" ").length*a+s;if(i>t){i=t}return i}updateUnloadedChatCounter(e){const{dialogId:s,chatId:a,counter:t,muted:i,unread:l}=e;const d=this.store.getters["recent/get"](s);if(d){return}r.Logger.warn("RecentPullHandler: updateUnloadedChatCounter:",{dialogId:s,chatId:a,counter:t,muted:i,unread:l});let n=0;if(i){n=0}else if(l&&t===0){n=1}else if(l&&t>0){n=t}else if(!l){n=t}this.store.dispatch("recent/setUnloadedChatCounters",{[a]:n})}}class Q{constructor(){this.store=h.Core.getStore();this.userManager=new o.UserManager;this.updateCounterDebounced=n.Runtime.debounce(this.updateCounter,1500,this)}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleNotifyAdd(e){if(e.onlyFlash===true){return false}this.userManager.setUsersToModel(e.users);this.store.dispatch("notifications/set",e);this.updateCounterDebounced(e.counter)}handleNotifyConfirm(e){this.store.dispatch("notifications/delete",{id:e.id});this.updateCounterDebounced(e.counter)}handleNotifyRead(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:true})}));this.updateCounterDebounced(e.counter)}handleNotifyUnread(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:false})}));this.updateCounterDebounced(e.counter)}handleNotifyDelete(e){const s=Object.keys(e.id).map((e=>Number.parseInt(e,10)));s.forEach((e=>{this.store.dispatch("notifications/delete",{id:e})}));this.updateCounterDebounced(e.counter)}updateCounter(e){this.store.dispatch("notifications/setCounter",e)}}class Z{constructor(){this.store=h.Core.getStore();this.userManager=new o.UserManager}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleChatUserAdd(e){if(!this.isSidebarInited(e.chatId)){return}this.userManager.setUsersToModel(Object.values(e.users));this.store.dispatch("sidebar/members/set",{chatId:e.chatId,users:e.newUsers})}handleChatUserLeave(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/members/delete",{chatId:e.chatId,userId:e.userId})}handleTaskAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("sidebar/tasks/set",{chatId:e.link.chatId,tasks:[e.link]})}handleTaskUpdate(e,s){this.handleTaskAdd(e,s)}handleTaskDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/tasks/delete",{chatId:e.chatId,id:e.linkId})}handleCalendarAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("sidebar/meetings/set",{chatId:e.link.chatId,meetings:[e.link]})}handleCalendarUpdate(e,s){this.handleCalendarAdd(e,s)}handleCalendarDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/meetings/delete",{chatId:e.chatId,id:e.linkId})}handleUrlAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("sidebar/links/set",{chatId:e.link.chatId,links:[e.link]});const s=this.store.getters["sidebar/links/getCounter"](e.link.chatId);this.store.dispatch("sidebar/links/setCounter",{chatId:e.link.chatId,counter:s+1})}handleUrlDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/links/delete",{chatId:e.chatId,id:e.linkId})}handleMessageFavoriteAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("files/set",e.files);this.store.dispatch("messages/store",[e.link.message]);this.store.dispatch("sidebar/favorites/set",{chatId:e.link.chatId,favorites:[e.link]});const s=this.store.getters["sidebar/favorites/getCounter"](e.link.chatId);this.store.dispatch("sidebar/favorites/setCounter",{chatId:e.link.chatId,counter:s+1})}handleMessageFavoriteDelete(e){if(!this.isSidebarInited(e.chatId)){return}this.store.dispatch("sidebar/favorites/delete",{chatId:e.chatId,id:e.linkId})}handleFileAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("files/set",e.files);if(!e.link.subType){e.link.subType=c.SidebarDetailBlock.fileUnsorted}this.store.dispatch("sidebar/files/set",{chatId:e.link.chatId,files:[e.link]})}handleFileDelete(e){const s=n.Type.isNumber(e.chatId)?e.chatId:Number.parseInt(e.chatId,10);if(!this.isSidebarInited(s)){return}const a=e.linkId?e.linkId:e.fileId;this.store.dispatch("sidebar/files/delete",{chatId:s,id:a})}handleMessage(e){if(!this.isSidebarInited(e.chatId)||this.isFilesMigrated()){return}this.userManager.setUsersToModel(Object.values(e.users));this.store.dispatch("files/set",Object.values(e.files));Object.values(e.files).forEach((e=>{e.subType=c.SidebarDetailBlock.fileUnsorted;this.store.dispatch("sidebar/files/set",{chatId:e.chatId,files:[e]})}))}isSidebarInited(e){return this.store.getters["sidebar/isInited"](e)}isFilesMigrated(){return this.store.state.sidebar.isFilesMigrated}}var $=babelHelpers.classPrivateFieldLooseKey("shouldShowNotification");var ee=babelHelpers.classPrivateFieldLooseKey("isChatOpened");var se=babelHelpers.classPrivateFieldLooseKey("isUserDnd");var ae=babelHelpers.classPrivateFieldLooseKey("desktopWillShowNotification");class te{constructor(){Object.defineProperty(this,ae,{value:re});Object.defineProperty(this,se,{value:de});Object.defineProperty(this,ee,{value:le});Object.defineProperty(this,$,{value:ie});this.store=h.Core.getStore()}getModuleId(){return"im"}handleMessage(e){this.handleMessageAdd(e)}handleMessageChat(e){this.handleMessageAdd(e)}handleMessageAdd(e){if(!babelHelpers.classPrivateFieldLooseBase(this,$)[$](e)){return}if(babelHelpers.classPrivateFieldLooseBase(this,ee)[ee](e)){b.SoundNotificationManager.getInstance().playOnce(c.SoundType.newMessage2);return}b.SoundNotificationManager.getInstance().playOnce(c.SoundType.newMessage1);const s=this.store.getters["messages/getById"](e.message.id);const a=this.store.getters["dialogues/get"](e.dialogId,true);const t=this.store.getters["users/get"](s.authorId);g.NotifierManager.getInstance().showMessage(s,a,t)}handleNotifyAdd(e){if(e.onlyFlash===true||babelHelpers.classPrivateFieldLooseBase(this,se)[se]()||babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]()){return}if(document.hasFocus()){const e=this.store.getters["application/areNotificationsOpen"];if(e){return}}const s=this.store.getters["notifications/getById"](e.id);const a=this.store.getters["users/get"](e.userId);if(e.silent!=="Y"){b.SoundNotificationManager.getInstance().playOnce(c.SoundType.reminder)}g.NotifierManager.getInstance().showNotification(s,a)}}function ie(e){var s,a;if(h.Core.getUserId()===e.message.senderId){return false}if(!e.notify||((s=e.message)==null?void 0:(a=s.params)==null?void 0:a.NOTIFY)==="N"||babelHelpers.classPrivateFieldLooseBase(this,se)[se]()||babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]()){return false}const t=this.store.getters["dialogues/get"](e.dialogId,true);if(t.type===c.DialogType.lines){return}const i=t.muteList.includes(h.Core.getUserId());if(i){return false}const l=p.CallManager.getInstance().hasCurrentScreenSharing();if(l){return false}return true}function le(e){const s=this.store.getters["application/isChatOpen"](e.dialogId);return!!(document.hasFocus()&&s)}function de(){const e=this.store.getters["users/get"](h.Core.getUserId(),true);return e.status===c.UserStatus.dnd}function re(){const e=u.DesktopManager.isDesktop()&&u.DesktopManager.isChatWindow();return!e&&u.DesktopManager.getInstance().isDesktopActive()}e.BasePullHandler=z;e.RecentPullHandler=J;e.NotificationPullHandler=Q;e.SidebarPullHandler=Z;e.NotifierPullHandler=te})(this.BX.Messenger.v2.Provider.Pull=this.BX.Messenger.v2.Provider.Pull||{},BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=registry.bundle.map.js