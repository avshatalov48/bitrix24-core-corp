(function(t,e,s,a,n,i,r,o,m,l,c,f,u,g){"use strict";function p(t,e){var s=typeof Symbol!=="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(!s){if(Array.isArray(t)||(s=d(t))||e&&t&&typeof t.length==="number"){if(s)t=s;var a=0;var n=function t(){};return{s:n,n:function e(){if(a>=t.length)return{done:true};return{done:false,value:t[a++]}},e:function t(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i=true,r=false,o;return{s:function e(){s=s.call(t)},n:function t(){var e=s.next();i=e.done;return e},e:function t(e){r=true;o=e},f:function t(){try{if(!i&&s["return"]!=null)s["return"]()}finally{if(r)throw o}}}}function d(t,e){if(!t)return;if(typeof t==="string")return v(t,e);var s=Object.prototype.toString.call(t).slice(8,-1);if(s==="Object"&&t.constructor)s=t.constructor.name;if(s==="Map"||s==="Set")return Array.from(t);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return v(t,e)}function v(t,e){if(e==null||e>t.length)e=t.length;for(var s=0,a=new Array(e);s<e;s++)a[s]=t[s];return a}function h(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.push.apply(s,a)}return s}function y(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?h(Object(s),!0).forEach((function(e){babelHelpers.defineProperty(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):h(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}var b=window.BX;var T=Object.freeze({default:"default",progress:"progress",image:"image",audio:"audio",video:"video",richLink:"richLink"});o.BitrixVue.component("bx-im-view-message-body",{props:{userId:{default:0},dialogId:{default:"0"},chatId:{default:0},messageType:{default:c.MessageType.self},message:{type:Object,default:l.MessagesModel.create().getElementState},enableReactions:{default:true},showName:{default:true},showAvatar:{default:true},referenceContentBodyClassName:{default:""},referenceContentNameClassName:{default:""}},created:function t(){this.dateFormatFunction=null;this.cacheFormatDate={}},methods:{clickByUserName:function t(e){if(this.showAvatar&&f.Utils.platform.isMobile()){return false}g.EventEmitter.emit(c.EventType.dialog.clickOnUserName,e)},clickByChatTeaser:function t(e){g.EventEmitter.emit(c.EventType.dialog.clickOnChatTeaser,{message:e.message,event:e.event})},clickByKeyboardButton:function t(e){g.EventEmitter.emit(c.EventType.dialog.clickOnKeyboardButton,y({message:e.message},e.event))},setReaction:function t(e){g.EventEmitter.emit(c.EventType.dialog.setMessageReaction,e)},openReactionList:function t(e){g.EventEmitter.emit(c.EventType.dialog.openMessageReactionList,e)},formatDate:function t(e){var s=e.toJSON().slice(0,10);if(this.cacheFormatDate[s]){return this.cacheFormatDate[s]}var a=f.Utils.date.getFormatType(b.Messenger.Const.DateFormat.message,this.$Bitrix.Loc.getMessages());this.cacheFormatDate[s]=this._getDateFormat().format(a,e);return this.cacheFormatDate[s]},_getDateFormat:function t(){var e=this;if(this.dateFormatFunction){return this.dateFormatFunction}this.dateFormatFunction=Object.create(b.Main.Date);this.dateFormatFunction._getMessage=function(t){return e.$Bitrix.Loc.getMessage(t)};return this.dateFormatFunction},isDesktop:function t(){return f.Utils.platform.isBitrixDesktop()},getDesktopVersion:function t(){return f.Utils.platform.getDesktopVersion()},isMobile:function t(){return f.Utils.platform.isBitrixMobile()}},computed:y({MessageType:function t(){return c.MessageType},ContentType:function t(){return T},contentType:function t(){if(this.filesData.length>0){var e=false;var s=false;var a=false;var n=false;var i=p(this.filesData),r;try{for(i.s();!(r=i.n()).done;){var o=r.value;if(o.progress<0){n=true;break}else if(o.type==="audio"){if(s||e){e=false;s=false;break}a=true}else if(o.type==="image"&&o.image){if(s||a){a=false;s=false;break}e=true}else if(o.type==="video"){if(e||a){a=false;e=false;break}s=true}else{a=false;e=false;s=false;break}}}catch(t){i.e(t)}finally{i.f()}if(n){return T.progress}else if(e){return T.image}else if(a){return T.audio}else if(s){return T.video}}return T["default"]},formattedDate:function t(){return this.formatDate(this.message.date)},messageText:function t(){if(this.isDeleted){return this.$Bitrix.Loc.getMessage("IM_MESSENGER_MESSAGE_DELETED")}var e=this.message.textConverted?this.message.textConverted:f.Utils.text.decode(this.message.text);var s=this.message.params;if(typeof s.LINK_ACTIVE!=="undefined"&&s.LINK_ACTIVE.length>0&&!s.LINK_ACTIVE.includes(this.userId)){e=e.replace(/<a.*?href="([^"]*)".*?>(.*?)<\/a>/gi,"$2")}return e},messageAttach:function t(){return this.message.params.ATTACH},messageReactions:function t(){return this.message.params.REACTION||{}},isEdited:function t(){return this.message.params.IS_EDITED==="Y"},isDeleted:function t(){return this.message.params.IS_DELETED==="Y"},chatColor:function t(){return this.dialog.type!==c.DialogType["private"]?this.dialog.color:this.user.color},dialog:function t(){var t=this.$store.getters["dialogues/get"](this.dialogId);return t?t:this.$store.getters["dialogues/getBlank"]()},user:function t(){return this.$store.getters["users/get"](this.message.authorId,true)},filesData:function t(){var e=this;var s=[];if(!this.message.params.FILE_ID||this.message.params.FILE_ID.length<=0){return s}this.message.params.FILE_ID.forEach((function(t){if(!t){return false}var a=e.$store.getters["files/get"](e.chatId,t,true);if(!a){e.$store.commit("files/set",{data:[e.$store.getters["files/getBlank"]({id:t,chatId:e.chatId})]});a=e.$store.getters["files/get"](e.chatId,t,true)}if(a){s.push(a)}}));return s},keyboardButtons:function t(){var e=false;if(!this.message.params.KEYBOARD||this.message.params.KEYBOARD==="N"){return e}return this.message.params.KEYBOARD},chatTeaser:function t(){if(typeof this.message.params.CHAT_ID==="undefined"||typeof this.message.params.CHAT_LAST_DATE==="undefined"||typeof this.message.params.CHAT_MESSAGE==="undefined"){return false}return{messageCounter:this.message.params.CHAT_MESSAGE,messageLastDate:this.message.params.CHAT_LAST_DATE,languageId:this.application.common.languageId}},userName:function t(){if(this.message.params.NAME){return u.Text.decode(this.message.params.NAME)}if(!this.showAvatar){return this.user.name}else{return this.user.firstName?this.user.firstName:this.user.name}},userColor:function t(){if(this.user.extranet){return"#CA7B00"}return this.user.color}},m.Vuex.mapState({application:function t(e){return e.application}})),template:'\n\t\t<div class="bx-im-message-content-wrap">\n\t\t\t<template v-if="contentType == ContentType.default || contentType == ContentType.audio || contentType == ContentType.progress || (contentType !== ContentType.image && isDesktop() && getDesktopVersion() < 47)">\n\t\t\t\t<div class="bx-im-message-content">\n\t\t\t\t\t<span class="bx-im-message-content-box">\n\t\t\t\t\t\t<div class="bx-im-message-content-name-wrap">\n\t\t\t\t\t\t\t<template v-if="showName && user.extranet && messageType == MessageType.opponent">\n\t\t\t\t\t\t\t\t<div class="bx-im-message-extranet-icon"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-if="showName && messageType == MessageType.opponent">\n\t\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-name\', referenceContentNameClassName]" :style="{color: userColor}" @click="clickByUserName({user: user, event: $event})">{{userName}}</div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body\', referenceContentBodyClassName]">\n\t\t\t\t\t\t\t<template v-if="(contentType == ContentType.audio) && (!isDesktop() || (isDesktop() && getDesktopVersion() > 43))">\n\t\t\t\t\t\t\t\t<bx-im-view-element-file-audio v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t\t\t<bx-im-view-element-file v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body-wrap\', {\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-with-text\': messageText.length > 0,\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-without-text\': messageText.length <= 0,\n\t\t\t\t\t\t\t}]">\n\t\t\t\t\t\t\t\t<template v-if="messageText">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-text" v-html="messageText"></span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<template v-for="(config, id) in messageAttach">\n\t\t\t\t\t\t\t\t\t<bx-im-view-element-attach :baseColor="chatColor" :config="config" :key="id"/>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<span class="bx-im-message-content-params">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-date">{{formattedDate}}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="!message.push && enableReactions && message.authorId" class="bx-im-message-content-reaction">\n\t\t\t\t\t\t<bx-reaction :id="\'message\'+message.id" :values="messageReactions" :userId="userId" :openList="false" @set="setReaction({message: message, reaction: $event})" @list="openReactionList({message: message, values: $event.values})"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-else-if="contentType == ContentType.richLink">\n\t\t\t\t\x3c!-- richLink type markup --\x3e\n\t\t\t</template>\n\t\t\t<template v-else-if="contentType == ContentType.image || contentType == ContentType.video">\n\t\t\t\t<div class="bx-im-message-content bx-im-message-content-fit">\n\t\t\t\t\t<span class="bx-im-message-content-box">\n\t\t\t\t\t\t<template v-if="showName && messageType == MessageType.opponent">\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-name\', referenceContentNameClassName]" :style="{color: user.color}" @click="clickByUserName({user: user, event: $event})">{{!showAvatar? user.name: (user.firstName? user.firstName: user.name)}}</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body\', referenceContentBodyClassName]">\n\t\t\t\t\t\t\t<template v-if="contentType == ContentType.image">\n\t\t\t\t\t\t\t\t<bx-im-view-element-file-image v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template v-else-if="contentType == ContentType.video">\n\t\t\t\t\t\t\t\t<bx-im-view-element-file-video v-for="file in filesData" :messageType="messageType" :file="file" :key="file.templateId"/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<div :class="[\'bx-im-message-content-body-wrap\', {\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-with-text\': messageText.length > 0,\n\t\t\t\t\t\t\t\t\'bx-im-message-content-body-without-text\': messageText.length <= 0,\n\t\t\t\t\t\t\t}]">\n\t\t\t\t\t\t\t\t<template v-if="messageText">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-text" v-html="messageText"></span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<span class="bx-im-message-content-params">\n\t\t\t\t\t\t\t\t\t<span class="bx-im-message-content-date">{{formattedDate}}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="!message.push && enableReactions && message.authorId" class="bx-im-message-content-reaction">\n\t\t\t\t\t\t<bx-reaction :id="\'message\'+message.id" :values="messageReactions" :userId="userId" :openList="false" @set="setReaction({message: message, reaction: $event})" @list="openReactionList({message: message, values: $event.values})"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if="keyboardButtons">\n\t\t\t\t<bx-im-view-element-keyboard :buttons="keyboardButtons" :messageId="message.id" :userId="userId" :dialogId="dialogId" @click="clickByKeyboardButton({message: message, event: $event})"/>\n\t\t\t</template>\n\t\t\t<template v-if="chatTeaser">\n\t\t\t\t<bx-im-view-element-chat-teaser :messageCounter="chatTeaser.messageCounter" :messageLastDate="chatTeaser.messageLastDate" :languageId="chatTeaser.languageId" @click="clickByChatTeaser({message: message, event: $event})"/>\n\t\t\t</template>\n\t\t</div>\n\t'})})(this.window=this.window||{},BX,window,window,window,window,window,BX,BX,BX.Messenger.Model,BX.Messenger.Const,BX.Messenger.Lib,BX,BX.Event);
//# sourceMappingURL=body.bundle.map.js