{"version":3,"file":"popup.bundle.js","sources":["../src/type/chat.js","../src/type/user.js","../src/type/users.js","../src/popup.js"],"sourcesContent":["import { Vue } from \"ui.vue\";\nimport { RestMethod, RestMethodHandler } from \"im.const\";\n\nexport const Chat =\n{\n\tprops: ['value', 'popupInstance'],\n\tdata()\n\t{\n\t\treturn {\n\t\t\tchat: {},\n\t\t\thasError: false,\n\t\t\trequestFinished: false\n\t\t};\n\t},\n\tcreated()\n\t{\n\t\tconst chatData = this.getChat(this.value);\n\t\tif (chatData)\n\t\t{\n\t\t\tthis.chat = chatData;\n\t\t\tthis.requestFinished = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.requestChatData(this.value);\n\t\t}\n\t},\n\tmounted()\n\t{\n\t\tthis.popupInstance.show();\n\t},\n\tbeforeDestroy()\n\t{\n\t\tthis.popupInstance.destroy();\n\t},\n\tmethods:\n\t{\n\t\tgetChat(dialogId)\n\t\t{\n\t\t\treturn this.$store.getters['dialogues/get'](dialogId);\n\t\t},\n\t\trequestChatData(dialogId)\n\t\t{\n\t\t\tthis.$Bitrix.RestClient.get().callMethod(RestMethod.imChatGet, {\n\t\t\t\tdialog_id: dialogId\n\t\t\t}).then(response => {\n\t\t\t\tthis.$Bitrix.Data.get('controller').executeRestAnswer(RestMethodHandler.imChatGet, response);\n\n\t\t\t\tthis.chat = this.getChat(this.value);\n\t\t\t\tthis.requestFinished = true;\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.hasError = true;\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.requestFinished = true;\n\t\t\t});\n\t\t},\n\n\t\t//events\n\t\tonOpenChat(event)\n\t\t{\n\t\t\tthis.popupInstance.destroy();\n\t\t\tBXIM.openMessenger(this.value);\n\t\t},\n\t\tonOpenHistory(event)\n\t\t{\n\t\t\tthis.popupInstance.destroy();\n\t\t\tBXIM.openHistory(this.value);\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tavatarStyles()\n\t\t{\n\t\t\tconst styles = {};\n\t\t\tif (this.emptyAvatar)\n\t\t\t{\n\t\t\t\tstyles.backgroundColor = this.chat.color;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t},\n\t\tchatAvatar()\n\t\t{\n\t\t\tif (this.emptyAvatar)\n\t\t\t{\n\t\t\t\treturn '/bitrix/js/im/images/blank.gif';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.chat.avatar;\n\t\t\t}\n\t\t},\n\t\temptyAvatar()\n\t\t{\n\t\t\treturn this.chat.avatar === '' || this.chat.avatar.indexOf('/bitrix/js/im/images/blank.gif') >= 0;\n\t\t},\n\t},\n\t//language=Vue\n\ttemplate: `\n\t\t<div class=\"bx-messenger-external-data\" style=\"width: 272px; max-width: 272px; height: 100px;\">\n\t\t\t<div v-if=\"requestFinished && !hasError\">\n\t\t\t\t<div class=\"bx-messenger-external-avatar\">\n\t\t\t\t\t<div class=\"bx-messenger-panel-avatar bx-messenger-panel-avatar-chat\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t:src=\"chatAvatar\"\n\t\t\t\t\t\t\t:alt=\"chat.name\"\n\t\t\t\t\t\t\t:style=\"avatarStyles\"\n\t\t\t\t\t\t\t:class=\"[emptyAvatar ? 'bx-messenger-panel-avatar-img-default' : '', 'bx-messenger-panel-avatar-img']\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span v-if=\"chat.extranet\" class=\"bx-messenger-panel-title\"><div class=\"bx-messenger-user-extranet\">{{ chat.name }}</div></span>\n\t\t\t\t\t<span v-else class=\"bx-messenger-panel-title\">{{ chat.name }}</span>\n\t\t\t\t\t<span class=\"bx-messenger-panel-desc\">{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_GROUP_CHAT') }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-messenger-external-data-buttons\">\n\t\t\t\t<span class=\"bx-notifier-item-button bx-notifier-item-button-white\" @click=\"onOpenChat\">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_OPEN_CHAT') }}\n\t\t\t\t</span>\n\t\t\t\t\t<span class=\"bx-notifier-item-button bx-notifier-item-button-white\" @click=\"onOpenHistory\">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_OPEN_HISTORY') }}\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<span v-else-if=\"!requestFinished && !hasError\" class=\"bx-messenger-content-load-img\"></span>\n\t\t\t<div v-else-if=\"requestFinished && hasError\">\n\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_NO_ACCESS') }}\n\t\t\t</div>\n\t\t</div>\n\t`\n};\n","import { RestMethod, RestMethodHandler } from \"im.const\";\n\nexport const User = {\n\tprops: ['value', 'popupInstance'],\n\tdata()\n\t{\n\t\treturn {\n\t\t\tuser: {},\n\t\t\thasError: false,\n\t\t\trequestFinished: false\n\t\t};\n\t},\n\tcreated()\n\t{\n\t\tconst userData = this.getUser(this.value);\n\n\t\tif (userData)\n\t\t{\n\t\t\tthis.user = userData;\n\t\t\tthis.requestFinished = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.requestUserData(this.value);\n\t\t}\n\t},\n\tmounted()\n\t{\n\t\tthis.popupInstance.show();\n\t},\n\tbeforeDestroy()\n\t{\n\t\tthis.popupInstance.destroy();\n\t},\n\tmethods:\n\t{\n\t\tgetUser(userId)\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](userId);\n\t\t},\n\t\trequestUserData(userId)\n\t\t{\n\t\t\tthis.$Bitrix.RestClient.get().callMethod(RestMethod.imUserGet, {\n\t\t\t\tID: userId\n\t\t\t}).then(response => {\n\t\t\t\tthis.$Bitrix.Data.get('controller').executeRestAnswer(RestMethodHandler.imUserGet, response);\n\n\t\t\t\tthis.user = this.getUser(this.value);\n\t\t\t\tthis.requestFinished = true;\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.hasError = true;\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.requestFinished = true;\n\t\t\t});\n\t\t},\n\t\t//events\n\t\tonOpenChat(event)\n\t\t{\n\t\t\tthis.popupInstance.destroy();\n\t\t\tBXIM.openMessenger(this.value);\n\t\t},\n\t\tonOpenHistory(event)\n\t\t{\n\t\t\tthis.popupInstance.destroy();\n\t\t\tBXIM.openHistory(this.value);\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tavatarStyles()\n\t\t{\n\t\t\tconst styles = {};\n\t\t\tif (this.emptyAvatar)\n\t\t\t{\n\t\t\t\tstyles.backgroundColor = this.chat.color;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t},\n\t\tuserAvatar()\n\t\t{\n\t\t\tif (this.emptyAvatar)\n\t\t\t{\n\t\t\t\treturn '/bitrix/js/im/images/blank.gif';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.user.avatar;\n\t\t\t}\n\t\t},\n\t\temptyAvatar()\n\t\t{\n\t\t\treturn this.user.avatar === '' || this.user.avatar.indexOf('/bitrix/js/im/images/blank.gif') >= 0;\n\t\t},\n\t\tbotStyles()\n\t\t{\n\t\t\t//todo handle all the bot types im/install/js/im/im.js:5887\n\t\t\treturn 'bx-messenger-user-bot';\n\t\t},\n\t\tuserStatusText()\n\t\t{\n\t\t\t//todo remove old code\n\t\t\treturn BX.MessengerCommon.getUserStatus(this.user.id, false).statusText;\n\t\t},\n\t\tuserStatusClass()\n\t\t{\n\t\t\t//todo remove old code\n\t\t\treturn 'bx-messenger-panel-avatar-status-' + BX.MessengerCommon.getUserStatus(this.user.id, true);\n\t\t},\n\t\tuserPosition()\n\t\t{\n\t\t\t//todo remove old code\n\t\t\treturn BX.MessengerCommon.getUserPosition(this.user.id);\n\t\t},\n\t},\n\t//language=Vue\n\ttemplate: `\n\t\t<div class=\"bx-messenger-external-data\" style=\"width: 272px; max-width: 272px; height: 100px;\">\n\t\t\t<div v-if=\"requestFinished && !hasError\">\n\t\t\t\t<div class=\"bx-messenger-external-avatar\">\n\t\t\t\t\t<div :class=\"[userStatusClass, 'bx-messenger-panel-avatar']\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t:src=\"userAvatar\"\n\t\t\t\t\t\t\t:style=\"avatarStyles\"\n\t\t\t\t\t\t\t:class=\"[emptyAvatar ? 'bx-messenger-panel-avatar-img-default' : '', 'bx-messenger-panel-avatar-img']\"\n\t\t\t\t\t\t\t:alt=\"user.name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span :title=\"userStatusText\" class=\"bx-messenger-panel-avatar-status\"></span>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<span v-if=\"user.extranet\" class=\"bx-messenger-panel-title\"><div class=\"bx-messenger-user-extranet\">{{ user.name }}</div></span>\n\t\t\t\t\t<span v-else-if=\"user.bot\" class=\"bx-messenger-panel-title\"><div :class=\"botStyles\">{{ user.name }}</div></span>\n\t\t\t\t\t<span v-else class=\"bx-messenger-panel-title\">{{ user.name }}</span>\n\t\n\t\t\t\t\t<span class=\"bx-messenger-panel-desc\">{{ userPosition }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-messenger-external-data-buttons\">\n\t\t\t\t\t<span class=\"bx-notifier-item-button bx-notifier-item-button-white\" @click=\"onOpenChat\">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_USER_OPEN_CHAT') }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"bx-notifier-item-button bx-notifier-item-button-white\" @click=\"onOpenHistory\">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_OPEN_HISTORY') }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<span v-else-if=\"!requestFinished && !hasError\" class=\"bx-messenger-content-load-img\"></span>\n\t\t\t<div v-else-if=\"requestFinished && hasError\">\n\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_NO_ACCESS') }}\n\t\t\t</div>\n\t\t</div>\n\t`\n};\n","import { RestMethod, RestMethodHandler } from \"im.const\";\n\nexport const Users = {\n\tprops: ['value', 'popupInstance'],\n\tdata()\n\t{\n\t\treturn {\n\t\t\tusers: {},\n\t\t\thasError: false,\n\t\t\trequestFinished: false\n\t\t};\n\t},\n\tcreated()\n\t{\n\t\tconst needRequest = this.isNeedUserRequest(this.value);\n\t\tif (needRequest)\n\t\t{\n\t\t\tthis.requestUserData(this.value);\n\t\t}\n\t\telse //!needRequest\n\t\t{\n\t\t\tthis.users = this.getUsersForPopup();\n\t\t\tthis.requestFinished = true;\n\t\t}\n\t},\n\tmounted()\n\t{\n\t\tthis.popupInstance.show();\n\t},\n\tbeforeDestroy()\n\t{\n\t\tthis.popupInstance.destroy();\n\t},\n\tcomputed:\n\t{\n\t\tpopupHeight()\n\t\t{\n\t\t\tlet height = this.value.length * 30;\n\t\t\tif (height > 150)\n\t\t\t{\n\t\t\t\theight = 150\n\t\t\t}\n\t\t\treturn height + 'px'\n\t\t}\n\t},\n\tmethods:\n\t{\n\t\tgetUser(userId)\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](userId);\n\t\t},\n\t\tgetUsersForPopup()\n\t\t{\n\t\t\treturn this.value.map((userId) => {\n\t\t\t\treturn this.getUser(userId);\n\t\t\t});\n\t\t},\n\t\tgetUserAvatar(user)\n\t\t{\n\t\t\tif (this.isEmptyAvatar(user))\n\t\t\t{\n\t\t\t\treturn '/bitrix/js/im/images/blank.gif';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn user.avatar;\n\t\t\t}\n\t\t},\n\t\tisEmptyAvatar(user)\n\t\t{\n\t\t\treturn user.avatar === '' || user.avatar.indexOf('/bitrix/js/im/images/blank.gif') >= 0;\n\t\t},\n\t\tgetAvatarStyles(user)\n\t\t{\n\t\t\tconst styles = {};\n\t\t\tif (this.isEmptyAvatar(user))\n\t\t\t{\n\t\t\t\tstyles.backgroundColor = user.color;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t},\n\t\tgetUserStatusClass(user)\n\t\t{\n\t\t\treturn `bx-notifier-popup-avatar-status-${user.status}`;\n\t\t},\n\t\tisNeedUserRequest(users)\n\t\t{\n\t\t\tfor (let i = 0; i < users.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.getUser(users[i]))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\trequestUserData(userIds)\n\t\t{\n\t\t\tthis.$Bitrix.RestClient.get().callMethod(RestMethod.imUserListGet, {\n\t\t\t\tID: userIds\n\t\t\t}).then(response => {\n\t\t\t\tthis.$Bitrix.Data.get('controller').executeRestAnswer(RestMethodHandler.imUserListGet, response);\n\t\t\t\tthis.users = this.getUsersForPopup();\n\t\t\t\tthis.requestFinished = true;\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.hasError = true;\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.requestFinished = true;\n\t\t\t});\n\t\t},\n\t\tonUserClick(userId)\n\t\t{\n\t\t\tthis.popupInstance.destroy();\n\t\t\tBXIM.openMessenger(userId)\n\t\t},\n\t},\n\t//language=Vue\n\ttemplate: `\n\t\t<div\n\t\t\tclass=\"bx-im-vue-popup-container\" \n\t\t\t:style=\"{height: popupHeight, width: '180px', display: 'flex', alignItems: 'center', justifyContent: 'center'}\"\n\t\t>\n\t\t\t<span v-if=\"requestFinished && !hasError\" class=\"bx-notifier-item-help-popup\">\n\t\t\t\t<a \n\t\t\t\t\tv-for=\"user in users\"\n\t\t\t\t\tclass=\"bx-notifier-item-help-popup-img\"\n\t\t\t\t\t@click.prevent=\"onUserClick(user.id)\"\n\t\t\t\t>\n\t\t\t\t\t<span :class=\"[getUserStatusClass(user), 'bx-notifier-popup-avatar']\">\n\t\t\t\t\t\t<img \n\t\t\t\t\t\t\t:src=\"getUserAvatar(user)\"\n\t\t\t\t\t\t\t:class=\"['bx-notifier-popup-avatar-img', isEmptyAvatar(user) ? 'bx-notifier-popup-avatar-img-default' : '']\"\n\t\t\t\t\t\t\t:style=\"getAvatarStyles(user)\"\n\t\t\t\t\t\t\t:alt=\"user.name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span \n\t\t\t\t\t\t:class=\"['bx-notifier-item-help-popup-name', user.extranet ? 'bx-notifier-popup-avatar-extranet' : '']\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ user.name }}\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t\t<span v-else-if=\"!requestFinished && !hasError\" class=\"bx-messenger-content-load-img\"></span>\n\t\t\t<div v-else-if=\"requestFinished && hasError\">\n\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_VIEW_POPUP_CONTENT_NO_ACCESS') }}\n\t\t\t</div>\n\t\t</div>\n\t`\n};","import { Chat } from \"./type/chat\";\nimport { User } from \"./type/user\";\nimport { Users } from \"./type/users\";\n\nexport const Popup = {\n\tprops: ['type', 'value', 'popupInstance'],\n\tcomponents:\n\t{\n\t\tChat,\n\t\tUser,\n\t\tUsers,\n\t},\n\t//language=Vue\n\ttemplate: `\n\t\t<component :is=\"type\" :value=\"value\" :popupInstance=\"popupInstance\"/>\n\t`\n};"],"names":["Chat","props","data","chat","hasError","requestFinished","created","chatData","getChat","value","requestChatData","mounted","popupInstance","show","beforeDestroy","destroy","methods","dialogId","$store","getters","$Bitrix","RestClient","get","callMethod","RestMethod","imChatGet","dialog_id","then","response","Data","executeRestAnswer","RestMethodHandler","error","console","onOpenChat","event","BXIM","openMessenger","onOpenHistory","openHistory","computed","avatarStyles","styles","emptyAvatar","backgroundColor","color","chatAvatar","avatar","indexOf","template","User","user","userData","getUser","requestUserData","userId","imUserGet","ID","userAvatar","botStyles","userStatusText","BX","MessengerCommon","getUserStatus","id","statusText","userStatusClass","userPosition","getUserPosition","Users","users","needRequest","isNeedUserRequest","getUsersForPopup","popupHeight","height","length","map","getUserAvatar","isEmptyAvatar","getAvatarStyles","getUserStatusClass","status","i","userIds","imUserListGet","onUserClick","Popup","components"],"mappings":"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"}