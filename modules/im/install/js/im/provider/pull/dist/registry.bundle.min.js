this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.Provider=this.BX.Messenger.Provider||{};(function(e,s,t){"use strict";var a=function(){babelHelpers.createClass(e,null,[{key:"create",value:function e(){var s=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return new this(s)}}]);function e(){var s=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};babelHelpers.classCallCheck(this,e);if(babelHelpers.typeof(s.controller)==="object"&&s.controller){this.controller=s.controller}if(babelHelpers.typeof(s.store)==="object"&&s.store){this.store=s.store}}babelHelpers.createClass(e,[{key:"getModuleId",value:function e(){return"im"}},{key:"getSubscriptionType",value:function e(){return s.PullClient.SubscriptionType.Server}},{key:"handleMessageChat",value:function e(s){var a=this;if(s.chat&&s.chat[s.chatId]){this.store.dispatch("dialogues/update",{dialogId:"chat"+s.chatId,fields:s.chat[s.chatId]})}if(s.users){this.store.dispatch("users/set",t.VuexBuilderModel.convertToArray(s.users))}if(s.files){this.store.dispatch("files/set",this.controller.prepareFilesBeforeSave(t.VuexBuilderModel.convertToArray(s.files)))}var i=this.store.state.messages.collection[s.chatId];if(!i){i=[]}var r=false;if(s.message.tempId&&i.length>0){for(var d=i.length-1;d>=0;d--){if(i[d].id==s.message.tempId){r=true;break}}}if(r){this.store.dispatch("messages/update",{id:s.message.tempId,chatId:s.message.chatId,fields:s.message})}else if(this.controller.isUnreadMessagesLoaded()){var l=0;if(i.length>0){i.forEach(function(e){return e.unread?l++:0})}if(l>0){this.store.commit("application/set",{dialog:{messageLimit:this.controller.getRequestMessageLimit()+l}})}else if(this.controller.getMessageLimit()!=this.controller.getRequestMessageLimit()){this.store.commit("application/set",{dialog:{messageLimit:this.controller.getRequestMessageLimit()}})}this.store.dispatch("messages/set",babelHelpers.objectSpread({},s.message,{unread:true}))}this.controller.stopOpponentWriting({dialogId:"chat"+s.message.chatId,userId:s.message.senderId});if(s.message.senderId==this.controller.getUserId()){this.store.dispatch("messages/readMessages",{chatId:s.message.chatId}).then(function(e){a.store.dispatch("dialogues/update",{dialogId:"chat"+s.message.chatId,fields:{counter:0}})})}else{this.store.dispatch("dialogues/increaseCounter",{dialogId:"chat"+s.message.chatId,count:1})}}},{key:"handleMessageUpdate",value:function e(s,t,a){this.execMessageUpdateOrDelete(s,t,a)}},{key:"handleMessageDelete",value:function e(s,t,a){this.execMessageUpdateOrDelete(s,t,a)}},{key:"handleMessageDeleteComplete",value:function e(s){this.store.dispatch("messages/delete",{id:s.id,chatId:s.chatId});this.controller.stopOpponentWriting({dialogId:s.dialogId,userId:s.senderId,action:false})}},{key:"handleMessageParamsUpdate",value:function e(s){this.store.dispatch("messages/update",{id:s.id,chatId:s.chatId,fields:{params:s.params}})}},{key:"handleStartWriting",value:function e(s){this.controller.startOpponentWriting(s)}},{key:"handleReadMessageChat",value:function e(s){var t=this;this.store.dispatch("messages/readMessages",{chatId:s.chatId,readId:s.lastId}).then(function(e){t.store.dispatch("dialogues/update",{dialogId:s.dialogId,fields:{counter:s.counter}})})}},{key:"execMessageUpdateOrDelete",value:function e(s,t,a){this.store.dispatch("messages/update",{id:s.id,chatId:s.chatId,fields:{text:a=="messageUpdate"?s.text:"",textOriginal:a=="messageUpdate"?s.textOriginal:"",params:s.params,blink:true}});this.controller.stopOpponentWriting({dialogId:s.dialogId,userId:s.senderId})}}]);return e}();e.ImPullCommandHandler=a})(this.BX.Messenger.Provider.Pull=this.BX.Messenger.Provider.Pull||{},BX,BX);
//# sourceMappingURL=registry.bundle.map.js