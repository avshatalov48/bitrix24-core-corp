this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.Provider=this.BX.Messenger.Provider||{};(function(e,s,t){"use strict";var r=function(){babelHelpers.createClass(e,null,[{key:"create",value:function e(){var s=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return new this(s)}}]);function e(){var s=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};babelHelpers.classCallCheck(this,e);if(babelHelpers.typeof(s.controller)==="object"&&s.controller){this.controller=s.controller}if(babelHelpers.typeof(s.store)==="object"&&s.store){this.store=s.store}}babelHelpers.createClass(e,[{key:"execute",value:function e(s,t){var r=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};s="handle"+s.split(".").map(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}).join("");if(t.error()){if(typeof this[s+"Error"]==="function"){return this[s+"Error"](t.error(),r)}}else{if(typeof this[s+"Success"]==="function"){return this[s+"Success"](t.data(),r)}}return typeof this[s]==="function"?this[s](t,r):null}}]);return e}();var i=function(e){babelHelpers.inherits(r,e);function r(){babelHelpers.classCallCheck(this,r);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(r).apply(this,arguments))}babelHelpers.createClass(r,[{key:"handleImUserListGetSuccess",value:function e(s){this.store.dispatch("users/set",t.VuexBuilderModel.convertToArray(s))}},{key:"handleImUserGetSuccess",value:function e(s){this.store.dispatch("users/set",[s])}},{key:"handleImChatGetSuccess",value:function e(s){this.store.dispatch("dialogues/set",s)}},{key:"handleImDialogMessagesGetSuccess",value:function e(s){this.store.dispatch("users/set",s.users);this.store.dispatch("files/setBefore",this.controller.prepareFilesBeforeSave(s.files));this.store.dispatch("messages/setBefore",s.messages)}},{key:"handleImDialogMessagesGetInitSuccess",value:function e(s){this.store.dispatch("users/set",s.users);this.store.dispatch("files/set",this.controller.prepareFilesBeforeSave(s.files));this.store.dispatch("messages/set",s.messages.reverse())}},{key:"handleImDialogMessagesGetUnreadSuccess",value:function e(s){this.store.dispatch("users/set",s.users);this.store.dispatch("files/set",this.controller.prepareFilesBeforeSave(s.files));this.store.dispatch("messages/setAfter",s.messages)}},{key:"handleImDiskFolderGetSuccess",value:function e(s){this.store.commit("application/set",{dialog:{diskFolderId:s.ID}})}},{key:"handleImMessageAddSuccess",value:function e(s,t){var r=this;this.store.dispatch("messages/update",{id:t.id,chatId:t.chatId,fields:{id:s,sending:false,error:false}}).then(function(){r.store.dispatch("messages/actionFinish",{id:s,chatId:t.chatId})})}},{key:"handleImMessageAddError",value:function e(s,t){this.store.dispatch("messages/actionError",{id:t.id,chatId:t.chatId})}},{key:"handleImDiskFileCommitSuccess",value:function e(s,t){var r=this;this.store.dispatch("messages/update",{id:t.id,chatId:t.chatId,fields:{id:s["MESSAGE_ID"],sending:false,error:false}}).then(function(){r.store.dispatch("messages/actionFinish",{id:s["MESSAGE_ID"],chatId:t.chatId})})}},{key:"handleImDiskFileCommitError",value:function e(t,r){this.store.dispatch("files/update",{chatId:r.chatId,id:r.file.id,fields:{status:s.FileStatus.error,progress:0}});this.store.dispatch("messages/actionError",{id:r.id,chatId:r.chatId,retry:false})}}]);return r}(r);e.ImRestAnswerHandler=i;e.BaseRestAnswerHandler=r})(this.BX.Messenger.Provider.Pull=this.BX.Messenger.Provider.Pull||{},BX.Messenger.Const,BX);
//# sourceMappingURL=registry.bundle.map.js