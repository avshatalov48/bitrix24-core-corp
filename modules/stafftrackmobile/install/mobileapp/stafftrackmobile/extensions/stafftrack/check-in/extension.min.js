jn.define("stafftrack/check-in",((t,e,i)=>{const{Loc:n}=t("loc");const{Type:s}=t("type");const{Color:o,Indent:a}=t("tokens");const{H3:r}=t("ui-system/typography/heading");const{IconView:h,Icon:l}=t("ui-system/blocks/icon");const{Area:d}=t("ui-system/layout/area");const{Box:c}=t("ui-system/layout/box");const{ChipButton:u,ChipButtonDesign:g,ChipButtonMode:f}=t("ui-system/blocks/chips/chip-button");const{Skeleton:p}=t("stafftrack/check-in/skeleton");const{CheckInPage:y}=t("stafftrack/check-in/pages/check-in");const{DisabledCheckInPage:b}=t("stafftrack/check-in/pages/disabled-check-in");const{HeightManager:k}=t("stafftrack/check-in/height-manager");const{MoreMenu:M}=t("stafftrack/check-in/more-menu");const{StatisticsMenu:m}=t("stafftrack/check-in/statistics-menu");const{ContinueButton:S}=t("stafftrack/check-in/continue-button");const{DateHelper:C}=t("stafftrack/date-helper");const{ShiftManager:I}=t("stafftrack/data-managers/shift-manager");const{SettingsManager:H}=t("stafftrack/data-managers/settings-manager");const{OptionManager:w,OptionEnum:W}=t("stafftrack/data-managers/option-manager");const{ShiftModel:B}=t("stafftrack/model/shift");const{MuteEnum:E}=t("stafftrack/model/counter");const{Analytics:K,CheckinOpenEnum:A,HelpdeskEnum:O}=t("stafftrack/analytics");const{SettingsPage:T}=t("stafftrack/check-in/pages/settings");const{PureComponent:D}=t("layout/pure-component");class N extends D{constructor(t){super(t);this.layoutWidget=this.props.layoutWidget||PageManager;this.heightManager=new k(this.layoutWidget);this.state={loading:true,config:null,options:null,shift:null,dialogInfo:{dialogName:this.props.dialogName,dialogId:this.props.dialogId},userInfo:null,counter:null,enabledBySettings:true};this.onKeyboardWillShowHandler=this.onKeyboardWillShowHandler.bind(this);this.onKeyboardWillHideHandler=this.onKeyboardWillHideHandler.bind(this);this.closeLayoutWidget=this.closeLayoutWidget.bind(this);this.showMoreMenu=this.showMoreMenu.bind(this);this.showStatisticsMenu=this.showStatisticsMenu.bind(this);this.openHelp=this.openHelp.bind(this);this.load=this.load.bind(this);this.settingsOpened=false;this.statisticsMenu=null;this.moreMenu=null;this.refs={checkIn:null,disabledCheckIn:null,statisticsMenu:null,moreMenu:null,continueButton:null};K.sendCheckinOpen(t.dialogId?A.CHAT:A.AVA_MENU)}get user(){return this.state.userInfo??{}}get dialogInfo(){return this.state.dialogInfo??{}}get shift(){return this.state.shift??{}}get config(){return this.state.config??{}}isCounterMuted(){return this.state.counter?.muteStatus!==E.DISABLED.toNumber()}componentDidMount(){this.bindEvents();void this.load()}componentWillUnmount(){this.unbindEvents()}bindEvents(){Keyboard.on(Keyboard.Event.WillShow,this.onKeyboardWillShowHandler);Keyboard.on(Keyboard.Event.WillHide,this.onKeyboardWillHideHandler);H.on("updated",this.load)}unbindEvents(){Keyboard.off(Keyboard.Event.WillShow,this.onKeyboardWillShowHandler);Keyboard.off(Keyboard.Event.WillHide,this.onKeyboardWillHideHandler);H.off("updated",this.load)}async load(){const t=await I.getMain(C.getCurrentDayCode());const e=BX.prop.getObject(t,"currentShift",{});const i={loading:false,enabledBySettings:H.isEnabledBySettings(),config:BX.prop.getObject(t,"config",{}),options:BX.prop.getObject(t,"options",{}),userInfo:BX.prop.getObject(t,"userInfo",{}),counter:BX.prop.getObject(t,"counter",{}),shift:new B(e)};this.heightManager.setStatus(i.shift.getStatus());this.heightManager.setEnabledBySettings(i.config.enabledBySettings);this.heightManager.updateSheetHeight();if(s.isNil(this.dialogInfo.dialogName)&&s.isNil(this.dialogInfo.dialogId)){i.dialogInfo=i.config.dialogInfo}this.setState(i,(()=>{this.handleFirstHelpView();this.handleSettingsPage()}))}onKeyboardWillShowHandler(){this.refs.continueButton?.show()}onKeyboardWillHideHandler(){this.refs.continueButton?.hide()}render(){return View({style:{flex:1},resizableByKeyboard:true,onClick:()=>Keyboard.dismiss()},this.renderContent(),this.renderContinueButton())}renderContent(){return c({backgroundColor:o.bgSecondary,style:{flex:1}},this.state.loading&&p(),!this.state.loading&&this.renderHeader(),this.renderCheckIn(),this.renderDisabledCheckIn())}renderCheckIn(){if(!this.state.loading&&this.state.enabledBySettings){return new y({...this.state,layoutWidget:this.layoutWidget,heightManager:this.heightManager,ref:t=>{this.refs.checkIn=t}})}return null}renderDisabledCheckIn(){if(!this.state.loading&&!this.state.enabledBySettings){return new b({layoutWidget:this.layoutWidget,isAdmin:this.user.isAdmin,onHelpClick:this.openHelp,onDepartmentHeadChatButtonClick:this.closeLayoutWidget,userInfo:this.state.userInfo,ref:t=>{this.refs.disabledCheckIn=t}})}return null}renderHeader(){return d({isFirst:true,style:{flexDirection:"row",justifyContent:"space-between"}},r({text:n.getMessage("M_STAFFTRACK_CHECK_IN_TITLE")}),this.renderHeaderRightIcons())}renderHeaderRightIcons(){if(this.state.enabledBySettings){return View({style:{flexDirection:"row"}},this.renderStatisticsChip(),this.renderMoreMenuIcon())}return null}renderStatisticsChip(){return View({ref:t=>{this.refs.statisticsMenu=t}},u({testId:"stafftrack-check-in-statistics",design:g.GREY,mode:f.OUTLINE,dropdown:true,compact:true,color:o.base3,text:n.getMessage("M_STAFFTRACK_CHECK_IN_STATISTICS"),onClick:this.showStatisticsMenu}))}renderMoreMenuIcon(){return View({style:{marginLeft:a.S.toNumber()},ref:t=>{this.refs.moreMenu=t}},h({size:24,icon:l.MORE,color:o.base4,onClick:this.showMoreMenu}))}renderContinueButton(){return new S({ref:t=>{this.refs.continueButton=t}})}showStatisticsMenu(){this.statisticsMenu??=new m({layoutWidget:this.layoutWidget,user:this.user});this.statisticsMenu.show(this.refs.statisticsMenu)}showMoreMenu(){this.moreMenu??=new M({layoutWidget:this.layoutWidget,isMuted:this.isCounterMuted(),onHelpClick:this.openHelp,isAdmin:this.user.isAdmin,hasShift:this.hasCurrentShift(),timemanAvailable:this.config.timemanAvailable});this.moreMenu.show(this.refs.moreMenu)}handleFirstHelpView(){if(w.getOption(W.IS_FIRST_HELP_VIEWED)===false){this.openHelp();w.handleFirstHelpView()}}handleSettingsPage(){if(this.props.openSettings&&!this.settingsOpened){new T({isAdmin:this.user.isAdmin}).show(this.layoutWidget);this.settingsOpened=true}}hasCurrentShift(){return s.isNumber(this.shift.id)&&this.shift.id!==0}openHelp(){helpdesk.openHelpArticle("20922794");K.sendHelpdeskOpen(this.props.dialogId?O.CHAT:O.AVA_MENU)}closeLayoutWidget(){this.layoutWidget.close()}}i.exports={CheckIn:N}}));
//# sourceMappingURL=extension.map.js