{"version":3,"file":"messagegrid.bundle.js","sources":["../src/messagegrid.js"],"sourcesContent":["import './css/style.css';\nimport { EventEmitter } from 'main.core.events';\nimport { Dom, Tag, Loc, Type } from 'main.core';\n\nexport class MessageGrid\n{\n\t#loadingMessagesStubInGridWrapper;\n\t#gridWrapper;\n\t#id;\n\t#allRowsSelectedStatus = false;\n\t#panel;\n\t#checkboxNodeForCheckAll;\n\n\tconstructor()\n\t{\n\t\tif (typeof MessageGrid.instance === 'object') {\n\t\t\treturn MessageGrid.instance\n\t\t}\n\t\tMessageGrid.instance = this;\n\n\t\tEventEmitter.subscribe('Grid::allRowsSelected', (event) =>\n\t\t{\n\t\t\tif(this.#compareGrid(event)) this.#allRowsSelectedStatus = true;\n\t\t})\n\n\t\tEventEmitter.subscribe('Grid::allRowsUnselected', (event) =>\n\t\t{\n\t\t\tif(this.#compareGrid(event)) this.#allRowsSelectedStatus = false;\n\t\t})\n\n\t\tEventEmitter.subscribe('Grid::updated', (event) =>\n\t\t{\n\t\t\tif(this.#compareGrid(event) && this.#allRowsSelectedStatus)\n\t\t\t{\n\t\t\t\tif(this.#checkboxNodeForCheckAll !== undefined)\n\t\t\t\t{\n\t\t\t\t\tthis.#checkboxNodeForCheckAll.checked = true;\n\t\t\t\t}\n\t\t\t\tthis.selectAll();\n\t\t\t}\n\t\t})\n\n\t\tEventEmitter.subscribe('Mail::resetGridSelection', (event) =>\n\t\t{\n\t\t\tthis.#allRowsSelectedStatus = false;\n\t\t})\n\n\t\tEventEmitter.subscribe('Mail::directoryChanged', () =>\n\t\t{\n\t\t\tthis.#allRowsSelectedStatus = false;\n\t\t})\n\n\t\tEventEmitter.subscribe('Grid::thereSelectedRows', (event) =>\n\t\t{\n\t\t\tif(this.#compareGrid(event)) this.#allRowsSelectedStatus = false;\n\t\t})\n\n\t\tEventEmitter.subscribe('Grid::updated', (event) => {\n\t\t\tconst [grid] = event.getCompatData();\n\t\t\tif(grid !== undefined && Type.isFunction(grid.getId) && grid.getId() === this.getId()){\n\t\t\t\tthis.replaceTheBlankEmailStub();\n\t\t\t}\n\t\t});\n\t\tthis.replaceTheBlankEmailStub();\n\n\t\treturn MessageGrid.instance\n\t}\n\n\tsetGridWrapper(gridWrapper)\n\t{\n\t\tthis.#gridWrapper = gridWrapper;\n\t}\n\n\tgetGridWrapper()\n\t{\n\t\treturn this.#gridWrapper;\n\t}\n\n\tenableLoadingMessagesStub()\n\t{\n\t\tif(this.getGridWrapper()!==undefined)\n\t\t{\n\t\t\tthis.#loadingMessagesStubInGridWrapper = this.getGridWrapper().appendChild(\n\t\t\t\tTag.render`\n\t\t\t\t\t<div class=\"mail-msg-list-grid-loader mail-msg-list-grid-loader-animate\">\n\t\t\t\t\t\t<div class=\"mail-msg-list-grid-loader-inner\">\n\t\t\t\t\t\t\t<img src=\"/bitrix/images/mail/mail-loader.svg\" alt=\"Load...\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`\n\t\t\t);\n\n\t\t\tsetTimeout(()=>{\n\t\t\t\tif(this.#loadingMessagesStubInGridWrapper !== undefined)\n\t\t\t\t{\n\t\t\t\t\tthis.#loadingMessagesStubInGridWrapper.remove();\n\t\t\t\t}\n\t\t\t}, 15000);\n\t\t}\n\t}\n\n\treplaceTheBlankEmailStub()\n\t{\n\t\tlet blankEmailStubs = document.getElementsByClassName(\"main-grid-row main-grid-row-empty main-grid-row-body\");\n\t\tif(blankEmailStubs.length > 0)\n\t\t{\n\t\t\tlet blankEmailStub = blankEmailStubs[0];\n\t\t\tif(blankEmailStub.firstElementChild.firstElementChild)\n\t\t\t{\n\t\t\t\tblankEmailStub.firstElementChild.firstElementChild.replaceWith(\n\t\t\t\t\tTag.render`\n\t\t\t\t\t<div class=\"mail-msg-list-grid-empty\">\n\t\t\t\t\t\t<div class=\"mail-msg-list-grid-empty-inner\">\n\t\t\t\t\t\t<div class=\"mail-msg-list-grid-empty-title\">${Loc.getMessage(\"MAIL_MSG_LIST_GRID_EMPTY_TITLE\")}</div>\n\t\t\t\t\t\t<p class=\"mail-msg-list-grid-empty-text\">${Loc.getMessage(\"MAIL_MSG_LIST_GRID_EMPTY_TEXT_1\")}</p>\n\t\t\t\t\t\t<p class=\"mail-msg-list-grid-empty-text\">${Loc.getMessage(\"MAIL_MSG_LIST_GRID_EMPTY_TEXT_2\")}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetCheckboxNodeForCheckAll(node)\n\t{\n\t\tthis.#checkboxNodeForCheckAll = node;\n\t}\n\n\tsetPanel(panel)\n\t{\n\t\tthis.#panel = panel;\n\t}\n\n\tgetPanel()\n\t{\n\t\treturn this.#panel;\n\t}\n\n\thidePanel()\n\t{\n\t\tconst panel = this.getPanel();\n\t\tif(panel && Type.isFunction(panel.hidePanel())){\n\t\t\tthis.getPanel().hidePanel();\n\t\t}\n\t}\n\n\t#compareGrid(eventWithGrid,grid)\n\t{\n\t\tif(this.getId() !== undefined)\n\t\t{\n\t\t\tif(grid===undefined && eventWithGrid.getCompatData())\n\t\t\t{\n\t\t\t\t[grid] = eventWithGrid.getCompatData();\n\t\t\t}\n\t\t\tif(grid !== undefined && Type.isFunction(grid.getId) && grid.getId()===this.getId()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tsetAllRowsSelectedStatus()\n\t{\n\t\tthis.#allRowsSelectedStatus = true;\n\t}\n\n\tunsetAllRowsSelectedStatus()\n\t{\n\t\tthis.#allRowsSelectedStatus = false;\n\t}\n\n\treloadTable()\n\t{\n\t\tthis.getGrid().reloadTable();\n\t\tthis.getGrid().tableUnfade();\n\t}\n\n\tsetGridId(gridId)\n\t{\n\t\tif (this.#id === gridId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.#id = gridId;\n\t\tthis.grid = BX.Main.gridManager.getInstanceById(gridId);\n\n\t}\n\n\tselectAll()\n\t{\n\t\tthis.getGrid().getRows().selectAll();\n\t}\n\n\tgetId()\n\t{\n\t\treturn this.#id;\n\t}\n\n\tgetCountDisplayed()\n\t{\n\t\tif(this.getGrid())\n\t\t{\n\t\t\treturn this.getGrid().getRows().getCountDisplayed();\n\t\t}\n\t}\n\n\tgetGrid()\n\t{\n\t\treturn this.grid;\n\t}\n\n\tgetRows()\n\t{\n\t\treturn this.getGrid().getRows().getBodyChild();\n\t}\n\n\tgetRowById(id)\n\t{\n\t\treturn this.getGrid().getRows().getById(id);\n\t}\n\n\tgetRowNodeById(id)\n\t{\n\t\treturn this.getRowById(id).getNode();\n\t}\n\n\tgetSelectedIds()\n\t{\n\t\treturn this.getGrid().getRows().getSelectedIds();\n\t}\n\n\thideRowByIds(ids)\n\t{\n\t\tfor (let i = 0; i < ids.length; i++)\n\t\t{\n\t\t\tconst rowNode = this.getRowNodeById(ids[i]);\n\t\t\tDom.style(rowNode, 'display', 'none');\n\t\t}\n\t}\n\n\tresetGridSelection()\n\t{\n\t\tEventEmitter.emit(window,'Mail::resetGridSelection');\n\t\tthis.getGrid().getRows().unselectAll();\n\t\tthis.getGrid().adjustCheckAllCheckboxes();\n\t\tthis.hidePanel();\n\t}\n\n\topenGridSettingsWindow()\n\t{\n\t\tthis.getGrid().getSettingsWindow()._onSettingsButtonClick();\n\t}\n}"],"names":["MessageGrid","instance","EventEmitter","subscribe","event","undefined","checked","selectAll","getCompatData","grid","Type","isFunction","getId","replaceTheBlankEmailStub","gridWrapper","getGridWrapper","appendChild","Tag","render","setTimeout","remove","blankEmailStubs","document","getElementsByClassName","length","blankEmailStub","firstElementChild","replaceWith","Loc","getMessage","node","panel","getPanel","hidePanel","getGrid","reloadTable","tableUnfade","gridId","BX","Main","gridManager","getInstanceById","getRows","getCountDisplayed","getBodyChild","id","getById","getRowById","getNode","getSelectedIds","ids","i","rowNode","getRowNodeById","Dom","style","emit","window","unselectAll","adjustCheckAllCheckboxes","getSettingsWindow","_onSettingsButtonClick","eventWithGrid"],"mappings":"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"}