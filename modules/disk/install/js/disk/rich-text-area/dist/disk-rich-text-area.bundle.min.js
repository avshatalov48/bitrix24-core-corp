this.BX=this.BX||{};this.BX.Disk=this.BX.Disk||{};(function(t,e,i,n,o,s){"use strict";const r={name:"DiskRichTextAreaComponent",components:{RichTextAreaComponent:i.RichTextAreaComponent,UserFieldWidgetComponent:n.UserFieldWidgetComponent,FileButton:i.FileButton,CreateDocumentButton:i.CreateDocumentButton},props:{editorOptions:{type:Object},editorInstance:{type:o.TextEditor},uploaderOptions:{type:Object},uploaderInstance:{type:s.Uploader},widgetOptions:{type:Object,default:{}},files:{type:Array,default:[]}},data(){return{fileCount:0,panelVisibility:"hidden"}},methods:{getUploaderOptions(){return{imagePreviewHeight:1200,imagePreviewWidth:1200,imagePreviewQuality:.85,treatOversizeImageAsFile:true,ignoreUnknownImageTypes:true,controller:"disk.uf.integration.diskUploaderController",multiple:true,maxFileSize:null,...e.Type.isPlainObject(this.uploaderOptions)?this.uploaderOptions:{}}},getUploaderInstance(){return this.uploaderInstance},getEditorOptions(){const t=e.Type.isPlainObject(this.editorOptions)?{...this.editorOptions}:{};t.file=t.file||{};t.file.mode="disk";return t},getEditorInstance(){return this.editorInstance},getRichTextAreaWidgetOptions(){const t=this.widgetOptions.richTextOptions||{};return{...t,events:[{"Item:onAdd":t=>{this.fileCount=t.getData().fileCount;this.panelVisibility="uploader"},"Item:onRemove":t=>{this.fileCount=t.getData().fileCount},"Item:onInsertChange":t=>{if(this.getUserFieldControl().getPhotoTemplateMode()==="auto"){this.getUserFieldControl().setPhotoTemplate(t.getData().hasInsertedItems?"gallery":"grid")}}},t.events]}},getRichTextArea(){return this.$refs.richTextArea.getRichTextArea()},getEditor(){return this.$refs.richTextArea.getEditor()},getUploader(){return this.$refs.richTextArea.getUploader()},getUserFieldControl(){return this.$refs.userFieldWidget.getUserFieldControl()},handleFileClick(){if(this.panelVisibility==="uploader"){this.panelVisibility="hidden"}else{this.panelVisibility="uploader"}},handleCreateDocumentClick(){if(this.panelVisibility==="documents"){this.panelVisibility="hidden"}else{this.panelVisibility="documents"}}},computed:{userFieldWidgetOptions(){const t={insertIntoText:true,...this.widgetOptions};t.tileWidgetOptions=t.tileWidgetOptions||{};t.tileWidgetOptions.enableDropzone=false;if(t.insertIntoText){t.tileWidgetOptions.events=t.tileWidgetOptions.events||{};t.tileWidgetOptions.events.onInsertIntoText=t=>{this.getRichTextArea().insertFile(t.getData().item)}}delete t.files;delete t.eventObject;delete t.mainPostFormId;return t},canCreateDocuments(){const t=e.Extension.getSettings("disk.uploader.user-field-widget");const i=t.get("canCreateDocuments",false);return i&&this.widgetOptions.canCreateDocuments!==false}},template:`\n\t\t<RichTextAreaComponent\n\t\t\t:editor-options="getEditorOptions()"\n\t\t\t:editor-instance="getEditorInstance()"\n\t\t\t:uploader-options="getUploaderOptions()"\n\t\t\t:uploader-instance="getUploaderInstance()"\n\t\t\t:widget-options="getRichTextAreaWidgetOptions()"\n\t\t\t:files="files"\n\t\t\tref="richTextArea"\n\t\t>\n\t\t\t<template #uploader="{ adapter }">\n\t\t\t\t<UserFieldWidgetComponent\n\t\t\t\t\t:widgetOptions="userFieldWidgetOptions"\n\t\t\t\t\t:uploader-adapter="adapter"\n\t\t\t\t\t:visibility="panelVisibility"\n\t\t\t\t\tref="userFieldWidget"\n\t\t\t\t/>\n\t\t\t</template>\n\n\t\t\t<template #after-buttons v-if="$slots['after-buttons']">\n\t\t\t\t<slot name="after-buttons"></slot>\n\t\t\t</template>\n\t\t\t<template #file-button>\n\t\t\t\t<FileButton\n\t\t\t\t\t:selected="this.panelVisibility === 'uploader'"\n\t\t\t\t\t:counter="fileCount"\n\t\t\t\t\t@click="handleFileClick" />\n\t\t\t\t<CreateDocumentButton\n\t\t\t\t\tv-if="canCreateDocuments"\n\t\t\t\t\t:selected="this.panelVisibility === 'documents'"\n\t\t\t\t\t@click="handleCreateDocumentClick"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<template #before-buttons v-if="$slots['before-buttons']">\n\t\t\t\t<slot name="before-buttons"></slot>\n\t\t\t</template>\n\t\t</RichTextAreaComponent>\n\t`};t.DiskRichTextAreaComponent=r})(this.BX.Disk.RichTextArea=this.BX.Disk.RichTextArea||{},BX,BX.UI.RichTextArea,BX.Disk.Uploader,BX.UI.TextEditor,BX.UI.Uploader);
//# sourceMappingURL=disk-rich-text-area.bundle.map.js