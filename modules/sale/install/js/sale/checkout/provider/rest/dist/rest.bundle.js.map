{"version":3,"file":"rest.bundle.js","sources":["../src/base.js","../src/basket.js"],"sourcesContent":["class BaseRestHandler\r\n{\r\n    static create(params = {})\r\n    {\r\n        return new this(params);\r\n    }\r\n\r\n    constructor(params = {})\r\n    {\r\n        if (typeof params.store === 'object' && params.store)\r\n        {\r\n            this.store = params.store;\r\n        }\r\n    }\r\n\r\n    execute(command, result, extra = {})\r\n    {\r\n        command = 'handle'+command.split('.').map(element => {\r\n            return element.charAt(0).toUpperCase() + element.slice(1);\r\n        }).join('');\r\n\r\n        if (result.error)\r\n        {\r\n            if (typeof this[command+'Error'] === 'function')\r\n            {\r\n                return this[command+'Error'](result.error, extra);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (typeof this[command+'Success'] === 'function')\r\n            {\r\n                return this[command+'Success'](result.data, extra);\r\n            }\r\n        }\r\n\r\n        return typeof this[command] === 'function'? this[command](result, extra): null;\r\n    }\r\n}\r\n\r\nexport {BaseRestHandler};","import { BaseRestHandler } from \"./base\";\r\nimport { Type } from 'main.core';\r\nimport { EventEmitter } from 'main.core.events'\r\nimport { EventType } from 'sale.checkout.const';\r\nimport {\r\n    Application as ApplicationConst,\r\n    Property as PropertyConst,\r\n    Loader as LoaderConst,\r\n    Pool as PoolConst\r\n} from 'sale.checkout.const';\r\n\r\nexport class BasketRestHandler extends BaseRestHandler\r\n{\r\n    handleRecalculateBasket(response, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(response.data.needFullRecalculation === 'Y')\r\n            {\r\n                EventEmitter.emit(EventType.basket.needRefresh, {})\r\n            }\r\n            \r\n            let needRefresh = this.store.getters['basket/getNeedRefresh'];\r\n            \r\n            this.#setModelBasketForAction(response.data, pool)\r\n                .then(() => resolve());\r\n\r\n            this.#setModelBasketForActionError(response.data)\r\n                .then(() => resolve());\r\n            \r\n            if(needRefresh === 'Y')\r\n            {\r\n                if(pool.isEmpty())\r\n                {\r\n                    this.#setModelBasketByItem(response.data, pool)\r\n                    EventEmitter.emit(EventType.basket.refreshAfter, {})\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    #setModelBasketByItem(data, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>{\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n                \r\n                //refresh\r\n                collection.forEach((fields, index) =>\r\n                {\r\n                    let item = this.#findItemById(fields.id, items);\r\n        \r\n                    if(Type.isObject(item))\r\n                    {\r\n                        let fields = this.#prepareBasketItemFields(item);\r\n            \r\n                        this.#changeBasketItem(fields, index);\r\n                    }\r\n                })\r\n    \r\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n                {\r\n                    this.#refreshModelBasketTotal(data);\r\n                    this.#refreshModelBasketDiscount(data);\r\n                }\r\n            }\r\n    \r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #setModelBasketForActionError(data)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(Type.isObject(data) && Type.isObject(data.actions))\r\n            {\r\n                const actions = data.actions;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n\r\n                let list = this.#prepareBasketErrors(collection, actions)\r\n\r\n                if(list.length > 0)\r\n                {\r\n                    this.store.commit('basket/setErrors', list);\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('basket/clearErrors');\r\n                }\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #setModelBasketForAction(data, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                const actions = data.actions;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n                const poolList = pool.get();\r\n\r\n                collection.forEach((fields, index) =>\r\n                {\r\n                    let item;\r\n                    let typeAction = this.#getTypeAction(actions, index);\r\n\r\n                    if(Type.isString(typeAction))\r\n                    {\r\n                        if(typeAction === PoolConst.action.quantity)\r\n                        {\r\n                            item = null; //not refresh\r\n\r\n                            let exists = this.#hasActionInPool(index, PoolConst.action.quantity, poolList);\r\n                            if(exists === false)\r\n                            {\r\n                                item = this.#findItemById(fields.id, items)\r\n                            }\r\n                        }\r\n                        else if(typeAction === PoolConst.action.restore)\r\n                        {\r\n                            item = this.#findItemById(actions[index].fields.id, items)\r\n                        }\r\n                        else if(typeAction === PoolConst.action.delete)\r\n                        {\r\n                            fields.status = LoaderConst.status.none;\r\n                            this.#changeBasketItem(fields, index)\r\n                                .then(()=> EventEmitter.emit(EventType.basket.removeProduct, {index}));\r\n                        }\r\n                        else if(typeAction === PoolConst.action.offer)\r\n                        {\r\n                            item = null; //not refresh\r\n    \r\n                            let exists = this.#hasActionInPool(index, PoolConst.action.offer, poolList);\r\n                            if(exists === false)\r\n                            {\r\n                                item = this.#findItemById(fields.id, items)\r\n                            }\r\n                        }\r\n\r\n                        if(Type.isObject(item))\r\n                        {\r\n                            let fields = this.#prepareBasketItemFields(item);\r\n\r\n                            fields.status = LoaderConst.status.none;\r\n                            this.#changeBasketItem(fields, index)\r\n                                .then(() =>\r\n                                    {\r\n                                        if(typeAction === PoolConst.action.restore)\r\n                                        {\r\n                                            EventEmitter.emit(EventType.basket.restoreProduct, {index})\r\n                                        }\r\n                                    }\r\n                                );\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n                {\r\n                    this.#refreshModelBasketTotal(data);\r\n                    this.#refreshModelBasketDiscount(data);\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #hasErrorAction(action)\r\n    {\r\n        return action.hasOwnProperty('errors')\r\n    }\r\n\r\n    #getAction(actions, index)\r\n    {\r\n        return actions.hasOwnProperty(index) ? actions[index] : null\r\n    }\r\n\r\n    #getErrorsAction(actions, index)\r\n    {\r\n        let action = this.#getAction(actions, index)\r\n\r\n        if(action !== null)\r\n        {\r\n            return action.hasOwnProperty('errors') ? action.errors : null\r\n        }\r\n        else\r\n        {\r\n            return null\r\n        }\r\n    }\r\n\r\n    #getTypeAction(actions, index)\r\n    {\r\n        const types = Object.values(PoolConst.action);\r\n        let action = this.#getAction(actions, index)\r\n\r\n        if(action !== null)\r\n        {\r\n            let type = action.type.toString();\r\n            return types.includes(type) ? type : null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #hasActionInPool(index, type, poolList)\r\n    {\r\n        let item = poolList.hasOwnProperty(index) ? poolList[index]:null;\r\n        if(Type.isArray(item))\r\n        {\r\n            return this.#hasActionInPoolItem(item, type);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    #hasActionInPoolItem(item, type)\r\n    {\r\n        return item.some((item)=>item.hasOwnProperty(type))\r\n    }\r\n\r\n    #findItemById(id, items)\r\n    {\r\n        id = parseInt(id);\r\n\r\n        for (let index in items)\r\n        {\r\n            if (!items.hasOwnProperty(index))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            items[index].id = parseInt(items[index].id);\r\n\r\n            if(items[index].id === id)\r\n            {\r\n                return items[index];\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    #changeBasketItem(fields, index)\r\n    {\r\n        return this.store.dispatch('basket/changeItem', {index, fields});\r\n    }\r\n\r\n    #prepareBasketItemFields(item)\r\n    {\r\n        return {\r\n            id: item.id,\r\n            name: item.name,\r\n            quantity: item.quantity,\r\n            measureText: item.measureText,\r\n            sum: item.sum,\r\n            price: item.price,\r\n            module: item.module,\r\n            productProviderClass: item.productProviderClass,\r\n            baseSum: item.sumBase,\r\n            basePrice: item.basePrice,\r\n            currency: item.currency,\r\n            discount: {\r\n                sum: item.sumDiscountDiff,\r\n                price: item.discountPrice\r\n            },\r\n            props: item.props,\r\n            sku: item.sku,\r\n            product: {\r\n                id: item.catalogProduct.id,\r\n                detailPageUrl: item.detailPageUrl,\r\n                picture: Type.isObject(item.catalogProduct.frontImage) ? item.catalogProduct.frontImage.src:null,\r\n                ratio: item.catalogProduct.ratio,\r\n                availableQuantity: item.catalogProduct.availableQuantity\r\n            }\r\n        };\r\n    }\r\n\r\n    #refreshModelBasketTotal(data)\r\n    {\r\n        let total = data.orderPriceTotal;\r\n\r\n        this.store.dispatch('basket/setTotal', {\r\n            price : total.orderPrice,\r\n            basePrice : total.priceWithoutDiscountValue,\r\n        });\r\n    }\r\n\r\n    #refreshModelBasketDiscount(data)\r\n    {\r\n        let total = data.orderPriceTotal;\r\n\r\n        this.store.dispatch('basket/setDiscount', {\r\n            sum: total.basketPriceDiscountDiffValue\r\n        });\r\n    }\r\n\r\n    handleSaveOrderSuccess(data)\r\n    {\r\n        EventEmitter.emit(EventType.order.success);\r\n\r\n        this.store.dispatch('application/setStage', {stage: ApplicationConst.stage.success});\r\n        this.store.dispatch('order/set', {\r\n            id: data.order.id,\r\n            hash: data.hash,\r\n            accountNumber: data.order.accountNumber\r\n        });\r\n\r\n        return this.#refreshModelBasket(data)\r\n            .then(()=>this.#refreshModelProperty(data))\r\n    }\r\n\r\n    #refreshModelProperty(data)\r\n    {\r\n        this.store.commit('property/clearProperty');\r\n\r\n        if(Type.isObject(data) && Type.isArray(data.properties))\r\n        {\r\n            data.properties.forEach((item, index) => {\r\n                let fields = {\r\n                    id : item.id,\r\n                    name : item.name,\r\n                    type : item.type,\r\n                    value : item.value[0],//TODO\r\n                };\r\n\r\n                this.store.dispatch('property/changeItem', {index, fields});\r\n            });\r\n        }\r\n    }\r\n\r\n    #refreshModelBasket(data)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.store.commit('basket/clearBasket');\r\n\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                items.forEach((item, index) => {\r\n                    let fields = this.#prepareBasketItemFields(item);\r\n                    this.#changeBasketItem(fields, index)});\r\n            }\r\n\r\n            if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n            {\r\n                this.#refreshModelBasketTotal(data)\r\n                this.#refreshModelBasketDiscount(data)\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    handleSaveOrderError(errors)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            if (Type.isArrayFilled(errors))\r\n            {\r\n                let general = this.#prepareGeneralErrors(errors)\r\n                let properties = this.#preparePropertyErrors(errors);\r\n\r\n                if(general.length > 0)\r\n                {\r\n                    this.store.commit('application/setErrors', general);\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('application/clearErrors');\r\n                }\r\n\r\n                if(properties.length > 0)\r\n                {\r\n                    this.store.commit('property/setErrors', properties);\r\n\r\n                    this.store.getters['property/getProperty']\r\n                        .forEach((fields, index)=>\r\n                        {\r\n                            if(typeof properties.find(item => item.propertyId === fields.id) !== 'undefined')\r\n                            {\r\n                                fields.validated = PropertyConst.validate.failure\r\n                            }\r\n                            else\r\n                            {\r\n                                if(fields.validated !== PropertyConst.validate.unvalidated)\r\n                                {\r\n                                    fields.validated = PropertyConst.validate.successful\r\n                                }\r\n                            }\r\n                            this.store.dispatch('property/changeItem', {index, fields});\r\n                        })\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('property/clearErrors');\r\n\r\n                    this.store.getters['property/getProperty']\r\n                        .forEach((fields, index)=>\r\n                        {\r\n                            if(fields.validated !== PropertyConst.validate.unvalidated)\r\n                            {\r\n                                fields.validated = PropertyConst.validate.successful\r\n                            }\r\n                            this.store.dispatch('property/changeItem', {index, fields});\r\n                        })\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    #prepareBasketErrors(collection, actions)\r\n    {\r\n        const result = [];\r\n        collection.forEach((fields, index) =>\r\n        {\r\n            let list = this.#getErrorsAction(actions, index);\r\n            if(list !== null)\r\n            {\r\n                result.push({list, index});\r\n            }\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    #preparePropertyErrors(errors)\r\n    {\r\n        const result = [];\r\n\r\n        errors.forEach((fields)=>{\r\n            if(fields.code === 'PROPERTIES')\r\n            {\r\n                if (fields.hasOwnProperty('customData'))\r\n                {\r\n                    let id = parseInt(fields.customData.id)\r\n                    result.push({message: fields.message, propertyId: id});\r\n                }\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    #prepareGeneralErrors(errors)\r\n    {\r\n        const result = [];\r\n\r\n        errors.forEach((fields)=>{\r\n            if(parseInt(fields.code) === 0 || fields.code === 'ORDER')\r\n            {\r\n                result.push({message: fields.message})\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n}"],"names":["BaseRestHandler","params","store","command","result","extra","split","map","element","charAt","toUpperCase","slice","join","error","data","BasketRestHandler","response","pool","Promise","resolve","reject","needFullRecalculation","EventEmitter","emit","EventType","basket","needRefresh","getters","then","isEmpty","refreshAfter","order","success","dispatch","stage","ApplicationConst","id","hash","accountNumber","errors","Type","isArrayFilled","general","properties","length","commit","forEach","fields","index","find","item","propertyId","validated","PropertyConst","validate","failure","unvalidated","successful","isObject","isArray","basketItems","items","collection","orderPriceTotal","actions","list","poolList","get","typeAction","isString","PoolConst","action","quantity","exists","restore","status","LoaderConst","none","removeProduct","offer","restoreProduct","hasOwnProperty","types","Object","values","type","toString","includes","some","parseInt","name","measureText","sum","price","module","productProviderClass","baseSum","sumBase","basePrice","currency","discount","sumDiscountDiff","discountPrice","props","sku","product","catalogProduct","detailPageUrl","picture","frontImage","src","ratio","availableQuantity","total","orderPrice","priceWithoutDiscountValue","basketPriceDiscountDiffValue","value","push","code","customData","message"],"mappings":";;;;;;QAAMA;;;iCAGF;UAAA,IADcC,MACd,uEADuB,EACvB;UACI,OAAO,IAAI,IAAJ,CAASA,MAAT,CAAP;;;;MAGJ,2BACA;QAAA,IADYA,MACZ,uEADqB,EACrB;QAAA;;QACI,IAAI,uBAAOA,MAAM,CAACC,KAAd,MAAwB,QAAxB,IAAoCD,MAAM,CAACC,KAA/C,EACA;UACI,KAAKA,KAAL,GAAaD,MAAM,CAACC,KAApB;;;;;;gCAIAC,SAASC,QACjB;UAAA,IADyBC,KACzB,uEADiC,EACjC;UACIF,OAAO,GAAG,WAASA,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmBC,GAAnB,CAAuB,UAAAC,OAAO,EAAI;YACjD,OAAOA,OAAO,CAACC,MAAR,CAAe,CAAf,EAAkBC,WAAlB,KAAkCF,OAAO,CAACG,KAAR,CAAc,CAAd,CAAzC;WADe,EAEhBC,IAFgB,CAEX,EAFW,CAAnB;;UAIA,IAAIR,MAAM,CAACS,KAAX,EACA;YACI,IAAI,OAAO,KAAKV,OAAO,GAAC,OAAb,CAAP,KAAiC,UAArC,EACA;cACI,OAAO,KAAKA,OAAO,GAAC,OAAb,EAAsBC,MAAM,CAACS,KAA7B,EAAoCR,KAApC,CAAP;;WAJR,MAQA;YACI,IAAI,OAAO,KAAKF,OAAO,GAAC,SAAb,CAAP,KAAmC,UAAvC,EACA;cACI,OAAO,KAAKA,OAAO,GAAC,SAAb,EAAwBC,MAAM,CAACU,IAA/B,EAAqCT,KAArC,CAAP;;;;UAIR,OAAO,OAAO,KAAKF,OAAL,CAAP,KAAyB,UAAzB,GAAqC,KAAKA,OAAL,EAAcC,MAAd,EAAsBC,KAAtB,CAArC,GAAmE,IAA1E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBR,QAAaU,iBAAb;MAAA;;MAAA;QAAA;;QAAA;;QAAA;;QAAA;UAAA;;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;QAAA;;;MAAA;QAAA;QAAA,wCAE4BC,QAF5B,EAEsCC,IAFtC,EAGI;UAAA;;UACI,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EACnB;YACI,IAAGJ,QAAQ,CAACF,IAAT,CAAcO,qBAAd,KAAwC,GAA3C,EACA;cACIC,6BAAY,CAACC,IAAb,CAAkBC,6BAAS,CAACC,MAAV,CAAiBC,WAAnC,EAAgD,EAAhD;;;YAGJ,IAAIA,WAAW,GAAG,MAAI,CAACxB,KAAL,CAAWyB,OAAX,CAAmB,uBAAnB,CAAlB;;YAEA,uBAAA,MAAI,sDAAJ,MAAA,MAAI,EAA0BX,QAAQ,CAACF,IAAnC,EAAyCG,IAAzC,CAAJ,CACKW,IADL,CACU;cAAA,OAAMT,OAAO,EAAb;aADV;;YAGA,uBAAA,MAAI,gEAAJ,MAAA,MAAI,EAA+BH,QAAQ,CAACF,IAAxC,CAAJ,CACKc,IADL,CACU;cAAA,OAAMT,OAAO,EAAb;aADV;;YAGA,IAAGO,WAAW,KAAK,GAAnB,EACA;cACI,IAAGT,IAAI,CAACY,OAAL,EAAH,EACA;gBACI,uBAAA,MAAI,gDAAJ,MAAA,MAAI,EAAuBb,QAAQ,CAACF,IAAhC,EAAsCG,IAAtC,CAAJ;;gBACAK,6BAAY,CAACC,IAAb,CAAkBC,6BAAS,CAACC,MAAV,CAAiBK,YAAnC,EAAiD,EAAjD;;;WApBL,CAAP;;;QAJR;QAAA,uCAoS2BhB,IApS3B,EAqSI;UAAA;;UACIQ,6BAAY,CAACC,IAAb,CAAkBC,6BAAS,CAACO,KAAV,CAAgBC,OAAlC;UAEA,KAAK9B,KAAL,CAAW+B,QAAX,CAAoB,sBAApB,EAA4C;YAACC,KAAK,EAAEC,+BAAgB,CAACD,KAAjB,CAAuBF;WAA3E;UACA,KAAK9B,KAAL,CAAW+B,QAAX,CAAoB,WAApB,EAAiC;YAC7BG,EAAE,EAAEtB,IAAI,CAACiB,KAAL,CAAWK,EADc;YAE7BC,IAAI,EAAEvB,IAAI,CAACuB,IAFkB;YAG7BC,aAAa,EAAExB,IAAI,CAACiB,KAAL,CAAWO;WAH9B;UAMA,OAAO,mFAAyBxB,IAAzB,EACFc,IADE,CACG;YAAA,8BAAI,MAAJ,sDAAI,MAAJ,EAA+Bd,IAA/B;WADH,CAAP;;;QA/SR;QAAA,qCA8VyByB,MA9VzB,EA+VI;UAAA;;UACI,OAAO,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;YACpC,IAAIoB,cAAI,CAACC,aAAL,CAAmBF,MAAnB,CAAJ,EACA;cACI,IAAIG,OAAO,0BAAG,MAAH,sDAAG,MAAH,EAA8BH,MAA9B,CAAX;;cACA,IAAII,UAAU,0BAAG,MAAH,wDAAG,MAAH,EAA+BJ,MAA/B,CAAd;;cAEA,IAAGG,OAAO,CAACE,MAAR,GAAiB,CAApB,EACA;gBACI,MAAI,CAAC1C,KAAL,CAAW2C,MAAX,CAAkB,uBAAlB,EAA2CH,OAA3C;eAFJ,MAKA;gBACI,MAAI,CAACxC,KAAL,CAAW2C,MAAX,CAAkB,yBAAlB;;;cAGJ,IAAGF,UAAU,CAACC,MAAX,GAAoB,CAAvB,EACA;gBACI,MAAI,CAAC1C,KAAL,CAAW2C,MAAX,CAAkB,oBAAlB,EAAwCF,UAAxC;;gBAEA,MAAI,CAACzC,KAAL,CAAWyB,OAAX,CAAmB,sBAAnB,EACKmB,OADL,CACa,UAACC,MAAD,EAASC,KAAT,EACT;kBACI,IAAG,OAAOL,UAAU,CAACM,IAAX,CAAgB,UAAAC,IAAI;oBAAA,OAAIA,IAAI,CAACC,UAAL,KAAoBJ,MAAM,CAACX,EAA/B;mBAApB,CAAP,KAAkE,WAArE,EACA;oBACIW,MAAM,CAACK,SAAP,GAAmBC,4BAAa,CAACC,QAAd,CAAuBC,OAA1C;mBAFJ,MAKA;oBACI,IAAGR,MAAM,CAACK,SAAP,KAAqBC,4BAAa,CAACC,QAAd,CAAuBE,WAA/C,EACA;sBACIT,MAAM,CAACK,SAAP,GAAmBC,4BAAa,CAACC,QAAd,CAAuBG,UAA1C;;;;kBAGR,MAAI,CAACvD,KAAL,CAAW+B,QAAX,CAAoB,qBAApB,EAA2C;oBAACe,KAAK,EAALA,KAAD;oBAAQD,MAAM,EAANA;mBAAnD;iBAdR;eAJJ,MAsBA;gBACI,MAAI,CAAC7C,KAAL,CAAW2C,MAAX,CAAkB,sBAAlB;;gBAEA,MAAI,CAAC3C,KAAL,CAAWyB,OAAX,CAAmB,sBAAnB,EACKmB,OADL,CACa,UAACC,MAAD,EAASC,KAAT,EACT;kBACI,IAAGD,MAAM,CAACK,SAAP,KAAqBC,4BAAa,CAACC,QAAd,CAAuBE,WAA/C,EACA;oBACIT,MAAM,CAACK,SAAP,GAAmBC,4BAAa,CAACC,QAAd,CAAuBG,UAA1C;;;kBAEJ,MAAI,CAACvD,KAAL,CAAW+B,QAAX,CAAoB,qBAApB,EAA2C;oBAACe,KAAK,EAALA,KAAD;oBAAQD,MAAM,EAANA;mBAAnD;iBAPR;;;WAxCL,CAAP;;;MAhWR;IAAA,EAAuC/C,eAAvC;;oCA8B0Bc,MAAMG,MAC5B;MAAA;;MACI,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;QACnC,IAAGoB,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACmB,OAAL,CAAa7C,IAAI,CAAC8C,WAAlB,CAA1B,EACA;UACI,IAAMC,KAAK,GAAG/C,IAAI,CAAC8C,WAAnB;UACA,IAAME,UAAU,GAAG,MAAI,CAAC5D,KAAL,CAAWyB,OAAX,CAAmB,kBAAnB,CAAnB,CAFJ;;UAKImC,UAAU,CAAChB,OAAX,CAAmB,UAACC,MAAD,EAASC,KAAT,EACnB;YACI,IAAIE,IAAI,0BAAG,MAAH,sCAAG,MAAH,EAAsBH,MAAM,CAACX,EAA7B,EAAiCyB,KAAjC,CAAR;;YAEA,IAAGrB,cAAI,CAACkB,QAAL,CAAcR,IAAd,CAAH,EACA;cACI,IAAIH,OAAM,0BAAG,MAAH,4DAAG,MAAH,EAAiCG,IAAjC,CAAV;;cAEA,uBAAA,MAAI,wCAAJ,MAAA,MAAI,EAAmBH,OAAnB,EAA2BC,KAA3B,CAAJ;;WARR;;UAYA,IAAGR,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACkB,QAAL,CAAc5C,IAAI,CAACiD,eAAnB,CAA1B,EACA;YACI,uBAAA,MAAI,sDAAJ,MAAA,MAAI,EAA0BjD,IAA1B,CAAJ;;YACA,uBAAA,MAAI,4DAAJ,MAAA,MAAI,EAA6BA,IAA7B,CAAJ;;;;QAIRK,OAAO;OA1BJ,CAAP;IA4BH;;4CAE6BL,MAC9B;MAAA;;MACI,OAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EACnB;QACI,IAAGoB,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACkB,QAAL,CAAc5C,IAAI,CAACkD,OAAnB,CAA1B,EACA;UACI,IAAMA,OAAO,GAAGlD,IAAI,CAACkD,OAArB;UACA,IAAMF,UAAU,GAAG,MAAI,CAAC5D,KAAL,CAAWyB,OAAX,CAAmB,kBAAnB,CAAnB;;UAEA,IAAIsC,IAAI,0BAAG,MAAH,oDAAG,MAAH,EAA6BH,UAA7B,EAAyCE,OAAzC,CAAR;;UAEA,IAAGC,IAAI,CAACrB,MAAL,GAAc,CAAjB,EACA;YACI,MAAI,CAAC1C,KAAL,CAAW2C,MAAX,CAAkB,kBAAlB,EAAsCoB,IAAtC;WAFJ,MAKA;YACI,MAAI,CAAC/D,KAAL,CAAW2C,MAAX,CAAkB,oBAAlB;;;;QAGR1B,OAAO;OAlBJ,CAAP;IAoBH;;uCAEwBL,MAAMG,MAC/B;MAAA;;MACI,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EACnB;QACI,IAAGoB,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACmB,OAAL,CAAa7C,IAAI,CAAC8C,WAAlB,CAA1B,EACA;UACI,IAAMC,KAAK,GAAG/C,IAAI,CAAC8C,WAAnB;UACA,IAAMI,OAAO,GAAGlD,IAAI,CAACkD,OAArB;UACA,IAAMF,UAAU,GAAG,MAAI,CAAC5D,KAAL,CAAWyB,OAAX,CAAmB,kBAAnB,CAAnB;UACA,IAAMuC,QAAQ,GAAGjD,IAAI,CAACkD,GAAL,EAAjB;UAEAL,UAAU,CAAChB,OAAX,CAAmB,UAACC,MAAD,EAASC,KAAT,EACnB;YACI,IAAIE,IAAJ;;YACA,IAAIkB,UAAU,0BAAG,MAAH,wCAAG,MAAH,EAAuBJ,OAAvB,EAAgChB,KAAhC,CAAd;;YAEA,IAAGR,cAAI,CAAC6B,QAAL,CAAcD,UAAd,CAAH,EACA;cACI,IAAGA,UAAU,KAAKE,wBAAS,CAACC,MAAV,CAAiBC,QAAnC,EACA;gBACItB,IAAI,GAAG,IAAP,CADJ;;gBAGI,IAAIuB,MAAM,0BAAG,MAAH,4CAAG,MAAH,EAAyBzB,KAAzB,EAAgCsB,wBAAS,CAACC,MAAV,CAAiBC,QAAjD,EAA2DN,QAA3D,CAAV;;gBACA,IAAGO,MAAM,KAAK,KAAd,EACA;kBACIvB,IAAI,0BAAG,MAAH,sCAAG,MAAH,EAAsBH,MAAM,CAACX,EAA7B,EAAiCyB,KAAjC,CAAJ;;eAPR,MAUK,IAAGO,UAAU,KAAKE,wBAAS,CAACC,MAAV,CAAiBG,OAAnC,EACL;gBACIxB,IAAI,0BAAG,MAAH,sCAAG,MAAH,EAAsBc,OAAO,CAAChB,KAAD,CAAP,CAAeD,MAAf,CAAsBX,EAA5C,EAAgDyB,KAAhD,CAAJ;eAFC,MAIA,IAAGO,UAAU,KAAKE,wBAAS,CAACC,MAAV,UAAlB,EACL;gBACIxB,MAAM,CAAC4B,MAAP,GAAgBC,0BAAW,CAACD,MAAZ,CAAmBE,IAAnC;;gBACA,uBAAA,MAAI,wCAAJ,MAAA,MAAI,EAAmB9B,MAAnB,EAA2BC,KAA3B,CAAJ,CACKpB,IADL,CACU;kBAAA,OAAKN,6BAAY,CAACC,IAAb,CAAkBC,6BAAS,CAACC,MAAV,CAAiBqD,aAAnC,EAAkD;oBAAC9B,KAAK,EAALA;mBAAnD,CAAL;iBADV;eAHC,MAMA,IAAGoB,UAAU,KAAKE,wBAAS,CAACC,MAAV,CAAiBQ,KAAnC,EACL;gBACI7B,IAAI,GAAG,IAAP,CADJ;;gBAGI,IAAIuB,OAAM,0BAAG,MAAH,4CAAG,MAAH,EAAyBzB,KAAzB,EAAgCsB,wBAAS,CAACC,MAAV,CAAiBQ,KAAjD,EAAwDb,QAAxD,CAAV;;gBACA,IAAGO,OAAM,KAAK,KAAd,EACA;kBACIvB,IAAI,0BAAG,MAAH,sCAAG,MAAH,EAAsBH,MAAM,CAACX,EAA7B,EAAiCyB,KAAjC,CAAJ;;;;cAIR,IAAGrB,cAAI,CAACkB,QAAL,CAAcR,IAAd,CAAH,EACA;gBACI,IAAIH,QAAM,0BAAG,MAAH,4DAAG,MAAH,EAAiCG,IAAjC,CAAV;;gBAEAH,QAAM,CAAC4B,MAAP,GAAgBC,0BAAW,CAACD,MAAZ,CAAmBE,IAAnC;;gBACA,uBAAA,MAAI,wCAAJ,MAAA,MAAI,EAAmB9B,QAAnB,EAA2BC,KAA3B,CAAJ,CACKpB,IADL,CACU,YACF;kBACI,IAAGwC,UAAU,KAAKE,wBAAS,CAACC,MAAV,CAAiBG,OAAnC,EACA;oBACIpD,6BAAY,CAACC,IAAb,CAAkBC,6BAAS,CAACC,MAAV,CAAiBuD,cAAnC,EAAmD;sBAAChC,KAAK,EAALA;qBAApD;;iBALhB;;;WA3CZ;;UAwDA,IAAGR,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACkB,QAAL,CAAc5C,IAAI,CAACiD,eAAnB,CAA1B,EACA;YACI,uBAAA,MAAI,sDAAJ,MAAA,MAAI,EAA0BjD,IAA1B,CAAJ;;YACA,uBAAA,MAAI,4DAAJ,MAAA,MAAI,EAA6BA,IAA7B,CAAJ;;;;QAIRK,OAAO;OAxEJ,CAAP;IA0EH;;yBAOU6C,SAAShB,OACpB;MACI,OAAOgB,OAAO,CAACiB,cAAR,CAAuBjC,KAAvB,IAAgCgB,OAAO,CAAChB,KAAD,CAAvC,GAAiD,IAAxD;IACH;;+BAEgBgB,SAAShB,OAC1B;MACI,IAAIuB,MAAM,0BAAG,IAAH,gCAAG,IAAH,EAAmBP,OAAnB,EAA4BhB,KAA5B,CAAV;;MAEA,IAAGuB,MAAM,KAAK,IAAd,EACA;QACI,OAAOA,MAAM,CAACU,cAAP,CAAsB,QAAtB,IAAkCV,MAAM,CAAChC,MAAzC,GAAkD,IAAzD;OAFJ,MAKA;QACI,OAAO,IAAP;;IAEP;;6BAEcyB,SAAShB,OACxB;MACI,IAAMkC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcd,wBAAS,CAACC,MAAxB,CAAd;;MACA,IAAIA,MAAM,0BAAG,IAAH,gCAAG,IAAH,EAAmBP,OAAnB,EAA4BhB,KAA5B,CAAV;;MAEA,IAAGuB,MAAM,KAAK,IAAd,EACA;QACI,IAAIc,IAAI,GAAGd,MAAM,CAACc,IAAP,CAAYC,QAAZ,EAAX;QACA,OAAOJ,KAAK,CAACK,QAAN,CAAeF,IAAf,IAAuBA,IAAvB,GAA8B,IAArC;;;MAEJ,OAAO,IAAP;IACH;;+BAEgBrC,OAAOqC,MAAMnB,UAC9B;MACI,IAAIhB,IAAI,GAAGgB,QAAQ,CAACe,cAAT,CAAwBjC,KAAxB,IAAiCkB,QAAQ,CAAClB,KAAD,CAAzC,GAAiD,IAA5D;;MACA,IAAGR,cAAI,CAACmB,OAAL,CAAaT,IAAb,CAAH,EACA;QACI,8BAAO,IAAP,oDAAO,IAAP,EAAiCA,IAAjC,EAAuCmC,IAAvC;;;MAEJ,OAAO,KAAP;IACH;;mCAEoBnC,MAAMmC,MAC3B;MACI,OAAOnC,IAAI,CAACsC,IAAL,CAAU,UAACtC,IAAD;QAAA,OAAQA,IAAI,CAAC+B,cAAL,CAAoBI,IAApB,CAAR;OAAV,CAAP;IACH;;4BAEajD,IAAIyB,OAClB;MACIzB,EAAE,GAAGqD,QAAQ,CAACrD,EAAD,CAAb;;MAEA,KAAK,IAAIY,KAAT,IAAkBa,KAAlB,EACA;QACI,IAAI,CAACA,KAAK,CAACoB,cAAN,CAAqBjC,KAArB,CAAL,EACA;UACI;;;QAGJa,KAAK,CAACb,KAAD,CAAL,CAAaZ,EAAb,GAAkBqD,QAAQ,CAAC5B,KAAK,CAACb,KAAD,CAAL,CAAaZ,EAAd,CAA1B;;QAEA,IAAGyB,KAAK,CAACb,KAAD,CAAL,CAAaZ,EAAb,KAAoBA,EAAvB,EACA;UACI,OAAOyB,KAAK,CAACb,KAAD,CAAZ;;;;MAIR,OAAO,IAAP;IACH;;gCAEiBD,QAAQC,OAC1B;MACI,OAAO,KAAK9C,KAAL,CAAW+B,QAAX,CAAoB,mBAApB,EAAyC;QAACe,KAAK,EAALA,KAAD;QAAQD,MAAM,EAANA;OAAjD,CAAP;IACH;;uCAEwBG,MACzB;MACI,OAAO;QACHd,EAAE,EAAEc,IAAI,CAACd,EADN;QAEHsD,IAAI,EAAExC,IAAI,CAACwC,IAFR;QAGHlB,QAAQ,EAAEtB,IAAI,CAACsB,QAHZ;QAIHmB,WAAW,EAAEzC,IAAI,CAACyC,WAJf;QAKHC,GAAG,EAAE1C,IAAI,CAAC0C,GALP;QAMHC,KAAK,EAAE3C,IAAI,CAAC2C,KANT;QAOHC,MAAM,EAAE5C,IAAI,CAAC4C,MAPV;QAQHC,oBAAoB,EAAE7C,IAAI,CAAC6C,oBARxB;QASHC,OAAO,EAAE9C,IAAI,CAAC+C,OATX;QAUHC,SAAS,EAAEhD,IAAI,CAACgD,SAVb;QAWHC,QAAQ,EAAEjD,IAAI,CAACiD,QAXZ;QAYHC,QAAQ,EAAE;UACNR,GAAG,EAAE1C,IAAI,CAACmD,eADJ;UAENR,KAAK,EAAE3C,IAAI,CAACoD;SAdb;QAgBHC,KAAK,EAAErD,IAAI,CAACqD,KAhBT;QAiBHC,GAAG,EAAEtD,IAAI,CAACsD,GAjBP;QAkBHC,OAAO,EAAE;UACLrE,EAAE,EAAEc,IAAI,CAACwD,cAAL,CAAoBtE,EADnB;UAELuE,aAAa,EAAEzD,IAAI,CAACyD,aAFf;UAGLC,OAAO,EAAEpE,cAAI,CAACkB,QAAL,CAAcR,IAAI,CAACwD,cAAL,CAAoBG,UAAlC,IAAgD3D,IAAI,CAACwD,cAAL,CAAoBG,UAApB,CAA+BC,GAA/E,GAAmF,IAHvF;UAILC,KAAK,EAAE7D,IAAI,CAACwD,cAAL,CAAoBK,KAJtB;UAKLC,iBAAiB,EAAE9D,IAAI,CAACwD,cAAL,CAAoBM;;OAvB/C;IA0BH;;uCAEwBlG,MACzB;MACI,IAAImG,KAAK,GAAGnG,IAAI,CAACiD,eAAjB;MAEA,KAAK7D,KAAL,CAAW+B,QAAX,CAAoB,iBAApB,EAAuC;QACnC4D,KAAK,EAAGoB,KAAK,CAACC,UADqB;QAEnChB,SAAS,EAAGe,KAAK,CAACE;OAFtB;IAIH;;0CAE2BrG,MAC5B;MACI,IAAImG,KAAK,GAAGnG,IAAI,CAACiD,eAAjB;MAEA,KAAK7D,KAAL,CAAW+B,QAAX,CAAoB,oBAApB,EAA0C;QACtC2D,GAAG,EAAEqB,KAAK,CAACG;OADf;IAGH;;oCAiBqBtG,MACtB;MAAA;;MACI,KAAKZ,KAAL,CAAW2C,MAAX,CAAkB,wBAAlB;;MAEA,IAAGL,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACmB,OAAL,CAAa7C,IAAI,CAAC6B,UAAlB,CAA1B,EACA;QACI7B,IAAI,CAAC6B,UAAL,CAAgBG,OAAhB,CAAwB,UAACI,IAAD,EAAOF,KAAP,EAAiB;UACrC,IAAID,MAAM,GAAG;YACTX,EAAE,EAAGc,IAAI,CAACd,EADD;YAETsD,IAAI,EAAGxC,IAAI,CAACwC,IAFH;YAGTL,IAAI,EAAGnC,IAAI,CAACmC,IAHH;YAITgC,KAAK,EAAGnE,IAAI,CAACmE,KAAL,CAAW,CAAX,CAJC;;WAAb;;UAOA,MAAI,CAACnH,KAAL,CAAW+B,QAAX,CAAoB,qBAApB,EAA2C;YAACe,KAAK,EAALA,KAAD;YAAQD,MAAM,EAANA;WAAnD;SARJ;;IAWP;;kCAEmBjC,MACpB;MAAA;;MACI,OAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QAEpC,MAAI,CAAClB,KAAL,CAAW2C,MAAX,CAAkB,oBAAlB;;QAEA,IAAGL,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACmB,OAAL,CAAa7C,IAAI,CAAC8C,WAAlB,CAA1B,EACA;UACI,IAAMC,KAAK,GAAG/C,IAAI,CAAC8C,WAAnB;UACAC,KAAK,CAACf,OAAN,CAAc,UAACI,IAAD,EAAOF,KAAP,EAAiB;YAC3B,IAAID,MAAM,0BAAG,MAAH,4DAAG,MAAH,EAAiCG,IAAjC,CAAV;;YACA,uBAAA,MAAI,wCAAJ,MAAA,MAAI,EAAmBH,MAAnB,EAA2BC,KAA3B,CAAJ;WAFJ;;;QAKJ,IAAGR,cAAI,CAACkB,QAAL,CAAc5C,IAAd,KAAuB0B,cAAI,CAACkB,QAAL,CAAc5C,IAAI,CAACiD,eAAnB,CAA1B,EACA;UACI,uBAAA,MAAI,sDAAJ,MAAA,MAAI,EAA0BjD,IAA1B,CAAJ;;UACA,uBAAA,MAAI,4DAAJ,MAAA,MAAI,EAA6BA,IAA7B,CAAJ;;;QAGJK,OAAO;OAlBJ,CAAP;IAoBH;;mCA0DoB2C,YAAYE,SACjC;MAAA;;MACI,IAAM5D,MAAM,GAAG,EAAf;MACA0D,UAAU,CAAChB,OAAX,CAAmB,UAACC,MAAD,EAASC,KAAT,EACnB;QACI,IAAIiB,IAAI,0BAAG,OAAH,4CAAG,OAAH,EAAyBD,OAAzB,EAAkChB,KAAlC,CAAR;;QACA,IAAGiB,IAAI,KAAK,IAAZ,EACA;UACI7D,MAAM,CAACkH,IAAP,CAAY;YAACrD,IAAI,EAAJA,IAAD;YAAOjB,KAAK,EAALA;WAAnB;;OALR;MASA,OAAO5C,MAAP;IACH;;qCAEsBmC,QACvB;MACI,IAAMnC,MAAM,GAAG,EAAf;MAEAmC,MAAM,CAACO,OAAP,CAAe,UAACC,MAAD,EAAU;QACrB,IAAGA,MAAM,CAACwE,IAAP,KAAgB,YAAnB,EACA;UACI,IAAIxE,MAAM,CAACkC,cAAP,CAAsB,YAAtB,CAAJ,EACA;YACI,IAAI7C,EAAE,GAAGqD,QAAQ,CAAC1C,MAAM,CAACyE,UAAP,CAAkBpF,EAAnB,CAAjB;YACAhC,MAAM,CAACkH,IAAP,CAAY;cAACG,OAAO,EAAE1E,MAAM,CAAC0E,OAAjB;cAA0BtE,UAAU,EAAEf;aAAlD;;;OANZ;MAUA,OAAOhC,MAAP;IACH;;oCAEqBmC,QACtB;MACI,IAAMnC,MAAM,GAAG,EAAf;MAEAmC,MAAM,CAACO,OAAP,CAAe,UAACC,MAAD,EAAU;QACrB,IAAG0C,QAAQ,CAAC1C,MAAM,CAACwE,IAAR,CAAR,KAA0B,CAA1B,IAA+BxE,MAAM,CAACwE,IAAP,KAAgB,OAAlD,EACA;UACInH,MAAM,CAACkH,IAAP,CAAY;YAACG,OAAO,EAAE1E,MAAM,CAAC0E;WAA7B;;OAHR;MAMA,OAAOrH,MAAP;IACH;;;;;;;;"}