{"version":3,"file":"rest.bundle.js","sources":["../src/base.js","../src/basket.js"],"sourcesContent":["class BaseRestHandler\r\n{\r\n    static create(params = {})\r\n    {\r\n        return new this(params);\r\n    }\r\n\r\n    constructor(params = {})\r\n    {\r\n        if (typeof params.store === 'object' && params.store)\r\n        {\r\n            this.store = params.store;\r\n        }\r\n    }\r\n\r\n    execute(command, result, extra = {})\r\n    {\r\n        command = 'handle'+command.split('.').map(element => {\r\n            return element.charAt(0).toUpperCase() + element.slice(1);\r\n        }).join('');\r\n\r\n        if (result.error)\r\n        {\r\n            if (typeof this[command+'Error'] === 'function')\r\n            {\r\n                return this[command+'Error'](result.error, extra);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (typeof this[command+'Success'] === 'function')\r\n            {\r\n                return this[command+'Success'](result.data, extra);\r\n            }\r\n        }\r\n\r\n        return typeof this[command] === 'function'? this[command](result, extra): null;\r\n    }\r\n}\r\n\r\nexport {BaseRestHandler};","import { BaseRestHandler } from \"./base\";\r\nimport { Type } from 'main.core';\r\nimport { EventEmitter } from 'main.core.events'\r\nimport { EventType } from 'sale.checkout.const';\r\nimport {\r\n    Application as ApplicationConst,\r\n    Property as PropertyConst,\r\n    Loader as LoaderConst,\r\n    Pool as PoolConst\r\n} from 'sale.checkout.const';\r\n\r\nexport class BasketRestHandler extends BaseRestHandler\r\n{\r\n    handleRecalculateBasket(response, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(response.data.needFullRecalculation === 'Y')\r\n            {\r\n                EventEmitter.emit(EventType.basket.needRefresh, {})\r\n            }\r\n            \r\n            let needRefresh = this.store.getters['basket/getNeedRefresh'];\r\n            \r\n            this.#setModelBasketForAction(response.data, pool)\r\n                .then(() => resolve());\r\n\r\n            this.#setModelBasketForActionError(response.data)\r\n                .then(() => resolve());\r\n            \r\n            if(needRefresh === 'Y')\r\n            {\r\n                if(pool.isEmpty())\r\n                {\r\n                    this.#setModelBasketByItem(response.data, pool)\r\n                    EventEmitter.emit(EventType.basket.refreshAfter, {})\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    #setModelBasketByItem(data, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>{\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n                \r\n                //refresh\r\n                collection.forEach((fields, index) =>\r\n                {\r\n                    let item = this.#findItemById(fields.id, items);\r\n        \r\n                    if(Type.isObject(item))\r\n                    {\r\n                        let fields = this.#prepareBasketItemFields(item);\r\n            \r\n                        this.#changeBasketItem(fields, index);\r\n                    }\r\n                })\r\n    \r\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n                {\r\n                    this.#refreshModelBasketTotal(data);\r\n                    this.#refreshModelBasketDiscount(data);\r\n                }\r\n            }\r\n    \r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #setModelBasketForActionError(data)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(Type.isObject(data) && Type.isObject(data.actions))\r\n            {\r\n                const actions = data.actions;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n\r\n                let list = this.#prepareBasketErrors(collection, actions)\r\n\r\n                if(list.length > 0)\r\n                {\r\n                    this.store.commit('basket/setErrors', list);\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('basket/clearErrors');\r\n                }\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #setModelBasketForAction(data, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                const actions = data.actions;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n                const poolList = pool.get();\r\n\r\n                collection.forEach((fields, index) =>\r\n                {\r\n                    let item;\r\n                    let typeAction = this.#getTypeAction(actions, index);\r\n\r\n                    if(Type.isString(typeAction))\r\n                    {\r\n                        if(typeAction === PoolConst.action.quantity)\r\n                        {\r\n                            item = null; //not refresh\r\n\r\n                            let exists = this.#hasActionInPool(index, PoolConst.action.quantity, poolList);\r\n                            if(exists === false)\r\n                            {\r\n                                item = this.#findItemById(fields.id, items)\r\n                            }\r\n                        }\r\n                        else if(typeAction === PoolConst.action.restore)\r\n                        {\r\n                            item = this.#findItemById(actions[index].fields.id, items)\r\n                        }\r\n                        else if(typeAction === PoolConst.action.delete)\r\n                        {\r\n                            fields.status = LoaderConst.status.none;\r\n                            this.#changeBasketItem(fields, index)\r\n                                .then(()=> EventEmitter.emit(EventType.basket.removeProduct, {index}));\r\n                        }\r\n                        else if(typeAction === PoolConst.action.offer)\r\n                        {\r\n                            item = null; //not refresh\r\n    \r\n                            let exists = this.#hasActionInPool(index, PoolConst.action.offer, poolList);\r\n                            if(exists === false)\r\n                            {\r\n                                item = this.#findItemById(fields.id, items)\r\n                            }\r\n                        }\r\n\r\n                        if(Type.isObject(item))\r\n                        {\r\n                            let fields = this.#prepareBasketItemFields(item);\r\n\r\n                            fields.status = LoaderConst.status.none;\r\n                            this.#changeBasketItem(fields, index)\r\n                                .then(() =>\r\n                                    {\r\n                                        if(typeAction === PoolConst.action.restore)\r\n                                        {\r\n                                            EventEmitter.emit(EventType.basket.restoreProduct, {index})\r\n                                        }\r\n                                    }\r\n                                );\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n                {\r\n                    this.#refreshModelBasketTotal(data);\r\n                    this.#refreshModelBasketDiscount(data);\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #hasErrorAction(action)\r\n    {\r\n        return action.hasOwnProperty('errors')\r\n    }\r\n\r\n    #getAction(actions, index)\r\n    {\r\n        return actions.hasOwnProperty(index) ? actions[index] : null\r\n    }\r\n\r\n    #getErrorsAction(actions, index)\r\n    {\r\n        let action = this.#getAction(actions, index)\r\n\r\n        if(action !== null)\r\n        {\r\n            return action.hasOwnProperty('errors') ? action.errors : null\r\n        }\r\n        else\r\n        {\r\n            return null\r\n        }\r\n    }\r\n\r\n    #getTypeAction(actions, index)\r\n    {\r\n        const types = Object.values(PoolConst.action);\r\n        let action = this.#getAction(actions, index)\r\n\r\n        if(action !== null)\r\n        {\r\n            let type = action.type.toString();\r\n            return types.includes(type) ? type : null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #hasActionInPool(index, type, poolList)\r\n    {\r\n        let item = poolList.hasOwnProperty(index) ? poolList[index]:null;\r\n        if(Type.isArray(item))\r\n        {\r\n            return this.#hasActionInPoolItem(item, type);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    #hasActionInPoolItem(item, type)\r\n    {\r\n        return item.some((item)=>item.hasOwnProperty(type))\r\n    }\r\n\r\n    #findItemById(id, items)\r\n    {\r\n        id = parseInt(id);\r\n\r\n        for (let index in items)\r\n        {\r\n            if (!items.hasOwnProperty(index))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            items[index].id = parseInt(items[index].id);\r\n\r\n            if(items[index].id === id)\r\n            {\r\n                return items[index];\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    #changeBasketItem(fields, index)\r\n    {\r\n        return this.store.dispatch('basket/changeItem', {index, fields});\r\n    }\r\n\r\n    #prepareBasketItemFields(item)\r\n    {\r\n        return {\r\n            id: item.id,\r\n            name: item.name,\r\n            quantity: item.quantity,\r\n            measureText: item.measureText,\r\n            sum: item.sum,\r\n            price: item.price,\r\n            module: item.module,\r\n            productProviderClass: item.productProviderClass,\r\n            baseSum: item.sumBase,\r\n            basePrice: item.basePrice,\r\n            currency: item.currency,\r\n            discount: {\r\n                sum: item.sumDiscountDiff,\r\n                price: item.discountPrice\r\n            },\r\n            props: item.props,\r\n            sku: item.sku,\r\n            product: {\r\n                id: item.catalogProduct.id,\r\n                detailPageUrl: item.detailPageUrl,\r\n                picture: Type.isObject(item.catalogProduct.frontImage) ? item.catalogProduct.frontImage.src:null,\r\n                ratio: item.catalogProduct.ratio,\r\n                availableQuantity: item.catalogProduct.availableQuantity\r\n            }\r\n        };\r\n    }\r\n\r\n    #refreshModelBasketTotal(data)\r\n    {\r\n        let total = data.orderPriceTotal;\r\n\r\n        this.store.dispatch('basket/setTotal', {\r\n            price : total.orderPrice,\r\n            basePrice : total.priceWithoutDiscountValue,\r\n        });\r\n    }\r\n\r\n    #refreshModelBasketDiscount(data)\r\n    {\r\n        let total = data.orderPriceTotal;\r\n\r\n        this.store.dispatch('basket/setDiscount', {\r\n            sum: total.basketPriceDiscountDiffValue\r\n        });\r\n    }\r\n\r\n    handleSaveOrderSuccess(data)\r\n    {\r\n        EventEmitter.emit(EventType.order.success);\r\n\r\n        this.store.dispatch('application/setStage', {stage: ApplicationConst.stage.success});\r\n        this.store.dispatch('order/set', {\r\n            id: data.order.id,\r\n            hash: data.hash,\r\n            accountNumber: data.order.accountNumber\r\n        });\r\n\r\n        return this.#refreshModelBasket(data)\r\n            .then(()=>this.#refreshModelProperty(data))\r\n    }\r\n\r\n    #refreshModelProperty(data)\r\n    {\r\n        this.store.commit('property/clearProperty');\r\n\r\n        if(Type.isObject(data) && Type.isArray(data.properties))\r\n        {\r\n            data.properties.forEach((item, index) => {\r\n                let fields = {\r\n                    id : item.id,\r\n                    name : item.name,\r\n                    type : item.type,\r\n                    value : item.value[0],//TODO\r\n                };\r\n\r\n                this.store.dispatch('property/changeItem', {index, fields});\r\n            });\r\n        }\r\n    }\r\n\r\n    #refreshModelBasket(data)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.store.commit('basket/clearBasket');\r\n\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                items.forEach((item, index) => {\r\n                    let fields = this.#prepareBasketItemFields(item);\r\n                    this.#changeBasketItem(fields, index)});\r\n            }\r\n\r\n            if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n            {\r\n                this.#refreshModelBasketTotal(data)\r\n                this.#refreshModelBasketDiscount(data)\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    handleSaveOrderError(errors)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            if (Type.isArrayFilled(errors))\r\n            {\r\n                let general = this.#prepareGeneralErrors(errors)\r\n                let properties = this.#preparePropertyErrors(errors);\r\n\r\n                if(general.length > 0)\r\n                {\r\n                    this.store.commit('application/setErrors', general);\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('application/clearErrors');\r\n                }\r\n\r\n                if(properties.length > 0)\r\n                {\r\n                    this.store.commit('property/setErrors', properties);\r\n\r\n                    this.store.getters['property/getProperty']\r\n                        .forEach((fields, index)=>\r\n                        {\r\n                            if(typeof properties.find(item => item.propertyId === fields.id) !== 'undefined')\r\n                            {\r\n                                fields.validated = PropertyConst.validate.failure\r\n                            }\r\n                            else\r\n                            {\r\n                                if(fields.validated !== PropertyConst.validate.unvalidated)\r\n                                {\r\n                                    fields.validated = PropertyConst.validate.successful\r\n                                }\r\n                            }\r\n                            this.store.dispatch('property/changeItem', {index, fields});\r\n                        })\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('property/clearErrors');\r\n\r\n                    this.store.getters['property/getProperty']\r\n                        .forEach((fields, index)=>\r\n                        {\r\n                            if(fields.validated !== PropertyConst.validate.unvalidated)\r\n                            {\r\n                                fields.validated = PropertyConst.validate.successful\r\n                            }\r\n                            this.store.dispatch('property/changeItem', {index, fields});\r\n                        })\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    #prepareBasketErrors(collection, actions)\r\n    {\r\n        const result = [];\r\n        collection.forEach((fields, index) =>\r\n        {\r\n            let list = this.#getErrorsAction(actions, index);\r\n            if(list !== null)\r\n            {\r\n                result.push({list, index});\r\n            }\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    #preparePropertyErrors(errors)\r\n    {\r\n        const result = [];\r\n\r\n        errors.forEach((fields)=>{\r\n            if(fields.code === 'PROPERTIES')\r\n            {\r\n                if (fields.hasOwnProperty('customData'))\r\n                {\r\n                    let id = parseInt(fields.customData.id)\r\n                    result.push({message: fields.message, propertyId: id});\r\n                }\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    #prepareGeneralErrors(errors)\r\n    {\r\n        const result = [];\r\n\r\n        errors.forEach((fields)=>{\r\n            if(parseInt(fields.code) === 0 || fields.code === 'ORDER')\r\n            {\r\n                result.push({message: fields.message})\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n}"],"names":["BaseRestHandler","params","store","command","result","extra","split","map","element","charAt","toUpperCase","slice","join","error","data","BasketRestHandler","response","pool","Promise","resolve","reject","needFullRecalculation","EventEmitter","emit","EventType","basket","needRefresh","getters","then","isEmpty","refreshAfter","order","success","dispatch","stage","ApplicationConst","id","hash","accountNumber","errors","Type","isArrayFilled","general","properties","length","commit","forEach","fields","index","find","item","propertyId","validated","PropertyConst","validate","failure","unvalidated","successful","isObject","isArray","basketItems","items","collection","orderPriceTotal","actions","list","poolList","get","typeAction","isString","PoolConst","action","quantity","exists","restore","delete","status","LoaderConst","none","removeProduct","offer","restoreProduct","hasOwnProperty","types","Object","values","type","toString","includes","some","parseInt","name","measureText","sum","price","module","productProviderClass","baseSum","sumBase","basePrice","currency","discount","sumDiscountDiff","discountPrice","props","sku","product","catalogProduct","detailPageUrl","picture","frontImage","src","ratio","availableQuantity","total","orderPrice","priceWithoutDiscountValue","basketPriceDiscountDiffValue","value","push","code","customData","message"],"mappings":"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"}