{"version":3,"file":"rest.bundle.js","sources":["../src/base.js","../src/basket.js"],"sourcesContent":["class BaseRestHandler\r\n{\r\n    static create(params = {})\r\n    {\r\n        return new this(params);\r\n    }\r\n\r\n    constructor(params = {})\r\n    {\r\n        if (typeof params.store === 'object' && params.store)\r\n        {\r\n            this.store = params.store;\r\n        }\r\n    }\r\n\r\n    execute(command, result, extra = {})\r\n    {\r\n        command = 'handle'+command.split('.').map(element => {\r\n            return element.charAt(0).toUpperCase() + element.slice(1);\r\n        }).join('');\r\n\r\n        if (result.error)\r\n        {\r\n            if (typeof this[command+'Error'] === 'function')\r\n            {\r\n                return this[command+'Error'](result.error, extra);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (typeof this[command+'Success'] === 'function')\r\n            {\r\n                return this[command+'Success'](result.data, extra);\r\n            }\r\n        }\r\n\r\n        return typeof this[command] === 'function'? this[command](result, extra): null;\r\n    }\r\n}\r\n\r\nexport {BaseRestHandler};","import { BaseRestHandler } from \"./base\";\r\nimport { Type, Event } from 'main.core';\r\nimport { EventType } from 'sale.checkout.const';\r\nimport {\r\n    Application as ApplicationConst,\r\n    Property as PropertyConst,\r\n    Loader as LoaderConst,\r\n    Pool as PoolConst\r\n} from 'sale.checkout.const';\r\n\r\nexport class BasketRestHandler extends BaseRestHandler\r\n{\r\n    handleRecalculateBasket(response, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(response.data.needFullRecalculation === 'Y')\r\n            {\r\n                Event.EventEmitter.emit(EventType.basket.needRefresh, {})\r\n            }\r\n            \r\n            let needRefresh = this.store.getters['basket/getNeedRefresh'];\r\n            \r\n            this.#setModelBasketForAction(response.data, pool)\r\n                .then(() => resolve());\r\n            \r\n            if(needRefresh === 'Y')\r\n            {\r\n                if(pool.isEmpty())\r\n                {\r\n                    this.#setModelBasketByItem(response.data, pool)\r\n                    Event.EventEmitter.emit(EventType.basket.refreshAfter, {})\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    #setModelBasketByItem(data, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>{\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n                \r\n                //refresh\r\n                collection.forEach((fields, index) =>\r\n                {\r\n                    let item = this.#findItemById(fields.id, items);\r\n        \r\n                    if(Type.isObject(item))\r\n                    {\r\n                        let fields = this.#prepareBasketItemFields(item);\r\n            \r\n                        this.#changeBasketItem(fields, index);\r\n                    }\r\n                })\r\n    \r\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n                {\r\n                    this.#refreshModelBasketTotal(data);\r\n                    this.#refreshModelBasketDiscount(data);\r\n                }\r\n            }\r\n    \r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #setModelBasketForAction(data, pool)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                const actions = data.actions;\r\n                const collection = this.store.getters['basket/getBasket'];\r\n                const poolList = pool.get();\r\n\r\n                collection.forEach((fields, index) =>\r\n                {\r\n                    let item;\r\n                    let action = this.#getTypeAction(actions, index);\r\n\r\n                    if(Type.isString(action))\r\n                    {\r\n                        if(action === PoolConst.action.quantity)\r\n                        {\r\n                            item = null; //not refresh\r\n\r\n                            let exists = this.#hasActionInPool(index, PoolConst.action.quantity, poolList);\r\n                            if(exists === false)\r\n                            {\r\n                                item = this.#findItemById(fields.id, items)\r\n                            }\r\n                        }\r\n                        else if(action === PoolConst.action.restore)\r\n                        {\r\n                            item = this.#findItemById(actions[index].fields.id, items)\r\n                        }\r\n                        else if(action === PoolConst.action.delete)\r\n                        {\r\n                            fields.status = LoaderConst.status.none;\r\n                            this.#changeBasketItem(fields, index)\r\n                                .then(()=> Event.EventEmitter.emit(EventType.basket.removeProduct, {index}));\r\n                        }\r\n                        else // for example: offer\r\n                        {\r\n                            // item = this.#findItemById(fields.id, items)\r\n                        }\r\n\r\n                        if(Type.isObject(item))\r\n                        {\r\n                            let fields = this.#prepareBasketItemFields(item);\r\n\r\n                            fields.status = LoaderConst.status.none;\r\n                            this.#changeBasketItem(fields, index);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n                {\r\n                    this.#refreshModelBasketTotal(data);\r\n                    this.#refreshModelBasketDiscount(data);\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    #getTypeAction(actions, index)\r\n    {\r\n        const types = Object.values(PoolConst.action);\r\n\r\n        if(actions.hasOwnProperty(index))\r\n        {\r\n            let type = actions[index].type.toString();\r\n            return types.includes(type) ? type : null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #hasActionInPool(index, type, poolList)\r\n    {\r\n        let item = poolList.hasOwnProperty(index) ? poolList[index]:null;\r\n        if(Type.isArray(item))\r\n        {\r\n            return this.#hasActionInPoolItem(item, type);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    #hasActionInPoolItem(item, type)\r\n    {\r\n        return item.some((item)=>item.hasOwnProperty(type))\r\n    }\r\n\r\n    #findItemById(id, items)\r\n    {\r\n        id = parseInt(id);\r\n\r\n        for (let index in items)\r\n        {\r\n            if (!items.hasOwnProperty(index))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            items[index].id = parseInt(items[index].id);\r\n\r\n            if(items[index].id === id)\r\n            {\r\n                return items[index];\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    #changeBasketItem(fields, index)\r\n    {\r\n        return this.store.dispatch('basket/changeItem', {index, fields});\r\n    }\r\n\r\n    #prepareBasketItemFields(item)\r\n    {\r\n        return {\r\n            id: item.id,\r\n            name: item.name,\r\n            quantity: item.quantity,\r\n            measureText: item.measureText,\r\n            sum: item.sum,\r\n            price: item.price,\r\n            module: item.module,\r\n            productProviderClass: item.productProviderClass,\r\n            baseSum: item.sumBase,\r\n            basePrice: item.basePrice,\r\n            currency: item.currency,\r\n            discount: {\r\n                sum: item.sumDiscountDiff,\r\n                price: item.discountPrice\r\n            },\r\n            props: item.props,\r\n            product: {\r\n                id: item.catalogProduct.id,\r\n                detailPageUrl: item.detailPageUrl,\r\n                picture: Type.isObject(item.catalogProduct.frontImage) ? item.catalogProduct.frontImage.src:null,\r\n                ratio: item.catalogProduct.ratio,\r\n                availableQuantity: item.catalogProduct.availableQuantity\r\n            }\r\n        };\r\n    }\r\n\r\n    #refreshModelBasketTotal(data)\r\n    {\r\n        let total = data.orderPriceTotal;\r\n\r\n        this.store.dispatch('basket/setTotal', {\r\n            price : total.orderPrice,\r\n            basePrice : total.priceWithoutDiscountValue,\r\n        });\r\n    }\r\n\r\n    #refreshModelBasketDiscount(data)\r\n    {\r\n        let total = data.orderPriceTotal;\r\n\r\n        this.store.dispatch('basket/setDiscount', {\r\n            sum: total.basketPriceDiscountDiffValue\r\n        });\r\n    }\r\n\r\n    handleSaveOrderSuccess(data)\r\n    {\r\n        Event.EventEmitter.emit(EventType.order.success);\r\n\r\n        this.store.dispatch('application/setStage', {stage: ApplicationConst.stage.success});\r\n        this.store.dispatch('order/set', {\r\n            id: data.order.id,\r\n            hash: data.hash,\r\n            accountNumber: data.order.accountNumber\r\n        });\r\n\r\n        return this.#refreshModelBasket(data)\r\n            .then(()=>this.#refreshModelProperty(data))\r\n    }\r\n\r\n    #refreshModelProperty(data)\r\n    {\r\n        this.store.commit('property/clearProperty');\r\n\r\n        if(Type.isObject(data) && Type.isArray(data.properties))\r\n        {\r\n            data.properties.forEach((item, index) => {\r\n                let fields = {\r\n                    id : item.id,\r\n                    name : item.name,\r\n                    type : item.type,\r\n                    value : item.value[0],//TODO\r\n                };\r\n\r\n                this.store.dispatch('property/changeItem', {index, fields});\r\n            });\r\n        }\r\n    }\r\n\r\n    #refreshModelBasket(data)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.store.commit('basket/clearBasket');\r\n\r\n            if(Type.isObject(data) && Type.isArray(data.basketItems))\r\n            {\r\n                const items = data.basketItems;\r\n                items.forEach((item, index) => {\r\n                    let fields = this.#prepareBasketItemFields(item);\r\n                    this.#changeBasketItem(fields, index)});\r\n            }\r\n\r\n            if(Type.isObject(data) && Type.isObject(data.orderPriceTotal))\r\n            {\r\n                this.#refreshModelBasketTotal(data)\r\n                this.#refreshModelBasketDiscount(data)\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    handleSaveOrderError(errors)\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            if (Type.isArrayFilled(errors))\r\n            {\r\n                let general = this.#prepareGeneralErrors(errors)\r\n                let properties = this.#preparePropertyErrors(errors);\r\n\r\n                if(general.length > 0)\r\n                {\r\n                    this.store.commit('application/setErrors', general);\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('application/clearErrors');\r\n                }\r\n\r\n                if(properties.length > 0)\r\n                {\r\n                    this.store.commit('property/setErrors', properties);\r\n\r\n                    this.store.getters['property/getProperty']\r\n                        .forEach((fields, index)=>\r\n                        {\r\n                            if(typeof properties.find(item => item.propertyId === fields.id) !== 'undefined')\r\n                            {\r\n                                fields.validated = PropertyConst.validate.failure\r\n                            }\r\n                            else\r\n                            {\r\n                                if(fields.validated !== PropertyConst.validate.unvalidated)\r\n                                {\r\n                                    fields.validated = PropertyConst.validate.successful\r\n                                }\r\n                            }\r\n                            this.store.dispatch('property/changeItem', {index, fields});\r\n                        })\r\n                }\r\n                else\r\n                {\r\n                    this.store.commit('property/clearErrors');\r\n\r\n                    this.store.getters['property/getProperty']\r\n                        .forEach((fields, index)=>\r\n                        {\r\n                            if(fields.validated !== PropertyConst.validate.unvalidated)\r\n                            {\r\n                                fields.validated = PropertyConst.validate.successful\r\n                            }\r\n                            this.store.dispatch('property/changeItem', {index, fields});\r\n                        })\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    #preparePropertyErrors(errors)\r\n    {\r\n        const result = [];\r\n\r\n        errors.forEach((fields)=>{\r\n            if(fields.code === 'PROPERTIES')\r\n            {\r\n                if (fields.hasOwnProperty('customData'))\r\n                {\r\n                    let id = parseInt(fields.customData.id)\r\n                    result.push({message: fields.message, propertyId: id});\r\n                }\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\n    #prepareGeneralErrors(errors)\r\n    {\r\n        const result = [];\r\n\r\n        errors.forEach((fields)=>{\r\n            if(parseInt(fields.code) === 0 || fields.code === 'ORDER')\r\n            {\r\n                result.push({message: fields.message})\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n}"],"names":["BaseRestHandler","params","store","command","result","extra","split","map","element","charAt","toUpperCase","slice","join","error","data","BasketRestHandler","response","pool","Promise","resolve","reject","needFullRecalculation","Event","EventEmitter","emit","EventType","basket","needRefresh","getters","then","isEmpty","refreshAfter","order","success","dispatch","stage","ApplicationConst","id","hash","accountNumber","errors","Type","isArrayFilled","general","properties","length","commit","forEach","fields","index","find","item","propertyId","validated","PropertyConst","validate","failure","unvalidated","successful","isObject","isArray","basketItems","items","collection","orderPriceTotal","actions","poolList","get","action","isString","PoolConst","quantity","exists","restore","delete","status","LoaderConst","none","removeProduct","types","Object","values","hasOwnProperty","type","toString","includes","some","parseInt","name","measureText","sum","price","module","productProviderClass","baseSum","sumBase","basePrice","currency","discount","sumDiscountDiff","discountPrice","props","product","catalogProduct","detailPageUrl","picture","frontImage","src","ratio","availableQuantity","total","orderPrice","priceWithoutDiscountValue","basketPriceDiscountDiffValue","value","code","customData","push","message"],"mappings":"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"}