{"version":3,"file":"controller.bundle.js","sources":["../src/basket.js","../src/application.js"],"sourcesContent":["import { ajax } from 'main.core';\nimport { Pool, Timer, Basket as Lib } from 'sale.checkout.lib'\nimport {\n    Application as ApplicationConst,\n    RestMethod as RestMethodConst,\n    Component as ComponentConst,\n    Loader as LoaderConst,\n    Pool as PoolConst,\n} from 'sale.checkout.const';\n\nexport class Basket\n{\n    constructor()\n    {\n        this.pool = new Pool();\n        this.timer = new Timer();\n        this.running = 'N';\n    }\n    \n    isRunning()\n    {\n        return this.running === 'Y';\n    }\n    \n    setRunningY()\n    {\n        this.running = 'Y'\n    }\n    \n    setRunningN()\n    {\n        this.running = 'N'\n    }\n\n    setStore(store)\n    {\n        this.store = store;\n        return this;\n    }\n\n    setProvider(provider)\n    {\n        this.provider = provider;\n        return this;\n    }\n\n    executeRestAnswer(command, result, extra)\n    {\n        return this.provider.execute(command, result, extra);\n    }\n\n    getItem(index)\n    {\n        return this.store.getters['basket/get'](index);\n    }\n\n    getBasket()\n    {\n        return this.store.getters['basket/getBasket'];\n    }\n\n    changeItem(product)\n    {\n        this.store.dispatch('basket/changeItem', {\n            index: product.index,\n            fields: product.fields\n        });\n    }\n\n    setQuantity(index, quantity)\n    {\n        let fields = this.getItem(index);\n\n        fields.quantity = quantity;\n        fields.baseSum = this.round(fields.basePrice * fields.quantity);\n        fields.sum = this.round(fields.price * fields.quantity);\n        fields.discount.sum = this.round(fields.discount.price * fields.quantity);\n\n        this.pool.add(PoolConst.action.quantity, index, {id: fields.id, value: fields.quantity});\n        this.changeItem({index, fields});\n        this.shelveCommit();\n    }\n\n    removeItem(product)\n    {\n        return this.store.dispatch('basket/removeItem', {\n            index: product.index\n        });\n    }\n\n    round(value, precision = 10)\n    {\n        const factor = Math.pow(10, precision);\n\n        return Math.round(value * factor) / factor;\n    }\n    \n    handlerOrderSuccess()\n    {\n        BX.onCustomEvent('OnBasketChange');\n    }\n\n    handlerRemove(event)\n    {\n        let index = event.getData().index;\n        let fields = this.getItem(index);\n\n        fields.deleted = 'Y';\n        fields.status = LoaderConst.status.wait;\n\n        this.pool.add(PoolConst.action.delete, index, {id: fields.id, fields: {value: 'Y'}});\n        this.changeItem({index, fields});\n        this.shelveCommit();\n    }\n\n    handlerSuccessRemove(event)\n    {\n        let index = event.getData().index;\n\n        this.timer.create(5000, index + '_DELETE', () =>\n            this.removeItem({index})\n                .then(() =>\n                {\n                    if(this.getBasket().length === 0)\n                    {\n                        this.store.dispatch('application/setStage', {stage: ApplicationConst.stage.empty})\n                    }\n                })\n        )\n    }\n\n    handlerRestore(event)\n    {\n        let index = event.getData().index;\n        let fields = this.getItem(index);\n\n        this.timer.clean({\n            index: index + '_DELETE'\n        });\n\n        fields.deleted = 'N';\n        fields.status = LoaderConst.status.wait;\n\n        //todo: send all fields ?\n\n        this.pool.add(PoolConst.action.restore, index, fields);\n        this.changeItem({index, fields});\n        this.shelveCommit();\n    }\n    \n    handlerQuantityPlus(event)\n    {\n        let index = event.getData().index;\n        let fields = this.getItem(index);\n        let quantity = fields.quantity;\n        let ratio = fields.product.ratio;\n        let available = fields.product.availableQuantity;\n\n        quantity = quantity + ratio;\n    \n        if (available > 0 && quantity > available)\n        {\n            quantity = available;\n        }\n        quantity = Lib.toFixed(quantity, ratio, available)\n        \n        if(fields.quantity < quantity)\n        {\n            this.setQuantity(index, quantity)\n        }\n    }\n\n    handlerQuantityMinus(event)\n    {\n        let index = event.getData().index;\n        let fields = this.getItem(index);\n        let quantity = fields.quantity;\n        let ratio = fields.product.ratio;\n        let available = fields.product.availableQuantity;\n    \n        quantity = quantity - ratio;\n    \n        if (ratio > 0 && quantity < ratio)\n        {\n            quantity = ratio;\n        }\n        \n        if (available > 0 && quantity > available)\n        {\n            quantity = available;\n        }\n    \n        quantity = Lib.toFixed(quantity, ratio, available)\n    \n        if(quantity >= ratio)\n        {\n            this.setQuantity(index, quantity)\n        }\n    }\n\n    commit()\n    {\n        return new Promise((resolve, reject) =>\n        {\n            let fields = {};\n\n            if(this.pool.isEmpty() === false)\n            {\n                fields = this.pool.get();\n                this.pool.clean();\n\n                const component = ComponentConst.bitrixSaleOrderCheckout;\n                const cmd = RestMethodConst.saleEntityRecalculateBasket;\n\n                ajax.runComponentAction(\n                    component,\n                    cmd,\n                    {\n                        data: {\n                            actions: fields\n                        },\n                        signedParameters: this.store.getters['application/getSignedParameters']\n                    }\n                )\n                .then((result) => this.executeRestAnswer(cmd, result, this.pool)\n                    .then(() => this.commit()\n                        .then(() => resolve())))\n                .catch()\n            }\n            else\n            {\n                resolve();\n            }\n        });\n    }\n\n    shelveCommit(index = 'BASKET')\n    {\n        if(this.isRunning() === false)\n        {\n            this.timer.create(300, index,\n                () => {\n                    this.setRunningY();\n                    this.commit()\n                        .then(()=>this.setRunningN())\n                }\n            );\n        }\n    }\n\n    getStatus()\n    {\n        return this.store.getters['basket/getStatus'];\n    }\n\n    setStatusWait()\n    {\n        let app = {status: LoaderConst.status.wait};\n        return this.store.dispatch('basket/setStatus', app);\n    }\n\n    setStatusNone()\n    {\n        let app = {status: LoaderConst.status.none};\n        return this.store.dispatch('basket/setStatus', app);\n    }\n    \n    handlerNeedRefreshY()\n    {\n        this.setNeedRefreshY();\n        this.setStatusWait();\n    }\n    \n    handlerNeedRefreshN()\n    {\n        this.setNeedRefreshN();\n        this.setStatusNone();\n    }\n    \n    setNeedRefreshY()\n    {\n        let app = {needRefresh: 'Y'};\n        return this.store.dispatch('basket/setNeedRefresh', app);\n    }\n    \n    setNeedRefreshN()\n    {\n        let app = {needRefresh: 'N'};\n        return this.store.dispatch('basket/setNeedRefresh', app);\n    }\n}","import {Runtime, Event, ajax} from 'main.core';\r\nimport {BasketRestHandler} from 'sale.checkout.provider.rest'\r\nimport {\r\n    Application as ApplicationConst,\r\n    RestMethod as RestMethodConst,\r\n    Component as ComponentConst,\r\n    Consent as ConsentConst,\r\n    Loader as LoaderConst,\r\n    EventType\r\n} from 'sale.checkout.const';\r\n\r\nimport {Timer} from 'sale.checkout.lib';\r\nimport {History} from 'sale.checkout.lib';\r\n\r\nimport {Basket} from \"./basket\";\r\n\r\nexport class Application\r\n{\r\n    constructor(option)\r\n    {\r\n        this.init(option)\r\n            .then(() => this.initProvider())\r\n            .then(() => this.iniController())\r\n            .then(() => this.subscribeToEvents())\r\n            .then(() => this.subscribeToStoreChanges())\r\n    }\r\n\r\n    init(option)\r\n    {\r\n        this.store = option.store;\r\n        this.timer = new Timer();\r\n        return new Promise((resolve, reject) => resolve());\r\n    }\r\n\r\n    initProvider()\r\n    {\r\n        this.provider = BasketRestHandler.create({store: this.store})\r\n        return new Promise((resolve, reject) => resolve());\r\n    }\r\n\r\n    iniController()\r\n    {\r\n        this.basket = new Basket().setStore(this.store).setProvider(this.provider);\r\n        return new Promise((resolve, reject) => resolve());\r\n    }\r\n\r\n    executeRestAnswer(command, result, extra)\r\n    {\r\n        return this.provider.execute(command, result, extra);\r\n    }\r\n\r\n    subscribeToEvents()\r\n    {\r\n        Event.EventEmitter.subscribe(EventType.order.success, (e)=>this.basket.handlerOrderSuccess(e));\r\n        \r\n        // Event.EventEmitter.subscribe(EventType.basket.removeProduct, Runtime.debounce((e)=>this.basket.handlerSuccessRemove(e), 500, this));\r\n        Event.EventEmitter.subscribe(EventType.basket.buttonRemoveProduct, Runtime.debounce((e)=>this.basket.handlerRemove(e), 500, this));\r\n\r\n        Event.EventEmitter.subscribe(EventType.basket.buttonPlusProduct, (e) => this.basket.handlerQuantityPlus(e));\r\n        Event.EventEmitter.subscribe(EventType.basket.buttonMinusProduct, (e) => this.basket.handlerQuantityMinus(e));\r\n        Event.EventEmitter.subscribe(EventType.basket.buttonRestoreProduct, Runtime.debounce((e) => this.basket.handlerRestore(e), 500, this));\r\n        Event.EventEmitter.subscribe(EventType.basket.needRefresh, (e) => this.basket.handlerNeedRefreshY(e));\r\n        Event.EventEmitter.subscribe(EventType.basket.refreshAfter, (e) => this.basket.handlerNeedRefreshN(e));\r\n        \r\n        // Event.EventEmitter.subscribe(EventType.property.validate,           (e) => this.handlerValidateProperty(e));\r\n\r\n        Event.EventEmitter.subscribe(EventType.consent.refused, () => this.handlerConsentRefused());\r\n        Event.EventEmitter.subscribe(EventType.consent.accepted, () => this.handlerConsentAccepted());\r\n\r\n        // Event.EventEmitter.subscribe(EventType.application.none, () => this.handlerApplicationStatusNone());\r\n        // Event.EventEmitter.subscribe(EventType.application.wait, () => this.handlerApplicationStatusWait());\r\n\r\n        Event.EventEmitter.subscribe(EventType.element.buttonCheckout, Runtime.debounce(() => this.handlerCheckout(), 1000, this));\r\n        Event.EventEmitter.subscribe(EventType.element.buttonShipping, Runtime.debounce(() => this.handlerShipping(), 1000, this));\r\n\r\n        Event.EventEmitter.subscribe(EventType.paysystem.beforeInitList, ()=>this.paySystemSetStatusWait());\r\n        Event.EventEmitter.subscribe(EventType.paysystem.afterInitList, ()=>this.paySystemSetStatusNone());\r\n\r\n        return new Promise((resolve, reject) => resolve());\r\n    }\r\n\r\n    subscribeToStoreChanges()\r\n    {\r\n        // this.store.subscribe((mutation, state) => {\r\n        //     const { payload, type } = mutation;\r\n        //     if (type === 'basket/setNeedRefresh')\r\n        //     {\r\n        //     \talert('@@');\r\n        //     \tthis.getData();\r\n        //     }\r\n        // });\r\n\r\n        return new Promise((resolve, reject) => resolve());\r\n    }\r\n    \r\n    paySystemSetStatusWait()\r\n    {\r\n        let paySystem = { status: LoaderConst.status.wait};\r\n        return this.store.dispatch('pay-system/setStatus', paySystem);\r\n    }\r\n\r\n    paySystemSetStatusNone()\r\n    {\r\n        let paySystem = { status: LoaderConst.status.none};\r\n        return this.store.dispatch('pay-system/setStatus', paySystem);\r\n    }\r\n\r\n    appSetStatusWait()\r\n    {\r\n        let app = { status: LoaderConst.status.wait};\r\n        return this.store.dispatch('application/setStatus', app);\r\n    }\r\n\r\n    appSetStatusNone()\r\n    {\r\n        let app = { status: LoaderConst.status.none};\r\n        return this.store.dispatch('application/setStatus', app);\r\n    }\r\n\r\n    handlerConsentAccepted()\r\n    {\r\n        this.store.dispatch('consent/setStatus', ConsentConst.status.accepted);\r\n    }\r\n\r\n    handlerConsentRefused()\r\n    {\r\n        this.store.dispatch('consent/setStatus', ConsentConst.status.refused);\r\n    }\r\n\r\n    handlerCheckout()\r\n    {\r\n        BX.onCustomEvent(ConsentConst.validate.submit, []);\r\n\r\n        const consent = this.store.getters['consent/get'];\r\n        const consentStatus = this.store.getters['consent/getStatus'];\r\n        const allowed = consent.id > 0 ?  consentStatus === ConsentConst.status.accepted:true;\r\n\r\n        if(allowed)\r\n        {\r\n            // this.propertiesValidate();\r\n            // this.propertiesIsValid() ? alert('propsSuccess'):alert('propsError')\r\n\r\n            this.appSetStatusWait();\r\n\r\n            this.saveOrder()\r\n                .then(() => {\r\n                        this.appSetStatusNone()\r\n                            .then(()=>\r\n                            {\r\n                                let order = this.store.getters['order/getOrder'];\r\n\r\n                                if(order.id>0)\r\n                                {\r\n                                    const url = History.pushState(\r\n                                        this.store.getters['application/getPathLocation'],\r\n                                        {\r\n                                            accountNumber: order.accountNumber,\r\n                                            access: order.hash\r\n                                        })\r\n\r\n                                    this.store.dispatch('application/setPathLocation', url);\r\n                                }\r\n                            })\r\n                    }\r\n                )\r\n                .catch(() => this.appSetStatusNone())\r\n        }\r\n    }\r\n\r\n    handlerShipping()\r\n    {\r\n        this.store.dispatch('application/setStage', {stage: ApplicationConst.stage.view});\r\n        // todo\r\n        delete BX.UserConsent;\r\n    }\r\n\r\n    saveOrder()\r\n    {\r\n        const component = ComponentConst.bitrixSaleOrderCheckout;\r\n        const cmd = RestMethodConst.saleEntitySaveOrder;\r\n        return ajax.runComponentAction(\r\n            component,\r\n            cmd,\r\n            {\r\n                data: {\r\n                    fields: {\r\n                        siteId: this.store.getters['application/getSiteId'],\r\n                        personTypeId: this.store.getters['application/getPersonTypeId'],\r\n                        tradingPlatformId: this.store.getters['application/getTradingPlatformId'],\r\n                        properties: this.preparePropertyFields(\r\n                            this.getPropertyList()\r\n                        ),\r\n                    }\r\n                },\r\n                signedParameters: this.store.getters['application/getSignedParameters']\r\n            }\r\n        )\r\n            .then((result) => this.executeRestAnswer(cmd, result))\r\n            .catch((result) => this.executeRestAnswer(cmd, {error: result.errors}));\r\n    }\r\n\r\n    getPropertyList()\r\n    {\r\n        const result = [];\r\n        let list = this.store.getters['property/getProperty'];\r\n        try\r\n        {\r\n            for (let key in list)\r\n            {\r\n                if (!list.hasOwnProperty(key))\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                result[list[key].id] = list[key];\r\n            }\r\n        }\r\n        catch (e) {}\r\n\r\n        return result;\r\n    }\r\n\r\n    preparePropertyFields(list)\r\n    {\r\n        let fields = {};\r\n        list.forEach((property, inx)=>\r\n        {\r\n            fields[inx] = property.value\r\n        })\r\n        return fields;\r\n    }\r\n}"],"names":["Basket","pool","Pool","timer","Timer","running","store","provider","command","result","extra","execute","index","getters","product","dispatch","fields","quantity","getItem","baseSum","round","basePrice","sum","price","discount","add","PoolConst","action","id","value","changeItem","shelveCommit","precision","factor","Math","pow","BX","onCustomEvent","event","getData","deleted","status","LoaderConst","wait","delete","create","removeItem","then","getBasket","length","stage","ApplicationConst","empty","clean","restore","ratio","available","availableQuantity","Lib","toFixed","setQuantity","Promise","resolve","reject","isEmpty","get","component","ComponentConst","bitrixSaleOrderCheckout","cmd","RestMethodConst","saleEntityRecalculateBasket","ajax","runComponentAction","data","actions","signedParameters","executeRestAnswer","commit","catch","isRunning","setRunningY","setRunningN","app","none","setNeedRefreshY","setStatusWait","setNeedRefreshN","setStatusNone","needRefresh","Application","option","init","initProvider","iniController","subscribeToEvents","subscribeToStoreChanges","BasketRestHandler","basket","setStore","setProvider","Event","EventEmitter","subscribe","EventType","order","success","e","handlerOrderSuccess","buttonRemoveProduct","Runtime","debounce","handlerRemove","buttonPlusProduct","handlerQuantityPlus","buttonMinusProduct","handlerQuantityMinus","buttonRestoreProduct","handlerRestore","handlerNeedRefreshY","refreshAfter","handlerNeedRefreshN","consent","refused","handlerConsentRefused","accepted","handlerConsentAccepted","element","buttonCheckout","handlerCheckout","buttonShipping","handlerShipping","paysystem","beforeInitList","paySystemSetStatusWait","afterInitList","paySystemSetStatusNone","paySystem","ConsentConst","validate","submit","consentStatus","allowed","appSetStatusWait","saveOrder","appSetStatusNone","url","History","pushState","accountNumber","access","hash","view","UserConsent","saleEntitySaveOrder","siteId","personTypeId","tradingPlatformId","properties","preparePropertyFields","getPropertyList","error","errors","list","key","hasOwnProperty","forEach","property","inx"],"mappings":"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"}