BX.namespace("BX.ui");BX.ui.itemTree=function(e,t){this.parentConstruct(BX.ui.itemTree,e);BX.merge(this,{opts:{controlCheckboxes:true,useDynamicLoading:false},vars:{cache:{ceilings:{},lastPage:{},loadedFirstTime:{}}},ctrls:{},sys:{code:"item-tree"}});this.handleInitStack(t,BX.ui.itemTree,e)};BX.extend(BX.ui.itemTree,BX.ui.networkIOWidget);BX.merge(BX.ui.itemTree.prototype,{init:function(){var e=this;this.vars.loader={show:function(t){e.setCSSState("loading",t.controls.children)},hide:function(t){e.dropCSSState("loading",t.controls.children)}};this.pushFuncStack("bindEvents",BX.ui.itemTree)},bindEvents:function(){var e=this.ctrls,t=this,n=this.sys.code;BX.bindDelegate(e.scope,"click",{className:this.getControlClassName("expander")},function(){var e=BX.findParent(this,{className:t.getControlClassName("node")});if(BX.type.isElementNode(e)){t.toggleBundle(BX.data(e,"node-id"),{expander:this,node:e})}else throw new Error("Cannot find node for expander")});BX.bindDelegate(e.scope,"click",{className:this.getControlClassName("load-more")},function(){var e=BX.findParent(this,{className:t.getControlClassName("node")});if(BX.type.isElementNode(e)){t.loadMore(BX.data(e,"node-id"),{loadMore:this,node:e})}else throw new Error("Cannot find node for load-more")});BX.bindDelegate(e.scope,"click",{className:this.getControlClassName("checkbox")},function(e){t.toggleCheckbox(this)});this.bindEvent("toggle-bundle-before",this.whenExpanderToggle)},loadMore:function(e,t){var n=this,o=this.opts,i=this.vars;t.children=n.getControl("children",true,t.node);this.dropCSSState("error",t.children);this.dropCSSState("can-load-more",t.children);if(o.useDynamicLoading&&BX.type.isNotEmptyString(o.source)&&this.getCanLoadMore(e)){this.downloadItems(e,t)}},toggleBundle:function(e,t){var n=this,o=this.opts,i=this.vars,r=this.sys.code;if(!BX.type.isPlainObject(t))t={};if(!BX.type.isElementNode(t.node)){t.node=this.getControl('[data-node-id="'+e+'"]');if(!BX.type.isElementNode(t.node))throw new Error("Cannot find node for id "+e)}if(!BX.type.isElementNode(t.expander)){t.expander=this.getControl("expander",false,t.node);if(!BX.type.isElementNode(t.expander))throw new Error("Cannot find expander for node")}var a=false;var s="bx-ui-"+r+"-state";var d=BX.data(t.expander,s);if(typeof d!="undefined")a=d;BX.data(t.expander,s,!a);t.checkbox=n.getControl("checkbox",true,t.node);t.children=n.getControl("children",true,t.node);var c=[!a,t];this.fireEvent("toggle-bundle-before",c);var l=function(){n.fireEvent("toggle-bundle-after",c)};if(!a&&o.useDynamicLoading&&BX.data(t.node,"is-parent")=="1"&&BX.type.isNotEmptyString(o.source)&&!i.cache.loadedFirstTime[e]&&this.getCanLoadMore(e)){this.dropCSSState("error",t.children);this.dropCSSState("can-load-more",t.children);this.downloadItems(e,t,l)}else l()},downloadItems:function(e,t,n){var o=this,i=this.opts,r=this.vars;o.downloadBundle({request:{ID:e},callbacks:{onLoad:function(a){if(a.items.length==0)r.cache.ceilings[e]=r.cache.lastPage[e];else{if(typeof a.total=="number"&&i.pageSize>0){r.cache.ceilings[e]=Math.ceil(a.total/i.pageSize)}var s=o.getControl("item-pool",false,t.children);for(var d in a.items){if(a.items.hasOwnProperty(d)){var c=o.whenRenderVariant(a.items[d])[0];BX.append(c,s)}}r.cache.lastPage[e]++;if(o.getCanLoadMore(e))this.setCSSState("can-load-more",t.children)}r.cache.loadedFirstTime[e]=true;if(BX.type.isFunction(n))n()}},options:{controls:t,nodeId:e}})},toggleCheckbox:function(e){var t=this.opts,n=this,o=this.sys.code;if(!t.controlCheckboxes)return;if(!("checked"in e))return;var i=BX.findParent(e,{className:"bx-ui-"+o+"-node"});if(typeof i=="undefined")throw new Error("Cannot find parent node for checkbox");var r=e.checked;var a=i.querySelectorAll('input[type="checkbox"]');if(a!=null){for(var s=0;s<a.length;s++)a[s].checked=r}},getNavParams:function(e){var t=this.vars.cache;if(typeof t.lastPage[e.nodeId]=="undefined")t.lastPage[e.nodeId]=0;return this.opts.paginatedRequest?{PAGE_SIZE:this.opts.pageSize,PAGE:t.lastPage[e.nodeId]}:{}},showError:function(e){this.setCSSState("error",e.options.controls.children);this.getControl("error-desc",false,e.options.controls.node).innerHTML=BX.util.htmlspecialchars(e.errors.join(", "))},manageCeiling:function(e,t){var n=this.vars;if(typeof t=="undefined"){if(typeof n.cache.ceilings[e]=="undefined")return-1;return n.cache.ceilings[e]}n.cache.ceilings[e]=t},getCanLoadMore:function(e){var t=this.vars;if(typeof t.cache.ceilings[e]=="undefined")return true;return t.cache.ceilings[e]>=0&&t.cache.lastPage[e]<t.cache.ceilings[e]},whenRenderVariant:function(e){return this.createNodesByTemplate("node",e,true)},whenExpanderToggle:function(e,t){BX[e?"show":"hide"](t.children)}});
//# sourceMappingURL=core_ui_itemtree.map.js