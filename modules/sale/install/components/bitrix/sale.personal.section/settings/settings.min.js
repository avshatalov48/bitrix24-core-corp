function CustomSettingsEdit(t){var a=JSON.parse(t.data);var e={element:t.oCont,options:a};if(t.oInput.value!=""&&t.oInput.value!="[]"){this.inputData=JSON.parse(t.oInput.value);this.inputData.forEach(function(t){CustomSettingsEdit.prototype.addInputBlock(e,t)},this)}else{CustomSettingsEdit.prototype.addInputBlock(e)}addPageParams=t.oCont.appendChild(BX.create("input",{props:{value:"+",type:"button",className:"addPageParams"}}));BX.bind(addPageParams,"click",function(){CustomSettingsEdit.prototype.addInputBlock(e);t.oCont.appendChild(addPageParams)})}CustomSettingsEdit.prototype.addInputBlock=function(t,a){var e="";var s="";var p="fa-users";var n=t.element.querySelector("input[type='hidden']");if(typeof a!=="undefined"){s=a[0];e=a[1];if(typeof a[2]!=="undefined"){p=a[2]}}var i=t.element.appendChild(BX.create("div",{props:{className:"sps-params-input-block"},html:["<div>","<label>"+t.options["labelPath"]+"</label>",'<input type="text" class="sps-params-input-values" value="'+s+'">',"</div>","<div >","<label>"+t.options["labelName"]+"</label>",'<input type="text" class="sps-params-input-values" value="'+e+'">',"</div>","<div >","<label>"+t.options["labelIcon"]+"</label>",'<input type="text" class="sps-params-input-values" value="'+p+'">',"</div>","<br>"].join("")}));BX.bindDelegate(i,"change",{"class":"sps-params-input-values"},BX.proxy(function(){var a=[];var e=t.element.getElementsByClassName("sps-params-input-block");Array.prototype.forEach.call(e,function(t){inputs=t.getElementsByClassName("sps-params-input-values");if(inputs[0].value!==""||inputs[1].value!==""){a.push([inputs[0].value,inputs[1].value,inputs[2].value])}});n.value=JSON.stringify(a)},this))};
//# sourceMappingURL=settings.map.js